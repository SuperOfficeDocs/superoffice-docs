### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.ServicePreferenceMappings
  commentId: T:SuperOffice.Data.ServicePreferenceMappings
  id: ServicePreferenceMappings
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.ServicePreferenceMappings.MappedLevel(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  - SuperOffice.Data.ServicePreferenceMappings.MappedSections
  - SuperOffice.Data.ServicePreferenceMappings.Mappings
  - SuperOffice.Data.ServicePreferenceMappings.PasswordMask
  - SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine(System.String[])
  - SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine(System.String)
  - SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder(System.String,System.String)
  - SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder(System.String,System.String,System.String)
  - SuperOffice.Data.ServicePreferenceMappings.SmtpParser(System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Boolean)
  langs:
  - csharp
  - vb
  name: ServicePreferenceMappings
  nameWithType: ServicePreferenceMappings
  fullName: SuperOffice.Data.ServicePreferenceMappings
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nThe actual mapping definitions between the &quot;pseudo&quot; preferences an records in config, registry and possibly other tables\n"
  syntax:
    content: >-
      [SoInject("Process")]

      public class ServicePreferenceMappings
    content.vb: >-
      <SoInject("Process")>

      Public Class ServicePreferenceMappings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.ServicePreferenceMappings.EnumUtil.MapEnums``2
  - SuperOffice.Data.ServicePreferenceMappings.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Process
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.ServicePreferenceMappings.PasswordMask
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PasswordMask
  id: PasswordMask
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: PasswordMask
  nameWithType: ServicePreferenceMappings.PasswordMask
  fullName: SuperOffice.Data.ServicePreferenceMappings.PasswordMask
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public const string PasswordMask = "•••••"
    return:
      type: System.String
    content.vb: Public Const PasswordMask As String = "•••••"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder(System.String,System.String)
  commentId: M:SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder(System.String,System.String)
  id: SmtpDecoder(System.String,System.String)
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: SmtpDecoder(String, String)
  nameWithType: ServicePreferenceMappings.SmtpDecoder(String, String)
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder(System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nDecode the complex smtp setup into separate components\n"
  syntax:
    content: public static string SmtpDecoder(string key, string rawValue)
    parameters:
    - id: key
      type: System.String
    - id: rawValue
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SmtpDecoder(key As String, rawValue As String) As String
  overload: SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder(System.String,System.String,System.String)
  commentId: M:SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder(System.String,System.String,System.String)
  id: SmtpEncoder(System.String,System.String,System.String)
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: SmtpEncoder(String, String, String)
  nameWithType: ServicePreferenceMappings.SmtpEncoder(String, String, String)
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder(System.String, System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nUpdate the complex smtp setup preference\n"
  syntax:
    content: public static string SmtpEncoder(string key, string currentField, string newPreference)
    parameters:
    - id: key
      type: System.String
    - id: currentField
      type: System.String
    - id: newPreference
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SmtpEncoder(key As String, currentField As String, newPreference As String) As String
  overload: SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.ServicePreferenceMappings.SmtpParser(System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Boolean)
  commentId: M:SuperOffice.Data.ServicePreferenceMappings.SmtpParser(System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Boolean)
  id: SmtpParser(System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.Boolean)
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: SmtpParser(String, out String, out String, out String, out String, out String, out String, Boolean)
  nameWithType: ServicePreferenceMappings.SmtpParser(String, out String, out String, out String, out String, out String, out String, Boolean)
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmtpParser(System.String, out System.String, out System.String, out System.String, out System.String, out System.String, out System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nParse the complex smtp preference - there&apos;s a test for this in Test.CoreServices.NoDb\n"
  syntax:
    content: public static void SmtpParser(string rawValue, out string protocol, out string user, out string port, out string password, out string host, out string usessl, bool maskPassword = true)
    parameters:
    - id: rawValue
      type: System.String
    - id: protocol
      type: System.String
    - id: user
      type: System.String
    - id: port
      type: System.String
    - id: password
      type: System.String
    - id: host
      type: System.String
    - id: usessl
      type: System.String
    - id: maskPassword
      type: System.Boolean
    content.vb: Public Shared Sub SmtpParser(rawValue As String, ByRef protocol As String, ByRef user As String, ByRef port As String, ByRef password As String, ByRef host As String, ByRef usessl As String, maskPassword As Boolean = True)
  overload: SuperOffice.Data.ServicePreferenceMappings.SmtpParser*
  nameWithType.vb: ServicePreferenceMappings.SmtpParser(String, ByRef String, ByRef String, ByRef String, ByRef String, ByRef String, ByRef String, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Data.ServicePreferenceMappings.SmtpParser(System.String, ByRef System.String, ByRef System.String, ByRef System.String, ByRef System.String, ByRef System.String, ByRef System.String, System.Boolean)
  name.vb: SmtpParser(String, ByRef String, ByRef String, ByRef String, ByRef String, ByRef String, ByRef String, Boolean)
- uid: SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine(System.String)
  commentId: M:SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine(System.String)
  id: SmsPluginSplitAndTrimLine(System.String)
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: SmsPluginSplitAndTrimLine(String)
  nameWithType: ServicePreferenceMappings.SmsPluginSplitAndTrimLine(String)
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public static string[] SmsPluginSplitAndTrimLine(string line)
    parameters:
    - id: line
      type: System.String
    return:
      type: System.String[]
    content.vb: Public Shared Function SmsPluginSplitAndTrimLine(line As String) As String()
  overload: SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine(System.String[])
  commentId: M:SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine(System.String[])
  id: SmsPluginReassembleLine(System.String[])
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: SmsPluginReassembleLine(String[])
  nameWithType: ServicePreferenceMappings.SmsPluginReassembleLine(String[])
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public static string SmsPluginReassembleLine(string[] kvp)
    parameters:
    - id: kvp
      type: System.String[]
    return:
      type: System.String
    content.vb: Public Shared Function SmsPluginReassembleLine(kvp As String()) As String
  overload: SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine*
  nameWithType.vb: ServicePreferenceMappings.SmsPluginReassembleLine(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine(System.String())
  name.vb: SmsPluginReassembleLine(String())
- uid: SuperOffice.Data.ServicePreferenceMappings.MappedLevel(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  commentId: M:SuperOffice.Data.ServicePreferenceMappings.MappedLevel(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  id: MappedLevel(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: MappedLevel(ServicePreferenceMappings.PreferenceMappingType)
  nameWithType: ServicePreferenceMappings.MappedLevel(ServicePreferenceMappings.PreferenceMappingType)
  fullName: SuperOffice.Data.ServicePreferenceMappings.MappedLevel(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public PreferenceLevel MappedLevel(ServicePreferenceMappings.PreferenceMappingType mappingType)
    parameters:
    - id: mappingType
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
    return:
      type: SuperOffice.Data.PreferenceLevel
    content.vb: Public Function MappedLevel(mappingType As ServicePreferenceMappings.PreferenceMappingType) As PreferenceLevel
  overload: SuperOffice.Data.ServicePreferenceMappings.MappedLevel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.ServicePreferenceMappings.Mappings
  commentId: P:SuperOffice.Data.ServicePreferenceMappings.Mappings
  id: Mappings
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: Mappings
  nameWithType: ServicePreferenceMappings.Mappings
  fullName: SuperOffice.Data.ServicePreferenceMappings.Mappings
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public Dictionary<(string section, string key), ServicePreferenceMappings.PreferenceMappingInfo> Mappings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.ValueTuple{System.String,System.String},SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo}
    content.vb: Public ReadOnly Property Mappings As Dictionary(Of(section As String, key As String), ServicePreferenceMappings.PreferenceMappingInfo)
  overload: SuperOffice.Data.ServicePreferenceMappings.Mappings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Data.ServicePreferenceMappings.MappedSections
  commentId: P:SuperOffice.Data.ServicePreferenceMappings.MappedSections
  id: MappedSections
  parent: SuperOffice.Data.ServicePreferenceMappings
  langs:
  - csharp
  - vb
  name: MappedSections
  nameWithType: ServicePreferenceMappings.MappedSections
  fullName: SuperOffice.Data.ServicePreferenceMappings.MappedSections
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public HashSet<string> MappedSections { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property MappedSections As HashSet(Of String)
  overload: SuperOffice.Data.ServicePreferenceMappings.MappedSections*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ServicePreferenceMappings.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ServicePreferenceMappings, To>()
  nameWithType: EnumUtil.MapEnums<ServicePreferenceMappings, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.ServicePreferenceMappings, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ServicePreferenceMappings, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings, To)()
  name.vb: MapEnums(Of ServicePreferenceMappings, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ServicePreferenceMappings, To>
    nameWithType: EnumUtil.MapEnums<ServicePreferenceMappings, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.ServicePreferenceMappings, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ServicePreferenceMappings, To)
    nameWithType: EnumUtil.MapEnums(Of ServicePreferenceMappings, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ServicePreferenceMappings.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ServicePreferenceMappings, To>()
  nameWithType: Converters.MapEnums<ServicePreferenceMappings, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ServicePreferenceMappings, To>()
  nameWithType.vb: Converters.MapEnums(Of ServicePreferenceMappings, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings, To)()
  name.vb: MapEnums(Of ServicePreferenceMappings, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ServicePreferenceMappings, To>
    nameWithType: Converters.MapEnums<ServicePreferenceMappings, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ServicePreferenceMappings, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ServicePreferenceMappings, To)
    nameWithType: Converters.MapEnums(Of ServicePreferenceMappings, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder
  isExternal: true
  name: SmtpDecoder
  nameWithType: ServicePreferenceMappings.SmtpDecoder
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmtpDecoder
- uid: SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder
  isExternal: true
  name: SmtpEncoder
  nameWithType: ServicePreferenceMappings.SmtpEncoder
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmtpEncoder
- uid: SuperOffice.Data.ServicePreferenceMappings.SmtpParser*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.SmtpParser
  isExternal: true
  name: SmtpParser
  nameWithType: ServicePreferenceMappings.SmtpParser
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmtpParser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine
  isExternal: true
  name: SmsPluginSplitAndTrimLine
  nameWithType: ServicePreferenceMappings.SmsPluginSplitAndTrimLine
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmsPluginSplitAndTrimLine
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine
  isExternal: true
  name: SmsPluginReassembleLine
  nameWithType: ServicePreferenceMappings.SmsPluginReassembleLine
  fullName: SuperOffice.Data.ServicePreferenceMappings.SmsPluginReassembleLine
- uid: SuperOffice.Data.ServicePreferenceMappings.MappedLevel*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.MappedLevel
  isExternal: true
  name: MappedLevel
  nameWithType: ServicePreferenceMappings.MappedLevel
  fullName: SuperOffice.Data.ServicePreferenceMappings.MappedLevel
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  commentId: T:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  parent: SuperOffice.Data
  isExternal: true
  name: ServicePreferenceMappings.PreferenceMappingType
  nameWithType: ServicePreferenceMappings.PreferenceMappingType
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
- uid: SuperOffice.Data.PreferenceLevel
  commentId: T:SuperOffice.Data.PreferenceLevel
  parent: SuperOffice.Data
  isExternal: true
  name: PreferenceLevel
  nameWithType: PreferenceLevel
  fullName: SuperOffice.Data.PreferenceLevel
- uid: SuperOffice.Data.ServicePreferenceMappings.Mappings*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.Mappings
  isExternal: true
  name: Mappings
  nameWithType: ServicePreferenceMappings.Mappings
  fullName: SuperOffice.Data.ServicePreferenceMappings.Mappings
- uid: System.Collections.Generic.Dictionary{System.ValueTuple{System.String,System.String},SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.ValueTuple{System.String,System.String},SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<ValueTuple<String, String>, ServicePreferenceMappings.PreferenceMappingInfo>
  nameWithType: Dictionary<ValueTuple<String, String>, ServicePreferenceMappings.PreferenceMappingInfo>
  fullName: System.Collections.Generic.Dictionary<System.ValueTuple<System.String, System.String>, SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo>
  nameWithType.vb: Dictionary(Of ValueTuple(Of String, String), ServicePreferenceMappings.PreferenceMappingInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.ValueTuple(Of System.String, System.String), SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo)
  name.vb: Dictionary(Of ValueTuple(Of String, String), ServicePreferenceMappings.PreferenceMappingInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo
    name: ServicePreferenceMappings.PreferenceMappingInfo
    nameWithType: ServicePreferenceMappings.PreferenceMappingInfo
    fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo
    name: ServicePreferenceMappings.PreferenceMappingInfo
    nameWithType: ServicePreferenceMappings.PreferenceMappingInfo
    fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data.ServicePreferenceMappings.MappedSections*
  commentId: Overload:SuperOffice.Data.ServicePreferenceMappings.MappedSections
  isExternal: true
  name: MappedSections
  nameWithType: ServicePreferenceMappings.MappedSections
  fullName: SuperOffice.Data.ServicePreferenceMappings.MappedSections
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: '!:System.Collections.Generic.HashSet{System.String}'
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: System.Collections.Generic.HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: System.Collections.Generic.HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
