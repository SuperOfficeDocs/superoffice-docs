### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType
  commentId: T:SuperOffice.CRM.Administration.SoUser.PermissionType
  id: SoUser.PermissionType
  parent: SuperOffice.CRM.Administration
  children:
  - SuperOffice.CRM.Administration.SoUser.PermissionType.Administrator
  - SuperOffice.CRM.Administration.SoUser.PermissionType.All
  - SuperOffice.CRM.Administration.SoUser.PermissionType.AllAdministrators
  - SuperOffice.CRM.Administration.SoUser.PermissionType.ManageExternal
  - SuperOffice.CRM.Administration.SoUser.PermissionType.Own
  - SuperOffice.CRM.Administration.SoUser.PermissionType.OwnNotPerson
  - SuperOffice.CRM.Administration.SoUser.PermissionType.OwnPerson
  - SuperOffice.CRM.Administration.SoUser.PermissionType.System
  - SuperOffice.CRM.Administration.SoUser.PermissionType.value__
  langs:
  - csharp
  - vb
  name: SoUser.PermissionType
  nameWithType: SoUser.PermissionType
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nType of permission required for dealing with a person&apos;s license information\n"
  syntax:
    content: 'public sealed class PermissionType : Enum'
    content.vb: >-
      Public NotInheritable Class PermissionType
          Inherits

           Enum
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Administration.SoUser.PermissionType.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Administration.SoUser.PermissionType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.value__
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.value__
  id: value__
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: SoUser.PermissionType.value__
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.value__
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.OwnNotPerson
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.OwnNotPerson
  id: OwnNotPerson
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: OwnNotPerson
  nameWithType: SoUser.PermissionType.OwnNotPerson
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.OwnNotPerson
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nThe currently logged on person can manage for himself\n"
  syntax:
    content: public const SoUser.PermissionType OwnNotPerson
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const OwnNotPerson As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.OwnPerson
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.OwnPerson
  id: OwnPerson
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: OwnPerson
  nameWithType: SoUser.PermissionType.OwnPerson
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.OwnPerson
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nThe currently logged on person can manage for himself if he is a named user\n"
  syntax:
    content: public const SoUser.PermissionType OwnPerson
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const OwnPerson As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.Administrator
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.Administrator
  id: Administrator
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: Administrator
  nameWithType: SoUser.PermissionType.Administrator
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.Administrator
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nAdministrators can manage on behalf of others\n"
  syntax:
    content: public const SoUser.PermissionType Administrator
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const Administrator As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.System
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.System
  id: System
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: System
  nameWithType: SoUser.PermissionType.System
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.System
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nSystem users can manage on behalf of others.\n"
  syntax:
    content: public const SoUser.PermissionType System
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const System As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.ManageExternal
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.ManageExternal
  id: ManageExternal
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: ManageExternal
  nameWithType: SoUser.PermissionType.ManageExternal
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.ManageExternal
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nThe user can manage external users\n"
  syntax:
    content: public const SoUser.PermissionType ManageExternal
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const ManageExternal As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.Own
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.Own
  id: Own
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: Own
  nameWithType: SoUser.PermissionType.Own
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.Own
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nEverybody can manage on behalf of himself\n"
  syntax:
    content: public const SoUser.PermissionType Own
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const Own As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.AllAdministrators
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.AllAdministrators
  id: AllAdministrators
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: AllAdministrators
  nameWithType: SoUser.PermissionType.AllAdministrators
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.AllAdministrators
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nAll administrators (Administrator and System)\n"
  syntax:
    content: public const SoUser.PermissionType AllAdministrators
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const AllAdministrators As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.All
  commentId: F:SuperOffice.CRM.Administration.SoUser.PermissionType.All
  id: All
  parent: SuperOffice.CRM.Administration.SoUser.PermissionType
  langs:
  - csharp
  - vb
  name: All
  nameWithType: SoUser.PermissionType.All
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType.All
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: "\nEverybody can manage on behalf of himself and all administrators (Administrator and System) can manage onbehalf of others\n"
  syntax:
    content: public const SoUser.PermissionType All
    return:
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
    content.vb: Public Const All As SoUser.PermissionType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.CRM.Administration
  commentId: N:SuperOffice.CRM.Administration
  isExternal: true
  name: SuperOffice.CRM.Administration
  nameWithType: SuperOffice.CRM.Administration
  fullName: SuperOffice.CRM.Administration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoUser.PermissionType, To>()
  nameWithType: EnumUtil.MapEnums<SoUser.PermissionType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Administration.SoUser.PermissionType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoUser.PermissionType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Administration.SoUser.PermissionType, To)()
  name.vb: MapEnums(Of SoUser.PermissionType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoUser.PermissionType, To>
    nameWithType: EnumUtil.MapEnums<SoUser.PermissionType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Administration.SoUser.PermissionType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoUser.PermissionType, To)
    nameWithType: EnumUtil.MapEnums(Of SoUser.PermissionType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Administration.SoUser.PermissionType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoUser.PermissionType, To>()
  nameWithType: Converters.MapEnums<SoUser.PermissionType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Administration.SoUser.PermissionType, To>()
  nameWithType.vb: Converters.MapEnums(Of SoUser.PermissionType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Administration.SoUser.PermissionType, To)()
  name.vb: MapEnums(Of SoUser.PermissionType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoUser.PermissionType, To>
    nameWithType: Converters.MapEnums<SoUser.PermissionType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Administration.SoUser.PermissionType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoUser.PermissionType, To)
    nameWithType: Converters.MapEnums(Of SoUser.PermissionType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Administration.SoUser.PermissionType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType
  commentId: T:SuperOffice.CRM.Administration.SoUser.PermissionType
  parent: SuperOffice.CRM.Administration
  isExternal: true
  name: SoUser.PermissionType
  nameWithType: SoUser.PermissionType
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType
