### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Dialect.SqlServerCommon
  commentId: T:SuperOffice.Data.Dialect.SqlServerCommon
  id: SqlServerCommon
  parent: SuperOffice.Data.Dialect
  children:
  - SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString(System.String)
  - SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar(System.String)
  - SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString
  - SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint
  - SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete
  - SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert
  - SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate
  - SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar(System.String)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Day)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Equal)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThan)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAll)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAny)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Hour)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.In)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThan)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Like)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Lower)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Minute)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAll)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAny)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Month)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Second)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Trim)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.UnEqual)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Upper)
  - SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Year)
  langs:
  - csharp
  - vb
  name: SqlServerCommon
  nameWithType: SqlServerCommon
  fullName: SuperOffice.Data.Dialect.SqlServerCommon
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThis class contains all common code for the MS SQL Server family. \nSpecific &quot;version-sql&quot; will be treated in the versions different subclasses.\n"
  syntax:
    content: 'public class SqlServerCommon : Dialect'
    content.vb: >-
      Public Class SqlServerCommon
          Inherits Dialect
  inheritance:
  - System.Object
  - SuperOffice.Data.Dialect.Dialect
  inheritedMembers:
  - SuperOffice.Data.Dialect.Dialect._tables
  - SuperOffice.Data.Dialect.Dialect._tablesInJoin
  - SuperOffice.Data.Dialect.Dialect._returnDBFields
  - SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  - SuperOffice.Data.Dialect.Dialect._soSchemaTable
  - SuperOffice.Data.Dialect.Dialect._returnArguments
  - SuperOffice.Data.Dialect.Dialect._usedAliases
  - SuperOffice.Data.Dialect.Dialect._filterCallbacks
  - SuperOffice.Data.Dialect.Dialect._cmd
  - SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  - SuperOffice.Data.Dialect.Dialect.SoParameterCollection
  - SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  - SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  - SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  - SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  - SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  - SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.CheckForAlias
  - SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  - SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  - SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  - SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  - SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  - SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  - SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  - SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  - SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  - SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  - SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  - SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  - SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  - SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  - SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  - SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  - SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  - SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  - SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  - SuperOffice.Data.Dialect.Dialect.MaxInSize
  - SuperOffice.Data.Dialect.Dialect.Tables
  - SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  - SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  - SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  - SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  - SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  - SuperOffice.Data.Dialect.Dialect.VarcharType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.Dialect.SqlServerCommon.EnumUtil.MapEnums``2
  - SuperOffice.Data.Dialect.SqlServerCommon.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint
  id: GetOrderbyCollationHint
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: GetOrderbyCollationHint()
  nameWithType: SqlServerCommon.GetOrderbyCollationHint()
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nTranslate the current thread culture into an Sql Server collation hint\n"
  syntax:
    content: protected override string GetOrderbyCollationHint()
    return:
      type: System.String
    content.vb: Protected Overrides Function GetOrderbyCollationHint As String
  overridden: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  overload: SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  id: ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ComposeSelect(String, String, String, String, StringBuilder, PrivateSelect)
  nameWithType: SqlServerCommon.ComposeSelect(String, String, String, String, StringBuilder, PrivateSelect)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect(System.String, System.String, System.String, System.String, System.Text.StringBuilder, SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nCompose the final <strong>SELECT</strong> from its constituent parts. For SQL Server, that means appending OPTION(RECOMPILE)\nif forced execution plan recompilation has been requested.\n"
  syntax:
    content: protected override string ComposeSelect(string select, string fields, string from, string join, StringBuilder sql, PrivateSelect originalCommand)
    parameters:
    - id: select
      type: System.String
    - id: fields
      type: System.String
    - id: from
      type: System.String
    - id: join
      type: System.String
    - id: sql
      type: System.Text.StringBuilder
    - id: originalCommand
      type: SuperOffice.Data.SQL.PrivateSelect
    return:
      type: System.String
    content.vb: Protected Overrides Function ComposeSelect(select As String, fields As String, from As String, join As String, sql As StringBuilder, originalCommand As PrivateSelect) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.FieldInfo)
  id: ToSql(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(FieldInfo)
  nameWithType: SqlServerCommon.ToSql(FieldInfo)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nWill return the Field&apos;s name together with the generated table-alias.\n<pre><code>T1.&quot;contact&quot;</code></pre>\n"
  remarks: "\nSame as base implementation, but removed .ToUpper():\nArea.MaxDataAge in upper contains AA which is understood differently from aA. (AA becomes Å, while Aa stays Aa)\nHence; ToUpper can not be used on MS SQL Server.\nDoes anyone think that this is completely pathological behaviour on the part of SQL Server???\n"
  syntax:
    content: protected override string ToSql(FieldInfo arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.FieldInfo
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As FieldInfo) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Like)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Like)
  id: ToSql(SuperOffice.Data.SQL.Like)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Like)
  nameWithType: SqlServerCommon.ToSql(Like)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Like)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nOverride: If we have a LIKE operator, used on a field that has fulltext indexing, and fulltext indexing is\nenabled on this database, THEN use the custom syntax (in its simplest form) for that. Handle multi-word searches as &quot;exact sentence&quot;\nReference: ms-help://MS.SQLCC.v9/MS.SQLSVR.v9.en/fulltxt9/html/7624ba76-594b-4be5-ac10-c3ac4a3529bd.htm or http://msdn.microsoft.com/en-us/library/ms187787.aspx\n"
  syntax:
    content: protected override string ToSql(Like arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Like
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As  Like) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Equal)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Equal)
  id: ToSql(SuperOffice.Data.SQL.Equal)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Equal)
  nameWithType: SqlServerCommon.ToSql(Equal)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Equal)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe text-field in the database on SQL Server is of type text (like a CLOB). \nIt is not possible to use the EQUAL operator on this type. So we need to \nconvert the field before running the EQUAL operator on the value given.\n"
  syntax:
    content: protected override string ToSql(Equal arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Equal
      description: The EQUAL argument.
    return:
      type: System.String
      description: A parsed and build sql string according with the necessary alterations if dealing with a clob-field.
    content.vb: Protected Overrides Function ToSql(arg As Equal) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.UnEqual)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.UnEqual)
  id: ToSql(SuperOffice.Data.SQL.UnEqual)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(UnEqual)
  nameWithType: SqlServerCommon.ToSql(UnEqual)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.UnEqual)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe text-field in the database on SQL Server is of type text (like a CLOB). \nIt is not possible to use the UNEQUAL operator on this type. So we need to \nconvert the field before running the UNEQUAL operator on the value given.\n"
  syntax:
    content: protected override string ToSql(UnEqual arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.UnEqual
      description: The UNEQUAL argument.
    return:
      type: System.String
      description: A parsed and build sql string according with the necessary alterations if dealing with a clob-field.
    content.vb: Protected Overrides Function ToSql(arg As UnEqual) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThan)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThan)
  id: ToSql(SuperOffice.Data.SQL.GreaterThan)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(GreaterThan)
  nameWithType: SqlServerCommon.ToSql(GreaterThan)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThan)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe text-field in the database on SQL Server is of type text (like a CLOB). \nIt is not possible to use the GreaterThan operator on this type. So we need to \nconvert the field before running the GreaterThan operator on the value given.\n"
  syntax:
    content: protected override string ToSql(GreaterThan arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.GreaterThan
      description: The EQUAL argument.
    return:
      type: System.String
      description: A parsed and build sql string according with the necessary alterations if dealing with a clob-field.
    content.vb: Protected Overrides Function ToSql(arg As GreaterThan) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  id: ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(GreaterThanOrEqual)
  nameWithType: SqlServerCommon.ToSql(GreaterThanOrEqual)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe text-field in the database on SQL Server is of type text (like a CLOB). \nIt is not possible to use the GreaterThanOrEqual operator on this type. So we need to \nconvert the field before running the GreaterThanOrEqual operator on the value given.\n"
  syntax:
    content: protected override string ToSql(GreaterThanOrEqual arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.GreaterThanOrEqual
      description: The UNEQUAL argument.
    return:
      type: System.String
      description: A parsed and build sql string according with the necessary alterations if dealing with a clob-field.
    content.vb: Protected Overrides Function ToSql(arg As GreaterThanOrEqual) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThan)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThan)
  id: ToSql(SuperOffice.Data.SQL.LessThan)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(LessThan)
  nameWithType: SqlServerCommon.ToSql(LessThan)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThan)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe text-field in the database on SQL Server is of type text (like a CLOB). \nIt is not possible to use the LessThan operator on this type. So we need to \nconvert the field before running the LessThan operator on the value given.\n"
  syntax:
    content: protected override string ToSql(LessThan arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.LessThan
      description: The EQUAL argument.
    return:
      type: System.String
      description: A parsed and build sql string according with the necessary alterations if dealing with a clob-field.
    content.vb: Protected Overrides Function ToSql(arg As LessThan) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  id: ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(LessThanOrEqual)
  nameWithType: SqlServerCommon.ToSql(LessThanOrEqual)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe text-field in the database on SQL Server is of type text (like a CLOB). \nIt is not possible to use the LessThanOrEqual operator on this type. So we need to \nconvert the field before running the LessThanOrEqual operator on the value given.\n"
  syntax:
    content: protected override string ToSql(LessThanOrEqual arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.LessThanOrEqual
      description: The UNEQUAL argument.
    return:
      type: System.String
      description: A parsed and build sql string according with the necessary alterations if dealing with a clob-field.
    content.vb: Protected Overrides Function ToSql(arg As LessThanOrEqual) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Upper)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Upper)
  id: ToSql(SuperOffice.Data.SQL.Upper)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Upper)
  nameWithType: SqlServerCommon.ToSql(Upper)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Upper)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nToSql Upper\n"
  syntax:
    content: protected override string ToSql(Upper arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Upper
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Upper) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Lower)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Lower)
  id: ToSql(SuperOffice.Data.SQL.Lower)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Lower)
  nameWithType: SqlServerCommon.ToSql(Lower)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Lower)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nToSql Lower\n"
  syntax:
    content: protected override string ToSql(Lower arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Lower
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Lower) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Trim)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Trim)
  id: ToSql(SuperOffice.Data.SQL.Trim)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Trim)
  nameWithType: SqlServerCommon.ToSql(Trim)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Trim)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nToSql( Trim arg ) will return the given argument enclosed by the SQL TRIM function.\n"
  syntax:
    content: protected override string ToSql(Trim arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Trim
      description: The argument to wrap TRIM around.
    return:
      type: System.String
      description: The parsed Trim-string
    content.vb: Protected Overrides Function ToSql(arg As Trim) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Year)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Year)
  id: ToSql(SuperOffice.Data.SQL.Year)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Year)
  nameWithType: SqlServerCommon.ToSql(Year)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Year)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string ToSql(Year arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Year
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Year) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Month)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Month)
  id: ToSql(SuperOffice.Data.SQL.Month)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Month)
  nameWithType: SqlServerCommon.ToSql(Month)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Month)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string ToSql(Month arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Month
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Month) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Day)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Day)
  id: ToSql(SuperOffice.Data.SQL.Day)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Day)
  nameWithType: SqlServerCommon.ToSql(Day)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Day)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string ToSql(Day arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Day
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Day) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Hour)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Hour)
  id: ToSql(SuperOffice.Data.SQL.Hour)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Hour)
  nameWithType: SqlServerCommon.ToSql(Hour)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Hour)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string ToSql(Hour arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Hour
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Hour) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Minute)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Minute)
  id: ToSql(SuperOffice.Data.SQL.Minute)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Minute)
  nameWithType: SqlServerCommon.ToSql(Minute)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Minute)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string ToSql(Minute arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Minute
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Minute) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Second)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Second)
  id: ToSql(SuperOffice.Data.SQL.Second)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(Second)
  nameWithType: SqlServerCommon.ToSql(Second)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.Second)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string ToSql(Second arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Second
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As Second) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString(System.String)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString(System.String)
  id: ConvertToDbString(System.String)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ConvertToDbString(String)
  nameWithType: SqlServerCommon.ConvertToDbString(String)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nConvert a string to a type that can be used in an SQL command when \ncommunication to the database; using UNICODE data\n"
  remarks: "\nAppropriate &apos; characters are put in the front of \nand in the end of the string when processed by this method.\n"
  syntax:
    content: public override string ConvertToDbString(string value)
    parameters:
    - id: value
      type: System.String
      description: The string value that is to be converted.
    return:
      type: System.String
      description: A string that can be used in an SQL command.
    content.vb: Public Overrides Function ConvertToDbString(value As String) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.In)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.In)
  id: ToSql(SuperOffice.Data.SQL.In)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(In)
  nameWithType: SqlServerCommon.ToSql(In)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.In)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nThe not in-operator (NOT IN) is used when you want to get data that \ncorresponds with the restriction-clause but does not contain the values \ndescribed in the not in-clause. \n<pre><code>	SELECT T0.associate_id\n	FROM associate TO\n	WHERE associate_id BETWEEN 10 AND 100\n	AND T0.associate_id NOT IN (20, 30, 40, 50, 60, 70, 80, 90);</code></pre>\nThis example will give you all the associate_id&apos;s between 10 and 100 but the ones\ndescribed  in the not in-clause.\n"
  remarks: "\nSQL parameters will not be used for huge IN queries.\n"
  syntax:
    content: protected override string ToSql(In arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.In
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As  In) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAny)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAny)
  id: ToSql(SuperOffice.Data.SQL.HasAny)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(HasAny)
  nameWithType: SqlServerCommon.ToSql(HasAny)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAny)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nProcess the special HasAny, which doesn&apos;t correspond to SQL. However it does work (only!) with our special\nsimulated int[] datatype, encoded as words in a text field\n"
  syntax:
    content: protected override string ToSql(HasAny arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.HasAny
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As HasAny) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAll)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAll)
  id: ToSql(SuperOffice.Data.SQL.HasAll)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(HasAll)
  nameWithType: SqlServerCommon.ToSql(HasAll)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.HasAll)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nProcess the special HasAny, which doesn&apos;t correspond to SQL. However it does work (only!) with our special\nsimulated int[] datatype, encoded as words in a text field\n"
  syntax:
    content: protected override string ToSql(HasAll arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.HasAll
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As HasAll) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAny)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAny)
  id: ToSql(SuperOffice.Data.SQL.MissingAny)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(MissingAny)
  nameWithType: SqlServerCommon.ToSql(MissingAny)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAny)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nProcess the special HasAny, which doesn&apos;t correspond to SQL. However it does work (only!) with our special\nsimulated int[] datatype, encoded as words in a text field\n"
  syntax:
    content: protected override string ToSql(MissingAny arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.MissingAny
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As MissingAny) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAll)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAll)
  id: ToSql(SuperOffice.Data.SQL.MissingAll)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: ToSql(MissingAll)
  nameWithType: SqlServerCommon.ToSql(MissingAll)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql(SuperOffice.Data.SQL.MissingAll)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nProcess the special HasAny, which doesn&apos;t correspond to SQL. However it does work (only!) with our special\nsimulated int[] datatype, encoded as words in a text field\n"
  syntax:
    content: protected override string ToSql(MissingAll arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.MissingAll
    return:
      type: System.String
    content.vb: Protected Overrides Function ToSql(arg As MissingAll) As String
  overridden: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar(System.String)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar(System.String)
  id: DateToVarchar(System.String)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: DateToVarchar(String)
  nameWithType: SqlServerCommon.DateToVarchar(String)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string DateToVarchar(string innerValue)
    parameters:
    - id: innerValue
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overrides Function DateToVarchar(innerValue As String) As String
  overridden: SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar(System.String)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar(System.String)
  id: TimeToVarchar(System.String)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: TimeToVarchar(String)
  nameWithType: SqlServerCommon.TimeToVarchar(String)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected override string TimeToVarchar(string innerValue)
    parameters:
    - id: innerValue
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overrides Function TimeToVarchar(innerValue As String) As String
  overridden: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  id: GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: GetDefaultTransaction(SoConnection, SqlCommand)
  nameWithType: SqlServerCommon.GetDefaultTransaction(SoConnection, SqlCommand)
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction(SuperOffice.Data.SoConnection, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nCreate and return a default transaction for SELECT queries that have no\ncurrent transaction\n"
  remarks: "\nOn SQL Server, large SELECT&apos;s are problematic due to automatic lock escalation. When 5000 row locks\nhave been accumulated, the server tends to escalate this to a table lock, thereby blocking concurrent\nINSERTs and UPDATEs, even if they are happening far away from the select.\n<p></p>\nA fairly clean way to avoid this is to have IsolationLevel.ReadUncommited on those selects - this\ncauses them to create no locks and honour no locks. \n"
  syntax:
    content: protected override SoTransaction GetDefaultTransaction(SoConnection connection, SqlCommand sqlCommand)
    parameters:
    - id: connection
      type: SuperOffice.Data.SoConnection
      description: Connection the command will be executed on
    - id: sqlCommand
      type: SuperOffice.Data.SQL.SqlCommand
      description: Command to be executed
    return:
      type: SuperOffice.Data.SoTransaction
      description: Newly created default transaction for SELECT-type queries, or null
    content.vb: Protected Overrides Function GetDefaultTransaction(connection As SoConnection, sqlCommand As SqlCommand) As SoTransaction
  overridden: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  overload: SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete
  commentId: P:SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete
  id: HasAliasOnDelete
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: HasAliasOnDelete
  nameWithType: SqlServerCommon.HasAliasOnDelete
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nOverridden method. Used to check if alias is used with fields and tables in the <code>SQL DELETE</code>-command.\n"
  remarks: "\nDefault value is false.\n"
  syntax:
    content: protected override bool HasAliasOnDelete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overrides ReadOnly Property HasAliasOnDelete As Boolean
  overridden: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  overload: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert
  commentId: P:SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert
  id: HasAliasOnInsert
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: HasAliasOnInsert
  nameWithType: SqlServerCommon.HasAliasOnInsert
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nOverridden method. Used to check if alias is used with fields and tables in the <code>SQL INSERT</code>-command.\n"
  remarks: "\nDefault value is false.\n"
  syntax:
    content: protected override bool HasAliasOnInsert { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overrides ReadOnly Property HasAliasOnInsert As Boolean
  overridden: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  overload: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate
  commentId: P:SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate
  id: HasAliasOnUpdate
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: HasAliasOnUpdate
  nameWithType: SqlServerCommon.HasAliasOnUpdate
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nOverridden method. Used to check if alias is used with fields and tables in the <code>SQL UPDATE</code>-command.\n"
  remarks: "\nDefault value is false.\n"
  syntax:
    content: protected override bool HasAliasOnUpdate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overrides ReadOnly Property HasAliasOnUpdate As Boolean
  overridden: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  overload: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString
  commentId: P:SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString
  id: DefaultConnectionString
  parent: SuperOffice.Data.Dialect.SqlServerCommon
  langs:
  - csharp
  - vb
  name: DefaultConnectionString
  nameWithType: SqlServerCommon.DefaultConnectionString
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nDefault connection string for MS SQL Server\n"
  syntax:
    content: public override string DefaultConnectionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property DefaultConnectionString As String
  overridden: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  overload: SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.Data.Dialect
  commentId: N:SuperOffice.Data.Dialect
  isExternal: true
  name: SuperOffice.Data.Dialect
  nameWithType: SuperOffice.Data.Dialect
  fullName: SuperOffice.Data.Dialect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Dialect.Dialect
  commentId: T:SuperOffice.Data.Dialect.Dialect
  parent: SuperOffice.Data.Dialect
  isExternal: true
  name: Dialect
  nameWithType: Dialect
  fullName: SuperOffice.Data.Dialect.Dialect
- uid: SuperOffice.Data.Dialect.Dialect._tables
  commentId: F:SuperOffice.Data.Dialect.Dialect._tables
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _tables
  nameWithType: Dialect._tables
  fullName: SuperOffice.Data.Dialect.Dialect._tables
- uid: SuperOffice.Data.Dialect.Dialect._tablesInJoin
  commentId: F:SuperOffice.Data.Dialect.Dialect._tablesInJoin
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _tablesInJoin
  nameWithType: Dialect._tablesInJoin
  fullName: SuperOffice.Data.Dialect.Dialect._tablesInJoin
- uid: SuperOffice.Data.Dialect.Dialect._returnDBFields
  commentId: F:SuperOffice.Data.Dialect.Dialect._returnDBFields
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _returnDBFields
  nameWithType: Dialect._returnDBFields
  fullName: SuperOffice.Data.Dialect.Dialect._returnDBFields
- uid: SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  commentId: F:SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _dbSchemaTable
  nameWithType: Dialect._dbSchemaTable
  fullName: SuperOffice.Data.Dialect.Dialect._dbSchemaTable
- uid: SuperOffice.Data.Dialect.Dialect._soSchemaTable
  commentId: F:SuperOffice.Data.Dialect.Dialect._soSchemaTable
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _soSchemaTable
  nameWithType: Dialect._soSchemaTable
  fullName: SuperOffice.Data.Dialect.Dialect._soSchemaTable
- uid: SuperOffice.Data.Dialect.Dialect._returnArguments
  commentId: F:SuperOffice.Data.Dialect.Dialect._returnArguments
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _returnArguments
  nameWithType: Dialect._returnArguments
  fullName: SuperOffice.Data.Dialect.Dialect._returnArguments
- uid: SuperOffice.Data.Dialect.Dialect._usedAliases
  commentId: F:SuperOffice.Data.Dialect.Dialect._usedAliases
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _usedAliases
  nameWithType: Dialect._usedAliases
  fullName: SuperOffice.Data.Dialect.Dialect._usedAliases
- uid: SuperOffice.Data.Dialect.Dialect._filterCallbacks
  commentId: F:SuperOffice.Data.Dialect.Dialect._filterCallbacks
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _filterCallbacks
  nameWithType: Dialect._filterCallbacks
  fullName: SuperOffice.Data.Dialect.Dialect._filterCallbacks
- uid: SuperOffice.Data.Dialect.Dialect._cmd
  commentId: F:SuperOffice.Data.Dialect.Dialect._cmd
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _cmd
  nameWithType: Dialect._cmd
  fullName: SuperOffice.Data.Dialect.Dialect._cmd
- uid: SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  commentId: F:SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: _stringFieldsInOrderByWithDistinct
  nameWithType: Dialect._stringFieldsInOrderByWithDistinct
  fullName: SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
- uid: SuperOffice.Data.Dialect.Dialect.SoParameterCollection
  commentId: F:SuperOffice.Data.Dialect.Dialect.SoParameterCollection
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: SoParameterCollection
  nameWithType: Dialect.SoParameterCollection
  fullName: SuperOffice.Data.Dialect.Dialect.SoParameterCollection
- uid: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  commentId: M:SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: CheckForDuplicateRow(IDataReader)
  nameWithType: Dialect.CheckForDuplicateRow(IDataReader)
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
    name: CheckForDuplicateRow
    nameWithType: Dialect.CheckForDuplicateRow
    fullName: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
    name: CheckForDuplicateRow
    nameWithType: Dialect.CheckForDuplicateRow
    fullName: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: CheckForDistinct(PrivateSelect)
  nameWithType: Dialect.CheckForDistinct(PrivateSelect)
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
    name: CheckForDistinct
    nameWithType: Dialect.CheckForDistinct
    fullName: SuperOffice.Data.Dialect.Dialect.CheckForDistinct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
    name: CheckForDistinct
    nameWithType: Dialect.CheckForDistinct
    fullName: SuperOffice.Data.Dialect.Dialect.CheckForDistinct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ShouldRowBeSkipped(IDataReader)
  nameWithType: Dialect.ShouldRowBeSkipped(IDataReader)
  fullName: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
    name: ShouldRowBeSkipped
    nameWithType: Dialect.ShouldRowBeSkipped
    fullName: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
    name: ShouldRowBeSkipped
    nameWithType: Dialect.ShouldRowBeSkipped
    fullName: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: IsTableReferencedInSelect(SoTable)
  nameWithType: Dialect.IsTableReferencedInSelect(SoTable)
  fullName: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
    name: IsTableReferencedInSelect
    nameWithType: Dialect.IsTableReferencedInSelect
    fullName: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
    name: IsTableReferencedInSelect
    nameWithType: Dialect.IsTableReferencedInSelect
    fullName: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetUpdatedSchemaTable(DataTable)
  nameWithType: Dialect.GetUpdatedSchemaTable(DataTable)
  fullName: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
    name: GetUpdatedSchemaTable
    nameWithType: Dialect.GetUpdatedSchemaTable
    fullName: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
    name: GetUpdatedSchemaTable
    nameWithType: Dialect.GetUpdatedSchemaTable
    fullName: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: System.Data.DataTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GenerateCaseInsensitivity(FieldInfo, Parameter, String)
  nameWithType: Dialect.GenerateCaseInsensitivity(FieldInfo, Parameter, String)
  fullName: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.SQL.Parameter, System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
    name: GenerateCaseInsensitivity
    nameWithType: Dialect.GenerateCaseInsensitivity
    fullName: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SuperOffice.Data.SQL.Parameter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
    name: GenerateCaseInsensitivity
    nameWithType: Dialect.GenerateCaseInsensitivity
    fullName: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SuperOffice.Data.SQL.Parameter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetOriginAsComment(SqlCommand)
  nameWithType: Dialect.GetOriginAsComment(SqlCommand)
  fullName: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
    name: GetOriginAsComment
    nameWithType: Dialect.GetOriginAsComment
    fullName: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
    name: GetOriginAsComment
    nameWithType: Dialect.GetOriginAsComment
    fullName: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: HandleDateAndTimeWrapping(String, FieldDataType)
  nameWithType: Dialect.HandleDateAndTimeWrapping(String, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String, SuperOffice.Data.FieldDataType)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
    name: HandleDateAndTimeWrapping
    nameWithType: Dialect.HandleDateAndTimeWrapping
    fullName: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
    name: HandleDateAndTimeWrapping
    nameWithType: Dialect.HandleDateAndTimeWrapping
    fullName: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetFieldDbDataType(Int32)
  nameWithType: Dialect.GetFieldDbDataType(Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
    name: GetFieldDbDataType
    nameWithType: Dialect.GetFieldDbDataType
    fullName: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
    name: GetFieldDbDataType
    nameWithType: Dialect.GetFieldDbDataType
    fullName: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetIndexOfField(Argument)
  nameWithType: Dialect.GetIndexOfField(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
    name: GetIndexOfField
    nameWithType: Dialect.GetIndexOfField
    fullName: SuperOffice.Data.Dialect.Dialect.GetIndexOfField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
    name: GetIndexOfField
    nameWithType: Dialect.GetIndexOfField
    fullName: SuperOffice.Data.Dialect.Dialect.GetIndexOfField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetFieldInfoFromIndex(Int32)
  nameWithType: Dialect.GetFieldInfoFromIndex(Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
    name: GetFieldInfoFromIndex
    nameWithType: Dialect.GetFieldInfoFromIndex
    fullName: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
    name: GetFieldInfoFromIndex
    nameWithType: Dialect.GetFieldInfoFromIndex
    fullName: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.CheckForAlias
  commentId: M:SuperOffice.Data.Dialect.Dialect.CheckForAlias
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: CheckForAlias()
  nameWithType: Dialect.CheckForAlias()
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForAlias()
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.CheckForAlias
    name: CheckForAlias
    nameWithType: Dialect.CheckForAlias
    fullName: SuperOffice.Data.Dialect.Dialect.CheckForAlias
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.CheckForAlias
    name: CheckForAlias
    nameWithType: Dialect.CheckForAlias
    fullName: SuperOffice.Data.Dialect.Dialect.CheckForAlias
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  commentId: M:SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: InvokeToSql(Object[])
  nameWithType: Dialect.InvokeToSql(Object[])
  fullName: SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  nameWithType.vb: Dialect.InvokeToSql(Object())
  fullName.vb: SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object())
  name.vb: InvokeToSql(Object())
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
    name: InvokeToSql
    nameWithType: Dialect.InvokeToSql
    fullName: SuperOffice.Data.Dialect.Dialect.InvokeToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
    name: InvokeToSql
    nameWithType: Dialect.InvokeToSql
    fullName: SuperOffice.Data.Dialect.Dialect.InvokeToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: IsAnyArgumentString(Argument[])
  nameWithType: Dialect.IsAnyArgumentString(Argument[])
  fullName: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Dialect.IsAnyArgumentString(Argument())
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument())
  name.vb: IsAnyArgumentString(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
    name: IsAnyArgumentString
    nameWithType: Dialect.IsAnyArgumentString
    fullName: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
    name: IsAnyArgumentString
    nameWithType: Dialect.IsAnyArgumentString
    fullName: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSqlUpperIfNeeded(Argument)
  nameWithType: Dialect.ToSqlUpperIfNeeded(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
    name: ToSqlUpperIfNeeded
    nameWithType: Dialect.ToSqlUpperIfNeeded
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
    name: ToSqlUpperIfNeeded
    nameWithType: Dialect.ToSqlUpperIfNeeded
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSqlFrom()
  nameWithType: Dialect.ToSqlFrom()
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlFrom()
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
    name: ToSqlFrom
    nameWithType: Dialect.ToSqlFrom
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
    name: ToSqlFrom
    nameWithType: Dialect.ToSqlFrom
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSqlField(FieldInfoCollection)
  nameWithType: Dialect.ToSqlField(FieldInfoCollection)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
    name: ToSqlField
    nameWithType: Dialect.ToSqlField
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfoCollection
    name: FieldInfoCollection
    nameWithType: FieldInfoCollection
    fullName: SuperOffice.Data.SQL.FieldInfoCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
    name: ToSqlField
    nameWithType: Dialect.ToSqlField
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfoCollection
    name: FieldInfoCollection
    nameWithType: FieldInfoCollection
    fullName: SuperOffice.Data.SQL.FieldInfoCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSqlField(ArgumentCollection)
  nameWithType: Dialect.ToSqlField(ArgumentCollection)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
    name: ToSqlField
    nameWithType: Dialect.ToSqlField
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.ArgumentCollection
    name: ArgumentCollection
    nameWithType: ArgumentCollection
    fullName: SuperOffice.Data.SQL.ArgumentCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
    name: ToSqlField
    nameWithType: Dialect.ToSqlField
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.ArgumentCollection
    name: ArgumentCollection
    nameWithType: ArgumentCollection
    fullName: SuperOffice.Data.SQL.ArgumentCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSqlField(ReturnFieldsCollection)
  nameWithType: Dialect.ToSqlField(ReturnFieldsCollection)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
    name: ToSqlField
    nameWithType: Dialect.ToSqlField
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.ReturnFieldsCollection
    name: ReturnFieldsCollection
    nameWithType: ReturnFieldsCollection
    fullName: SuperOffice.Data.SQL.ReturnFieldsCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
    name: ToSqlField
    nameWithType: Dialect.ToSqlField
    fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.ReturnFieldsCollection
    name: ReturnFieldsCollection
    nameWithType: ReturnFieldsCollection
    fullName: SuperOffice.Data.SQL.ReturnFieldsCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Argument)
  nameWithType: Dialect.ToSql(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(OrderBy)
  nameWithType: Dialect.ToSql(OrderBy)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.OrderBy
    name: OrderBy
    nameWithType: OrderBy
    fullName: SuperOffice.Data.SQL.OrderBy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.OrderBy
    name: OrderBy
    nameWithType: OrderBy
    fullName: SuperOffice.Data.SQL.OrderBy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(GroupBy)
  nameWithType: Dialect.ToSql(GroupBy)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.GroupBy
    name: GroupBy
    nameWithType: GroupBy
    fullName: SuperOffice.Data.SQL.GroupBy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.GroupBy
    name: GroupBy
    nameWithType: GroupBy
    fullName: SuperOffice.Data.SQL.GroupBy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Count)
  nameWithType: Dialect.ToSql(Count)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Count
    name: Count
    nameWithType: Count
    fullName: SuperOffice.Data.SQL.Count
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Count
    name: Count
    nameWithType: Count
    fullName: SuperOffice.Data.SQL.Count
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(CountAll)
  nameWithType: Dialect.ToSql(CountAll)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.CountAll
    name: CountAll
    nameWithType: CountAll
    fullName: SuperOffice.Data.SQL.CountAll
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.CountAll
    name: CountAll
    nameWithType: CountAll
    fullName: SuperOffice.Data.SQL.CountAll
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(IsNull)
  nameWithType: Dialect.ToSql(IsNull)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.IsNull
    name: IsNull
    nameWithType: IsNull
    fullName: SuperOffice.Data.SQL.IsNull
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.IsNull
    name: IsNull
    nameWithType: IsNull
    fullName: SuperOffice.Data.SQL.IsNull
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(IsNotNull)
  nameWithType: Dialect.ToSql(IsNotNull)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.IsNotNull
    name: IsNotNull
    nameWithType: IsNotNull
    fullName: SuperOffice.Data.SQL.IsNotNull
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.IsNotNull
    name: IsNotNull
    nameWithType: IsNotNull
    fullName: SuperOffice.Data.SQL.IsNotNull
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  commentId: M:SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: EncodedArraySearch(Argument, Argument[], Dialect.EncodedArraySearchType, Dialect.FulltextEncodedSearch)
  nameWithType: Dialect.EncodedArraySearch(Argument, Argument[], Dialect.EncodedArraySearchType, Dialect.FulltextEncodedSearch)
  fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument[], SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType, SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  nameWithType.vb: Dialect.EncodedArraySearch(Argument, Argument(), Dialect.EncodedArraySearchType, Dialect.FulltextEncodedSearch)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument(), SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType, SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  name.vb: EncodedArraySearch(Argument, Argument(), Dialect.EncodedArraySearchType, Dialect.FulltextEncodedSearch)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
    name: EncodedArraySearch
    nameWithType: Dialect.EncodedArraySearch
    fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    name: Dialect.EncodedArraySearchType
    nameWithType: Dialect.EncodedArraySearchType
    fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    name: Dialect.FulltextEncodedSearch
    nameWithType: Dialect.FulltextEncodedSearch
    fullName: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
    name: EncodedArraySearch
    nameWithType: Dialect.EncodedArraySearch
    fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    name: Dialect.EncodedArraySearchType
    nameWithType: Dialect.EncodedArraySearchType
    fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    name: Dialect.FulltextEncodedSearch
    nameWithType: Dialect.FulltextEncodedSearch
    fullName: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(NotIn)
  nameWithType: Dialect.ToSql(NotIn)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.NotIn
    name: NotIn
    nameWithType: NotIn
    fullName: SuperOffice.Data.SQL.NotIn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.NotIn
    name: NotIn
    nameWithType: NotIn
    fullName: SuperOffice.Data.SQL.NotIn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Between)
  nameWithType: Dialect.ToSql(Between)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Between
    name: Between
    nameWithType: Between
    fullName: SuperOffice.Data.SQL.Between
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Between
    name: Between
    nameWithType: Between
    fullName: SuperOffice.Data.SQL.Between
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(NotBetween)
  nameWithType: Dialect.ToSql(NotBetween)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.NotBetween
    name: NotBetween
    nameWithType: NotBetween
    fullName: SuperOffice.Data.SQL.NotBetween
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.NotBetween
    name: NotBetween
    nameWithType: NotBetween
    fullName: SuperOffice.Data.SQL.NotBetween
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(TableInfo)
  nameWithType: Dialect.ToSql(TableInfo)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Parameter)
  nameWithType: Dialect.ToSql(Parameter)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SuperOffice.Data.SQL.Parameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Parameter
    name: Parameter
    nameWithType: Parameter
    fullName: SuperOffice.Data.SQL.Parameter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(NotLike)
  nameWithType: Dialect.ToSql(NotLike)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.NotLike
    name: NotLike
    nameWithType: NotLike
    fullName: SuperOffice.Data.SQL.NotLike
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.NotLike
    name: NotLike
    nameWithType: NotLike
    fullName: SuperOffice.Data.SQL.NotLike
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(And)
  nameWithType: Dialect.ToSql(And)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.And
    name: And
    nameWithType: And
    fullName: SuperOffice.Data.SQL.And
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.And
    name: And
    nameWithType: And
    fullName: SuperOffice.Data.SQL.And
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Or)
  nameWithType: Dialect.ToSql(Or)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Or
    name: Or
    nameWithType: Or
    fullName: SuperOffice.Data.SQL.Or
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Or
    name: Or
    nameWithType: Or
    fullName: SuperOffice.Data.SQL.Or
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ParseMathematicalArguments(MathematicalExpression, String)
  nameWithType: Dialect.ParseMathematicalArguments(MathematicalExpression, String)
  fullName: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression, System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
    name: ParseMathematicalArguments
    nameWithType: Dialect.ParseMathematicalArguments
    fullName: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    nameWithType: MathematicalExpression
    fullName: SuperOffice.Data.SQL.MathematicalExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
    name: ParseMathematicalArguments
    nameWithType: Dialect.ParseMathematicalArguments
    fullName: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    nameWithType: MathematicalExpression
    fullName: SuperOffice.Data.SQL.MathematicalExpression
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Add)
  nameWithType: Dialect.ToSql(Add)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Add
    name: Add
    nameWithType: Add
    fullName: SuperOffice.Data.SQL.Add
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Add
    name: Add
    nameWithType: Add
    fullName: SuperOffice.Data.SQL.Add
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Subtract)
  nameWithType: Dialect.ToSql(Subtract)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Subtract
    name: Subtract
    nameWithType: Subtract
    fullName: SuperOffice.Data.SQL.Subtract
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Subtract
    name: Subtract
    nameWithType: Subtract
    fullName: SuperOffice.Data.SQL.Subtract
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Multiply)
  nameWithType: Dialect.ToSql(Multiply)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Multiply
    name: Multiply
    nameWithType: Multiply
    fullName: SuperOffice.Data.SQL.Multiply
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Multiply
    name: Multiply
    nameWithType: Multiply
    fullName: SuperOffice.Data.SQL.Multiply
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Divide)
  nameWithType: Dialect.ToSql(Divide)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Divide
    name: Divide
    nameWithType: Divide
    fullName: SuperOffice.Data.SQL.Divide
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Divide
    name: Divide
    nameWithType: Divide
    fullName: SuperOffice.Data.SQL.Divide
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(LeftOuterJoin)
  nameWithType: Dialect.ToSql(LeftOuterJoin)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.LeftOuterJoin
    name: LeftOuterJoin
    nameWithType: LeftOuterJoin
    fullName: SuperOffice.Data.SQL.LeftOuterJoin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.LeftOuterJoin
    name: LeftOuterJoin
    nameWithType: LeftOuterJoin
    fullName: SuperOffice.Data.SQL.LeftOuterJoin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(RightOuterJoin)
  nameWithType: Dialect.ToSql(RightOuterJoin)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.RightOuterJoin
    name: RightOuterJoin
    nameWithType: RightOuterJoin
    fullName: SuperOffice.Data.SQL.RightOuterJoin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.RightOuterJoin
    name: RightOuterJoin
    nameWithType: RightOuterJoin
    fullName: SuperOffice.Data.SQL.RightOuterJoin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(InnerJoin)
  nameWithType: Dialect.ToSql(InnerJoin)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.InnerJoin
    name: InnerJoin
    nameWithType: InnerJoin
    fullName: SuperOffice.Data.SQL.InnerJoin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.InnerJoin
    name: InnerJoin
    nameWithType: InnerJoin
    fullName: SuperOffice.Data.SQL.InnerJoin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ParseJoinClause(JoinRestriction)
  nameWithType: Dialect.ParseJoinClause(JoinRestriction)
  fullName: SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
    name: ParseJoinClause
    nameWithType: Dialect.ParseJoinClause
    fullName: SuperOffice.Data.Dialect.Dialect.ParseJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.JoinRestriction
    name: JoinRestriction
    nameWithType: JoinRestriction
    fullName: SuperOffice.Data.SQL.JoinRestriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
    name: ParseJoinClause
    nameWithType: Dialect.ParseJoinClause
    fullName: SuperOffice.Data.Dialect.Dialect.ParseJoinClause
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.JoinRestriction
    name: JoinRestriction
    nameWithType: JoinRestriction
    fullName: SuperOffice.Data.SQL.JoinRestriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Distinct)
  nameWithType: Dialect.ToSql(Distinct)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Distinct
    name: Distinct
    nameWithType: Distinct
    fullName: SuperOffice.Data.SQL.Distinct
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Distinct
    name: Distinct
    nameWithType: Distinct
    fullName: SuperOffice.Data.SQL.Distinct
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Alias)
  nameWithType: Dialect.ToSql(Alias)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Alias
    name: Alias
    nameWithType: Alias
    fullName: SuperOffice.Data.SQL.Alias
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Alias
    name: Alias
    nameWithType: Alias
    fullName: SuperOffice.Data.SQL.Alias
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(FieldTypeConvert)
  nameWithType: Dialect.ToSql(FieldTypeConvert)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldTypeConvert
    name: FieldTypeConvert
    nameWithType: FieldTypeConvert
    fullName: SuperOffice.Data.SQL.FieldTypeConvert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldTypeConvert
    name: FieldTypeConvert
    nameWithType: FieldTypeConvert
    fullName: SuperOffice.Data.SQL.FieldTypeConvert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(FieldDataType)
  nameWithType: Dialect.ToSql(FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Soundex)
  nameWithType: Dialect.ToSql(Soundex)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Soundex
    name: Soundex
    nameWithType: Soundex
    fullName: SuperOffice.Data.SQL.Soundex
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Soundex
    name: Soundex
    nameWithType: Soundex
    fullName: SuperOffice.Data.SQL.Soundex
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Sum)
  nameWithType: Dialect.ToSql(Sum)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Sum
    name: Sum
    nameWithType: Sum
    fullName: SuperOffice.Data.SQL.Sum
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Sum
    name: Sum
    nameWithType: Sum
    fullName: SuperOffice.Data.SQL.Sum
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Max)
  nameWithType: Dialect.ToSql(Max)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Max
    name: Max
    nameWithType: Max
    fullName: SuperOffice.Data.SQL.Max
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Max
    name: Max
    nameWithType: Max
    fullName: SuperOffice.Data.SQL.Max
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Min)
  nameWithType: Dialect.ToSql(Min)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Min
    name: Min
    nameWithType: Min
    fullName: SuperOffice.Data.SQL.Min
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Min
    name: Min
    nameWithType: Min
    fullName: SuperOffice.Data.SQL.Min
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ConvertToDbParameterType(Object, FieldDataType)
  nameWithType: Dialect.ConvertToDbParameterType(Object, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object, SuperOffice.Data.FieldDataType)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
    name: ConvertToDbParameterType
    nameWithType: Dialect.ConvertToDbParameterType
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
    name: ConvertToDbParameterType
    nameWithType: Dialect.ConvertToDbParameterType
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ConvertToDbType(Object, FieldDataType)
  nameWithType: Dialect.ConvertToDbType(Object, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object, SuperOffice.Data.FieldDataType)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
    name: ConvertToDbType
    nameWithType: Dialect.ConvertToDbType
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
    name: ConvertToDbType
    nameWithType: Dialect.ConvertToDbType
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ConvertFromDbType(Object, FieldDataType)
  nameWithType: Dialect.ConvertFromDbType(Object, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object, SuperOffice.Data.FieldDataType)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
    name: ConvertFromDbType
    nameWithType: Dialect.ConvertFromDbType
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
    name: ConvertFromDbType
    nameWithType: Dialect.ConvertFromDbType
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.FieldDataType
    name: FieldDataType
    nameWithType: FieldDataType
    fullName: SuperOffice.Data.FieldDataType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: TimeTUtc2DateTime(Int32)
  nameWithType: Dialect.TimeTUtc2DateTime(Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
    name: TimeTUtc2DateTime
    nameWithType: Dialect.TimeTUtc2DateTime
    fullName: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
    name: TimeTUtc2DateTime
    nameWithType: Dialect.TimeTUtc2DateTime
    fullName: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: TimeTLocal2DateTime(Int32)
  nameWithType: Dialect.TimeTLocal2DateTime(Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
    name: TimeTLocal2DateTime
    nameWithType: Dialect.TimeTLocal2DateTime
    fullName: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
    name: TimeTLocal2DateTime
    nameWithType: Dialect.TimeTLocal2DateTime
    fullName: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DateTime2TimeTUtc(DateTime)
  nameWithType: Dialect.DateTime2TimeTUtc(DateTime)
  fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
    name: DateTime2TimeTUtc
    nameWithType: Dialect.DateTime2TimeTUtc
    fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
    name: DateTime2TimeTUtc
    nameWithType: Dialect.DateTime2TimeTUtc
    fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DateTime2TimeTLocal(DateTime)
  nameWithType: Dialect.DateTime2TimeTLocal(DateTime)
  fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
    name: DateTime2TimeTLocal
    nameWithType: Dialect.DateTime2TimeTLocal
    fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
    name: DateTime2TimeTLocal
    nameWithType: Dialect.DateTime2TimeTLocal
    fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: SelectSql(PrivateSelect)
  nameWithType: Dialect.SelectSql(PrivateSelect)
  fullName: SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
    name: SelectSql
    nameWithType: Dialect.SelectSql
    fullName: SuperOffice.Data.Dialect.Dialect.SelectSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
    name: SelectSql
    nameWithType: Dialect.SelectSql
    fullName: SuperOffice.Data.Dialect.Dialect.SelectSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: InsertSql(PrivateSave)
  nameWithType: Dialect.InsertSql(PrivateSave)
  fullName: SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
    name: InsertSql
    nameWithType: Dialect.InsertSql
    fullName: SuperOffice.Data.Dialect.Dialect.InsertSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
    name: InsertSql
    nameWithType: Dialect.InsertSql
    fullName: SuperOffice.Data.Dialect.Dialect.InsertSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: UpdateSql(PrivateSave)
  nameWithType: Dialect.UpdateSql(PrivateSave)
  fullName: SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
    name: UpdateSql
    nameWithType: Dialect.UpdateSql
    fullName: SuperOffice.Data.Dialect.Dialect.UpdateSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
    name: UpdateSql
    nameWithType: Dialect.UpdateSql
    fullName: SuperOffice.Data.Dialect.Dialect.UpdateSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DeleteSql(PrivateSave)
  nameWithType: Dialect.DeleteSql(PrivateSave)
  fullName: SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
    name: DeleteSql
    nameWithType: Dialect.DeleteSql
    fullName: SuperOffice.Data.Dialect.Dialect.DeleteSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
    name: DeleteSql
    nameWithType: Dialect.DeleteSql
    fullName: SuperOffice.Data.Dialect.Dialect.DeleteSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  commentId: M:SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: UnionSql(TableExpression)
  nameWithType: Dialect.UnionSql(TableExpression)
  fullName: SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
    name: UnionSql
    nameWithType: Dialect.UnionSql
    fullName: SuperOffice.Data.Dialect.Dialect.UnionSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: SuperOffice.Data.SQL.TableExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
    name: UnionSql
    nameWithType: Dialect.UnionSql
    fullName: SuperOffice.Data.Dialect.Dialect.UnionSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: SuperOffice.Data.SQL.TableExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  commentId: M:SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: PreParseUnion(TableExpression)
  nameWithType: Dialect.PreParseUnion(TableExpression)
  fullName: SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
    name: PreParseUnion
    nameWithType: Dialect.PreParseUnion
    fullName: SuperOffice.Data.Dialect.Dialect.PreParseUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: SuperOffice.Data.SQL.TableExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
    name: PreParseUnion
    nameWithType: Dialect.PreParseUnion
    fullName: SuperOffice.Data.Dialect.Dialect.PreParseUnion
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: SuperOffice.Data.SQL.TableExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DifferenceSql(TableExpression)
  nameWithType: Dialect.DifferenceSql(TableExpression)
  fullName: SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
    name: DifferenceSql
    nameWithType: Dialect.DifferenceSql
    fullName: SuperOffice.Data.Dialect.Dialect.DifferenceSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: SuperOffice.Data.SQL.TableExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
    name: DifferenceSql
    nameWithType: Dialect.DifferenceSql
    fullName: SuperOffice.Data.Dialect.Dialect.DifferenceSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableExpression
    name: TableExpression
    nameWithType: TableExpression
    fullName: SuperOffice.Data.SQL.TableExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GenerateSql(SqlCommand)
  nameWithType: Dialect.GenerateSql(SqlCommand)
  fullName: SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
    name: GenerateSql
    nameWithType: Dialect.GenerateSql
    fullName: SuperOffice.Data.Dialect.Dialect.GenerateSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
    name: GenerateSql
    nameWithType: Dialect.GenerateSql
    fullName: SuperOffice.Data.Dialect.Dialect.GenerateSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: FieldIsClob(Argument)
  nameWithType: Dialect.FieldIsClob(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
    name: FieldIsClob
    nameWithType: Dialect.FieldIsClob
    fullName: SuperOffice.Data.Dialect.Dialect.FieldIsClob
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
    name: FieldIsClob
    nameWithType: Dialect.FieldIsClob
    fullName: SuperOffice.Data.Dialect.Dialect.FieldIsClob
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: FieldIsString(Argument)
  nameWithType: Dialect.FieldIsString(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
    name: FieldIsString
    nameWithType: Dialect.FieldIsString
    fullName: SuperOffice.Data.Dialect.Dialect.FieldIsString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
    name: FieldIsString
    nameWithType: Dialect.FieldIsString
    fullName: SuperOffice.Data.Dialect.Dialect.FieldIsString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetName(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetName(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetName
    nameWithType: Dialect.DataReaderGetName
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetName
    nameWithType: Dialect.DataReaderGetName
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetDataTypeName(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetDataTypeName(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDataTypeName
    nameWithType: Dialect.DataReaderGetDataTypeName
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDataTypeName
    nameWithType: Dialect.DataReaderGetDataTypeName
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetFieldType(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetFieldType(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetFieldType
    nameWithType: Dialect.DataReaderGetFieldType
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetFieldType
    nameWithType: Dialect.DataReaderGetFieldType
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetValue(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetValue(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetValue
    nameWithType: Dialect.DataReaderGetValue
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetValue
    nameWithType: Dialect.DataReaderGetValue
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetOrdinal(SoDataReader, IDataReader, String)
  nameWithType: Dialect.DataReaderGetOrdinal(SoDataReader, IDataReader, String)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
    name: DataReaderGetOrdinal
    nameWithType: Dialect.DataReaderGetOrdinal
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
    name: DataReaderGetOrdinal
    nameWithType: Dialect.DataReaderGetOrdinal
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetItem(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetItem(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetItem
    nameWithType: Dialect.DataReaderGetItem
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetItem
    nameWithType: Dialect.DataReaderGetItem
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetNullValue(SoDataReader, Int32)
  nameWithType: Dialect.DataReaderGetNullValue(SoDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
    name: DataReaderGetNullValue
    nameWithType: Dialect.DataReaderGetNullValue
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
    name: DataReaderGetNullValue
    nameWithType: Dialect.DataReaderGetNullValue
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetBoolean(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetBoolean(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetBoolean
    nameWithType: Dialect.DataReaderGetBoolean
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetBoolean
    nameWithType: Dialect.DataReaderGetBoolean
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetByte(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetByte(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetByte
    nameWithType: Dialect.DataReaderGetByte
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetByte
    nameWithType: Dialect.DataReaderGetByte
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetBytes(SoDataReader, IDataReader, Int32, Int64, Byte[], Int32, Int32)
  nameWithType: Dialect.DataReaderGetBytes(SoDataReader, IDataReader, Int32, Int64, Byte[], Int32, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  nameWithType.vb: Dialect.DataReaderGetBytes(SoDataReader, IDataReader, Int32, Int64, Byte(), Int32, Int32)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  name.vb: DataReaderGetBytes(SoDataReader, IDataReader, Int32, Int64, Byte(), Int32, Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: DataReaderGetBytes
    nameWithType: Dialect.DataReaderGetBytes
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
    name: DataReaderGetBytes
    nameWithType: Dialect.DataReaderGetBytes
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetChar(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetChar(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetChar
    nameWithType: Dialect.DataReaderGetChar
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetChar
    nameWithType: Dialect.DataReaderGetChar
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetChars(SoDataReader, IDataReader, Int32, Int64, Char[], Int32, Int32)
  nameWithType: Dialect.DataReaderGetChars(SoDataReader, IDataReader, Int32, Int64, Char[], Int32, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  nameWithType.vb: Dialect.DataReaderGetChars(SoDataReader, IDataReader, Int32, Int64, Char(), Int32, Int32)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  name.vb: DataReaderGetChars(SoDataReader, IDataReader, Int32, Int64, Char(), Int32, Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: DataReaderGetChars
    nameWithType: Dialect.DataReaderGetChars
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
    name: DataReaderGetChars
    nameWithType: Dialect.DataReaderGetChars
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetGuid(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetGuid(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetGuid
    nameWithType: Dialect.DataReaderGetGuid
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetGuid
    nameWithType: Dialect.DataReaderGetGuid
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetInt16(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetInt16(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt16
    nameWithType: Dialect.DataReaderGetInt16
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt16
    nameWithType: Dialect.DataReaderGetInt16
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetInt32(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetInt32(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt32
    nameWithType: Dialect.DataReaderGetInt32
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt32
    nameWithType: Dialect.DataReaderGetInt32
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetInt32Array(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetInt32Array(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt32Array
    nameWithType: Dialect.DataReaderGetInt32Array
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt32Array
    nameWithType: Dialect.DataReaderGetInt32Array
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetInt64(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetInt64(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt64
    nameWithType: Dialect.DataReaderGetInt64
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetInt64
    nameWithType: Dialect.DataReaderGetInt64
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetFloat(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetFloat(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetFloat
    nameWithType: Dialect.DataReaderGetFloat
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetFloat
    nameWithType: Dialect.DataReaderGetFloat
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetDouble(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetDouble(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDouble
    nameWithType: Dialect.DataReaderGetDouble
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDouble
    nameWithType: Dialect.DataReaderGetDouble
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetString(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetString(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetString
    nameWithType: Dialect.DataReaderGetString
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetString
    nameWithType: Dialect.DataReaderGetString
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetDecimal(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetDecimal(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDecimal
    nameWithType: Dialect.DataReaderGetDecimal
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDecimal
    nameWithType: Dialect.DataReaderGetDecimal
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetDateTime(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetDateTime(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDateTime
    nameWithType: Dialect.DataReaderGetDateTime
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetDateTime
    nameWithType: Dialect.DataReaderGetDateTime
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderGetData(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderGetData(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetData
    nameWithType: Dialect.DataReaderGetData
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderGetData
    nameWithType: Dialect.DataReaderGetData
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DataReaderIsDBNull(SoDataReader, IDataReader, Int32)
  nameWithType: Dialect.DataReaderIsDBNull(SoDataReader, IDataReader, Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader, System.Data.IDataReader, System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderIsDBNull
    nameWithType: Dialect.DataReaderIsDBNull
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
    name: DataReaderIsDBNull
    nameWithType: Dialect.DataReaderIsDBNull
    fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IDataReader
    name: IDataReader
    nameWithType: IDataReader
    fullName: System.Data.IDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: IntToSingleWord(Int32)
  nameWithType: Dialect.IntToSingleWord(Int32)
  fullName: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
    name: IntToSingleWord
    nameWithType: Dialect.IntToSingleWord
    fullName: SuperOffice.Data.Dialect.Dialect.IntToSingleWord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
    name: IntToSingleWord
    nameWithType: Dialect.IntToSingleWord
    fullName: SuperOffice.Data.Dialect.Dialect.IntToSingleWord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: IntArrayToWordString(Int32[])
  nameWithType: Dialect.IntArrayToWordString(Int32[])
  fullName: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  nameWithType.vb: Dialect.IntArrayToWordString(Int32())
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32())
  name.vb: IntArrayToWordString(Int32())
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
    name: IntArrayToWordString
    nameWithType: Dialect.IntArrayToWordString
    fullName: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
    name: IntArrayToWordString
    nameWithType: Dialect.IntArrayToWordString
    fullName: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: IntFromSingleWord(String)
  nameWithType: Dialect.IntFromSingleWord(String)
  fullName: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
    name: IntFromSingleWord
    nameWithType: Dialect.IntFromSingleWord
    fullName: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
    name: IntFromSingleWord
    nameWithType: Dialect.IntFromSingleWord
    fullName: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: IntArrayFromWordString(String)
  nameWithType: Dialect.IntArrayFromWordString(String)
  fullName: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
    name: IntArrayFromWordString
    nameWithType: Dialect.IntArrayFromWordString
    fullName: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
    name: IntArrayFromWordString
    nameWithType: Dialect.IntArrayFromWordString
    fullName: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetIsolationLevel(IsolationLevel)
  nameWithType: Dialect.GetIsolationLevel(IsolationLevel)
  fullName: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
    name: GetIsolationLevel
    nameWithType: Dialect.GetIsolationLevel
    fullName: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
    name: GetIsolationLevel
    nameWithType: Dialect.GetIsolationLevel
    fullName: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  commentId: P:SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: CaseSensitiveDatabase
  nameWithType: Dialect.CaseSensitiveDatabase
  fullName: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
- uid: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  commentId: P:SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: BlockUpperInOrderBy
  nameWithType: Dialect.BlockUpperInOrderBy
  fullName: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
- uid: SuperOffice.Data.Dialect.Dialect.MaxInSize
  commentId: P:SuperOffice.Data.Dialect.Dialect.MaxInSize
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: MaxInSize
  nameWithType: Dialect.MaxInSize
  fullName: SuperOffice.Data.Dialect.Dialect.MaxInSize
- uid: SuperOffice.Data.Dialect.Dialect.Tables
  commentId: P:SuperOffice.Data.Dialect.Dialect.Tables
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: Tables
  nameWithType: Dialect.Tables
  fullName: SuperOffice.Data.Dialect.Dialect.Tables
- uid: SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  commentId: P:SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ReturnDBFields
  nameWithType: Dialect.ReturnDBFields
  fullName: SuperOffice.Data.Dialect.Dialect.ReturnDBFields
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: HasAliasOnSelect
  nameWithType: Dialect.HasAliasOnSelect
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
- uid: SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  commentId: P:SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: CurrentSqlType
  nameWithType: Dialect.CurrentSqlType
  fullName: SuperOffice.Data.Dialect.Dialect.CurrentSqlType
- uid: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  commentId: P:SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: CurrentOuterSqlType
  nameWithType: Dialect.CurrentOuterSqlType
  fullName: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
- uid: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  commentId: P:SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ReturnFieldsIndexer
  nameWithType: Dialect.ReturnFieldsIndexer
  fullName: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
- uid: SuperOffice.Data.Dialect.Dialect.VarcharType
  commentId: P:SuperOffice.Data.Dialect.Dialect.VarcharType
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: VarcharType
  nameWithType: Dialect.VarcharType
  fullName: SuperOffice.Data.Dialect.Dialect.VarcharType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SqlServerCommon, To>()
  nameWithType: EnumUtil.MapEnums<SqlServerCommon, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.SqlServerCommon, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SqlServerCommon, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.SqlServerCommon, To)()
  name.vb: MapEnums(Of SqlServerCommon, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SqlServerCommon, To>
    nameWithType: EnumUtil.MapEnums<SqlServerCommon, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.SqlServerCommon, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SqlServerCommon, To)
    nameWithType: EnumUtil.MapEnums(Of SqlServerCommon, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.SqlServerCommon, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SqlServerCommon, To>()
  nameWithType: Converters.MapEnums<SqlServerCommon, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.SqlServerCommon, To>()
  nameWithType.vb: Converters.MapEnums(Of SqlServerCommon, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.SqlServerCommon, To)()
  name.vb: MapEnums(Of SqlServerCommon, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SqlServerCommon, To>
    nameWithType: Converters.MapEnums<SqlServerCommon, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.SqlServerCommon, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SqlServerCommon, To)
    nameWithType: Converters.MapEnums(Of SqlServerCommon, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.SqlServerCommon, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetOrderbyCollationHint()
  nameWithType: Dialect.GetOrderbyCollationHint()
  fullName: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint()
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
    name: GetOrderbyCollationHint
    nameWithType: Dialect.GetOrderbyCollationHint
    fullName: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
    name: GetOrderbyCollationHint
    nameWithType: Dialect.GetOrderbyCollationHint
    fullName: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint
  isExternal: true
  name: GetOrderbyCollationHint
  nameWithType: SqlServerCommon.GetOrderbyCollationHint
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.GetOrderbyCollationHint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ComposeSelect(String, String, String, String, StringBuilder, PrivateSelect)
  nameWithType: Dialect.ComposeSelect(String, String, String, String, StringBuilder, PrivateSelect)
  fullName: SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String, System.String, System.String, System.String, System.Text.StringBuilder, SuperOffice.Data.SQL.PrivateSelect)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
    name: ComposeSelect
    nameWithType: Dialect.ComposeSelect
    fullName: SuperOffice.Data.Dialect.Dialect.ComposeSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
    name: ComposeSelect
    nameWithType: Dialect.ComposeSelect
    fullName: SuperOffice.Data.Dialect.Dialect.ComposeSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.StringBuilder
    name: StringBuilder
    nameWithType: StringBuilder
    fullName: System.Text.StringBuilder
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSelect
    name: PrivateSelect
    nameWithType: PrivateSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect
  isExternal: true
  name: ComposeSelect
  nameWithType: SqlServerCommon.ComposeSelect
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ComposeSelect
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: SuperOffice.Data.SQL.PrivateSelect
  commentId: T:SuperOffice.Data.SQL.PrivateSelect
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSelect
  nameWithType: PrivateSelect
  fullName: SuperOffice.Data.SQL.PrivateSelect
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(FieldInfo)
  nameWithType: Dialect.ToSql(FieldInfo)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ToSql*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.ToSql
  isExternal: true
  name: ToSql
  nameWithType: SqlServerCommon.ToSql
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ToSql
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Like)
  nameWithType: Dialect.ToSql(Like)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Like
    name: Like
    nameWithType: Like
    fullName: SuperOffice.Data.SQL.Like
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Like
    name: Like
    nameWithType: Like
    fullName: SuperOffice.Data.SQL.Like
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Like
  commentId: T:SuperOffice.Data.SQL.Like
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Like
  nameWithType: Like
  fullName: SuperOffice.Data.SQL.Like
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Equal)
  nameWithType: Dialect.ToSql(Equal)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Equal
    name: Equal
    nameWithType: Equal
    fullName: SuperOffice.Data.SQL.Equal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Equal
    name: Equal
    nameWithType: Equal
    fullName: SuperOffice.Data.SQL.Equal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Equal
  commentId: T:SuperOffice.Data.SQL.Equal
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Equal
  nameWithType: Equal
  fullName: SuperOffice.Data.SQL.Equal
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(UnEqual)
  nameWithType: Dialect.ToSql(UnEqual)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UnEqual
    name: UnEqual
    nameWithType: UnEqual
    fullName: SuperOffice.Data.SQL.UnEqual
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UnEqual
    name: UnEqual
    nameWithType: UnEqual
    fullName: SuperOffice.Data.SQL.UnEqual
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.UnEqual
  commentId: T:SuperOffice.Data.SQL.UnEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: UnEqual
  nameWithType: UnEqual
  fullName: SuperOffice.Data.SQL.UnEqual
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(GreaterThan)
  nameWithType: Dialect.ToSql(GreaterThan)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.GreaterThan
    name: GreaterThan
    nameWithType: GreaterThan
    fullName: SuperOffice.Data.SQL.GreaterThan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.GreaterThan
    name: GreaterThan
    nameWithType: GreaterThan
    fullName: SuperOffice.Data.SQL.GreaterThan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.GreaterThan
  commentId: T:SuperOffice.Data.SQL.GreaterThan
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: GreaterThan
  nameWithType: GreaterThan
  fullName: SuperOffice.Data.SQL.GreaterThan
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(GreaterThanOrEqual)
  nameWithType: Dialect.ToSql(GreaterThanOrEqual)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.GreaterThanOrEqual
    name: GreaterThanOrEqual
    nameWithType: GreaterThanOrEqual
    fullName: SuperOffice.Data.SQL.GreaterThanOrEqual
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.GreaterThanOrEqual
    name: GreaterThanOrEqual
    nameWithType: GreaterThanOrEqual
    fullName: SuperOffice.Data.SQL.GreaterThanOrEqual
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.GreaterThanOrEqual
  commentId: T:SuperOffice.Data.SQL.GreaterThanOrEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: GreaterThanOrEqual
  nameWithType: GreaterThanOrEqual
  fullName: SuperOffice.Data.SQL.GreaterThanOrEqual
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(LessThan)
  nameWithType: Dialect.ToSql(LessThan)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.LessThan
    name: LessThan
    nameWithType: LessThan
    fullName: SuperOffice.Data.SQL.LessThan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.LessThan
    name: LessThan
    nameWithType: LessThan
    fullName: SuperOffice.Data.SQL.LessThan
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.LessThan
  commentId: T:SuperOffice.Data.SQL.LessThan
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: LessThan
  nameWithType: LessThan
  fullName: SuperOffice.Data.SQL.LessThan
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(LessThanOrEqual)
  nameWithType: Dialect.ToSql(LessThanOrEqual)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.LessThanOrEqual
    name: LessThanOrEqual
    nameWithType: LessThanOrEqual
    fullName: SuperOffice.Data.SQL.LessThanOrEqual
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.LessThanOrEqual
    name: LessThanOrEqual
    nameWithType: LessThanOrEqual
    fullName: SuperOffice.Data.SQL.LessThanOrEqual
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.LessThanOrEqual
  commentId: T:SuperOffice.Data.SQL.LessThanOrEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: LessThanOrEqual
  nameWithType: LessThanOrEqual
  fullName: SuperOffice.Data.SQL.LessThanOrEqual
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Upper)
  nameWithType: Dialect.ToSql(Upper)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Upper
    name: Upper
    nameWithType: Upper
    fullName: SuperOffice.Data.SQL.Upper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Upper
    name: Upper
    nameWithType: Upper
    fullName: SuperOffice.Data.SQL.Upper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Upper
  commentId: T:SuperOffice.Data.SQL.Upper
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Upper
  nameWithType: Upper
  fullName: SuperOffice.Data.SQL.Upper
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Lower)
  nameWithType: Dialect.ToSql(Lower)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Lower
    name: Lower
    nameWithType: Lower
    fullName: SuperOffice.Data.SQL.Lower
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Lower
    name: Lower
    nameWithType: Lower
    fullName: SuperOffice.Data.SQL.Lower
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Lower
  commentId: T:SuperOffice.Data.SQL.Lower
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Lower
  nameWithType: Lower
  fullName: SuperOffice.Data.SQL.Lower
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Trim)
  nameWithType: Dialect.ToSql(Trim)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Trim
    name: Trim
    nameWithType: Trim
    fullName: SuperOffice.Data.SQL.Trim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Trim
    name: Trim
    nameWithType: Trim
    fullName: SuperOffice.Data.SQL.Trim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Trim
  commentId: T:SuperOffice.Data.SQL.Trim
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Trim
  nameWithType: Trim
  fullName: SuperOffice.Data.SQL.Trim
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Year)
  nameWithType: Dialect.ToSql(Year)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Year
    name: Year
    nameWithType: Year
    fullName: SuperOffice.Data.SQL.Year
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Year
    name: Year
    nameWithType: Year
    fullName: SuperOffice.Data.SQL.Year
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Year
  commentId: T:SuperOffice.Data.SQL.Year
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Year
  nameWithType: Year
  fullName: SuperOffice.Data.SQL.Year
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Month)
  nameWithType: Dialect.ToSql(Month)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Month
    name: Month
    nameWithType: Month
    fullName: SuperOffice.Data.SQL.Month
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Month
    name: Month
    nameWithType: Month
    fullName: SuperOffice.Data.SQL.Month
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Month
  commentId: T:SuperOffice.Data.SQL.Month
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Month
  nameWithType: Month
  fullName: SuperOffice.Data.SQL.Month
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Day)
  nameWithType: Dialect.ToSql(Day)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Day
    name: Day
    nameWithType: Day
    fullName: SuperOffice.Data.SQL.Day
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Day
    name: Day
    nameWithType: Day
    fullName: SuperOffice.Data.SQL.Day
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Day
  commentId: T:SuperOffice.Data.SQL.Day
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Day
  nameWithType: Day
  fullName: SuperOffice.Data.SQL.Day
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Hour)
  nameWithType: Dialect.ToSql(Hour)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Hour
    name: Hour
    nameWithType: Hour
    fullName: SuperOffice.Data.SQL.Hour
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Hour
    name: Hour
    nameWithType: Hour
    fullName: SuperOffice.Data.SQL.Hour
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Hour
  commentId: T:SuperOffice.Data.SQL.Hour
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Hour
  nameWithType: Hour
  fullName: SuperOffice.Data.SQL.Hour
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Minute)
  nameWithType: Dialect.ToSql(Minute)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Minute
    name: Minute
    nameWithType: Minute
    fullName: SuperOffice.Data.SQL.Minute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Minute
    name: Minute
    nameWithType: Minute
    fullName: SuperOffice.Data.SQL.Minute
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Minute
  commentId: T:SuperOffice.Data.SQL.Minute
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Minute
  nameWithType: Minute
  fullName: SuperOffice.Data.SQL.Minute
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(Second)
  nameWithType: Dialect.ToSql(Second)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Second
    name: Second
    nameWithType: Second
    fullName: SuperOffice.Data.SQL.Second
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Second
    name: Second
    nameWithType: Second
    fullName: SuperOffice.Data.SQL.Second
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Second
  commentId: T:SuperOffice.Data.SQL.Second
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Second
  nameWithType: Second
  fullName: SuperOffice.Data.SQL.Second
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ConvertToDbString(String)
  nameWithType: Dialect.ConvertToDbString(String)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
    name: ConvertToDbString
    nameWithType: Dialect.ConvertToDbString
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
    name: ConvertToDbString
    nameWithType: Dialect.ConvertToDbString
    fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString
  isExternal: true
  name: ConvertToDbString
  nameWithType: SqlServerCommon.ConvertToDbString
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.ConvertToDbString
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(In)
  nameWithType: Dialect.ToSql(In)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.In
    name: In
    nameWithType: In
    fullName: SuperOffice.Data.SQL.In
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.In
    name: In
    nameWithType: In
    fullName: SuperOffice.Data.SQL.In
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.In
  commentId: T:SuperOffice.Data.SQL.In
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: In
  nameWithType: In
  fullName: SuperOffice.Data.SQL.In
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(HasAny)
  nameWithType: Dialect.ToSql(HasAny)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.HasAny
    name: HasAny
    nameWithType: HasAny
    fullName: SuperOffice.Data.SQL.HasAny
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.HasAny
    name: HasAny
    nameWithType: HasAny
    fullName: SuperOffice.Data.SQL.HasAny
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.HasAny
  commentId: T:SuperOffice.Data.SQL.HasAny
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: HasAny
  nameWithType: HasAny
  fullName: SuperOffice.Data.SQL.HasAny
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(HasAll)
  nameWithType: Dialect.ToSql(HasAll)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.HasAll
    name: HasAll
    nameWithType: HasAll
    fullName: SuperOffice.Data.SQL.HasAll
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.HasAll
    name: HasAll
    nameWithType: HasAll
    fullName: SuperOffice.Data.SQL.HasAll
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.HasAll
  commentId: T:SuperOffice.Data.SQL.HasAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: HasAll
  nameWithType: HasAll
  fullName: SuperOffice.Data.SQL.HasAll
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(MissingAny)
  nameWithType: Dialect.ToSql(MissingAny)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.MissingAny
    name: MissingAny
    nameWithType: MissingAny
    fullName: SuperOffice.Data.SQL.MissingAny
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.MissingAny
    name: MissingAny
    nameWithType: MissingAny
    fullName: SuperOffice.Data.SQL.MissingAny
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.MissingAny
  commentId: T:SuperOffice.Data.SQL.MissingAny
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: MissingAny
  nameWithType: MissingAny
  fullName: SuperOffice.Data.SQL.MissingAny
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: ToSql(MissingAll)
  nameWithType: Dialect.ToSql(MissingAll)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.MissingAll
    name: MissingAll
    nameWithType: MissingAll
    fullName: SuperOffice.Data.SQL.MissingAll
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
    name: ToSql
    nameWithType: Dialect.ToSql
    fullName: SuperOffice.Data.Dialect.Dialect.ToSql
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.MissingAll
    name: MissingAll
    nameWithType: MissingAll
    fullName: SuperOffice.Data.SQL.MissingAll
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.MissingAll
  commentId: T:SuperOffice.Data.SQL.MissingAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: MissingAll
  nameWithType: MissingAll
  fullName: SuperOffice.Data.SQL.MissingAll
- uid: SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DateToVarchar(String)
  nameWithType: Dialect.DateToVarchar(String)
  fullName: SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
    name: DateToVarchar
    nameWithType: Dialect.DateToVarchar
    fullName: SuperOffice.Data.Dialect.Dialect.DateToVarchar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
    name: DateToVarchar
    nameWithType: Dialect.DateToVarchar
    fullName: SuperOffice.Data.Dialect.Dialect.DateToVarchar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar
  isExternal: true
  name: DateToVarchar
  nameWithType: SqlServerCommon.DateToVarchar
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.DateToVarchar
- uid: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: TimeToVarchar(String)
  nameWithType: Dialect.TimeToVarchar(String)
  fullName: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
    name: TimeToVarchar
    nameWithType: Dialect.TimeToVarchar
    fullName: SuperOffice.Data.Dialect.Dialect.TimeToVarchar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
    name: TimeToVarchar
    nameWithType: Dialect.TimeToVarchar
    fullName: SuperOffice.Data.Dialect.Dialect.TimeToVarchar
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar
  isExternal: true
  name: TimeToVarchar
  nameWithType: SqlServerCommon.TimeToVarchar
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.TimeToVarchar
- uid: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: GetDefaultTransaction(SoConnection, SqlCommand)
  nameWithType: Dialect.GetDefaultTransaction(SoConnection, SqlCommand)
  fullName: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection, SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
    name: GetDefaultTransaction
    nameWithType: Dialect.GetDefaultTransaction
    fullName: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
    name: GetDefaultTransaction
    nameWithType: Dialect.GetDefaultTransaction
    fullName: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction
  isExternal: true
  name: GetDefaultTransaction
  nameWithType: SqlServerCommon.GetDefaultTransaction
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.GetDefaultTransaction
- uid: SuperOffice.Data.SoConnection
  commentId: T:SuperOffice.Data.SoConnection
  parent: SuperOffice.Data
  isExternal: true
  name: SoConnection
  nameWithType: SoConnection
  fullName: SuperOffice.Data.SoConnection
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SoTransaction
  commentId: T:SuperOffice.Data.SoTransaction
  parent: SuperOffice.Data
  isExternal: true
  name: SoTransaction
  nameWithType: SoTransaction
  fullName: SuperOffice.Data.SoTransaction
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: HasAliasOnDelete
  nameWithType: Dialect.HasAliasOnDelete
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
- uid: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete
  isExternal: true
  name: HasAliasOnDelete
  nameWithType: SqlServerCommon.HasAliasOnDelete
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnDelete
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: HasAliasOnInsert
  nameWithType: Dialect.HasAliasOnInsert
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
- uid: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert
  isExternal: true
  name: HasAliasOnInsert
  nameWithType: SqlServerCommon.HasAliasOnInsert
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnInsert
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: HasAliasOnUpdate
  nameWithType: Dialect.HasAliasOnUpdate
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
- uid: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate
  isExternal: true
  name: HasAliasOnUpdate
  nameWithType: SqlServerCommon.HasAliasOnUpdate
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.HasAliasOnUpdate
- uid: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  commentId: P:SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  name: DefaultConnectionString
  nameWithType: Dialect.DefaultConnectionString
  fullName: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
- uid: SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString*
  commentId: Overload:SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString
  isExternal: true
  name: DefaultConnectionString
  nameWithType: SqlServerCommon.DefaultConnectionString
  fullName: SuperOffice.Data.Dialect.SqlServerCommon.DefaultConnectionString
