### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Administration.SoUser
  commentId: T:SuperOffice.CRM.Administration.SoUser
  id: SoUser
  parent: SuperOffice.CRM.Administration
  children:
  - SuperOffice.CRM.Administration.SoUser.AddCredential(System.String,System.String,System.String)
  - SuperOffice.CRM.Administration.SoUser.AssociateId
  - SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson
  - SuperOffice.CRM.Administration.SoUser.CanValidatePassword
  - SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync(System.String,System.String)
  - SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync(System.Int32,System.Int32)
  - SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment
  - SuperOffice.CRM.Administration.SoUser.CreateNewAsync(System.Int32,SuperOffice.License.UserType,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.Credentials
  - SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo
  - SuperOffice.CRM.Administration.SoUser.CustomFields
  - SuperOffice.CRM.Administration.SoUser.Deleted
  - SuperOffice.CRM.Administration.SoUser.DemandPermission(SuperOffice.CRM.Administration.SoUser.PermissionType)
  - SuperOffice.CRM.Administration.SoUser.EjCategoryIds
  - SuperOffice.CRM.Administration.SoUser.EjUserId
  - SuperOffice.CRM.Administration.SoUser.Ejuser
  - SuperOffice.CRM.Administration.SoUser.ExtraFields
  - SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetCurrentAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetFacadingItems
  - SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetLicenseOwner(System.String)
  - SuperOffice.CRM.Administration.SoUser.GetModuleLicense(System.String)
  - SuperOffice.CRM.Administration.SoUser.GetModuleLicense(System.String,System.String)
  - SuperOffice.CRM.Administration.SoUser.GetModuleLicenses
  - SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.GroupIdx
  - SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal(System.String,System.String@)
  - SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal(System.String,System.String@)
  - SuperOffice.CRM.Administration.SoUser.IsDeleted
  - SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete
  - SuperOffice.CRM.Administration.SoUser.IsOnTravel
  - SuperOffice.CRM.Administration.SoUser.IsPasswordLegal(System.String,System.String@)
  - SuperOffice.CRM.Administration.SoUser.IsPasswordValid(System.String)
  - SuperOffice.CRM.Administration.SoUser.LastLogin
  - SuperOffice.CRM.Administration.SoUser.Lastlogout
  - SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo
  - SuperOffice.CRM.Administration.SoUser.LicenseFieldRight
  - SuperOffice.CRM.Administration.SoUser.Licenses
  - SuperOffice.CRM.Administration.SoUser.LoginRight
  - SuperOffice.CRM.Administration.SoUser.LogonName
  - SuperOffice.CRM.Administration.SoUser.MainTable
  - SuperOffice.CRM.Administration.SoUser.MakeRetired(System.Boolean)
  - SuperOffice.CRM.Administration.SoUser.ManageUserAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.ManageUserAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.NetServerClient
  - SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync
  - SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync
  - SuperOffice.CRM.Administration.SoUser.OnSavedAsync(System.Boolean)
  - SuperOffice.CRM.Administration.SoUser.OtherGroupIds
  - SuperOffice.CRM.Administration.SoUser.PasswordFieldRight
  - SuperOffice.CRM.Administration.SoUser.Person
  - SuperOffice.CRM.Administration.SoUser.PersonId
  - SuperOffice.CRM.Administration.SoUser.PocketClient
  - SuperOffice.CRM.Administration.SoUser.Rank
  - SuperOffice.CRM.Administration.SoUser.RemoveCredential(System.String)
  - SuperOffice.CRM.Administration.SoUser.RemoveLicenses
  - SuperOffice.CRM.Administration.SoUser.RoleIdx
  - SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync
  - SuperOffice.CRM.Administration.SoUser.Sentries
  - SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword
  - SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword(System.Int32)
  - SuperOffice.CRM.Administration.SoUser.SetPassword(System.String)
  - SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync(System.String)
  - SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName(System.String)
  - SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks
  - SuperOffice.CRM.Administration.SoUser.ToString
  - SuperOffice.CRM.Administration.SoUser.Tooltip
  - SuperOffice.CRM.Administration.SoUser.Travel
  - SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo
  - SuperOffice.CRM.Administration.SoUser.UserName
  - SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo
  - SuperOffice.CRM.Administration.SoUser.UserType
  - SuperOffice.CRM.Administration.SoUser.Validate(SuperOffice.CRM.Rows.RowValidator)
  - SuperOffice.CRM.Administration.SoUser.ValidateAsync(System.Collections.Generic.Dictionary{System.String,System.String})
  - SuperOffice.CRM.Administration.SoUser.WebClient
  - SuperOffice.CRM.Administration.SoUser.WinClient
  langs:
  - csharp
  - vb
  name: SoUser
  nameWithType: SoUser
  fullName: SuperOffice.CRM.Administration.SoUser
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: >-
    SuperOffice CRM User Administration.  Use static (VB: shared) methods to to

    instantiate objects.
  remarks: >-
    <p>
    	Only users with administrative privileges is permitted to work
    	with other users than the currently logged on user.  This means
    	that SuperOffice CRM administrators can manage all users.
    </p>

    <p>
    	Named users that does not have administrative privileges (e.g.
    	users that are persons) are only permitted to change their own
    	password.
    </p>

    <p>
    	Anonymous users can not manage own or other users at all.
    </p>

    <p>
    	System users can manage other users, and own user.
    </p>

    <p>
    	Named users, administrators and the system user with the
    	'CanCreateExternalPerson' permission can manage external persons.
    	External persons with this permission can only manage other
    	external persons belonging to the same company.
    </p>
  example: []
  syntax:
    content: 'public sealed class SoUser : NestedPersistFacade, INestedPersist'
    content.vb: Public NotInheritable Class SoUser Inherits NestedPersistFacade Implements INestedPersist
  inheritance:
  - System.Object
  - SuperOffice.Data.NestedPersist
  - SuperOffice.Data.NestedPersistFacade
  implements:
  - SuperOffice.Data.INestedPersist
  inheritedMembers:
  - SuperOffice.Data.NestedPersistFacade.IsDirty
  - SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.Data.NestedPersist.SaveAsync
  - SuperOffice.Data.NestedPersist.IsSaving
  - SuperOffice.Data.NestedPersist.OnElementSaved
  - SuperOffice.Data.NestedPersist.OnElementIdUpdate
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.CRM.Administration.SoUser.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Administration.SoUser.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Administration.SoUser.GetModuleLicenses
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetModuleLicenses
  id: GetModuleLicenses
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetModuleLicenses()
  nameWithType: SoUser.GetModuleLicenses()
  fullName: SuperOffice.CRM.Administration.SoUser.GetModuleLicenses()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Returns all modules, across all license owners. Some are assigned, some are not.
  example: []
  syntax:
    content: public IEnumerable<AssociateModuleLicenseLink> GetModuleLicenses()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.License.AssociateModuleLicenseLink}
      description: Associate License links related to the user.
    content.vb: Public Function GetModuleLicenses() As IEnumerable(Of AssociateModuleLicenseLink)
  overload: SuperOffice.CRM.Administration.SoUser.GetModuleLicenses*
- uid: SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  id: GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetForeignKeyHelperAsync(CancellationToken)
  nameWithType: SoUser.GetForeignKeyHelperAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public Task<RowForeignKeyHelper> GetForeignKeyHelperAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.Util.RowForeignKeyHelper}
    content.vb: Public Function GetForeignKeyHelperAsync(cancellationToken As CancellationToken = Nothing) As Task(Of RowForeignKeyHelper)
  overload: SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync*
- uid: SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync(System.Threading.CancellationToken)
  id: GetDefaultAssociateUserNameAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetDefaultAssociateUserNameAsync(CancellationToken)
  nameWithType: SoUser.GetDefaultAssociateUserNameAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Ask for the default UserName for Associate
  example: []
  syntax:
    content: public Task<string> GetDefaultAssociateUserNameAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: ''
    content.vb: Public Function GetDefaultAssociateUserNameAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync*
- uid: SuperOffice.CRM.Administration.SoUser.CreateNewAsync(System.Int32,SuperOffice.License.UserType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.CreateNewAsync(System.Int32,SuperOffice.License.UserType,System.Boolean,System.Threading.CancellationToken)
  id: CreateNewAsync(System.Int32,SuperOffice.License.UserType,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: CreateNewAsync(int, UserType, bool, CancellationToken)
  nameWithType: SoUser.CreateNewAsync(int, UserType, bool, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.CreateNewAsync(int, SuperOffice.License.UserType, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Create a new user given it's PersonId
  remarks: Administration privileges is required for creating new users.
  example: []
  syntax:
    content: public static Task<SoUser> CreateNewAsync(int personId, UserType userType, bool withDefaultCredentials = false, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: 'Id for the person that is to become a user.  Use null (VB: Nothing) for System and Anonymous users.'
    - id: userType
      type: SuperOffice.License.UserType
    - id: withDefaultCredentials
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser}
      description: A new instance of a user object.  This object needs to be primed with appropriate data before saving
    content.vb: Public Shared Function CreateNewAsync(personId As Integer, userType As UserType, withDefaultCredentials As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of SoUser)
  overload: SuperOffice.CRM.Administration.SoUser.CreateNewAsync*
  nameWithType.vb: SoUser.CreateNewAsync(Integer, UserType, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.CreateNewAsync(Integer, SuperOffice.License.UserType, Boolean, System.Threading.CancellationToken)
  name.vb: CreateNewAsync(Integer, UserType, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.ManageUserAsync(System.Int32,System.Threading.CancellationToken)
  id: ManageUserAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ManageUserAsync(int, CancellationToken)
  nameWithType: SoUser.ManageUserAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Manage a user.
  example: []
  syntax:
    content: public static Task<SoUser> ManageUserAsync(int associateId, CancellationToken cancellationToken = default)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of the user to manage.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser}
      description: The user.
    content.vb: Public Shared Function ManageUserAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SoUser)
  overload: SuperOffice.CRM.Administration.SoUser.ManageUserAsync*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: If the user is of a wrong  <xref href="SuperOffice.CRM.Administration.SoUser.UserType" data-throw-if-not-resolved="false"></xref> or in any way does not have permission to manage the given user, the exception is thrown.
  nameWithType.vb: SoUser.ManageUserAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ManageUserAsync(Integer, System.Threading.CancellationToken)
  name.vb: ManageUserAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.ManageUserAsync(System.String,System.Threading.CancellationToken)
  id: ManageUserAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ManageUserAsync(string, CancellationToken)
  nameWithType: SoUser.ManageUserAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Manage a user.
  example: []
  syntax:
    content: public static Task<SoUser> ManageUserAsync(string associateName, CancellationToken cancellationToken = default)
    parameters:
    - id: associateName
      type: System.String
      description: UserName <xref href="SuperOffice.CRM.Data.AssociateTableInfo.Name" data-throw-if-not-resolved="false"></xref> or <xref href="SuperOffice.CRM.Data.AssociateTableInfo.UserName" data-throw-if-not-resolved="false"></xref> of the user to manage.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser}
      description: SoUser object for the user.
    content.vb: Public Shared Function ManageUserAsync(associateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of SoUser)
  overload: SuperOffice.CRM.Administration.SoUser.ManageUserAsync*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: If the user is of a wrong  <xref href="SuperOffice.CRM.Administration.SoUser.UserType" data-throw-if-not-resolved="false"></xref> or in any way does not have permission to manage the given user, the exception is thrown.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if associateName does not have a value.
  nameWithType.vb: SoUser.ManageUserAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ManageUserAsync(String, System.Threading.CancellationToken)
  name.vb: ManageUserAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  id: ManageUserFromPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ManageUserFromPersonIdAsync(int, CancellationToken)
  nameWithType: SoUser.ManageUserFromPersonIdAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public static Task<SoUser[]> ManageUserFromPersonIdAsync(int personId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser[]}
    content.vb: Public Shared Function ManageUserFromPersonIdAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SoUser())
  overload: SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync*
  nameWithType.vb: SoUser.ManageUserFromPersonIdAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync(Integer, System.Threading.CancellationToken)
  name.vb: ManageUserFromPersonIdAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  id: ManageUserFromEjUserIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ManageUserFromEjUserIdAsync(int, CancellationToken)
  nameWithType: SoUser.ManageUserFromEjUserIdAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public static Task<SoUser[]> ManageUserFromEjUserIdAsync(int ejUserId, CancellationToken cancellationToken = default)
    parameters:
    - id: ejUserId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser[]}
    content.vb: Public Shared Function ManageUserFromEjUserIdAsync(ejUserId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of SoUser())
  overload: SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync*
  nameWithType.vb: SoUser.ManageUserFromEjUserIdAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync(Integer, System.Threading.CancellationToken)
  name.vb: ManageUserFromEjUserIdAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.GetCurrentAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetCurrentAsync(System.Threading.CancellationToken)
  id: GetCurrentAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetCurrentAsync(CancellationToken)
  nameWithType: SoUser.GetCurrentAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetCurrentAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Manage the current user. Must be logged in. Can't manage users anonymously.
  remarks: Only named users are permitted to manage their own user.  Other kinds of users needs to be maintained by an administrator.
  example: []
  syntax:
    content: public static Task<SoUser> GetCurrentAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser}
      description: SoUser object for the current user.
    content.vb: Public Shared Function GetCurrentAsync(cancellationToken As CancellationToken = Nothing) As Task(Of SoUser)
  overload: SuperOffice.CRM.Administration.SoUser.GetCurrentAsync*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: The operation requires the logged on user to have an <xref href="SuperOffice.CRM.Administration.SoUser.UserType" data-throw-if-not-resolved="false"></xref> of Employee, ExternalPerson.
- uid: SuperOffice.CRM.Administration.SoUser.ToString
  commentId: M:SuperOffice.CRM.Administration.SoUser.ToString
  id: ToString
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoUser.ToString()
  fullName: SuperOffice.CRM.Administration.SoUser.ToString()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.Administration.SoUser.ToString*
- uid: SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  id: SetPersonIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetPersonIdAsync(int, CancellationToken)
  nameWithType: SoUser.SetPersonIdAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public Task SetPersonIdAsync(int id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetPersonIdAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync*
  nameWithType.vb: SoUser.SetPersonIdAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync(Integer, System.Threading.CancellationToken)
  name.vb: SetPersonIdAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.GetLicenseOwner(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetLicenseOwner(System.String)
  id: GetLicenseOwner(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetLicenseOwner(string)
  nameWithType: SoUser.GetLicenseOwner(string)
  fullName: SuperOffice.CRM.Administration.SoUser.GetLicenseOwner(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get details on a module owner.
  example: []
  syntax:
    content: public AssociateModuleLicenseOwner GetLicenseOwner(string owner)
    parameters:
    - id: owner
      type: System.String
      description: Name of the module owner.
    return:
      type: SuperOffice.License.AssociateModuleLicenseOwner
      description: Details on a module owner.  Null (VB Nothing) is returned if the module owner is not available.
    content.vb: Public Function GetLicenseOwner(owner As String) As AssociateModuleLicenseOwner
  overload: SuperOffice.CRM.Administration.SoUser.GetLicenseOwner*
  nameWithType.vb: SoUser.GetLicenseOwner(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.GetLicenseOwner(String)
  name.vb: GetLicenseOwner(String)
- uid: SuperOffice.CRM.Administration.SoUser.GetModuleLicense(System.String,System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetModuleLicense(System.String,System.String)
  id: GetModuleLicense(System.String,System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetModuleLicense(string, string)
  nameWithType: SoUser.GetModuleLicense(string, string)
  fullName: SuperOffice.CRM.Administration.SoUser.GetModuleLicense(string, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get details on a module license link. i.e. Returns only user licenses.
  example: []
  syntax:
    content: public AssociateModuleLicenseLink GetModuleLicense(string owner, string module)
    parameters:
    - id: owner
      type: System.String
      description: Name of the module owner.
    - id: module
      type: System.String
      description: Name of the module license
    return:
      type: SuperOffice.License.AssociateModuleLicenseLink
      description: Details on a module license link.  Null (VB Nothing) is returned if the module license is not available.
    content.vb: Public Function GetModuleLicense(owner As String, [module] As String) As AssociateModuleLicenseLink
  overload: SuperOffice.CRM.Administration.SoUser.GetModuleLicense*
  nameWithType.vb: SoUser.GetModuleLicense(String, String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.GetModuleLicense(String, String)
  name.vb: GetModuleLicense(String, String)
- uid: SuperOffice.CRM.Administration.SoUser.GetModuleLicense(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetModuleLicense(System.String)
  id: GetModuleLicense(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetModuleLicense(string)
  nameWithType: SoUser.GetModuleLicense(string)
  fullName: SuperOffice.CRM.Administration.SoUser.GetModuleLicense(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get details on a module license link. i.e. Returns only user licenses.
  example: []
  syntax:
    content: public AssociateModuleLicenseLink GetModuleLicense(string fullName)
    parameters:
    - id: fullName
      type: System.String
      description: Full name of the license formatted like [OwnerName].[LicenseName].
    return:
      type: SuperOffice.License.AssociateModuleLicenseLink
      description: Details on a module license link.  Null (VB Nothing) is returned if the module license is not available.
    content.vb: Public Function GetModuleLicense(fullName As String) As AssociateModuleLicenseLink
  overload: SuperOffice.CRM.Administration.SoUser.GetModuleLicense*
  nameWithType.vb: SoUser.GetModuleLicense(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.GetModuleLicense(String)
  name.vb: GetModuleLicense(String)
- uid: SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  id: SetUserTypeAsync(SuperOffice.License.UserType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetUserTypeAsync(UserType, CancellationToken)
  nameWithType: SoUser.SetUserTypeAsync(UserType, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync(SuperOffice.License.UserType, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public Task SetUserTypeAsync(UserType userType, CancellationToken cancellationToken = default)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetUserTypeAsync(userType As UserType, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync*
- uid: SuperOffice.CRM.Administration.SoUser.SetPassword(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetPassword(System.String)
  id: SetPassword(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetPassword(string)
  nameWithType: SoUser.SetPassword(string)
  fullName: SuperOffice.CRM.Administration.SoUser.SetPassword(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Set the password for a user.
  remarks: This method requires administration priviledges.
  example: []
  syntax:
    content: public void SetPassword(string password)
    parameters:
    - id: password
      type: System.String
      description: The password for the user
    content.vb: Public Sub SetPassword(password As String)
  overload: SuperOffice.CRM.Administration.SoUser.SetPassword*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: If the user does not have required permissions.
  nameWithType.vb: SoUser.SetPassword(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.SetPassword(String)
  name.vb: SetPassword(String)
- uid: SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync(System.Threading.CancellationToken)
  id: GetCanChangePasswordAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetCanChangePasswordAsync(CancellationToken)
  nameWithType: SoUser.GetCanChangePasswordAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Is this plugin able to change password for the current
  remarks: True if the plugin is able to change password.
  example: []
  syntax:
    content: public Task<bool> GetCanChangePasswordAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function GetCanChangePasswordAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync*
- uid: SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync(System.Threading.CancellationToken)
  id: GetSupportedChangePasswordTypesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetSupportedChangePasswordTypesAsync(CancellationToken)
  nameWithType: SoUser.GetSupportedChangePasswordTypesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get the supported change password methods
  example: []
  syntax:
    content: public Task<ChangePasswordType[]> GetSupportedChangePasswordTypesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.ChangePasswordType[]}
      description: ''
    content.vb: Public Function GetSupportedChangePasswordTypesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ChangePasswordType())
  overload: SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync*
- uid: SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync(System.String,System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync(System.String,System.String)
  id: ChangePasswordAsync(System.String,System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ChangePasswordAsync(string, string)
  nameWithType: SoUser.ChangePasswordAsync(string, string)
  fullName: SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync(string, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Changes the account password from the old password to the new password.
  example: []
  syntax:
    content: public Task ChangePasswordAsync(string oldPassword, string newPassword)
    parameters:
    - id: oldPassword
      type: System.String
      description: The old password to change from.  This must be the current calid password.
    - id: newPassword
      type: System.String
      description: The new password to change to.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangePasswordAsync(oldPassword As String, newPassword As String) As Task
  overload: SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync*
  nameWithType.vb: SoUser.ChangePasswordAsync(String, String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync(String, String)
  name.vb: ChangePasswordAsync(String, String)
- uid: SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync(System.Threading.CancellationToken)
  id: GetCanSendChangePasswordMailAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetCanSendChangePasswordMailAsync(CancellationToken)
  nameWithType: SoUser.GetCanSendChangePasswordMailAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Is this plugin able to send a change password email to the user
  remarks: True if the plugin is able to send the email.
  example: []
  syntax:
    content: public Task<bool> GetCanSendChangePasswordMailAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function GetCanSendChangePasswordMailAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync*
- uid: SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync
  commentId: M:SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync
  id: SendChangePasswordMailAsync
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SendChangePasswordMailAsync()
  nameWithType: SoUser.SendChangePasswordMailAsync()
  fullName: SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public Task SendChangePasswordMailAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SendChangePasswordMailAsync() As Task
  overload: SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync*
- uid: SuperOffice.CRM.Administration.SoUser.IsPasswordValid(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.IsPasswordValid(System.String)
  id: IsPasswordValid(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsPasswordValid(string)
  nameWithType: SoUser.IsPasswordValid(string)
  fullName: SuperOffice.CRM.Administration.SoUser.IsPasswordValid(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Check if password is valid.
  example: []
  syntax:
    content: public bool IsPasswordValid(string password)
    parameters:
    - id: password
      type: System.String
      description: The password to check if if it is valid (e.g. that means that this is the current password.)
    return:
      type: System.Boolean
      description: True if the right password is passed in.
    content.vb: Public Function IsPasswordValid(password As String) As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.IsPasswordValid*
  nameWithType.vb: SoUser.IsPasswordValid(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.IsPasswordValid(String)
  name.vb: IsPasswordValid(String)
- uid: SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal(System.String,System.String@)
  commentId: M:SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal(System.String,System.String@)
  id: IsAssociateNameLegal(System.String,System.String@)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsAssociateNameLegal(string, out string)
  nameWithType: SoUser.IsAssociateNameLegal(string, out string)
  fullName: SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal(string, out string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public bool IsAssociateNameLegal(string associateName, out string reason)
    parameters:
    - id: associateName
      type: System.String
    - id: reason
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsAssociateNameLegal(associateName As String, reason As String) As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal*
  nameWithType.vb: SoUser.IsAssociateNameLegal(String, String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal(String, String)
  name.vb: IsAssociateNameLegal(String, String)
- uid: SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal(System.String,System.String@)
  commentId: M:SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal(System.String,System.String@)
  id: IsAssociateUserNameLegal(System.String,System.String@)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsAssociateUserNameLegal(string, out string)
  nameWithType: SoUser.IsAssociateUserNameLegal(string, out string)
  fullName: SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal(string, out string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public bool IsAssociateUserNameLegal(string associateUserName, out string reason)
    parameters:
    - id: associateUserName
      type: System.String
    - id: reason
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsAssociateUserNameLegal(associateUserName As String, reason As String) As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal*
  nameWithType.vb: SoUser.IsAssociateUserNameLegal(String, String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal(String, String)
  name.vb: IsAssociateUserNameLegal(String, String)
- uid: SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName(System.String)
  id: SetValidAssociateUserName(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetValidAssociateUserName(string)
  nameWithType: SoUser.SetValidAssociateUserName(string)
  fullName: SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public string SetValidAssociateUserName(string associateUserName)
    parameters:
    - id: associateUserName
      type: System.String
    return:
      type: System.String
    content.vb: Public Function SetValidAssociateUserName(associateUserName As String) As String
  overload: SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName*
  nameWithType.vb: SoUser.SetValidAssociateUserName(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName(String)
  name.vb: SetValidAssociateUserName(String)
- uid: SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync(System.String)
  id: SetValidAssociateNameAsync(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetValidAssociateNameAsync(string)
  nameWithType: SoUser.SetValidAssociateNameAsync(string)
  fullName: SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Assign a user name and make sure it is valid.
  example: []
  syntax:
    content: public Task<string> SetValidAssociateNameAsync(string associateName)
    parameters:
    - id: associateName
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The valid user name.
    content.vb: Public Function SetValidAssociateNameAsync(associateName As String) As Task(Of String)
  overload: SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync*
  nameWithType.vb: SoUser.SetValidAssociateNameAsync(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync(String)
  name.vb: SetValidAssociateNameAsync(String)
- uid: SuperOffice.CRM.Administration.SoUser.IsPasswordLegal(System.String,System.String@)
  commentId: M:SuperOffice.CRM.Administration.SoUser.IsPasswordLegal(System.String,System.String@)
  id: IsPasswordLegal(System.String,System.String@)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsPasswordLegal(string, out string)
  nameWithType: SoUser.IsPasswordLegal(string, out string)
  fullName: SuperOffice.CRM.Administration.SoUser.IsPasswordLegal(string, out string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public bool IsPasswordLegal(string password, out string reason)
    parameters:
    - id: password
      type: System.String
    - id: reason
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function IsPasswordLegal(password As String, reason As String) As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.IsPasswordLegal*
  nameWithType.vb: SoUser.IsPasswordLegal(String, String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.IsPasswordLegal(String, String)
  name.vb: IsPasswordLegal(String, String)
- uid: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword
  id: SetGeneratedPassword
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetGeneratedPassword()
  nameWithType: SoUser.SetGeneratedPassword()
  fullName: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Generate a new password and assign it to the user.
  example: []
  syntax:
    content: public string SetGeneratedPassword()
    return:
      type: System.String
      description: The newly generated password.
    content.vb: Public Function SetGeneratedPassword() As String
  overload: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: If the user does not have required permissions.
- uid: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword(System.Int32)
  commentId: M:SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword(System.Int32)
  id: SetGeneratedPassword(System.Int32)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SetGeneratedPassword(int)
  nameWithType: SoUser.SetGeneratedPassword(int)
  fullName: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Generate a new password and assign it to the user.
  example: []
  syntax:
    content: public string SetGeneratedPassword(int length)
    parameters:
    - id: length
      type: System.Int32
      description: Ldength of the new password to generate.
    return:
      type: System.String
      description: The newly generated password.
    content.vb: Public Function SetGeneratedPassword(length As Integer) As String
  overload: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: If the user does not have required permissions.
  nameWithType.vb: SoUser.SetGeneratedPassword(Integer)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword(Integer)
  name.vb: SetGeneratedPassword(Integer)
- uid: SuperOffice.CRM.Administration.SoUser.RemoveCredential(System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.RemoveCredential(System.String)
  id: RemoveCredential(System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: RemoveCredential(string)
  nameWithType: SoUser.RemoveCredential(string)
  fullName: SuperOffice.CRM.Administration.SoUser.RemoveCredential(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public void RemoveCredential(string type)
    parameters:
    - id: type
      type: System.String
    content.vb: Public Sub RemoveCredential(type As String)
  overload: SuperOffice.CRM.Administration.SoUser.RemoveCredential*
  nameWithType.vb: SoUser.RemoveCredential(String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.RemoveCredential(String)
  name.vb: RemoveCredential(String)
- uid: SuperOffice.CRM.Administration.SoUser.AddCredential(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Administration.SoUser.AddCredential(System.String,System.String,System.String)
  id: AddCredential(System.String,System.String,System.String)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: AddCredential(string, string, string)
  nameWithType: SoUser.AddCredential(string, string, string)
  fullName: SuperOffice.CRM.Administration.SoUser.AddCredential(string, string, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public void AddCredential(string type, string value, string displayValue)
    parameters:
    - id: type
      type: System.String
    - id: value
      type: System.String
    - id: displayValue
      type: System.String
    content.vb: Public Sub AddCredential(type As String, value As String, displayValue As String)
  overload: SuperOffice.CRM.Administration.SoUser.AddCredential*
  nameWithType.vb: SoUser.AddCredential(String, String, String)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.AddCredential(String, String, String)
  name.vb: AddCredential(String, String, String)
- uid: SuperOffice.CRM.Administration.SoUser.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Administration.SoUser.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: SoUser.Validate(RowValidator)
  fullName: SuperOffice.CRM.Administration.SoUser.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
    content.vb: Public Sub Validate(rowValidator As RowValidator)
  overload: SuperOffice.CRM.Administration.SoUser.Validate*
- uid: SuperOffice.CRM.Administration.SoUser.ValidateAsync(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:SuperOffice.CRM.Administration.SoUser.ValidateAsync(System.Collections.Generic.Dictionary{System.String,System.String})
  id: ValidateAsync(System.Collections.Generic.Dictionary{System.String,System.String})
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ValidateAsync(Dictionary<string, string>)
  nameWithType: SoUser.ValidateAsync(Dictionary<string, string>)
  fullName: SuperOffice.CRM.Administration.SoUser.ValidateAsync(System.Collections.Generic.Dictionary<string, string>)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public Task ValidateAsync(Dictionary<string, string> validator)
    parameters:
    - id: validator
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ValidateAsync(validator As Dictionary(Of String, String)) As Task
  overload: SuperOffice.CRM.Administration.SoUser.ValidateAsync*
  nameWithType.vb: SoUser.ValidateAsync(Dictionary(Of String, String))
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ValidateAsync(System.Collections.Generic.Dictionary(Of String, String))
  name.vb: ValidateAsync(Dictionary(Of String, String))
- uid: SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync(System.Int32,System.Threading.CancellationToken)
  id: FindUsersFromPersonAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: FindUsersFromPersonAsync(int, CancellationToken)
  nameWithType: SoUser.FindUsersFromPersonAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Method for finding associateId's of user providing the PersonId
  example: []
  syntax:
    content: public static Task<int[]> FindUsersFromPersonAsync(int personId, CancellationToken cancellationToken = default)
    parameters:
    - id: personId
      type: System.Int32
      description: PersonId of the user to find
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: AssociateIdd of mathing users.
    content.vb: Public Shared Function FindUsersFromPersonAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer())
  overload: SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync*
  nameWithType.vb: SoUser.FindUsersFromPersonAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync(Integer, System.Threading.CancellationToken)
  name.vb: FindUsersFromPersonAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync(System.Int32,System.Threading.CancellationToken)
  id: FindUsersFromEJUserAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: FindUsersFromEJUserAsync(int, CancellationToken)
  nameWithType: SoUser.FindUsersFromEJUserAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Method for finding associateId's of eJournal users providing the ejUser.Id
  example: []
  syntax:
    content: public static Task<int[]> FindUsersFromEJUserAsync(int ejUserId, CancellationToken cancellationToken = default)
    parameters:
    - id: ejUserId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32[]}
      description: AssociateIdd of matching users.
    content.vb: Public Shared Function FindUsersFromEJUserAsync(ejUserId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer())
  overload: SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync*
  nameWithType.vb: SoUser.FindUsersFromEJUserAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync(Integer, System.Threading.CancellationToken)
  name.vb: FindUsersFromEJUserAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Administration.SoUser.RemoveLicenses
  commentId: M:SuperOffice.CRM.Administration.SoUser.RemoveLicenses
  id: RemoveLicenses
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: RemoveLicenses()
  nameWithType: SoUser.RemoveLicenses()
  fullName: SuperOffice.CRM.Administration.SoUser.RemoveLicenses()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Remove all licenses for given user
  example: []
  syntax:
    content: public void RemoveLicenses()
    content.vb: Public Sub RemoveLicenses()
  overload: SuperOffice.CRM.Administration.SoUser.RemoveLicenses*
- uid: SuperOffice.CRM.Administration.SoUser.MakeRetired(System.Boolean)
  commentId: M:SuperOffice.CRM.Administration.SoUser.MakeRetired(System.Boolean)
  id: MakeRetired(System.Boolean)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: MakeRetired(bool)
  nameWithType: SoUser.MakeRetired(bool)
  fullName: SuperOffice.CRM.Administration.SoUser.MakeRetired(bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Retire the given user, meaning removing all licenses and set the person as retired
  example: []
  syntax:
    content: public void MakeRetired(bool retired)
    parameters:
    - id: retired
      type: System.Boolean
    content.vb: Public Sub MakeRetired(retired As Boolean)
  overload: SuperOffice.CRM.Administration.SoUser.MakeRetired*
  nameWithType.vb: SoUser.MakeRetired(Boolean)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.MakeRetired(Boolean)
  name.vb: MakeRetired(Boolean)
- uid: SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync(System.Int32,System.Int32)
  id: ChangeUserGroupAsync(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ChangeUserGroupAsync(int, int)
  nameWithType: SoUser.ChangeUserGroupAsync(int, int)
  fullName: SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync(int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: This function is called to change membership of one usergroup to another on the user.
  example: []
  syntax:
    content: public Task ChangeUserGroupAsync(int oldGroupId, int newGroupId)
    parameters:
    - id: oldGroupId
      type: System.Int32
    - id: newGroupId
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ChangeUserGroupAsync(oldGroupId As Integer, newGroupId As Integer) As Task
  overload: SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync*
  nameWithType.vb: SoUser.ChangeUserGroupAsync(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync(Integer, Integer)
  name.vb: ChangeUserGroupAsync(Integer, Integer)
- uid: SuperOffice.CRM.Administration.SoUser.DemandPermission(SuperOffice.CRM.Administration.SoUser.PermissionType)
  commentId: M:SuperOffice.CRM.Administration.SoUser.DemandPermission(SuperOffice.CRM.Administration.SoUser.PermissionType)
  id: DemandPermission(SuperOffice.CRM.Administration.SoUser.PermissionType)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: DemandPermission(PermissionType)
  nameWithType: SoUser.DemandPermission(SoUser.PermissionType)
  fullName: SuperOffice.CRM.Administration.SoUser.DemandPermission(SuperOffice.CRM.Administration.SoUser.PermissionType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Check that the current user has the permission.
  example: []
  syntax:
    content: public void DemandPermission(SoUser.PermissionType permissionType)
    parameters:
    - id: permissionType
      type: SuperOffice.CRM.Administration.SoUser.PermissionType
      description: OwnPerson, Administrator, etc
    content.vb: Public Sub DemandPermission(permissionType As SoUser.PermissionType)
  overload: SuperOffice.CRM.Administration.SoUser.DemandPermission*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Exception is thrown if the currently logged in user does not meet the demand for permission.
- uid: SuperOffice.CRM.Administration.SoUser.GetFacadingItems
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetFacadingItems
  id: GetFacadingItems
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetFacadingItems()
  nameWithType: SoUser.GetFacadingItems()
  fullName: SuperOffice.CRM.Administration.SoUser.GetFacadingItems()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Implement this method to expose items that needs to be persisted.
  example: []
  syntax:
    content: protected override IEnumerable<INestedPersist> GetFacadingItems()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
      description: Collection of items that needs to be persisted.
    content.vb: Protected Overrides Function GetFacadingItems() As IEnumerable(Of INestedPersist)
  overridden: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  overload: SuperOffice.CRM.Administration.SoUser.GetFacadingItems*
- uid: SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync
  commentId: M:SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync
  id: OnPreIdUpdateAsync
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: OnPreIdUpdateAsync()
  nameWithType: SoUser.OnPreIdUpdateAsync()
  fullName: SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: >-
    Handle Pre Id Update: Update the implied licenses on the user to match the ExtraInfo "set=..."

    by removing all hidden licenses and then assigned the ones
  example: []
  syntax:
    content: protected override Task OnPreIdUpdateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnPreIdUpdateAsync() As Task
  overridden: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  overload: SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync*
- uid: SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync(System.Threading.CancellationToken)
  id: GetRequestRestrictionBlockersAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GetRequestRestrictionBlockersAsync(CancellationToken)
  nameWithType: SoUser.GetRequestRestrictionBlockersAsync(CancellationToken)
  fullName: SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Return request based reasons for blocking delete of user
  example: []
  syntax:
    content: public Task<string> GetRequestRestrictionBlockersAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'Blank or an error message: "[SR_REQUEST_DEPENDENCY]"'
    content.vb: Public Function GetRequestRestrictionBlockersAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync*
- uid: SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync
  commentId: M:SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync
  id: OnIdUpdateAsync
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: OnIdUpdateAsync()
  nameWithType: SoUser.OnIdUpdateAsync()
  fullName: SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: >-
    Handle Id Update: ensure that associate.ejUserId = ejUser.ejUserId


    Update related objects with correct id's to make sure that relations are consistent

    before saving to the database.
  example: []
  syntax:
    content: protected override Task OnIdUpdateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnIdUpdateAsync() As Task
  overridden: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  overload: SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync*
- uid: SuperOffice.CRM.Administration.SoUser.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Administration.SoUser.OnSavedAsync(System.Boolean)
  id: OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: OnSavedAsync(bool)
  nameWithType: SoUser.OnSavedAsync(bool)
  fullName: SuperOffice.CRM.Administration.SoUser.OnSavedAsync(bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: >-
    Called after the save operation has completed.  A boolean value is passed to

    notify whether or not the save operation succeeded.  The complete save operation

    is rolled back if Save operation failed.
  example: []
  syntax:
    content: protected override Task OnSavedAsync(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: True if the save operation succeeded and false if the save operation failed and rolled back.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnSavedAsync(bSucceeded As Boolean) As Task
  overridden: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  overload: SuperOffice.CRM.Administration.SoUser.OnSavedAsync*
  nameWithType.vb: SoUser.OnSavedAsync(Boolean)
  fullName.vb: SuperOffice.CRM.Administration.SoUser.OnSavedAsync(Boolean)
  name.vb: OnSavedAsync(Boolean)
- uid: SuperOffice.CRM.Administration.SoUser.OtherGroupIds
  commentId: P:SuperOffice.CRM.Administration.SoUser.OtherGroupIds
  id: OtherGroupIds
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: OtherGroupIds
  nameWithType: SoUser.OtherGroupIds
  fullName: SuperOffice.CRM.Administration.SoUser.OtherGroupIds
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get and set secondary groups.
  example: []
  syntax:
    content: public int[] OtherGroupIds { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Property OtherGroupIds As Integer()
  overload: SuperOffice.CRM.Administration.SoUser.OtherGroupIds*
- uid: SuperOffice.CRM.Administration.SoUser.EjCategoryIds
  commentId: P:SuperOffice.CRM.Administration.SoUser.EjCategoryIds
  id: EjCategoryIds
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: EjCategoryIds
  nameWithType: SoUser.EjCategoryIds
  fullName: SuperOffice.CRM.Administration.SoUser.EjCategoryIds
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get and set ejCategories per user.
  example: []
  syntax:
    content: public int[] EjCategoryIds { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Property EjCategoryIds As Integer()
  overload: SuperOffice.CRM.Administration.SoUser.EjCategoryIds*
- uid: SuperOffice.CRM.Administration.SoUser.LicenseFieldRight
  commentId: P:SuperOffice.CRM.Administration.SoUser.LicenseFieldRight
  id: LicenseFieldRight
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: LicenseFieldRight
  nameWithType: SoUser.LicenseFieldRight
  fullName: SuperOffice.CRM.Administration.SoUser.LicenseFieldRight
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The current user's permissions to read/modify the Licenses.
  example: []
  syntax:
    content: public FieldRight LicenseFieldRight { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.FieldRight
    content.vb: Public ReadOnly Property LicenseFieldRight As FieldRight
  overload: SuperOffice.CRM.Administration.SoUser.LicenseFieldRight*
- uid: SuperOffice.CRM.Administration.SoUser.Licenses
  commentId: P:SuperOffice.CRM.Administration.SoUser.Licenses
  id: Licenses
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Licenses
  nameWithType: SoUser.Licenses
  fullName: SuperOffice.CRM.Administration.SoUser.Licenses
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: User licenses
  example: []
  syntax:
    content: public AssociateModuleLicenseOwner[] Licenses { get; }
    parameters: []
    return:
      type: SuperOffice.License.AssociateModuleLicenseOwner[]
    content.vb: Public ReadOnly Property Licenses As AssociateModuleLicenseOwner()
  overload: SuperOffice.CRM.Administration.SoUser.Licenses*
- uid: SuperOffice.CRM.Administration.SoUser.Ejuser
  commentId: P:SuperOffice.CRM.Administration.SoUser.Ejuser
  id: Ejuser
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Ejuser
  nameWithType: SoUser.Ejuser
  fullName: SuperOffice.CRM.Administration.SoUser.Ejuser
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public EjuserRow Ejuser { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.EjuserRow
    content.vb: Public ReadOnly Property Ejuser As EjuserRow
  overload: SuperOffice.CRM.Administration.SoUser.Ejuser*
- uid: SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks
  commentId: P:SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks
  id: SkipConsistencyChecks
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: SkipConsistencyChecks
  nameWithType: SoUser.SkipConsistencyChecks
  fullName: SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: >-
    Set this to true, to skip consistency checks when saving the entity.

    The caller MUST make sure the consistency is not violated after the the caller has performed the intended operation(s).
  example: []
  syntax:
    content: public bool SkipConsistencyChecks { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SkipConsistencyChecks As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks*
- uid: SuperOffice.CRM.Administration.SoUser.AssociateId
  commentId: P:SuperOffice.CRM.Administration.SoUser.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: SoUser.AssociateId
  fullName: SuperOffice.CRM.Administration.SoUser.AssociateId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: AssociateId of the user.  This value is '0' until the user is created.
  example: []
  syntax:
    content: public int AssociateId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AssociateId As Integer
  overload: SuperOffice.CRM.Administration.SoUser.AssociateId*
- uid: SuperOffice.CRM.Administration.SoUser.LogonName
  commentId: P:SuperOffice.CRM.Administration.SoUser.LogonName
  id: LogonName
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: LogonName
  nameWithType: SoUser.LogonName
  fullName: SuperOffice.CRM.Administration.SoUser.LogonName
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Logon name for the user: Associate.Name. Sets ejUser.Username if not already set.'
  example: []
  syntax:
    content: public string LogonName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LogonName As String
  overload: SuperOffice.CRM.Administration.SoUser.LogonName*
- uid: SuperOffice.CRM.Administration.SoUser.Sentries
  commentId: P:SuperOffice.CRM.Administration.SoUser.Sentries
  id: Sentries
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Sentries
  nameWithType: SoUser.Sentries
  fullName: SuperOffice.CRM.Administration.SoUser.Sentries
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Sentries governing the underlying tables and fields.
  example: []
  syntax:
    content: public SentryCollection Sentries { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.SentryCollection
    content.vb: Public ReadOnly Property Sentries As SentryCollection
  overload: SuperOffice.CRM.Administration.SoUser.Sentries*
- uid: SuperOffice.CRM.Administration.SoUser.MainTable
  commentId: P:SuperOffice.CRM.Administration.SoUser.MainTable
  id: MainTable
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: MainTable
  nameWithType: SoUser.MainTable
  fullName: SuperOffice.CRM.Administration.SoUser.MainTable
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The main table info for the associate table storing user information.  This is used with <xref href="SuperOffice.CRM.Administration.SoUser.Sentries" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public AssociateTableInfo MainTable { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.AssociateTableInfo
    content.vb: Public ReadOnly Property MainTable As AssociateTableInfo
  overload: SuperOffice.CRM.Administration.SoUser.MainTable*
- uid: SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo
  commentId: P:SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo
  id: UserRoleLinkTableInfo
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: UserRoleLinkTableInfo
  nameWithType: SoUser.UserRoleLinkTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The UserRoleLink TableInfo used in the sentry to talk about role permissions.
  example: []
  syntax:
    content: public UserRoleLinkTableInfo UserRoleLinkTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.UserRoleLinkTableInfo
    content.vb: Public ReadOnly Property UserRoleLinkTableInfo As UserRoleLinkTableInfo
  overload: SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo*
- uid: SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo
  commentId: P:SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo
  id: UserGroupLinkTableInfo
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: UserGroupLinkTableInfo
  nameWithType: SoUser.UserGroupLinkTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The UserGroupLink TableInfo used in the sentry to talk about usergroup permissions.
  example: []
  syntax:
    content: public UserGroupLinkTableInfo UserGroupLinkTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.UserGroupLinkTableInfo
    content.vb: Public ReadOnly Property UserGroupLinkTableInfo As UserGroupLinkTableInfo
  overload: SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo*
- uid: SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo
  commentId: P:SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo
  id: CredentialsTableInfo
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: CredentialsTableInfo
  nameWithType: SoUser.CredentialsTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The Credentials TableInfo used in the sentry to talk about password permissions.
  example: []
  syntax:
    content: public CredentialsTableInfo CredentialsTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.CredentialsTableInfo
    content.vb: Public ReadOnly Property CredentialsTableInfo As CredentialsTableInfo
  overload: SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo*
- uid: SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo
  commentId: P:SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo
  id: LicenseAssocLinkTableInfo
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: LicenseAssocLinkTableInfo
  nameWithType: SoUser.LicenseAssocLinkTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The License TableInfo used in the sentry to talk about role permissions.
  example: []
  syntax:
    content: public LicenseAssocLinkTableInfo LicenseAssocLinkTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.LicenseAssocLinkTableInfo
    content.vb: Public ReadOnly Property LicenseAssocLinkTableInfo As LicenseAssocLinkTableInfo
  overload: SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo*
- uid: SuperOffice.CRM.Administration.SoUser.Deleted
  commentId: P:SuperOffice.CRM.Administration.SoUser.Deleted
  id: Deleted
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: SoUser.Deleted
  fullName: SuperOffice.CRM.Administration.SoUser.Deleted
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Is the user retired (soft-deleted)
  example: []
  syntax:
    content: public bool Deleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Deleted As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.Deleted*
- uid: SuperOffice.CRM.Administration.SoUser.GroupIdx
  commentId: P:SuperOffice.CRM.Administration.SoUser.GroupIdx
  id: GroupIdx
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: GroupIdx
  nameWithType: SoUser.GroupIdx
  fullName: SuperOffice.CRM.Administration.SoUser.GroupIdx
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Group membership
  example: []
  syntax:
    content: public int GroupIdx { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property GroupIdx As Integer
  overload: SuperOffice.CRM.Administration.SoUser.GroupIdx*
- uid: SuperOffice.CRM.Administration.SoUser.RoleIdx
  commentId: P:SuperOffice.CRM.Administration.SoUser.RoleIdx
  id: RoleIdx
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: RoleIdx
  nameWithType: SoUser.RoleIdx
  fullName: SuperOffice.CRM.Administration.SoUser.RoleIdx
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Group membership
  example: []
  syntax:
    content: public int RoleIdx { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RoleIdx As Integer
  overload: SuperOffice.CRM.Administration.SoUser.RoleIdx*
- uid: SuperOffice.CRM.Administration.SoUser.PersonId
  commentId: P:SuperOffice.CRM.Administration.SoUser.PersonId
  id: PersonId
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: SoUser.PersonId
  fullName: SuperOffice.CRM.Administration.SoUser.PersonId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Primary key of the person in the person table.
  example: []
  syntax:
    content: public int PersonId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PersonId As Integer
  overload: SuperOffice.CRM.Administration.SoUser.PersonId*
- uid: SuperOffice.CRM.Administration.SoUser.Person
  commentId: P:SuperOffice.CRM.Administration.SoUser.Person
  id: Person
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: SoUser.Person
  fullName: SuperOffice.CRM.Administration.SoUser.Person
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get the <xref href="SuperOffice.CRM.Administration.SoUser.Person" data-throw-if-not-resolved="false"></xref> associated with the user.  Null if there is no person associated with the user.
  example: []
  syntax:
    content: public Person Person { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Entities.Person
    content.vb: Public ReadOnly Property Person As Person
  overload: SuperOffice.CRM.Administration.SoUser.Person*
- uid: SuperOffice.CRM.Administration.SoUser.UserType
  commentId: P:SuperOffice.CRM.Administration.SoUser.UserType
  id: UserType
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: SoUser.UserType
  fullName: SuperOffice.CRM.Administration.SoUser.UserType
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Type of associate (e.g. logon). Can only be set by administrators.
  example: []
  syntax:
    content: public UserType UserType { get; }
    parameters: []
    return:
      type: SuperOffice.License.UserType
    content.vb: Public ReadOnly Property UserType As UserType
  overload: SuperOffice.CRM.Administration.SoUser.UserType*
- uid: SuperOffice.CRM.Administration.SoUser.UserName
  commentId: P:SuperOffice.CRM.Administration.SoUser.UserName
  id: UserName
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: SoUser.UserName
  fullName: SuperOffice.CRM.Administration.SoUser.UserName
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Associate.UserName, not the Associate.Name
  example: []
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: SuperOffice.CRM.Administration.SoUser.UserName*
- uid: SuperOffice.CRM.Administration.SoUser.EjUserId
  commentId: P:SuperOffice.CRM.Administration.SoUser.EjUserId
  id: EjUserId
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: EjUserId
  nameWithType: SoUser.EjUserId
  fullName: SuperOffice.CRM.Administration.SoUser.EjUserId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get or set primary key in the ejuser table.
  example: []
  syntax:
    content: public int EjUserId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EjUserId As Integer
  overload: SuperOffice.CRM.Administration.SoUser.EjUserId*
- uid: SuperOffice.CRM.Administration.SoUser.LastLogin
  commentId: P:SuperOffice.CRM.Administration.SoUser.LastLogin
  id: LastLogin
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: LastLogin
  nameWithType: SoUser.LastLogin
  fullName: SuperOffice.CRM.Administration.SoUser.LastLogin
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public DateTime LastLogin { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property LastLogin As Date
  overload: SuperOffice.CRM.Administration.SoUser.LastLogin*
- uid: SuperOffice.CRM.Administration.SoUser.Lastlogout
  commentId: P:SuperOffice.CRM.Administration.SoUser.Lastlogout
  id: Lastlogout
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Lastlogout
  nameWithType: SoUser.Lastlogout
  fullName: SuperOffice.CRM.Administration.SoUser.Lastlogout
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public DateTime Lastlogout { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Lastlogout As Date
  overload: SuperOffice.CRM.Administration.SoUser.Lastlogout*
- uid: SuperOffice.CRM.Administration.SoUser.IsOnTravel
  commentId: P:SuperOffice.CRM.Administration.SoUser.IsOnTravel
  id: IsOnTravel
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsOnTravel
  nameWithType: SoUser.IsOnTravel
  fullName: SuperOffice.CRM.Administration.SoUser.IsOnTravel
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Return true if the user is on travel from THIS database.
  example: []
  syntax:
    content: public bool IsOnTravel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsOnTravel As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.IsOnTravel*
- uid: SuperOffice.CRM.Administration.SoUser.Rank
  commentId: P:SuperOffice.CRM.Administration.SoUser.Rank
  id: Rank
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: SoUser.Rank
  fullName: SuperOffice.CRM.Administration.SoUser.Rank
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Sort order rank. Only administrators can set.
  example: []
  syntax:
    content: public short Rank { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Property Rank As Short
  overload: SuperOffice.CRM.Administration.SoUser.Rank*
- uid: SuperOffice.CRM.Administration.SoUser.Tooltip
  commentId: P:SuperOffice.CRM.Administration.SoUser.Tooltip
  id: Tooltip
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Tooltip
  nameWithType: SoUser.Tooltip
  fullName: SuperOffice.CRM.Administration.SoUser.Tooltip
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Description / Tooltip. Only administrators can set.
  example: []
  syntax:
    content: public string Tooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Tooltip As String
  overload: SuperOffice.CRM.Administration.SoUser.Tooltip*
- uid: SuperOffice.CRM.Administration.SoUser.LoginRight
  commentId: P:SuperOffice.CRM.Administration.SoUser.LoginRight
  id: LoginRight
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: LoginRight
  nameWithType: SoUser.LoginRight
  fullName: SuperOffice.CRM.Administration.SoUser.LoginRight
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: public bool LoginRight { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property LoginRight As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.LoginRight*
- uid: SuperOffice.CRM.Administration.SoUser.WinClient
  commentId: P:SuperOffice.CRM.Administration.SoUser.WinClient
  id: WinClient
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: WinClient
  nameWithType: SoUser.WinClient
  fullName: SuperOffice.CRM.Administration.SoUser.WinClient
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool WinClient { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property WinClient As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.WinClient*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.WebClient
  commentId: P:SuperOffice.CRM.Administration.SoUser.WebClient
  id: WebClient
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: WebClient
  nameWithType: SoUser.WebClient
  fullName: SuperOffice.CRM.Administration.SoUser.WebClient
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool WebClient { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property WebClient As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.WebClient*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.Travel
  commentId: P:SuperOffice.CRM.Administration.SoUser.Travel
  id: Travel
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Travel
  nameWithType: SoUser.Travel
  fullName: SuperOffice.CRM.Administration.SoUser.Travel
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool Travel { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property Travel As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.Travel*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.PocketClient
  commentId: P:SuperOffice.CRM.Administration.SoUser.PocketClient
  id: PocketClient
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: PocketClient
  nameWithType: SoUser.PocketClient
  fullName: SuperOffice.CRM.Administration.SoUser.PocketClient
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool PocketClient { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property PocketClient As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.PocketClient*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment
  commentId: P:SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment
  id: ConfidentialAppointment
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ConfidentialAppointment
  nameWithType: SoUser.ConfidentialAppointment
  fullName: SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool ConfidentialAppointment { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property ConfidentialAppointment As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.NetServerClient
  commentId: P:SuperOffice.CRM.Administration.SoUser.NetServerClient
  id: NetServerClient
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: NetServerClient
  nameWithType: SoUser.NetServerClient
  fullName: SuperOffice.CRM.Administration.SoUser.NetServerClient
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool NetServerClient { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property NetServerClient As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.NetServerClient*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson
  commentId: P:SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson
  id: CanCreateExternalPerson
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: CanCreateExternalPerson
  nameWithType: SoUser.CanCreateExternalPerson
  fullName: SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: 'Obsolete: Replaced by new license system!'
  example: []
  syntax:
    content: >-
      [Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", true)]

      public bool CanCreateExternalPerson { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]", True)>

      Public Property CanCreateExternalPerson As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: '[SR_REPLACED_BY_NEW_LICENSE_SYSTEM]'
    - type: System.Boolean
      value: true
- uid: SuperOffice.CRM.Administration.SoUser.PasswordFieldRight
  commentId: P:SuperOffice.CRM.Administration.SoUser.PasswordFieldRight
  id: PasswordFieldRight
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: PasswordFieldRight
  nameWithType: SoUser.PasswordFieldRight
  fullName: SuperOffice.CRM.Administration.SoUser.PasswordFieldRight
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: The current user's permissions to read/modify the Password
  example: []
  syntax:
    content: public FieldRight PasswordFieldRight { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.FieldRight
    content.vb: Public ReadOnly Property PasswordFieldRight As FieldRight
  overload: SuperOffice.CRM.Administration.SoUser.PasswordFieldRight*
- uid: SuperOffice.CRM.Administration.SoUser.CanValidatePassword
  commentId: P:SuperOffice.CRM.Administration.SoUser.CanValidatePassword
  id: CanValidatePassword
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: CanValidatePassword
  nameWithType: SoUser.CanValidatePassword
  fullName: SuperOffice.CRM.Administration.SoUser.CanValidatePassword
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Is the plugin able to validfate the password.
  example: []
  syntax:
    content: public bool CanValidatePassword { get; }
    parameters: []
    return:
      type: System.Boolean
      description: ''
    content.vb: Public ReadOnly Property CanValidatePassword As Boolean
  overload: SuperOffice.CRM.Administration.SoUser.CanValidatePassword*
- uid: SuperOffice.CRM.Administration.SoUser.Credentials
  commentId: P:SuperOffice.CRM.Administration.SoUser.Credentials
  id: Credentials
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: SoUser.Credentials
  fullName: SuperOffice.CRM.Administration.SoUser.Credentials
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  syntax:
    content: public SoUserCredential[] Credentials { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Administration.SoUserCredential[]
    content.vb: Public ReadOnly Property Credentials As SoUserCredential()
  overload: SuperOffice.CRM.Administration.SoUser.Credentials*
- uid: SuperOffice.CRM.Administration.SoUser.ExtraFields
  commentId: P:SuperOffice.CRM.Administration.SoUser.ExtraFields
  id: ExtraFields
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: ExtraFields
  nameWithType: SoUser.ExtraFields
  fullName: SuperOffice.CRM.Administration.SoUser.ExtraFields
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Extra fields on ejUser - may be null.
  example: []
  syntax:
    content: public EntityExtraFieldsHelper ExtraFields { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Entities.EntityExtraFieldsHelper
    content.vb: Public ReadOnly Property ExtraFields As EntityExtraFieldsHelper
  overload: SuperOffice.CRM.Administration.SoUser.ExtraFields*
- uid: SuperOffice.CRM.Administration.SoUser.CustomFields
  commentId: P:SuperOffice.CRM.Administration.SoUser.CustomFields
  id: CustomFields
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: CustomFields
  nameWithType: SoUser.CustomFields
  fullName: SuperOffice.CRM.Administration.SoUser.CustomFields
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Custom fields on ejUser - may be null.
  example: []
  syntax:
    content: public EntityCustomFieldsHelper CustomFields { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Entities.EntityCustomFieldsHelper
    content.vb: Public ReadOnly Property CustomFields As EntityCustomFieldsHelper
  overload: SuperOffice.CRM.Administration.SoUser.CustomFields*
- uid: SuperOffice.CRM.Administration.SoUser.IsDeleted
  commentId: P:SuperOffice.CRM.Administration.SoUser.IsDeleted
  id: IsDeleted
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: SoUser.IsDeleted
  fullName: SuperOffice.CRM.Administration.SoUser.IsDeleted
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Is the row deleted from the database.  Only used by Nested Persist.  See the <xref href="SuperOffice.CRM.Administration.SoUser.Deleted" data-throw-if-not-resolved="false"></xref> property for making the user appear as deleted.
  example: []
  syntax:
    content: public override bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDeleted As Boolean
  overridden: SuperOffice.Data.NestedPersist.IsDeleted
  overload: SuperOffice.CRM.Administration.SoUser.IsDeleted*
- uid: SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete
  id: IsMarkedForDelete
  parent: SuperOffice.CRM.Administration.SoUser
  langs:
  - csharp
  - vb
  name: IsMarkedForDelete
  nameWithType: SoUser.IsMarkedForDelete
  fullName: SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Gets or sets a value indicating whether this instance is marked for delete.
  example: []
  syntax:
    content: public override bool IsMarkedForDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: <code>true</code> if this instance is marked for delete; otherwise, <code>false</code>.
    content.vb: Public Overrides Property IsMarkedForDelete As Boolean
  overridden: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  overload: SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete*
references:
- uid: SuperOffice.CRM.Administration
  commentId: N:SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Administration
  nameWithType: SuperOffice.CRM.Administration
  fullName: SuperOffice.CRM.Administration
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Data.NestedPersist
  commentId: T:SuperOffice.Data.NestedPersist
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html
  name: NestedPersist
  nameWithType: NestedPersist
  fullName: SuperOffice.Data.NestedPersist
- uid: SuperOffice.Data.NestedPersistFacade
  commentId: T:SuperOffice.Data.NestedPersistFacade
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html
  name: NestedPersistFacade
  nameWithType: NestedPersistFacade
  fullName: SuperOffice.Data.NestedPersistFacade
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.INestedPersist.html
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.Data.NestedPersistFacade.IsDirty
  commentId: P:SuperOffice.Data.NestedPersistFacade.IsDirty
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_IsDirty
  name: IsDirty
  nameWithType: NestedPersistFacade.IsDirty
  fullName: SuperOffice.Data.NestedPersistFacade.IsDirty
- uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SetSaveOwner_SuperOffice_Data_INestedPersist_
  name: SetSaveOwner(INestedPersist)
  nameWithType: NestedPersist.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SetSaveOwner_SuperOffice_Data_INestedPersist_
  - name: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SetSaveOwner_SuperOffice_Data_INestedPersist_
  - name: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: )
- uid: SuperOffice.Data.NestedPersist.SaveAsync
  commentId: M:SuperOffice.Data.NestedPersist.SaveAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SaveAsync
  name: SaveAsync()
  nameWithType: NestedPersist.SaveAsync()
  fullName: SuperOffice.Data.NestedPersist.SaveAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SaveAsync
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SaveAsync
  - name: (
  - name: )
- uid: SuperOffice.Data.NestedPersist.IsSaving
  commentId: P:SuperOffice.Data.NestedPersist.IsSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_IsSaving
  name: IsSaving
  nameWithType: NestedPersist.IsSaving
  fullName: SuperOffice.Data.NestedPersist.IsSaving
- uid: SuperOffice.Data.NestedPersist.OnElementSaved
  commentId: E:SuperOffice.Data.NestedPersist.OnElementSaved
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_OnElementSaved
  name: OnElementSaved
  nameWithType: NestedPersist.OnElementSaved
  fullName: SuperOffice.Data.NestedPersist.OnElementSaved
- uid: SuperOffice.Data.NestedPersist.OnElementIdUpdate
  commentId: E:SuperOffice.Data.NestedPersist.OnElementIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_OnElementIdUpdate
  name: OnElementIdUpdate
  nameWithType: NestedPersist.OnElementIdUpdate
  fullName: SuperOffice.Data.NestedPersist.OnElementIdUpdate
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SoUser, To>(SoUser)
  nameWithType: EnumUtil.MapEnums<SoUser, To>(SoUser)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Administration.SoUser, To>(SuperOffice.CRM.Administration.SoUser)
  nameWithType.vb: EnumUtil.MapEnums(Of SoUser, To)(SoUser)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Administration.SoUser, To)(SuperOffice.CRM.Administration.SoUser)
  name.vb: MapEnums(Of SoUser, To)(SoUser)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Administration.SoUser)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Administration.SoUser)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SoUser, To>(SoUser)
  nameWithType: Converters.MapEnums<SoUser, To>(SoUser)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Administration.SoUser, To>(SuperOffice.CRM.Administration.SoUser)
  nameWithType.vb: Converters.MapEnums(Of SoUser, To)(SoUser)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Administration.SoUser, To)(SuperOffice.CRM.Administration.SoUser)
  name.vb: MapEnums(Of SoUser, To)(SoUser)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Administration.SoUser)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Administration.SoUser)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Administration.SoUser.GetModuleLicenses*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetModuleLicenses
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetModuleLicenses
  name: GetModuleLicenses
  nameWithType: SoUser.GetModuleLicenses
  fullName: SuperOffice.CRM.Administration.SoUser.GetModuleLicenses
- uid: System.Collections.Generic.IEnumerable{SuperOffice.License.AssociateModuleLicenseLink}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.License.AssociateModuleLicenseLink}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<AssociateModuleLicenseLink>
  nameWithType: IEnumerable<AssociateModuleLicenseLink>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.License.AssociateModuleLicenseLink>
  nameWithType.vb: IEnumerable(Of AssociateModuleLicenseLink)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.License.AssociateModuleLicenseLink)
  name.vb: IEnumerable(Of AssociateModuleLicenseLink)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.License.AssociateModuleLicenseLink
    name: AssociateModuleLicenseLink
    isExternal: true
    href: SuperOffice.License.AssociateModuleLicenseLink.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.AssociateModuleLicenseLink
    name: AssociateModuleLicenseLink
    isExternal: true
    href: SuperOffice.License.AssociateModuleLicenseLink.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetForeignKeyHelperAsync_System_Threading_CancellationToken_
  name: GetForeignKeyHelperAsync
  nameWithType: SoUser.GetForeignKeyHelperAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetForeignKeyHelperAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.Util.RowForeignKeyHelper}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.Util.RowForeignKeyHelper}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RowForeignKeyHelper>
  nameWithType: Task<RowForeignKeyHelper>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.Util.RowForeignKeyHelper>
  nameWithType.vb: Task(Of RowForeignKeyHelper)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.Util.RowForeignKeyHelper)
  name.vb: Task(Of RowForeignKeyHelper)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Rows.Util.RowForeignKeyHelper
    name: RowForeignKeyHelper
    isExternal: true
    href: SuperOffice.CRM.Rows.Util.RowForeignKeyHelper.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Rows.Util.RowForeignKeyHelper
    name: RowForeignKeyHelper
    isExternal: true
    href: SuperOffice.CRM.Rows.Util.RowForeignKeyHelper.html
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetDefaultAssociateUserNameAsync_System_Threading_CancellationToken_
  name: GetDefaultAssociateUserNameAsync
  nameWithType: SoUser.GetDefaultAssociateUserNameAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetDefaultAssociateUserNameAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.CreateNewAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.CreateNewAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_CreateNewAsync_System_Int32_SuperOffice_License_UserType_System_Boolean_System_Threading_CancellationToken_
  name: CreateNewAsync
  nameWithType: SoUser.CreateNewAsync
  fullName: SuperOffice.CRM.Administration.SoUser.CreateNewAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SoUser>
  nameWithType: Task<SoUser>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Administration.SoUser>
  nameWithType.vb: Task(Of SoUser)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Administration.SoUser)
  name.vb: Task(Of SoUser)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: )
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: SuperOffice.CRM.Administration.SoUser.UserType
  commentId: P:SuperOffice.CRM.Administration.SoUser.UserType
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_UserType
  name: UserType
  nameWithType: SoUser.UserType
  fullName: SuperOffice.CRM.Administration.SoUser.UserType
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  href: SuperOffice.Exceptions.SoIllegalOperationException.html
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ManageUserAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ManageUserAsync_System_Int32_System_Threading_CancellationToken_
  name: ManageUserAsync
  nameWithType: SoUser.ManageUserAsync
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserAsync
- uid: SuperOffice.CRM.Data.AssociateTableInfo.Name
  commentId: P:SuperOffice.CRM.Data.AssociateTableInfo.Name
  isExternal: true
  href: SuperOffice.CRM.Data.AssociateTableInfo.html#SuperOffice_CRM_Data_AssociateTableInfo_Name
  name: Name
  nameWithType: AssociateTableInfo.Name
  fullName: SuperOffice.CRM.Data.AssociateTableInfo.Name
- uid: SuperOffice.CRM.Data.AssociateTableInfo.UserName
  commentId: P:SuperOffice.CRM.Data.AssociateTableInfo.UserName
  isExternal: true
  href: SuperOffice.CRM.Data.AssociateTableInfo.html#SuperOffice_CRM_Data_AssociateTableInfo_UserName
  name: UserName
  nameWithType: AssociateTableInfo.UserName
  fullName: SuperOffice.CRM.Data.AssociateTableInfo.UserName
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ManageUserFromPersonIdAsync_System_Int32_System_Threading_CancellationToken_
  name: ManageUserFromPersonIdAsync
  nameWithType: SoUser.ManageUserFromPersonIdAsync
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserFromPersonIdAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Administration.SoUser[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SoUser[]>
  nameWithType: Task<SoUser[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Administration.SoUser[]>
  nameWithType.vb: Task(Of SoUser())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Administration.SoUser())
  name.vb: Task(Of SoUser())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ManageUserFromEjUserIdAsync_System_Int32_System_Threading_CancellationToken_
  name: ManageUserFromEjUserIdAsync
  nameWithType: SoUser.ManageUserFromEjUserIdAsync
  fullName: SuperOffice.CRM.Administration.SoUser.ManageUserFromEjUserIdAsync
- uid: SuperOffice.CRM.Administration.SoUser.GetCurrentAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetCurrentAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetCurrentAsync_System_Threading_CancellationToken_
  name: GetCurrentAsync
  nameWithType: SoUser.GetCurrentAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetCurrentAsync
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.ToString*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ToString
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ToString
  name: ToString
  nameWithType: SoUser.ToString
  fullName: SuperOffice.CRM.Administration.SoUser.ToString
- uid: SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SetPersonIdAsync_System_Int32_System_Threading_CancellationToken_
  name: SetPersonIdAsync
  nameWithType: SoUser.SetPersonIdAsync
  fullName: SuperOffice.CRM.Administration.SoUser.SetPersonIdAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Administration.SoUser.GetLicenseOwner*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetLicenseOwner
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetLicenseOwner_System_String_
  name: GetLicenseOwner
  nameWithType: SoUser.GetLicenseOwner
  fullName: SuperOffice.CRM.Administration.SoUser.GetLicenseOwner
- uid: SuperOffice.License.AssociateModuleLicenseOwner
  commentId: T:SuperOffice.License.AssociateModuleLicenseOwner
  parent: SuperOffice.License
  isExternal: true
  href: SuperOffice.License.AssociateModuleLicenseOwner.html
  name: AssociateModuleLicenseOwner
  nameWithType: AssociateModuleLicenseOwner
  fullName: SuperOffice.License.AssociateModuleLicenseOwner
- uid: SuperOffice.CRM.Administration.SoUser.GetModuleLicense*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetModuleLicense
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetModuleLicense_System_String_System_String_
  name: GetModuleLicense
  nameWithType: SoUser.GetModuleLicense
  fullName: SuperOffice.CRM.Administration.SoUser.GetModuleLicense
- uid: SuperOffice.License.AssociateModuleLicenseLink
  commentId: T:SuperOffice.License.AssociateModuleLicenseLink
  parent: SuperOffice.License
  isExternal: true
  href: SuperOffice.License.AssociateModuleLicenseLink.html
  name: AssociateModuleLicenseLink
  nameWithType: AssociateModuleLicenseLink
  fullName: SuperOffice.License.AssociateModuleLicenseLink
- uid: SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SetUserTypeAsync_SuperOffice_License_UserType_System_Threading_CancellationToken_
  name: SetUserTypeAsync
  nameWithType: SoUser.SetUserTypeAsync
  fullName: SuperOffice.CRM.Administration.SoUser.SetUserTypeAsync
- uid: SuperOffice.CRM.Administration.SoUser.SetPassword*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SetPassword
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SetPassword_System_String_
  name: SetPassword
  nameWithType: SoUser.SetPassword
  fullName: SuperOffice.CRM.Administration.SoUser.SetPassword
- uid: SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetCanChangePasswordAsync_System_Threading_CancellationToken_
  name: GetCanChangePasswordAsync
  nameWithType: SoUser.GetCanChangePasswordAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetCanChangePasswordAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetSupportedChangePasswordTypesAsync_System_Threading_CancellationToken_
  name: GetSupportedChangePasswordTypesAsync
  nameWithType: SoUser.GetSupportedChangePasswordTypesAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetSupportedChangePasswordTypesAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Data.ChangePasswordType[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.Data.ChangePasswordType[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ChangePasswordType[]>
  nameWithType: Task<ChangePasswordType[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.ChangePasswordType[]>
  nameWithType.vb: Task(Of ChangePasswordType())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.ChangePasswordType())
  name.vb: Task(Of ChangePasswordType())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.Data.ChangePasswordType
    name: ChangePasswordType
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.ChangePasswordType
    name: ChangePasswordType
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ChangePasswordAsync_System_String_System_String_
  name: ChangePasswordAsync
  nameWithType: SoUser.ChangePasswordAsync
  fullName: SuperOffice.CRM.Administration.SoUser.ChangePasswordAsync
- uid: SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetCanSendChangePasswordMailAsync_System_Threading_CancellationToken_
  name: GetCanSendChangePasswordMailAsync
  nameWithType: SoUser.GetCanSendChangePasswordMailAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetCanSendChangePasswordMailAsync
- uid: SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SendChangePasswordMailAsync
  name: SendChangePasswordMailAsync
  nameWithType: SoUser.SendChangePasswordMailAsync
  fullName: SuperOffice.CRM.Administration.SoUser.SendChangePasswordMailAsync
- uid: SuperOffice.CRM.Administration.SoUser.IsPasswordValid*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsPasswordValid
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsPasswordValid_System_String_
  name: IsPasswordValid
  nameWithType: SoUser.IsPasswordValid
  fullName: SuperOffice.CRM.Administration.SoUser.IsPasswordValid
- uid: SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsAssociateNameLegal_System_String_System_String__
  name: IsAssociateNameLegal
  nameWithType: SoUser.IsAssociateNameLegal
  fullName: SuperOffice.CRM.Administration.SoUser.IsAssociateNameLegal
- uid: SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsAssociateUserNameLegal_System_String_System_String__
  name: IsAssociateUserNameLegal
  nameWithType: SoUser.IsAssociateUserNameLegal
  fullName: SuperOffice.CRM.Administration.SoUser.IsAssociateUserNameLegal
- uid: SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SetValidAssociateUserName_System_String_
  name: SetValidAssociateUserName
  nameWithType: SoUser.SetValidAssociateUserName
  fullName: SuperOffice.CRM.Administration.SoUser.SetValidAssociateUserName
- uid: SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SetValidAssociateNameAsync_System_String_
  name: SetValidAssociateNameAsync
  nameWithType: SoUser.SetValidAssociateNameAsync
  fullName: SuperOffice.CRM.Administration.SoUser.SetValidAssociateNameAsync
- uid: SuperOffice.CRM.Administration.SoUser.IsPasswordLegal*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsPasswordLegal
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsPasswordLegal_System_String_System_String__
  name: IsPasswordLegal
  nameWithType: SoUser.IsPasswordLegal
  fullName: SuperOffice.CRM.Administration.SoUser.IsPasswordLegal
- uid: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SetGeneratedPassword
  name: SetGeneratedPassword
  nameWithType: SoUser.SetGeneratedPassword
  fullName: SuperOffice.CRM.Administration.SoUser.SetGeneratedPassword
- uid: SuperOffice.CRM.Administration.SoUser.RemoveCredential*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.RemoveCredential
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_RemoveCredential_System_String_
  name: RemoveCredential
  nameWithType: SoUser.RemoveCredential
  fullName: SuperOffice.CRM.Administration.SoUser.RemoveCredential
- uid: SuperOffice.CRM.Administration.SoUser.AddCredential*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.AddCredential
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_AddCredential_System_String_System_String_System_String_
  name: AddCredential
  nameWithType: SoUser.AddCredential
  fullName: SuperOffice.CRM.Administration.SoUser.AddCredential
- uid: SuperOffice.CRM.Administration.SoUser.Validate*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Validate
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Validate_SuperOffice_CRM_Rows_RowValidator_
  name: Validate
  nameWithType: SoUser.Validate
  fullName: SuperOffice.CRM.Administration.SoUser.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.RowValidator.html
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
- uid: SuperOffice.CRM.Administration.SoUser.ValidateAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ValidateAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ValidateAsync_System_Collections_Generic_Dictionary_System_String_System_String__
  name: ValidateAsync
  nameWithType: SoUser.ValidateAsync
  fullName: SuperOffice.CRM.Administration.SoUser.ValidateAsync
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_FindUsersFromPersonAsync_System_Int32_System_Threading_CancellationToken_
  name: FindUsersFromPersonAsync
  nameWithType: SoUser.FindUsersFromPersonAsync
  fullName: SuperOffice.CRM.Administration.SoUser.FindUsersFromPersonAsync
- uid: System.Threading.Tasks.Task{System.Int32[]}
  commentId: T:System.Threading.Tasks.Task{System.Int32[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int[]>
  nameWithType: Task<int[]>
  fullName: System.Threading.Tasks.Task<int[]>
  nameWithType.vb: Task(Of Integer())
  fullName.vb: System.Threading.Tasks.Task(Of Integer())
  name.vb: Task(Of Integer())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_FindUsersFromEJUserAsync_System_Int32_System_Threading_CancellationToken_
  name: FindUsersFromEJUserAsync
  nameWithType: SoUser.FindUsersFromEJUserAsync
  fullName: SuperOffice.CRM.Administration.SoUser.FindUsersFromEJUserAsync
- uid: SuperOffice.CRM.Administration.SoUser.RemoveLicenses*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.RemoveLicenses
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_RemoveLicenses
  name: RemoveLicenses
  nameWithType: SoUser.RemoveLicenses
  fullName: SuperOffice.CRM.Administration.SoUser.RemoveLicenses
- uid: SuperOffice.CRM.Administration.SoUser.MakeRetired*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.MakeRetired
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_MakeRetired_System_Boolean_
  name: MakeRetired
  nameWithType: SoUser.MakeRetired
  fullName: SuperOffice.CRM.Administration.SoUser.MakeRetired
- uid: SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ChangeUserGroupAsync_System_Int32_System_Int32_
  name: ChangeUserGroupAsync
  nameWithType: SoUser.ChangeUserGroupAsync
  fullName: SuperOffice.CRM.Administration.SoUser.ChangeUserGroupAsync
- uid: SuperOffice.CRM.Administration.SoUser.DemandPermission*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.DemandPermission
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_DemandPermission_SuperOffice_CRM_Administration_SoUser_PermissionType_
  name: DemandPermission
  nameWithType: SoUser.DemandPermission
  fullName: SuperOffice.CRM.Administration.SoUser.DemandPermission
- uid: SuperOffice.CRM.Administration.SoUser.PermissionType
  commentId: T:SuperOffice.CRM.Administration.SoUser.PermissionType
  parent: SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html
  name: SoUser.PermissionType
  nameWithType: SoUser.PermissionType
  fullName: SuperOffice.CRM.Administration.SoUser.PermissionType
  spec.csharp:
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: .
  - uid: SuperOffice.CRM.Administration.SoUser.PermissionType
    name: PermissionType
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.PermissionType.html
  spec.vb:
  - uid: SuperOffice.CRM.Administration.SoUser
    name: SoUser
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.html
  - name: .
  - uid: SuperOffice.CRM.Administration.SoUser.PermissionType
    name: PermissionType
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUser.PermissionType.html
- uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  commentId: M:SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_GetFacadingItems
  name: GetFacadingItems()
  nameWithType: NestedPersistFacade.GetFacadingItems()
  fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_GetFacadingItems
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_GetFacadingItems
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.GetFacadingItems*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetFacadingItems
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetFacadingItems
  name: GetFacadingItems
  nameWithType: SoUser.GetFacadingItems
  fullName: SuperOffice.CRM.Administration.SoUser.GetFacadingItems
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<INestedPersist>
  nameWithType: IEnumerable<INestedPersist>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.INestedPersist>
  nameWithType.vb: IEnumerable(Of INestedPersist)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.INestedPersist)
  name.vb: IEnumerable(Of INestedPersist)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPreIdUpdateAsync
  name: OnPreIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnPreIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPreIdUpdateAsync
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPreIdUpdateAsync
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_OnPreIdUpdateAsync
  name: OnPreIdUpdateAsync
  nameWithType: SoUser.OnPreIdUpdateAsync
  fullName: SuperOffice.CRM.Administration.SoUser.OnPreIdUpdateAsync
- uid: SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GetRequestRestrictionBlockersAsync_System_Threading_CancellationToken_
  name: GetRequestRestrictionBlockersAsync
  nameWithType: SoUser.GetRequestRestrictionBlockersAsync
  fullName: SuperOffice.CRM.Administration.SoUser.GetRequestRestrictionBlockersAsync
- uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnIdUpdateAsync
  name: OnIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnIdUpdateAsync
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnIdUpdateAsync
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_OnIdUpdateAsync
  name: OnIdUpdateAsync
  nameWithType: SoUser.OnIdUpdateAsync
  fullName: SuperOffice.CRM.Administration.SoUser.OnIdUpdateAsync
- uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSavedAsync_System_Boolean_
  name: OnSavedAsync(bool)
  nameWithType: NestedPersistFacade.OnSavedAsync(bool)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(bool)
  nameWithType.vb: NestedPersistFacade.OnSavedAsync(Boolean)
  fullName.vb: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(Boolean)
  name.vb: OnSavedAsync(Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSavedAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSavedAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.OnSavedAsync*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.OnSavedAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_OnSavedAsync_System_Boolean_
  name: OnSavedAsync
  nameWithType: SoUser.OnSavedAsync
  fullName: SuperOffice.CRM.Administration.SoUser.OnSavedAsync
- uid: SuperOffice.CRM.Administration.SoUser.OtherGroupIds*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.OtherGroupIds
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_OtherGroupIds
  name: OtherGroupIds
  nameWithType: SoUser.OtherGroupIds
  fullName: SuperOffice.CRM.Administration.SoUser.OtherGroupIds
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.EjCategoryIds*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.EjCategoryIds
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_EjCategoryIds
  name: EjCategoryIds
  nameWithType: SoUser.EjCategoryIds
  fullName: SuperOffice.CRM.Administration.SoUser.EjCategoryIds
- uid: SuperOffice.CRM.Administration.SoUser.LicenseFieldRight*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.LicenseFieldRight
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_LicenseFieldRight
  name: LicenseFieldRight
  nameWithType: SoUser.LicenseFieldRight
  fullName: SuperOffice.CRM.Administration.SoUser.LicenseFieldRight
- uid: SuperOffice.CRM.Security.FieldRight
  commentId: T:SuperOffice.CRM.Security.FieldRight
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.FieldRight.html
  name: FieldRight
  nameWithType: FieldRight
  fullName: SuperOffice.CRM.Security.FieldRight
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Security
    name: Security
    isExternal: true
    href: SuperOffice.CRM.Security.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Security
    name: Security
    isExternal: true
    href: SuperOffice.CRM.Security.html
- uid: SuperOffice.CRM.Administration.SoUser.Licenses*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Licenses
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Licenses
  name: Licenses
  nameWithType: SoUser.Licenses
  fullName: SuperOffice.CRM.Administration.SoUser.Licenses
- uid: SuperOffice.License.AssociateModuleLicenseOwner[]
  isExternal: true
  href: SuperOffice.License.AssociateModuleLicenseOwner.html
  name: AssociateModuleLicenseOwner[]
  nameWithType: AssociateModuleLicenseOwner[]
  fullName: SuperOffice.License.AssociateModuleLicenseOwner[]
  nameWithType.vb: AssociateModuleLicenseOwner()
  fullName.vb: SuperOffice.License.AssociateModuleLicenseOwner()
  name.vb: AssociateModuleLicenseOwner()
  spec.csharp:
  - uid: SuperOffice.License.AssociateModuleLicenseOwner
    name: AssociateModuleLicenseOwner
    isExternal: true
    href: SuperOffice.License.AssociateModuleLicenseOwner.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.License.AssociateModuleLicenseOwner
    name: AssociateModuleLicenseOwner
    isExternal: true
    href: SuperOffice.License.AssociateModuleLicenseOwner.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.Ejuser*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Ejuser
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Ejuser
  name: Ejuser
  nameWithType: SoUser.Ejuser
  fullName: SuperOffice.CRM.Administration.SoUser.Ejuser
- uid: SuperOffice.CRM.Rows.EjuserRow
  commentId: T:SuperOffice.CRM.Rows.EjuserRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.EjuserRow.html
  name: EjuserRow
  nameWithType: EjuserRow
  fullName: SuperOffice.CRM.Rows.EjuserRow
- uid: SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_SkipConsistencyChecks
  name: SkipConsistencyChecks
  nameWithType: SoUser.SkipConsistencyChecks
  fullName: SuperOffice.CRM.Administration.SoUser.SkipConsistencyChecks
- uid: SuperOffice.CRM.Administration.SoUser.AssociateId*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.AssociateId
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_AssociateId
  name: AssociateId
  nameWithType: SoUser.AssociateId
  fullName: SuperOffice.CRM.Administration.SoUser.AssociateId
- uid: SuperOffice.CRM.Administration.SoUser.LogonName*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.LogonName
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_LogonName
  name: LogonName
  nameWithType: SoUser.LogonName
  fullName: SuperOffice.CRM.Administration.SoUser.LogonName
- uid: SuperOffice.CRM.Administration.SoUser.Sentries*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Sentries
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Sentries
  name: Sentries
  nameWithType: SoUser.Sentries
  fullName: SuperOffice.CRM.Administration.SoUser.Sentries
- uid: SuperOffice.CRM.Security.SentryCollection
  commentId: T:SuperOffice.CRM.Security.SentryCollection
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.SentryCollection.html
  name: SentryCollection
  nameWithType: SentryCollection
  fullName: SuperOffice.CRM.Security.SentryCollection
- uid: SuperOffice.CRM.Administration.SoUser.Sentries
  commentId: P:SuperOffice.CRM.Administration.SoUser.Sentries
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Sentries
  name: Sentries
  nameWithType: SoUser.Sentries
  fullName: SuperOffice.CRM.Administration.SoUser.Sentries
- uid: SuperOffice.CRM.Administration.SoUser.MainTable*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.MainTable
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_MainTable
  name: MainTable
  nameWithType: SoUser.MainTable
  fullName: SuperOffice.CRM.Administration.SoUser.MainTable
- uid: SuperOffice.CRM.Data.AssociateTableInfo
  commentId: T:SuperOffice.CRM.Data.AssociateTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  href: SuperOffice.CRM.Data.AssociateTableInfo.html
  name: AssociateTableInfo
  nameWithType: AssociateTableInfo
  fullName: SuperOffice.CRM.Data.AssociateTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Data
    name: Data
    isExternal: true
    href: SuperOffice.CRM.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Data
    name: Data
    isExternal: true
    href: SuperOffice.CRM.Data.html
- uid: SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_UserRoleLinkTableInfo
  name: UserRoleLinkTableInfo
  nameWithType: SoUser.UserRoleLinkTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.UserRoleLinkTableInfo
- uid: SuperOffice.CRM.Data.UserRoleLinkTableInfo
  commentId: T:SuperOffice.CRM.Data.UserRoleLinkTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  href: SuperOffice.CRM.Data.UserRoleLinkTableInfo.html
  name: UserRoleLinkTableInfo
  nameWithType: UserRoleLinkTableInfo
  fullName: SuperOffice.CRM.Data.UserRoleLinkTableInfo
- uid: SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_UserGroupLinkTableInfo
  name: UserGroupLinkTableInfo
  nameWithType: SoUser.UserGroupLinkTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.UserGroupLinkTableInfo
- uid: SuperOffice.CRM.Data.UserGroupLinkTableInfo
  commentId: T:SuperOffice.CRM.Data.UserGroupLinkTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  href: SuperOffice.CRM.Data.UserGroupLinkTableInfo.html
  name: UserGroupLinkTableInfo
  nameWithType: UserGroupLinkTableInfo
  fullName: SuperOffice.CRM.Data.UserGroupLinkTableInfo
- uid: SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_CredentialsTableInfo
  name: CredentialsTableInfo
  nameWithType: SoUser.CredentialsTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.CredentialsTableInfo
- uid: SuperOffice.CRM.Data.CredentialsTableInfo
  commentId: T:SuperOffice.CRM.Data.CredentialsTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  href: SuperOffice.CRM.Data.CredentialsTableInfo.html
  name: CredentialsTableInfo
  nameWithType: CredentialsTableInfo
  fullName: SuperOffice.CRM.Data.CredentialsTableInfo
- uid: SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_LicenseAssocLinkTableInfo
  name: LicenseAssocLinkTableInfo
  nameWithType: SoUser.LicenseAssocLinkTableInfo
  fullName: SuperOffice.CRM.Administration.SoUser.LicenseAssocLinkTableInfo
- uid: SuperOffice.CRM.Data.LicenseAssocLinkTableInfo
  commentId: T:SuperOffice.CRM.Data.LicenseAssocLinkTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  href: SuperOffice.CRM.Data.LicenseAssocLinkTableInfo.html
  name: LicenseAssocLinkTableInfo
  nameWithType: LicenseAssocLinkTableInfo
  fullName: SuperOffice.CRM.Data.LicenseAssocLinkTableInfo
- uid: SuperOffice.CRM.Administration.SoUser.Deleted*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Deleted
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Deleted
  name: Deleted
  nameWithType: SoUser.Deleted
  fullName: SuperOffice.CRM.Administration.SoUser.Deleted
- uid: SuperOffice.CRM.Administration.SoUser.GroupIdx*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.GroupIdx
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_GroupIdx
  name: GroupIdx
  nameWithType: SoUser.GroupIdx
  fullName: SuperOffice.CRM.Administration.SoUser.GroupIdx
- uid: SuperOffice.CRM.Administration.SoUser.RoleIdx*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.RoleIdx
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_RoleIdx
  name: RoleIdx
  nameWithType: SoUser.RoleIdx
  fullName: SuperOffice.CRM.Administration.SoUser.RoleIdx
- uid: SuperOffice.CRM.Administration.SoUser.PersonId*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.PersonId
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_PersonId
  name: PersonId
  nameWithType: SoUser.PersonId
  fullName: SuperOffice.CRM.Administration.SoUser.PersonId
- uid: SuperOffice.CRM.Administration.SoUser.Person
  commentId: P:SuperOffice.CRM.Administration.SoUser.Person
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Person
  name: Person
  nameWithType: SoUser.Person
  fullName: SuperOffice.CRM.Administration.SoUser.Person
- uid: SuperOffice.CRM.Administration.SoUser.Person*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Person
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Person
  name: Person
  nameWithType: SoUser.Person
  fullName: SuperOffice.CRM.Administration.SoUser.Person
- uid: SuperOffice.CRM.Entities.Person
  commentId: T:SuperOffice.CRM.Entities.Person
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.Person.html
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Entities.Person
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
- uid: SuperOffice.CRM.Administration.SoUser.UserType*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.UserType
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_UserType
  name: UserType
  nameWithType: SoUser.UserType
  fullName: SuperOffice.CRM.Administration.SoUser.UserType
- uid: SuperOffice.CRM.Administration.SoUser.UserName*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.UserName
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_UserName
  name: UserName
  nameWithType: SoUser.UserName
  fullName: SuperOffice.CRM.Administration.SoUser.UserName
- uid: SuperOffice.CRM.Administration.SoUser.EjUserId*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.EjUserId
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_EjUserId
  name: EjUserId
  nameWithType: SoUser.EjUserId
  fullName: SuperOffice.CRM.Administration.SoUser.EjUserId
- uid: SuperOffice.CRM.Administration.SoUser.LastLogin*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.LastLogin
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_LastLogin
  name: LastLogin
  nameWithType: SoUser.LastLogin
  fullName: SuperOffice.CRM.Administration.SoUser.LastLogin
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Administration.SoUser.Lastlogout*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Lastlogout
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Lastlogout
  name: Lastlogout
  nameWithType: SoUser.Lastlogout
  fullName: SuperOffice.CRM.Administration.SoUser.Lastlogout
- uid: SuperOffice.CRM.Administration.SoUser.IsOnTravel*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsOnTravel
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsOnTravel
  name: IsOnTravel
  nameWithType: SoUser.IsOnTravel
  fullName: SuperOffice.CRM.Administration.SoUser.IsOnTravel
- uid: SuperOffice.CRM.Administration.SoUser.Rank*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Rank
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Rank
  name: Rank
  nameWithType: SoUser.Rank
  fullName: SuperOffice.CRM.Administration.SoUser.Rank
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SuperOffice.CRM.Administration.SoUser.Tooltip*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Tooltip
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Tooltip
  name: Tooltip
  nameWithType: SoUser.Tooltip
  fullName: SuperOffice.CRM.Administration.SoUser.Tooltip
- uid: SuperOffice.CRM.Administration.SoUser.LoginRight*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.LoginRight
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_LoginRight
  name: LoginRight
  nameWithType: SoUser.LoginRight
  fullName: SuperOffice.CRM.Administration.SoUser.LoginRight
- uid: SuperOffice.CRM.Administration.SoUser.WinClient*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.WinClient
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_WinClient
  name: WinClient
  nameWithType: SoUser.WinClient
  fullName: SuperOffice.CRM.Administration.SoUser.WinClient
- uid: SuperOffice.CRM.Administration.SoUser.WebClient*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.WebClient
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_WebClient
  name: WebClient
  nameWithType: SoUser.WebClient
  fullName: SuperOffice.CRM.Administration.SoUser.WebClient
- uid: SuperOffice.CRM.Administration.SoUser.Travel*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Travel
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Travel
  name: Travel
  nameWithType: SoUser.Travel
  fullName: SuperOffice.CRM.Administration.SoUser.Travel
- uid: SuperOffice.CRM.Administration.SoUser.PocketClient*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.PocketClient
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_PocketClient
  name: PocketClient
  nameWithType: SoUser.PocketClient
  fullName: SuperOffice.CRM.Administration.SoUser.PocketClient
- uid: SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ConfidentialAppointment
  name: ConfidentialAppointment
  nameWithType: SoUser.ConfidentialAppointment
  fullName: SuperOffice.CRM.Administration.SoUser.ConfidentialAppointment
- uid: SuperOffice.CRM.Administration.SoUser.NetServerClient*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.NetServerClient
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_NetServerClient
  name: NetServerClient
  nameWithType: SoUser.NetServerClient
  fullName: SuperOffice.CRM.Administration.SoUser.NetServerClient
- uid: SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_CanCreateExternalPerson
  name: CanCreateExternalPerson
  nameWithType: SoUser.CanCreateExternalPerson
  fullName: SuperOffice.CRM.Administration.SoUser.CanCreateExternalPerson
- uid: SuperOffice.CRM.Administration.SoUser.PasswordFieldRight*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.PasswordFieldRight
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_PasswordFieldRight
  name: PasswordFieldRight
  nameWithType: SoUser.PasswordFieldRight
  fullName: SuperOffice.CRM.Administration.SoUser.PasswordFieldRight
- uid: SuperOffice.CRM.Administration.SoUser.CanValidatePassword*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.CanValidatePassword
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_CanValidatePassword
  name: CanValidatePassword
  nameWithType: SoUser.CanValidatePassword
  fullName: SuperOffice.CRM.Administration.SoUser.CanValidatePassword
- uid: SuperOffice.CRM.Administration.SoUser.Credentials*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.Credentials
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Credentials
  name: Credentials
  nameWithType: SoUser.Credentials
  fullName: SuperOffice.CRM.Administration.SoUser.Credentials
- uid: SuperOffice.CRM.Administration.SoUserCredential[]
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUserCredential.html
  name: SoUserCredential[]
  nameWithType: SoUserCredential[]
  fullName: SuperOffice.CRM.Administration.SoUserCredential[]
  nameWithType.vb: SoUserCredential()
  fullName.vb: SuperOffice.CRM.Administration.SoUserCredential()
  name.vb: SoUserCredential()
  spec.csharp:
  - uid: SuperOffice.CRM.Administration.SoUserCredential
    name: SoUserCredential
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUserCredential.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Administration.SoUserCredential
    name: SoUserCredential
    isExternal: true
    href: SuperOffice.CRM.Administration.SoUserCredential.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.SoUser.ExtraFields*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.ExtraFields
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_ExtraFields
  name: ExtraFields
  nameWithType: SoUser.ExtraFields
  fullName: SuperOffice.CRM.Administration.SoUser.ExtraFields
- uid: SuperOffice.CRM.Entities.EntityExtraFieldsHelper
  commentId: T:SuperOffice.CRM.Entities.EntityExtraFieldsHelper
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.EntityExtraFieldsHelper.html
  name: EntityExtraFieldsHelper
  nameWithType: EntityExtraFieldsHelper
  fullName: SuperOffice.CRM.Entities.EntityExtraFieldsHelper
- uid: SuperOffice.CRM.Administration.SoUser.CustomFields*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.CustomFields
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_CustomFields
  name: CustomFields
  nameWithType: SoUser.CustomFields
  fullName: SuperOffice.CRM.Administration.SoUser.CustomFields
- uid: SuperOffice.CRM.Entities.EntityCustomFieldsHelper
  commentId: T:SuperOffice.CRM.Entities.EntityCustomFieldsHelper
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.EntityCustomFieldsHelper.html
  name: EntityCustomFieldsHelper
  nameWithType: EntityCustomFieldsHelper
  fullName: SuperOffice.CRM.Entities.EntityCustomFieldsHelper
- uid: SuperOffice.CRM.Administration.SoUser.Deleted
  commentId: P:SuperOffice.CRM.Administration.SoUser.Deleted
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_Deleted
  name: Deleted
  nameWithType: SoUser.Deleted
  fullName: SuperOffice.CRM.Administration.SoUser.Deleted
- uid: SuperOffice.Data.NestedPersist.IsDeleted
  commentId: P:SuperOffice.Data.NestedPersist.IsDeleted
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_IsDeleted
  name: IsDeleted
  nameWithType: NestedPersist.IsDeleted
  fullName: SuperOffice.Data.NestedPersist.IsDeleted
- uid: SuperOffice.CRM.Administration.SoUser.IsDeleted*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsDeleted
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsDeleted
  name: IsDeleted
  nameWithType: SoUser.IsDeleted
  fullName: SuperOffice.CRM.Administration.SoUser.IsDeleted
- uid: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  commentId: P:SuperOffice.Data.NestedPersist.IsMarkedForDelete
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_IsMarkedForDelete
  name: IsMarkedForDelete
  nameWithType: NestedPersist.IsMarkedForDelete
  fullName: SuperOffice.Data.NestedPersist.IsMarkedForDelete
- uid: SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete*
  commentId: Overload:SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete
  isExternal: true
  href: SuperOffice.CRM.Administration.SoUser.html#SuperOffice_CRM_Administration_SoUser_IsMarkedForDelete
  name: IsMarkedForDelete
  nameWithType: SoUser.IsMarkedForDelete
  fullName: SuperOffice.CRM.Administration.SoUser.IsMarkedForDelete
