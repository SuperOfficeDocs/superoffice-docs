### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  id: DuplicateEntry
  parent: SuperOffice.CRM.Data.Util.Duplicates
  children:
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor(System.String,System.String,System.Int32,System.String,System.String)
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey
  langs:
  - csharp
  - vb
  name: DuplicateEntry
  nameWithType: DuplicateEntry
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nDescribes a duplicate entry\n"
  syntax:
    content: public class DuplicateEntry
    content.vb: Public Class DuplicateEntry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: DuplicateEntry()
  nameWithType: DuplicateEntry.DuplicateEntry()
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.DuplicateEntry()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nDefault constructor\n"
  syntax:
    content: public DuplicateEntry()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor(System.String,System.String,System.Int32,System.String,System.String)
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor(System.String,System.String,System.Int32,System.String,System.String)
  id: '#ctor(System.String,System.String,System.Int32,System.String,System.String)'
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: DuplicateEntry(String, String, Int32, String, String)
  nameWithType: DuplicateEntry.DuplicateEntry(String, String, Int32, String, String)
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.DuplicateEntry(System.String, System.String, System.Int32, System.String, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nConstructor with arguments\n"
  syntax:
    content: public DuplicateEntry(string ruleName, string ruleDisplayName, int soPrimaryId, string entryName, string identifier)
    parameters:
    - id: ruleName
      type: System.String
      description: What rule this duplicate originated from
    - id: ruleDisplayName
      type: System.String
      description: Display name of rule this duplicate originated from
    - id: soPrimaryId
      type: System.Int32
      description: Primary identity of superoffice database entry. 0 for external matches
    - id: entryName
      type: System.String
      description: Name of entry
    - id: identifier
      type: System.String
      description: Identifier for entry. typically used to identify entry in external systems
    content.vb: Public Sub New(ruleName As String, ruleDisplayName As String, soPrimaryId As Integer, entryName As String, identifier As String)
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName
  id: RuleName
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: RuleName
  nameWithType: DuplicateEntry.RuleName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nWhat rule this duplicate originated from\n"
  syntax:
    content: public string RuleName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RuleName As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName
  id: RuleDisplayName
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: RuleDisplayName
  nameWithType: DuplicateEntry.RuleDisplayName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nDisplay name of the rule this duplicate originated from\n"
  syntax:
    content: public string RuleDisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RuleDisplayName As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey
  id: SoPrimaryKey
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: SoPrimaryKey
  nameWithType: DuplicateEntry.SoPrimaryKey
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nPrimary identity of superoffice database entry. 0 for external matches\n"
  syntax:
    content: public int SoPrimaryKey { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SoPrimaryKey As Integer
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName
  id: EntryName
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: EntryName
  nameWithType: DuplicateEntry.EntryName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nName of entry\n"
  syntax:
    content: public string EntryName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EntryName As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier
  id: Identifier
  parent: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  langs:
  - csharp
  - vb
  name: Identifier
  nameWithType: DuplicateEntry.Identifier
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nIdentifier for entry. typically used to identify entry in external systems\n"
  syntax:
    content: public string Identifier { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Identifier As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Data.Util.Duplicates
  commentId: N:SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  name: SuperOffice.CRM.Data.Util.Duplicates
  nameWithType: SuperOffice.CRM.Data.Util.Duplicates
  fullName: SuperOffice.CRM.Data.Util.Duplicates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DuplicateEntry, To>()
  nameWithType: EnumUtil.MapEnums<DuplicateEntry, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DuplicateEntry, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To)()
  name.vb: MapEnums(Of DuplicateEntry, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DuplicateEntry, To>
    nameWithType: EnumUtil.MapEnums<DuplicateEntry, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DuplicateEntry, To)
    nameWithType: EnumUtil.MapEnums(Of DuplicateEntry, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<DuplicateEntry>(DuplicateEntry)
  nameWithType: ObjectExtensions.AssignByReflection<DuplicateEntry>(DuplicateEntry)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry>(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of DuplicateEntry)(DuplicateEntry)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  name.vb: AssignByReflection(Of DuplicateEntry)(DuplicateEntry)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<DuplicateEntry>
    nameWithType: ObjectExtensions.AssignByReflection<DuplicateEntry>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of DuplicateEntry)
    nameWithType: ObjectExtensions.AssignByReflection(Of DuplicateEntry)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<DuplicateEntry>()
  nameWithType: ObjectExtensions.GraphCopy<DuplicateEntry>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of DuplicateEntry)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)()
  name.vb: GraphCopy(Of DuplicateEntry)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<DuplicateEntry>
    nameWithType: ObjectExtensions.GraphCopy<DuplicateEntry>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of DuplicateEntry)
    nameWithType: ObjectExtensions.GraphCopy(Of DuplicateEntry)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DuplicateEntry, To>()
  nameWithType: Converters.MapEnums<DuplicateEntry, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To>()
  nameWithType.vb: Converters.MapEnums(Of DuplicateEntry, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To)()
  name.vb: MapEnums(Of DuplicateEntry, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DuplicateEntry, To>
    nameWithType: Converters.MapEnums<DuplicateEntry, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DuplicateEntry, To)
    nameWithType: Converters.MapEnums(Of DuplicateEntry, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.#ctor
  isExternal: true
  name: DuplicateEntry
  nameWithType: DuplicateEntry.DuplicateEntry
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.DuplicateEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName
  isExternal: true
  name: RuleName
  nameWithType: DuplicateEntry.RuleName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleName
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName
  isExternal: true
  name: RuleDisplayName
  nameWithType: DuplicateEntry.RuleDisplayName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.RuleDisplayName
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey
  isExternal: true
  name: SoPrimaryKey
  nameWithType: DuplicateEntry.SoPrimaryKey
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.SoPrimaryKey
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName
  isExternal: true
  name: EntryName
  nameWithType: DuplicateEntry.EntryName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.EntryName
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier
  isExternal: true
  name: Identifier
  nameWithType: DuplicateEntry.Identifier
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.Identifier
