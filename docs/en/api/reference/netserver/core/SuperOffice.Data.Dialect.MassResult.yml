### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Dialect.MassResult
  commentId: T:SuperOffice.Data.Dialect.MassResult
  id: MassResult
  parent: SuperOffice.Data.Dialect
  children:
  - SuperOffice.Data.Dialect.MassResult.#ctor
  - SuperOffice.Data.Dialect.MassResult.Deletes
  - SuperOffice.Data.Dialect.MassResult.Inserts
  - SuperOffice.Data.Dialect.MassResult.Message
  - SuperOffice.Data.Dialect.MassResult.RowStatus
  - SuperOffice.Data.Dialect.MassResult.Success
  - SuperOffice.Data.Dialect.MassResult.Unchanged
  - SuperOffice.Data.Dialect.MassResult.Updates
  langs:
  - csharp
  - vb
  name: MassResult
  nameWithType: MassResult
  fullName: SuperOffice.Data.Dialect.MassResult
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public class MassResult
    content.vb: Public Class MassResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.Dialect.MassResult.EnumUtil.MapEnums``2
  - SuperOffice.Data.Dialect.MassResult.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Dialect.MassResult)
  - SuperOffice.Data.Dialect.MassResult.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.Dialect.MassResult.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.Dialect.MassResult.#ctor
  commentId: M:SuperOffice.Data.Dialect.MassResult.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: MassResult()
  nameWithType: MassResult.MassResult()
  fullName: SuperOffice.Data.Dialect.MassResult.MassResult()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public MassResult()
    content.vb: Public Sub New
  overload: SuperOffice.Data.Dialect.MassResult.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Dialect.MassResult.Success
  commentId: P:SuperOffice.Data.Dialect.MassResult.Success
  id: Success
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: MassResult.Success
  fullName: SuperOffice.Data.Dialect.MassResult.Success
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nDid the operation succeed \n"
  syntax:
    content: public virtual bool Success { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable Property Success As Boolean
  overload: SuperOffice.Data.Dialect.MassResult.Success*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.Dialect.MassResult.Message
  commentId: P:SuperOffice.Data.Dialect.MassResult.Message
  id: Message
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: MassResult.Message
  fullName: SuperOffice.Data.Dialect.MassResult.Message
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nAny message from the method; blank if success \n"
  syntax:
    content: public virtual string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Message As String
  overload: SuperOffice.Data.Dialect.MassResult.Message*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.Dialect.MassResult.Inserts
  commentId: P:SuperOffice.Data.Dialect.MassResult.Inserts
  id: Inserts
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: Inserts
  nameWithType: MassResult.Inserts
  fullName: SuperOffice.Data.Dialect.MassResult.Inserts
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nNumber of rows inserted \n"
  syntax:
    content: public virtual int Inserts { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Inserts As Integer
  overload: SuperOffice.Data.Dialect.MassResult.Inserts*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.Dialect.MassResult.Updates
  commentId: P:SuperOffice.Data.Dialect.MassResult.Updates
  id: Updates
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: Updates
  nameWithType: MassResult.Updates
  fullName: SuperOffice.Data.Dialect.MassResult.Updates
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nNumber of rows updated \n"
  syntax:
    content: public virtual int Updates { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Updates As Integer
  overload: SuperOffice.Data.Dialect.MassResult.Updates*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.Dialect.MassResult.Deletes
  commentId: P:SuperOffice.Data.Dialect.MassResult.Deletes
  id: Deletes
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: Deletes
  nameWithType: MassResult.Deletes
  fullName: SuperOffice.Data.Dialect.MassResult.Deletes
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nNumber of rows deleted \n"
  syntax:
    content: public virtual int Deletes { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Deletes As Integer
  overload: SuperOffice.Data.Dialect.MassResult.Deletes*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.Dialect.MassResult.Unchanged
  commentId: P:SuperOffice.Data.Dialect.MassResult.Unchanged
  id: Unchanged
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: Unchanged
  nameWithType: MassResult.Unchanged
  fullName: SuperOffice.Data.Dialect.MassResult.Unchanged
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nNumber of rows deleted \n"
  syntax:
    content: public virtual int Unchanged { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Unchanged As Integer
  overload: SuperOffice.Data.Dialect.MassResult.Unchanged*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.Data.Dialect.MassResult.RowStatus
  commentId: P:SuperOffice.Data.Dialect.MassResult.RowStatus
  id: RowStatus
  parent: SuperOffice.Data.Dialect.MassResult
  langs:
  - csharp
  - vb
  name: RowStatus
  nameWithType: MassResult.RowStatus
  fullName: SuperOffice.Data.Dialect.MassResult.RowStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public virtual RowStatus[] RowStatus { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.Dialect.RowStatus[]
    content.vb: Public Overridable Property RowStatus As RowStatus()
  overload: SuperOffice.Data.Dialect.MassResult.RowStatus*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: SuperOffice.Data.Dialect
  commentId: N:SuperOffice.Data.Dialect
  isExternal: true
  name: SuperOffice.Data.Dialect
  nameWithType: SuperOffice.Data.Dialect
  fullName: SuperOffice.Data.Dialect
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.MassResult.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<MassResult, To>()
  nameWithType: EnumUtil.MapEnums<MassResult, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.MassResult, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of MassResult, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.MassResult, To)()
  name.vb: MapEnums(Of MassResult, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<MassResult, To>
    nameWithType: EnumUtil.MapEnums<MassResult, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.MassResult, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of MassResult, To)
    nameWithType: EnumUtil.MapEnums(Of MassResult, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.MassResult, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.MassResult.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Dialect.MassResult)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<MassResult>(MassResult)
  nameWithType: ObjectExtensions.AssignByReflection<MassResult>(MassResult)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Dialect.MassResult>(SuperOffice.Data.Dialect.MassResult)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of MassResult)(MassResult)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Dialect.MassResult)(SuperOffice.Data.Dialect.MassResult)
  name.vb: AssignByReflection(Of MassResult)(MassResult)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<MassResult>
    nameWithType: ObjectExtensions.AssignByReflection<MassResult>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Dialect.MassResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dialect.MassResult
    name: MassResult
    nameWithType: MassResult
    fullName: SuperOffice.Data.Dialect.MassResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of MassResult)
    nameWithType: ObjectExtensions.AssignByReflection(Of MassResult)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Dialect.MassResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dialect.MassResult
    name: MassResult
    nameWithType: MassResult
    fullName: SuperOffice.Data.Dialect.MassResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.MassResult.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<MassResult>()
  nameWithType: ObjectExtensions.GraphCopy<MassResult>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Dialect.MassResult>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of MassResult)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Dialect.MassResult)()
  name.vb: GraphCopy(Of MassResult)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<MassResult>
    nameWithType: ObjectExtensions.GraphCopy<MassResult>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Dialect.MassResult>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of MassResult)
    nameWithType: ObjectExtensions.GraphCopy(Of MassResult)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Dialect.MassResult)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.MassResult.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<MassResult, To>()
  nameWithType: Converters.MapEnums<MassResult, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.MassResult, To>()
  nameWithType.vb: Converters.MapEnums(Of MassResult, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.MassResult, To)()
  name.vb: MapEnums(Of MassResult, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<MassResult, To>
    nameWithType: Converters.MapEnums<MassResult, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.MassResult, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of MassResult, To)
    nameWithType: Converters.MapEnums(Of MassResult, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.MassResult, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Dialect.MassResult.#ctor*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.#ctor
  isExternal: true
  name: MassResult
  nameWithType: MassResult.MassResult
  fullName: SuperOffice.Data.Dialect.MassResult.MassResult
- uid: SuperOffice.Data.Dialect.MassResult.Success*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.Success
  isExternal: true
  name: Success
  nameWithType: MassResult.Success
  fullName: SuperOffice.Data.Dialect.MassResult.Success
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.Dialect.MassResult.Message*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.Message
  isExternal: true
  name: Message
  nameWithType: MassResult.Message
  fullName: SuperOffice.Data.Dialect.MassResult.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.Dialect.MassResult.Inserts*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.Inserts
  isExternal: true
  name: Inserts
  nameWithType: MassResult.Inserts
  fullName: SuperOffice.Data.Dialect.MassResult.Inserts
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.Dialect.MassResult.Updates*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.Updates
  isExternal: true
  name: Updates
  nameWithType: MassResult.Updates
  fullName: SuperOffice.Data.Dialect.MassResult.Updates
- uid: SuperOffice.Data.Dialect.MassResult.Deletes*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.Deletes
  isExternal: true
  name: Deletes
  nameWithType: MassResult.Deletes
  fullName: SuperOffice.Data.Dialect.MassResult.Deletes
- uid: SuperOffice.Data.Dialect.MassResult.Unchanged*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.Unchanged
  isExternal: true
  name: Unchanged
  nameWithType: MassResult.Unchanged
  fullName: SuperOffice.Data.Dialect.MassResult.Unchanged
- uid: SuperOffice.Data.Dialect.MassResult.RowStatus*
  commentId: Overload:SuperOffice.Data.Dialect.MassResult.RowStatus
  isExternal: true
  name: RowStatus
  nameWithType: MassResult.RowStatus
  fullName: SuperOffice.Data.Dialect.MassResult.RowStatus
- uid: SuperOffice.Data.Dialect.RowStatus[]
  isExternal: true
  name: RowStatus[]
  nameWithType: RowStatus[]
  fullName: SuperOffice.Data.Dialect.RowStatus[]
  nameWithType.vb: RowStatus()
  fullName.vb: SuperOffice.Data.Dialect.RowStatus()
  name.vb: RowStatus()
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.RowStatus
    name: RowStatus
    nameWithType: RowStatus
    fullName: SuperOffice.Data.Dialect.RowStatus
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.Dialect.RowStatus
    name: RowStatus
    nameWithType: RowStatus
    fullName: SuperOffice.Data.Dialect.RowStatus
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
