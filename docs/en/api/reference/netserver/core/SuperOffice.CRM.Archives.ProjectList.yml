### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Archives.ProjectList
  commentId: T:SuperOffice.CRM.Archives.ProjectList
  id: ProjectList
  parent: SuperOffice.CRM.Archives
  children:
  - SuperOffice.CRM.Archives.ProjectList.GetProject(System.Int32)
  - SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Entities.Contact)
  - SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Rows.ContactRow)
  - SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(System.Int32)
  - SuperOffice.CRM.Archives.ProjectList.GetProjectListItem(System.Int32)
  - SuperOffice.CRM.Archives.ProjectList.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Archives.ProjectList.ProjectExist(System.Int32)
  langs:
  - csharp
  - vb
  name: ProjectList
  nameWithType: ProjectList
  fullName: SuperOffice.CRM.Archives.ProjectList
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nProjectList implements the Projectlist in SuperOffice. \n"
  syntax:
    content: 'public sealed class ProjectList : ListBase<ProjectList.ProjectListQuery, ProjectListItem>, IEnumerable, IEnumerable<ProjectListItem>, IList, ICollection, IList<ProjectListItem>, ICollection<ProjectListItem>'
    content.vb: >-
      Public NotInheritable Class ProjectList
          Inherits ListBase(Of ProjectList.ProjectListQuery, ProjectListItem)
          Implements IEnumerable, IEnumerable(Of ProjectListItem), IList, ICollection, IList(Of ProjectListItem), ICollection(Of ProjectListItem)
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  implements:
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.ProjectListItem}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IList{SuperOffice.CRM.Archives.ProjectListItem}
  - System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.ProjectListItem}
  inheritedMembers:
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.CopyTo(System.Array,System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.CopyTo(SuperOffice.CRM.Archives.ProjectListItem[],System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IndexOf(SuperOffice.CRM.Archives.ProjectListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Contains(SuperOffice.CRM.Archives.ProjectListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.GetEnumerator
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.ListCollection
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Count
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IsFixedSize
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IsReadOnly
  extensionMethods:
  - SuperOffice.CRM.Archives.ProjectList.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Archives.ProjectList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Archives.ProjectList.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  id: OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: OnLoad(ProjectList.ProjectListQuery, SoDataReader)
  nameWithType: ProjectList.OnLoad(ProjectList.ProjectListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Archives.ProjectList.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nResponsible for reading each row with data from the SoDataReader and insert the object each row represents\ninto the class&apos; collection. \n"
  syntax:
    content: protected override void OnLoad(ProjectList.ProjectListQuery query, SoDataReader reader)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader which contains all data in the list.
    content.vb: Protected Overrides Sub OnLoad(query As ProjectList.ProjectListQuery, reader As SoDataReader)
  overridden: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  overload: SuperOffice.CRM.Archives.ProjectList.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.ProjectList.GetProject(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.GetProject(System.Int32)
  id: GetProject(System.Int32)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: GetProject(Int32)
  nameWithType: ProjectList.GetProject(Int32)
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProject(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the project corresponding to the project_id.\n"
  syntax:
    content: public Project GetProject(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project.
    return:
      type: SuperOffice.CRM.Entities.Project
      description: The project.
    content.vb: Public Function GetProject(projectId As Integer) As Project
  overload: SuperOffice.CRM.Archives.ProjectList.GetProject*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(System.Int32)
  id: GetProjectListFromContact(System.Int32)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: GetProjectListFromContact(Int32)
  nameWithType: ProjectList.GetProjectListFromContact(Int32)
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the project list that corresponds to the contact_id.\n"
  syntax:
    content: public ProjectList GetProjectListFromContact(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact to build the list from.
    return:
      type: SuperOffice.CRM.Archives.ProjectList
      description: The project list.
    content.vb: Public Function GetProjectListFromContact(contactId As Integer) As ProjectList
  overload: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Rows.ContactRow)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Rows.ContactRow)
  id: GetProjectListFromContact(SuperOffice.CRM.Rows.ContactRow)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: GetProjectListFromContact(ContactRow)
  nameWithType: ProjectList.GetProjectListFromContact(ContactRow)
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Rows.ContactRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the project list that corresponds to the contact-row.\n"
  syntax:
    content: public ProjectList GetProjectListFromContact(ContactRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.ContactRow
      description: The contact to build the list from.
    return:
      type: SuperOffice.CRM.Archives.ProjectList
      description: The project list.
    content.vb: Public Function GetProjectListFromContact(row As ContactRow) As ProjectList
  overload: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Entities.Contact)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Entities.Contact)
  id: GetProjectListFromContact(SuperOffice.CRM.Entities.Contact)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: GetProjectListFromContact(Contact)
  nameWithType: ProjectList.GetProjectListFromContact(Contact)
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact(SuperOffice.CRM.Entities.Contact)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the project list that corresponds to the contact.\n"
  syntax:
    content: public ProjectList GetProjectListFromContact(Contact contact)
    parameters:
    - id: contact
      type: SuperOffice.CRM.Entities.Contact
      description: The contact to build the list from.
    return:
      type: SuperOffice.CRM.Archives.ProjectList
      description: The project list.
    content.vb: Public Function GetProjectListFromContact(contact As Contact) As ProjectList
  overload: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.ProjectList.ProjectExist(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.ProjectExist(System.Int32)
  id: ProjectExist(System.Int32)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: ProjectExist(Int32)
  nameWithType: ProjectList.ProjectExist(Int32)
  fullName: SuperOffice.CRM.Archives.ProjectList.ProjectExist(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nChecks if the project described by the project_id exist in the list.\n"
  syntax:
    content: public bool ProjectExist(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project
    return:
      type: System.Boolean
      description: True/false
    content.vb: Public Function ProjectExist(projectId As Integer) As Boolean
  overload: SuperOffice.CRM.Archives.ProjectList.ProjectExist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.ProjectList.GetProjectListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.ProjectList.GetProjectListItem(System.Int32)
  id: GetProjectListItem(System.Int32)
  parent: SuperOffice.CRM.Archives.ProjectList
  langs:
  - csharp
  - vb
  name: GetProjectListItem(Int32)
  nameWithType: ProjectList.GetProjectListItem(Int32)
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProjectListItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nWill return the ProjectListItem described by the projectId.\n"
  syntax:
    content: public ProjectListItem GetProjectListItem(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project
    return:
      type: SuperOffice.CRM.Archives.ProjectListItem
      description: The project
    content.vb: Public Function GetProjectListItem(projectId As Integer) As ProjectListItem
  overload: SuperOffice.CRM.Archives.ProjectList.GetProjectListItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Archives
  commentId: N:SuperOffice.CRM.Archives
  isExternal: true
  name: SuperOffice.CRM.Archives
  nameWithType: SuperOffice.CRM.Archives
  fullName: SuperOffice.CRM.Archives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  commentId: T:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  parent: SuperOffice.CRM.Lists
  definition: SuperOffice.CRM.Lists.ListBase`2
  name: ListBase<ProjectList.ProjectListQuery, ProjectListItem>
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem)
  name.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.ProjectListItem}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.ProjectListItem}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ProjectListItem>
  nameWithType: IEnumerable<ProjectListItem>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Archives.ProjectListItem>
  nameWithType.vb: IEnumerable(Of ProjectListItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Archives.ProjectListItem)
  name.vb: IEnumerable(Of ProjectListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IList{SuperOffice.CRM.Archives.ProjectListItem}
  commentId: '!:System.Collections.Generic.IList{SuperOffice.CRM.Archives.ProjectListItem}'
  definition: System.Collections.Generic.IList`1
  name: IList<ProjectListItem>
  nameWithType: IList<ProjectListItem>
  fullName: System.Collections.Generic.IList<SuperOffice.CRM.Archives.ProjectListItem>
  nameWithType.vb: IList(Of ProjectListItem)
  fullName.vb: System.Collections.Generic.IList(Of SuperOffice.CRM.Archives.ProjectListItem)
  name.vb: IList(Of ProjectListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.ProjectListItem}
  commentId: '!:System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.ProjectListItem}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ProjectListItem>
  nameWithType: ICollection<ProjectListItem>
  fullName: System.Collections.Generic.ICollection<SuperOffice.CRM.Archives.ProjectListItem>
  nameWithType.vb: ICollection(Of ProjectListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of SuperOffice.CRM.Archives.ProjectListItem)
  name.vb: ICollection(Of ProjectListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.CopyTo(System.Array,System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.CopyTo(SuperOffice.CRM.Archives.ProjectListItem[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.CopyTo(SuperOffice.CRM.Archives.ProjectListItem[],System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  name: CopyTo(ProjectListItem[], Int32)
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.CopyTo(ProjectListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.CopyTo(SuperOffice.CRM.Archives.ProjectListItem[], System.Int32)
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).CopyTo(ProjectListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).CopyTo(SuperOffice.CRM.Archives.ProjectListItem(), System.Int32)
  name.vb: CopyTo(ProjectListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IndexOf(SuperOffice.CRM.Archives.ProjectListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IndexOf(SuperOffice.CRM.Archives.ProjectListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  name: IndexOf(ProjectListItem)
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.IndexOf(ProjectListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.IndexOf(SuperOffice.CRM.Archives.ProjectListItem)
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).IndexOf(ProjectListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).IndexOf(SuperOffice.CRM.Archives.ProjectListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Contains(SuperOffice.CRM.Archives.ProjectListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Contains(SuperOffice.CRM.Archives.ProjectListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  name: Contains(ProjectListItem)
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.Contains(ProjectListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.Contains(SuperOffice.CRM.Archives.ProjectListItem)
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).Contains(ProjectListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).Contains(SuperOffice.CRM.Archives.ProjectListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectListItem
    name: ProjectListItem
    nameWithType: ProjectListItem
    fullName: SuperOffice.CRM.Archives.ProjectListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  name: OnLoad(ProjectList.ProjectListQuery, SoDataReader)
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.OnLoad(ProjectList.ProjectListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).OnLoad(ProjectList.ProjectListQuery, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).OnLoad(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.GetEnumerator
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Item(System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.ListCollection
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  name: ListCollection
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.ListCollection
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.Count
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Count
  name: Count
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.Count
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IsFixedSize
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  name: IsFixedSize
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}.IsReadOnly
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.CRM.Archives.ProjectListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  name: IsReadOnly
  nameWithType: ListBase<ProjectList.ProjectListQuery, ProjectListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of ProjectList.ProjectListQuery, ProjectListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.CRM.Archives.ProjectListItem).IsReadOnly
- uid: SuperOffice.CRM.Archives.ProjectList.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ProjectList, To>()
  nameWithType: EnumUtil.MapEnums<ProjectList, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.ProjectList, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ProjectList, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.ProjectList, To)()
  name.vb: MapEnums(Of ProjectList, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ProjectList, To>
    nameWithType: EnumUtil.MapEnums<ProjectList, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.ProjectList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ProjectList, To)
    nameWithType: EnumUtil.MapEnums(Of ProjectList, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.ProjectList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.ProjectList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ProjectList, To>()
  nameWithType: Converters.MapEnums<ProjectList, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.ProjectList, To>()
  nameWithType.vb: Converters.MapEnums(Of ProjectList, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.ProjectList, To)()
  name.vb: MapEnums(Of ProjectList, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ProjectList, To>
    nameWithType: Converters.MapEnums<ProjectList, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.ProjectList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ProjectList, To)
    nameWithType: Converters.MapEnums(Of ProjectList, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.ProjectList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ListBase`2
  commentId: T:SuperOffice.CRM.Lists.ListBase`2
  isExternal: true
  name: ListBase<TListSelect, TListItem>
  nameWithType: ListBase<TListSelect, TListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>
  nameWithType.vb: ListBase(Of TListSelect, TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem)
  name.vb: ListBase(Of TListSelect, TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  isExternal: true
  name: CopyTo(TListItem[], Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(TListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(TListItem[], System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), System.Int32)
  name.vb: CopyTo(TListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  isExternal: true
  name: IndexOf(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<TListSelect, TListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of TListSelect, TListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  isExternal: true
  name: Contains(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.Contains(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Contains(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<TListSelect, TListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of TListSelect, TListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  isExternal: true
  name: OnLoad(TListSelect, SoDataReader)
  nameWithType: ListBase<TListSelect, TListItem>.OnLoad(TListSelect, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoad(TListSelect, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).OnLoad(TListSelect, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoad(TListSelect, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase<TListSelect, TListItem>.OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
    name: OnLoad
    nameWithType: ListBase(Of TListSelect, TListItem).OnLoad
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of TListSelect, TListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of TListSelect, TListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<TListSelect, TListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of TListSelect, TListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.ListCollection
  isExternal: true
  name: ListCollection
  nameWithType: ListBase<TListSelect, TListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListCollection
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase`2.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Count
  isExternal: true
  name: Count
  nameWithType: ListBase<TListSelect, TListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Count
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  isExternal: true
  name: IsFixedSize
  nameWithType: ListBase<TListSelect, TListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ListBase<TListSelect, TListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsReadOnly
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Archives.ProjectList.OnLoad*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectList.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: ProjectList.OnLoad
  fullName: SuperOffice.CRM.Archives.ProjectList.OnLoad
- uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
  commentId: T:SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: ProjectList.ProjectListQuery
  nameWithType: ProjectList.ProjectListQuery
  fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Archives.ProjectList.GetProject*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectList.GetProject
  isExternal: true
  name: GetProject
  nameWithType: ProjectList.GetProject
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProject
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Entities.Project
  commentId: T:SuperOffice.CRM.Entities.Project
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Project
  nameWithType: Project
  fullName: SuperOffice.CRM.Entities.Project
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact
  isExternal: true
  name: GetProjectListFromContact
  nameWithType: ProjectList.GetProjectListFromContact
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProjectListFromContact
- uid: SuperOffice.CRM.Archives.ProjectList
  commentId: T:SuperOffice.CRM.Archives.ProjectList
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: ProjectList
  nameWithType: ProjectList
  fullName: SuperOffice.CRM.Archives.ProjectList
- uid: SuperOffice.CRM.Rows.ContactRow
  commentId: T:SuperOffice.CRM.Rows.ContactRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ContactRow
  nameWithType: ContactRow
  fullName: SuperOffice.CRM.Rows.ContactRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Entities.Contact
  commentId: T:SuperOffice.CRM.Entities.Contact
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Contact
  nameWithType: Contact
  fullName: SuperOffice.CRM.Entities.Contact
- uid: SuperOffice.CRM.Archives.ProjectList.ProjectExist*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectList.ProjectExist
  isExternal: true
  name: ProjectExist
  nameWithType: ProjectList.ProjectExist
  fullName: SuperOffice.CRM.Archives.ProjectList.ProjectExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Archives.ProjectList.GetProjectListItem*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectList.GetProjectListItem
  isExternal: true
  name: GetProjectListItem
  nameWithType: ProjectList.GetProjectListItem
  fullName: SuperOffice.CRM.Archives.ProjectList.GetProjectListItem
- uid: SuperOffice.CRM.Archives.ProjectListItem
  commentId: T:SuperOffice.CRM.Archives.ProjectListItem
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: ProjectListItem
  nameWithType: ProjectListItem
  fullName: SuperOffice.CRM.Archives.ProjectListItem
