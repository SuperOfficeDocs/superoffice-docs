### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Ticket.TicketData
  commentId: T:SuperOffice.CRM.Ticket.TicketData
  id: TicketData
  parent: SuperOffice.CRM.Ticket
  children:
  - SuperOffice.CRM.Ticket.TicketData.#ctor
  - SuperOffice.CRM.Ticket.TicketData.Category
  - SuperOffice.CRM.Ticket.TicketData.CreatedAt
  - SuperOffice.CRM.Ticket.TicketData.CreatedBy
  - SuperOffice.CRM.Ticket.TicketData.CustId
  - SuperOffice.CRM.Ticket.TicketData.FromAddress
  - SuperOffice.CRM.Ticket.TicketData.OwnedBy
  - SuperOffice.CRM.Ticket.TicketData.TicketId
  - SuperOffice.CRM.Ticket.TicketData.TicketTypeId
  - SuperOffice.CRM.Ticket.TicketData.Title
  langs:
  - csharp
  - vb
  name: TicketData
  nameWithType: TicketData
  fullName: SuperOffice.CRM.Ticket.TicketData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: 'public class TicketData : Object'
    content.vb: >-
      Public Class TicketData
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Ticket.TicketData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Ticket.TicketData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Ticket.TicketData)
  - SuperOffice.CRM.Ticket.TicketData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Ticket.TicketData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Ticket.TicketData.#ctor
  commentId: M:SuperOffice.CRM.Ticket.TicketData.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: TicketData()
  nameWithType: TicketData.TicketData()
  fullName: SuperOffice.CRM.Ticket.TicketData.TicketData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public TicketData()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Ticket.TicketData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.TicketId
  commentId: P:SuperOffice.CRM.Ticket.TicketData.TicketId
  id: TicketId
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: TicketId
  nameWithType: TicketData.TicketId
  fullName: SuperOffice.CRM.Ticket.TicketData.TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int TicketId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TicketId As Integer
  overload: SuperOffice.CRM.Ticket.TicketData.TicketId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.TicketTypeId
  commentId: P:SuperOffice.CRM.Ticket.TicketData.TicketTypeId
  id: TicketTypeId
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: TicketTypeId
  nameWithType: TicketData.TicketTypeId
  fullName: SuperOffice.CRM.Ticket.TicketData.TicketTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int TicketTypeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TicketTypeId As Integer
  overload: SuperOffice.CRM.Ticket.TicketData.TicketTypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.CreatedAt
  commentId: P:SuperOffice.CRM.Ticket.TicketData.CreatedAt
  id: CreatedAt
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: TicketData.CreatedAt
  fullName: SuperOffice.CRM.Ticket.TicketData.CreatedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public DateTime CreatedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedAt As DateTime
  overload: SuperOffice.CRM.Ticket.TicketData.CreatedAt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.CreatedBy
  commentId: P:SuperOffice.CRM.Ticket.TicketData.CreatedBy
  id: CreatedBy
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: TicketData.CreatedBy
  fullName: SuperOffice.CRM.Ticket.TicketData.CreatedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int CreatedBy { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CreatedBy As Integer
  overload: SuperOffice.CRM.Ticket.TicketData.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.OwnedBy
  commentId: P:SuperOffice.CRM.Ticket.TicketData.OwnedBy
  id: OwnedBy
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: OwnedBy
  nameWithType: TicketData.OwnedBy
  fullName: SuperOffice.CRM.Ticket.TicketData.OwnedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int OwnedBy { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property OwnedBy As Integer
  overload: SuperOffice.CRM.Ticket.TicketData.OwnedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.Category
  commentId: P:SuperOffice.CRM.Ticket.TicketData.Category
  id: Category
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: TicketData.Category
  fullName: SuperOffice.CRM.Ticket.TicketData.Category
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int Category { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Category As Integer
  overload: SuperOffice.CRM.Ticket.TicketData.Category*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.Title
  commentId: P:SuperOffice.CRM.Ticket.TicketData.Title
  id: Title
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TicketData.Title
  fullName: SuperOffice.CRM.Ticket.TicketData.Title
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: SuperOffice.CRM.Ticket.TicketData.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.CustId
  commentId: P:SuperOffice.CRM.Ticket.TicketData.CustId
  id: CustId
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: CustId
  nameWithType: TicketData.CustId
  fullName: SuperOffice.CRM.Ticket.TicketData.CustId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int CustId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CustId As Integer
  overload: SuperOffice.CRM.Ticket.TicketData.CustId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketData.FromAddress
  commentId: P:SuperOffice.CRM.Ticket.TicketData.FromAddress
  id: FromAddress
  parent: SuperOffice.CRM.Ticket.TicketData
  langs:
  - csharp
  - vb
  name: FromAddress
  nameWithType: TicketData.FromAddress
  fullName: SuperOffice.CRM.Ticket.TicketData.FromAddress
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public string FromAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FromAddress As String
  overload: SuperOffice.CRM.Ticket.TicketData.FromAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Ticket
  commentId: N:SuperOffice.CRM.Ticket
  isExternal: true
  name: SuperOffice.CRM.Ticket
  nameWithType: SuperOffice.CRM.Ticket
  fullName: SuperOffice.CRM.Ticket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Ticket.TicketData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketData, To>()
  nameWithType: EnumUtil.MapEnums<TicketData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.TicketData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.TicketData, To)()
  name.vb: MapEnums(Of TicketData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketData, To>
    nameWithType: EnumUtil.MapEnums<TicketData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.TicketData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketData, To)
    nameWithType: EnumUtil.MapEnums(Of TicketData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.TicketData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Ticket.TicketData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TicketData>(TicketData)
  nameWithType: ObjectExtensions.AssignByReflection<TicketData>(TicketData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Ticket.TicketData>(SuperOffice.CRM.Ticket.TicketData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TicketData)(TicketData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Ticket.TicketData)(SuperOffice.CRM.Ticket.TicketData)
  name.vb: AssignByReflection(Of TicketData)(TicketData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TicketData>
    nameWithType: ObjectExtensions.AssignByReflection<TicketData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Ticket.TicketData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Ticket.TicketData
    name: TicketData
    nameWithType: TicketData
    fullName: SuperOffice.CRM.Ticket.TicketData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TicketData)
    nameWithType: ObjectExtensions.AssignByReflection(Of TicketData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Ticket.TicketData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Ticket.TicketData
    name: TicketData
    nameWithType: TicketData
    fullName: SuperOffice.CRM.Ticket.TicketData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TicketData>()
  nameWithType: ObjectExtensions.GraphCopy<TicketData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Ticket.TicketData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TicketData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Ticket.TicketData)()
  name.vb: GraphCopy(Of TicketData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TicketData>
    nameWithType: ObjectExtensions.GraphCopy<TicketData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Ticket.TicketData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TicketData)
    nameWithType: ObjectExtensions.GraphCopy(Of TicketData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Ticket.TicketData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketData, To>()
  nameWithType: Converters.MapEnums<TicketData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.TicketData, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.TicketData, To)()
  name.vb: MapEnums(Of TicketData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketData, To>
    nameWithType: Converters.MapEnums<TicketData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.TicketData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketData, To)
    nameWithType: Converters.MapEnums(Of TicketData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.TicketData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Ticket.TicketData.#ctor*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.#ctor
  isExternal: true
  name: TicketData
  nameWithType: TicketData.TicketData
  fullName: SuperOffice.CRM.Ticket.TicketData.TicketData
- uid: SuperOffice.CRM.Ticket.TicketData.TicketId*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.TicketId
  isExternal: true
  name: TicketId
  nameWithType: TicketData.TicketId
  fullName: SuperOffice.CRM.Ticket.TicketData.TicketId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Ticket.TicketData.TicketTypeId*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.TicketTypeId
  isExternal: true
  name: TicketTypeId
  nameWithType: TicketData.TicketTypeId
  fullName: SuperOffice.CRM.Ticket.TicketData.TicketTypeId
- uid: SuperOffice.CRM.Ticket.TicketData.CreatedAt*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.CreatedAt
  isExternal: true
  name: CreatedAt
  nameWithType: TicketData.CreatedAt
  fullName: SuperOffice.CRM.Ticket.TicketData.CreatedAt
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Ticket.TicketData.CreatedBy*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.CreatedBy
  isExternal: true
  name: CreatedBy
  nameWithType: TicketData.CreatedBy
  fullName: SuperOffice.CRM.Ticket.TicketData.CreatedBy
- uid: SuperOffice.CRM.Ticket.TicketData.OwnedBy*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.OwnedBy
  isExternal: true
  name: OwnedBy
  nameWithType: TicketData.OwnedBy
  fullName: SuperOffice.CRM.Ticket.TicketData.OwnedBy
- uid: SuperOffice.CRM.Ticket.TicketData.Category*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.Category
  isExternal: true
  name: Category
  nameWithType: TicketData.Category
  fullName: SuperOffice.CRM.Ticket.TicketData.Category
- uid: SuperOffice.CRM.Ticket.TicketData.Title*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.Title
  isExternal: true
  name: Title
  nameWithType: TicketData.Title
  fullName: SuperOffice.CRM.Ticket.TicketData.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Ticket.TicketData.CustId*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.CustId
  isExternal: true
  name: CustId
  nameWithType: TicketData.CustId
  fullName: SuperOffice.CRM.Ticket.TicketData.CustId
- uid: SuperOffice.CRM.Ticket.TicketData.FromAddress*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketData.FromAddress
  isExternal: true
  name: FromAddress
  nameWithType: TicketData.FromAddress
  fullName: SuperOffice.CRM.Ticket.TicketData.FromAddress
