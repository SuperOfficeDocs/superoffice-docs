### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  commentId: T:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  id: AliasProviderBase`1
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.#ctor(System.String)
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AddEntityOverride(System.String,System.String,System.String)
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AliasedProvider
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.Close
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableColumns
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableEntities
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetReader(System.String)
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetResultInformation
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetRows(System.String)
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredColumns(System.String[])
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredEntities(System.String[])
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetPagingInfo(System.Int32,System.Int32)
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  langs:
  - csharp
  - vb
  name: AliasProviderBase<AliasedType>
  nameWithType: AliasProviderBase<AliasedType>
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nThis base class implements a provider that is simply a facade for another provider. All methods\nare virtual, with a base implementation that simply calls the aliased provider.\n"
  remarks: "\nThis mechanism is useful if the same provider is used together with criteria storage in multiple\ncontexts, and we want to keep the stored criteria separate for each context. In that case, we define\na new provider as an alias, provide mappings for it in criterionmapping.config, and happily use it.\n"
  syntax:
    content: 'public abstract class AliasProviderBase<AliasedType> : IArchiveProvider, IArchiveProviderHasRows, IArchiveProviderHasColumns, IArchiveProviderHasEntities, IPlugin where AliasedType : IArchiveProvider'
    typeParameters:
    - id: AliasedType
    content.vb: >-
      Public MustInherit Class AliasProviderBase(Of AliasedType As IArchiveProvider)
          Implements IArchiveProvider, IArchiveProviderHasRows, IArchiveProviderHasColumns, IArchiveProviderHasEntities, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProvider
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: AliasProviderBase(Of AliasedType)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType)
  name.vb: AliasProviderBase(Of AliasedType)
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.#ctor(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: AliasProviderBase(String)
  nameWithType: AliasProviderBase<AliasedType>.AliasProviderBase(String)
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.AliasProviderBase(System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected AliasProviderBase(string aliasedProviderName)
    parameters:
    - id: aliasedProviderName
      type: System.String
    content.vb: Protected Sub New(aliasedProviderName As String)
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.#ctor*
  nameWithType.vb: AliasProviderBase(Of AliasedType).AliasProviderBase(String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).AliasProviderBase(System.String)
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AddEntityOverride(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AddEntityOverride(System.String,System.String,System.String)
  id: AddEntityOverride(System.String,System.String,System.String)
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: AddEntityOverride(String, String, String)
  nameWithType: AliasProviderBase<AliasedType>.AddEntityOverride(String, String, String)
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.AddEntityOverride(System.String, System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected void AddEntityOverride(string innerProviderEntity, string overrideName, string overrideDisplayName)
    parameters:
    - id: innerProviderEntity
      type: System.String
    - id: overrideName
      type: System.String
    - id: overrideDisplayName
      type: System.String
    content.vb: Protected Sub AddEntityOverride(innerProviderEntity As String, overrideName As String, overrideDisplayName As String)
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AddEntityOverride*
  nameWithType.vb: AliasProviderBase(Of AliasedType).AddEntityOverride(String, String, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).AddEntityOverride(System.String, System.String, System.String)
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetReader(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetReader(System.String)
  id: GetReader(System.String)
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: GetReader(String)
  nameWithType: AliasProviderBase<AliasedType>.GetReader(String)
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetReader(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nStart the provider, returning an IDataReader compatible object to the client for row enumeration and data access\n"
  syntax:
    content: public virtual IDataReader GetReader(string options)
    parameters:
    - id: options
      type: System.String
      description: Options, passed to the internal GetRows method
    return:
      type: System.Data.IDataReader
      description: IDataReader primed to provide results
    content.vb: Public Overridable Function GetReader(options As String) As IDataReader
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetReader*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetReader(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetReader(System.String)
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetRows(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetRows(System.String)
  id: GetRows(System.String)
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: GetRows(String)
  nameWithType: AliasProviderBase<AliasedType>.GetRows(String)
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetRows(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual IEnumerable<ArchiveRow> GetRows(string options)
    parameters:
    - id: options
      type: System.String
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
    content.vb: Public Overridable Function GetRows(options As String) As IEnumerable(Of ArchiveRow)
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetRows*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetRows(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetRows(System.String)
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetResultInformation
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetResultInformation
  id: GetResultInformation
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: GetResultInformation()
  nameWithType: AliasProviderBase<AliasedType>.GetResultInformation()
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetResultInformation()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ArchiveResultInformation GetResultInformation()
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
    content.vb: Public Function GetResultInformation As ArchiveResultInformation
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetResultInformation*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetResultInformation()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetResultInformation()
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.Close
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.Close
  id: Close
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: AliasProviderBase<AliasedType>.Close()
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.Close()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void Close()
    content.vb: Public Overridable Sub Close
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.Close*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  nameWithType.vb: AliasProviderBase(Of AliasedType).Close()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).Close()
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetPagingInfo(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetPagingInfo(System.Int32,System.Int32)
  id: SetPagingInfo(System.Int32,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: SetPagingInfo(Int32, Int32)
  nameWithType: AliasProviderBase<AliasedType>.SetPagingInfo(Int32, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetPagingInfo(System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetPagingInfo(int pageSize, int pageNumber)
    parameters:
    - id: pageSize
      type: System.Int32
    - id: pageNumber
      type: System.Int32
    content.vb: Public Overridable Sub SetPagingInfo(pageSize As Integer, pageNumber As Integer)
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetPagingInfo*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetPagingInfo(Int32, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetPagingInfo(System.Int32, System.Int32)
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableColumns
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableColumns
  id: GetAvailableColumns
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: GetAvailableColumns()
  nameWithType: AliasProviderBase<AliasedType>.GetAvailableColumns()
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetAvailableColumns()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual List<ArchiveColumnInfo> GetAvailableColumns()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
    content.vb: Public Overridable Function GetAvailableColumns As List(Of ArchiveColumnInfo)
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableColumns*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetAvailableColumns()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetAvailableColumns()
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredColumns(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredColumns(System.String[])
  id: SetDesiredColumns(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: SetDesiredColumns(String[])
  nameWithType: AliasProviderBase<AliasedType>.SetDesiredColumns(String[])
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetDesiredColumns(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetDesiredColumns(params string[] columnIds)
    parameters:
    - id: columnIds
      type: System.String[]
    content.vb: Public Overridable Sub SetDesiredColumns(ParamArray columnIds As String())
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredColumns*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetDesiredColumns(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetDesiredColumns(System.String())
  name.vb: SetDesiredColumns(String())
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  id: SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: SetOrderBy(ArchiveOrderByInfo[])
  nameWithType: AliasProviderBase<AliasedType>.SetOrderBy(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetOrderBy(params ArchiveOrderByInfo[] orderBy)
    parameters:
    - id: orderBy
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
    content.vb: Public Overridable Sub SetOrderBy(ParamArray orderBy As ArchiveOrderByInfo())
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetOrderBy*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetOrderBy(ArchiveOrderByInfo())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: SetOrderBy(ArchiveOrderByInfo())
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: SetRestriction(ArchiveRestrictionInfo[])
  nameWithType: AliasProviderBase<AliasedType>.SetRestriction(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual bool SetRestriction(params ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
    return:
      type: System.Boolean
    content.vb: Public Overridable Function SetRestriction(ParamArray restrictions As ArchiveRestrictionInfo()) As Boolean
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetRestriction*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetRestriction(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetRestriction(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableEntities
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableEntities
  id: GetAvailableEntities
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: GetAvailableEntities()
  nameWithType: AliasProviderBase<AliasedType>.GetAvailableEntities()
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetAvailableEntities()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual List<ArchiveRowTypeInfo> GetAvailableEntities()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
    content.vb: Public Overridable Function GetAvailableEntities As List(Of ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableEntities*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetAvailableEntities()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetAvailableEntities()
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredEntities(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredEntities(System.String[])
  id: SetDesiredEntities(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: SetDesiredEntities(String[])
  nameWithType: AliasProviderBase<AliasedType>.SetDesiredEntities(String[])
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetDesiredEntities(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual void SetDesiredEntities(params string[] entities)
    parameters:
    - id: entities
      type: System.String[]
    content.vb: Public Overridable Sub SetDesiredEntities(ParamArray entities As String())
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredEntities*
  implements:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetDesiredEntities(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetDesiredEntities(System.String())
  name.vb: SetDesiredEntities(String())
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AliasedProvider
  commentId: P:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AliasedProvider
  id: AliasedProvider
  parent: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1
  langs:
  - csharp
  - vb
  name: AliasedProvider
  nameWithType: AliasProviderBase<AliasedType>.AliasedProvider
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.AliasedProvider
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected AliasedType AliasedProvider { get; }
    parameters: []
    return:
      type: '{AliasedType}'
    content.vb: Protected ReadOnly Property AliasedProvider As AliasedType
  overload: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AliasedProvider*
  nameWithType.vb: AliasProviderBase(Of AliasedType).AliasedProvider
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).AliasedProvider
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProvider
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProvider
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProvider
  nameWithType: IArchiveProvider
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProvider
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasRows
  nameWithType: IArchiveProviderHasRows
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasColumns
  nameWithType: IArchiveProviderHasColumns
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: IArchiveProviderHasEntities
  nameWithType: IArchiveProviderHasEntities
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AliasProviderBase<AliasedType>, To>()
  nameWithType: EnumUtil.MapEnums<AliasProviderBase<AliasedType>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AliasProviderBase(Of AliasedType), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType), To)()
  name.vb: MapEnums(Of AliasProviderBase(Of AliasedType), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AliasProviderBase<AliasedType>, To>
    nameWithType: EnumUtil.MapEnums<AliasProviderBase<AliasedType>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AliasProviderBase(Of AliasedType), To)
    nameWithType: EnumUtil.MapEnums(Of AliasProviderBase(Of AliasedType), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AliasProviderBase<AliasedType>, To>()
  nameWithType: Converters.MapEnums<AliasProviderBase<AliasedType>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>, To>()
  nameWithType.vb: Converters.MapEnums(Of AliasProviderBase(Of AliasedType), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType), To)()
  name.vb: MapEnums(Of AliasProviderBase(Of AliasedType), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AliasProviderBase<AliasedType>, To>
    nameWithType: Converters.MapEnums<AliasProviderBase<AliasedType>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AliasProviderBase(Of AliasedType), To)
    nameWithType: Converters.MapEnums(Of AliasProviderBase(Of AliasedType), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.#ctor
  isExternal: true
  name: AliasProviderBase
  nameWithType: AliasProviderBase<AliasedType>.AliasProviderBase
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.AliasProviderBase
  nameWithType.vb: AliasProviderBase(Of AliasedType).AliasProviderBase
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).AliasProviderBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AddEntityOverride*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AddEntityOverride
  isExternal: true
  name: AddEntityOverride
  nameWithType: AliasProviderBase<AliasedType>.AddEntityOverride
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.AddEntityOverride
  nameWithType.vb: AliasProviderBase(Of AliasedType).AddEntityOverride
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).AddEntityOverride
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetReader*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetReader
  isExternal: true
  name: GetReader
  nameWithType: AliasProviderBase<AliasedType>.GetReader
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetReader
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetReader
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetReader
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetReader(String)
  nameWithType: IArchiveProviderHasRows.GetReader(String)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
    name: GetReader
    nameWithType: IArchiveProviderHasRows.GetReader
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader(System.String)
    name: GetReader
    nameWithType: IArchiveProviderHasRows.GetReader
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDataReader
  isExternal: true
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetRows*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetRows
  isExternal: true
  name: GetRows
  nameWithType: AliasProviderBase<AliasedType>.GetRows
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetRows
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetRows
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetRows
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetRows(String)
  nameWithType: IArchiveProviderHasRows.GetRows(String)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
    name: GetRows
    nameWithType: IArchiveProviderHasRows.GetRows
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows(System.String)
    name: GetRows
    nameWithType: IArchiveProviderHasRows.GetRows
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetRows
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRow}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ArchiveRow>
  nameWithType: IEnumerable<ArchiveRow>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ArchiveRow>
  nameWithType.vb: IEnumerable(Of ArchiveRow)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ArchiveRow)
  name.vb: IEnumerable(Of ArchiveRow)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRow
    name: ArchiveRow
    nameWithType: ArchiveRow
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRow
    name: ArchiveRow
    nameWithType: ArchiveRow
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetResultInformation*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetResultInformation
  isExternal: true
  name: GetResultInformation
  nameWithType: AliasProviderBase<AliasedType>.GetResultInformation
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetResultInformation
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetResultInformation
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetResultInformation
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: GetResultInformation()
  nameWithType: IArchiveProviderHasRows.GetResultInformation()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    name: GetResultInformation
    nameWithType: IArchiveProviderHasRows.GetResultInformation
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    name: GetResultInformation
    nameWithType: IArchiveProviderHasRows.GetResultInformation
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.GetResultInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveResultInformation
  nameWithType: ArchiveResultInformation
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveResultInformation
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.Close*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.Close
  isExternal: true
  name: Close
  nameWithType: AliasProviderBase<AliasedType>.Close
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.Close
  nameWithType.vb: AliasProviderBase(Of AliasedType).Close
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).Close
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: Close()
  nameWithType: IArchiveProviderHasRows.Close()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    name: Close
    nameWithType: IArchiveProviderHasRows.Close
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    name: Close
    nameWithType: IArchiveProviderHasRows.Close
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetPagingInfo*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetPagingInfo
  isExternal: true
  name: SetPagingInfo
  nameWithType: AliasProviderBase<AliasedType>.SetPagingInfo
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetPagingInfo
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetPagingInfo
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetPagingInfo
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows
  isExternal: true
  name: SetPagingInfo(Int32, Int32)
  nameWithType: IArchiveProviderHasRows.SetPagingInfo(Int32, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
    name: SetPagingInfo
    nameWithType: IArchiveProviderHasRows.SetPagingInfo
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo(System.Int32,System.Int32)
    name: SetPagingInfo
    nameWithType: IArchiveProviderHasRows.SetPagingInfo
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasRows.SetPagingInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableColumns
  isExternal: true
  name: GetAvailableColumns
  nameWithType: AliasProviderBase<AliasedType>.GetAvailableColumns
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetAvailableColumns
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetAvailableColumns
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetAvailableColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: GetAvailableColumns()
  nameWithType: IArchiveProviderHasColumns.GetAvailableColumns()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    name: GetAvailableColumns
    nameWithType: IArchiveProviderHasColumns.GetAvailableColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    name: GetAvailableColumns
    nameWithType: IArchiveProviderHasColumns.GetAvailableColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.GetAvailableColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveColumnInfo>
  nameWithType: List<ArchiveColumnInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo>
  nameWithType.vb: List(Of ArchiveColumnInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo)
  name.vb: List(Of ArchiveColumnInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    name: ArchiveColumnInfo
    nameWithType: ArchiveColumnInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredColumns*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredColumns
  isExternal: true
  name: SetDesiredColumns
  nameWithType: AliasProviderBase<AliasedType>.SetDesiredColumns
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetDesiredColumns
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetDesiredColumns
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetDesiredColumns
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetDesiredColumns(String[])
  nameWithType: IArchiveProviderHasColumns.SetDesiredColumns(String[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
  nameWithType.vb: IArchiveProviderHasColumns.SetDesiredColumns(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String())
  name.vb: SetDesiredColumns(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
    name: SetDesiredColumns
    nameWithType: IArchiveProviderHasColumns.SetDesiredColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns(System.String[])
    name: SetDesiredColumns
    nameWithType: IArchiveProviderHasColumns.SetDesiredColumns
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetDesiredColumns
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetOrderBy*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetOrderBy
  isExternal: true
  name: SetOrderBy
  nameWithType: AliasProviderBase<AliasedType>.SetOrderBy
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetOrderBy
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetOrderBy
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetOrderBy
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetOrderBy(ArchiveOrderByInfo[])
  nameWithType: IArchiveProviderHasColumns.SetOrderBy(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  nameWithType.vb: IArchiveProviderHasColumns.SetOrderBy(ArchiveOrderByInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: SetOrderBy(ArchiveOrderByInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
    name: SetOrderBy
    nameWithType: IArchiveProviderHasColumns.SetOrderBy
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
    name: SetOrderBy
    nameWithType: IArchiveProviderHasColumns.SetOrderBy
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  isExternal: true
  name: ArchiveOrderByInfo[]
  nameWithType: ArchiveOrderByInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  nameWithType.vb: ArchiveOrderByInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo()
  name.vb: ArchiveOrderByInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetRestriction
  isExternal: true
  name: SetRestriction
  nameWithType: AliasProviderBase<AliasedType>.SetRestriction
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetRestriction
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetRestriction
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetRestriction
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns
  isExternal: true
  name: SetRestriction(ArchiveRestrictionInfo[])
  nameWithType: IArchiveProviderHasColumns.SetRestriction(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  nameWithType.vb: IArchiveProviderHasColumns.SetRestriction(ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetRestriction(ArchiveRestrictionInfo())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetRestriction
    nameWithType: IArchiveProviderHasColumns.SetRestriction
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
    name: SetRestriction
    nameWithType: IArchiveProviderHasColumns.SetRestriction
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasColumns.SetRestriction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.GetAvailableEntities
  isExternal: true
  name: GetAvailableEntities
  nameWithType: AliasProviderBase<AliasedType>.GetAvailableEntities
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.GetAvailableEntities
  nameWithType.vb: AliasProviderBase(Of AliasedType).GetAvailableEntities
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).GetAvailableEntities
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  isExternal: true
  name: GetAvailableEntities()
  nameWithType: IArchiveProviderHasEntities.GetAvailableEntities()
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    name: GetAvailableEntities
    nameWithType: IArchiveProviderHasEntities.GetAvailableEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    name: GetAvailableEntities
    nameWithType: IArchiveProviderHasEntities.GetAvailableEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.GetAvailableEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveRowTypeInfo>
  nameWithType: List<ArchiveRowTypeInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>
  nameWithType.vb: List(Of ArchiveRowTypeInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: List(Of ArchiveRowTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    nameWithType: ArchiveRowTypeInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    nameWithType: ArchiveRowTypeInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredEntities*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.SetDesiredEntities
  isExternal: true
  name: SetDesiredEntities
  nameWithType: AliasProviderBase<AliasedType>.SetDesiredEntities
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.SetDesiredEntities
  nameWithType.vb: AliasProviderBase(Of AliasedType).SetDesiredEntities
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).SetDesiredEntities
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities
  isExternal: true
  name: SetDesiredEntities(String[])
  nameWithType: IArchiveProviderHasEntities.SetDesiredEntities(String[])
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
  nameWithType.vb: IArchiveProviderHasEntities.SetDesiredEntities(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String())
  name.vb: SetDesiredEntities(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
    name: SetDesiredEntities
    nameWithType: IArchiveProviderHasEntities.SetDesiredEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities(System.String[])
    name: SetDesiredEntities
    nameWithType: IArchiveProviderHasEntities.SetDesiredEntities
    fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderHasEntities.SetDesiredEntities
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AliasedProvider*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.AliasProviderBase`1.AliasedProvider
  isExternal: true
  name: AliasedProvider
  nameWithType: AliasProviderBase<AliasedType>.AliasedProvider
  fullName: SuperOffice.CRM.ArchiveLists.AliasProviderBase<AliasedType>.AliasedProvider
  nameWithType.vb: AliasProviderBase(Of AliasedType).AliasedProvider
  fullName.vb: SuperOffice.CRM.ArchiveLists.AliasProviderBase(Of AliasedType).AliasedProvider
- uid: '{AliasedType}'
  commentId: '!:AliasedType'
  definition: AliasedType
  name: AliasedType
  nameWithType: AliasedType
  fullName: AliasedType
- uid: AliasedType
  commentId: '!:AliasedType'
  name: AliasedType
  nameWithType: AliasedType
  fullName: AliasedType
