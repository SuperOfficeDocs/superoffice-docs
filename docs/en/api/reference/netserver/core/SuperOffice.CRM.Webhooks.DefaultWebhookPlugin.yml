### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  commentId: T:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  id: DefaultWebhookPlugin
  parent: SuperOffice.CRM.Webhooks
  children:
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.#ctor(SuperOffice.CRM.Webhooks.IWebhookTransmitter,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin})
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose(System.Boolean)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync(System.Int32,SuperOffice.CRM.Webhooks.WebhookState,System.Threading.CancellationToken)
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin._webhookTransmitter
  langs:
  - csharp
  - vb
  name: DefaultWebhookPlugin
  nameWithType: DefaultWebhookPlugin
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: >-
    Default webhook plugin.

    The plugin handles broadcasting the HTTP hooks to subscribing systems, and saving and storing the 

    plugin info in the local database.
  remarks: >-
    Actual broadcast of webhook events is in the <xref href="SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook%2cSuperOffice.CRM.Webhooks.WebhookPayload%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> method. REST webhooks are notified through the <xref href="SuperOffice.CRM.Webhooks.IWebhookTransmitter" data-throw-if-not-resolved="false"></xref>.

    Other webhooks are notified through their own plugins, classes parallel to this one.

    The rest of the code is about defining and

    administration of the definitions of webhooks.
  example: []
  syntax:
    content: >-
      [SystemWebhookPlugin("Default", 2147483647)]

      public class DefaultWebhookPlugin : ISystemWebhookPlugin, ICustomWebhookPlugin, IDisposable
    content.vb: >-
      <SystemWebhookPlugin("Default", 2147483647)>

      Public Class DefaultWebhookPlugin Implements ISystemWebhookPlugin, ICustomWebhookPlugin, IDisposable
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  - SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.CRM.Webhooks.SystemWebhookPluginAttribute
    ctor: SuperOffice.CRM.Webhooks.SystemWebhookPluginAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Default
    - type: System.Int32
      value: 2147483647
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin._webhookTransmitter
  commentId: F:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin._webhookTransmitter
  id: _webhookTransmitter
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: _webhookTransmitter
  nameWithType: DefaultWebhookPlugin._webhookTransmitter
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin._webhookTransmitter
  type: Field
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  syntax:
    content: protected readonly IWebhookTransmitter _webhookTransmitter
    return:
      type: SuperOffice.CRM.Webhooks.IWebhookTransmitter
    content.vb: Protected ReadOnly _webhookTransmitter As IWebhookTransmitter
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.#ctor(SuperOffice.CRM.Webhooks.IWebhookTransmitter,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin})
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.#ctor(SuperOffice.CRM.Webhooks.IWebhookTransmitter,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin})
  id: '#ctor(SuperOffice.CRM.Webhooks.IWebhookTransmitter,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin})'
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: DefaultWebhookPlugin(IWebhookTransmitter, ILogger<DefaultWebhookPlugin>)
  nameWithType: DefaultWebhookPlugin.DefaultWebhookPlugin(IWebhookTransmitter, ILogger<DefaultWebhookPlugin>)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DefaultWebhookPlugin(SuperOffice.CRM.Webhooks.IWebhookTransmitter, Microsoft.Extensions.Logging.ILogger<SuperOffice.CRM.Webhooks.DefaultWebhookPlugin>)
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  syntax:
    content: public DefaultWebhookPlugin(IWebhookTransmitter webhookTransmitter, ILogger<DefaultWebhookPlugin> logger)
    parameters:
    - id: webhookTransmitter
      type: SuperOffice.CRM.Webhooks.IWebhookTransmitter
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin}
    content.vb: Public Sub New(webhookTransmitter As IWebhookTransmitter, logger As ILogger(Of DefaultWebhookPlugin))
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.#ctor*
  nameWithType.vb: DefaultWebhookPlugin.New(IWebhookTransmitter, ILogger(Of DefaultWebhookPlugin))
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.New(SuperOffice.CRM.Webhooks.IWebhookTransmitter, Microsoft.Extensions.Logging.ILogger(Of SuperOffice.CRM.Webhooks.DefaultWebhookPlugin))
  name.vb: New(IWebhookTransmitter, ILogger(Of DefaultWebhookPlugin))
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  id: GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: GetAllWebhooksAsync(string, string, string, WebhookState?, CancellationToken)
  nameWithType: DefaultWebhookPlugin.GetAllWebhooksAsync(string, string, string, WebhookState?, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync(string, string, string, SuperOffice.CRM.Webhooks.WebhookState?, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: Return all the stored webhooks.
  example: []
  syntax:
    content: public Task<IEnumerable<Webhook>> GetAllWebhooksAsync(string name = null, string eventName = null, string appToken = null, WebhookState? state = null, CancellationToken cancellationToken = default)
    parameters:
    - id: name
      type: System.String
      description: Optional name of webhook to filter on.
    - id: eventName
      type: System.String
      description: Optional name of event to filter list of webhooks on. Default NULL for no filter.
    - id: appToken
      type: System.String
      description: Optional appToken name to filter on.
    - id: state
      type: System.Nullable{SuperOffice.CRM.Webhooks.WebhookState}
      description: Optional state to filter list of webhooks on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{SuperOffice.CRM.Webhooks.Webhook}}
      description: List of webhooks (that are listening to eventName)
    content.vb: Public Function GetAllWebhooksAsync(name As String = Nothing, eventName As String = Nothing, appToken As String = Nothing, state As WebhookState? = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of Webhook))
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  nameWithType.vb: DefaultWebhookPlugin.GetAllWebhooksAsync(String, String, String, WebhookState?, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync(String, String, String, SuperOffice.CRM.Webhooks.WebhookState?, System.Threading.CancellationToken)
  name.vb: GetAllWebhooksAsync(String, String, String, WebhookState?, CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  id: GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: GetWebhookAsync(int, CancellationToken)
  nameWithType: DefaultWebhookPlugin.GetWebhookAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: Get a single webhook by id
  example: []
  syntax:
    content: public Task<Webhook> GetWebhookAsync(int id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: primary key for webhook
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.Webhook}
      description: The given webhook, or NULL if not found
    content.vb: Public Function GetWebhookAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Webhook)
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: DefaultWebhookPlugin.GetWebhookAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetWebhookAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  id: SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: SaveWebhookAsync(Webhook)
  nameWithType: DefaultWebhookPlugin.SaveWebhookAsync(Webhook)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: Store/Create a webhook.
  example: []
  syntax:
    content: public Task<Webhook> SaveWebhookAsync(Webhook webhook)
    parameters:
    - id: webhook
      type: SuperOffice.CRM.Webhooks.Webhook
      description: webhook to store. Create new hook if id=0
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.Webhook}
      description: Updated webhook, with primary key set.
    content.vb: Public Function SaveWebhookAsync(webhook As Webhook) As Task(Of Webhook)
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: DeleteWebhookAsync(int, CancellationToken)
  nameWithType: DefaultWebhookPlugin.DeleteWebhookAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: Remove a given webhook from storage.
  example: []
  syntax:
    content: public Task DeleteWebhookAsync(int id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteWebhookAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: DefaultWebhookPlugin.DeleteWebhookAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteWebhookAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
  id: TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: TestWebhookAsync(Webhook, CancellationToken)
  nameWithType: DefaultWebhookPlugin.TestWebhookAsync(Webhook, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: >-
    Test invoke a webhook with a PING event to see if it works.

    Calls webhook with event "test" on entity "test".
  example: []
  syntax:
    content: public Task<WebhookResponse> TestWebhookAsync(Webhook webhook, CancellationToken cancellationToken)
    parameters:
    - id: webhook
      type: SuperOffice.CRM.Webhooks.Webhook
      description: webhook definition
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.WebhookResponse}
      description: True if the webhook invocation worked, False if we did not get 200 OK. NULL is treated as failure.
    content.vb: Public Function TestWebhookAsync(webhook As Webhook, cancellationToken As CancellationToken) As Task(Of WebhookResponse)
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  id: NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: NotifyAsync(Webhook, WebhookPayload, CancellationToken)
  nameWithType: DefaultWebhookPlugin.NotifyAsync(Webhook, WebhookPayload, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook, SuperOffice.CRM.Webhooks.WebhookPayload, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: >-
    Send the event to a webhook, and mark failures/success status on the passed webhook objects.

    Called from the dispatcher on a background thread.
  example: []
  syntax:
    content: public virtual Task<WebhookResponse> NotifyAsync(Webhook webhook, WebhookPayload eventInfo, CancellationToken cancellationToken)
    parameters:
    - id: webhook
      type: SuperOffice.CRM.Webhooks.Webhook
      description: Inform the given webhook that the event has occurred.
    - id: eventInfo
      type: SuperOffice.CRM.Webhooks.WebhookPayload
      description: Event name, unique id and details
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.WebhookResponse}
      description: Success/Failure information. NULL is taken as SUCCESS
    content.vb: Public Overridable Function NotifyAsync(webhook As Webhook, eventInfo As WebhookPayload, cancellationToken As CancellationToken) As Task(Of WebhookResponse)
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  id: GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: GetLastErrorAsync(int, CancellationToken)
  nameWithType: DefaultWebhookPlugin.GetLastErrorAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  summary: Return most recent error message received from webhook target.
  example: []
  syntax:
    content: public Task<string> GetLastErrorAsync(int id, CancellationToken cancellationToken = default)
    parameters:
    - id: id
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: String containing most recent error message received from webhook target.
    content.vb: Public Function GetLastErrorAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: DefaultWebhookPlugin.GetLastErrorAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetLastErrorAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
  id: RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: RecordResultAsync(Webhook, WebhookResponse, CancellationToken)
  nameWithType: DefaultWebhookPlugin.RecordResultAsync(Webhook, WebhookResponse, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook, SuperOffice.CRM.Webhooks.WebhookResponse, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  example: []
  syntax:
    content: public Task RecordResultAsync(Webhook webhook, WebhookResponse result, CancellationToken cancellationToken = default)
    parameters:
    - id: webhook
      type: SuperOffice.CRM.Webhooks.Webhook
    - id: result
      type: SuperOffice.CRM.Webhooks.WebhookResponse
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RecordResultAsync(webhook As Webhook, result As WebhookResponse, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync*
  implements:
  - SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync(System.Int32,SuperOffice.CRM.Webhooks.WebhookState,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync(System.Int32,SuperOffice.CRM.Webhooks.WebhookState,System.Threading.CancellationToken)
  id: UpdateWebhookStateAsync(System.Int32,SuperOffice.CRM.Webhooks.WebhookState,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: UpdateWebhookStateAsync(int, WebhookState, CancellationToken)
  nameWithType: DefaultWebhookPlugin.UpdateWebhookStateAsync(int, WebhookState, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync(int, SuperOffice.CRM.Webhooks.WebhookState, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  syntax:
    content: protected Task UpdateWebhookStateAsync(int webhookId, WebhookState webhookState, CancellationToken cancellationToken)
    parameters:
    - id: webhookId
      type: System.Int32
    - id: webhookState
      type: SuperOffice.CRM.Webhooks.WebhookState
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function UpdateWebhookStateAsync(webhookId As Integer, webhookState As WebhookState, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync*
  nameWithType.vb: DefaultWebhookPlugin.UpdateWebhookStateAsync(Integer, WebhookState, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync(Integer, SuperOffice.CRM.Webhooks.WebhookState, System.Threading.CancellationToken)
  name.vb: UpdateWebhookStateAsync(Integer, WebhookState, CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: AddToWebhookCountersAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: AddToWebhookCountersAsync(int, int, int, int, string, CancellationToken)
  nameWithType: DefaultWebhookPlugin.AddToWebhookCountersAsync(int, int, int, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync(int, int, int, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  syntax:
    content: protected Task AddToWebhookCountersAsync(int webhookId, int numCalls, int numErrors, int numConsecutive, string message, CancellationToken cancellationToken)
    parameters:
    - id: webhookId
      type: System.Int32
    - id: numCalls
      type: System.Int32
    - id: numErrors
      type: System.Int32
    - id: numConsecutive
      type: System.Int32
    - id: message
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function AddToWebhookCountersAsync(webhookId As Integer, numCalls As Integer, numErrors As Integer, numConsecutive As Integer, message As String, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync*
  nameWithType.vb: DefaultWebhookPlugin.AddToWebhookCountersAsync(Integer, Integer, Integer, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync(Integer, Integer, Integer, Integer, String, System.Threading.CancellationToken)
  name.vb: AddToWebhookCountersAsync(Integer, Integer, Integer, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose(System.Boolean)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: Dispose(bool)
  nameWithType: DefaultWebhookPlugin.Dispose(bool)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose(bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  syntax:
    content: protected virtual void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose*
  nameWithType.vb: DefaultWebhookPlugin.Dispose(Boolean)
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose(Boolean)
  name.vb: Dispose(Boolean)
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose
  id: Dispose
  parent: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DefaultWebhookPlugin.Dispose()
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Webhooks
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  name: NotifyAsync(Webhook, WebhookPayload, CancellationToken)
  nameWithType: DefaultWebhookPlugin.NotifyAsync(Webhook, WebhookPayload, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook, SuperOffice.CRM.Webhooks.WebhookPayload, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
    name: NotifyAsync
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookPayload
    name: WebhookPayload
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
    name: NotifyAsync
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookPayload
    name: WebhookPayload
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Webhooks.IWebhookTransmitter
  commentId: T:SuperOffice.CRM.Webhooks.IWebhookTransmitter
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.IWebhookTransmitter.html
  name: IWebhookTransmitter
  nameWithType: IWebhookTransmitter
  fullName: SuperOffice.CRM.Webhooks.IWebhookTransmitter
- uid: SuperOffice.CRM.Webhooks
  commentId: N:SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Webhooks
  nameWithType: SuperOffice.CRM.Webhooks
  fullName: SuperOffice.CRM.Webhooks
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Webhooks
    name: Webhooks
    isExternal: true
    href: SuperOffice.CRM.Webhooks.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Webhooks
    name: Webhooks
    isExternal: true
    href: SuperOffice.CRM.Webhooks.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  commentId: T:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.html
  name: ISystemWebhookPlugin
  nameWithType: ISystemWebhookPlugin
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  commentId: T:SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.html
  name: ICustomWebhookPlugin
  nameWithType: ICustomWebhookPlugin
  fullName: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<DefaultWebhookPlugin, To>(DefaultWebhookPlugin)
  nameWithType: EnumUtil.MapEnums<DefaultWebhookPlugin, To>(DefaultWebhookPlugin)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Webhooks.DefaultWebhookPlugin, To>(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
  nameWithType.vb: EnumUtil.MapEnums(Of DefaultWebhookPlugin, To)(DefaultWebhookPlugin)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Webhooks.DefaultWebhookPlugin, To)(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
  name.vb: MapEnums(Of DefaultWebhookPlugin, To)(DefaultWebhookPlugin)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: )
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<DefaultWebhookPlugin, To>(DefaultWebhookPlugin)
  nameWithType: Converters.MapEnums<DefaultWebhookPlugin, To>(DefaultWebhookPlugin)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Webhooks.DefaultWebhookPlugin, To>(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
  nameWithType.vb: Converters.MapEnums(Of DefaultWebhookPlugin, To)(DefaultWebhookPlugin)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Webhooks.DefaultWebhookPlugin, To)(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
  name.vb: MapEnums(Of DefaultWebhookPlugin, To)(DefaultWebhookPlugin)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.#ctor*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.#ctor
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin__ctor_SuperOffice_CRM_Webhooks_IWebhookTransmitter_Microsoft_Extensions_Logging_ILogger_SuperOffice_CRM_Webhooks_DefaultWebhookPlugin__
  name: DefaultWebhookPlugin
  nameWithType: DefaultWebhookPlugin.DefaultWebhookPlugin
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DefaultWebhookPlugin
  nameWithType.vb: DefaultWebhookPlugin.New
  fullName.vb: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin}
  commentId: T:Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.Webhooks.DefaultWebhookPlugin}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<DefaultWebhookPlugin>
  nameWithType: ILogger<DefaultWebhookPlugin>
  fullName: Microsoft.Extensions.Logging.ILogger<SuperOffice.CRM.Webhooks.DefaultWebhookPlugin>
  nameWithType.vb: ILogger(Of DefaultWebhookPlugin)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of SuperOffice.CRM.Webhooks.DefaultWebhookPlugin)
  name.vb: ILogger(Of DefaultWebhookPlugin)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin
    name: DefaultWebhookPlugin
    isExternal: true
    href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_GetAllWebhooksAsync_System_String_System_String_System_String_System_Nullable_SuperOffice_CRM_Webhooks_WebhookState__System_Threading_CancellationToken_
  name: GetAllWebhooksAsync
  nameWithType: DefaultWebhookPlugin.GetAllWebhooksAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetAllWebhooksAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetAllWebhooksAsync(string, string, string, WebhookState?, CancellationToken)
  nameWithType: ISystemWebhookPlugin.GetAllWebhooksAsync(string, string, string, WebhookState?, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(string, string, string, SuperOffice.CRM.Webhooks.WebhookState?, System.Threading.CancellationToken)
  nameWithType.vb: ISystemWebhookPlugin.GetAllWebhooksAsync(String, String, String, WebhookState?, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(String, String, String, SuperOffice.CRM.Webhooks.WebhookState?, System.Threading.CancellationToken)
  name.vb: GetAllWebhooksAsync(String, String, String, WebhookState?, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
    name: GetAllWebhooksAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookState
    name: WebhookState
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetAllWebhooksAsync(System.String,System.String,System.String,System.Nullable{SuperOffice.CRM.Webhooks.WebhookState},System.Threading.CancellationToken)
    name: GetAllWebhooksAsync
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookState
    name: WebhookState
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Nullable{SuperOffice.CRM.Webhooks.WebhookState}
  commentId: T:System.Nullable{SuperOffice.CRM.Webhooks.WebhookState}
  parent: System
  definition: System.Nullable`1
  href: SuperOffice.CRM.Webhooks.WebhookState.html
  name: WebhookState?
  nameWithType: WebhookState?
  fullName: SuperOffice.CRM.Webhooks.WebhookState?
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.WebhookState
    name: WebhookState
    isExternal: true
    href: SuperOffice.CRM.Webhooks.WebhookState.html
  - name: '?'
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.WebhookState
    name: WebhookState
    isExternal: true
    href: SuperOffice.CRM.Webhooks.WebhookState.html
  - name: '?'
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{SuperOffice.CRM.Webhooks.Webhook}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{SuperOffice.CRM.Webhooks.Webhook}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IEnumerable<Webhook>>
  nameWithType: Task<IEnumerable<Webhook>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<SuperOffice.CRM.Webhooks.Webhook>>
  nameWithType.vb: Task(Of IEnumerable(Of Webhook))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Webhooks.Webhook))
  name.vb: Task(Of IEnumerable(Of Webhook))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
    href: SuperOffice.CRM.Webhooks.Webhook.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
    href: SuperOffice.CRM.Webhooks.Webhook.html
  - name: )
  - name: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_GetWebhookAsync_System_Int32_System_Threading_CancellationToken_
  name: GetWebhookAsync
  nameWithType: DefaultWebhookPlugin.GetWebhookAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetWebhookAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetWebhookAsync(int, CancellationToken)
  nameWithType: ISystemWebhookPlugin.GetWebhookAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(int, System.Threading.CancellationToken)
  nameWithType.vb: ISystemWebhookPlugin.GetWebhookAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetWebhookAsync(Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
    name: GetWebhookAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetWebhookAsync(System.Int32,System.Threading.CancellationToken)
    name: GetWebhookAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.Webhook}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.Webhook}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Webhook>
  nameWithType: Task<Webhook>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Webhooks.Webhook>
  nameWithType.vb: Task(Of Webhook)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Webhooks.Webhook)
  name.vb: Task(Of Webhook)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
    href: SuperOffice.CRM.Webhooks.Webhook.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
    href: SuperOffice.CRM.Webhooks.Webhook.html
  - name: )
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_SaveWebhookAsync_SuperOffice_CRM_Webhooks_Webhook_
  name: SaveWebhookAsync
  nameWithType: DefaultWebhookPlugin.SaveWebhookAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.SaveWebhookAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  name: SaveWebhookAsync(Webhook)
  nameWithType: ISystemWebhookPlugin.SaveWebhookAsync(Webhook)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
    name: SaveWebhookAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.SaveWebhookAsync(SuperOffice.CRM.Webhooks.Webhook)
    name: SaveWebhookAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Webhooks.Webhook
  commentId: T:SuperOffice.CRM.Webhooks.Webhook
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.Webhook.html
  name: Webhook
  nameWithType: Webhook
  fullName: SuperOffice.CRM.Webhooks.Webhook
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_DeleteWebhookAsync_System_Int32_System_Threading_CancellationToken_
  name: DeleteWebhookAsync
  nameWithType: DefaultWebhookPlugin.DeleteWebhookAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.DeleteWebhookAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: DeleteWebhookAsync(int, CancellationToken)
  nameWithType: ISystemWebhookPlugin.DeleteWebhookAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(int, System.Threading.CancellationToken)
  nameWithType.vb: ISystemWebhookPlugin.DeleteWebhookAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(Integer, System.Threading.CancellationToken)
  name.vb: DeleteWebhookAsync(Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
    name: DeleteWebhookAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.DeleteWebhookAsync(System.Int32,System.Threading.CancellationToken)
    name: DeleteWebhookAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_TestWebhookAsync_SuperOffice_CRM_Webhooks_Webhook_System_Threading_CancellationToken_
  name: TestWebhookAsync
  nameWithType: DefaultWebhookPlugin.TestWebhookAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.TestWebhookAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: TestWebhookAsync(Webhook, CancellationToken)
  nameWithType: ISystemWebhookPlugin.TestWebhookAsync(Webhook, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
    name: TestWebhookAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.TestWebhookAsync(SuperOffice.CRM.Webhooks.Webhook,System.Threading.CancellationToken)
    name: TestWebhookAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.WebhookResponse}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Webhooks.WebhookResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<WebhookResponse>
  nameWithType: Task<WebhookResponse>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Webhooks.WebhookResponse>
  nameWithType.vb: Task(Of WebhookResponse)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Webhooks.WebhookResponse)
  name.vb: Task(Of WebhookResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Webhooks.WebhookResponse
    name: WebhookResponse
    isExternal: true
    href: SuperOffice.CRM.Webhooks.WebhookResponse.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookResponse
    name: WebhookResponse
    isExternal: true
    href: SuperOffice.CRM.Webhooks.WebhookResponse.html
  - name: )
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  name: NotifyAsync
  nameWithType: DefaultWebhookPlugin.NotifyAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.NotifyAsync
- uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin
  isExternal: true
  href: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.html#SuperOffice_CRM_Webhooks_ICustomWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  name: NotifyAsync(Webhook, WebhookPayload, CancellationToken)
  nameWithType: ICustomWebhookPlugin.NotifyAsync(Webhook, WebhookPayload, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook, SuperOffice.CRM.Webhooks.WebhookPayload, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
    name: NotifyAsync
    isExternal: true
    href: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.html#SuperOffice_CRM_Webhooks_ICustomWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
    href: SuperOffice.CRM.Webhooks.Webhook.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookPayload
    name: WebhookPayload
    isExternal: true
    href: SuperOffice.CRM.Webhooks.WebhookPayload.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.NotifyAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookPayload,System.Threading.CancellationToken)
    name: NotifyAsync
    isExternal: true
    href: SuperOffice.CRM.Webhooks.ICustomWebhookPlugin.html#SuperOffice_CRM_Webhooks_ICustomWebhookPlugin_NotifyAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookPayload_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
    href: SuperOffice.CRM.Webhooks.Webhook.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookPayload
    name: WebhookPayload
    isExternal: true
    href: SuperOffice.CRM.Webhooks.WebhookPayload.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Webhooks.WebhookPayload
  commentId: T:SuperOffice.CRM.Webhooks.WebhookPayload
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.WebhookPayload.html
  name: WebhookPayload
  nameWithType: WebhookPayload
  fullName: SuperOffice.CRM.Webhooks.WebhookPayload
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_GetLastErrorAsync_System_Int32_System_Threading_CancellationToken_
  name: GetLastErrorAsync
  nameWithType: DefaultWebhookPlugin.GetLastErrorAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.GetLastErrorAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: GetLastErrorAsync(int, CancellationToken)
  nameWithType: ISystemWebhookPlugin.GetLastErrorAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(int, System.Threading.CancellationToken)
  nameWithType.vb: ISystemWebhookPlugin.GetLastErrorAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetLastErrorAsync(Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
    name: GetLastErrorAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.GetLastErrorAsync(System.Int32,System.Threading.CancellationToken)
    name: GetLastErrorAsync
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_RecordResultAsync_SuperOffice_CRM_Webhooks_Webhook_SuperOffice_CRM_Webhooks_WebhookResponse_System_Threading_CancellationToken_
  name: RecordResultAsync
  nameWithType: DefaultWebhookPlugin.RecordResultAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.RecordResultAsync
- uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: RecordResultAsync(Webhook, WebhookResponse, CancellationToken)
  nameWithType: ISystemWebhookPlugin.RecordResultAsync(Webhook, WebhookResponse, CancellationToken)
  fullName: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook, SuperOffice.CRM.Webhooks.WebhookResponse, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
    name: RecordResultAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookResponse
    name: WebhookResponse
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Webhooks.ISystemWebhookPlugin.RecordResultAsync(SuperOffice.CRM.Webhooks.Webhook,SuperOffice.CRM.Webhooks.WebhookResponse,System.Threading.CancellationToken)
    name: RecordResultAsync
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Webhooks.Webhook
    name: Webhook
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Webhooks.WebhookResponse
    name: WebhookResponse
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Webhooks.WebhookResponse
  commentId: T:SuperOffice.CRM.Webhooks.WebhookResponse
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.WebhookResponse.html
  name: WebhookResponse
  nameWithType: WebhookResponse
  fullName: SuperOffice.CRM.Webhooks.WebhookResponse
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_UpdateWebhookStateAsync_System_Int32_SuperOffice_CRM_Webhooks_WebhookState_System_Threading_CancellationToken_
  name: UpdateWebhookStateAsync
  nameWithType: DefaultWebhookPlugin.UpdateWebhookStateAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.UpdateWebhookStateAsync
- uid: SuperOffice.CRM.Webhooks.WebhookState
  commentId: T:SuperOffice.CRM.Webhooks.WebhookState
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  href: SuperOffice.CRM.Webhooks.WebhookState.html
  name: WebhookState
  nameWithType: WebhookState
  fullName: SuperOffice.CRM.Webhooks.WebhookState
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_AddToWebhookCountersAsync_System_Int32_System_Int32_System_Int32_System_Int32_System_String_System_Threading_CancellationToken_
  name: AddToWebhookCountersAsync
  nameWithType: DefaultWebhookPlugin.AddToWebhookCountersAsync
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.AddToWebhookCountersAsync
- uid: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose*
  commentId: Overload:SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose
  isExternal: true
  href: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.html#SuperOffice_CRM_Webhooks_DefaultWebhookPlugin_Dispose_System_Boolean_
  name: Dispose
  nameWithType: DefaultWebhookPlugin.Dispose
  fullName: SuperOffice.CRM.Webhooks.DefaultWebhookPlugin.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
