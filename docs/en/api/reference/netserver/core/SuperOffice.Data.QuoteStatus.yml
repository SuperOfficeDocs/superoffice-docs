### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.QuoteStatus
  commentId: T:SuperOffice.Data.QuoteStatus
  id: QuoteStatus
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.QuoteStatus.Error
  - SuperOffice.Data.QuoteStatus.Ok
  - SuperOffice.Data.QuoteStatus.OkWithInfo
  - SuperOffice.Data.QuoteStatus.Warning
  langs:
  - csharp
  - vb
  name: QuoteStatus
  nameWithType: QuoteStatus
  fullName: SuperOffice.Data.QuoteStatus
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nThe state of a quote-alternative or line\nThis Enum is used by:  QuoteVersion.Status; QuoteAlternative.Status; QuoteLine.Status\n"
  syntax:
    content: 'public enum QuoteStatus : short'
    content.vb: Public Enum QuoteStatus As Short
  extensionMethods:
  - SuperOffice.Data.QuoteStatus.EnumUtil.MapEnums``2
  - SuperOffice.Data.QuoteStatus.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.QuoteStatus)
  - SuperOffice.Data.QuoteStatus.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.QuoteStatus.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.QuoteStatus.Ok
  commentId: F:SuperOffice.Data.QuoteStatus.Ok
  id: Ok
  parent: SuperOffice.Data.QuoteStatus
  langs:
  - csharp
  - vb
  name: Ok
  nameWithType: QuoteStatus.Ok
  fullName: SuperOffice.Data.QuoteStatus.Ok
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: OK, all is good\n"
  syntax:
    content: Ok = 0
    return:
      type: SuperOffice.Data.QuoteStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.QuoteStatus.OkWithInfo
  commentId: F:SuperOffice.Data.QuoteStatus.OkWithInfo
  id: OkWithInfo
  parent: SuperOffice.Data.QuoteStatus
  langs:
  - csharp
  - vb
  name: OkWithInfo
  nameWithType: QuoteStatus.OkWithInfo
  fullName: SuperOffice.Data.QuoteStatus.OkWithInfo
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: All is good, but there is some additional information that the user should be made aware of.\n"
  syntax:
    content: OkWithInfo = 1
    return:
      type: SuperOffice.Data.QuoteStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.QuoteStatus.Warning
  commentId: F:SuperOffice.Data.QuoteStatus.Warning
  id: Warning
  parent: SuperOffice.Data.QuoteStatus
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: QuoteStatus.Warning
  fullName: SuperOffice.Data.QuoteStatus.Warning
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: There is a problem that the user must be made aware of.\n"
  syntax:
    content: Warning = 2
    return:
      type: SuperOffice.Data.QuoteStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.QuoteStatus.Error
  commentId: F:SuperOffice.Data.QuoteStatus.Error
  id: Error
  parent: SuperOffice.Data.QuoteStatus
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: QuoteStatus.Error
  fullName: SuperOffice.Data.QuoteStatus.Error
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: There is a problem that the system will not be able to get around. The user needs to do something. Example: The user has registered a quoteline that is discountinued and the amount the user has registered is not in stock.\n"
  syntax:
    content: Error = 3
    return:
      type: SuperOffice.Data.QuoteStatus
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.QuoteStatus.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<QuoteStatus, To>()
  nameWithType: EnumUtil.MapEnums<QuoteStatus, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.QuoteStatus, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of QuoteStatus, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.QuoteStatus, To)()
  name.vb: MapEnums(Of QuoteStatus, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<QuoteStatus, To>
    nameWithType: EnumUtil.MapEnums<QuoteStatus, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.QuoteStatus, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of QuoteStatus, To)
    nameWithType: EnumUtil.MapEnums(Of QuoteStatus, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.QuoteStatus, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QuoteStatus.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.QuoteStatus)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<QuoteStatus>(QuoteStatus)
  nameWithType: ObjectExtensions.AssignByReflection<QuoteStatus>(QuoteStatus)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.QuoteStatus>(SuperOffice.Data.QuoteStatus)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of QuoteStatus)(QuoteStatus)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.QuoteStatus)(SuperOffice.Data.QuoteStatus)
  name.vb: AssignByReflection(Of QuoteStatus)(QuoteStatus)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<QuoteStatus>
    nameWithType: ObjectExtensions.AssignByReflection<QuoteStatus>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.QuoteStatus>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.QuoteStatus
    name: QuoteStatus
    nameWithType: QuoteStatus
    fullName: SuperOffice.Data.QuoteStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of QuoteStatus)
    nameWithType: ObjectExtensions.AssignByReflection(Of QuoteStatus)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.QuoteStatus)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.QuoteStatus
    name: QuoteStatus
    nameWithType: QuoteStatus
    fullName: SuperOffice.Data.QuoteStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QuoteStatus.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<QuoteStatus>()
  nameWithType: ObjectExtensions.GraphCopy<QuoteStatus>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.QuoteStatus>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of QuoteStatus)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.QuoteStatus)()
  name.vb: GraphCopy(Of QuoteStatus)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<QuoteStatus>
    nameWithType: ObjectExtensions.GraphCopy<QuoteStatus>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.QuoteStatus>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of QuoteStatus)
    nameWithType: ObjectExtensions.GraphCopy(Of QuoteStatus)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.QuoteStatus)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QuoteStatus.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<QuoteStatus, To>()
  nameWithType: Converters.MapEnums<QuoteStatus, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.QuoteStatus, To>()
  nameWithType.vb: Converters.MapEnums(Of QuoteStatus, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.QuoteStatus, To)()
  name.vb: MapEnums(Of QuoteStatus, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<QuoteStatus, To>
    nameWithType: Converters.MapEnums<QuoteStatus, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.QuoteStatus, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of QuoteStatus, To)
    nameWithType: Converters.MapEnums(Of QuoteStatus, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.QuoteStatus, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.QuoteStatus
  commentId: T:SuperOffice.Data.QuoteStatus
  parent: SuperOffice.Data
  isExternal: true
  name: QuoteStatus
  nameWithType: QuoteStatus
  fullName: SuperOffice.Data.QuoteStatus
