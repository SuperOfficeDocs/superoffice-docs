### YamlMime:ManagedReference
items:
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
  commentId: T:SuperOffice.Threading.ISafeBlockingTaskInheritor
  id: ISafeBlockingTaskInheritor
  parent: SuperOffice.Threading
  children:
  - SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
  - SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
  langs:
  - csharp
  - vb
  name: ISafeBlockingTaskInheritor
  nameWithType: ISafeBlockingTaskInheritor
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor
  type: Interface
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Interface implemented to support transponding values from a parent task/context onto a child task/context.
  remarks: >-
    Used by SafeBlockingTask&lt;T&gt; to transpond values from a parent task to a child task,

    as well as to move state in wcf requests into async local - as System.Web.HttpContext.Current

    seam to dissabear without reason during these requests.
  example: []
  syntax:
    content: public interface ISafeBlockingTaskInheritor
    content.vb: Public Interface ISafeBlockingTaskInheritor
  extensionMethods:
  - SuperOffice.Threading.ISafeBlockingTaskInheritor.EnumUtil.MapEnums``2
  - SuperOffice.Threading.ISafeBlockingTaskInheritor.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
  commentId: M:SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
  id: GetSourceTaskValue
  parent: SuperOffice.Threading.ISafeBlockingTaskInheritor
  langs:
  - csharp
  - vb
  name: GetSourceTaskValue()
  nameWithType: ISafeBlockingTaskInheritor.GetSourceTaskValue()
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Get values from the parent task/context
  example: []
  syntax:
    content: object GetSourceTaskValue()
    return:
      type: System.Object
      description: ''
    content.vb: Function GetSourceTaskValue() As Object
  overload: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue*
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
  commentId: M:SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
  id: SetChildTaskValue(System.Object)
  parent: SuperOffice.Threading.ISafeBlockingTaskInheritor
  langs:
  - csharp
  - vb
  name: SetChildTaskValue(object)
  nameWithType: ISafeBlockingTaskInheritor.SetChildTaskValue(object)
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Apply the values into new task/context - preferebly using an AsyncLocal construct that

    does not interfer with parant task/context values
  example: []
  syntax:
    content: IDisposable SetChildTaskValue(object value)
    parameters:
    - id: value
      type: System.Object
      description: Value obtained by <xref href="SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue" data-throw-if-not-resolved="false"></xref> to assign
    return:
      type: System.IDisposable
      description: Disposable object, where disposing reverts state to state as of before calling <xref href="SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)" data-throw-if-not-resolved="false"></xref>
    content.vb: Function SetChildTaskValue(value As Object) As IDisposable
  overload: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue*
  nameWithType.vb: ISafeBlockingTaskInheritor.SetChildTaskValue(Object)
  fullName.vb: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(Object)
  name.vb: SetChildTaskValue(Object)
references:
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Threading
    name: Threading
    isExternal: true
    href: SuperOffice.Threading.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Threading
    name: Threading
    isExternal: true
    href: SuperOffice.Threading.html
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<ISafeBlockingTaskInheritor, To>(ISafeBlockingTaskInheritor)
  nameWithType: EnumUtil.MapEnums<ISafeBlockingTaskInheritor, To>(ISafeBlockingTaskInheritor)
  fullName: EnumUtil.MapEnums<SuperOffice.Threading.ISafeBlockingTaskInheritor, To>(SuperOffice.Threading.ISafeBlockingTaskInheritor)
  nameWithType.vb: EnumUtil.MapEnums(Of ISafeBlockingTaskInheritor, To)(ISafeBlockingTaskInheritor)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Threading.ISafeBlockingTaskInheritor, To)(SuperOffice.Threading.ISafeBlockingTaskInheritor)
  name.vb: MapEnums(Of ISafeBlockingTaskInheritor, To)(ISafeBlockingTaskInheritor)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Threading.ISafeBlockingTaskInheritor)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Threading.ISafeBlockingTaskInheritor)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: )
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<ISafeBlockingTaskInheritor, To>(ISafeBlockingTaskInheritor)
  nameWithType: Converters.MapEnums<ISafeBlockingTaskInheritor, To>(ISafeBlockingTaskInheritor)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.ISafeBlockingTaskInheritor, To>(SuperOffice.Threading.ISafeBlockingTaskInheritor)
  nameWithType.vb: Converters.MapEnums(Of ISafeBlockingTaskInheritor, To)(ISafeBlockingTaskInheritor)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.ISafeBlockingTaskInheritor, To)(SuperOffice.Threading.ISafeBlockingTaskInheritor)
  name.vb: MapEnums(Of ISafeBlockingTaskInheritor, To)(ISafeBlockingTaskInheritor)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Threading.ISafeBlockingTaskInheritor)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Threading.ISafeBlockingTaskInheritor)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor
    name: ISafeBlockingTaskInheritor
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue*
  commentId: Overload:SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
  isExternal: true
  href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_GetSourceTaskValue
  name: GetSourceTaskValue
  nameWithType: ISafeBlockingTaskInheritor.GetSourceTaskValue
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
  commentId: M:SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
  isExternal: true
  href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_GetSourceTaskValue
  name: GetSourceTaskValue()
  nameWithType: ISafeBlockingTaskInheritor.GetSourceTaskValue()
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue()
  spec.csharp:
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
    name: GetSourceTaskValue
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_GetSourceTaskValue
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.GetSourceTaskValue
    name: GetSourceTaskValue
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_GetSourceTaskValue
  - name: (
  - name: )
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
  commentId: M:SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
  isExternal: true
  href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_SetChildTaskValue_System_Object_
  name: SetChildTaskValue(object)
  nameWithType: ISafeBlockingTaskInheritor.SetChildTaskValue(object)
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(object)
  nameWithType.vb: ISafeBlockingTaskInheritor.SetChildTaskValue(Object)
  fullName.vb: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(Object)
  name.vb: SetChildTaskValue(Object)
  spec.csharp:
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
    name: SetChildTaskValue
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_SetChildTaskValue_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue(System.Object)
    name: SetChildTaskValue
    isExternal: true
    href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_SetChildTaskValue_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue*
  commentId: Overload:SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue
  isExternal: true
  href: SuperOffice.Threading.ISafeBlockingTaskInheritor.html#SuperOffice_Threading_ISafeBlockingTaskInheritor_SetChildTaskValue_System_Object_
  name: SetChildTaskValue
  nameWithType: ISafeBlockingTaskInheritor.SetChildTaskValue
  fullName: SuperOffice.Threading.ISafeBlockingTaskInheritor.SetChildTaskValue
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
