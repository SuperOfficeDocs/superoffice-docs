### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  id: SaleTypeGroupLinkRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  - SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  - SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData)
  - SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData})
  - SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.SaleTypeGroupLinkRow)
  langs:
  - csharp
  - vb
  name: SaleTypeGroupLinkRecordDataExtensions
  nameWithType: SaleTypeGroupLinkRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nExtension methods to make it easy to fetch <xref href=\"SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData\" data-throw-if-not-resolved=\"false\"></xref> objects from the database,\nusing the <see cref=\"!:TargetedSelect\"></see> infrastructure\n"
  syntax:
    content: 'public static class SaleTypeGroupLinkRecordDataExtensions : Object'
    content.vb: >-
      Public Module SaleTypeGroupLinkRecordDataExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  commentId: M:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  id: FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromSelect(TargetedSelect<SaleTypeGroupLinkTableInfo>)
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.FromSelect(TargetedSelect<SaleTypeGroupLinkTableInfo>)
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedSelect&lt;SaleTypeGroupLinkTableInfo>, execute it and return an IEnumerable&lt;SaleTypeGroupLinkRecordData> with the results\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                var result = s.FromSelect();</code></pre>
  syntax:
    content: public static IEnumerable<SaleTypeGroupLinkRecordData> FromSelect(this TargetedSelect<SaleTypeGroupLinkTableInfo> select)
    parameters:
    - id: select
      type: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromSelect(select As TargetedSelect(Of SaleTypeGroupLinkTableInfo)) As IEnumerable(Of SaleTypeGroupLinkRecordData)
  overload: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect*
  nameWithType.vb: SaleTypeGroupLinkRecordDataExtensions.FromSelect(TargetedSelect(Of SaleTypeGroupLinkTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo))
  name.vb: FromSelect(TargetedSelect(Of SaleTypeGroupLinkTableInfo))
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  commentId: M:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  id: FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromRecord(TargetedDataRecord<SaleTypeGroupLinkTableInfo>)
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.FromRecord(TargetedDataRecord<SaleTypeGroupLinkTableInfo>)
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedDataRecord&lt;SaleTypeGroupLinkTableInfo>, create and populate a <xref href=\"SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData\" data-throw-if-not-resolved=\"false\"></xref> POCO object\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                /* add joins, return fields etc. as you wish */
                s.ReturnFields.Add(s.Table.All);
                var result = s.Records().Select(r => new { SaleTypeGroupLinkItem = r.FromRecord(), /* fetch other fields here */ });</code></pre>
  syntax:
    content: public static SaleTypeGroupLinkRecordData FromRecord(this TargetedDataRecord<SaleTypeGroupLinkTableInfo> record)
    parameters:
    - id: record
      type: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo}
    return:
      type: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromRecord(record As TargetedDataRecord(Of SaleTypeGroupLinkTableInfo)) As SaleTypeGroupLinkRecordData
  overload: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord*
  nameWithType.vb: SaleTypeGroupLinkRecordDataExtensions.FromRecord(TargetedDataRecord(Of SaleTypeGroupLinkTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo))
  name.vb: FromRecord(TargetedDataRecord(Of SaleTypeGroupLinkTableInfo))
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData)
  commentId: M:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData)
  id: ToInsert(SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInsert(SaleTypeGroupLinkRecordData)
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.ToInsert(SaleTypeGroupLinkRecordData)
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static Insert ToInsert(this SaleTypeGroupLinkRecordData record)
    parameters:
    - id: record
      type: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    return:
      type: SuperOffice.Data.SQL.Insert
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInsert(record As SaleTypeGroupLinkRecordData) As Insert
  overload: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData})
  commentId: M:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData})
  id: ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInserts(IEnumerable<SaleTypeGroupLinkRecordData>)
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.ToInserts(IEnumerable<SaleTypeGroupLinkRecordData>)
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static IEnumerable<Insert> ToInserts(this IEnumerable<SaleTypeGroupLinkRecordData> records)
    parameters:
    - id: records
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInserts(records As IEnumerable(Of SaleTypeGroupLinkRecordData)) As IEnumerable(Of Insert)
  overload: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts*
  nameWithType.vb: SaleTypeGroupLinkRecordDataExtensions.ToInserts(IEnumerable(Of SaleTypeGroupLinkRecordData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData))
  name.vb: ToInserts(IEnumerable(Of SaleTypeGroupLinkRecordData))
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.SaleTypeGroupLinkRow)
  commentId: M:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.SaleTypeGroupLinkRow)
  id: ToRecordData(SuperOffice.CRM.Rows.SaleTypeGroupLinkRow)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToRecordData(SaleTypeGroupLinkRow)
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.ToRecordData(SaleTypeGroupLinkRow)
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.SaleTypeGroupLinkRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static SaleTypeGroupLinkRecordData ToRecordData(this SaleTypeGroupLinkRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.SaleTypeGroupLinkRow
    return:
      type: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToRecordData(row As SaleTypeGroupLinkRow) As SaleTypeGroupLinkRecordData
  overload: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect*
  commentId: Overload:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect
  isExternal: true
  name: FromSelect
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.FromSelect
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromSelect
- uid: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedSelect`1
  name: TargetedSelect<SaleTypeGroupLinkTableInfo>
  nameWithType: TargetedSelect<SaleTypeGroupLinkTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo>
  nameWithType.vb: TargetedSelect(Of SaleTypeGroupLinkTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo)
  name.vb: TargetedSelect(Of SaleTypeGroupLinkTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    name: SaleTypeGroupLinkTableInfo
    nameWithType: SaleTypeGroupLinkTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    name: SaleTypeGroupLinkTableInfo
    nameWithType: SaleTypeGroupLinkTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SaleTypeGroupLinkRecordData>
  nameWithType: IEnumerable<SaleTypeGroupLinkRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData>
  nameWithType.vb: IEnumerable(Of SaleTypeGroupLinkRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData)
  name.vb: IEnumerable(Of SaleTypeGroupLinkRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    name: SaleTypeGroupLinkRecordData
    nameWithType: SaleTypeGroupLinkRecordData
    fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    name: SaleTypeGroupLinkRecordData
    nameWithType: SaleTypeGroupLinkRecordData
    fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedSelect`1
  commentId: T:SuperOffice.Data.SQL.TargetedSelect`1
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TargetedSelect<MainTableInfo>
  nameWithType: TargetedSelect<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<MainTableInfo>
  nameWithType.vb: TargetedSelect(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of MainTableInfo)
  name.vb: TargetedSelect(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord*
  commentId: Overload:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord
  isExternal: true
  name: FromRecord
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.FromRecord
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.FromRecord
- uid: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedDataRecord`1
  name: TargetedDataRecord<SaleTypeGroupLinkTableInfo>
  nameWithType: TargetedDataRecord<SaleTypeGroupLinkTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo>
  nameWithType.vb: TargetedDataRecord(Of SaleTypeGroupLinkTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo)
  name.vb: TargetedDataRecord(Of SaleTypeGroupLinkTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    name: SaleTypeGroupLinkTableInfo
    nameWithType: SaleTypeGroupLinkTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    name: SaleTypeGroupLinkTableInfo
    nameWithType: SaleTypeGroupLinkTableInfo
    fullName: SuperOffice.CRM.Data.SaleTypeGroupLinkTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
  commentId: T:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: SaleTypeGroupLinkRecordData
  nameWithType: SaleTypeGroupLinkRecordData
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordData
- uid: SuperOffice.Data.SQL.TargetedDataRecord`1
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord`1
  isExternal: true
  name: TargetedDataRecord<MainTableInfo>
  nameWithType: TargetedDataRecord<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<MainTableInfo>
  nameWithType.vb: TargetedDataRecord(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of MainTableInfo)
  name.vb: TargetedDataRecord(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert*
  commentId: Overload:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert
  isExternal: true
  name: ToInsert
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.ToInsert
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInsert
- uid: SuperOffice.Data.SQL.Insert
  commentId: T:SuperOffice.Data.SQL.Insert
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Insert
  nameWithType: Insert
  fullName: SuperOffice.Data.SQL.Insert
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts*
  commentId: Overload:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts
  isExternal: true
  name: ToInserts
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.ToInserts
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToInserts
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Insert>
  nameWithType: IEnumerable<Insert>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.Insert>
  nameWithType.vb: IEnumerable(Of Insert)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.Insert)
  name.vb: IEnumerable(Of Insert)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData*
  commentId: Overload:SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData
  isExternal: true
  name: ToRecordData
  nameWithType: SaleTypeGroupLinkRecordDataExtensions.ToRecordData
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRecordDataExtensions.ToRecordData
- uid: SuperOffice.CRM.Rows.SaleTypeGroupLinkRow
  commentId: T:SuperOffice.CRM.Rows.SaleTypeGroupLinkRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: SaleTypeGroupLinkRow
  nameWithType: SaleTypeGroupLinkRow
  fullName: SuperOffice.CRM.Rows.SaleTypeGroupLinkRow
