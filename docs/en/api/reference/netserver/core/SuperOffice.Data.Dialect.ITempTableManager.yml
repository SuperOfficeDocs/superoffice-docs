### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Dialect.ITempTableManager
  commentId: T:SuperOffice.Data.Dialect.ITempTableManager
  id: ITempTableManager
  parent: SuperOffice.Data.Dialect
  children:
  - SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync(SuperOffice.Data.SQL.TableInfo,System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo},System.Threading.CancellationToken)
  - SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables(System.Collections.Generic.List{System.String},System.Boolean)
  langs:
  - csharp
  - vb
  name: ITempTableManager
  nameWithType: ITempTableManager
  fullName: SuperOffice.Data.Dialect.ITempTableManager
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: 'public interface ITempTableManager : IDisposable'
    content.vb: >-
      Public Interface ITempTableManager
          Inherits IDisposable
  extensionMethods:
  - SuperOffice.Data.Dialect.ITempTableManager.EnumUtil.MapEnums``2
  - SuperOffice.Data.Dialect.ITempTableManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync(SuperOffice.Data.SQL.TableInfo,System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo},System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync(SuperOffice.Data.SQL.TableInfo,System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo},System.Threading.CancellationToken)
  id: CreateTempCopyForTableAsync(SuperOffice.Data.SQL.TableInfo,System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo},System.Threading.CancellationToken)
  parent: SuperOffice.Data.Dialect.ITempTableManager
  langs:
  - csharp
  - vb
  name: CreateTempCopyForTableAsync(TableInfo, List<FieldInfo>, CancellationToken)
  nameWithType: ITempTableManager.CreateTempCopyForTableAsync(TableInfo, List<FieldInfo>, CancellationToken)
  fullName: SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync(SuperOffice.Data.SQL.TableInfo, System.Collections.Generic.List<SuperOffice.Data.SQL.FieldInfo>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nCreate a temporary table that reflects the given fields from an existing table. Removed on Dispose()\n"
  syntax:
    content: Task<SoTable> CreateTempCopyForTableAsync(TableInfo baseTable, List<FieldInfo> fields, CancellationToken cancellationToken = null)
    parameters:
    - id: baseTable
      type: SuperOffice.Data.SQL.TableInfo
      description: Table to create.
    - id: fields
      type: System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
      description: Fields to create.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.Dictionary.SoTable}
    content.vb: Function CreateTempCopyForTableAsync(baseTable As TableInfo, fields As List(Of FieldInfo), cancellationToken As CancellationToken = Nothing) As Task(Of SoTable)
  overload: SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync*
  nameWithType.vb: ITempTableManager.CreateTempCopyForTableAsync(TableInfo, List(Of FieldInfo), CancellationToken)
  fullName.vb: SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync(SuperOffice.Data.SQL.TableInfo, System.Collections.Generic.List(Of SuperOffice.Data.SQL.FieldInfo), System.Threading.CancellationToken)
  name.vb: CreateTempCopyForTableAsync(TableInfo, List(Of FieldInfo), CancellationToken)
- uid: SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables(System.Collections.Generic.List{System.String},System.Boolean)
  commentId: M:SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables(System.Collections.Generic.List{System.String},System.Boolean)
  id: RemoveTempTables(System.Collections.Generic.List{System.String},System.Boolean)
  parent: SuperOffice.Data.Dialect.ITempTableManager
  langs:
  - csharp
  - vb
  name: RemoveTempTables(List<String>, Boolean)
  nameWithType: ITempTableManager.RemoveTempTables(List<String>, Boolean)
  fullName: SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables(System.Collections.Generic.List<System.String>, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "\nRemove temporary tables\n"
  syntax:
    content: void RemoveTempTables(List<string> tableNames, bool updateNetserverSoDictionary = false)
    parameters:
    - id: tableNames
      type: System.Collections.Generic.List{System.String}
      description: Names of tables to remove.
    - id: updateNetserverSoDictionary
      type: System.Boolean
      description: Should NetServer SoDictionary be updated?
    content.vb: Sub RemoveTempTables(tableNames As List(Of String), updateNetserverSoDictionary As Boolean = False)
  overload: SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables*
  nameWithType.vb: ITempTableManager.RemoveTempTables(List(Of String), Boolean)
  fullName.vb: SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables(System.Collections.Generic.List(Of System.String), System.Boolean)
  name.vb: RemoveTempTables(List(Of String), Boolean)
references:
- uid: SuperOffice.Data.Dialect
  commentId: N:SuperOffice.Data.Dialect
  isExternal: true
  name: SuperOffice.Data.Dialect
  nameWithType: SuperOffice.Data.Dialect
  fullName: SuperOffice.Data.Dialect
- uid: SuperOffice.Data.Dialect.ITempTableManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ITempTableManager, To>()
  nameWithType: EnumUtil.MapEnums<ITempTableManager, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.ITempTableManager, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ITempTableManager, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.ITempTableManager, To)()
  name.vb: MapEnums(Of ITempTableManager, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ITempTableManager, To>
    nameWithType: EnumUtil.MapEnums<ITempTableManager, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.ITempTableManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ITempTableManager, To)
    nameWithType: EnumUtil.MapEnums(Of ITempTableManager, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.ITempTableManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.ITempTableManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ITempTableManager, To>()
  nameWithType: Converters.MapEnums<ITempTableManager, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.ITempTableManager, To>()
  nameWithType.vb: Converters.MapEnums(Of ITempTableManager, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.ITempTableManager, To)()
  name.vb: MapEnums(Of ITempTableManager, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ITempTableManager, To>
    nameWithType: Converters.MapEnums<ITempTableManager, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.ITempTableManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ITempTableManager, To)
    nameWithType: Converters.MapEnums(Of ITempTableManager, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.ITempTableManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync*
  commentId: Overload:SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync
  isExternal: true
  name: CreateTempCopyForTableAsync
  nameWithType: ITempTableManager.CreateTempCopyForTableAsync
  fullName: SuperOffice.Data.Dialect.ITempTableManager.CreateTempCopyForTableAsync
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
  commentId: '!:System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}'
  definition: System.Collections.Generic.List`1
  name: List<FieldInfo>
  nameWithType: List<FieldInfo>
  fullName: System.Collections.Generic.List<SuperOffice.Data.SQL.FieldInfo>
  nameWithType.vb: List(Of FieldInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.Data.SQL.FieldInfo)
  name.vb: List(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.Data.Dictionary.SoTable}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Data.Dictionary.SoTable}'
  definition: System.Threading.Tasks.Task`1
  name: Task<SoTable>
  nameWithType: Task<SoTable>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.Dictionary.SoTable>
  nameWithType.vb: Task(Of SoTable)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.Dictionary.SoTable)
  name.vb: Task(Of SoTable)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables*
  commentId: Overload:SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables
  isExternal: true
  name: RemoveTempTables
  nameWithType: ITempTableManager.RemoveTempTables
  fullName: SuperOffice.Data.Dialect.ITempTableManager.RemoveTempTables
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
