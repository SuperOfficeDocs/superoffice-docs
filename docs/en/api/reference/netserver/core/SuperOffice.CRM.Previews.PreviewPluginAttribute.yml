### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute
  commentId: T:SuperOffice.CRM.Previews.PreviewPluginAttribute
  id: PreviewPluginAttribute
  parent: SuperOffice.CRM.Previews
  children:
  - SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor(System.String,System.Int32,System.String[])
  - SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor(System.String,System.String[])
  - SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints
  langs:
  - csharp
  - vb
  name: PreviewPluginAttribute
  nameWithType: PreviewPluginAttribute
  fullName: SuperOffice.CRM.Previews.PreviewPluginAttribute
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Previews
  summary: "\nAttribute used to mark a class as a Preview provider Plugin. Such classes need to implement the <see cref=\"!:IPreviewpProviderPlugin\"></see>\ninterface. The priority of the standard providers is set at int.MaxValue/2 to provide room both above and below. The name has\nno impact on functionality, but should be hept unique and traceable (such as partnerName:pluginName or some such syntax). The provider\ncan optionally register for one or more Preview hints it wishes to handle.\n"
  syntax:
    content: 'public class PreviewPluginAttribute : PrioritizedPluginAttribute'
    content.vb: >-
      Public Class PreviewPluginAttribute
          Inherits PrioritizedPluginAttribute
  inheritance:
  - System.Object
  - SuperOffice.Factory.PluginAttribute
  - SuperOffice.Factory.PrioritizedPluginAttribute
  extensionMethods:
  - SuperOffice.CRM.Previews.PreviewPluginAttribute.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Previews.PreviewPluginAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor(System.String,System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor(System.String,System.Int32,System.String[])
  id: '#ctor(System.String,System.Int32,System.String[])'
  parent: SuperOffice.CRM.Previews.PreviewPluginAttribute
  langs:
  - csharp
  - vb
  name: PreviewPluginAttribute(String, Int32, String[])
  nameWithType: PreviewPluginAttribute.PreviewPluginAttribute(String, Int32, String[])
  fullName: SuperOffice.CRM.Previews.PreviewPluginAttribute.PreviewPluginAttribute(System.String, System.Int32, System.String[])
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Previews
  summary: "\nMark a class as a Preview provider Plugin with the given name and priority. Standard providers have priority int.MaxValue/2.\n"
  syntax:
    content: public PreviewPluginAttribute(string name, int priority, params string[] registerHints)
    parameters:
    - id: name
      type: System.String
      description: Provider name
    - id: priority
      type: System.Int32
      description: Priority, lower values come before higher values
    - id: registerHints
      type: System.String[]
      description: >-
        Set of hints to register for. If this is empty, the provider will be called for ALL

        Preview requests and must filter by itself. If nonempty, the provider will be called only for requests

        that contain at least one of its registered hints.
    content.vb: Public Sub New(name As String, priority As Integer, ParamArray registerHints As String())
  overload: SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor*
  nameWithType.vb: PreviewPluginAttribute.PreviewPluginAttribute(String, Int32, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Previews.PreviewPluginAttribute.PreviewPluginAttribute(System.String, System.Int32, System.String())
  name.vb: PreviewPluginAttribute(String, Int32, String())
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor(System.String,System.String[])
  commentId: M:SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: SuperOffice.CRM.Previews.PreviewPluginAttribute
  langs:
  - csharp
  - vb
  name: PreviewPluginAttribute(String, String[])
  nameWithType: PreviewPluginAttribute.PreviewPluginAttribute(String, String[])
  fullName: SuperOffice.CRM.Previews.PreviewPluginAttribute.PreviewPluginAttribute(System.String, System.String[])
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Previews
  summary: "\nMark a class as a Preview provider Plugin with the given name and the standard priority of int.MaxValue/2.\n"
  syntax:
    content: public PreviewPluginAttribute(string name, params string[] registerHints)
    parameters:
    - id: name
      type: System.String
      description: Provider name
    - id: registerHints
      type: System.String[]
      description: >-
        Set of hints to register for. If this is empty, the provider will be called for ALL

        Preview requests and must filter by itself. If nonempty, the provider will be called only for requests

        that contain at least one of its registered hints.
    content.vb: Public Sub New(name As String, ParamArray registerHints As String())
  overload: SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor*
  nameWithType.vb: PreviewPluginAttribute.PreviewPluginAttribute(String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Previews.PreviewPluginAttribute.PreviewPluginAttribute(System.String, System.String())
  name.vb: PreviewPluginAttribute(String, String())
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints
  commentId: P:SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints
  id: RegisteredHints
  parent: SuperOffice.CRM.Previews.PreviewPluginAttribute
  langs:
  - csharp
  - vb
  name: RegisteredHints
  nameWithType: PreviewPluginAttribute.RegisteredHints
  fullName: SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Previews
  syntax:
    content: public string[] RegisteredHints { get; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public ReadOnly Property RegisteredHints As String()
  overload: SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Previews
  commentId: N:SuperOffice.CRM.Previews
  isExternal: true
  name: SuperOffice.CRM.Previews
  nameWithType: SuperOffice.CRM.Previews
  fullName: SuperOffice.CRM.Previews
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Factory.PluginAttribute
  commentId: T:SuperOffice.Factory.PluginAttribute
  parent: SuperOffice.Factory
  isExternal: true
  name: PluginAttribute
  nameWithType: PluginAttribute
  fullName: SuperOffice.Factory.PluginAttribute
- uid: SuperOffice.Factory.PrioritizedPluginAttribute
  commentId: T:SuperOffice.Factory.PrioritizedPluginAttribute
  parent: SuperOffice.Factory
  isExternal: true
  name: PrioritizedPluginAttribute
  nameWithType: PrioritizedPluginAttribute
  fullName: SuperOffice.Factory.PrioritizedPluginAttribute
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<PreviewPluginAttribute, To>()
  nameWithType: EnumUtil.MapEnums<PreviewPluginAttribute, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Previews.PreviewPluginAttribute, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of PreviewPluginAttribute, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Previews.PreviewPluginAttribute, To)()
  name.vb: MapEnums(Of PreviewPluginAttribute, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<PreviewPluginAttribute, To>
    nameWithType: EnumUtil.MapEnums<PreviewPluginAttribute, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Previews.PreviewPluginAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of PreviewPluginAttribute, To)
    nameWithType: EnumUtil.MapEnums(Of PreviewPluginAttribute, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Previews.PreviewPluginAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<PreviewPluginAttribute, To>()
  nameWithType: Converters.MapEnums<PreviewPluginAttribute, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Previews.PreviewPluginAttribute, To>()
  nameWithType.vb: Converters.MapEnums(Of PreviewPluginAttribute, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Previews.PreviewPluginAttribute, To)()
  name.vb: MapEnums(Of PreviewPluginAttribute, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<PreviewPluginAttribute, To>
    nameWithType: Converters.MapEnums<PreviewPluginAttribute, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Previews.PreviewPluginAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of PreviewPluginAttribute, To)
    nameWithType: Converters.MapEnums(Of PreviewPluginAttribute, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Previews.PreviewPluginAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Factory
  commentId: N:SuperOffice.Factory
  isExternal: true
  name: SuperOffice.Factory
  nameWithType: SuperOffice.Factory
  fullName: SuperOffice.Factory
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor*
  commentId: Overload:SuperOffice.CRM.Previews.PreviewPluginAttribute.#ctor
  isExternal: true
  name: PreviewPluginAttribute
  nameWithType: PreviewPluginAttribute.PreviewPluginAttribute
  fullName: SuperOffice.CRM.Previews.PreviewPluginAttribute.PreviewPluginAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints*
  commentId: Overload:SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints
  isExternal: true
  name: RegisteredHints
  nameWithType: PreviewPluginAttribute.RegisteredHints
  fullName: SuperOffice.CRM.Previews.PreviewPluginAttribute.RegisteredHints
