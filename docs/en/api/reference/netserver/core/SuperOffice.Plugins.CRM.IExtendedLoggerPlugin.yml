### YamlMime:ManagedReference
items:
- uid: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin
  commentId: T:SuperOffice.Plugins.CRM.IExtendedLoggerPlugin
  id: IExtendedLoggerPlugin
  parent: SuperOffice.Plugins.CRM
  children:
  - SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem(System.Object)
  langs:
  - csharp
  - vb
  name: IExtendedLoggerPlugin
  nameWithType: IExtendedLoggerPlugin
  fullName: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin
  type: Interface
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Plugins.CRM
  summary: "\nPlugin for the entity-based extended logging system; its task is to take a log document and save it somewhere safe\n"
  syntax:
    content: 'public interface IExtendedLoggerPlugin : IPlugin'
    content.vb: >-
      Public Interface IExtendedLoggerPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.EnumUtil.MapEnums``2
  - SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem(System.Object)
  commentId: M:SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem(System.Object)
  id: LogItem(System.Object)
  parent: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin
  langs:
  - csharp
  - vb
  name: LogItem(Object)
  nameWithType: IExtendedLoggerPlugin.LogItem(Object)
  fullName: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem(System.Object)
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Plugins.CRM
  summary: "\nSave this log item\n"
  syntax:
    content: void LogItem(object logDocument)
    parameters:
    - id: logDocument
      type: System.Object
      description: Either a Dictionary&lt;string, object> that represents a dynamic JSON structure, or a class to be JSOM serialized
    content.vb: Sub LogItem(logDocument As Object)
  overload: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem*
references:
- uid: SuperOffice.Plugins.CRM
  commentId: N:SuperOffice.Plugins.CRM
  isExternal: true
  name: SuperOffice.Plugins.CRM
  nameWithType: SuperOffice.Plugins.CRM
  fullName: SuperOffice.Plugins.CRM
- uid: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IExtendedLoggerPlugin, To>()
  nameWithType: EnumUtil.MapEnums<IExtendedLoggerPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IExtendedLoggerPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To)()
  name.vb: MapEnums(Of IExtendedLoggerPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IExtendedLoggerPlugin, To>
    nameWithType: EnumUtil.MapEnums<IExtendedLoggerPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IExtendedLoggerPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of IExtendedLoggerPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IExtendedLoggerPlugin, To>()
  nameWithType: Converters.MapEnums<IExtendedLoggerPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of IExtendedLoggerPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To)()
  name.vb: MapEnums(Of IExtendedLoggerPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IExtendedLoggerPlugin, To>
    nameWithType: Converters.MapEnums<IExtendedLoggerPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IExtendedLoggerPlugin, To)
    nameWithType: Converters.MapEnums(Of IExtendedLoggerPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Plugins.CRM.IExtendedLoggerPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem*
  commentId: Overload:SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem
  isExternal: true
  name: LogItem
  nameWithType: IExtendedLoggerPlugin.LogItem
  fullName: SuperOffice.Plugins.CRM.IExtendedLoggerPlugin.LogItem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
