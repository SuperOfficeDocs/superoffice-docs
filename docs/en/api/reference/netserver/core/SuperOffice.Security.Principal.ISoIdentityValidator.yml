### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.ISoIdentityValidator
  commentId: T:SuperOffice.Security.Principal.ISoIdentityValidator
  id: ISoIdentityValidator
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Security.Principal.ISoIdentity,SuperOffice.Data.SoConnection,System.String@)
  langs:
  - csharp
  - vb
  name: ISoIdentityValidator
  nameWithType: ISoIdentityValidator
  fullName: SuperOffice.Security.Principal.ISoIdentityValidator
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nInterface for plugin capable validating the authentication process\n"
  syntax:
    content: 'public interface ISoIdentityValidator : IPlugin'
    content.vb: >-
      Public Interface ISoIdentityValidator
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Security.Principal.ISoIdentityValidator.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.ISoIdentityValidator.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Security.Principal.ISoIdentity,SuperOffice.Data.SoConnection,System.String@)
  commentId: M:SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Security.Principal.ISoIdentity,SuperOffice.Data.SoConnection,System.String@)
  id: TryValidateIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Security.Principal.ISoIdentity,SuperOffice.Data.SoConnection,System.String@)
  parent: SuperOffice.Security.Principal.ISoIdentityValidator
  langs:
  - csharp
  - vb
  name: TryValidateIdentity(IList<SecurityToken>, ISoIdentity, SoConnection, out String)
  nameWithType: ISoIdentityValidator.TryValidateIdentity(IList<SecurityToken>, ISoIdentity, SoConnection, out String)
  fullName: SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity(System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>, SuperOffice.Security.Principal.ISoIdentity, SuperOffice.Data.SoConnection, out System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nValidate the tokens after they are resolved.  At least one of the \nvalidators must respond Valid for authentication to succeed. The \nAuthentication process fails if one of the validators return Rejected.\n"
  syntax:
    content: TokenValidationResult TryValidateIdentity(IList<SecurityToken> tokens, ISoIdentity identity, SoConnection dbConnection, out string reason)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
      description: Tokens to validate
    - id: identity
      type: SuperOffice.Security.Principal.ISoIdentity
      description: The Identity resolved to.
    - id: dbConnection
      type: SuperOffice.Data.SoConnection
    - id: reason
      type: System.String
      description: "The reason for the result.  This value should \nalways be set to something meaningfull if Rejected is returned."
    return:
      type: SuperOffice.Security.TokenValidationResult
      description: Result of validation.
    content.vb: Function TryValidateIdentity(tokens As IList(Of SecurityToken), identity As ISoIdentity, dbConnection As SoConnection, ByRef reason As String) As TokenValidationResult
  overload: SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity*
  nameWithType.vb: ISoIdentityValidator.TryValidateIdentity(IList(Of SecurityToken), ISoIdentity, SoConnection, ByRef String)
  fullName.vb: SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity(System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken), SuperOffice.Security.Principal.ISoIdentity, SuperOffice.Data.SoConnection, ByRef System.String)
  name.vb: TryValidateIdentity(IList(Of SecurityToken), ISoIdentity, SoConnection, ByRef String)
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: SuperOffice.Security.Principal.ISoIdentityValidator.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoIdentityValidator, To>()
  nameWithType: EnumUtil.MapEnums<ISoIdentityValidator, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.ISoIdentityValidator, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoIdentityValidator, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.ISoIdentityValidator, To)()
  name.vb: MapEnums(Of ISoIdentityValidator, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoIdentityValidator, To>
    nameWithType: EnumUtil.MapEnums<ISoIdentityValidator, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.ISoIdentityValidator, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoIdentityValidator, To)
    nameWithType: EnumUtil.MapEnums(Of ISoIdentityValidator, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.ISoIdentityValidator, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.ISoIdentityValidator.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoIdentityValidator, To>()
  nameWithType: Converters.MapEnums<ISoIdentityValidator, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.ISoIdentityValidator, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoIdentityValidator, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.ISoIdentityValidator, To)()
  name.vb: MapEnums(Of ISoIdentityValidator, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoIdentityValidator, To>
    nameWithType: Converters.MapEnums<ISoIdentityValidator, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.ISoIdentityValidator, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoIdentityValidator, To)
    nameWithType: Converters.MapEnums(Of ISoIdentityValidator, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.ISoIdentityValidator, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity*
  commentId: Overload:SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity
  isExternal: true
  name: TryValidateIdentity
  nameWithType: ISoIdentityValidator.TryValidateIdentity
  fullName: SuperOffice.Security.Principal.ISoIdentityValidator.TryValidateIdentity
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
  commentId: T:System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SecurityToken>
  nameWithType: IList<SecurityToken>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>
  nameWithType.vb: IList(Of SecurityToken)
  fullName.vb: System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken)
  name.vb: IList(Of SecurityToken)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.ISoIdentity
  commentId: T:SuperOffice.Security.Principal.ISoIdentity
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: ISoIdentity
  nameWithType: ISoIdentity
  fullName: SuperOffice.Security.Principal.ISoIdentity
- uid: SuperOffice.Data.SoConnection
  commentId: T:SuperOffice.Data.SoConnection
  parent: SuperOffice.Data
  isExternal: true
  name: SoConnection
  nameWithType: SoConnection
  fullName: SuperOffice.Data.SoConnection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Security.TokenValidationResult
  commentId: T:SuperOffice.Security.TokenValidationResult
  parent: SuperOffice.Security
  isExternal: true
  name: TokenValidationResult
  nameWithType: TokenValidationResult
  fullName: SuperOffice.Security.TokenValidationResult
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security
  commentId: N:SuperOffice.Security
  isExternal: true
  name: SuperOffice.Security
  nameWithType: SuperOffice.Security
  fullName: SuperOffice.Security
