### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Ticket.TicketHelper
  commentId: T:SuperOffice.CRM.Ticket.TicketHelper
  id: TicketHelper
  parent: SuperOffice.CRM.Ticket
  children:
  - SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories(SuperOffice.Data.SQL.Select,SuperOffice.CRM.Data.TicketTableInfo,System.Int32)
  - SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId(System.Int32)
  - SuperOffice.CRM.Ticket.TicketHelper.GetIconHint(System.String,SuperOffice.Data.TicketBaseStatus,System.DateTime)
  - SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync(System.Int16,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight(SuperOffice.CRM.Ticket.TicketData)
  - SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync(System.Int32)
  - SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync(SuperOffice.CRM.Rows.TicketRow,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync(SuperOffice.CRM.Rows.TicketRow,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync(System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TicketHelper
  nameWithType: TicketHelper
  fullName: SuperOffice.CRM.Ticket.TicketHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: 'public static class TicketHelper : Object'
    content.vb: >-
      Public Module TicketHelper
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTicketChangeDataAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetTicketChangeDataAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.GetTicketChangeDataAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task<TicketChangeData> GetTicketChangeDataAsync(int ticketId, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.TicketChangeData}
    content.vb: Public Shared Function GetTicketChangeDataAsync(ticketId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TicketChangeData)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetIconHint(System.String,SuperOffice.Data.TicketBaseStatus,System.DateTime)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetIconHint(System.String,SuperOffice.Data.TicketBaseStatus,System.DateTime)
  id: GetIconHint(System.String,SuperOffice.Data.TicketBaseStatus,System.DateTime)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetIconHint(String, TicketBaseStatus, DateTime)
  nameWithType: TicketHelper.GetIconHint(String, TicketBaseStatus, DateTime)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetIconHint(System.String, SuperOffice.Data.TicketBaseStatus, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nSelects icon for a ticket based on its state\n"
  syntax:
    content: public static string GetIconHint(string icon, TicketBaseStatus ticketStatus, DateTime deadline)
    parameters:
    - id: icon
      type: System.String
    - id: ticketStatus
      type: SuperOffice.Data.TicketBaseStatus
      description: Ticket&apos;s status
    - id: deadline
      type: System.DateTime
      description: Deadline of the ticket
    return:
      type: System.String
    content.vb: Public Shared Function GetIconHint(icon As String, ticketStatus As TicketBaseStatus, deadline As DateTime) As String
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetIconHint*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTicketSecurityLevelAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetTicketSecurityLevelAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.GetTicketSecurityLevelAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nGets <xref href=\"SuperOffice.Data.TicketSecurityLevel\" data-throw-if-not-resolved=\"false\"></xref> depending on TicketTypeId. If the <see cref=\"!:ticketTypeId\"></see> == 0 default ticket type is used\n"
  syntax:
    content: public static Task<TicketSecurityLevel> GetTicketSecurityLevelAsync(int ticketTypeId = 0, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketTypeId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.TicketSecurityLevel}
      description: Resolved <xref href="SuperOffice.Data.TicketSecurityLevel" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetTicketSecurityLevelAsync(ticketTypeId As Integer = 0, cancellationToken As CancellationToken = Nothing) As Task(Of TicketSecurityLevel)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync(System.Int32,System.Threading.CancellationToken)
  id: ResolveTicketIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: ResolveTicketIdAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.ResolveTicketIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nTicket can be connected (merged) to another ticket. This method traverses through its connection(s) and returns proper ticketId\n"
  syntax:
    content: public static Task<int> ResolveTicketIdAsync(int ticketId, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Potentially correct ticketId
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Correct ticketId. Returns 0 in case ticket does not exists
    content.vb: Public Shared Function ResolveTicketIdAsync(ticketId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTicketDataAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetTicketDataAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.GetTicketDataAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task<TicketData> GetTicketDataAsync(int ticketId, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.TicketData}
    content.vb: Public Shared Function GetTicketDataAsync(ticketId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TicketData)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId(System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId(System.Int32)
  id: GetFacadeAssociateId(System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetFacadeAssociateId(Int32)
  nameWithType: TicketHelper.GetFacadeAssociateId(Int32)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nMaps ejUserId to associateId required by C++ code via facade.\n"
  syntax:
    content: public static int GetFacadeAssociateId(int ejUserId)
    parameters:
    - id: ejUserId
      type: System.Int32
      description: ejUserId
    return:
      type: System.Int32
    content.vb: Public Shared Function GetFacadeAssociateId(ejUserId As Integer) As Integer
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTicketBaseStatusAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetTicketBaseStatusAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.GetTicketBaseStatusAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nGet TicketBaseStatus from TicketStatus. Example: TicketStatus &quot;Resolved&quot; may have a TicketBaseStatus &quot;Closed&quot;.\n"
  syntax:
    content: public static Task<TicketBaseStatus> GetTicketBaseStatusAsync(int ticketStatus, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketStatus
      type: System.Int32
      description: TicketStatus int from TicketStatus table
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.TicketBaseStatus}
      description: TicketBaseStatus(enum) of provided TicketStatus
    content.vb: Public Shared Function GetTicketBaseStatusAsync(ticketStatus As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of TicketBaseStatus)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync(SuperOffice.CRM.Rows.TicketRow,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync(SuperOffice.CRM.Rows.TicketRow,System.Boolean,System.Threading.CancellationToken)
  id: UpdateLastChangedAsync(SuperOffice.CRM.Rows.TicketRow,System.Boolean,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: UpdateLastChangedAsync(TicketRow, Boolean, CancellationToken)
  nameWithType: TicketHelper.UpdateLastChangedAsync(TicketRow, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync(SuperOffice.CRM.Rows.TicketRow, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nUpdate Ticket LastChanged field.\nThis function will set the ticket&apos;s last_changed timestamp to now.\nThe read_status will be set to yellow if it is green. If it is red,\nit will not be changed.\n"
  syntax:
    content: public static Task UpdateLastChangedAsync(this TicketRow ticketRow, bool noNewInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketRow
      type: SuperOffice.CRM.Rows.TicketRow
      description: TicketRow object
    - id: noNewInfo
      type: System.Boolean
      description: Indicates if ticket has changed
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateLastChangedAsync(ticketRow As TicketRow, noNewInfo As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync(SuperOffice.CRM.Rows.TicketRow,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync(SuperOffice.CRM.Rows.TicketRow,System.DateTime,System.Threading.CancellationToken)
  id: UpdateRepliedAtAsync(SuperOffice.CRM.Rows.TicketRow,System.DateTime,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: UpdateRepliedAtAsync(TicketRow, DateTime, CancellationToken)
  nameWithType: TicketHelper.UpdateRepliedAtAsync(TicketRow, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync(SuperOffice.CRM.Rows.TicketRow, System.DateTime, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nUpdate Ticket RepliedAt field.\nThis function will calculate and set repliedAt, timeToReply and realTimeToReply fields.\n"
  syntax:
    content: public static Task UpdateRepliedAtAsync(this TicketRow ticketRow, DateTime repliedAt, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketRow
      type: SuperOffice.CRM.Rows.TicketRow
      description: TicketRow object
    - id: repliedAt
      type: System.DateTime
      description: RepliedAt datetime
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UpdateRepliedAtAsync(ticketRow As TicketRow, repliedAt As DateTime, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync(System.Int32,System.Threading.CancellationToken)
  id: UpdateTicketStatisticsFromMessagesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: UpdateTicketStatisticsFromMessagesAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.UpdateTicketStatisticsFromMessagesAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nUpdate number of messages, replies and timespent for ticket\n"
  syntax:
    content: public static Task UpdateTicketStatisticsFromMessagesAsync(int ticketId, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Ticket id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function UpdateTicketStatisticsFromMessagesAsync(ticketId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync(System.Threading.CancellationToken)
  id: GetNextInQueueAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetNextInQueueAsync(CancellationToken)
  nameWithType: TicketHelper.GetNextInQueueAsync(CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task<int> GetNextInQueueAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Shared Function GetNextInQueueAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetTicketCustomersAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetTicketCustomersAsync(Int32, Int32, CancellationToken)
  nameWithType: TicketHelper.GetTicketCustomersAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nGet ticket customer rows.\n"
  syntax:
    content: public static Task<TicketCustomersRows> GetTicketCustomersAsync(int ticketId, int customerId = 0, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketId
      type: System.Int32
      description: TicketId to return customers for
    - id: customerId
      type: System.Int32
      description: Optional customer id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.TicketCustomersRows}
      description: TicketCustomersRows object
    content.vb: Public Shared Function GetTicketCustomersAsync(ticketId As Integer, customerId As Integer = 0, cancellationToken As CancellationToken = Nothing) As Task(Of TicketCustomersRows)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync(System.Int16,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync(System.Int16,System.Threading.CancellationToken)
  id: GetTicketStatusRecordDataAsync(System.Int16,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetTicketStatusRecordDataAsync(Int16, CancellationToken)
  nameWithType: TicketHelper.GetTicketStatusRecordDataAsync(Int16, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync(System.Int16, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task<TicketStatusRecordData> GetTicketStatusRecordDataAsync(short ticketStatusId, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketStatusId
      type: System.Int16
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.TicketStatusRecordData}
    content.vb: Public Shared Function GetTicketStatusRecordDataAsync(ticketStatusId As Short, cancellationToken As CancellationToken = Nothing) As Task(Of TicketStatusRecordData)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync(System.Threading.CancellationToken)
  id: DemandAdminPermissionsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: DemandAdminPermissionsAsync(CancellationToken)
  nameWithType: TicketHelper.DemandAdminPermissionsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task DemandAdminPermissionsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function DemandAdminPermissionsAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight(SuperOffice.CRM.Ticket.TicketData)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight(SuperOffice.CRM.Ticket.TicketData)
  id: HasUpdateRight(SuperOffice.CRM.Ticket.TicketData)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: HasUpdateRight(TicketData)
  nameWithType: TicketHelper.HasUpdateRight(TicketData)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight(SuperOffice.CRM.Ticket.TicketData)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static bool HasUpdateRight(TicketData data)
    parameters:
    - id: data
      type: SuperOffice.CRM.Ticket.TicketData
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasUpdateRight(data As TicketData) As Boolean
  overload: SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync(System.Int32,System.Threading.CancellationToken)
  id: GetMailInFilterAddressAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: GetMailInFilterAddressAsync(Int32, CancellationToken)
  nameWithType: TicketHelper.GetMailInFilterAddressAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task<string> GetMailInFilterAddressAsync(int filterId, CancellationToken cancellationToken = null)
    parameters:
    - id: filterId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetMailInFilterAddressAsync(filterId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: UpdateEjMessageSearchTitleAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: UpdateEjMessageSearchTitleAsync(Int32, String, CancellationToken)
  nameWithType: TicketHelper.UpdateEjMessageSearchTitleAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task UpdateEjMessageSearchTitleAsync(int ticketId, string title, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketId
      type: System.Int32
    - id: title
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function UpdateEjMessageSearchTitleAsync(ticketId As Integer, title As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync(System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync(System.Int32)
  id: NotifyNewTicketAsync(System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: NotifyNewTicketAsync(Int32)
  nameWithType: TicketHelper.NotifyNewTicketAsync(Int32)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static Task NotifyNewTicketAsync(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function NotifyNewTicketAsync(ticketEntityId As Integer) As Task
  overload: SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories(SuperOffice.Data.SQL.Select,SuperOffice.CRM.Data.TicketTableInfo,System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories(SuperOffice.Data.SQL.Select,SuperOffice.CRM.Data.TicketTableInfo,System.Int32)
  id: AddRestrictionToOwnCategories(SuperOffice.Data.SQL.Select,SuperOffice.CRM.Data.TicketTableInfo,System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketHelper
  langs:
  - csharp
  - vb
  name: AddRestrictionToOwnCategories(Select, TicketTableInfo, Int32)
  nameWithType: TicketHelper.AddRestrictionToOwnCategories(Select, TicketTableInfo, Int32)
  fullName: SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories(SuperOffice.Data.SQL.Select, SuperOffice.CRM.Data.TicketTableInfo, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static void AddRestrictionToOwnCategories(Select sql, TicketTableInfo ti, int userId)
    parameters:
    - id: sql
      type: SuperOffice.Data.SQL.Select
    - id: ti
      type: SuperOffice.CRM.Data.TicketTableInfo
    - id: userId
      type: System.Int32
    content.vb: Public Shared Sub AddRestrictionToOwnCategories(sql As  Select, ti As TicketTableInfo, userId As Integer)
  overload: SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Ticket
  commentId: N:SuperOffice.CRM.Ticket
  isExternal: true
  name: SuperOffice.CRM.Ticket
  nameWithType: SuperOffice.CRM.Ticket
  fullName: SuperOffice.CRM.Ticket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync
  isExternal: true
  name: GetTicketChangeDataAsync
  nameWithType: TicketHelper.GetTicketChangeDataAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketChangeDataAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.TicketChangeData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.TicketChangeData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketChangeData>
  nameWithType: Task<TicketChangeData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Ticket.TicketChangeData>
  nameWithType.vb: Task(Of TicketChangeData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Ticket.TicketChangeData)
  name.vb: Task(Of TicketChangeData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Ticket.TicketChangeData
    name: TicketChangeData
    nameWithType: TicketChangeData
    fullName: SuperOffice.CRM.Ticket.TicketChangeData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Ticket.TicketChangeData
    name: TicketChangeData
    nameWithType: TicketChangeData
    fullName: SuperOffice.CRM.Ticket.TicketChangeData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetIconHint*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetIconHint
  isExternal: true
  name: GetIconHint
  nameWithType: TicketHelper.GetIconHint
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetIconHint
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.TicketBaseStatus
  commentId: T:SuperOffice.Data.TicketBaseStatus
  parent: SuperOffice.Data
  isExternal: true
  name: TicketBaseStatus
  nameWithType: TicketBaseStatus
  fullName: SuperOffice.Data.TicketBaseStatus
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync
  isExternal: true
  name: GetTicketSecurityLevelAsync
  nameWithType: TicketHelper.GetTicketSecurityLevelAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketSecurityLevelAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Data.TicketSecurityLevel}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Data.TicketSecurityLevel}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketSecurityLevel>
  nameWithType: Task<TicketSecurityLevel>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.TicketSecurityLevel>
  nameWithType.vb: Task(Of TicketSecurityLevel)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.TicketSecurityLevel)
  name.vb: Task(Of TicketSecurityLevel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.TicketSecurityLevel
    name: TicketSecurityLevel
    nameWithType: TicketSecurityLevel
    fullName: SuperOffice.Data.TicketSecurityLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.TicketSecurityLevel
    name: TicketSecurityLevel
    nameWithType: TicketSecurityLevel
    fullName: SuperOffice.Data.TicketSecurityLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync
  isExternal: true
  name: ResolveTicketIdAsync
  nameWithType: TicketHelper.ResolveTicketIdAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.ResolveTicketIdAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync
  isExternal: true
  name: GetTicketDataAsync
  nameWithType: TicketHelper.GetTicketDataAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketDataAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.TicketData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.TicketData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketData>
  nameWithType: Task<TicketData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Ticket.TicketData>
  nameWithType.vb: Task(Of TicketData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Ticket.TicketData)
  name.vb: Task(Of TicketData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Ticket.TicketData
    name: TicketData
    nameWithType: TicketData
    fullName: SuperOffice.CRM.Ticket.TicketData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Ticket.TicketData
    name: TicketData
    nameWithType: TicketData
    fullName: SuperOffice.CRM.Ticket.TicketData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId
  isExternal: true
  name: GetFacadeAssociateId
  nameWithType: TicketHelper.GetFacadeAssociateId
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetFacadeAssociateId
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync
  isExternal: true
  name: GetTicketBaseStatusAsync
  nameWithType: TicketHelper.GetTicketBaseStatusAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketBaseStatusAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Data.TicketBaseStatus}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Data.TicketBaseStatus}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketBaseStatus>
  nameWithType: Task<TicketBaseStatus>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.TicketBaseStatus>
  nameWithType.vb: Task(Of TicketBaseStatus)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.TicketBaseStatus)
  name.vb: Task(Of TicketBaseStatus)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.TicketBaseStatus
    name: TicketBaseStatus
    nameWithType: TicketBaseStatus
    fullName: SuperOffice.Data.TicketBaseStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.TicketBaseStatus
    name: TicketBaseStatus
    nameWithType: TicketBaseStatus
    fullName: SuperOffice.Data.TicketBaseStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync
  isExternal: true
  name: UpdateLastChangedAsync
  nameWithType: TicketHelper.UpdateLastChangedAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateLastChangedAsync
- uid: SuperOffice.CRM.Rows.TicketRow
  commentId: T:SuperOffice.CRM.Rows.TicketRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketRow
  nameWithType: TicketRow
  fullName: SuperOffice.CRM.Rows.TicketRow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync
  isExternal: true
  name: UpdateRepliedAtAsync
  nameWithType: TicketHelper.UpdateRepliedAtAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateRepliedAtAsync
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync
  isExternal: true
  name: UpdateTicketStatisticsFromMessagesAsync
  nameWithType: TicketHelper.UpdateTicketStatisticsFromMessagesAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateTicketStatisticsFromMessagesAsync
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync
  isExternal: true
  name: GetNextInQueueAsync
  nameWithType: TicketHelper.GetNextInQueueAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetNextInQueueAsync
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync
  isExternal: true
  name: GetTicketCustomersAsync
  nameWithType: TicketHelper.GetTicketCustomersAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketCustomersAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.TicketCustomersRows}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.TicketCustomersRows}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketCustomersRows>
  nameWithType: Task<TicketCustomersRows>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.TicketCustomersRows>
  nameWithType.vb: Task(Of TicketCustomersRows)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.TicketCustomersRows)
  name.vb: Task(Of TicketCustomersRows)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.TicketCustomersRows
    name: TicketCustomersRows
    nameWithType: TicketCustomersRows
    fullName: SuperOffice.CRM.Rows.TicketCustomersRows
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.TicketCustomersRows
    name: TicketCustomersRows
    nameWithType: TicketCustomersRows
    fullName: SuperOffice.CRM.Rows.TicketCustomersRows
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync
  isExternal: true
  name: GetTicketStatusRecordDataAsync
  nameWithType: TicketHelper.GetTicketStatusRecordDataAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetTicketStatusRecordDataAsync
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.TicketStatusRecordData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.TicketStatusRecordData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TicketStatusRecordData>
  nameWithType: Task<TicketStatusRecordData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.TicketStatusRecordData>
  nameWithType.vb: Task(Of TicketStatusRecordData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.TicketStatusRecordData)
  name.vb: Task(Of TicketStatusRecordData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.TicketStatusRecordData
    name: TicketStatusRecordData
    nameWithType: TicketStatusRecordData
    fullName: SuperOffice.CRM.Rows.TicketStatusRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.TicketStatusRecordData
    name: TicketStatusRecordData
    nameWithType: TicketStatusRecordData
    fullName: SuperOffice.CRM.Rows.TicketStatusRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync
  isExternal: true
  name: DemandAdminPermissionsAsync
  nameWithType: TicketHelper.DemandAdminPermissionsAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.DemandAdminPermissionsAsync
- uid: SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight
  isExternal: true
  name: HasUpdateRight
  nameWithType: TicketHelper.HasUpdateRight
  fullName: SuperOffice.CRM.Ticket.TicketHelper.HasUpdateRight
- uid: SuperOffice.CRM.Ticket.TicketData
  commentId: T:SuperOffice.CRM.Ticket.TicketData
  parent: SuperOffice.CRM.Ticket
  isExternal: true
  name: TicketData
  nameWithType: TicketData
  fullName: SuperOffice.CRM.Ticket.TicketData
- uid: SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync
  isExternal: true
  name: GetMailInFilterAddressAsync
  nameWithType: TicketHelper.GetMailInFilterAddressAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.GetMailInFilterAddressAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync
  isExternal: true
  name: UpdateEjMessageSearchTitleAsync
  nameWithType: TicketHelper.UpdateEjMessageSearchTitleAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.UpdateEjMessageSearchTitleAsync
- uid: SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync
  isExternal: true
  name: NotifyNewTicketAsync
  nameWithType: TicketHelper.NotifyNewTicketAsync
  fullName: SuperOffice.CRM.Ticket.TicketHelper.NotifyNewTicketAsync
- uid: SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories
  isExternal: true
  name: AddRestrictionToOwnCategories
  nameWithType: TicketHelper.AddRestrictionToOwnCategories
  fullName: SuperOffice.CRM.Ticket.TicketHelper.AddRestrictionToOwnCategories
- uid: SuperOffice.Data.SQL.Select
  commentId: T:SuperOffice.Data.SQL.Select
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Select
  nameWithType: Select
  fullName: SuperOffice.Data.SQL.Select
- uid: SuperOffice.CRM.Data.TicketTableInfo
  commentId: T:SuperOffice.CRM.Data.TicketTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: TicketTableInfo
  nameWithType: TicketTableInfo
  fullName: SuperOffice.CRM.Data.TicketTableInfo
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
