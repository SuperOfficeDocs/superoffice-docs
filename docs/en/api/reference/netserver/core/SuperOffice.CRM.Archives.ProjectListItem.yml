### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Archives.ProjectListItem
  commentId: T:SuperOffice.CRM.Archives.ProjectListItem
  id: ProjectListItem
  parent: SuperOffice.CRM.Archives
  children:
  - SuperOffice.CRM.Archives.ProjectListItem.#ctor(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName
  - SuperOffice.CRM.Archives.ProjectListItem.AssociateId
  - SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem(System.Int32)
  - SuperOffice.CRM.Archives.ProjectListItem.Initialize
  - SuperOffice.CRM.Archives.ProjectListItem.IsPublished
  - SuperOffice.CRM.Archives.ProjectListItem.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectId
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectName
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectType
  - SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId
  - SuperOffice.CRM.Archives.ProjectListItem.PublishFrom
  - SuperOffice.CRM.Archives.ProjectListItem.PublishTo
  - SuperOffice.CRM.Archives.ProjectListItem.Text
  - SuperOffice.CRM.Archives.ProjectListItem.TextId
  - SuperOffice.CRM.Archives.ProjectListItem.Updated
  - SuperOffice.CRM.Archives.ProjectListItem.Url
  - SuperOffice.CRM.Archives.ProjectListItem.UrlName
  langs:
  - csharp
  - vb
  name: ProjectListItem
  nameWithType: ProjectListItem
  fullName: SuperOffice.CRM.Archives.ProjectListItem
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nPersonListItem contains the attributes for the person list item used in PersonList.\n"
  syntax:
    content: 'public sealed class ProjectListItem : ListItemBase<ProjectList.ProjectListQuery>'
    content.vb: >-
      Public NotInheritable Class ProjectListItem
          Inherits ListItemBase(Of ProjectList.ProjectListQuery)
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  inheritedMembers:
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,{T}@,System.String)
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.TableRight
  - SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.FieldProperties
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Archives.ProjectListItem.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Archives.ProjectListItem.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Archives.ProjectListItem.#ctor(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Archives.ProjectListItem.#ctor(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  id: '#ctor(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)'
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectListItem(ProjectList.ProjectListQuery, SoDataReader)
  nameWithType: ProjectListItem.ProjectListItem(ProjectList.ProjectListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectListItem(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nDefault constructor\n"
  syntax:
    content: public ProjectListItem(ProjectList.ProjectListQuery query, SoDataReader reader)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
    content.vb: Public Sub New(query As ProjectList.ProjectListQuery, reader As SoDataReader)
  overload: SuperOffice.CRM.Archives.ProjectListItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem(System.Int32)
  id: GetProjectListItem(System.Int32)
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: GetProjectListItem(Int32)
  nameWithType: ProjectListItem.GetProjectListItem(Int32)
  fullName: SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public static ProjectListItem GetProjectListItem(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Archives.ProjectListItem
    content.vb: Public Shared Function GetProjectListItem(projectId As Integer) As ProjectListItem
  overload: SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Archives.ProjectListItem.Initialize
  commentId: M:SuperOffice.CRM.Archives.ProjectListItem.Initialize
  id: Initialize
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: ProjectListItem.Initialize()
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Initialize()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nInitializes all class-members.\n"
  syntax:
    content: protected override void Initialize()
    content.vb: Protected Overrides Sub Initialize
  overridden: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.Initialize
  overload: SuperOffice.CRM.Archives.ProjectListItem.Initialize*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.ProjectListItem.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Archives.ProjectListItem.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  id: Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: Load(ProjectList.ProjectListQuery, SoDataReader)
  nameWithType: ProjectListItem.Load(ProjectList.ProjectListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nResponsible for reading the current row in the data reader and insert the value in the right part ob the object.\n"
  syntax:
    content: protected override void Load(ProjectList.ProjectListQuery query, SoDataReader reader)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader contains the items data.
    content.vb: Protected Overrides Sub Load(query As ProjectList.ProjectListQuery, reader As SoDataReader)
  overridden: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  overload: SuperOffice.CRM.Archives.ProjectListItem.Load*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectId
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectId
  id: ProjectId
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: ProjectListItem.ProjectId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public int ProjectId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ProjectId As Integer
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectName
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectName
  id: ProjectName
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectName
  nameWithType: ProjectListItem.ProjectName
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string ProjectName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectName As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectType
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectType
  id: ProjectType
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectType
  nameWithType: ProjectListItem.ProjectType
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string ProjectType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectType As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId
  id: ProjectTypeId
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectTypeId
  nameWithType: ProjectListItem.ProjectTypeId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public int ProjectTypeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ProjectTypeId As Integer
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus
  id: ProjectStatus
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectStatus
  nameWithType: ProjectListItem.ProjectStatus
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string ProjectStatus { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectStatus As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId
  id: ProjectStatusId
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectStatusId
  nameWithType: ProjectListItem.ProjectStatusId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public int ProjectStatusId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ProjectStatusId As Integer
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.Url
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.Url
  id: Url
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: ProjectListItem.Url
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Url
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Url As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.Url*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.UrlName
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.UrlName
  id: UrlName
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: UrlName
  nameWithType: ProjectListItem.UrlName
  fullName: SuperOffice.CRM.Archives.ProjectListItem.UrlName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string UrlName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UrlName As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.UrlName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName
  id: AssociateFullName
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: AssociateFullName
  nameWithType: ProjectListItem.AssociateFullName
  fullName: SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string AssociateFullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AssociateFullName As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.AssociateId
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: ProjectListItem.AssociateId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.AssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public int AssociateId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AssociateId As Integer
  overload: SuperOffice.CRM.Archives.ProjectListItem.AssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.Text
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.Text
  id: Text
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ProjectListItem.Text
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Text
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string Text { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Text As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.Text*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.TextId
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.TextId
  id: TextId
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: TextId
  nameWithType: ProjectListItem.TextId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.TextId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public int TextId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TextId As Integer
  overload: SuperOffice.CRM.Archives.ProjectListItem.TextId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.Updated
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.Updated
  id: Updated
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: ProjectListItem.Updated
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public DateTime Updated { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Updated As Date
  overload: SuperOffice.CRM.Archives.ProjectListItem.Updated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.PublishTo
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.PublishTo
  id: PublishTo
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: PublishTo
  nameWithType: ProjectListItem.PublishTo
  fullName: SuperOffice.CRM.Archives.ProjectListItem.PublishTo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public DateTime PublishTo { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property PublishTo As Date
  overload: SuperOffice.CRM.Archives.ProjectListItem.PublishTo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.PublishFrom
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.PublishFrom
  id: PublishFrom
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: PublishFrom
  nameWithType: ProjectListItem.PublishFrom
  fullName: SuperOffice.CRM.Archives.ProjectListItem.PublishFrom
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public DateTime PublishFrom { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property PublishFrom As Date
  overload: SuperOffice.CRM.Archives.ProjectListItem.PublishFrom*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.IsPublished
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.IsPublished
  id: IsPublished
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: IsPublished
  nameWithType: ProjectListItem.IsPublished
  fullName: SuperOffice.CRM.Archives.ProjectListItem.IsPublished
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public bool IsPublished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPublished As Boolean
  overload: SuperOffice.CRM.Archives.ProjectListItem.IsPublished*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber
  commentId: P:SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber
  id: ProjectNumber
  parent: SuperOffice.CRM.Archives.ProjectListItem
  langs:
  - csharp
  - vb
  name: ProjectNumber
  nameWithType: ProjectListItem.ProjectNumber
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  syntax:
    content: public string ProjectNumber { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProjectNumber As String
  overload: SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Archives
  commentId: N:SuperOffice.CRM.Archives
  isExternal: true
  name: SuperOffice.CRM.Archives
  nameWithType: SuperOffice.CRM.Archives
  fullName: SuperOffice.CRM.Archives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  commentId: T:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  parent: SuperOffice.CRM.Lists
  definition: SuperOffice.CRM.Lists.ListItemBase`1
  name: ListItemBase<ProjectList.ProjectListQuery>
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery)
  name.vb: ListItemBase(Of ProjectList.ProjectListQuery)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  name: AddFieldProperty(String, FieldProperty)
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AddFieldProperty(String, FieldProperty)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).AddFieldProperty(String, FieldProperty)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  name: HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  name: AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  name: AssignFromReader(SoDataReader, FieldInfo, String, String)
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,{T}@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  name: AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AssignFromReader<T>(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AssignFromReader(Of T)(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  name.vb: AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader<T>
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.AssignFromReader<T>
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.AssignFromReader<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader(Of T)
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).AssignFromReader(Of T)
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).AssignFromReader(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.TableRight
  commentId: P:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.TableRight
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.TableRight
  name: TableRight
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.TableRight
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.TableRight
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).TableRight
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).TableRight
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.FieldProperties
  commentId: P:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.FieldProperties
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.FieldProperties
  name: FieldProperties
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.FieldProperties
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.FieldProperties
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).FieldProperties
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).FieldProperties
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.ProjectListItem.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ProjectListItem, To>()
  nameWithType: EnumUtil.MapEnums<ProjectListItem, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.ProjectListItem, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ProjectListItem, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.ProjectListItem, To)()
  name.vb: MapEnums(Of ProjectListItem, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ProjectListItem, To>
    nameWithType: EnumUtil.MapEnums<ProjectListItem, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.ProjectListItem, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ProjectListItem, To)
    nameWithType: EnumUtil.MapEnums(Of ProjectListItem, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.ProjectListItem, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.ProjectListItem.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ProjectListItem, To>()
  nameWithType: Converters.MapEnums<ProjectListItem, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.ProjectListItem, To>()
  nameWithType.vb: Converters.MapEnums(Of ProjectListItem, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.ProjectListItem, To)()
  name.vb: MapEnums(Of ProjectListItem, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ProjectListItem, To>
    nameWithType: Converters.MapEnums<ProjectListItem, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.ProjectListItem, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ProjectListItem, To)
    nameWithType: Converters.MapEnums(Of ProjectListItem, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.ProjectListItem, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ListItemBase`1
  commentId: T:SuperOffice.CRM.Lists.ListItemBase`1
  isExternal: true
  name: ListItemBase<TListSelect>
  nameWithType: ListItemBase<TListSelect>
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>
  nameWithType.vb: ListItemBase(Of TListSelect)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect)
  name.vb: ListItemBase(Of TListSelect)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1
    name: ListItemBase
    nameWithType: ListItemBase
    fullName: SuperOffice.CRM.Lists.ListItemBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
  isExternal: true
  name: AddFieldProperty(String, FieldProperty)
  nameWithType: ListItemBase<TListSelect>.AddFieldProperty(String, FieldProperty)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  nameWithType.vb: ListItemBase(Of TListSelect).AddFieldProperty(String, FieldProperty)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AddFieldProperty(System.String, SuperOffice.CRM.Security.FieldProperty)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase<TListSelect>.AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AddFieldProperty(System.String,SuperOffice.CRM.Security.FieldProperty)
    name: AddFieldProperty
    nameWithType: ListItemBase(Of TListSelect).AddFieldProperty
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AddFieldProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.FieldProperty
    name: FieldProperty
    nameWithType: FieldProperty
    fullName: SuperOffice.CRM.Security.FieldProperty
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
  isExternal: true
  name: HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  nameWithType: ListItemBase<TListSelect>.HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  nameWithType.vb: ListItemBase(Of TListSelect).HandleFieldRights(String, SentryCollection, FieldInfo, Type, EFieldRight, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).HandleFieldRights(System.String, SuperOffice.CRM.Security.SentryCollection, SuperOffice.Data.SQL.FieldInfo, System.Type, SuperOffice.Data.EFieldRight, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase<TListSelect>.HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.HandleFieldRights(System.String,SuperOffice.CRM.Security.SentryCollection,SuperOffice.Data.SQL.FieldInfo,System.Type,SuperOffice.Data.EFieldRight,System.Boolean)
    name: HandleFieldRights
    nameWithType: ListItemBase(Of TListSelect).HandleFieldRights
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).HandleFieldRights
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Security.SentryCollection
    name: SentryCollection
    nameWithType: SentryCollection
    fullName: SuperOffice.CRM.Security.SentryCollection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
  isExternal: true
  name: AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  nameWithType: ListItemBase<TListSelect>.AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  nameWithType.vb: ListItemBase(Of TListSelect).AssignFromReader(SoDataReader, FieldInfo, Int32, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.Int32, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<TListSelect>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.Int32@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of TListSelect).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
  isExternal: true
  name: AssignFromReader(SoDataReader, FieldInfo, String, String)
  nameWithType: ListItemBase<TListSelect>.AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  nameWithType.vb: ListItemBase(Of TListSelect).AssignFromReader(SoDataReader, FieldInfo, String, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, System.String, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase<TListSelect>.AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,System.String@,System.String)
    name: AssignFromReader
    nameWithType: ListItemBase(Of TListSelect).AssignFromReader
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
  isExternal: true
  name: AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  nameWithType: ListItemBase<TListSelect>.AssignFromReader<T>(SoDataReader, FieldInfo, T, String)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader<T>(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  nameWithType.vb: ListItemBase(Of TListSelect).AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(Of T)(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.FieldInfo, T, System.String)
  name.vb: AssignFromReader(Of T)(SoDataReader, FieldInfo, T, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader<T>
    nameWithType: ListItemBase<TListSelect>.AssignFromReader<T>
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.AssignFromReader<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.AssignFromReader``1(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.FieldInfo,``0@,System.String)
    name: AssignFromReader(Of T)
    nameWithType: ListItemBase(Of TListSelect).AssignFromReader(Of T)
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).AssignFromReader(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase`1.TableRight
  commentId: P:SuperOffice.CRM.Lists.ListItemBase`1.TableRight
  isExternal: true
  name: TableRight
  nameWithType: ListItemBase<TListSelect>.TableRight
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.TableRight
  nameWithType.vb: ListItemBase(Of TListSelect).TableRight
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).TableRight
- uid: SuperOffice.CRM.Lists.ListItemBase`1.FieldProperties
  commentId: P:SuperOffice.CRM.Lists.ListItemBase`1.FieldProperties
  isExternal: true
  name: FieldProperties
  nameWithType: ListItemBase<TListSelect>.FieldProperties
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.FieldProperties
  nameWithType.vb: ListItemBase(Of TListSelect).FieldProperties
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).FieldProperties
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Archives.ProjectListItem.#ctor*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.#ctor
  isExternal: true
  name: ProjectListItem
  nameWithType: ProjectListItem.ProjectListItem
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectListItem
- uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
  commentId: T:SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: ProjectList.ProjectListQuery
  nameWithType: ProjectList.ProjectListQuery
  fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem
  isExternal: true
  name: GetProjectListItem
  nameWithType: ProjectListItem.GetProjectListItem
  fullName: SuperOffice.CRM.Archives.ProjectListItem.GetProjectListItem
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Archives.ProjectListItem
  commentId: T:SuperOffice.CRM.Archives.ProjectListItem
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: ProjectListItem
  nameWithType: ProjectListItem
  fullName: SuperOffice.CRM.Archives.ProjectListItem
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.Initialize
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.Initialize
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
  name: Initialize()
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.Initialize()
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.Initialize()
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).Initialize()
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).Initialize()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.ProjectListItem.Initialize*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.Initialize
  isExternal: true
  name: Initialize
  nameWithType: ProjectListItem.Initialize
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Initialize
- uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.Initialize
  isExternal: true
  name: Initialize()
  nameWithType: ListItemBase<TListSelect>.Initialize()
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Initialize()
  nameWithType.vb: ListItemBase(Of TListSelect).Initialize()
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Initialize()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase<TListSelect>.Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Initialize
    name: Initialize
    nameWithType: ListItemBase(Of TListSelect).Initialize
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Initialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Lists.ListItemBase{SuperOffice.CRM.Archives.ProjectList.ProjectListQuery}
  definition: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
  name: Load(ProjectList.ProjectListQuery, SoDataReader)
  nameWithType: ListItemBase<ProjectList.ProjectListQuery>.Load(ProjectList.ProjectListQuery, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListItemBase(Of ProjectList.ProjectListQuery).Load(ProjectList.ProjectListQuery, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).Load(SuperOffice.CRM.Archives.ProjectList.ProjectListQuery, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase<ProjectList.ProjectListQuery>.Load
    fullName: SuperOffice.CRM.Lists.ListItemBase<SuperOffice.CRM.Archives.ProjectList.ProjectListQuery>.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase(Of ProjectList.ProjectListQuery).Load
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of SuperOffice.CRM.Archives.ProjectList.ProjectListQuery).Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    name: ProjectList.ProjectListQuery
    nameWithType: ProjectList.ProjectListQuery
    fullName: SuperOffice.CRM.Archives.ProjectList.ProjectListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.ProjectListItem.Load*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.Load
  isExternal: true
  name: Load
  nameWithType: ProjectListItem.Load
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Load
- uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
  isExternal: true
  name: Load(TListSelect, SoDataReader)
  nameWithType: ListItemBase<TListSelect>.Load(TListSelect, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Load(TListSelect, SuperOffice.Data.SoDataReader)
  nameWithType.vb: ListItemBase(Of TListSelect).Load(TListSelect, SoDataReader)
  fullName.vb: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Load(TListSelect, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase<TListSelect>.Load
    fullName: SuperOffice.CRM.Lists.ListItemBase<TListSelect>.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListItemBase`1.Load(`0,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: ListItemBase(Of TListSelect).Load
    fullName: SuperOffice.CRM.Lists.ListItemBase(Of TListSelect).Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectId*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectId
  isExternal: true
  name: ProjectId
  nameWithType: ProjectListItem.ProjectId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectId
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectName*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectName
  isExternal: true
  name: ProjectName
  nameWithType: ProjectListItem.ProjectName
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectType*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectType
  isExternal: true
  name: ProjectType
  nameWithType: ProjectListItem.ProjectType
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectType
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId
  isExternal: true
  name: ProjectTypeId
  nameWithType: ProjectListItem.ProjectTypeId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectTypeId
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus
  isExternal: true
  name: ProjectStatus
  nameWithType: ProjectListItem.ProjectStatus
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatus
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId
  isExternal: true
  name: ProjectStatusId
  nameWithType: ProjectListItem.ProjectStatusId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectStatusId
- uid: SuperOffice.CRM.Archives.ProjectListItem.Url*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.Url
  isExternal: true
  name: Url
  nameWithType: ProjectListItem.Url
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Url
- uid: SuperOffice.CRM.Archives.ProjectListItem.UrlName*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.UrlName
  isExternal: true
  name: UrlName
  nameWithType: ProjectListItem.UrlName
  fullName: SuperOffice.CRM.Archives.ProjectListItem.UrlName
- uid: SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName
  isExternal: true
  name: AssociateFullName
  nameWithType: ProjectListItem.AssociateFullName
  fullName: SuperOffice.CRM.Archives.ProjectListItem.AssociateFullName
- uid: SuperOffice.CRM.Archives.ProjectListItem.AssociateId*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.AssociateId
  isExternal: true
  name: AssociateId
  nameWithType: ProjectListItem.AssociateId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.AssociateId
- uid: SuperOffice.CRM.Archives.ProjectListItem.Text*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.Text
  isExternal: true
  name: Text
  nameWithType: ProjectListItem.Text
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Text
- uid: SuperOffice.CRM.Archives.ProjectListItem.TextId*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.TextId
  isExternal: true
  name: TextId
  nameWithType: ProjectListItem.TextId
  fullName: SuperOffice.CRM.Archives.ProjectListItem.TextId
- uid: SuperOffice.CRM.Archives.ProjectListItem.Updated*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.Updated
  isExternal: true
  name: Updated
  nameWithType: ProjectListItem.Updated
  fullName: SuperOffice.CRM.Archives.ProjectListItem.Updated
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Archives.ProjectListItem.PublishTo*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.PublishTo
  isExternal: true
  name: PublishTo
  nameWithType: ProjectListItem.PublishTo
  fullName: SuperOffice.CRM.Archives.ProjectListItem.PublishTo
- uid: SuperOffice.CRM.Archives.ProjectListItem.PublishFrom*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.PublishFrom
  isExternal: true
  name: PublishFrom
  nameWithType: ProjectListItem.PublishFrom
  fullName: SuperOffice.CRM.Archives.ProjectListItem.PublishFrom
- uid: SuperOffice.CRM.Archives.ProjectListItem.IsPublished*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.IsPublished
  isExternal: true
  name: IsPublished
  nameWithType: ProjectListItem.IsPublished
  fullName: SuperOffice.CRM.Archives.ProjectListItem.IsPublished
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber*
  commentId: Overload:SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber
  isExternal: true
  name: ProjectNumber
  nameWithType: ProjectListItem.ProjectNumber
  fullName: SuperOffice.CRM.Archives.ProjectListItem.ProjectNumber
