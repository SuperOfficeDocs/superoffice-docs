### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver
  commentId: T:SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver
  id: IClaimsPrincipalJwtSigningCredentialsResolver
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials
  langs:
  - csharp
  - vb
  name: IClaimsPrincipalJwtSigningCredentialsResolver
  nameWithType: IClaimsPrincipalJwtSigningCredentialsResolver
  fullName: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public interface IClaimsPrincipalJwtSigningCredentialsResolver
    content.vb: Public Interface IClaimsPrincipalJwtSigningCredentialsResolver
  extensionMethods:
  - SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials
  commentId: M:SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials
  id: GetSigningCredentials
  parent: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver
  langs:
  - csharp
  - vb
  name: GetSigningCredentials()
  nameWithType: IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials()
  fullName: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: SigningCredentials GetSigningCredentials()
    return:
      type: Microsoft.IdentityModel.Tokens.SigningCredentials
    content.vb: Function GetSigningCredentials As SigningCredentials
  overload: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials*
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>()
  nameWithType: EnumUtil.MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To)()
  name.vb: MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>
    nameWithType: EnumUtil.MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)
    nameWithType: EnumUtil.MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>()
  nameWithType: Converters.MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To>()
  nameWithType.vb: Converters.MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To)()
  name.vb: MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>
    nameWithType: Converters.MapEnums<IClaimsPrincipalJwtSigningCredentialsResolver, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)
    nameWithType: Converters.MapEnums(Of IClaimsPrincipalJwtSigningCredentialsResolver, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials*
  commentId: Overload:SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials
  isExternal: true
  name: GetSigningCredentials
  nameWithType: IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials
  fullName: SuperOffice.Security.Principal.IClaimsPrincipalJwtSigningCredentialsResolver.GetSigningCredentials
- uid: Microsoft.IdentityModel.Tokens.SigningCredentials
  commentId: '!:Microsoft.IdentityModel.Tokens.SigningCredentials'
  isExternal: true
  name: SigningCredentials
  nameWithType: SigningCredentials
  fullName: Microsoft.IdentityModel.Tokens.SigningCredentials
