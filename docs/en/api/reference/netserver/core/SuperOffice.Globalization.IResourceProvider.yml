### YamlMime:ManagedReference
items:
- uid: SuperOffice.Globalization.IResourceProvider
  commentId: T:SuperOffice.Globalization.IResourceProvider
  id: IResourceProvider
  parent: SuperOffice.Globalization
  children:
  - SuperOffice.Globalization.IResourceProvider.CanInitialize
  - SuperOffice.Globalization.IResourceProvider.GetResource(System.String)
  - SuperOffice.Globalization.IResourceProvider.GetResource(System.String,System.String)
  - SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages
  - SuperOffice.Globalization.IResourceProvider.Initialize
  langs:
  - csharp
  - vb
  name: IResourceProvider
  nameWithType: IResourceProvider
  fullName: SuperOffice.Globalization.IResourceProvider
  type: Interface
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Globalization
  summary: "\nInterface for resource provider classes\nWhen defined in the Client section of the config file, classes of this type will be loaded as providers for text resources\n"
  syntax:
    content: 'public interface IResourceProvider : IPlugin'
    content.vb: >-
      Public Interface IResourceProvider
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Globalization.IResourceProvider.EnumUtil.MapEnums``2
  - SuperOffice.Globalization.IResourceProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Globalization.IResourceProvider.Initialize
  commentId: M:SuperOffice.Globalization.IResourceProvider.Initialize
  id: Initialize
  parent: SuperOffice.Globalization.IResourceProvider
  langs:
  - csharp
  - vb
  name: Initialize()
  nameWithType: IResourceProvider.Initialize()
  fullName: SuperOffice.Globalization.IResourceProvider.Initialize()
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Globalization
  summary: "\nInitializes the provider.\nTo improve performance frequently used data should be loaded into memory here.\n"
  remarks: "\nImplementers MUST use the Thread.CurrentThread.CurrentUICulture to determine the culture they\nare currently servicing. In a multi-threaded international world, there is no reason to expect\nthat two adjacent threads will have the same culture. Static variables implementing\nany concept that sounds like &apos;current culture&apos; should excite the deepest suspicion.\n"
  syntax:
    content: void Initialize()
    content.vb: Sub Initialize
  overload: SuperOffice.Globalization.IResourceProvider.Initialize*
- uid: SuperOffice.Globalization.IResourceProvider.CanInitialize
  commentId: M:SuperOffice.Globalization.IResourceProvider.CanInitialize
  id: CanInitialize
  parent: SuperOffice.Globalization.IResourceProvider
  langs:
  - csharp
  - vb
  name: CanInitialize()
  nameWithType: IResourceProvider.CanInitialize()
  fullName: SuperOffice.Globalization.IResourceProvider.CanInitialize()
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Globalization
  summary: "\nCheck if all requirements for initialization have been met. \n"
  remarks: "\nFor instance, if the provider needs database access, then it should make a fast check inside this\nmethod to verify that a valid session is running. \n<p></p>\nWhen this method returns true, <xref href=\"SuperOffice.Globalization.IResourceProvider.Initialize\" data-throw-if-not-resolved=\"false\"></xref> will be called <strong>once</strong>. If this\nmethod returns false, then it will be called repeatedly. High performance in this implementation\nis essential.\n"
  syntax:
    content: bool CanInitialize()
    return:
      type: System.Boolean
      description: true if a subsequent call to Initialized will succeed
    content.vb: Function CanInitialize As Boolean
  overload: SuperOffice.Globalization.IResourceProvider.CanInitialize*
- uid: SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages
  commentId: M:SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages
  id: GetSupportedLanguages
  parent: SuperOffice.Globalization.IResourceProvider
  langs:
  - csharp
  - vb
  name: GetSupportedLanguages()
  nameWithType: IResourceProvider.GetSupportedLanguages()
  fullName: SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages()
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Globalization
  summary: "\nReturn an array of cultures that this provider has resources for. This method is called once, after Initialize.\n"
  syntax:
    content: CultureInfo[] GetSupportedLanguages()
    return:
      type: System.Globalization.CultureInfo[]
    content.vb: Function GetSupportedLanguages As CultureInfo()
  overload: SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages*
- uid: SuperOffice.Globalization.IResourceProvider.GetResource(System.String)
  commentId: M:SuperOffice.Globalization.IResourceProvider.GetResource(System.String)
  id: GetResource(System.String)
  parent: SuperOffice.Globalization.IResourceProvider
  langs:
  - csharp
  - vb
  name: GetResource(String)
  nameWithType: IResourceProvider.GetResource(String)
  fullName: SuperOffice.Globalization.IResourceProvider.GetResource(System.String)
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Globalization
  summary: "\nReturns a string from this provider in the current culture\n"
  syntax:
    content: string GetResource(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the resource/resource symbol
    return:
      type: System.String
      description: The resource string, or null if not found
    content.vb: Function GetResource(name As String) As String
  overload: SuperOffice.Globalization.IResourceProvider.GetResource*
- uid: SuperOffice.Globalization.IResourceProvider.GetResource(System.String,System.String)
  commentId: M:SuperOffice.Globalization.IResourceProvider.GetResource(System.String,System.String)
  id: GetResource(System.String,System.String)
  parent: SuperOffice.Globalization.IResourceProvider
  langs:
  - csharp
  - vb
  name: GetResource(String, String)
  nameWithType: IResourceProvider.GetResource(String, String)
  fullName: SuperOffice.Globalization.IResourceProvider.GetResource(System.String, System.String)
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Globalization
  summary: "\nReturns a string from this provider in the specified culture\n"
  syntax:
    content: string GetResource(string name, string cultureName)
    parameters:
    - id: name
      type: System.String
      description: The name of the resource/resource symbol
    - id: cultureName
      type: System.String
      description: The name of the culture in the form en-US, nb-NO
    return:
      type: System.String
      description: The resource string, or null if not found
    content.vb: Function GetResource(name As String, cultureName As String) As String
  overload: SuperOffice.Globalization.IResourceProvider.GetResource*
references:
- uid: SuperOffice.Globalization
  commentId: N:SuperOffice.Globalization
  isExternal: true
  name: SuperOffice.Globalization
  nameWithType: SuperOffice.Globalization
  fullName: SuperOffice.Globalization
- uid: SuperOffice.Globalization.IResourceProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IResourceProvider, To>()
  nameWithType: EnumUtil.MapEnums<IResourceProvider, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Globalization.IResourceProvider, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IResourceProvider, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Globalization.IResourceProvider, To)()
  name.vb: MapEnums(Of IResourceProvider, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IResourceProvider, To>
    nameWithType: EnumUtil.MapEnums<IResourceProvider, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Globalization.IResourceProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IResourceProvider, To)
    nameWithType: EnumUtil.MapEnums(Of IResourceProvider, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Globalization.IResourceProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Globalization.IResourceProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IResourceProvider, To>()
  nameWithType: Converters.MapEnums<IResourceProvider, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Globalization.IResourceProvider, To>()
  nameWithType.vb: Converters.MapEnums(Of IResourceProvider, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Globalization.IResourceProvider, To)()
  name.vb: MapEnums(Of IResourceProvider, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IResourceProvider, To>
    nameWithType: Converters.MapEnums<IResourceProvider, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Globalization.IResourceProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IResourceProvider, To)
    nameWithType: Converters.MapEnums(Of IResourceProvider, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Globalization.IResourceProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Globalization.IResourceProvider.Initialize*
  commentId: Overload:SuperOffice.Globalization.IResourceProvider.Initialize
  isExternal: true
  name: Initialize
  nameWithType: IResourceProvider.Initialize
  fullName: SuperOffice.Globalization.IResourceProvider.Initialize
- uid: SuperOffice.Globalization.IResourceProvider.CanInitialize*
  commentId: Overload:SuperOffice.Globalization.IResourceProvider.CanInitialize
  isExternal: true
  name: CanInitialize
  nameWithType: IResourceProvider.CanInitialize
  fullName: SuperOffice.Globalization.IResourceProvider.CanInitialize
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages*
  commentId: Overload:SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages
  isExternal: true
  name: GetSupportedLanguages
  nameWithType: IResourceProvider.GetSupportedLanguages
  fullName: SuperOffice.Globalization.IResourceProvider.GetSupportedLanguages
- uid: System.Globalization.CultureInfo[]
  isExternal: true
  name: CultureInfo[]
  nameWithType: CultureInfo[]
  fullName: System.Globalization.CultureInfo[]
  nameWithType.vb: CultureInfo()
  fullName.vb: System.Globalization.CultureInfo()
  name.vb: CultureInfo()
  spec.csharp:
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    nameWithType: CultureInfo
    fullName: System.Globalization.CultureInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Globalization.IResourceProvider.GetResource*
  commentId: Overload:SuperOffice.Globalization.IResourceProvider.GetResource
  isExternal: true
  name: GetResource
  nameWithType: IResourceProvider.GetResource
  fullName: SuperOffice.Globalization.IResourceProvider.GetResource
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
