### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  id: RegistryRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo})
  - SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo})
  - SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo},System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.RegistryRecordData,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData},System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.RegistryRow)
  langs:
  - csharp
  - vb
  name: RegistryRecordDataExtensions
  nameWithType: RegistryRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nExtension methods to make it easy to fetch <xref href=\"SuperOffice.CRM.Rows.RegistryRecordData\" data-throw-if-not-resolved=\"false\"></xref> objects from the database,\nusing the <see cref=\"!:TargetedSelect\"></see> infrastructure\n"
  syntax:
    content: 'public static class RegistryRecordDataExtensions : Object'
    content.vb: >-
      Public Module RegistryRecordDataExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo},System.Threading.CancellationToken)
  id: FromSelectAsync(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromSelectAsync(TargetedSelect<RegistryTableInfo>, CancellationToken)
  nameWithType: RegistryRecordDataExtensions.FromSelectAsync(TargetedSelect<RegistryTableInfo>, CancellationToken)
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync(SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.RegistryTableInfo>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedSelect&lt;RegistryTableInfo>, execute it and return an IEnumerable&lt;RegistryRecordData> with the results\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                var result = s.FromSelect();</code></pre>
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public static IAsyncEnumerable<RegistryRecordData> FromSelectAsync(this TargetedSelect<RegistryTableInfo> select, CancellationToken cancellationToken = null)
    parameters:
    - id: select
      type: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      <ExtensionAttribute>

      Public Shared Function FromSelectAsync(select As TargetedSelect(Of RegistryTableInfo), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of RegistryRecordData)
  overload: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  nameWithType.vb: RegistryRecordDataExtensions.FromSelectAsync(TargetedSelect(Of RegistryTableInfo), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync(SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.RegistryTableInfo), System.Threading.CancellationToken)
  name.vb: FromSelectAsync(TargetedSelect(Of RegistryTableInfo), CancellationToken)
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo})
  commentId: M:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo})
  id: FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromRecord(TargetedDataRecord<RegistryTableInfo>)
  nameWithType: RegistryRecordDataExtensions.FromRecord(TargetedDataRecord<RegistryTableInfo>)
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.RegistryTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedDataRecord&lt;RegistryTableInfo>, create and populate a <xref href=\"SuperOffice.CRM.Rows.RegistryRecordData\" data-throw-if-not-resolved=\"false\"></xref> POCO object\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                /* add joins, return fields etc. as you wish */
                s.ReturnFields.Add(s.Table.All);
                var result = s.Records().Select(r => new { RegistryItem = r.FromRecord(), /* fetch other fields here */ });</code></pre>
  syntax:
    content: public static RegistryRecordData FromRecord(this TargetedDataRecord<RegistryTableInfo> record)
    parameters:
    - id: record
      type: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo}
    return:
      type: SuperOffice.CRM.Rows.RegistryRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromRecord(record As TargetedDataRecord(Of RegistryTableInfo)) As RegistryRecordData
  overload: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord*
  nameWithType.vb: RegistryRecordDataExtensions.FromRecord(TargetedDataRecord(Of RegistryTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.RegistryTableInfo))
  name.vb: FromRecord(TargetedDataRecord(Of RegistryTableInfo))
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.RegistryRecordData,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.RegistryRecordData,System.Threading.CancellationToken)
  id: ToInsertAsync(SuperOffice.CRM.Rows.RegistryRecordData,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInsertAsync(RegistryRecordData, CancellationToken)
  nameWithType: RegistryRecordDataExtensions.ToInsertAsync(RegistryRecordData, CancellationToken)
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.RegistryRecordData, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static Task<Insert> ToInsertAsync(this RegistryRecordData record, CancellationToken cancellationToken = null)
    parameters:
    - id: record
      type: SuperOffice.CRM.Rows.RegistryRecordData
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Data.SQL.Insert}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInsertAsync(record As RegistryRecordData, cancellationToken As CancellationToken = Nothing) As Task(Of Insert)
  overload: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData},System.Threading.CancellationToken)
  id: ToInsertsAsync(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData},System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInsertsAsync(IEnumerable<RegistryRecordData>, CancellationToken)
  nameWithType: RegistryRecordDataExtensions.ToInsertsAsync(IEnumerable<RegistryRecordData>, CancellationToken)
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.RegistryRecordData>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static IAsyncEnumerable<Insert> ToInsertsAsync(this IEnumerable<RegistryRecordData> records, CancellationToken cancellationToken = null)
    parameters:
    - id: records
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.Data.SQL.Insert}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInsertsAsync(records As IEnumerable(Of RegistryRecordData), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of Insert)
  overload: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync*
  nameWithType.vb: RegistryRecordDataExtensions.ToInsertsAsync(IEnumerable(Of RegistryRecordData), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.RegistryRecordData), System.Threading.CancellationToken)
  name.vb: ToInsertsAsync(IEnumerable(Of RegistryRecordData), CancellationToken)
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.RegistryRow)
  commentId: M:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.RegistryRow)
  id: ToRecordData(SuperOffice.CRM.Rows.RegistryRow)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToRecordData(RegistryRow)
  nameWithType: RegistryRecordDataExtensions.ToRecordData(RegistryRow)
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.RegistryRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static RegistryRecordData ToRecordData(this RegistryRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.RegistryRow
    return:
      type: SuperOffice.CRM.Rows.RegistryRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToRecordData(row As RegistryRow) As RegistryRecordData
  overload: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo})
  commentId: M:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo})
  id: FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.RegistryRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromSelect(TargetedSelect<RegistryTableInfo>)
  nameWithType: RegistryRecordDataExtensions.FromSelect(TargetedSelect<RegistryTableInfo>)
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.RegistryTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedSelect&lt;RegistryTableInfo>, execute it and return an IEnumerable&lt;RegistryRecordData> with the results\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                var result = s.FromSelect();</code></pre>
  syntax:
    content: public static IEnumerable<RegistryRecordData> FromSelect(this TargetedSelect<RegistryTableInfo> select)
    parameters:
    - id: select
      type: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromSelect(select As TargetedSelect(Of RegistryTableInfo)) As IEnumerable(Of RegistryRecordData)
  overload: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect*
  nameWithType.vb: RegistryRecordDataExtensions.FromSelect(TargetedSelect(Of RegistryTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.RegistryTableInfo))
  name.vb: FromSelect(TargetedSelect(Of RegistryTableInfo))
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync*
  commentId: Overload:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync
  isExternal: true
  name: FromSelectAsync
  nameWithType: RegistryRecordDataExtensions.FromSelectAsync
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelectAsync
- uid: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.RegistryTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedSelect`1
  name: TargetedSelect<RegistryTableInfo>
  nameWithType: TargetedSelect<RegistryTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.RegistryTableInfo>
  nameWithType.vb: TargetedSelect(Of RegistryTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.RegistryTableInfo)
  name.vb: TargetedSelect(Of RegistryTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.RegistryTableInfo
    name: RegistryTableInfo
    nameWithType: RegistryTableInfo
    fullName: SuperOffice.CRM.Data.RegistryTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.RegistryTableInfo
    name: RegistryTableInfo
    nameWithType: RegistryTableInfo
    fullName: SuperOffice.CRM.Data.RegistryTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<RegistryRecordData>
  nameWithType: IAsyncEnumerable<RegistryRecordData>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.Rows.RegistryRecordData>
  nameWithType.vb: IAsyncEnumerable(Of RegistryRecordData)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.Rows.RegistryRecordData)
  name.vb: IAsyncEnumerable(Of RegistryRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.RegistryRecordData
    name: RegistryRecordData
    nameWithType: RegistryRecordData
    fullName: SuperOffice.CRM.Rows.RegistryRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.RegistryRecordData
    name: RegistryRecordData
    nameWithType: RegistryRecordData
    fullName: SuperOffice.CRM.Rows.RegistryRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedSelect`1
  commentId: T:SuperOffice.Data.SQL.TargetedSelect`1
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TargetedSelect<MainTableInfo>
  nameWithType: TargetedSelect<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<MainTableInfo>
  nameWithType.vb: TargetedSelect(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of MainTableInfo)
  name.vb: TargetedSelect(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: System.Collections.Generic.IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord*
  commentId: Overload:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord
  isExternal: true
  name: FromRecord
  nameWithType: RegistryRecordDataExtensions.FromRecord
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromRecord
- uid: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.RegistryTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedDataRecord`1
  name: TargetedDataRecord<RegistryTableInfo>
  nameWithType: TargetedDataRecord<RegistryTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.RegistryTableInfo>
  nameWithType.vb: TargetedDataRecord(Of RegistryTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.RegistryTableInfo)
  name.vb: TargetedDataRecord(Of RegistryTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.RegistryTableInfo
    name: RegistryTableInfo
    nameWithType: RegistryTableInfo
    fullName: SuperOffice.CRM.Data.RegistryTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.RegistryTableInfo
    name: RegistryTableInfo
    nameWithType: RegistryTableInfo
    fullName: SuperOffice.CRM.Data.RegistryTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.RegistryRecordData
  commentId: T:SuperOffice.CRM.Rows.RegistryRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RegistryRecordData
  nameWithType: RegistryRecordData
  fullName: SuperOffice.CRM.Rows.RegistryRecordData
- uid: SuperOffice.Data.SQL.TargetedDataRecord`1
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord`1
  isExternal: true
  name: TargetedDataRecord<MainTableInfo>
  nameWithType: TargetedDataRecord<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<MainTableInfo>
  nameWithType.vb: TargetedDataRecord(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of MainTableInfo)
  name.vb: TargetedDataRecord(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync*
  commentId: Overload:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync
  isExternal: true
  name: ToInsertAsync
  nameWithType: RegistryRecordDataExtensions.ToInsertAsync
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Data.SQL.Insert}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Data.SQL.Insert}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Insert>
  nameWithType: Task<Insert>
  fullName: System.Threading.Tasks.Task<SuperOffice.Data.SQL.Insert>
  nameWithType.vb: Task(Of Insert)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Data.SQL.Insert)
  name.vb: Task(Of Insert)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync*
  commentId: Overload:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync
  isExternal: true
  name: ToInsertsAsync
  nameWithType: RegistryRecordDataExtensions.ToInsertsAsync
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToInsertsAsync
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.RegistryRecordData}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<RegistryRecordData>
  nameWithType: IEnumerable<RegistryRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.RegistryRecordData>
  nameWithType.vb: IEnumerable(Of RegistryRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.RegistryRecordData)
  name.vb: IEnumerable(Of RegistryRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.RegistryRecordData
    name: RegistryRecordData
    nameWithType: RegistryRecordData
    fullName: SuperOffice.CRM.Rows.RegistryRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.RegistryRecordData
    name: RegistryRecordData
    nameWithType: RegistryRecordData
    fullName: SuperOffice.CRM.Rows.RegistryRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.Data.SQL.Insert}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.Data.SQL.Insert}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<Insert>
  nameWithType: IAsyncEnumerable<Insert>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.Data.SQL.Insert>
  nameWithType.vb: IAsyncEnumerable(Of Insert)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.Data.SQL.Insert)
  name.vb: IAsyncEnumerable(Of Insert)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData*
  commentId: Overload:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData
  isExternal: true
  name: ToRecordData
  nameWithType: RegistryRecordDataExtensions.ToRecordData
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.ToRecordData
- uid: SuperOffice.CRM.Rows.RegistryRow
  commentId: T:SuperOffice.CRM.Rows.RegistryRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RegistryRow
  nameWithType: RegistryRow
  fullName: SuperOffice.CRM.Rows.RegistryRow
- uid: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect*
  commentId: Overload:SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect
  isExternal: true
  name: FromSelect
  nameWithType: RegistryRecordDataExtensions.FromSelect
  fullName: SuperOffice.CRM.Rows.RegistryRecordDataExtensions.FromSelect
