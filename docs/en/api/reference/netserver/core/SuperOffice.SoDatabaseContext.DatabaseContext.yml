### YamlMime:ManagedReference
items:
- uid: SuperOffice.SoDatabaseContext.DatabaseContext
  commentId: T:SuperOffice.SoDatabaseContext.DatabaseContext
  id: SoDatabaseContext.DatabaseContext
  parent: SuperOffice
  children:
  - SuperOffice.SoDatabaseContext.DatabaseContext.Context
  - SuperOffice.SoDatabaseContext.DatabaseContext.Dispose
  langs:
  - csharp
  - vb
  name: SoDatabaseContext.DatabaseContext
  nameWithType: SoDatabaseContext.DatabaseContext
  fullName: SuperOffice.SoDatabaseContext.DatabaseContext
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nClass keeping track of entered and left database context.  Use <xref href=\"SuperOffice.SoDatabaseContext.EnterDatabaseContext(System.String)\" data-throw-if-not-resolved=\"false\"></xref> to enter a database context.\n"
  syntax:
    content: 'public class DatabaseContext : Object, IDisposable'
    content.vb: >-
      Public Class DatabaseContext
          Inherits Object
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  extensionMethods:
  - SuperOffice.SoDatabaseContext.DatabaseContext.EnumUtil.MapEnums``2
  - SuperOffice.SoDatabaseContext.DatabaseContext.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.SoDatabaseContext.DatabaseContext.Dispose
  commentId: M:SuperOffice.SoDatabaseContext.DatabaseContext.Dispose
  id: Dispose
  parent: SuperOffice.SoDatabaseContext.DatabaseContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SoDatabaseContext.DatabaseContext.Dispose()
  fullName: SuperOffice.SoDatabaseContext.DatabaseContext.Dispose()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nDispose the database context to leave the current database context.\n"
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.SoDatabaseContext.DatabaseContext.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.SoDatabaseContext.DatabaseContext.Context
  commentId: P:SuperOffice.SoDatabaseContext.DatabaseContext.Context
  id: Context
  parent: SuperOffice.SoDatabaseContext.DatabaseContext
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: SoDatabaseContext.DatabaseContext.Context
  fullName: SuperOffice.SoDatabaseContext.DatabaseContext.Context
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  syntax:
    content: public SoDatabaseContext Context { get; }
    parameters: []
    return:
      type: SuperOffice.SoDatabaseContext
    content.vb: Public ReadOnly Property Context As SoDatabaseContext
  overload: SuperOffice.SoDatabaseContext.DatabaseContext.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice
  commentId: N:SuperOffice
  isExternal: true
  name: SuperOffice
  nameWithType: SuperOffice
  fullName: SuperOffice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.SoDatabaseContext.DatabaseContext.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoDatabaseContext.DatabaseContext, To>()
  nameWithType: EnumUtil.MapEnums<SoDatabaseContext.DatabaseContext, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.SoDatabaseContext.DatabaseContext, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoDatabaseContext.DatabaseContext, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.SoDatabaseContext.DatabaseContext, To)()
  name.vb: MapEnums(Of SoDatabaseContext.DatabaseContext, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoDatabaseContext.DatabaseContext, To>
    nameWithType: EnumUtil.MapEnums<SoDatabaseContext.DatabaseContext, To>
    fullName: EnumUtil.MapEnums<SuperOffice.SoDatabaseContext.DatabaseContext, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoDatabaseContext.DatabaseContext, To)
    nameWithType: EnumUtil.MapEnums(Of SoDatabaseContext.DatabaseContext, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.SoDatabaseContext.DatabaseContext, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.SoDatabaseContext.DatabaseContext.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoDatabaseContext.DatabaseContext, To>()
  nameWithType: Converters.MapEnums<SoDatabaseContext.DatabaseContext, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.SoDatabaseContext.DatabaseContext, To>()
  nameWithType.vb: Converters.MapEnums(Of SoDatabaseContext.DatabaseContext, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.SoDatabaseContext.DatabaseContext, To)()
  name.vb: MapEnums(Of SoDatabaseContext.DatabaseContext, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoDatabaseContext.DatabaseContext, To>
    nameWithType: Converters.MapEnums<SoDatabaseContext.DatabaseContext, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.SoDatabaseContext.DatabaseContext, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoDatabaseContext.DatabaseContext, To)
    nameWithType: Converters.MapEnums(Of SoDatabaseContext.DatabaseContext, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.SoDatabaseContext.DatabaseContext, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.SoDatabaseContext.DatabaseContext.Dispose*
  commentId: Overload:SuperOffice.SoDatabaseContext.DatabaseContext.Dispose
  isExternal: true
  name: Dispose
  nameWithType: SoDatabaseContext.DatabaseContext.Dispose
  fullName: SuperOffice.SoDatabaseContext.DatabaseContext.Dispose
- uid: SuperOffice.SoDatabaseContext.DatabaseContext.Context*
  commentId: Overload:SuperOffice.SoDatabaseContext.DatabaseContext.Context
  isExternal: true
  name: Context
  nameWithType: SoDatabaseContext.DatabaseContext.Context
  fullName: SuperOffice.SoDatabaseContext.DatabaseContext.Context
- uid: SuperOffice.SoDatabaseContext
  commentId: T:SuperOffice.SoDatabaseContext
  parent: SuperOffice
  isExternal: true
  name: SoDatabaseContext
  nameWithType: SoDatabaseContext
  fullName: SuperOffice.SoDatabaseContext
