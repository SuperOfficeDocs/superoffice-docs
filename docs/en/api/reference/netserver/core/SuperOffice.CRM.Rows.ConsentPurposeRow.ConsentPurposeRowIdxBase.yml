### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  id: ConsentPurposeRow.ConsentPurposeRowIdxBase
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.#ctor
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRow
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRows
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows(SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory)
  langs:
  - csharp
  - vb
  name: ConsentPurposeRow.ConsentPurposeRowIdxBase
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAbstract base class for accessors.\n"
  syntax:
    content: 'public abstract class ConsentPurposeRowIdxBase : IdxBase<ConsentPurposeTableInfo>, ICloneable, ISentryIgnorable'
    content.vb: >-
      Public MustInherit Class ConsentPurposeRowIdxBase
          Inherits IdxBase(Of ConsentPurposeTableInfo)
          Implements ICloneable, ISentryIgnorable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSelect
  - SuperOffice.CRM.Rows.IdxBase
  - SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}
  derivedClasses:
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdx
  - SuperOffice.CRM.Rows.ConsentPurposeRows.ConsentPurposeRowsIdx
  implements:
  - System.ICloneable
  - SuperOffice.CRM.Security.ISentryIgnorable
  inheritedMembers:
  - SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}.TableInfo
  - SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
  - SuperOffice.CRM.Rows.IdxBase.UpdateRow(SuperOffice.CRM.Rows.TableRowBase)
  - SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.IdxBase.InnerOrderBy
  - SuperOffice.CRM.Rows.IdxBase.InnerGroupBy
  - SuperOffice.CRM.Rows.IdxBase.InnerJoinRestriction
  - SuperOffice.CRM.Rows.IdxBase.InnerReturnFields
  - SuperOffice.CRM.Rows.IdxBase.JoinRestriction
  - SuperOffice.CRM.Rows.IdxBase.ReturnFields
  - SuperOffice.CRM.Rows.IdxBase.IsSentryIgnored
  - SuperOffice.Data.SQL.PrivateSelect._isDistinct
  - SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  - SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
  - SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
  - SuperOffice.Data.SQL.PrivateSelect.Clone
  - SuperOffice.Data.SQL.PrivateSelect.CloneSelect
  - SuperOffice.Data.SQL.PrivateSelect.ToString
  - SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
  - SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
  - SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
  - SuperOffice.Data.SQL.PrivateSelect.InnerRestriction
  - SuperOffice.Data.SQL.PrivateSelect.IsDistinct
  - SuperOffice.Data.SQL.PrivateSelect.ForceRecompile
  - SuperOffice.Data.SQL.PrivateSelect.ForceJoinOrder
  - SuperOffice.Data.SQL.PrivateSelect.SqlType
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.#ctor
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: ConsentPurposeRowIdxBase()
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeRowIdxBase()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeRowIdxBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected ConsentPurposeRowIdxBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow
  id: ToConsentPurposeRow
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: ToConsentPurposeRow()
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOperator converting an instance of <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdx\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow\" data-throw-if-not-resolved=\"false\"></xref>.  \nThis operator performs a select against the database.\n"
  syntax:
    content: public ConsentPurposeRow ToConsentPurposeRow()
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: The result of the query against the database as a <xref href="SuperOffice.CRM.Rows.ConsentPurposeRow" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToConsentPurposeRow As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  id: ToConsentPurposeRow(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: ToConsentPurposeRow(ITableRowLoadHandler)
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOperator converting an instance of <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdx\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow\" data-throw-if-not-resolved=\"false\"></xref>.  \nThis operator performs a select against the database.\n<param name=\"handler\">Handler recieving events when the row is loaded.</param>\n"
  syntax:
    content: public ConsentPurposeRow ToConsentPurposeRow(ITableRowLoadHandler handler)
    parameters:
    - id: handler
      type: SuperOffice.CRM.Rows.ITableRowLoadHandler
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: The result of the query against the database as a <xref href="SuperOffice.CRM.Rows.ConsentPurposeRow" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToConsentPurposeRow(handler As ITableRowLoadHandler) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRow
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRow
  id: op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRow
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: Implicit(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRow)
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.Implicit(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRow)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase to SuperOffice.CRM.Rows.ConsentPurposeRow)
  type: Operator
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOperator converting an instance of <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdx\" data-throw-if-not-resolved=\"false\"></xref> to a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow\" data-throw-if-not-resolved=\"false\"></xref>.  \nThis operator performs a select against the database.\n"
  syntax:
    content: public static implicit operator ConsentPurposeRow(ConsentPurposeRow.ConsentPurposeRowIdxBase pThis)
    parameters:
    - id: pThis
      type: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
      description: The <xref href="SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdx" data-throw-if-not-resolved="false"></xref> to convert
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRow
      description: The result of the query against the database as a <xref href="SuperOffice.CRM.Rows.ConsentPurposeRow" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Widening Operator CType(pThis As ConsentPurposeRow.ConsentPurposeRowIdxBase) As ConsentPurposeRow
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit*
  nameWithType.vb: ConsentPurposeRow.ConsentPurposeRowIdxBase.Widening(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRow)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.Widening(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase to SuperOffice.CRM.Rows.ConsentPurposeRow)
  name.vb: Widening(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRow)
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows
  id: ToConsentPurposeRows
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: ToConsentPurposeRows()
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows()
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOperator converting an instance of <see cref=\"!:ConsentPurposeRowsIdx\"></see> to a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> \ncollection.  This operator performs a select against the database.\n"
  syntax:
    content: public ConsentPurposeRows ToConsentPurposeRows()
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRows
      description: The result of the query against the database as a <xref href="SuperOffice.CRM.Rows.ConsentPurposeRows" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToConsentPurposeRows As ConsentPurposeRows
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows(SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory)
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows(SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory)
  id: ToConsentPurposeRows(SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory)
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: ToConsentPurposeRows(ITableRowLoadHandlerFactory)
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows(ITableRowLoadHandlerFactory)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows(SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOperator converting an instance of <see cref=\"!:ConsentPurposeRowsIdx\"></see> to a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> \ncollection.  This operator performs a select against the database and calls back using <xref href=\"SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public ConsentPurposeRows ToConsentPurposeRows(ITableRowLoadHandlerFactory tableRowHandlerFactory)
    parameters:
    - id: tableRowHandlerFactory
      type: SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory
      description: Factory for creating <xref href="SuperOffice.CRM.Rows.ITableRowLoadHandler" data-throw-if-not-resolved="false"></xref>s.
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRows
      description: The result of the query against the database as a <xref href="SuperOffice.CRM.Rows.ConsentPurposeRows" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Function ToConsentPurposeRows(tableRowHandlerFactory As ITableRowLoadHandlerFactory) As ConsentPurposeRows
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRows
  commentId: M:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRows
  id: op_Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase)~SuperOffice.CRM.Rows.ConsentPurposeRows
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: Implicit(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRows)
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.Implicit(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRows)
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.Implicit(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase to SuperOffice.CRM.Rows.ConsentPurposeRows)
  type: Operator
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOperator converting an instance of <see cref=\"!:ConsentPurposeRowsIdx\"></see> to a <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRows\" data-throw-if-not-resolved=\"false\"></xref> \ncollection.  This operator performs a select against the database.\n"
  syntax:
    content: public static implicit operator ConsentPurposeRows(ConsentPurposeRow.ConsentPurposeRowIdxBase pThis)
    parameters:
    - id: pThis
      type: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
      description: The <see cref="!:ConsentPurposeRowsIdx"></see> to convert
    return:
      type: SuperOffice.CRM.Rows.ConsentPurposeRows
      description: The result of the query against the database as a <xref href="SuperOffice.CRM.Rows.ConsentPurposeRows" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Widening Operator CType(pThis As ConsentPurposeRow.ConsentPurposeRowIdxBase) As ConsentPurposeRows
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit*
  nameWithType.vb: ConsentPurposeRow.ConsentPurposeRowIdxBase.Widening(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRows)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.Widening(SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase to SuperOffice.CRM.Rows.ConsentPurposeRows)
  name.vb: Widening(ConsentPurposeRow.ConsentPurposeRowIdxBase to ConsentPurposeRows)
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  commentId: P:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  id: ConsentPurposeTableInfo
  parent: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  langs:
  - csharp
  - vb
  name: ConsentPurposeTableInfo
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the ConsentPurposeTableInfo for the table that the selector covers\n"
  syntax:
    content: >-
      [Obsolete("Use the inherited TableInfo property instead.", false)]

      public ConsentPurposeTableInfo ConsentPurposeTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.ConsentPurposeTableInfo
      description: "\nInstance of <xref href=\"SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo\" data-throw-if-not-resolved=\"false\"></xref>\n"
    content.vb: >-
      <Obsolete("Use the inherited TableInfo property instead.", False)>

      Public ReadOnly Property ConsentPurposeTableInfo As ConsentPurposeTableInfo
  overload: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use the inherited TableInfo property instead.
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSelect
  commentId: T:SuperOffice.Data.SQL.PrivateSelect
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSelect
  nameWithType: PrivateSelect
  fullName: SuperOffice.Data.SQL.PrivateSelect
- uid: SuperOffice.CRM.Rows.IdxBase
  commentId: T:SuperOffice.CRM.Rows.IdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: IdxBase
  nameWithType: IdxBase
  fullName: SuperOffice.CRM.Rows.IdxBase
- uid: SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}
  commentId: T:SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.IdxBase`1
  name: IdxBase<ConsentPurposeTableInfo>
  nameWithType: IdxBase<ConsentPurposeTableInfo>
  fullName: SuperOffice.CRM.Rows.IdxBase<SuperOffice.CRM.Data.ConsentPurposeTableInfo>
  nameWithType.vb: IdxBase(Of ConsentPurposeTableInfo)
  fullName.vb: SuperOffice.CRM.Rows.IdxBase(Of SuperOffice.CRM.Data.ConsentPurposeTableInfo)
  name.vb: IdxBase(Of ConsentPurposeTableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.IdxBase`1
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ConsentPurposeTableInfo
    name: ConsentPurposeTableInfo
    nameWithType: ConsentPurposeTableInfo
    fullName: SuperOffice.CRM.Data.ConsentPurposeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.IdxBase`1
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ConsentPurposeTableInfo
    name: ConsentPurposeTableInfo
    nameWithType: ConsentPurposeTableInfo
    fullName: SuperOffice.CRM.Data.ConsentPurposeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}.TableInfo
  commentId: P:SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}.TableInfo
  parent: SuperOffice.CRM.Rows.IdxBase{SuperOffice.CRM.Data.ConsentPurposeTableInfo}
  definition: SuperOffice.CRM.Rows.IdxBase`1.TableInfo
  name: TableInfo
  nameWithType: IdxBase<ConsentPurposeTableInfo>.TableInfo
  fullName: SuperOffice.CRM.Rows.IdxBase<SuperOffice.CRM.Data.ConsentPurposeTableInfo>.TableInfo
  nameWithType.vb: IdxBase(Of ConsentPurposeTableInfo).TableInfo
  fullName.vb: SuperOffice.CRM.Rows.IdxBase(Of SuperOffice.CRM.Data.ConsentPurposeTableInfo).TableInfo
- uid: SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
  commentId: M:SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: OnIndexChanged()
  nameWithType: IdxBase.OnIndexChanged()
  fullName: SuperOffice.CRM.Rows.IdxBase.OnIndexChanged()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
    name: OnIndexChanged
    nameWithType: IdxBase.OnIndexChanged
    fullName: SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
    name: OnIndexChanged
    nameWithType: IdxBase.OnIndexChanged
    fullName: SuperOffice.CRM.Rows.IdxBase.OnIndexChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.IdxBase.UpdateRow(SuperOffice.CRM.Rows.TableRowBase)
  commentId: M:SuperOffice.CRM.Rows.IdxBase.UpdateRow(SuperOffice.CRM.Rows.TableRowBase)
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: UpdateRow(TableRowBase)
  nameWithType: IdxBase.UpdateRow(TableRowBase)
  fullName: SuperOffice.CRM.Rows.IdxBase.UpdateRow(SuperOffice.CRM.Rows.TableRowBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.IdxBase.UpdateRow(SuperOffice.CRM.Rows.TableRowBase)
    name: UpdateRow
    nameWithType: IdxBase.UpdateRow
    fullName: SuperOffice.CRM.Rows.IdxBase.UpdateRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.TableRowBase
    name: TableRowBase
    nameWithType: TableRowBase
    fullName: SuperOffice.CRM.Rows.TableRowBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.IdxBase.UpdateRow(SuperOffice.CRM.Rows.TableRowBase)
    name: UpdateRow
    nameWithType: IdxBase.UpdateRow
    fullName: SuperOffice.CRM.Rows.IdxBase.UpdateRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.TableRowBase
    name: TableRowBase
    nameWithType: TableRowBase
    fullName: SuperOffice.CRM.Rows.TableRowBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: IdxBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: IdxBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: IdxBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.IdxBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: IdxBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: IdxBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: IdxBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.IdxBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.IdxBase.InnerOrderBy
  commentId: P:SuperOffice.CRM.Rows.IdxBase.InnerOrderBy
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: InnerOrderBy
  nameWithType: IdxBase.InnerOrderBy
  fullName: SuperOffice.CRM.Rows.IdxBase.InnerOrderBy
- uid: SuperOffice.CRM.Rows.IdxBase.InnerGroupBy
  commentId: P:SuperOffice.CRM.Rows.IdxBase.InnerGroupBy
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: InnerGroupBy
  nameWithType: IdxBase.InnerGroupBy
  fullName: SuperOffice.CRM.Rows.IdxBase.InnerGroupBy
- uid: SuperOffice.CRM.Rows.IdxBase.InnerJoinRestriction
  commentId: P:SuperOffice.CRM.Rows.IdxBase.InnerJoinRestriction
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: InnerJoinRestriction
  nameWithType: IdxBase.InnerJoinRestriction
  fullName: SuperOffice.CRM.Rows.IdxBase.InnerJoinRestriction
- uid: SuperOffice.CRM.Rows.IdxBase.InnerReturnFields
  commentId: P:SuperOffice.CRM.Rows.IdxBase.InnerReturnFields
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: InnerReturnFields
  nameWithType: IdxBase.InnerReturnFields
  fullName: SuperOffice.CRM.Rows.IdxBase.InnerReturnFields
- uid: SuperOffice.CRM.Rows.IdxBase.JoinRestriction
  commentId: P:SuperOffice.CRM.Rows.IdxBase.JoinRestriction
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: JoinRestriction
  nameWithType: IdxBase.JoinRestriction
  fullName: SuperOffice.CRM.Rows.IdxBase.JoinRestriction
- uid: SuperOffice.CRM.Rows.IdxBase.ReturnFields
  commentId: P:SuperOffice.CRM.Rows.IdxBase.ReturnFields
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: ReturnFields
  nameWithType: IdxBase.ReturnFields
  fullName: SuperOffice.CRM.Rows.IdxBase.ReturnFields
- uid: SuperOffice.CRM.Rows.IdxBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.IdxBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.IdxBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: IdxBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.IdxBase.IsSentryIgnored
- uid: SuperOffice.Data.SQL.PrivateSelect._isDistinct
  commentId: F:SuperOffice.Data.SQL.PrivateSelect._isDistinct
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: _isDistinct
  nameWithType: PrivateSelect._isDistinct
  fullName: SuperOffice.Data.SQL.PrivateSelect._isDistinct
- uid: SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSelect.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSelect.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSelect.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetRelations(TableInfo)
  nameWithType: PrivateSelect.GetRelations(TableInfo)
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo)
    name: GetRelations
    nameWithType: PrivateSelect.GetRelations
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetRelations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo)
    name: GetRelations
    nameWithType: PrivateSelect.GetRelations
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetRelations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetRelations(TableInfo, SoTable)
  nameWithType: PrivateSelect.GetRelations(TableInfo, SoTable)
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.Dictionary.SoTable)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
    name: GetRelations
    nameWithType: PrivateSelect.GetRelations
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetRelations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetRelations(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable)
    name: GetRelations
    nameWithType: PrivateSelect.GetRelations
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetRelations
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: IsTableOuterJoined(TableInfo)
  nameWithType: PrivateSelect.IsTableOuterJoined(TableInfo)
  fullName: SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined(SuperOffice.Data.SQL.TableInfo)
    name: IsTableOuterJoined
    nameWithType: PrivateSelect.IsTableOuterJoined
    fullName: SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined(SuperOffice.Data.SQL.TableInfo)
    name: IsTableOuterJoined
    nameWithType: PrivateSelect.IsTableOuterJoined
    fullName: SuperOffice.Data.SQL.PrivateSelect.IsTableOuterJoined
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetTablesInOrderBy()
  nameWithType: PrivateSelect.GetTablesInOrderBy()
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
    name: GetTablesInOrderBy
    nameWithType: PrivateSelect.GetTablesInOrderBy
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
    name: GetTablesInOrderBy
    nameWithType: PrivateSelect.GetTablesInOrderBy
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetTablesInOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetTablesLeadingToTable(TableInfo)
  nameWithType: PrivateSelect.GetTablesLeadingToTable(TableInfo)
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable(SuperOffice.Data.SQL.TableInfo)
    name: GetTablesLeadingToTable
    nameWithType: PrivateSelect.GetTablesLeadingToTable
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable(SuperOffice.Data.SQL.TableInfo)
    name: GetTablesLeadingToTable
    nameWithType: PrivateSelect.GetTablesLeadingToTable
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetTablesLeadingToTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: ValidateJoin()
  nameWithType: PrivateSelect.ValidateJoin()
  fullName: SuperOffice.Data.SQL.PrivateSelect.ValidateJoin()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
    name: ValidateJoin
    nameWithType: PrivateSelect.ValidateJoin
    fullName: SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
    name: ValidateJoin
    nameWithType: PrivateSelect.ValidateJoin
    fullName: SuperOffice.Data.SQL.PrivateSelect.ValidateJoin
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.Clone
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.Clone
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: Clone()
  nameWithType: PrivateSelect.Clone()
  fullName: SuperOffice.Data.SQL.PrivateSelect.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.Clone
    name: Clone
    nameWithType: PrivateSelect.Clone
    fullName: SuperOffice.Data.SQL.PrivateSelect.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.Clone
    name: Clone
    nameWithType: PrivateSelect.Clone
    fullName: SuperOffice.Data.SQL.PrivateSelect.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.CloneSelect
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.CloneSelect
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: CloneSelect()
  nameWithType: PrivateSelect.CloneSelect()
  fullName: SuperOffice.Data.SQL.PrivateSelect.CloneSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.CloneSelect
    name: CloneSelect
    nameWithType: PrivateSelect.CloneSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect.CloneSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.CloneSelect
    name: CloneSelect
    nameWithType: PrivateSelect.CloneSelect
    fullName: SuperOffice.Data.SQL.PrivateSelect.CloneSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.ToString
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.ToString
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: ToString()
  nameWithType: PrivateSelect.ToString()
  fullName: SuperOffice.Data.SQL.PrivateSelect.ToString()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.ToString
    name: ToString
    nameWithType: PrivateSelect.ToString
    fullName: SuperOffice.Data.SQL.PrivateSelect.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.ToString
    name: ToString
    nameWithType: PrivateSelect.ToString
    fullName: SuperOffice.Data.SQL.PrivateSelect.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetCachingHash()
  nameWithType: PrivateSelect.GetCachingHash()
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetCachingHash()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
    name: GetCachingHash
    nameWithType: PrivateSelect.GetCachingHash
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
    name: GetCachingHash
    nameWithType: PrivateSelect.GetCachingHash
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetCachingHash
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: GetRestrictionTables()
  nameWithType: PrivateSelect.GetRestrictionTables()
  fullName: SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
    name: GetRestrictionTables
    nameWithType: PrivateSelect.GetRestrictionTables
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
    name: GetRestrictionTables
    nameWithType: PrivateSelect.GetRestrictionTables
    fullName: SuperOffice.Data.SQL.PrivateSelect.GetRestrictionTables
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
  commentId: M:SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: CreateOrderBy()
  nameWithType: PrivateSelect.CreateOrderBy()
  fullName: SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
    name: CreateOrderBy
    nameWithType: PrivateSelect.CreateOrderBy
    fullName: SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
    name: CreateOrderBy
    nameWithType: PrivateSelect.CreateOrderBy
    fullName: SuperOffice.Data.SQL.PrivateSelect.CreateOrderBy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSelect.InnerRestriction
  commentId: P:SuperOffice.Data.SQL.PrivateSelect.InnerRestriction
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: InnerRestriction
  nameWithType: PrivateSelect.InnerRestriction
  fullName: SuperOffice.Data.SQL.PrivateSelect.InnerRestriction
- uid: SuperOffice.Data.SQL.PrivateSelect.IsDistinct
  commentId: P:SuperOffice.Data.SQL.PrivateSelect.IsDistinct
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: IsDistinct
  nameWithType: PrivateSelect.IsDistinct
  fullName: SuperOffice.Data.SQL.PrivateSelect.IsDistinct
- uid: SuperOffice.Data.SQL.PrivateSelect.ForceRecompile
  commentId: P:SuperOffice.Data.SQL.PrivateSelect.ForceRecompile
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: ForceRecompile
  nameWithType: PrivateSelect.ForceRecompile
  fullName: SuperOffice.Data.SQL.PrivateSelect.ForceRecompile
- uid: SuperOffice.Data.SQL.PrivateSelect.ForceJoinOrder
  commentId: P:SuperOffice.Data.SQL.PrivateSelect.ForceJoinOrder
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: ForceJoinOrder
  nameWithType: PrivateSelect.ForceJoinOrder
  fullName: SuperOffice.Data.SQL.PrivateSelect.ForceJoinOrder
- uid: SuperOffice.Data.SQL.PrivateSelect.SqlType
  commentId: P:SuperOffice.Data.SQL.PrivateSelect.SqlType
  parent: SuperOffice.Data.SQL.PrivateSelect
  isExternal: true
  name: SqlType
  nameWithType: PrivateSelect.SqlType
  fullName: SuperOffice.Data.SQL.PrivateSelect.SqlType
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>()
  nameWithType: EnumUtil.MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To)()
  name.vb: MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>
    nameWithType: EnumUtil.MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)
    nameWithType: EnumUtil.MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>()
  nameWithType: Converters.MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To>()
  nameWithType.vb: Converters.MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To)()
  name.vb: MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>
    nameWithType: Converters.MapEnums<ConsentPurposeRow.ConsentPurposeRowIdxBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)
    nameWithType: Converters.MapEnums(Of ConsentPurposeRow.ConsentPurposeRowIdxBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Rows.IdxBase`1
  commentId: T:SuperOffice.CRM.Rows.IdxBase`1
  isExternal: true
  name: IdxBase<TTableInfo>
  nameWithType: IdxBase<TTableInfo>
  fullName: SuperOffice.CRM.Rows.IdxBase<TTableInfo>
  nameWithType.vb: IdxBase(Of TTableInfo)
  fullName.vb: SuperOffice.CRM.Rows.IdxBase(Of TTableInfo)
  name.vb: IdxBase(Of TTableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.IdxBase`1
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TTableInfo
    nameWithType: TTableInfo
    fullName: TTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.IdxBase`1
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TTableInfo
    nameWithType: TTableInfo
    fullName: TTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: SuperOffice.CRM.Rows.IdxBase`1.TableInfo
  commentId: P:SuperOffice.CRM.Rows.IdxBase`1.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: IdxBase<TTableInfo>.TableInfo
  fullName: SuperOffice.CRM.Rows.IdxBase<TTableInfo>.TableInfo
  nameWithType.vb: IdxBase(Of TTableInfo).TableInfo
  fullName.vb: SuperOffice.CRM.Rows.IdxBase(Of TTableInfo).TableInfo
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.#ctor
  isExternal: true
  name: ConsentPurposeRowIdxBase
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeRowIdxBase
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeRowIdxBase
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow
  isExternal: true
  name: ToConsentPurposeRow
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRow
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ConsentPurposeRow
  nameWithType: ConsentPurposeRow
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow
- uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
  commentId: T:SuperOffice.CRM.Rows.ITableRowLoadHandler
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ITableRowLoadHandler
  nameWithType: ITableRowLoadHandler
  fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.op_Implicit
  isExternal: true
  name: Implicit
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.Implicit
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.Implicit
  nameWithType.vb: ConsentPurposeRow.ConsentPurposeRowIdxBase.Widening
  fullName.vb: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.Widening
  name.vb: Widening
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ConsentPurposeRow.ConsentPurposeRowIdxBase
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows
  isExternal: true
  name: ToConsentPurposeRows
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ToConsentPurposeRows
- uid: SuperOffice.CRM.Rows.ConsentPurposeRows
  commentId: T:SuperOffice.CRM.Rows.ConsentPurposeRows
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ConsentPurposeRows
  nameWithType: ConsentPurposeRows
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRows
- uid: SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory
  commentId: T:SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ITableRowLoadHandlerFactory
  nameWithType: ITableRowLoadHandlerFactory
  fullName: SuperOffice.CRM.Rows.ITableRowLoadHandlerFactory
- uid: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  isExternal: true
  name: ConsentPurposeTableInfo
  nameWithType: ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
  fullName: SuperOffice.CRM.Rows.ConsentPurposeRow.ConsentPurposeRowIdxBase.ConsentPurposeTableInfo
- uid: SuperOffice.CRM.Data.ConsentPurposeTableInfo
  commentId: T:SuperOffice.CRM.Data.ConsentPurposeTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: ConsentPurposeTableInfo
  nameWithType: ConsentPurposeTableInfo
  fullName: SuperOffice.CRM.Data.ConsentPurposeTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
