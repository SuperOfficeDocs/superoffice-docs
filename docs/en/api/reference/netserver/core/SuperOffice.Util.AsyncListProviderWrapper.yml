### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.AsyncListProviderWrapper
  commentId: T:SuperOffice.Util.AsyncListProviderWrapper
  id: AsyncListProviderWrapper
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.AsyncListProviderWrapper.#ctor(System.String,System.String,System.String)
  - SuperOffice.Util.AsyncListProviderWrapper.Elapsed
  - SuperOffice.Util.AsyncListProviderWrapper.ExtraInfoForProvider
  - SuperOffice.Util.AsyncListProviderWrapper.GetListItems
  - SuperOffice.Util.AsyncListProviderWrapper.IsDone
  - SuperOffice.Util.AsyncListProviderWrapper.ListProviderName
  - SuperOffice.Util.AsyncListProviderWrapper.SearchValue
  - SuperOffice.Util.AsyncListProviderWrapper.Terminate
  langs:
  - csharp
  - vb
  name: AsyncListProviderWrapper
  nameWithType: AsyncListProviderWrapper
  fullName: SuperOffice.Util.AsyncListProviderWrapper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public class AsyncListProviderWrapper
    content.vb: Public Class AsyncListProviderWrapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Util.AsyncListProviderWrapper.EnumUtil.MapEnums``2
  - SuperOffice.Util.AsyncListProviderWrapper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Util.AsyncListProviderWrapper.ListProviderName
  commentId: F:SuperOffice.Util.AsyncListProviderWrapper.ListProviderName
  id: ListProviderName
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: ListProviderName
  nameWithType: AsyncListProviderWrapper.ListProviderName
  fullName: SuperOffice.Util.AsyncListProviderWrapper.ListProviderName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public readonly string ListProviderName
    return:
      type: System.String
    content.vb: Public ReadOnly ListProviderName As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Util.AsyncListProviderWrapper.ExtraInfoForProvider
  commentId: F:SuperOffice.Util.AsyncListProviderWrapper.ExtraInfoForProvider
  id: ExtraInfoForProvider
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: ExtraInfoForProvider
  nameWithType: AsyncListProviderWrapper.ExtraInfoForProvider
  fullName: SuperOffice.Util.AsyncListProviderWrapper.ExtraInfoForProvider
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public readonly string ExtraInfoForProvider
    return:
      type: System.String
    content.vb: Public ReadOnly ExtraInfoForProvider As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Util.AsyncListProviderWrapper.SearchValue
  commentId: F:SuperOffice.Util.AsyncListProviderWrapper.SearchValue
  id: SearchValue
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: SearchValue
  nameWithType: AsyncListProviderWrapper.SearchValue
  fullName: SuperOffice.Util.AsyncListProviderWrapper.SearchValue
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public readonly string SearchValue
    return:
      type: System.String
    content.vb: Public ReadOnly SearchValue As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Util.AsyncListProviderWrapper.Elapsed
  commentId: F:SuperOffice.Util.AsyncListProviderWrapper.Elapsed
  id: Elapsed
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: Elapsed
  nameWithType: AsyncListProviderWrapper.Elapsed
  fullName: SuperOffice.Util.AsyncListProviderWrapper.Elapsed
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public long Elapsed
    return:
      type: System.Int64
    content.vb: Public Elapsed As Long
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Util.AsyncListProviderWrapper.#ctor(System.String,System.String,System.String)
  commentId: M:SuperOffice.Util.AsyncListProviderWrapper.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: AsyncListProviderWrapper(String, String, String)
  nameWithType: AsyncListProviderWrapper.AsyncListProviderWrapper(String, String, String)
  fullName: SuperOffice.Util.AsyncListProviderWrapper.AsyncListProviderWrapper(System.String, System.String, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public AsyncListProviderWrapper(string i_ListProviderName, string i_ExtraInfoForProvider, string i_SearchValue)
    parameters:
    - id: i_ListProviderName
      type: System.String
    - id: i_ExtraInfoForProvider
      type: System.String
    - id: i_SearchValue
      type: System.String
    content.vb: Public Sub New(i_ListProviderName As String, i_ExtraInfoForProvider As String, i_SearchValue As String)
  overload: SuperOffice.Util.AsyncListProviderWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Util.AsyncListProviderWrapper.Terminate
  commentId: M:SuperOffice.Util.AsyncListProviderWrapper.Terminate
  id: Terminate
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: Terminate()
  nameWithType: AsyncListProviderWrapper.Terminate()
  fullName: SuperOffice.Util.AsyncListProviderWrapper.Terminate()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public void Terminate()
    content.vb: Public Sub Terminate
  overload: SuperOffice.Util.AsyncListProviderWrapper.Terminate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Util.AsyncListProviderWrapper.IsDone
  commentId: M:SuperOffice.Util.AsyncListProviderWrapper.IsDone
  id: IsDone
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: IsDone()
  nameWithType: AsyncListProviderWrapper.IsDone()
  fullName: SuperOffice.Util.AsyncListProviderWrapper.IsDone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public bool IsDone()
    return:
      type: System.Boolean
    content.vb: Public Function IsDone As Boolean
  overload: SuperOffice.Util.AsyncListProviderWrapper.IsDone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Util.AsyncListProviderWrapper.GetListItems
  commentId: M:SuperOffice.Util.AsyncListProviderWrapper.GetListItems
  id: GetListItems
  parent: SuperOffice.Util.AsyncListProviderWrapper
  langs:
  - csharp
  - vb
  name: GetListItems()
  nameWithType: AsyncListProviderWrapper.GetListItems()
  fullName: SuperOffice.Util.AsyncListProviderWrapper.GetListItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public List<ISoListItem> GetListItems()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Public Function GetListItems As List(Of ISoListItem)
  overload: SuperOffice.Util.AsyncListProviderWrapper.GetListItems*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AsyncListProviderWrapper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AsyncListProviderWrapper, To>()
  nameWithType: EnumUtil.MapEnums<AsyncListProviderWrapper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Util.AsyncListProviderWrapper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AsyncListProviderWrapper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.AsyncListProviderWrapper, To)()
  name.vb: MapEnums(Of AsyncListProviderWrapper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AsyncListProviderWrapper, To>
    nameWithType: EnumUtil.MapEnums<AsyncListProviderWrapper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Util.AsyncListProviderWrapper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AsyncListProviderWrapper, To)
    nameWithType: EnumUtil.MapEnums(Of AsyncListProviderWrapper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Util.AsyncListProviderWrapper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.AsyncListProviderWrapper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AsyncListProviderWrapper, To>()
  nameWithType: Converters.MapEnums<AsyncListProviderWrapper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.AsyncListProviderWrapper, To>()
  nameWithType.vb: Converters.MapEnums(Of AsyncListProviderWrapper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.AsyncListProviderWrapper, To)()
  name.vb: MapEnums(Of AsyncListProviderWrapper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AsyncListProviderWrapper, To>
    nameWithType: Converters.MapEnums<AsyncListProviderWrapper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.AsyncListProviderWrapper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AsyncListProviderWrapper, To)
    nameWithType: Converters.MapEnums(Of AsyncListProviderWrapper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.AsyncListProviderWrapper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: SuperOffice.Util.AsyncListProviderWrapper.#ctor*
  commentId: Overload:SuperOffice.Util.AsyncListProviderWrapper.#ctor
  isExternal: true
  name: AsyncListProviderWrapper
  nameWithType: AsyncListProviderWrapper.AsyncListProviderWrapper
  fullName: SuperOffice.Util.AsyncListProviderWrapper.AsyncListProviderWrapper
- uid: SuperOffice.Util.AsyncListProviderWrapper.Terminate*
  commentId: Overload:SuperOffice.Util.AsyncListProviderWrapper.Terminate
  isExternal: true
  name: Terminate
  nameWithType: AsyncListProviderWrapper.Terminate
  fullName: SuperOffice.Util.AsyncListProviderWrapper.Terminate
- uid: SuperOffice.Util.AsyncListProviderWrapper.IsDone*
  commentId: Overload:SuperOffice.Util.AsyncListProviderWrapper.IsDone
  isExternal: true
  name: IsDone
  nameWithType: AsyncListProviderWrapper.IsDone
  fullName: SuperOffice.Util.AsyncListProviderWrapper.IsDone
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Util.AsyncListProviderWrapper.GetListItems*
  commentId: Overload:SuperOffice.Util.AsyncListProviderWrapper.GetListItems
  isExternal: true
  name: GetListItems
  nameWithType: AsyncListProviderWrapper.GetListItems
  fullName: SuperOffice.Util.AsyncListProviderWrapper.GetListItems
- uid: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ISoListItem>
  nameWithType: List<ISoListItem>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: List(Of ISoListItem)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: List(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
