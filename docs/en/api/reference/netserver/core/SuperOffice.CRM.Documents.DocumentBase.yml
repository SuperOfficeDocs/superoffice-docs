### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Documents.DocumentBase
  commentId: T:SuperOffice.CRM.Documents.DocumentBase
  id: DocumentBase
  parent: SuperOffice.CRM.Documents
  children:
  - SuperOffice.CRM.Documents.DocumentBase.#ctor
  - SuperOffice.CRM.Documents.DocumentBase.FileExtension
  - SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser
  - SuperOffice.CRM.Documents.DocumentBase.Load
  - SuperOffice.CRM.Documents.DocumentBase.RevertUser
  - SuperOffice.CRM.Documents.DocumentBase.Save(System.IO.Stream)
  langs:
  - csharp
  - vb
  name: DocumentBase
  nameWithType: DocumentBase
  fullName: SuperOffice.CRM.Documents.DocumentBase
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nBase class for document handling.\n"
  syntax:
    content: public abstract class DocumentBase
    content.vb: Public MustInherit Class DocumentBase
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Documents.PhysicalDocumentTemplate
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Documents.DocumentBase.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Documents.DocumentBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.Documents.DocumentBase.#ctor
  commentId: M:SuperOffice.CRM.Documents.DocumentBase.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Documents.DocumentBase
  langs:
  - csharp
  - vb
  name: DocumentBase()
  nameWithType: DocumentBase.DocumentBase()
  fullName: SuperOffice.CRM.Documents.DocumentBase.DocumentBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nConstructor to be used by inheriting classes\n"
  syntax:
    content: protected DocumentBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.Documents.DocumentBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Documents.DocumentBase.Load
  commentId: M:SuperOffice.CRM.Documents.DocumentBase.Load
  id: Load
  parent: SuperOffice.CRM.Documents.DocumentBase
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: DocumentBase.Load()
  fullName: SuperOffice.CRM.Documents.DocumentBase.Load()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nLoad the document.\n"
  syntax:
    content: public virtual Stream Load()
    return:
      type: System.IO.Stream
      description: <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to read the document from.
    content.vb: Public Overridable Function Load As Stream
  overload: SuperOffice.CRM.Documents.DocumentBase.Load*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Documents.DocumentBase.Save(System.IO.Stream)
  commentId: M:SuperOffice.CRM.Documents.DocumentBase.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: SuperOffice.CRM.Documents.DocumentBase
  langs:
  - csharp
  - vb
  name: Save(Stream)
  nameWithType: DocumentBase.Save(Stream)
  fullName: SuperOffice.CRM.Documents.DocumentBase.Save(System.IO.Stream)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nSave the document\n"
  remarks: "\nIf the document file does not already exist, the document file is created.\n"
  syntax:
    content: public virtual void Save(Stream document)
    parameters:
    - id: document
      type: System.IO.Stream
      description: <xref href="System.IO.Stream" data-throw-if-not-resolved="false"></xref> to read the document from.
    content.vb: Public Overridable Sub Save(document As Stream)
  overload: SuperOffice.CRM.Documents.DocumentBase.Save*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser
  commentId: M:SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser
  id: ImpersonateUser
  parent: SuperOffice.CRM.Documents.DocumentBase
  langs:
  - csharp
  - vb
  name: ImpersonateUser()
  nameWithType: DocumentBase.ImpersonateUser()
  fullName: SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nImpersonate the user, if needed.\n"
  syntax:
    content: protected void ImpersonateUser()
    content.vb: Protected Sub ImpersonateUser
  overload: SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Documents.DocumentBase.RevertUser
  commentId: M:SuperOffice.CRM.Documents.DocumentBase.RevertUser
  id: RevertUser
  parent: SuperOffice.CRM.Documents.DocumentBase
  langs:
  - csharp
  - vb
  name: RevertUser()
  nameWithType: DocumentBase.RevertUser()
  fullName: SuperOffice.CRM.Documents.DocumentBase.RevertUser()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nRevert the impersonation\n"
  syntax:
    content: protected void RevertUser()
    content.vb: Protected Sub RevertUser
  overload: SuperOffice.CRM.Documents.DocumentBase.RevertUser*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Documents.DocumentBase.FileExtension
  commentId: P:SuperOffice.CRM.Documents.DocumentBase.FileExtension
  id: FileExtension
  parent: SuperOffice.CRM.Documents.DocumentBase
  langs:
  - csharp
  - vb
  name: FileExtension
  nameWithType: DocumentBase.FileExtension
  fullName: SuperOffice.CRM.Documents.DocumentBase.FileExtension
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nExtension of for the underlaying file.\n"
  syntax:
    content: >-
      [Obsolete("This method is not in use", true)]

      public virtual string FileExtension { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("This method is not in use", True)>

      Public Overridable ReadOnly Property FileExtension As String
  overload: SuperOffice.CRM.Documents.DocumentBase.FileExtension*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is not in use
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: SuperOffice.CRM.Documents
  commentId: N:SuperOffice.CRM.Documents
  isExternal: true
  name: SuperOffice.CRM.Documents
  nameWithType: SuperOffice.CRM.Documents
  fullName: SuperOffice.CRM.Documents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.DocumentBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DocumentBase, To>()
  nameWithType: EnumUtil.MapEnums<DocumentBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Documents.DocumentBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DocumentBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Documents.DocumentBase, To)()
  name.vb: MapEnums(Of DocumentBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DocumentBase, To>
    nameWithType: EnumUtil.MapEnums<DocumentBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Documents.DocumentBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DocumentBase, To)
    nameWithType: EnumUtil.MapEnums(Of DocumentBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Documents.DocumentBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.DocumentBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DocumentBase, To>()
  nameWithType: Converters.MapEnums<DocumentBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Documents.DocumentBase, To>()
  nameWithType.vb: Converters.MapEnums(Of DocumentBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Documents.DocumentBase, To)()
  name.vb: MapEnums(Of DocumentBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DocumentBase, To>
    nameWithType: Converters.MapEnums<DocumentBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Documents.DocumentBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DocumentBase, To)
    nameWithType: Converters.MapEnums(Of DocumentBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Documents.DocumentBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Documents.DocumentBase.#ctor*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentBase.#ctor
  isExternal: true
  name: DocumentBase
  nameWithType: DocumentBase.DocumentBase
  fullName: SuperOffice.CRM.Documents.DocumentBase.DocumentBase
- uid: SuperOffice.CRM.Documents.DocumentBase.Load*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentBase.Load
  isExternal: true
  name: Load
  nameWithType: DocumentBase.Load
  fullName: SuperOffice.CRM.Documents.DocumentBase.Load
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: SuperOffice.CRM.Documents.DocumentBase.Save*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentBase.Save
  isExternal: true
  name: Save
  nameWithType: DocumentBase.Save
  fullName: SuperOffice.CRM.Documents.DocumentBase.Save
- uid: SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser
  isExternal: true
  name: ImpersonateUser
  nameWithType: DocumentBase.ImpersonateUser
  fullName: SuperOffice.CRM.Documents.DocumentBase.ImpersonateUser
- uid: SuperOffice.CRM.Documents.DocumentBase.RevertUser*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentBase.RevertUser
  isExternal: true
  name: RevertUser
  nameWithType: DocumentBase.RevertUser
  fullName: SuperOffice.CRM.Documents.DocumentBase.RevertUser
- uid: SuperOffice.CRM.Documents.DocumentBase.FileExtension*
  commentId: Overload:SuperOffice.CRM.Documents.DocumentBase.FileExtension
  isExternal: true
  name: FileExtension
  nameWithType: DocumentBase.FileExtension
  fullName: SuperOffice.CRM.Documents.DocumentBase.FileExtension
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
