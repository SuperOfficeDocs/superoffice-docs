### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Mail.SoMail
  commentId: T:SuperOffice.CRM.Mail.SoMail
  id: SoMail
  parent: SuperOffice.CRM.Mail
  children:
  - SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.BeginSend(System.String,System.String,System.String)
  - SuperOffice.CRM.Mail.SoMail.BeginSend(System.String,System.String,System.String,System.Boolean)
  - SuperOffice.CRM.Mail.SoMail.BeginSendAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.CanRead
  - SuperOffice.CRM.Mail.SoMail.CanSend
  - SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SoMail
  nameWithType: SoMail
  fullName: SuperOffice.CRM.Mail.SoMail
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Helper class for sending and receiving e-mails
  example: []
  syntax:
    content: public static class SoMail
    content.vb: Public Module SoMail
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync(System.Threading.CancellationToken)
  id: GetMailReaderAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: GetMailReaderAsync(CancellationToken)
  nameWithType: SoMail.GetMailReaderAsync(CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  syntax:
    content: public static Task<ISoIncomingMailInterface> GetMailReaderAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoIncomingMailInterface}
    content.vb: Public Shared Function GetMailReaderAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ISoIncomingMailInterface)
  overload: SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync*
- uid: SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync(System.Threading.CancellationToken)
  id: GetMailSenderAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: GetMailSenderAsync(CancellationToken)
  nameWithType: SoMail.GetMailSenderAsync(CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  syntax:
    content: public static Task<ISoOutgoingMailInterface> GetMailSenderAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoOutgoingMailInterface}
    content.vb: Public Shared Function GetMailSenderAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ISoOutgoingMailInterface)
  overload: SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync*
- uid: SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: LoginIncomingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: LoginIncomingExtendedAsync(string, string, int, string, string, string, bool, bool, CancellationToken)
  nameWithType: SoMail.LoginIncomingExtendedAsync(string, string, int, string, string, string, bool, bool, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync(string, string, int, string, string, string, bool, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Log in to an incoming mail server
  example: []
  syntax:
    content: public static Task<ISoIncomingMailInterface> LoginIncomingExtendedAsync(string protocol, string server, int port, string username, string password, string folder, bool readOnly, bool createFolderIfNotFound, CancellationToken cancellationToken)
    parameters:
    - id: protocol
      type: System.String
    - id: server
      type: System.String
      description: DNS or IP to mailserver. Port may be appended by suffixing with ':port'
    - id: port
      type: System.Int32
    - id: username
      type: System.String
      description: Account username
    - id: password
      type: System.String
      description: Account password
    - id: folder
      type: System.String
      description: Name of folder to set as active
    - id: readOnly
      type: System.Boolean
      description: Should folder be selected as read only
    - id: createFolderIfNotFound
      type: System.Boolean
      description: Create the folder if it does not exist
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoIncomingMailInterface}
      description: Instance of the created mail connection
    content.vb: Public Shared Function LoginIncomingExtendedAsync(protocol As String, server As String, port As Integer, username As String, password As String, folder As String, [readOnly] As Boolean, createFolderIfNotFound As Boolean, cancellationToken As CancellationToken) As Task(Of ISoIncomingMailInterface)
  overload: SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync*
  nameWithType.vb: SoMail.LoginIncomingExtendedAsync(String, String, Integer, String, String, String, Boolean, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync(String, String, Integer, String, String, String, Boolean, Boolean, System.Threading.CancellationToken)
  name.vb: LoginIncomingExtendedAsync(String, String, Integer, String, String, String, Boolean, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: LoginIncomingAsync(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: LoginIncomingAsync(string, string, string, bool, string, bool, bool, CancellationToken)
  nameWithType: SoMail.LoginIncomingAsync(string, string, string, bool, string, bool, bool, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync(string, string, string, bool, string, bool, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Log in to an incoming mail server
  example: []
  syntax:
    content: public static Task<ISoIncomingMailInterface> LoginIncomingAsync(string server, string username, string password, bool useSSL, string folder, bool readOnly, bool createFolderIfNotFound, CancellationToken cancellationToken)
    parameters:
    - id: server
      type: System.String
      description: DNS or IP to mailserver. Port may be appended by suffixing with ':port'
    - id: username
      type: System.String
      description: Account username
    - id: password
      type: System.String
      description: Account password
    - id: useSSL
      type: System.Boolean
      description: Use secure connection
    - id: folder
      type: System.String
      description: Name of folder to set as active
    - id: readOnly
      type: System.Boolean
      description: Should folder be selected as read only
    - id: createFolderIfNotFound
      type: System.Boolean
      description: Create the folder if it does not exist
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoIncomingMailInterface}
      description: Instance of the created mail connection
    content.vb: Public Shared Function LoginIncomingAsync(server As String, username As String, password As String, useSSL As Boolean, folder As String, [readOnly] As Boolean, createFolderIfNotFound As Boolean, cancellationToken As CancellationToken) As Task(Of ISoIncomingMailInterface)
  overload: SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync*
  nameWithType.vb: SoMail.LoginIncomingAsync(String, String, String, Boolean, String, Boolean, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync(String, String, String, Boolean, String, Boolean, Boolean, System.Threading.CancellationToken)
  name.vb: LoginIncomingAsync(String, String, String, Boolean, String, Boolean, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  id: LoginOutgoingExtendedAsync(System.String,System.String,System.Int32,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: LoginOutgoingExtendedAsync(string, string, int, string, string, CancellationToken)
  nameWithType: SoMail.LoginOutgoingExtendedAsync(string, string, int, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync(string, string, int, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Log in to an outgoing mail server
  example: []
  syntax:
    content: public static Task<ISoOutgoingMailInterface> LoginOutgoingExtendedAsync(string protocol, string server, int port, string username, string password, CancellationToken cancellationToken)
    parameters:
    - id: protocol
      type: System.String
    - id: server
      type: System.String
      description: DNS or IP to mailserver. Port may be appended by suffixing with ':port'
    - id: port
      type: System.Int32
    - id: username
      type: System.String
      description: Account username
    - id: password
      type: System.String
      description: Account password
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoOutgoingMailInterface}
      description: Instance of the created mail connection
    content.vb: Public Shared Function LoginOutgoingExtendedAsync(protocol As String, server As String, port As Integer, username As String, password As String, cancellationToken As CancellationToken) As Task(Of ISoOutgoingMailInterface)
  overload: SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync*
  nameWithType.vb: SoMail.LoginOutgoingExtendedAsync(String, String, Integer, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync(String, String, Integer, String, String, System.Threading.CancellationToken)
  name.vb: LoginOutgoingExtendedAsync(String, String, Integer, String, String, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  id: LoginOutgoingAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: LoginOutgoingAsync(string, string, string, bool, CancellationToken)
  nameWithType: SoMail.LoginOutgoingAsync(string, string, string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync(string, string, string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Log in to an outgoing mail server
  example: []
  syntax:
    content: public static Task<ISoOutgoingMailInterface> LoginOutgoingAsync(string server, string username, string password, bool useSSL, CancellationToken cancellationToken)
    parameters:
    - id: server
      type: System.String
      description: DNS or IP to mailserver. Port may be appended by suffixing with ':port'
    - id: username
      type: System.String
      description: Account username
    - id: password
      type: System.String
      description: Account password
    - id: useSSL
      type: System.Boolean
      description: Use secure connection
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoOutgoingMailInterface}
      description: Instance of the created mail connection
    content.vb: Public Shared Function LoginOutgoingAsync(server As String, username As String, password As String, useSSL As Boolean, cancellationToken As CancellationToken) As Task(Of ISoOutgoingMailInterface)
  overload: SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync*
  nameWithType.vb: SoMail.LoginOutgoingAsync(String, String, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync(String, String, String, Boolean, System.Threading.CancellationToken)
  name.vb: LoginOutgoingAsync(String, String, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  id: BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginReadAsync(SoMailFolder, CancellationToken)
  nameWithType: SoMail.BeginReadAsync(SoMailFolder, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for incoming mail server/message store (i.e. IMAP).
  example: []
  syntax:
    content: public static Task<MessageStoreSession> BeginReadAsync(SoMailFolder folder, CancellationToken cancellationToken)
    parameters:
    - id: folder
      type: SuperOffice.CRM.Mail.SoMailFolder
      description: Folder to set active
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
      description: Disposable object holding session to incoming mail server/message store (i.e. IMAP).
    content.vb: Public Shared Function BeginReadAsync(folder As SoMailFolder, cancellationToken As CancellationToken) As Task(Of MessageStoreSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  id: BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginReadAsync(SoMailFolder, string, string, string, bool, CancellationToken)
  nameWithType: SoMail.BeginReadAsync(SoMailFolder, string, string, string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder, string, string, string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for incoming mail server/message store (i.e. IMAP).
  example: []
  syntax:
    content: public static Task<MessageStoreSession> BeginReadAsync(SoMailFolder folder, string server, string userName, string password, bool useSSL, CancellationToken cancellationToken)
    parameters:
    - id: folder
      type: SuperOffice.CRM.Mail.SoMailFolder
      description: Folder to set active
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    - id: useSSL
      type: System.Boolean
      description: Use SSL
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
      description: Disposable object holding session to incoming mail server/message store (i.e. IMAP).
    content.vb: Public Shared Function BeginReadAsync(folder As SoMailFolder, server As String, userName As String, password As String, useSSL As Boolean, cancellationToken As CancellationToken) As Task(Of MessageStoreSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
  nameWithType.vb: SoMail.BeginReadAsync(SoMailFolder, String, String, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder, String, String, String, Boolean, System.Threading.CancellationToken)
  name.vb: BeginReadAsync(SoMailFolder, String, String, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginReadAsync(SoMailFolder, string, string, string, CancellationToken)
  nameWithType: SoMail.BeginReadAsync(SoMailFolder, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for incoming mail server/message store (i.e. IMAP).
  example: []
  syntax:
    content: public static Task<MessageStoreSession> BeginReadAsync(SoMailFolder folder, string server, string userName, string password, CancellationToken cancellationToken)
    parameters:
    - id: folder
      type: SuperOffice.CRM.Mail.SoMailFolder
      description: Folder to set active
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
      description: Disposable object holding session to incoming mail server/message store (i.e. IMAP).
    content.vb: Public Shared Function BeginReadAsync(folder As SoMailFolder, server As String, userName As String, password As String, cancellationToken As CancellationToken) As Task(Of MessageStoreSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
  nameWithType.vb: SoMail.BeginReadAsync(SoMailFolder, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(SuperOffice.CRM.Mail.SoMailFolder, String, String, String, System.Threading.CancellationToken)
  name.vb: BeginReadAsync(SoMailFolder, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: BeginReadAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginReadAsync(string, string, string, string, CancellationToken)
  nameWithType: SoMail.BeginReadAsync(string, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(string, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for incoming mail server/message store (i.e. IMAP).
  example: []
  syntax:
    content: public static Task<MessageStoreSession> BeginReadAsync(string folderName, string server, string userName, string password, CancellationToken cancellationToken)
    parameters:
    - id: folderName
      type: System.String
      description: Full path and name of folder to set active
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
      description: Disposable object holding session to incoming mail server/message store (i.e. IMAP).
    content.vb: Public Shared Function BeginReadAsync(folderName As String, server As String, userName As String, password As String, cancellationToken As CancellationToken) As Task(Of MessageStoreSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
  nameWithType.vb: SoMail.BeginReadAsync(String, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(String, String, String, String, System.Threading.CancellationToken)
  name.vb: BeginReadAsync(String, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  id: BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginReadAsync(string, string, string, string, bool, CancellationToken)
  nameWithType: SoMail.BeginReadAsync(string, string, string, string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(string, string, string, string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for incoming mail server/message store (i.e. IMAP).
  example: []
  syntax:
    content: public static Task<MessageStoreSession> BeginReadAsync(string folderName, string server, string userName, string password, bool useSSL, CancellationToken cancellationToken)
    parameters:
    - id: folderName
      type: System.String
      description: Full path and name of folder to set active
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    - id: useSSL
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
      description: Disposable object holding session to incoming mail server/message store (i.e. IMAP).
    content.vb: Public Shared Function BeginReadAsync(folderName As String, server As String, userName As String, password As String, useSSL As Boolean, cancellationToken As CancellationToken) As Task(Of MessageStoreSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
  nameWithType.vb: SoMail.BeginReadAsync(String, String, String, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(String, String, String, String, Boolean, System.Threading.CancellationToken)
  name.vb: BeginReadAsync(String, String, String, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: BeginReadAsync(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginReadAsync(string, string, string, string, bool, bool, CancellationToken)
  nameWithType: SoMail.BeginReadAsync(string, string, string, string, bool, bool, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(string, string, string, string, bool, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for incoming mail server/message store (i.e. IMAP).
  example: []
  syntax:
    content: public static Task<MessageStoreSession> BeginReadAsync(string folderName, string server, string userName, string password, bool useSSL, bool readOnly, CancellationToken cancellationToken)
    parameters:
    - id: folderName
      type: System.String
      description: Full path and name of folder to set active
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    - id: useSSL
      type: System.Boolean
    - id: readOnly
      type: System.Boolean
      description: Should folder be selected as readonly
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
      description: Disposable object holding session to incoming mail server/message store (i.e. IMAP).
    content.vb: Public Shared Function BeginReadAsync(folderName As String, server As String, userName As String, password As String, useSSL As Boolean, [readOnly] As Boolean, cancellationToken As CancellationToken) As Task(Of MessageStoreSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
  nameWithType.vb: SoMail.BeginReadAsync(String, String, String, String, Boolean, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginReadAsync(String, String, String, String, Boolean, Boolean, System.Threading.CancellationToken)
  name.vb: BeginReadAsync(String, String, String, String, Boolean, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.BeginSendAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginSendAsync(System.Threading.CancellationToken)
  id: BeginSendAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginSendAsync(CancellationToken)
  nameWithType: SoMail.BeginSendAsync(CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginSendAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for outgoing (i.e. SMTP) mail server according to the current users configuration.
  example: []
  syntax:
    content: public static Task<OutgoingMailSession> BeginSendAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.OutgoingMailSession}
      description: Disposable object holding session to outgoing (i.e. SMTP) mail server.
    content.vb: Public Shared Function BeginSendAsync(cancellationToken As CancellationToken) As Task(Of OutgoingMailSession)
  overload: SuperOffice.CRM.Mail.SoMail.BeginSendAsync*
- uid: SuperOffice.CRM.Mail.SoMail.BeginSend(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginSend(System.String,System.String,System.String)
  id: BeginSend(System.String,System.String,System.String)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginSend(string, string, string)
  nameWithType: SoMail.BeginSend(string, string, string)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginSend(string, string, string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for outgoing (i.e. SMTP) mail server.
  example: []
  syntax:
    content: public static OutgoingMailSession BeginSend(string server, string userName, string password)
    parameters:
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    return:
      type: SuperOffice.CRM.Mail.OutgoingMailSession
      description: Disposable object holding session to outgoing (i.e. SMTP) mail server.
    content.vb: Public Shared Function BeginSend(server As String, userName As String, password As String) As OutgoingMailSession
  overload: SuperOffice.CRM.Mail.SoMail.BeginSend*
  nameWithType.vb: SoMail.BeginSend(String, String, String)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginSend(String, String, String)
  name.vb: BeginSend(String, String, String)
- uid: SuperOffice.CRM.Mail.SoMail.BeginSend(System.String,System.String,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Mail.SoMail.BeginSend(System.String,System.String,System.String,System.Boolean)
  id: BeginSend(System.String,System.String,System.String,System.Boolean)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: BeginSend(string, string, string, bool)
  nameWithType: SoMail.BeginSend(string, string, string, bool)
  fullName: SuperOffice.CRM.Mail.SoMail.BeginSend(string, string, string, bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Obtain reference to session for outgoing (i.e. SMTP) mail server.
  example: []
  syntax:
    content: public static OutgoingMailSession BeginSend(string server, string userName, string password, bool useSSL)
    parameters:
    - id: server
      type: System.String
      description: Name of outgoing (i.e. SMTP) server with optional port.
    - id: userName
      type: System.String
      description: User name used to authenticate to the mail server
    - id: password
      type: System.String
      description: Password used to authenticate to the mail server
    - id: useSSL
      type: System.Boolean
      description: Should we use a secure connection
    return:
      type: SuperOffice.CRM.Mail.OutgoingMailSession
      description: Disposable object holding session to outgoing (i.e. SMTP) mail server.
    content.vb: Public Shared Function BeginSend(server As String, userName As String, password As String, useSSL As Boolean) As OutgoingMailSession
  overload: SuperOffice.CRM.Mail.SoMail.BeginSend*
  nameWithType.vb: SoMail.BeginSend(String, String, String, Boolean)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.BeginSend(String, String, String, Boolean)
  name.vb: BeginSend(String, String, String, Boolean)
- uid: SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  id: GetFolderNameAsync(SuperOffice.CRM.Mail.SoMailFolder,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: GetFolderNameAsync(SoMailFolder, CancellationToken)
  nameWithType: SoMail.GetFolderNameAsync(SoMailFolder, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync(SuperOffice.CRM.Mail.SoMailFolder, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Get folder name from <xref href="SuperOffice.CRM.Mail.SoMailFolder" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static Task<string> GetFolderNameAsync(SoMailFolder folder, CancellationToken cancellationToken = default)
    parameters:
    - id: folder
      type: SuperOffice.CRM.Mail.SoMailFolder
      description: Folder to find name for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Name of folder.
    content.vb: Public Shared Function GetFolderNameAsync(folder As SoMailFolder, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync*
- uid: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(System.String,System.Threading.CancellationToken)
  id: GetLoginCredentialsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: GetLoginCredentialsAsync(string, CancellationToken)
  nameWithType: SoMail.GetLoginCredentialsAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: 'Get login info for specified type. Ex: "imap", "smtp".'
  example: []
  syntax:
    content: public static Task<SoMailCredentials> GetLoginCredentialsAsync(string type, CancellationToken cancellationToken)
    parameters:
    - id: type
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.SoMailCredentials}
    content.vb: Public Shared Function GetLoginCredentialsAsync(type As String, cancellationToken As CancellationToken) As Task(Of SoMailCredentials)
  overload: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync*
  nameWithType.vb: SoMail.GetLoginCredentialsAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(String, System.Threading.CancellationToken)
  name.vb: GetLoginCredentialsAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetLoginCredentialsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: GetLoginCredentialsAsync(int, string, CancellationToken)
  nameWithType: SoMail.GetLoginCredentialsAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: 'Get login info for specified type. Ex: "imap", "smtp" for a specified associate'
  example: []
  syntax:
    content: public static Task<SoMailCredentials> GetLoginCredentialsAsync(int associateId, string type, CancellationToken cancellationToken)
    parameters:
    - id: associateId
      type: System.Int32
    - id: type
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.SoMailCredentials}
    content.vb: Public Shared Function GetLoginCredentialsAsync(associateId As Integer, type As String, cancellationToken As CancellationToken) As Task(Of SoMailCredentials)
  overload: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync*
  nameWithType.vb: SoMail.GetLoginCredentialsAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: GetLoginCredentialsAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Mail.SoMail.CanRead
  commentId: P:SuperOffice.CRM.Mail.SoMail.CanRead
  id: CanRead
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: CanRead
  nameWithType: SoMail.CanRead
  fullName: SuperOffice.CRM.Mail.SoMail.CanRead
  type: Property
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Get if the currently logged in user can read e-mails and access the message store.
  example: []
  syntax:
    content: public static bool CanRead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property CanRead As Boolean
  overload: SuperOffice.CRM.Mail.SoMail.CanRead*
- uid: SuperOffice.CRM.Mail.SoMail.CanSend
  commentId: P:SuperOffice.CRM.Mail.SoMail.CanSend
  id: CanSend
  parent: SuperOffice.CRM.Mail.SoMail
  langs:
  - csharp
  - vb
  name: CanSend
  nameWithType: SoMail.CanSend
  fullName: SuperOffice.CRM.Mail.SoMail.CanSend
  type: Property
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Mail
  summary: Get if the currently logged in user can send e-mails
  example: []
  syntax:
    content: public static bool CanSend { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property CanSend As Boolean
  overload: SuperOffice.CRM.Mail.SoMail.CanSend*
references:
- uid: SuperOffice.CRM.Mail
  commentId: N:SuperOffice.CRM.Mail
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Mail
  nameWithType: SuperOffice.CRM.Mail
  fullName: SuperOffice.CRM.Mail
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Mail
    name: Mail
    isExternal: true
    href: SuperOffice.CRM.Mail.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Mail
    name: Mail
    isExternal: true
    href: SuperOffice.CRM.Mail.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_GetMailReaderAsync_System_Threading_CancellationToken_
  name: GetMailReaderAsync
  nameWithType: SoMail.GetMailReaderAsync
  fullName: SuperOffice.CRM.Mail.SoMail.GetMailReaderAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoIncomingMailInterface}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoIncomingMailInterface}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ISoIncomingMailInterface>
  nameWithType: Task<ISoIncomingMailInterface>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Mail.ISoIncomingMailInterface>
  nameWithType.vb: Task(Of ISoIncomingMailInterface)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Mail.ISoIncomingMailInterface)
  name.vb: Task(Of ISoIncomingMailInterface)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Mail.ISoIncomingMailInterface
    name: ISoIncomingMailInterface
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.ISoIncomingMailInterface
    name: ISoIncomingMailInterface
    isExternal: true
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_GetMailSenderAsync_System_Threading_CancellationToken_
  name: GetMailSenderAsync
  nameWithType: SoMail.GetMailSenderAsync
  fullName: SuperOffice.CRM.Mail.SoMail.GetMailSenderAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoOutgoingMailInterface}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Mail.ISoOutgoingMailInterface}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ISoOutgoingMailInterface>
  nameWithType: Task<ISoOutgoingMailInterface>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Mail.ISoOutgoingMailInterface>
  nameWithType.vb: Task(Of ISoOutgoingMailInterface)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Mail.ISoOutgoingMailInterface)
  name.vb: Task(Of ISoOutgoingMailInterface)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Mail.ISoOutgoingMailInterface
    name: ISoOutgoingMailInterface
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.ISoOutgoingMailInterface
    name: ISoOutgoingMailInterface
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_LoginIncomingExtendedAsync_System_String_System_String_System_Int32_System_String_System_String_System_String_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  name: LoginIncomingExtendedAsync
  nameWithType: SoMail.LoginIncomingExtendedAsync
  fullName: SuperOffice.CRM.Mail.SoMail.LoginIncomingExtendedAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_LoginIncomingAsync_System_String_System_String_System_String_System_Boolean_System_String_System_Boolean_System_Boolean_System_Threading_CancellationToken_
  name: LoginIncomingAsync
  nameWithType: SoMail.LoginIncomingAsync
  fullName: SuperOffice.CRM.Mail.SoMail.LoginIncomingAsync
- uid: SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_LoginOutgoingExtendedAsync_System_String_System_String_System_Int32_System_String_System_String_System_Threading_CancellationToken_
  name: LoginOutgoingExtendedAsync
  nameWithType: SoMail.LoginOutgoingExtendedAsync
  fullName: SuperOffice.CRM.Mail.SoMail.LoginOutgoingExtendedAsync
- uid: SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_LoginOutgoingAsync_System_String_System_String_System_String_System_Boolean_System_Threading_CancellationToken_
  name: LoginOutgoingAsync
  nameWithType: SoMail.LoginOutgoingAsync
  fullName: SuperOffice.CRM.Mail.SoMail.LoginOutgoingAsync
- uid: SuperOffice.CRM.Mail.SoMail.BeginReadAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.BeginReadAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_BeginReadAsync_SuperOffice_CRM_Mail_SoMailFolder_System_Threading_CancellationToken_
  name: BeginReadAsync
  nameWithType: SoMail.BeginReadAsync
  fullName: SuperOffice.CRM.Mail.SoMail.BeginReadAsync
- uid: SuperOffice.CRM.Mail.SoMailFolder
  commentId: T:SuperOffice.CRM.Mail.SoMailFolder
  parent: SuperOffice.CRM.Mail
  isExternal: true
  name: SoMailFolder
  nameWithType: SoMailFolder
  fullName: SuperOffice.CRM.Mail.SoMailFolder
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Mail.MessageStoreSession}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<MessageStoreSession>
  nameWithType: Task<MessageStoreSession>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Mail.MessageStoreSession>
  nameWithType.vb: Task(Of MessageStoreSession)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Mail.MessageStoreSession)
  name.vb: Task(Of MessageStoreSession)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Mail.MessageStoreSession
    name: MessageStoreSession
    isExternal: true
    href: SuperOffice.CRM.Mail.MessageStoreSession.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.MessageStoreSession
    name: MessageStoreSession
    isExternal: true
    href: SuperOffice.CRM.Mail.MessageStoreSession.html
  - name: )
- uid: SuperOffice.CRM.Mail.SoMail.BeginSendAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.BeginSendAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_BeginSendAsync_System_Threading_CancellationToken_
  name: BeginSendAsync
  nameWithType: SoMail.BeginSendAsync
  fullName: SuperOffice.CRM.Mail.SoMail.BeginSendAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.OutgoingMailSession}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Mail.OutgoingMailSession}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<OutgoingMailSession>
  nameWithType: Task<OutgoingMailSession>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Mail.OutgoingMailSession>
  nameWithType.vb: Task(Of OutgoingMailSession)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Mail.OutgoingMailSession)
  name.vb: Task(Of OutgoingMailSession)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Mail.OutgoingMailSession
    name: OutgoingMailSession
    isExternal: true
    href: SuperOffice.CRM.Mail.OutgoingMailSession.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.OutgoingMailSession
    name: OutgoingMailSession
    isExternal: true
    href: SuperOffice.CRM.Mail.OutgoingMailSession.html
  - name: )
- uid: SuperOffice.CRM.Mail.SoMail.BeginSend*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.BeginSend
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_BeginSend_System_String_System_String_System_String_
  name: BeginSend
  nameWithType: SoMail.BeginSend
  fullName: SuperOffice.CRM.Mail.SoMail.BeginSend
- uid: SuperOffice.CRM.Mail.OutgoingMailSession
  commentId: T:SuperOffice.CRM.Mail.OutgoingMailSession
  parent: SuperOffice.CRM.Mail
  isExternal: true
  href: SuperOffice.CRM.Mail.OutgoingMailSession.html
  name: OutgoingMailSession
  nameWithType: OutgoingMailSession
  fullName: SuperOffice.CRM.Mail.OutgoingMailSession
- uid: SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_GetFolderNameAsync_SuperOffice_CRM_Mail_SoMailFolder_System_Threading_CancellationToken_
  name: GetFolderNameAsync
  nameWithType: SoMail.GetFolderNameAsync
  fullName: SuperOffice.CRM.Mail.SoMail.GetFolderNameAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_GetLoginCredentialsAsync_System_String_System_Threading_CancellationToken_
  name: GetLoginCredentialsAsync
  nameWithType: SoMail.GetLoginCredentialsAsync
  fullName: SuperOffice.CRM.Mail.SoMail.GetLoginCredentialsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Mail.SoMailCredentials}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Mail.SoMailCredentials}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<SoMailCredentials>
  nameWithType: Task<SoMailCredentials>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Mail.SoMailCredentials>
  nameWithType.vb: Task(Of SoMailCredentials)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Mail.SoMailCredentials)
  name.vb: Task(Of SoMailCredentials)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Mail.SoMailCredentials
    name: SoMailCredentials
    isExternal: true
    href: SuperOffice.CRM.Mail.SoMailCredentials.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Mail.SoMailCredentials
    name: SoMailCredentials
    isExternal: true
    href: SuperOffice.CRM.Mail.SoMailCredentials.html
  - name: )
- uid: SuperOffice.CRM.Mail.SoMail.CanRead*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.CanRead
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_CanRead
  name: CanRead
  nameWithType: SoMail.CanRead
  fullName: SuperOffice.CRM.Mail.SoMail.CanRead
- uid: SuperOffice.CRM.Mail.SoMail.CanSend*
  commentId: Overload:SuperOffice.CRM.Mail.SoMail.CanSend
  isExternal: true
  href: SuperOffice.CRM.Mail.SoMail.html#SuperOffice_CRM_Mail_SoMail_CanSend
  name: CanSend
  nameWithType: SoMail.CanSend
  fullName: SuperOffice.CRM.Mail.SoMail.CanSend
