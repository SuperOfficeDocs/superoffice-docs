### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  commentId: T:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  id: IAggregationTwoPassPlugin
  parent: SuperOffice.CRM.ArchiveLists.Aggregation
  children:
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue(SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin)
  langs:
  - csharp
  - vb
  name: IAggregationTwoPassPlugin
  nameWithType: IAggregationTwoPassPlugin
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nInterface implemented by aggregation plugins that need a second pass, typically\n&quot;Percentage of total&quot;\n"
  remarks: "\nAs opposed to normal aggregators, where detail lines get a snapshot of the aggregated\nvalue when they are born, two-aggregators need to implement a real cloning method - \notherwise they will not survive in the detail rows, where they need to do the pass-2 calculations.\n"
  syntax:
    content: 'public interface IAggregationTwoPassPlugin : IAggregationPlugin, IPlugin'
    content.vb: >-
      Public Interface IAggregationTwoPassPlugin
          Inherits IAggregationPlugin, IPlugin
  inheritedMembers:
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue(SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin)
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue(SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin)
  id: SetOutsideValue(SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin)
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  langs:
  - csharp
  - vb
  name: SetOutsideValue(IAggregationTwoPassPlugin)
  nameWithType: IAggregationTwoPassPlugin.SetOutsideValue(IAggregationTwoPassPlugin)
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue(SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nCalled on the detail level, with a reference to\nthe <strong>same</strong> column, but the instance of the aggregator\nthat is in the nearest parent level.\n"
  remarks: "\nTo implement a percentage of total, the normal AddItem should store\nits individual items. The detail level will then be able to access\nthe sum of items, by calling (private) methods on its parent-level\ninstance, and compute its own percentage item afterwards.\n"
  syntax:
    content: void SetOutsideValue(IAggregationTwoPassPlugin parentInstance)
    parameters:
    - id: parentInstance
      type: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
    content.vb: Sub SetOutsideValue(parentInstance As IAggregationTwoPassPlugin)
  overload: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue*
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone
  id: Clone
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: IAggregationTwoPassPlugin.Clone()
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nCreate a clone suitable for the detail level\n"
  syntax:
    content: IAggregationTwoPassPlugin Clone()
    return:
      type: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
    content.vb: Function Clone As IAggregationTwoPassPlugin
  overload: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone*
references:
- uid: SuperOffice.CRM.ArchiveLists.Aggregation
  commentId: N:SuperOffice.CRM.ArchiveLists.Aggregation
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists.Aggregation
  nameWithType: SuperOffice.CRM.ArchiveLists.Aggregation
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  isExternal: true
  name: SetModifiers(String[])
  nameWithType: IAggregationPlugin.SetModifiers(String[])
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  nameWithType.vb: IAggregationPlugin.SetModifiers(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String())
  name.vb: SetModifiers(String())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
    name: SetModifiers
    nameWithType: IAggregationPlugin.SetModifiers
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
    name: SetModifiers
    nameWithType: IAggregationPlugin.SetModifiers
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  isExternal: true
  name: AddItem(ArchiveColumnData)
  nameWithType: IAggregationPlugin.AddItem(ArchiveColumnData)
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
    name: AddItem
    nameWithType: IAggregationPlugin.AddItem
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    name: ArchiveColumnData
    nameWithType: ArchiveColumnData
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
    name: AddItem
    nameWithType: IAggregationPlugin.AddItem
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    name: ArchiveColumnData
    nameWithType: ArchiveColumnData
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  isExternal: true
  name: AddItem(ArchiveColumnData[])
  nameWithType: IAggregationPlugin.AddItem(ArchiveColumnData[])
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  nameWithType.vb: IAggregationPlugin.AddItem(ArchiveColumnData())
  fullName.vb: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData())
  name.vb: AddItem(ArchiveColumnData())
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
    name: AddItem
    nameWithType: IAggregationPlugin.AddItem
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    name: ArchiveColumnData
    nameWithType: ArchiveColumnData
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
    name: AddItem
    nameWithType: IAggregationPlugin.AddItem
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    name: ArchiveColumnData
    nameWithType: ArchiveColumnData
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  isExternal: true
  name: GetAggregatedValue()
  nameWithType: IAggregationPlugin.GetAggregatedValue()
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
    name: GetAggregatedValue
    nameWithType: IAggregationPlugin.GetAggregatedValue
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
    name: GetAggregatedValue
    nameWithType: IAggregationPlugin.GetAggregatedValue
    fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IAggregationTwoPassPlugin, To>()
  nameWithType: EnumUtil.MapEnums<IAggregationTwoPassPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IAggregationTwoPassPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To)()
  name.vb: MapEnums(Of IAggregationTwoPassPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IAggregationTwoPassPlugin, To>
    nameWithType: EnumUtil.MapEnums<IAggregationTwoPassPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IAggregationTwoPassPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of IAggregationTwoPassPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IAggregationTwoPassPlugin, To>()
  nameWithType: Converters.MapEnums<IAggregationTwoPassPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of IAggregationTwoPassPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To)()
  name.vb: MapEnums(Of IAggregationTwoPassPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IAggregationTwoPassPlugin, To>
    nameWithType: Converters.MapEnums<IAggregationTwoPassPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IAggregationTwoPassPlugin, To)
    nameWithType: Converters.MapEnums(Of IAggregationTwoPassPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  commentId: T:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  parent: SuperOffice.CRM.ArchiveLists.Aggregation
  isExternal: true
  name: IAggregationPlugin
  nameWithType: IAggregationPlugin
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue
  isExternal: true
  name: SetOutsideValue
  nameWithType: IAggregationTwoPassPlugin.SetOutsideValue
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.SetOutsideValue
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  commentId: T:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
  parent: SuperOffice.CRM.ArchiveLists.Aggregation
  isExternal: true
  name: IAggregationTwoPassPlugin
  nameWithType: IAggregationTwoPassPlugin
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone
  isExternal: true
  name: Clone
  nameWithType: IAggregationTwoPassPlugin.Clone
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationTwoPassPlugin.Clone
