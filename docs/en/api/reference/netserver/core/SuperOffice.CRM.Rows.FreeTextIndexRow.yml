### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow
  commentId: T:SuperOffice.CRM.Rows.FreeTextIndexRow
  id: FreeTextIndexRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.FreeTextIndexRow.#ctor(SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase)
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentContactId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextindexId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextwordsId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentInfile
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnerrecordId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnertableId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentRecordId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._currentTableId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedContactId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextindexId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextwordsId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedInfile
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnerrecordId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnertableId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedRecordId
  - SuperOffice.CRM.Rows.FreeTextIndexRow._persistedTableId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew
  - SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo
  - SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.FreeTextIndexTableInfo)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.Infile
  - SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty
  - SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew
  - SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.Item(System.String)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync(System.Boolean)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.Reset
  - SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew
  - SuperOffice.CRM.Rows.FreeTextIndexRow.TableId
  - SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo
  - SuperOffice.CRM.Rows.FreeTextIndexRow.ToString
  - SuperOffice.CRM.Rows.FreeTextIndexRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  langs:
  - csharp
  - vb
  name: FreeTextIndexRow
  nameWithType: FreeTextIndexRow
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThis is the index table for the free text search function. Each word in FreeTextWords can have multiple occurrences in this table. Each record in this table points to one occurrence of the word, and points to both the table in which the word occurs (which might be contact or text), and also a pointer to the owner table (which is one of contact, person, project, appointment or sale). \n<br />Row Object for table &apos;freetextindex&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) FreeTextIndexRow <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.FreeTextIndexRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.FreeTextIndexRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.FreeTextIndexTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.FreeTextIndexTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <see cref=\"!:SuperOffice.CRM.Rows.FreeTextIndexRows.GetFromReader\"></see>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table FreeTextIndex are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class FreeTextIndexRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable'
    content.vb: >-
      Public Class FreeTextIndexRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._isSaving
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.SaveAsync
  - SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
  - SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  - SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
  - SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  extensionMethods:
  - SuperOffice.CRM.Rows.FreeTextIndexRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.FreeTextIndexRow.SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
  - SuperOffice.CRM.Rows.FreeTextIndexRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextindexId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextindexId
  id: _persistedFreetextindexId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedFreetextindexId
  nameWithType: FreeTextIndexRow._persistedFreetextindexId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextindexId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedFreetextindexId
    return:
      type: System.Int32
    content.vb: Protected _persistedFreetextindexId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextwordsId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextwordsId
  id: _persistedFreetextwordsId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedFreetextwordsId
  nameWithType: FreeTextIndexRow._persistedFreetextwordsId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedFreetextwordsId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedFreetextwordsId
    return:
      type: System.Int32
    content.vb: Protected _persistedFreetextwordsId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedTableId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedTableId
  id: _persistedTableId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedTableId
  nameWithType: FreeTextIndexRow._persistedTableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedTableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.TableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedTableId
    return:
      type: System.Int16
    content.vb: Protected _persistedTableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedRecordId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedRecordId
  id: _persistedRecordId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedRecordId
  nameWithType: FreeTextIndexRow._persistedRecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedRecordId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRecordId
    return:
      type: System.Int32
    content.vb: Protected _persistedRecordId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnertableId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnertableId
  id: _persistedOwnertableId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedOwnertableId
  nameWithType: FreeTextIndexRow._persistedOwnertableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnertableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedOwnertableId
    return:
      type: System.Int16
    content.vb: Protected _persistedOwnertableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnerrecordId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnerrecordId
  id: _persistedOwnerrecordId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedOwnerrecordId
  nameWithType: FreeTextIndexRow._persistedOwnerrecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedOwnerrecordId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedOwnerrecordId
    return:
      type: System.Int32
    content.vb: Protected _persistedOwnerrecordId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedInfile
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedInfile
  id: _persistedInfile
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedInfile
  nameWithType: FreeTextIndexRow._persistedInfile
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedInfile
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.Infile\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedInfile
    return:
      type: System.Int16
    content.vb: Protected _persistedInfile As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedContactId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._persistedContactId
  id: _persistedContactId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _persistedContactId
  nameWithType: FreeTextIndexRow._persistedContactId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._persistedContactId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedContactId
    return:
      type: System.Int32
    content.vb: Protected _persistedContactId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextindexId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextindexId
  id: _currentFreetextindexId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentFreetextindexId
  nameWithType: FreeTextIndexRow._currentFreetextindexId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextindexId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentFreetextindexId
    return:
      type: System.Int32
    content.vb: Protected _currentFreetextindexId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextwordsId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextwordsId
  id: _currentFreetextwordsId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentFreetextwordsId
  nameWithType: FreeTextIndexRow._currentFreetextwordsId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentFreetextwordsId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentFreetextwordsId
    return:
      type: System.Int32
    content.vb: Protected _currentFreetextwordsId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentTableId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentTableId
  id: _currentTableId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentTableId
  nameWithType: FreeTextIndexRow._currentTableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentTableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.TableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentTableId
    return:
      type: System.Int16
    content.vb: Protected _currentTableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentRecordId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentRecordId
  id: _currentRecordId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentRecordId
  nameWithType: FreeTextIndexRow._currentRecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentRecordId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRecordId
    return:
      type: System.Int32
    content.vb: Protected _currentRecordId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnertableId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnertableId
  id: _currentOwnertableId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentOwnertableId
  nameWithType: FreeTextIndexRow._currentOwnertableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnertableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentOwnertableId
    return:
      type: System.Int16
    content.vb: Protected _currentOwnertableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnerrecordId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnerrecordId
  id: _currentOwnerrecordId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentOwnerrecordId
  nameWithType: FreeTextIndexRow._currentOwnerrecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentOwnerrecordId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentOwnerrecordId
    return:
      type: System.Int32
    content.vb: Protected _currentOwnerrecordId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentInfile
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentInfile
  id: _currentInfile
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentInfile
  nameWithType: FreeTextIndexRow._currentInfile
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentInfile
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.Infile\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentInfile
    return:
      type: System.Int16
    content.vb: Protected _currentInfile As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow._currentContactId
  commentId: F:SuperOffice.CRM.Rows.FreeTextIndexRow._currentContactId
  id: _currentContactId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: _currentContactId
  nameWithType: FreeTextIndexRow._currentContactId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow._currentContactId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentContactId
    return:
      type: System.Int32
    content.vb: Protected _currentContactId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: FreeTextIndexRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: FreeTextIndexRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: FreeTextIndexRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.#ctor(SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.#ctor(SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase)'
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: FreeTextIndexRow(FreeTextIndexRow.FreeTextIndexRowIdxBase)
  nameWithType: FreeTextIndexRow.FreeTextIndexRow(FreeTextIndexRow.FreeTextIndexRowIdxBase)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRow(SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nThis is the index table for the free text search function. Each word in FreeTextWords can have multiple occurrences in this table. Each record in this table points to one occurrence of the word, and points to both the table in which the word occurs (which might be contact or text), and also a pointer to the owner table (which is one of contact, person, project, appointment or sale). \n"
  syntax:
    content: protected FreeTextIndexRow(FreeTextIndexRow.FreeTextIndexRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As FreeTextIndexRow.FreeTextIndexRowIdxBase)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: FreeTextIndexRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the FreeTextIndexRow object.\nThis is the index table for the free text search function. Each word in FreeTextWords can have multiple occurrences in this table. Each record in this table points to one occurrence of the word, and points to both the table in which the word occurs (which might be contact or text), and also a pointer to the owner table (which is one of contact, person, project, appointment or sale). \n"
  syntax:
    content: public static FreeTextIndexRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.FreeTextIndexRow
      description: A new instance of the FreeTextIndexRow object.
    content.vb: Public Shared Function CreateNew As FreeTextIndexRow
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.FreeTextIndexTableInfo)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.FreeTextIndexTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.FreeTextIndexTableInfo)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, FreeTextIndexTableInfo)
  nameWithType: FreeTextIndexRow.GetFromReader(SoDataReader, FreeTextIndexTableInfo)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.FreeTextIndexTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the FreeTextIndexRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nThis is the index table for the free text search function. Each word in FreeTextWords can have multiple occurrences in this table. Each record in this table points to one occurrence of the word, and points to both the table in which the word occurs (which might be contact or text), and also a pointer to the owner table (which is one of contact, person, project, appointment or sale). \n"
  syntax:
    content: public static FreeTextIndexRow GetFromReader(SoDataReader reader, FreeTextIndexTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.FreeTextIndexTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.FreeTextIndexTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.FreeTextIndexRow
      description: A new instance of the FreeTextIndexRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As FreeTextIndexTableInfo) As FreeTextIndexRow
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch,System.Threading.CancellationToken)
  id: GetFromCustomSearchAsync(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearchAsync(FreeTextIndexRow.CustomSearch, CancellationToken)
  nameWithType: FreeTextIndexRow.GetFromCustomSearchAsync(FreeTextIndexRow.CustomSearch, CancellationToken)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the FreeTextIndexRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public static Task<FreeTextIndexRow> GetFromCustomSearchAsync(FreeTextIndexRow.CustomSearch query, CancellationToken cancellationToken = null)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch
      description: The custom search to execute against the database
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.FreeTextIndexRow}
      description: A new instance of the FreeTextIndexRow object, reflecting the result of the query.
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Shared Function GetFromCustomSearchAsync(query As FreeTextIndexRow.CustomSearch, cancellationToken As CancellationToken = Nothing) As Task(Of FreeTextIndexRow)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxFreetextindexIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: GetFromIdxFreetextindexIdAsync(Int32, CancellationToken)
  nameWithType: FreeTextIndexRow.GetFromIdxFreetextindexIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the FreeTextIndexRow object, by querying the database table via the index &apos;IDXFtIdxId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the FreeTextIndex table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static Task<FreeTextIndexRow> GetFromIdxFreetextindexIdAsync(int freetextindexId, CancellationToken cancellationToken = null)
    parameters:
    - id: freetextindexId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.FreeTextIndexRow}
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxFreetextindexIdAsync(freetextindexId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of FreeTextIndexRow)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  id: SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  nameWithType: FreeTextIndexRow.SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override Task SetDefaultsAsync(DefaulterStrategy strategy, CancellationToken cancellationToken = null)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function SetDefaultsAsync(strategy As DefaulterStrategy, cancellationToken As CancellationToken = Nothing) As Task
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.ToString
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FreeTextIndexRow.ToString()
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: FreeTextIndexRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Reset
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: FreeTextIndexRow.Reset()
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: FreeTextIndexRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: FreeTextIndexRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  id: OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: OnSaveAsync(BatchSave)
  nameWithType: FreeTextIndexRow.OnSaveAsync(BatchSave)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override Task OnSaveAsync(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnSaveAsync(batchSave As BatchSave) As Task
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync(System.Boolean)
  id: OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: OnSavedAsync(Boolean)
  nameWithType: FreeTextIndexRow.OnSavedAsync(Boolean)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override Task OnSavedAsync(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnSavedAsync(bSucceeded As Boolean) As Task
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: FreeTextIndexRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(FreeTextIndexRow.CustomSearch)
  nameWithType: FreeTextIndexRow.GetFromCustomSearch(FreeTextIndexRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch(SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the FreeTextIndexRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static FreeTextIndexRow GetFromCustomSearch(FreeTextIndexRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.FreeTextIndexRow
      description: A new instance of the FreeTextIndexRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As FreeTextIndexRow.CustomSearch) As FreeTextIndexRow
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: FreeTextIndexRow.Item[String]
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: FreeTextIndexRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.FreeTextIndexRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: FreeTextIndexRow.TableInfo
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo
  id: FreeTextIndexTableInfo
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: FreeTextIndexTableInfo
  nameWithType: FreeTextIndexRow.FreeTextIndexTableInfo
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.FreeTextIndexTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public FreeTextIndexTableInfo FreeTextIndexTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.FreeTextIndexTableInfo
    content.vb: Public ReadOnly Property FreeTextIndexTableInfo As FreeTextIndexTableInfo
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: FreeTextIndexRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: FreeTextIndexRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: FreeTextIndexRow.IsNew
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: FreeTextIndexRow.IsDirty
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: FreeTextIndexRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId
  id: FreetextindexId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: FreetextindexId
  nameWithType: FreeTextIndexRow.FreetextindexId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Primary key \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>        \n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int FreetextindexId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property FreetextindexId As Integer
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId
  id: FreetextwordsId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: FreetextwordsId
  nameWithType: FreeTextIndexRow.FreetextwordsId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Reference to word \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int FreetextwordsId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property FreetextwordsId As Integer
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.TableId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.TableId
  id: TableId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: TableId
  nameWithType: FreeTextIndexRow.TableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.TableId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Source table number - could be main (contact, person, etc) or sub-tables like address, email \n"
  remarks: "\nOriginal type in dictionary:  TableNumber.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short TableId { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property TableId As Short
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.TableId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId
  id: RecordId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: RecordId
  nameWithType: FreeTextIndexRow.RecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Source record - the row that contains the word. Might be contact record, or an address or phone \n"
  remarks: "\nOriginal type in dictionary:  RecordId.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int RecordId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RecordId As Integer
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId
  id: OwnertableId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: OwnertableId
  nameWithType: FreeTextIndexRow.OwnertableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Logical source table (high-level), like contact or project \n"
  remarks: "\nOriginal type in dictionary:  TableNumber.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short OwnertableId { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property OwnertableId As Short
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId
  id: OwnerrecordId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: OwnerrecordId
  nameWithType: FreeTextIndexRow.OwnerrecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Logical source record. The contact, project, sale that the source belongs to. \n"
  remarks: "\nOriginal type in dictionary:  RecordId.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int OwnerrecordId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property OwnerrecordId As Integer
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Infile
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.Infile
  id: Infile
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: Infile
  nameWithType: FreeTextIndexRow.Infile
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Infile
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Word found in file (0=word found in database) \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short Infile { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Infile As Short
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.Infile*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId
  commentId: P:SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Rows.FreeTextIndexRow
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: FreeTextIndexRow.ContactId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Set for contacts and person records to allow cross-table free-text searches. 0 for non-contact, non-person \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int ContactId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ContactId As Integer
  overload: SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._isSaving
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._isSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _isSaving
  nameWithType: TableRowBase._isSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase._isSaving
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoadAsync(ITableRowLoadHandler, CancellationToken)
  nameWithType: TableRowBase.RowLoadAsync(ITableRowLoadHandler, CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
    name: RowLoadAsync
    nameWithType: TableRowBase.RowLoadAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
    name: RowLoadAsync
    nameWithType: TableRowBase.RowLoadAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaultsAsync(CancellationToken)
  nameWithType: TableRowBase.SetDefaultsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaultsAsync(DashboardTileDefinitionRow, String, CancellationToken)
  nameWithType: TableRowBase.SetDefaultsAsync(DashboardTileDefinitionRow, String, CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetForeignKeyHelperAsync(CancellationToken)
  nameWithType: TableRowBase.GetForeignKeyHelperAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
    name: GetForeignKeyHelperAsync
    nameWithType: TableRowBase.GetForeignKeyHelperAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
    name: GetForeignKeyHelperAsync
    nameWithType: TableRowBase.GetForeignKeyHelperAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SaveAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SaveAsync()
  nameWithType: TableRowBase.SaveAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SaveAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    name: SaveAsync
    nameWithType: TableRowBase.SaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    name: SaveAsync
    nameWithType: TableRowBase.SaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: DeleteAsync()
  nameWithType: TableRowBase.DeleteAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    name: DeleteAsync
    nameWithType: TableRowBase.DeleteAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    name: DeleteAsync
    nameWithType: TableRowBase.DeleteAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: add_OnElementSaved(OnSaved)
  nameWithType: TableRowBase.add_OnElementSaved(OnSaved)
  fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: TableRowBase.add_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: TableRowBase.add_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: remove_OnElementSaved(OnSaved)
  nameWithType: TableRowBase.remove_OnElementSaved(OnSaved)
  fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: TableRowBase.remove_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: TableRowBase.remove_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: add_OnElementIdUpdate(OnIdUpdate)
  nameWithType: TableRowBase.add_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: TableRowBase.add_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: TableRowBase.add_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: remove_OnElementIdUpdate(OnIdUpdate)
  nameWithType: TableRowBase.remove_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: TableRowBase.remove_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: TableRowBase.remove_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdateAsync()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: INestedPersist.OnPreIdUpdateAsync
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdateAsync()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: INestedPersist.OnIdUpdateAsync
    nameWithType: TableRowBase.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaveAsync(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSaveAsync(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSaveAsync
    nameWithType: TableRowBase.INestedPersist.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSaveAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSavedAsync(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSavedAsync(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: INestedPersist.OnSavedAsync
    nameWithType: TableRowBase.INestedPersist.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSavedAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdateAsync()
  nameWithType: TableRowBase.OnPreIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: TableRowBase.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: TableRowBase.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdateAsync()
  nameWithType: TableRowBase.OnIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: TableRowBase.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: TableRowBase.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: add_OnUpdateField(UpdateField)
  nameWithType: PrivateSave.add_OnUpdateField(UpdateField)
  fullName: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: add_OnUpdateField
    nameWithType: PrivateSave.add_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: add_OnUpdateField
    nameWithType: PrivateSave.add_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: remove_OnUpdateField(UpdateField)
  nameWithType: PrivateSave.remove_OnUpdateField(UpdateField)
  fullName: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: remove_OnUpdateField
    nameWithType: PrivateSave.remove_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: remove_OnUpdateField
    nameWithType: PrivateSave.remove_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: SetTicketLogAction(TicketLogAction, String)
  nameWithType: PrivateSave.SetTicketLogAction(TicketLogAction, String)
  fullName: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction, System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
    name: SetTicketLogAction
    nameWithType: PrivateSave.SetTicketLogAction
    fullName: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TicketLogAction
    name: TicketLogAction
    nameWithType: TicketLogAction
    fullName: SuperOffice.Data.TicketLogAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
    name: SetTicketLogAction
    nameWithType: PrivateSave.SetTicketLogAction
    fullName: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TicketLogAction
    name: TicketLogAction
    nameWithType: TicketLogAction
    fullName: SuperOffice.Data.TicketLogAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
  commentId: P:SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: DoNotWriteTraveltransactionLog
  nameWithType: PrivateSave.DoNotWriteTraveltransactionLog
  fullName: SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
  commentId: F:SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AdditionalInfo
  nameWithType: SqlCommand.AdditionalInfo
  fullName: SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<FreeTextIndexRow, To>()
  nameWithType: EnumUtil.MapEnums<FreeTextIndexRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.FreeTextIndexRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of FreeTextIndexRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.FreeTextIndexRow, To)()
  name.vb: MapEnums(Of FreeTextIndexRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<FreeTextIndexRow, To>
    nameWithType: EnumUtil.MapEnums<FreeTextIndexRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.FreeTextIndexRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of FreeTextIndexRow, To)
    nameWithType: EnumUtil.MapEnums(Of FreeTextIndexRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.FreeTextIndexRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  name: ExecuteReaderAsync(Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteReaderAsync(Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  name: ExecuteScalarAsync<T>(CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  name: ExecuteScalarAsync<T>(Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(Boolean, CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync(CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
  parent: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions
  definition: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
  name: ToRecordData()
  nameWithType: FreeTextIndexRecordDataExtensions.ToRecordData()
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
    name: ToRecordData
    nameWithType: FreeTextIndexRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
    name: ToRecordData
    nameWithType: FreeTextIndexRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<FreeTextIndexRow, To>()
  nameWithType: Converters.MapEnums<FreeTextIndexRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.FreeTextIndexRow, To>()
  nameWithType.vb: Converters.MapEnums(Of FreeTextIndexRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.FreeTextIndexRow, To)()
  name.vb: MapEnums(Of FreeTextIndexRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<FreeTextIndexRow, To>
    nameWithType: Converters.MapEnums<FreeTextIndexRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.FreeTextIndexRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of FreeTextIndexRow, To)
    nameWithType: Converters.MapEnums(Of FreeTextIndexRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.FreeTextIndexRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteReaderAsync(SqlCommand, Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteReaderAsync(SqlCommand, Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteScalarAsync<T>(SqlCommand, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(SqlCommand, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(SuperOffice.Data.SQL.SqlCommand, System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(SqlCommand, CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(SuperOffice.Data.SQL.SqlCommand, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(SqlCommand, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteScalarAsync<T>(SqlCommand, Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(SqlCommand, Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(SuperOffice.Data.SQL.SqlCommand, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(SqlCommand, Boolean, CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(SuperOffice.Data.SQL.SqlCommand, System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(SqlCommand, Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteNonQueryAsync(SqlCommand, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync(SqlCommand, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
  commentId: M:SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
  isExternal: true
  name: ToRecordData(FreeTextIndexRow)
  nameWithType: FreeTextIndexRecordDataExtensions.ToRecordData(FreeTextIndexRow)
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
    name: ToRecordData
    nameWithType: FreeTextIndexRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRow
    name: FreeTextIndexRow
    nameWithType: FreeTextIndexRow
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.FreeTextIndexRow)
    name: ToRecordData
    nameWithType: FreeTextIndexRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRow
    name: FreeTextIndexRow
    nameWithType: FreeTextIndexRow
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: FreeTextIndexRecordDataExtensions
  nameWithType: FreeTextIndexRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: FreeTextIndexRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InternalSetValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: FreeTextIndexRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: FreeTextIndexRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.#ctor
  isExternal: true
  name: FreeTextIndexRow
  nameWithType: FreeTextIndexRow.FreeTextIndexRow
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRow
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: FreeTextIndexRow.FreeTextIndexRowIdxBase
  nameWithType: FreeTextIndexRow.FreeTextIndexRowIdxBase
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexRowIdxBase
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: FreeTextIndexRow.CreateNew
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.CreateNew
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow
  commentId: T:SuperOffice.CRM.Rows.FreeTextIndexRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: FreeTextIndexRow
  nameWithType: FreeTextIndexRow
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: FreeTextIndexRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.FreeTextIndexTableInfo
  commentId: T:SuperOffice.CRM.Data.FreeTextIndexTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: FreeTextIndexTableInfo
  nameWithType: FreeTextIndexTableInfo
  fullName: SuperOffice.CRM.Data.FreeTextIndexTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync
  isExternal: true
  name: GetFromCustomSearchAsync
  nameWithType: FreeTextIndexRow.GetFromCustomSearchAsync
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearchAsync
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: FreeTextIndexRow.CustomSearch
  nameWithType: FreeTextIndexRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.CustomSearch
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.FreeTextIndexRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.FreeTextIndexRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<FreeTextIndexRow>
  nameWithType: Task<FreeTextIndexRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.FreeTextIndexRow>
  nameWithType.vb: Task(Of FreeTextIndexRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.FreeTextIndexRow)
  name.vb: Task(Of FreeTextIndexRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRow
    name: FreeTextIndexRow
    nameWithType: FreeTextIndexRow
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.FreeTextIndexRow
    name: FreeTextIndexRow
    nameWithType: FreeTextIndexRow
    fullName: SuperOffice.CRM.Rows.FreeTextIndexRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync
  isExternal: true
  name: GetFromIdxFreetextindexIdAsync
  nameWithType: FreeTextIndexRow.GetFromIdxFreetextindexIdAsync
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromIdxFreetextindexIdAsync
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  nameWithType: TableRowBase.SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync
  isExternal: true
  name: SetDefaultsAsync
  nameWithType: FreeTextIndexRow.SetDefaultsAsync
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.SetDefaultsAsync
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.ToString
  isExternal: true
  name: ToString
  nameWithType: FreeTextIndexRow.ToString
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: FreeTextIndexRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.Reset
  isExternal: true
  name: Reset
  nameWithType: FreeTextIndexRow.Reset
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: FreeTextIndexRow.OnLoad
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: FreeTextIndexRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaveAsync(BatchSave)
  nameWithType: TableRowBase.OnSaveAsync(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: TableRowBase.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: TableRowBase.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync
  isExternal: true
  name: OnSaveAsync
  nameWithType: FreeTextIndexRow.OnSaveAsync
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSaveAsync
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSavedAsync(Boolean)
  nameWithType: TableRowBase.OnSavedAsync(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: TableRowBase.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: TableRowBase.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync
  isExternal: true
  name: OnSavedAsync
  nameWithType: FreeTextIndexRow.OnSavedAsync
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OnSavedAsync
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.Validate
  isExternal: true
  name: Validate
  nameWithType: FreeTextIndexRow.Validate
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: FreeTextIndexRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.Item
  isExternal: true
  name: Item
  nameWithType: FreeTextIndexRow.Item
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: FreeTextIndexRow.TableInfo
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.TableInfo
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo
  isExternal: true
  name: FreeTextIndexTableInfo
  nameWithType: FreeTextIndexRow.FreeTextIndexTableInfo
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreeTextIndexTableInfo
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: FreeTextIndexRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: FreeTextIndexRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: FreeTextIndexRow.IsNew
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: FreeTextIndexRow.IsDirty
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: FreeTextIndexRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId
  isExternal: true
  name: FreetextindexId
  nameWithType: FreeTextIndexRow.FreetextindexId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextindexId
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId
  isExternal: true
  name: FreetextwordsId
  nameWithType: FreeTextIndexRow.FreetextwordsId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.FreetextwordsId
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.TableId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.TableId
  isExternal: true
  name: TableId
  nameWithType: FreeTextIndexRow.TableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.TableId
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId
  isExternal: true
  name: RecordId
  nameWithType: FreeTextIndexRow.RecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.RecordId
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId
  isExternal: true
  name: OwnertableId
  nameWithType: FreeTextIndexRow.OwnertableId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnertableId
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId
  isExternal: true
  name: OwnerrecordId
  nameWithType: FreeTextIndexRow.OwnerrecordId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.OwnerrecordId
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.Infile*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.Infile
  isExternal: true
  name: Infile
  nameWithType: FreeTextIndexRow.Infile
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.Infile
- uid: SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId
  isExternal: true
  name: ContactId
  nameWithType: FreeTextIndexRow.ContactId
  fullName: SuperOffice.CRM.Rows.FreeTextIndexRow.ContactId
