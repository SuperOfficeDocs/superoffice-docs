### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoftTrigger
  commentId: T:SuperOffice.Data.SoftTrigger
  id: SoftTrigger
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoftTrigger.#ctor(SuperOffice.Data.ISoftTriggerPlugin[])
  - SuperOffice.Data.SoftTrigger.HasSubscribers(System.String)
  - SuperOffice.Data.SoftTrigger.SubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  - SuperOffice.Data.SoftTrigger.SubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  - SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  - SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  langs:
  - csharp
  - vb
  name: SoftTrigger
  nameWithType: SoftTrigger
  fullName: SuperOffice.Data.SoftTrigger
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nUtility class for subscribing to changes in the database.  The current implementation only handles\nchanges made from this instance of NetServer.\n"
  syntax:
    content: >-
      [SoInject("Database")]

      public class SoftTrigger : Object
    content.vb: >-
      <SoInject("Database")>

      Public Class SoftTrigger
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Data.SoftTrigger.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoftTrigger.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.SoftTrigger.#ctor(SuperOffice.Data.ISoftTriggerPlugin[])
  commentId: M:SuperOffice.Data.SoftTrigger.#ctor(SuperOffice.Data.ISoftTriggerPlugin[])
  id: '#ctor(SuperOffice.Data.ISoftTriggerPlugin[])'
  parent: SuperOffice.Data.SoftTrigger
  langs:
  - csharp
  - vb
  name: SoftTrigger(ISoftTriggerPlugin[])
  nameWithType: SoftTrigger.SoftTrigger(ISoftTriggerPlugin[])
  fullName: SuperOffice.Data.SoftTrigger.SoftTrigger(SuperOffice.Data.ISoftTriggerPlugin[])
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nConstructur used for unit-testing SoftTrigger and SoftTrigger-plugin implementations.\n"
  syntax:
    content: public SoftTrigger(ISoftTriggerPlugin[] plugins)
    parameters:
    - id: plugins
      type: SuperOffice.Data.ISoftTriggerPlugin[]
    content.vb: Public Sub New(plugins As ISoftTriggerPlugin())
  overload: SuperOffice.Data.SoftTrigger.#ctor*
  nameWithType.vb: SoftTrigger.SoftTrigger(ISoftTriggerPlugin())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Data.SoftTrigger.SoftTrigger(SuperOffice.Data.ISoftTriggerPlugin())
  name.vb: SoftTrigger(ISoftTriggerPlugin())
- uid: SuperOffice.Data.SoftTrigger.HasSubscribers(System.String)
  commentId: M:SuperOffice.Data.SoftTrigger.HasSubscribers(System.String)
  id: HasSubscribers(System.String)
  parent: SuperOffice.Data.SoftTrigger
  langs:
  - csharp
  - vb
  name: HasSubscribers(String)
  nameWithType: SoftTrigger.HasSubscribers(String)
  fullName: SuperOffice.Data.SoftTrigger.HasSubscribers(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nCheck if any pre or post change subscribers are registered for a given table.\n"
  syntax:
    content: public bool HasSubscribers(string tableName)
    parameters:
    - id: tableName
      type: System.String
      description: Table name
    return:
      type: System.Boolean
    content.vb: Public Function HasSubscribers(tableName As String) As Boolean
  overload: SuperOffice.Data.SoftTrigger.HasSubscribers*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoftTrigger.SubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  commentId: M:SuperOffice.Data.SoftTrigger.SubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  id: SubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  parent: SuperOffice.Data.SoftTrigger
  langs:
  - csharp
  - vb
  name: SubscribeOnPreChange(String, SoftTrigger.OnChange)
  nameWithType: SoftTrigger.SubscribeOnPreChange(String, SoftTrigger.OnChange)
  fullName: SuperOffice.Data.SoftTrigger.SubscribeOnPreChange(System.String, SuperOffice.Data.SoftTrigger.OnChange)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nSubscribe to event raised before the update command is sent to the database.\n"
  syntax:
    content: public void SubscribeOnPreChange(string tableName, SoftTrigger.OnChange callback)
    parameters:
    - id: tableName
      type: System.String
      description: Table subscribing to modifications for.
    - id: callback
      type: SuperOffice.Data.SoftTrigger.OnChange
      description: Callback called when modifications in the database is carried out.
    content.vb: Public Sub SubscribeOnPreChange(tableName As String, callback As SoftTrigger.OnChange)
  overload: SuperOffice.Data.SoftTrigger.SubscribeOnPreChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  commentId: M:SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  id: UnsubscribeOnPreChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  parent: SuperOffice.Data.SoftTrigger
  langs:
  - csharp
  - vb
  name: UnsubscribeOnPreChange(String, SoftTrigger.OnChange)
  nameWithType: SoftTrigger.UnsubscribeOnPreChange(String, SoftTrigger.OnChange)
  fullName: SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange(System.String, SuperOffice.Data.SoftTrigger.OnChange)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nUnsubscribe to event raised before the update command is sent to the database.\n"
  syntax:
    content: public void UnsubscribeOnPreChange(string tableName, SoftTrigger.OnChange callback)
    parameters:
    - id: tableName
      type: System.String
      description: Table subscribing to modifications for.
    - id: callback
      type: SuperOffice.Data.SoftTrigger.OnChange
      description: Callback called when modifications in the database is carried out.
    content.vb: Public Sub UnsubscribeOnPreChange(tableName As String, callback As SoftTrigger.OnChange)
  overload: SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoftTrigger.SubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  commentId: M:SuperOffice.Data.SoftTrigger.SubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  id: SubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  parent: SuperOffice.Data.SoftTrigger
  langs:
  - csharp
  - vb
  name: SubscribeOnPostChange(String, SoftTrigger.OnChange)
  nameWithType: SoftTrigger.SubscribeOnPostChange(String, SoftTrigger.OnChange)
  fullName: SuperOffice.Data.SoftTrigger.SubscribeOnPostChange(System.String, SuperOffice.Data.SoftTrigger.OnChange)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nSubscribe to event raised after the update command is sent to the database.\n"
  syntax:
    content: public void SubscribeOnPostChange(string tableName, SoftTrigger.OnChange callback)
    parameters:
    - id: tableName
      type: System.String
      description: Table subscribing to modifications for.
    - id: callback
      type: SuperOffice.Data.SoftTrigger.OnChange
      description: Callback called when modifications in the database is carried out.
    content.vb: Public Sub SubscribeOnPostChange(tableName As String, callback As SoftTrigger.OnChange)
  overload: SuperOffice.Data.SoftTrigger.SubscribeOnPostChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  commentId: M:SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  id: UnsubscribeOnPostChange(System.String,SuperOffice.Data.SoftTrigger.OnChange)
  parent: SuperOffice.Data.SoftTrigger
  langs:
  - csharp
  - vb
  name: UnsubscribeOnPostChange(String, SoftTrigger.OnChange)
  nameWithType: SoftTrigger.UnsubscribeOnPostChange(String, SoftTrigger.OnChange)
  fullName: SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange(System.String, SuperOffice.Data.SoftTrigger.OnChange)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nUnsubscribe to event raised after the update command is sent to the database.\n"
  syntax:
    content: public void UnsubscribeOnPostChange(string tableName, SoftTrigger.OnChange callback)
    parameters:
    - id: tableName
      type: System.String
      description: Table subscribing to modifications for.
    - id: callback
      type: SuperOffice.Data.SoftTrigger.OnChange
      description: Callback called when modifications in the database is carried out.
    content.vb: Public Sub UnsubscribeOnPostChange(tableName As String, callback As SoftTrigger.OnChange)
  overload: SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SoftTrigger.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoftTrigger, To>()
  nameWithType: EnumUtil.MapEnums<SoftTrigger, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoftTrigger, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoftTrigger, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoftTrigger, To)()
  name.vb: MapEnums(Of SoftTrigger, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoftTrigger, To>
    nameWithType: EnumUtil.MapEnums<SoftTrigger, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SoftTrigger, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoftTrigger, To)
    nameWithType: EnumUtil.MapEnums(Of SoftTrigger, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SoftTrigger, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoftTrigger.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoftTrigger, To>()
  nameWithType: Converters.MapEnums<SoftTrigger, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoftTrigger, To>()
  nameWithType.vb: Converters.MapEnums(Of SoftTrigger, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoftTrigger, To)()
  name.vb: MapEnums(Of SoftTrigger, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoftTrigger, To>
    nameWithType: Converters.MapEnums<SoftTrigger, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoftTrigger, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoftTrigger, To)
    nameWithType: Converters.MapEnums(Of SoftTrigger, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoftTrigger, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SoftTrigger.#ctor*
  commentId: Overload:SuperOffice.Data.SoftTrigger.#ctor
  isExternal: true
  name: SoftTrigger
  nameWithType: SoftTrigger.SoftTrigger
  fullName: SuperOffice.Data.SoftTrigger.SoftTrigger
- uid: SuperOffice.Data.ISoftTriggerPlugin[]
  isExternal: true
  name: ISoftTriggerPlugin[]
  nameWithType: ISoftTriggerPlugin[]
  fullName: SuperOffice.Data.ISoftTriggerPlugin[]
  nameWithType.vb: ISoftTriggerPlugin()
  fullName.vb: SuperOffice.Data.ISoftTriggerPlugin()
  name.vb: ISoftTriggerPlugin()
  spec.csharp:
  - uid: SuperOffice.Data.ISoftTriggerPlugin
    name: ISoftTriggerPlugin
    nameWithType: ISoftTriggerPlugin
    fullName: SuperOffice.Data.ISoftTriggerPlugin
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.ISoftTriggerPlugin
    name: ISoftTriggerPlugin
    nameWithType: ISoftTriggerPlugin
    fullName: SuperOffice.Data.ISoftTriggerPlugin
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.SoftTrigger.HasSubscribers*
  commentId: Overload:SuperOffice.Data.SoftTrigger.HasSubscribers
  isExternal: true
  name: HasSubscribers
  nameWithType: SoftTrigger.HasSubscribers
  fullName: SuperOffice.Data.SoftTrigger.HasSubscribers
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.SoftTrigger.SubscribeOnPreChange*
  commentId: Overload:SuperOffice.Data.SoftTrigger.SubscribeOnPreChange
  isExternal: true
  name: SubscribeOnPreChange
  nameWithType: SoftTrigger.SubscribeOnPreChange
  fullName: SuperOffice.Data.SoftTrigger.SubscribeOnPreChange
- uid: SuperOffice.Data.SoftTrigger.OnChange
  commentId: T:SuperOffice.Data.SoftTrigger.OnChange
  parent: SuperOffice.Data
  isExternal: true
  name: SoftTrigger.OnChange
  nameWithType: SoftTrigger.OnChange
  fullName: SuperOffice.Data.SoftTrigger.OnChange
- uid: SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange*
  commentId: Overload:SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange
  isExternal: true
  name: UnsubscribeOnPreChange
  nameWithType: SoftTrigger.UnsubscribeOnPreChange
  fullName: SuperOffice.Data.SoftTrigger.UnsubscribeOnPreChange
- uid: SuperOffice.Data.SoftTrigger.SubscribeOnPostChange*
  commentId: Overload:SuperOffice.Data.SoftTrigger.SubscribeOnPostChange
  isExternal: true
  name: SubscribeOnPostChange
  nameWithType: SoftTrigger.SubscribeOnPostChange
  fullName: SuperOffice.Data.SoftTrigger.SubscribeOnPostChange
- uid: SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange*
  commentId: Overload:SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange
  isExternal: true
  name: UnsubscribeOnPostChange
  nameWithType: SoftTrigger.UnsubscribeOnPostChange
  fullName: SuperOffice.Data.SoftTrigger.UnsubscribeOnPostChange
