### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  commentId: T:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  id: ProgressHandler
  parent: SuperOffice.CRM.BatchProcessing.Plugins
  children:
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.#ctor(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.BatchProcessing.IBatchData)
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler._batchTaskInfo
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ProgressHandler
  nameWithType: ProgressHandler
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Plugins
  syntax:
    content: 'public class ProgressHandler : Object, IProgressHandler'
    content.vb: >-
      Public Class ProgressHandler
          Inherits Object
          Implements IProgressHandler
  inheritance:
  - System.Object
  implements:
  - SuperOffice.Data.IProgressHandler
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler._batchTaskInfo
  commentId: F:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler._batchTaskInfo
  id: _batchTaskInfo
  parent: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  langs:
  - csharp
  - vb
  name: _batchTaskInfo
  nameWithType: ProgressHandler._batchTaskInfo
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler._batchTaskInfo
  type: Field
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Plugins
  syntax:
    content: public readonly BatchTaskInfo _batchTaskInfo
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
    content.vb: Public ReadOnly _batchTaskInfo As BatchTaskInfo
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.#ctor(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.BatchProcessing.IBatchData)
  commentId: M:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.#ctor(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.BatchProcessing.IBatchData)
  id: '#ctor(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.BatchProcessing.IBatchData)'
  parent: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  langs:
  - csharp
  - vb
  name: ProgressHandler(BatchTaskInfo, IBatchData)
  nameWithType: ProgressHandler.ProgressHandler(BatchTaskInfo, IBatchData)
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.ProgressHandler(SuperOffice.CRM.Services.BatchTaskInfo, SuperOffice.CRM.BatchProcessing.IBatchData)
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Plugins
  syntax:
    content: public ProgressHandler(BatchTaskInfo batchTaskInfo, IBatchData batchData)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    - id: batchData
      type: SuperOffice.CRM.BatchProcessing.IBatchData
    content.vb: Public Sub New(batchTaskInfo As BatchTaskInfo, batchData As IBatchData)
  overload: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  id: IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  langs:
  - csharp
  - vb
  name: IncrementProgressAsync(Int32, CancellationToken)
  nameWithType: ProgressHandler.IncrementProgressAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Plugins
  syntax:
    content: public Task IncrementProgressAsync(int numOperationsDone, CancellationToken cancellationToken = null)
    parameters:
    - id: numOperationsDone
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function IncrementProgressAsync(numOperationsDone As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync*
  implements:
  - SuperOffice.Data.IProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  id: SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  langs:
  - csharp
  - vb
  name: SetProgressDescriptionAsync(String, CancellationToken)
  nameWithType: ProgressHandler.SetProgressDescriptionAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Plugins
  syntax:
    content: public Task SetProgressDescriptionAsync(string description, CancellationToken cancellationToken = null)
    parameters:
    - id: description
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetProgressDescriptionAsync(description As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync*
  implements:
  - SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations
  commentId: P:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations
  id: NumOperations
  parent: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler
  langs:
  - csharp
  - vb
  name: NumOperations
  nameWithType: ProgressHandler.NumOperations
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Plugins
  syntax:
    content: public int NumOperations { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumOperations As Integer
  overload: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations*
  implements:
  - SuperOffice.Data.IProgressHandler.NumOperations
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.BatchProcessing.Plugins
  commentId: N:SuperOffice.CRM.BatchProcessing.Plugins
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing.Plugins
  nameWithType: SuperOffice.CRM.BatchProcessing.Plugins
  fullName: SuperOffice.CRM.BatchProcessing.Plugins
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.IProgressHandler
  commentId: T:SuperOffice.Data.IProgressHandler
  parent: SuperOffice.Data
  isExternal: true
  name: IProgressHandler
  nameWithType: IProgressHandler
  fullName: SuperOffice.Data.IProgressHandler
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ProgressHandler, To>()
  nameWithType: EnumUtil.MapEnums<ProgressHandler, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ProgressHandler, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To)()
  name.vb: MapEnums(Of ProgressHandler, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ProgressHandler, To>
    nameWithType: EnumUtil.MapEnums<ProgressHandler, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ProgressHandler, To)
    nameWithType: EnumUtil.MapEnums(Of ProgressHandler, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ProgressHandler, To>()
  nameWithType: Converters.MapEnums<ProgressHandler, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To>()
  nameWithType.vb: Converters.MapEnums(Of ProgressHandler, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To)()
  name.vb: MapEnums(Of ProgressHandler, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ProgressHandler, To>
    nameWithType: Converters.MapEnums<ProgressHandler, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ProgressHandler, To)
    nameWithType: Converters.MapEnums(Of ProgressHandler, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.#ctor
  isExternal: true
  name: ProgressHandler
  nameWithType: ProgressHandler.ProgressHandler
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.ProgressHandler
- uid: SuperOffice.CRM.BatchProcessing.IBatchData
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchData
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchData
  nameWithType: IBatchData
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync
  isExternal: true
  name: IncrementProgressAsync
  nameWithType: ProgressHandler.IncrementProgressAsync
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.IncrementProgressAsync
- uid: SuperOffice.Data.IProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.IProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.IProgressHandler
  isExternal: true
  name: IncrementProgressAsync(Int32, CancellationToken)
  nameWithType: IProgressHandler.IncrementProgressAsync(Int32, CancellationToken)
  fullName: SuperOffice.Data.IProgressHandler.IncrementProgressAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.IProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
    name: IncrementProgressAsync
    nameWithType: IProgressHandler.IncrementProgressAsync
    fullName: SuperOffice.Data.IProgressHandler.IncrementProgressAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.IProgressHandler.IncrementProgressAsync(System.Int32,System.Threading.CancellationToken)
    name: IncrementProgressAsync
    nameWithType: IProgressHandler.IncrementProgressAsync
    fullName: SuperOffice.Data.IProgressHandler.IncrementProgressAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync
  isExternal: true
  name: SetProgressDescriptionAsync
  nameWithType: ProgressHandler.SetProgressDescriptionAsync
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.SetProgressDescriptionAsync
- uid: SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Data.IProgressHandler
  isExternal: true
  name: SetProgressDescriptionAsync(String, CancellationToken)
  nameWithType: IProgressHandler.SetProgressDescriptionAsync(String, CancellationToken)
  fullName: SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
    name: SetProgressDescriptionAsync
    nameWithType: IProgressHandler.SetProgressDescriptionAsync
    fullName: SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync(System.String,System.Threading.CancellationToken)
    name: SetProgressDescriptionAsync
    nameWithType: IProgressHandler.SetProgressDescriptionAsync
    fullName: SuperOffice.Data.IProgressHandler.SetProgressDescriptionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations
  isExternal: true
  name: NumOperations
  nameWithType: ProgressHandler.NumOperations
  fullName: SuperOffice.CRM.BatchProcessing.Plugins.ProgressHandler.NumOperations
- uid: SuperOffice.Data.IProgressHandler.NumOperations
  commentId: P:SuperOffice.Data.IProgressHandler.NumOperations
  parent: SuperOffice.Data.IProgressHandler
  isExternal: true
  name: NumOperations
  nameWithType: IProgressHandler.NumOperations
  fullName: SuperOffice.Data.IProgressHandler.NumOperations
