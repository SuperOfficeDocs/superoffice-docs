### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.AddressInfo
  commentId: T:SuperOffice.CRM.AddressInfo
  id: AddressInfo
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.AddressInfo.#ctor
  - SuperOffice.CRM.AddressInfo.AddressLine1
  - SuperOffice.CRM.AddressInfo.AddressLine2
  - SuperOffice.CRM.AddressInfo.AddressLine3
  - SuperOffice.CRM.AddressInfo.City
  - SuperOffice.CRM.AddressInfo.Country
  - SuperOffice.CRM.AddressInfo.CountryCode
  - SuperOffice.CRM.AddressInfo.ZipCode
  langs:
  - csharp
  - vb
  name: AddressInfo
  nameWithType: AddressInfo
  fullName: SuperOffice.CRM.AddressInfo
  type: Class
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nInterface providing information about an address.\n"
  syntax:
    content: public class AddressInfo
    content.vb: Public Class AddressInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.AddressInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.AddressInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.AddressInfo)
  - SuperOffice.CRM.AddressInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.AddressInfo.SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
  - SuperOffice.CRM.AddressInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.AddressInfo.#ctor
  commentId: M:SuperOffice.CRM.AddressInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: AddressInfo()
  nameWithType: AddressInfo.AddressInfo()
  fullName: SuperOffice.CRM.AddressInfo.AddressInfo()
  type: Constructor
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  syntax:
    content: public AddressInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.AddressInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.AddressLine1
  commentId: P:SuperOffice.CRM.AddressInfo.AddressLine1
  id: AddressLine1
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: AddressLine1
  nameWithType: AddressInfo.AddressLine1
  fullName: SuperOffice.CRM.AddressInfo.AddressLine1
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nAddress, line 1\n"
  syntax:
    content: public string AddressLine1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AddressLine1 As String
  overload: SuperOffice.CRM.AddressInfo.AddressLine1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.AddressLine2
  commentId: P:SuperOffice.CRM.AddressInfo.AddressLine2
  id: AddressLine2
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: AddressLine2
  nameWithType: AddressInfo.AddressLine2
  fullName: SuperOffice.CRM.AddressInfo.AddressLine2
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nAddress, line 2\n"
  syntax:
    content: public string AddressLine2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AddressLine2 As String
  overload: SuperOffice.CRM.AddressInfo.AddressLine2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.AddressLine3
  commentId: P:SuperOffice.CRM.AddressInfo.AddressLine3
  id: AddressLine3
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: AddressLine3
  nameWithType: AddressInfo.AddressLine3
  fullName: SuperOffice.CRM.AddressInfo.AddressLine3
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nAddress, line 3\n"
  syntax:
    content: public string AddressLine3 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AddressLine3 As String
  overload: SuperOffice.CRM.AddressInfo.AddressLine3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.City
  commentId: P:SuperOffice.CRM.AddressInfo.City
  id: City
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: City
  nameWithType: AddressInfo.City
  fullName: SuperOffice.CRM.AddressInfo.City
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nTown\n"
  syntax:
    content: public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property City As String
  overload: SuperOffice.CRM.AddressInfo.City*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.ZipCode
  commentId: P:SuperOffice.CRM.AddressInfo.ZipCode
  id: ZipCode
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: ZipCode
  nameWithType: AddressInfo.ZipCode
  fullName: SuperOffice.CRM.AddressInfo.ZipCode
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nPostcode. \n"
  syntax:
    content: public string ZipCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ZipCode As String
  overload: SuperOffice.CRM.AddressInfo.ZipCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.CountryCode
  commentId: P:SuperOffice.CRM.AddressInfo.CountryCode
  id: CountryCode
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: CountryCode
  nameWithType: AddressInfo.CountryCode
  fullName: SuperOffice.CRM.AddressInfo.CountryCode
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nCountry code\n"
  syntax:
    content: public string CountryCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CountryCode As String
  overload: SuperOffice.CRM.AddressInfo.CountryCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AddressInfo.Country
  commentId: P:SuperOffice.CRM.AddressInfo.Country
  id: Country
  parent: SuperOffice.CRM.AddressInfo
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: AddressInfo.Country
  fullName: SuperOffice.CRM.AddressInfo.Country
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nCountry\n"
  syntax:
    content: public string Country { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Country As String
  overload: SuperOffice.CRM.AddressInfo.Country*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AddressInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AddressInfo, To>()
  nameWithType: EnumUtil.MapEnums<AddressInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.AddressInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AddressInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.AddressInfo, To)()
  name.vb: MapEnums(Of AddressInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AddressInfo, To>
    nameWithType: EnumUtil.MapEnums<AddressInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.AddressInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AddressInfo, To)
    nameWithType: EnumUtil.MapEnums(Of AddressInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.AddressInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AddressInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.AddressInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<AddressInfo>(AddressInfo)
  nameWithType: ObjectExtensions.AssignByReflection<AddressInfo>(AddressInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.AddressInfo>(SuperOffice.CRM.AddressInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of AddressInfo)(AddressInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.AddressInfo)(SuperOffice.CRM.AddressInfo)
  name.vb: AssignByReflection(Of AddressInfo)(AddressInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<AddressInfo>
    nameWithType: ObjectExtensions.AssignByReflection<AddressInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.AddressInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.AddressInfo
    name: AddressInfo
    nameWithType: AddressInfo
    fullName: SuperOffice.CRM.AddressInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of AddressInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of AddressInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.AddressInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.AddressInfo
    name: AddressInfo
    nameWithType: AddressInfo
    fullName: SuperOffice.CRM.AddressInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AddressInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<AddressInfo>()
  nameWithType: ObjectExtensions.GraphCopy<AddressInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.AddressInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of AddressInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.AddressInfo)()
  name.vb: GraphCopy(Of AddressInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<AddressInfo>
    nameWithType: ObjectExtensions.GraphCopy<AddressInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.AddressInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of AddressInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of AddressInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.AddressInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AddressInfo.SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
  commentId: M:SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
  parent: SuperOffice.CRM.Sale.QuoteExtensions
  definition: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
  name: ToAddressRow()
  nameWithType: QuoteExtensions.ToAddressRow()
  fullName: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow()
  spec.csharp:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
    name: ToAddressRow
    nameWithType: QuoteExtensions.ToAddressRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
    name: ToAddressRow
    nameWithType: QuoteExtensions.ToAddressRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AddressInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AddressInfo, To>()
  nameWithType: Converters.MapEnums<AddressInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.AddressInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of AddressInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.AddressInfo, To)()
  name.vb: MapEnums(Of AddressInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AddressInfo, To>
    nameWithType: Converters.MapEnums<AddressInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.AddressInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AddressInfo, To)
    nameWithType: Converters.MapEnums(Of AddressInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.AddressInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
  commentId: M:SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
  isExternal: true
  name: ToAddressRow(AddressInfo)
  nameWithType: QuoteExtensions.ToAddressRow(AddressInfo)
  fullName: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
    name: ToAddressRow
    nameWithType: QuoteExtensions.ToAddressRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.AddressInfo
    name: AddressInfo
    nameWithType: AddressInfo
    fullName: SuperOffice.CRM.AddressInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow(SuperOffice.CRM.AddressInfo)
    name: ToAddressRow
    nameWithType: QuoteExtensions.ToAddressRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.ToAddressRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.AddressInfo
    name: AddressInfo
    nameWithType: AddressInfo
    fullName: SuperOffice.CRM.AddressInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.QuoteExtensions
  commentId: T:SuperOffice.CRM.Sale.QuoteExtensions
  parent: SuperOffice.CRM.Sale
  isExternal: true
  name: QuoteExtensions
  nameWithType: QuoteExtensions
  fullName: SuperOffice.CRM.Sale.QuoteExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.CRM.Sale
  commentId: N:SuperOffice.CRM.Sale
  isExternal: true
  name: SuperOffice.CRM.Sale
  nameWithType: SuperOffice.CRM.Sale
  fullName: SuperOffice.CRM.Sale
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.AddressInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.AddressInfo.#ctor
  isExternal: true
  name: AddressInfo
  nameWithType: AddressInfo.AddressInfo
  fullName: SuperOffice.CRM.AddressInfo.AddressInfo
- uid: SuperOffice.CRM.AddressInfo.AddressLine1*
  commentId: Overload:SuperOffice.CRM.AddressInfo.AddressLine1
  isExternal: true
  name: AddressLine1
  nameWithType: AddressInfo.AddressLine1
  fullName: SuperOffice.CRM.AddressInfo.AddressLine1
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.AddressInfo.AddressLine2*
  commentId: Overload:SuperOffice.CRM.AddressInfo.AddressLine2
  isExternal: true
  name: AddressLine2
  nameWithType: AddressInfo.AddressLine2
  fullName: SuperOffice.CRM.AddressInfo.AddressLine2
- uid: SuperOffice.CRM.AddressInfo.AddressLine3*
  commentId: Overload:SuperOffice.CRM.AddressInfo.AddressLine3
  isExternal: true
  name: AddressLine3
  nameWithType: AddressInfo.AddressLine3
  fullName: SuperOffice.CRM.AddressInfo.AddressLine3
- uid: SuperOffice.CRM.AddressInfo.City*
  commentId: Overload:SuperOffice.CRM.AddressInfo.City
  isExternal: true
  name: City
  nameWithType: AddressInfo.City
  fullName: SuperOffice.CRM.AddressInfo.City
- uid: SuperOffice.CRM.AddressInfo.ZipCode*
  commentId: Overload:SuperOffice.CRM.AddressInfo.ZipCode
  isExternal: true
  name: ZipCode
  nameWithType: AddressInfo.ZipCode
  fullName: SuperOffice.CRM.AddressInfo.ZipCode
- uid: SuperOffice.CRM.AddressInfo.CountryCode*
  commentId: Overload:SuperOffice.CRM.AddressInfo.CountryCode
  isExternal: true
  name: CountryCode
  nameWithType: AddressInfo.CountryCode
  fullName: SuperOffice.CRM.AddressInfo.CountryCode
- uid: SuperOffice.CRM.AddressInfo.Country*
  commentId: Overload:SuperOffice.CRM.AddressInfo.Country
  isExternal: true
  name: Country
  nameWithType: AddressInfo.Country
  fullName: SuperOffice.CRM.AddressInfo.Country
