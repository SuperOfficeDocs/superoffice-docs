### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.LookupCollection
  commentId: T:SuperOffice.CRM.Security.LookupCollection
  id: LookupCollection
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.LookupCollection.#ctor
  - SuperOffice.CRM.Security.LookupCollection.AddFront(SuperOffice.CRM.Security.ISoDataLookup)
  - SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck
  - SuperOffice.CRM.Security.LookupCollection.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.LookupCollection.GetKnownFields
  - SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.LookupCollection.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored
  langs:
  - csharp
  - vb
  name: LookupCollection
  nameWithType: LookupCollection
  fullName: SuperOffice.CRM.Security.LookupCollection
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nCollection of objects that implement the Lookup interface.\n"
  syntax:
    content: 'public class LookupCollection : List<ISoDataLookup>, ISoDataLookup, ISentryIgnorable'
    content.vb: >-
      Public Class LookupCollection
          Inherits List(Of ISoDataLookup)
          Implements ISoDataLookup, ISentryIgnorable
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  extensionMethods:
  - SuperOffice.CRM.Security.LookupCollection.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Security.LookupCollection.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Security.LookupCollection)
  - SuperOffice.CRM.Security.LookupCollection.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Security.LookupCollection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Security.LookupCollection.AddFront(SuperOffice.CRM.Security.ISoDataLookup)
  commentId: M:SuperOffice.CRM.Security.LookupCollection.AddFront(SuperOffice.CRM.Security.ISoDataLookup)
  id: AddFront(SuperOffice.CRM.Security.ISoDataLookup)
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: AddFront(ISoDataLookup)
  nameWithType: LookupCollection.AddFront(ISoDataLookup)
  fullName: SuperOffice.CRM.Security.LookupCollection.AddFront(SuperOffice.CRM.Security.ISoDataLookup)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nAdds the lookup object to the front of the list. \nThis means that the object will be asked first for its values.\n"
  syntax:
    content: public void AddFront(ISoDataLookup obj)
    parameters:
    - id: obj
      type: SuperOffice.CRM.Security.ISoDataLookup
      description: An object that implements the lookup interface.
    content.vb: Public Sub AddFront(obj As ISoDataLookup)
  overload: SuperOffice.CRM.Security.LookupCollection.AddFront*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.LookupCollection.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: GetFieldValue(FieldInfo)
  nameWithType: LookupCollection.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Security.LookupCollection.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nLook up a value in the collection. The first to reply is the one used. \n"
  syntax:
    content: public object GetFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: FieldInfo of for value to look up.
    return:
      type: System.Object
      description: Value looked up.
    content.vb: Public Function GetFieldValue(field As FieldInfo) As Object
  overload: SuperOffice.CRM.Security.LookupCollection.GetFieldValue*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: LookupCollection.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet the persisted value of a field.  One should always verify that the persisted value is \nknown using the method <xref href=\"SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)\" data-throw-if-not-resolved=\"false\"></xref> prior to accessing it, \nas an exception might be thrown.\n"
  syntax:
    content: public virtual object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overridable Function GetPersistedFieldValue(field As FieldInfo) As Object
  overload: SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue*
  exceptions:
  - type: SuperOffice.Exceptions.SoNotImplementedException
    commentId: T:SuperOffice.Exceptions.SoNotImplementedException
    description: "\nThrown if the object implementing the interface does not support it.  \nThe corresponding <xref href=\"SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)\" data-throw-if-not-resolved=\"false\"></xref> should for \nsuch instances return false.\n"
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: LookupCollection.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nCheck if the persisted value for a dield is known.\n"
  syntax:
    content: public virtual bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known.
    content.vb: Public Overridable Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overload: SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Security.LookupCollection.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.LookupCollection.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  id: IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: IsGhostField(FieldInfo)
  nameWithType: LookupCollection.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Security.LookupCollection.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nDetermine if a field is a ghost. The answer is true iff all lookups say so; if there are no lookups then we don&apos;t know.\nIn that case the answer is false - saying true would make us believe all newly created rows are ghosts as well.\n"
  syntax:
    content: public bool IsGhostField(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
    return:
      type: System.Boolean
    content.vb: Public Function IsGhostField(field As FieldInfo) As Boolean
  overload: SuperOffice.CRM.Security.LookupCollection.IsGhostField*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.GetKnownFields
  commentId: M:SuperOffice.CRM.Security.LookupCollection.GetKnownFields
  id: GetKnownFields
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: GetKnownFields()
  nameWithType: LookupCollection.GetKnownFields()
  fullName: SuperOffice.CRM.Security.LookupCollection.GetKnownFields()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet all known FieldInfo&apos;s from the underlying lookup object, made unique\n"
  syntax:
    content: public List<FieldInfo> GetKnownFields()
    return:
      type: System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
    content.vb: Public Function GetKnownFields As List(Of FieldInfo)
  overload: SuperOffice.CRM.Security.LookupCollection.GetKnownFields*
  implements:
  - SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck
  id: BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: BeginIgnoreSentryCheck()
  nameWithType: LookupCollection.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nStarts the process of ignoring sentry on the object implementing the interface on the current thread.\n"
  syntax:
    content: public IgnoreSentryCheck BeginIgnoreSentryCheck()
    return:
      type: SuperOffice.CRM.Security.IgnoreSentryCheck
      description: Disposable object that calls <xref href="SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck" data-throw-if-not-resolved="false"></xref> on Dispose.
    content.vb: Public Function BeginIgnoreSentryCheck As IgnoreSentryCheck
  overload: SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck*
  implements:
  - SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck
  id: EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: EndIgnoreSentryCheck()
  nameWithType: LookupCollection.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nEnds the process of ignoring sentry on the object implementing the interface on the current thread.\n"
  syntax:
    content: public void EndIgnoreSentryCheck()
    content.vb: Public Sub
  overload: SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck*
  implements:
  - SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.#ctor
  commentId: M:SuperOffice.CRM.Security.LookupCollection.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: LookupCollection()
  nameWithType: LookupCollection.LookupCollection()
  fullName: SuperOffice.CRM.Security.LookupCollection.LookupCollection()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public LookupCollection()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Security.LookupCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored
  id: IsSentryIgnored
  parent: SuperOffice.CRM.Security.LookupCollection
  langs:
  - csharp
  - vb
  name: IsSentryIgnored
  nameWithType: LookupCollection.IsSentryIgnored
  fullName: SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet value indicating whether sentry is ignored on the current object for the current thread.\n"
  syntax:
    content: public bool IsSentryIgnored { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSentryIgnored As Boolean
  overload: SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored*
  implements:
  - SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.CRM.Security.LookupCollection.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<LookupCollection, To>()
  nameWithType: EnumUtil.MapEnums<LookupCollection, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.LookupCollection, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of LookupCollection, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.LookupCollection, To)()
  name.vb: MapEnums(Of LookupCollection, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<LookupCollection, To>
    nameWithType: EnumUtil.MapEnums<LookupCollection, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.LookupCollection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of LookupCollection, To)
    nameWithType: EnumUtil.MapEnums(Of LookupCollection, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.LookupCollection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.LookupCollection.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Security.LookupCollection)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<LookupCollection>(LookupCollection)
  nameWithType: ObjectExtensions.AssignByReflection<LookupCollection>(LookupCollection)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Security.LookupCollection>(SuperOffice.CRM.Security.LookupCollection)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of LookupCollection)(LookupCollection)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Security.LookupCollection)(SuperOffice.CRM.Security.LookupCollection)
  name.vb: AssignByReflection(Of LookupCollection)(LookupCollection)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<LookupCollection>
    nameWithType: ObjectExtensions.AssignByReflection<LookupCollection>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Security.LookupCollection>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Security.LookupCollection
    name: LookupCollection
    nameWithType: LookupCollection
    fullName: SuperOffice.CRM.Security.LookupCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of LookupCollection)
    nameWithType: ObjectExtensions.AssignByReflection(Of LookupCollection)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Security.LookupCollection)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Security.LookupCollection
    name: LookupCollection
    nameWithType: LookupCollection
    fullName: SuperOffice.CRM.Security.LookupCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.LookupCollection.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<LookupCollection>()
  nameWithType: ObjectExtensions.GraphCopy<LookupCollection>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Security.LookupCollection>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of LookupCollection)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Security.LookupCollection)()
  name.vb: GraphCopy(Of LookupCollection)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<LookupCollection>
    nameWithType: ObjectExtensions.GraphCopy<LookupCollection>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Security.LookupCollection>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of LookupCollection)
    nameWithType: ObjectExtensions.GraphCopy(Of LookupCollection)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Security.LookupCollection)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.LookupCollection.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<LookupCollection, To>()
  nameWithType: Converters.MapEnums<LookupCollection, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.LookupCollection, To>()
  nameWithType.vb: Converters.MapEnums(Of LookupCollection, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.LookupCollection, To)()
  name.vb: MapEnums(Of LookupCollection, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<LookupCollection, To>
    nameWithType: Converters.MapEnums<LookupCollection, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.LookupCollection, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of LookupCollection, To)
    nameWithType: Converters.MapEnums(Of LookupCollection, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.LookupCollection, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Security.LookupCollection.AddFront*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.AddFront
  isExternal: true
  name: AddFront
  nameWithType: LookupCollection.AddFront
  fullName: SuperOffice.CRM.Security.LookupCollection.AddFront
- uid: SuperOffice.CRM.Security.LookupCollection.GetFieldValue*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.GetFieldValue
  isExternal: true
  name: GetFieldValue
  nameWithType: LookupCollection.GetFieldValue
  fullName: SuperOffice.CRM.Security.LookupCollection.GetFieldValue
- uid: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: ISoDataLookup.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: ISoDataLookup.GetFieldValue
    fullName: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: ISoDataLookup.GetFieldValue
    fullName: SuperOffice.CRM.Security.ISoDataLookup.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: LookupCollection.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Security.LookupCollection.GetPersistedFieldValue
- uid: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Exceptions.SoNotImplementedException
  commentId: T:SuperOffice.Exceptions.SoNotImplementedException
  isExternal: true
  name: SoNotImplementedException
  nameWithType: SoNotImplementedException
  fullName: SuperOffice.Exceptions.SoNotImplementedException
- uid: SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: LookupCollection.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Security.LookupCollection.IsPersistedFieldValueKnown
- uid: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Security.LookupCollection.IsGhostField*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.IsGhostField
  isExternal: true
  name: IsGhostField
  nameWithType: LookupCollection.IsGhostField
  fullName: SuperOffice.CRM.Security.LookupCollection.IsGhostField
- uid: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: ISoDataLookup.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: ISoDataLookup.IsGhostField
    fullName: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: ISoDataLookup.IsGhostField
    fullName: SuperOffice.CRM.Security.ISoDataLookup.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.LookupCollection.GetKnownFields*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.GetKnownFields
  isExternal: true
  name: GetKnownFields
  nameWithType: LookupCollection.GetKnownFields
  fullName: SuperOffice.CRM.Security.LookupCollection.GetKnownFields
- uid: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
  commentId: M:SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
  parent: SuperOffice.CRM.Security.ISoDataLookup
  isExternal: true
  name: GetKnownFields()
  nameWithType: ISoDataLookup.GetKnownFields()
  fullName: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
    name: GetKnownFields
    nameWithType: ISoDataLookup.GetKnownFields
    fullName: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
    name: GetKnownFields
    nameWithType: ISoDataLookup.GetKnownFields
    fullName: SuperOffice.CRM.Security.ISoDataLookup.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}
  commentId: '!:System.Collections.Generic.List{SuperOffice.Data.SQL.FieldInfo}'
  definition: System.Collections.Generic.List`1
  name: List<FieldInfo>
  nameWithType: List<FieldInfo>
  fullName: System.Collections.Generic.List<SuperOffice.Data.SQL.FieldInfo>
  nameWithType.vb: List(Of FieldInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.Data.SQL.FieldInfo)
  name.vb: List(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck
  isExternal: true
  name: BeginIgnoreSentryCheck
  nameWithType: LookupCollection.BeginIgnoreSentryCheck
  fullName: SuperOffice.CRM.Security.LookupCollection.BeginIgnoreSentryCheck
- uid: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Security.ISentryIgnorable
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: ISentryIgnorable.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: ISentryIgnorable.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: ISentryIgnorable.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Security.ISentryIgnorable.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.IgnoreSentryCheck
  commentId: T:SuperOffice.CRM.Security.IgnoreSentryCheck
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: IgnoreSentryCheck
  nameWithType: IgnoreSentryCheck
  fullName: SuperOffice.CRM.Security.IgnoreSentryCheck
- uid: SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck
  isExternal: true
  name: EndIgnoreSentryCheck
  nameWithType: LookupCollection.EndIgnoreSentryCheck
  fullName: SuperOffice.CRM.Security.LookupCollection.EndIgnoreSentryCheck
- uid: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Security.ISentryIgnorable
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: ISentryIgnorable.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: ISentryIgnorable.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: ISentryIgnorable.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Security.ISentryIgnorable.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.LookupCollection.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.#ctor
  isExternal: true
  name: LookupCollection
  nameWithType: LookupCollection.LookupCollection
  fullName: SuperOffice.CRM.Security.LookupCollection.LookupCollection
- uid: SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored*
  commentId: Overload:SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored
  isExternal: true
  name: IsSentryIgnored
  nameWithType: LookupCollection.IsSentryIgnored
  fullName: SuperOffice.CRM.Security.LookupCollection.IsSentryIgnored
- uid: SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
  parent: SuperOffice.CRM.Security.ISentryIgnorable
  isExternal: true
  name: IsSentryIgnored
  nameWithType: ISentryIgnorable.IsSentryIgnored
  fullName: SuperOffice.CRM.Security.ISentryIgnorable.IsSentryIgnored
