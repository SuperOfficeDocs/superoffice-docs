### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Globalization.EmailFormatter
  commentId: T:SuperOffice.CRM.Globalization.EmailFormatter
  id: EmailFormatter
  parent: SuperOffice.CRM.Globalization
  children:
  - SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(SuperOffice.CRM.Rows.EmailRow)
  - SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(System.String,System.String)
  - SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Contact,System.Threading.CancellationToken)
  - SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Person,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EmailFormatter
  nameWithType: EmailFormatter
  fullName: SuperOffice.CRM.Globalization.EmailFormatter
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: 'public static class EmailFormatter : Object'
    content.vb: >-
      Public Module EmailFormatter
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(System.String,System.String)
  commentId: M:SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(System.String,System.String)
  id: GetDisplayAddress(System.String,System.String)
  parent: SuperOffice.CRM.Globalization.EmailFormatter
  langs:
  - csharp
  - vb
  name: GetDisplayAddress(String, String)
  nameWithType: EmailFormatter.GetDisplayAddress(String, String)
  fullName: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: public static string GetDisplayAddress(string emailAddress, string description)
    parameters:
    - id: emailAddress
      type: System.String
    - id: description
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetDisplayAddress(emailAddress As String, description As String) As String
  overload: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(SuperOffice.CRM.Rows.EmailRow)
  commentId: M:SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(SuperOffice.CRM.Rows.EmailRow)
  id: GetDisplayAddress(SuperOffice.CRM.Rows.EmailRow)
  parent: SuperOffice.CRM.Globalization.EmailFormatter
  langs:
  - csharp
  - vb
  name: GetDisplayAddress(EmailRow)
  nameWithType: EmailFormatter.GetDisplayAddress(EmailRow)
  fullName: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress(SuperOffice.CRM.Rows.EmailRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: public static string GetDisplayAddress(EmailRow emailRow)
    parameters:
    - id: emailRow
      type: SuperOffice.CRM.Rows.EmailRow
    return:
      type: System.String
    content.vb: Public Shared Function GetDisplayAddress(emailRow As EmailRow) As String
  overload: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Contact,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Contact,System.Threading.CancellationToken)
  id: GetDisplayAddressAsync(SuperOffice.CRM.Entities.Contact,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Globalization.EmailFormatter
  langs:
  - csharp
  - vb
  name: GetDisplayAddressAsync(Contact, CancellationToken)
  nameWithType: EmailFormatter.GetDisplayAddressAsync(Contact, CancellationToken)
  fullName: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Contact, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: public static Task<string> GetDisplayAddressAsync(Contact contact, CancellationToken cancellationToken = null)
    parameters:
    - id: contact
      type: SuperOffice.CRM.Entities.Contact
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetDisplayAddressAsync(contact As Contact, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Person,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Person,System.Threading.CancellationToken)
  id: GetDisplayAddressAsync(SuperOffice.CRM.Entities.Person,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Globalization.EmailFormatter
  langs:
  - csharp
  - vb
  name: GetDisplayAddressAsync(Person, CancellationToken)
  nameWithType: EmailFormatter.GetDisplayAddressAsync(Person, CancellationToken)
  fullName: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync(SuperOffice.CRM.Entities.Person, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Globalization
  syntax:
    content: public static Task<string> GetDisplayAddressAsync(Person person, CancellationToken cancellationToken = null)
    parameters:
    - id: person
      type: SuperOffice.CRM.Entities.Person
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetDisplayAddressAsync(person As Person, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Globalization
  commentId: N:SuperOffice.CRM.Globalization
  isExternal: true
  name: SuperOffice.CRM.Globalization
  nameWithType: SuperOffice.CRM.Globalization
  fullName: SuperOffice.CRM.Globalization
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress*
  commentId: Overload:SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress
  isExternal: true
  name: GetDisplayAddress
  nameWithType: EmailFormatter.GetDisplayAddress
  fullName: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Rows.EmailRow
  commentId: T:SuperOffice.CRM.Rows.EmailRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: EmailRow
  nameWithType: EmailRow
  fullName: SuperOffice.CRM.Rows.EmailRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync*
  commentId: Overload:SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync
  isExternal: true
  name: GetDisplayAddressAsync
  nameWithType: EmailFormatter.GetDisplayAddressAsync
  fullName: SuperOffice.CRM.Globalization.EmailFormatter.GetDisplayAddressAsync
- uid: SuperOffice.CRM.Entities.Contact
  commentId: T:SuperOffice.CRM.Entities.Contact
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Contact
  nameWithType: Contact
  fullName: SuperOffice.CRM.Entities.Contact
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.Person
  commentId: T:SuperOffice.CRM.Entities.Person
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Entities.Person
