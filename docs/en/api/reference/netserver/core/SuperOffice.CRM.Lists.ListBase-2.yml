### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.ListBase`2
  commentId: T:SuperOffice.CRM.Lists.ListBase`2
  id: ListBase`2
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.ListBase`2.#ctor
  - SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  - SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.Count
  - SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  - SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  - SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  - SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  - SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.ListCollection
  - SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Add(`1)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Clear
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Remove(`1)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#get_Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Insert(System.Int32,`1)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#RemoveAt(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#set_Item(System.Int32,`1)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#IsSynchronized
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#SyncRoot
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Add(System.Object)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Clear
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Contains(System.Object)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#get_Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#IndexOf(System.Object)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Insert(System.Int32,System.Object)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Remove(System.Object)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#RemoveAt(System.Int32)
  - SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#set_Item(System.Int32,System.Object)
  langs:
  - csharp
  - vb
  name: ListBase<TListSelect, TListItem>
  nameWithType: ListBase<TListSelect, TListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nListbase is the base-class for the different list-classes. Among other, it contains the array \nthat keeps the lists elements.\n"
  syntax:
    content: 'public abstract class ListBase<TListSelect, TListItem> : IList, ICollection, IList<TListItem>, ICollection<TListItem>, IEnumerable<TListItem>, IEnumerable where TListSelect : SqlCommand where TListItem : ListItemBase<TListSelect>'
    typeParameters:
    - id: TListSelect
    - id: TListItem
    content.vb: >-
      Public MustInherit Class ListBase(Of TListSelect As SqlCommand, TListItem As ListItemBase(Of TListSelect))
          Implements IList, ICollection, IList(Of TListItem), ICollection(Of TListItem), IEnumerable(Of TListItem), IEnumerable
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Archives.ActivityList
  - SuperOffice.CRM.Archives.ContactList
  - SuperOffice.CRM.Archives.DocumentList
  - SuperOffice.CRM.Archives.PersonList
  - SuperOffice.CRM.Archives.ProjectEventList
  - SuperOffice.CRM.Archives.ProjectList
  - SuperOffice.CRM.Archives.ProjectMemberList
  - SuperOffice.CRM.Archives.RelationsList
  - SuperOffice.CRM.Archives.SaleList
  - SuperOffice.CRM.Archives.UserList
  implements:
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IList{{TListItem}}
  - System.Collections.Generic.ICollection{{TListItem}}
  - System.Collections.Generic.IEnumerable{{TListItem}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Lists.ListBase`2.EnumUtil.MapEnums``2
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.ForEach``1(System.Action{{TListItem}})
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{{TListItem}})
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.Batch``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.IndexOf``1({TListItem},System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.IndexOf``1(System.Func{{TListItem},System.Boolean},System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.Permute``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{{TListItem},{K}},System.Func{{TListItem},{V}})
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{{TListItem},{K}},System.Func{{TListItem},{V}},System.Collections.Generic.IEqualityComparer{{K}})
  - System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
  - System.Collections.Generic.IEnumerable{`1}.SuperOffice.Util.CollectionOps.AtLeastOne``1
  - SuperOffice.CRM.Lists.ListBase`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: ListBase(Of TListSelect, TListItem)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem)
  name.vb: ListBase(Of TListSelect, TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#get_Item(System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#get_Item(System.Int32)
  id: System#Collections#IList#get_Item(System.Int32)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.get_Item(Int32)
  nameWithType: ListBase<TListSelect, TListItem>.IList.get_Item(Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.get_Item(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: object IList.get_Item(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: Function System.Collections.IList.get_Item(index As Integer) As Object Implements IList.get_Item
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#get_Item*
  implements:
  - System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.get_Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#set_Item(System.Int32,System.Object)
  id: System#Collections#IList#set_Item(System.Int32,System.Object)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.set_Item(Int32, Object)
  nameWithType: ListBase<TListSelect, TListItem>.IList.set_Item(Int32, Object)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.set_Item(System.Int32, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: void IList.set_Item(int index, object value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
    content.vb: Sub System.Collections.IList.set_Item(index As Integer, value As Object) Implements IList.set_Item
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#set_Item*
  implements:
  - System.Collections.IList.set_Item(System.Int32,System.Object)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#get_Item(System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#get_Item(System.Int32)
  id: System#Collections#Generic#IList{TListItem}#get_Item(System.Int32)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList<TListItem>.get_Item(Int32)
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.get_Item(Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.get_Item(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: TListItem IList<TListItem>.get_Item(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{TListItem}'
    content.vb: Function System.Collections.Generic.IList<TListItem>.get_Item(index As Integer) As TListItem Implements IList(Of TListItem).get_Item
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#get_Item*
  implements:
  - System.Collections.Generic.IList{{TListItem}}.get_Item(System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.get_Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.get_Item(System.Int32)
  name.vb: System.Collections.Generic.IList<TListItem>.get_Item(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#set_Item(System.Int32,`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#set_Item(System.Int32,`1)
  id: System#Collections#Generic#IList{TListItem}#set_Item(System.Int32,`1)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList<TListItem>.set_Item(Int32, TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.set_Item(Int32, TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.set_Item(System.Int32, TListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: void IList<TListItem>.set_Item(int index, TListItem value)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: '{TListItem}'
    content.vb: Sub System.Collections.Generic.IList<TListItem>.set_Item(index As Integer, value As TListItem) Implements IList(Of TListItem).set_Item
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#set_Item*
  implements:
  - System.Collections.Generic.IList{{TListItem}}.set_Item(System.Int32,{TListItem})
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.set_Item(Int32, TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.set_Item(System.Int32, TListItem)
  name.vb: System.Collections.Generic.IList<TListItem>.set_Item(Int32, TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\n<xref href=\"System.Collections.ICollection.CopyTo(System.Array%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public void CopyTo(Array list, int index)
    parameters:
    - id: list
      type: System.Array
      description: The array
    - id: index
      type: System.Int32
      description: The array index
    content.vb: Public Sub CopyTo(list As Array, index As Integer)
  overload: SuperOffice.CRM.Lists.ListBase`2.CopyTo*
  implements:
  - System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(Array, Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(System.Array, System.Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  id: CopyTo(`1[],System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: CopyTo(TListItem[], Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(TListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(TListItem[], System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public void CopyTo(TListItem[] array, int arrayIndex)
    parameters:
    - id: array
      type: '{TListItem}[]'
    - id: arrayIndex
      type: System.Int32
    content.vb: Public Sub CopyTo(array As TListItem(), arrayIndex As Integer)
  overload: SuperOffice.CRM.Lists.ListBase`2.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{TListItem}}.CopyTo({TListItem}[],System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), System.Int32)
  name.vb: CopyTo(TListItem(), Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Add(System.Object)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.Add(Object)
  nameWithType: ListBase<TListSelect, TListItem>.IList.Add(Object)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Add(System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nNot implemented, lists inheriting ListBase are read-only.\nThrows an SoNotImplementedException if used.\n<xref href=\"System.Collections.IList.Add(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: int IList.Add(object o)
    parameters:
    - id: o
      type: System.Object
    return:
      type: System.Int32
    content.vb: Function System.Collections.IList.Add(o As Object) As Integer Implements IList.Add
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Add*
  implements:
  - System.Collections.IList.Add(System.Object)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Add(Object)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Add(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Add(`1)
  id: System#Collections#Generic#ICollection{TListItem}#Add(`1)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ICollection<TListItem>.Add(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.ICollection<TListItem>.Add(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.ICollection<TListItem>.Add(TListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: void ICollection<TListItem>.Add(TListItem item)
    parameters:
    - id: item
      type: '{TListItem}'
    content.vb: Sub System.Collections.Generic.ICollection<TListItem>.Add(item As TListItem) Implements ICollection(Of TListItem).Add
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Add*
  implements:
  - System.Collections.Generic.ICollection{{TListItem}}.Add({TListItem})
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Add(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Add(TListItem)
  name.vb: System.Collections.Generic.ICollection<TListItem>.Add(TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#IndexOf(System.Object)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.IndexOf(Object)
  nameWithType: ListBase<TListSelect, TListItem>.IList.IndexOf(Object)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nReturns the object at the given index. Implemented in classes inheriting ListBase. \n<xref href=\"System.Collections.IList.IndexOf(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: int IList.IndexOf(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object
    return:
      type: System.Int32
      description: The index of the object.
    content.vb: Function System.Collections.IList.IndexOf(o As Object) As Integer Implements IList.IndexOf
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#IndexOf*
  implements:
  - System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.IndexOf(Object)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
- uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  id: IndexOf(`1)
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IndexOf(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nReturns the object at the given index. Implemented in classes inheriting ListBase. \n"
  syntax:
    content: public virtual int IndexOf(TListItem item)
    parameters:
    - id: item
      type: '{TListItem}'
      description: The object
    return:
      type: System.Int32
      description: The index of the object.
    content.vb: Public Overridable Function IndexOf(item As TListItem) As Integer
  overload: SuperOffice.CRM.Lists.ListBase`2.IndexOf*
  implements:
  - System.Collections.Generic.IList{{TListItem}}.IndexOf({TListItem})
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Contains(System.Object)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.Contains(Object)
  nameWithType: ListBase<TListSelect, TListItem>.IList.Contains(Object)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nChecks if the list contains the object or not. Implemented in classes inheriting ListBase. \n<xref href=\"System.Collections.IList.Contains(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: bool IList.Contains(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object to locate in the Array.
    return:
      type: System.Boolean
      description: True if value is found in the Array; otherwise, False
    content.vb: Function System.Collections.IList.Contains(o As Object) As Boolean Implements IList.Contains
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Contains*
  implements:
  - System.Collections.IList.Contains(System.Object)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Contains(Object)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
- uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  id: Contains(`1)
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: Contains(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.Contains(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains(TListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nChecks if the list contains the object or not. Implemented in classes inheriting ListBase. \n"
  syntax:
    content: public virtual bool Contains(TListItem item)
    parameters:
    - id: item
      type: '{TListItem}'
      description: The object to locate in the Array.
    return:
      type: System.Boolean
      description: True if value is found in the Array; otherwise, False
    content.vb: Public Overridable Function Contains(item As TListItem) As Boolean
  overload: SuperOffice.CRM.Lists.ListBase`2.Contains*
  implements:
  - System.Collections.Generic.ICollection{{TListItem}}.Contains({TListItem})
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Contains(TListItem)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains(TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Clear
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.Clear()
  nameWithType: ListBase<TListSelect, TListItem>.IList.Clear()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Clear()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nClears the list.\n<xref href=\"System.Collections.IList.Clear\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: void IList.Clear()
    content.vb: Sub System.Collections.IList.Clear Implements IList.Clear
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Clear*
  implements:
  - System.Collections.IList.Clear
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Clear()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Clear()
  name.vb: System.Collections.IList.Clear()
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Clear
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Clear
  id: System#Collections#Generic#ICollection{TListItem}#Clear
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ICollection<TListItem>.Clear()
  nameWithType: ListBase<TListSelect, TListItem>.ICollection<TListItem>.Clear()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.ICollection<TListItem>.Clear()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nClears the list.\n"
  syntax:
    content: void ICollection<TListItem>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<TListItem>.Clear Implements ICollection(Of TListItem).Clear
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Clear*
  implements:
  - System.Collections.Generic.ICollection{{TListItem}}.Clear
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Clear()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Clear()
  name.vb: System.Collections.Generic.ICollection<TListItem>.Clear()
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.Insert(Int32, Object)
  nameWithType: ListBase<TListSelect, TListItem>.IList.Insert(Int32, Object)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nNot implemented, lists inheriting ListBase are read-only.\nThrows an SoNotImplementedException if used.\n<xref href=\"System.Collections.IList.Insert(System.Int32%2cSystem.Object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: void IList.Insert(int i, object o)
    parameters:
    - id: i
      type: System.Int32
    - id: o
      type: System.Object
    content.vb: Sub System.Collections.IList.Insert(i As Integer, o As Object) Implements IList.Insert
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Insert*
  implements:
  - System.Collections.IList.Insert(System.Int32,System.Object)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Insert(System.Int32,`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Insert(System.Int32,`1)
  id: System#Collections#Generic#IList{TListItem}#Insert(System.Int32,`1)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList<TListItem>.Insert(Int32, TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.Insert(Int32, TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.Insert(System.Int32, TListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: void IList<TListItem>.Insert(int index, TListItem item)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{TListItem}'
    content.vb: Sub System.Collections.Generic.IList<TListItem>.Insert(index As Integer, item As TListItem) Implements IList(Of TListItem).Insert
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Insert*
  implements:
  - System.Collections.Generic.IList{{TListItem}}.Insert(System.Int32,{TListItem})
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Insert(Int32, TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Insert(System.Int32, TListItem)
  name.vb: System.Collections.Generic.IList<TListItem>.Insert(Int32, TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Remove(System.Object)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.Remove(Object)
  nameWithType: ListBase<TListSelect, TListItem>.IList.Remove(Object)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nNot implemented, lists inheriting ListBase are read-only.\nThrows an SoNotImplementedException if used.\n<xref href=\"System.Collections.IList.Remove(System.Object)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: void IList.Remove(object o)
    parameters:
    - id: o
      type: System.Object
    content.vb: Sub System.Collections.IList.Remove(o As Object) Implements IList.Remove
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Remove*
  implements:
  - System.Collections.IList.Remove(System.Object)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Remove(Object)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Remove(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Remove(`1)
  id: System#Collections#Generic#ICollection{TListItem}#Remove(`1)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ICollection<TListItem>.Remove(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.ICollection<TListItem>.Remove(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.ICollection<TListItem>.Remove(TListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: bool ICollection<TListItem>.Remove(TListItem o)
    parameters:
    - id: o
      type: '{TListItem}'
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<TListItem>.Remove(o As TListItem) As Boolean Implements ICollection(Of TListItem).Remove
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Remove*
  implements:
  - System.Collections.Generic.ICollection{{TListItem}}.Remove({TListItem})
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Remove(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Remove(TListItem)
  name.vb: System.Collections.Generic.ICollection<TListItem>.Remove(TListItem)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#RemoveAt(System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.RemoveAt(Int32)
  nameWithType: ListBase<TListSelect, TListItem>.IList.RemoveAt(Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.RemoveAt(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nNot implemented, lists inheriting ListBase are read-only.\nThrows an SoNotImplementedException if used.\n<xref href=\"System.Collections.IList.RemoveAt(System.Int32)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: void IList.RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Sub System.Collections.IList.RemoveAt(index As Integer) Implements IList.RemoveAt
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#RemoveAt*
  implements:
  - System.Collections.IList.RemoveAt(System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.RemoveAt(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.RemoveAt(System.Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#RemoveAt(System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{TListItem}#RemoveAt(System.Int32)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList<TListItem>.RemoveAt(Int32)
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.RemoveAt(Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.RemoveAt(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: void IList<TListItem>.RemoveAt(int index)
    parameters:
    - id: index
      type: System.Int32
    content.vb: Sub System.Collections.Generic.IList<TListItem>.RemoveAt(index As Integer) Implements IList(Of TListItem).RemoveAt
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#RemoveAt*
  implements:
  - System.Collections.Generic.IList{{TListItem}}.RemoveAt(System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.RemoveAt(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.RemoveAt(System.Int32)
  name.vb: System.Collections.Generic.IList<TListItem>.RemoveAt(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.#ctor
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ListBase()
  nameWithType: ListBase<TListSelect, TListItem>.ListBase()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nDefault constructor\n"
  syntax:
    content: public ListBase()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Lists.ListBase`2.#ctor*
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListBase()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListBase()
- uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.OnLoad(`0,SuperOffice.Data.SoDataReader)
  id: OnLoad(`0,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: OnLoad(TListSelect, SoDataReader)
  nameWithType: ListBase<TListSelect, TListItem>.OnLoad(TListSelect, SoDataReader)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoad(TListSelect, SuperOffice.Data.SoDataReader)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nResponsible for reading each row with data from the SoDataReader and insert the object each row represents\ninto the class&apos; collection. \n"
  syntax:
    content: protected virtual void OnLoad(TListSelect query, SoDataReader reader)
    parameters:
    - id: query
      type: '{TListSelect}'
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader which contains all data in the list.
    content.vb: Protected Overridable Sub OnLoad(query As TListSelect, reader As SoDataReader)
  overload: SuperOffice.CRM.Lists.ListBase`2.OnLoad*
  nameWithType.vb: ListBase(Of TListSelect, TListItem).OnLoad(TListSelect, SoDataReader)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoad(TListSelect, SuperOffice.Data.SoDataReader)
- uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  id: GetEnumerator
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSee MSDN-documentation for GetEnumerator.\n"
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
  overload: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: ListBase(Of TListSelect, TListItem).GetEnumerator()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator()
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IEnumerable<TListItem>.GetEnumerator()
  nameWithType: ListBase<TListSelect, TListItem>.IEnumerable<TListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: IEnumerator<TListItem> IEnumerable<TListItem>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{TListItem}}
    content.vb: Function System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator As IEnumerator(Of TListItem) Implements IEnumerable(Of TListItem).GetEnumerator
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{TListItem}}.GetEnumerator
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator()
- uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  id: Item(System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item[System.Int32]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nGet the <see cref=\"!:ListItemBase\"></see> in the collection from the list.\n"
  syntax:
    content: public TListItem this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the item in the list, where 0 is the first item.
    return:
      type: '{TListItem}'
    content.vb: Public ReadOnly Property Item(index As Integer) As TListItem
  overload: SuperOffice.CRM.Lists.ListBase`2.Item*
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item(System.Int32)
  name.vb: Item(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.ListCollection
  id: ListCollection
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ListCollection
  nameWithType: ListBase<TListSelect, TListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListCollection
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSet/Get property on collection.\n"
  syntax:
    content: protected List<TListItem> ListCollection { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{{TListItem}}
    content.vb: Protected Property ListCollection As List(Of TListItem)
  overload: SuperOffice.CRM.Lists.ListBase`2.ListCollection*
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListCollection
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList.Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.IList.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Item[System.Int32]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nGet the item from the list. The set-property is not supported.\n"
  syntax:
    content: object IList.this[] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this[]
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Item*
  exceptions:
  - type: SuperOffice.Exceptions.SoNotImplementedException
    commentId: T:SuperOffice.Exceptions.SoNotImplementedException
    description: Thrown when trying to access the set property.
  implements:
  - System.Collections.IList.Item(System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Item(System.Int32)
  id: System#Collections#Generic#IList{TListItem}#Item(System.Int32)
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IList<TListItem>.Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.Item[System.Int32]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nGet the item from the list. The set-property is not supported.\n"
  syntax:
    content: TListItem IList<TListItem>.this[] { get; set; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{TListItem}'
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IList<TListItem>.Item(index As Integer) As TListItem Implements IList(Of TListItem).this[]
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Item*
  exceptions:
  - type: SuperOffice.Exceptions.SoNotImplementedException
    commentId: T:SuperOffice.Exceptions.SoNotImplementedException
    description: Thrown when trying to access the set property.
  implements:
  - System.Collections.Generic.IList{{TListItem}}.Item(System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Item(Int32)
  modifiers.csharp:
  - get
  - set
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Item(System.Int32)
  name.vb: System.Collections.Generic.IList<TListItem>.Item(Int32)
- uid: SuperOffice.CRM.Lists.ListBase`2.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Count
  id: Count
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ListBase<TListSelect, TListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Count
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nGet the number of elements contained in the underlying collection.\n"
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: SuperOffice.CRM.Lists.ListBase`2.Count*
  implements:
  - System.Collections.ICollection.Count
  - System.Collections.Generic.ICollection{{TListItem}}.Count
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  id: IsFixedSize
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IsFixedSize
  nameWithType: ListBase<TListSelect, TListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsFixedSize
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nA collection with a fixed size does not allow the addition or removal of elements after \nthe collection is created, but it allows the modification of existing elements.\nIsFixedSize will return true for lists inheriting ListBase.\n"
  syntax:
    content: public bool IsFixedSize { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsFixedSize As Boolean
  overload: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize*
  implements:
  - System.Collections.IList.IsFixedSize
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsFixedSize
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  id: IsReadOnly
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: ListBase<TListSelect, TListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsReadOnly
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nA collection that is read-only does not allow the addition, removal, \nor modification of elements after the collection is created.\nIsReadOnly will return true for lists inheriting ListBase.\n"
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly*
  implements:
  - System.Collections.IList.IsReadOnly
  - System.Collections.Generic.ICollection{{TListItem}}.IsReadOnly
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsReadOnly
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#IsSynchronized
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ICollection.IsSynchronized
  nameWithType: ListBase<TListSelect, TListItem>.ICollection.IsSynchronized
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\n<xref href=\"System.Collections.ICollection.IsSynchronized\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#IsSynchronized*
  implements:
  - System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.ICollection.IsSynchronized
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#SyncRoot
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: SuperOffice.CRM.Lists.ListBase`2
  langs:
  - csharp
  - vb
  name: ICollection.SyncRoot
  nameWithType: ListBase<TListSelect, TListItem>.ICollection.SyncRoot
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\n<xref href=\"System.Collections.ICollection.SyncRoot\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: object ICollection.SyncRoot { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
  overload: SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#SyncRoot*
  implements:
  - System.Collections.ICollection.SyncRoot
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.ICollection.SyncRoot
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IList{{TListItem}}
  commentId: T:System.Collections.Generic.IList{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<TListItem>
  nameWithType: IList<TListItem>
  fullName: System.Collections.Generic.IList<TListItem>
  nameWithType.vb: IList(Of TListItem)
  fullName.vb: System.Collections.Generic.IList(Of TListItem)
  name.vb: IList(Of TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TListItem}}
  commentId: T:System.Collections.Generic.ICollection{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TListItem>
  nameWithType: ICollection<TListItem>
  fullName: System.Collections.Generic.ICollection<TListItem>
  nameWithType.vb: ICollection(Of TListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem)
  name.vb: ICollection(Of TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TListItem}}
  commentId: T:System.Collections.Generic.IEnumerable{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TListItem>
  nameWithType: IEnumerable<TListItem>
  fullName: System.Collections.Generic.IEnumerable<TListItem>
  nameWithType.vb: IEnumerable(Of TListItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TListItem)
  name.vb: IEnumerable(Of TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ListBase<TListSelect, TListItem>, To>()
  nameWithType: EnumUtil.MapEnums<ListBase<TListSelect, TListItem>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ListBase(Of TListSelect, TListItem), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem), To)()
  name.vb: MapEnums(Of ListBase(Of TListSelect, TListItem), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ListBase<TListSelect, TListItem>, To>
    nameWithType: EnumUtil.MapEnums<ListBase<TListSelect, TListItem>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ListBase(Of TListSelect, TListItem), To)
    nameWithType: EnumUtil.MapEnums(Of ListBase(Of TListSelect, TListItem), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.ForEach``1(System.Action{{TListItem}})
  commentId: M:IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  name: ForEach<TListItem>(Action<TListItem>)
  nameWithType: IEnumerableExtensions.ForEach<TListItem>(Action<TListItem>)
  fullName: IEnumerableExtensions.ForEach<TListItem>(System.Action<TListItem>)
  nameWithType.vb: IEnumerableExtensions.ForEach(Of TListItem)(Action(Of TListItem))
  fullName.vb: IEnumerableExtensions.ForEach(Of TListItem)(System.Action(Of TListItem))
  name.vb: ForEach(Of TListItem)(Action(Of TListItem))
  spec.csharp:
  - uid: IEnumerableExtensions.ForEach``1(System.Action{``0})
    name: ForEach<TListItem>
    nameWithType: IEnumerableExtensions.ForEach<TListItem>
    fullName: IEnumerableExtensions.ForEach<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ForEach``1(System.Action{``0})
    name: ForEach(Of TListItem)
    nameWithType: IEnumerableExtensions.ForEach(Of TListItem)
    fullName: IEnumerableExtensions.ForEach(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{{TListItem}})
  commentId: M:IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: ContainsAny<TListItem>(IEnumerable<TListItem>)
  nameWithType: IEnumerableExtensions.ContainsAny<TListItem>(IEnumerable<TListItem>)
  fullName: IEnumerableExtensions.ContainsAny<TListItem>(System.Collections.Generic.IEnumerable<TListItem>)
  nameWithType.vb: IEnumerableExtensions.ContainsAny(Of TListItem)(IEnumerable(Of TListItem))
  fullName.vb: IEnumerableExtensions.ContainsAny(Of TListItem)(System.Collections.Generic.IEnumerable(Of TListItem))
  name.vb: ContainsAny(Of TListItem)(IEnumerable(Of TListItem))
  spec.csharp:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny<TListItem>
    nameWithType: IEnumerableExtensions.ContainsAny<TListItem>
    fullName: IEnumerableExtensions.ContainsAny<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny(Of TListItem)
    nameWithType: IEnumerableExtensions.ContainsAny(Of TListItem)
    fullName: IEnumerableExtensions.ContainsAny(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.Batch``1(System.Int32)
  commentId: M:IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Batch<TListItem>(Int32)
  nameWithType: IEnumerableExtensions.Batch<TListItem>(Int32)
  fullName: IEnumerableExtensions.Batch<TListItem>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.Batch(Of TListItem)(Int32)
  fullName.vb: IEnumerableExtensions.Batch(Of TListItem)(System.Int32)
  name.vb: Batch(Of TListItem)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Batch``1(System.Int32)
    name: Batch<TListItem>
    nameWithType: IEnumerableExtensions.Batch<TListItem>
    fullName: IEnumerableExtensions.Batch<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Batch``1(System.Int32)
    name: Batch(Of TListItem)
    nameWithType: IEnumerableExtensions.Batch(Of TListItem)
    fullName: IEnumerableExtensions.Batch(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.IndexOf``1({TListItem},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  name: IndexOf<TListItem>(TListItem, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<TListItem>(TListItem, Int32)
  fullName: IEnumerableExtensions.IndexOf<TListItem>(TListItem, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of TListItem)(TListItem, Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of TListItem)(TListItem, System.Int32)
  name.vb: IndexOf(Of TListItem)(TListItem, Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(``0,System.Int32)
    name: IndexOf<TListItem>
    nameWithType: IEnumerableExtensions.IndexOf<TListItem>
    fullName: IEnumerableExtensions.IndexOf<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(``0,System.Int32)
    name: IndexOf(Of TListItem)
    nameWithType: IEnumerableExtensions.IndexOf(Of TListItem)
    fullName: IEnumerableExtensions.IndexOf(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.IndexOf``1(System.Func{{TListItem},System.Boolean},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  name: IndexOf<TListItem>(Func<TListItem, Boolean>, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<TListItem>(Func<TListItem, Boolean>, Int32)
  fullName: IEnumerableExtensions.IndexOf<TListItem>(System.Func<TListItem, System.Boolean>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of TListItem)(Func(Of TListItem, Boolean), Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of TListItem)(System.Func(Of TListItem, System.Boolean), System.Int32)
  name.vb: IndexOf(Of TListItem)(Func(Of TListItem, Boolean), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf<TListItem>
    nameWithType: IEnumerableExtensions.IndexOf<TListItem>
    fullName: IEnumerableExtensions.IndexOf<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf(Of TListItem)
    nameWithType: IEnumerableExtensions.IndexOf(Of TListItem)
    fullName: IEnumerableExtensions.IndexOf(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.Permute``1(System.Int32)
  commentId: M:IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: Permute<TListItem>(Int32)
  nameWithType: IEnumerableExtensions.Permute<TListItem>(Int32)
  fullName: IEnumerableExtensions.Permute<TListItem>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.Permute(Of TListItem)(Int32)
  fullName.vb: IEnumerableExtensions.Permute(Of TListItem)(System.Int32)
  name.vb: Permute(Of TListItem)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Permute``1(System.Int32)
    name: Permute<TListItem>
    nameWithType: IEnumerableExtensions.Permute<TListItem>
    fullName: IEnumerableExtensions.Permute<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Permute``1(System.Int32)
    name: Permute(Of TListItem)
    nameWithType: IEnumerableExtensions.Permute(Of TListItem)
    fullName: IEnumerableExtensions.Permute(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{{TListItem},{K}},System.Func{{TListItem},{V}})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  name: PermissiveToDictionary<TListItem, K, V>(Func<TListItem, K>, Func<TListItem, V>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>(Func<TListItem, K>, Func<TListItem, V>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>(System.Func<TListItem, K>, System.Func<TListItem, V>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)(Func(Of TListItem, K), Func(Of TListItem, V))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)(System.Func(Of TListItem, K), System.Func(Of TListItem, V))
  name.vb: PermissiveToDictionary(Of TListItem, K, V)(Func(Of TListItem, K), Func(Of TListItem, V))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary<TListItem, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary(Of TListItem, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.PermissiveToDictionary``3(System.Func{{TListItem},{K}},System.Func{{TListItem},{V}},System.Collections.Generic.IEqualityComparer{{K}})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  name: PermissiveToDictionary<TListItem, K, V>(Func<TListItem, K>, Func<TListItem, V>, IEqualityComparer<K>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>(Func<TListItem, K>, Func<TListItem, V>, IEqualityComparer<K>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>(System.Func<TListItem, K>, System.Func<TListItem, V>, System.Collections.Generic.IEqualityComparer<K>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)(Func(Of TListItem, K), Func(Of TListItem, V), IEqualityComparer(Of K))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)(System.Func(Of TListItem, K), System.Func(Of TListItem, V), System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: PermissiveToDictionary(Of TListItem, K, V)(Func(Of TListItem, K), Func(Of TListItem, V), IEqualityComparer(Of K))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary<TListItem, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<TListItem, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary(Of TListItem, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of TListItem, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
  commentId: M:IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: IEnumerableExtensions
  definition: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: GetDifferentCombinations<TListItem>(Int32)
  nameWithType: IEnumerableExtensions.GetDifferentCombinations<TListItem>(Int32)
  fullName: IEnumerableExtensions.GetDifferentCombinations<TListItem>(System.Int32)
  nameWithType.vb: IEnumerableExtensions.GetDifferentCombinations(Of TListItem)(Int32)
  fullName.vb: IEnumerableExtensions.GetDifferentCombinations(Of TListItem)(System.Int32)
  name.vb: GetDifferentCombinations(Of TListItem)(Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
    name: GetDifferentCombinations<TListItem>
    nameWithType: IEnumerableExtensions.GetDifferentCombinations<TListItem>
    fullName: IEnumerableExtensions.GetDifferentCombinations<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Int32)
    name: GetDifferentCombinations(Of TListItem)
    nameWithType: IEnumerableExtensions.GetDifferentCombinations(Of TListItem)
    fullName: IEnumerableExtensions.GetDifferentCombinations(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{`1}.SuperOffice.Util.CollectionOps.AtLeastOne``1
  commentId: M:SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  parent: SuperOffice.Util.CollectionOps
  definition: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  name: AtLeastOne<TListItem>()
  nameWithType: CollectionOps.AtLeastOne<TListItem>()
  fullName: SuperOffice.Util.CollectionOps.AtLeastOne<TListItem>()
  nameWithType.vb: CollectionOps.AtLeastOne(Of TListItem)()
  fullName.vb: SuperOffice.Util.CollectionOps.AtLeastOne(Of TListItem)()
  name.vb: AtLeastOne(Of TListItem)()
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1
    name: AtLeastOne<TListItem>
    nameWithType: CollectionOps.AtLeastOne<TListItem>
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne<TListItem>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1
    name: AtLeastOne(Of TListItem)
    nameWithType: CollectionOps.AtLeastOne(Of TListItem)
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne(Of TListItem)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ListBase<TListSelect, TListItem>, To>()
  nameWithType: Converters.MapEnums<ListBase<TListSelect, TListItem>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>, To>()
  nameWithType.vb: Converters.MapEnums(Of ListBase(Of TListSelect, TListItem), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem), To)()
  name.vb: MapEnums(Of ListBase(Of TListSelect, TListItem), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ListBase<TListSelect, TListItem>, To>
    nameWithType: Converters.MapEnums<ListBase<TListSelect, TListItem>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ListBase(Of TListSelect, TListItem), To)
    nameWithType: Converters.MapEnums(Of ListBase(Of TListSelect, TListItem), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  commentId: M:IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
  isExternal: true
  name: ForEach<T>(IEnumerable<T>, Action<T>)
  nameWithType: IEnumerableExtensions.ForEach<T>(IEnumerable<T>, Action<T>)
  fullName: IEnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)
  nameWithType.vb: IEnumerableExtensions.ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  fullName.vb: IEnumerableExtensions.ForEach(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Action(Of T))
  name.vb: ForEach(Of T)(IEnumerable(Of T), Action(Of T))
  spec.csharp:
  - uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach<T>
    nameWithType: IEnumerableExtensions.ForEach<T>
    fullName: IEnumerableExtensions.ForEach<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})
    name: ForEach(Of T)
    nameWithType: IEnumerableExtensions.ForEach(Of T)
    fullName: IEnumerableExtensions.ForEach(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions
  commentId: T:IEnumerableExtensions
  isExternal: true
  name: IEnumerableExtensions
  nameWithType: IEnumerableExtensions
  fullName: IEnumerableExtensions
- uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: ContainsAny<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: IEnumerableExtensions.ContainsAny<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: IEnumerableExtensions.ContainsAny<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: IEnumerableExtensions.ContainsAny(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: IEnumerableExtensions.ContainsAny(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: ContainsAny(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny<T>
    nameWithType: IEnumerableExtensions.ContainsAny<T>
    fullName: IEnumerableExtensions.ContainsAny<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.ContainsAny``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: ContainsAny(Of T)
    nameWithType: IEnumerableExtensions.ContainsAny(Of T)
    fullName: IEnumerableExtensions.ContainsAny(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Batch<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.Batch<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.Batch<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.Batch(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.Batch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: Batch(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch<T>
    nameWithType: IEnumerableExtensions.Batch<T>
    fullName: IEnumerableExtensions.Batch<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Batch(Of T)
    nameWithType: IEnumerableExtensions.Batch(Of T)
    fullName: IEnumerableExtensions.Batch(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
  isExternal: true
  name: IndexOf<T>(IEnumerable<T>, T, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<T>(IEnumerable<T>, T, Int32)
  fullName: IEnumerableExtensions.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, T, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of T)(IEnumerable(Of T), T, Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of T)(System.Collections.Generic.IEnumerable(Of T), T, System.Int32)
  name.vb: IndexOf(Of T)(IEnumerable(Of T), T, Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
    name: IndexOf<T>
    nameWithType: IEnumerableExtensions.IndexOf<T>
    fullName: IEnumerableExtensions.IndexOf<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Int32)
    name: IndexOf(Of T)
    nameWithType: IEnumerableExtensions.IndexOf(Of T)
    fullName: IEnumerableExtensions.IndexOf(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  commentId: M:IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
  isExternal: true
  name: IndexOf<T>(IEnumerable<T>, Func<T, Boolean>, Int32)
  nameWithType: IEnumerableExtensions.IndexOf<T>(IEnumerable<T>, Func<T, Boolean>, Int32)
  fullName: IEnumerableExtensions.IndexOf<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Boolean>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.IndexOf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Int32)
  fullName.vb: IEnumerableExtensions.IndexOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Boolean), System.Int32)
  name.vb: IndexOf(Of T)(IEnumerable(Of T), Func(Of T, Boolean), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf<T>
    nameWithType: IEnumerableExtensions.IndexOf<T>
    fullName: IEnumerableExtensions.IndexOf<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Int32)
    name: IndexOf(Of T)
    nameWithType: IEnumerableExtensions.IndexOf(Of T)
    fullName: IEnumerableExtensions.IndexOf(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: Permute<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.Permute<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.Permute<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.Permute(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.Permute(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: Permute(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Permute<T>
    nameWithType: IEnumerableExtensions.Permute<T>
    fullName: IEnumerableExtensions.Permute<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.Permute``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: Permute(Of T)
    nameWithType: IEnumerableExtensions.Permute(Of T)
    fullName: IEnumerableExtensions.Permute(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  isExternal: true
  name: PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(System.Collections.Generic.IEnumerable<T>, System.Func<T, K>, System.Func<T, V>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, K), System.Func(Of T, V))
  name.vb: PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary<T, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
    name: PermissiveToDictionary(Of T, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  commentId: M:IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  isExternal: true
  name: PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>, IEqualityComparer<K>)
  nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(IEnumerable<T>, Func<T, K>, Func<T, V>, IEqualityComparer<K>)
  fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>(System.Collections.Generic.IEnumerable<T>, System.Func<T, K>, System.Func<T, V>, System.Collections.Generic.IEqualityComparer<K>)
  nameWithType.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V), IEqualityComparer(Of K))
  fullName.vb: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, K), System.Func(Of T, V), System.Collections.Generic.IEqualityComparer(Of K))
  name.vb: PermissiveToDictionary(Of T, K, V)(IEnumerable(Of T), Func(Of T, K), Func(Of T, V), IEqualityComparer(Of K))
  spec.csharp:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary<T, K, V>
    nameWithType: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    fullName: IEnumerableExtensions.PermissiveToDictionary<T, K, V>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: K
    nameWithType: K
    fullName: K
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.PermissiveToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
    name: PermissiveToDictionary(Of T, K, V)
    nameWithType: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    fullName: IEnumerableExtensions.PermissiveToDictionary(Of T, K, V)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: V
    nameWithType: V
    fullName: V
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: K
    nameWithType: K
    fullName: K
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: GetDifferentCombinations<T>(IEnumerable<T>, Int32)
  nameWithType: IEnumerableExtensions.GetDifferentCombinations<T>(IEnumerable<T>, Int32)
  fullName: IEnumerableExtensions.GetDifferentCombinations<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: IEnumerableExtensions.GetDifferentCombinations(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: IEnumerableExtensions.GetDifferentCombinations(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: GetDifferentCombinations(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GetDifferentCombinations<T>
    nameWithType: IEnumerableExtensions.GetDifferentCombinations<T>
    fullName: IEnumerableExtensions.GetDifferentCombinations<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: IEnumerableExtensions.GetDifferentCombinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: GetDifferentCombinations(Of T)
    nameWithType: IEnumerableExtensions.GetDifferentCombinations(Of T)
    fullName: IEnumerableExtensions.GetDifferentCombinations(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: AtLeastOne<T>(IEnumerable<T>)
  nameWithType: CollectionOps.AtLeastOne<T>(IEnumerable<T>)
  fullName: SuperOffice.Util.CollectionOps.AtLeastOne<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: CollectionOps.AtLeastOne(Of T)(IEnumerable(Of T))
  fullName.vb: SuperOffice.Util.CollectionOps.AtLeastOne(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AtLeastOne(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
    name: AtLeastOne<T>
    nameWithType: CollectionOps.AtLeastOne<T>
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.CollectionOps.AtLeastOne``1(System.Collections.Generic.IEnumerable{``0})
    name: AtLeastOne(Of T)
    nameWithType: CollectionOps.AtLeastOne(Of T)
    fullName: SuperOffice.Util.CollectionOps.AtLeastOne(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.CollectionOps
  commentId: T:SuperOffice.Util.CollectionOps
  parent: SuperOffice.Util
  isExternal: true
  name: CollectionOps
  nameWithType: CollectionOps
  fullName: SuperOffice.Util.CollectionOps
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#get_Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#get_Item
  isExternal: true
  name: IList.get_Item
  nameWithType: ListBase<TListSelect, TListItem>.IList.get_Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.get_Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.get_Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.get_Item
  name.vb: System.Collections.IList.get_Item
- uid: System.Collections.IList.get_Item(System.Int32)
  commentId: M:System.Collections.IList.get_Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: get_Item(Int32)
  nameWithType: IList.get_Item(Int32)
  fullName: System.Collections.IList.get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.get_Item(System.Int32)
    name: get_Item
    nameWithType: IList.get_Item
    fullName: System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.get_Item(System.Int32)
    name: get_Item
    nameWithType: IList.get_Item
    fullName: System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#set_Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#set_Item
  isExternal: true
  name: IList.set_Item
  nameWithType: ListBase<TListSelect, TListItem>.IList.set_Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.set_Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.set_Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.set_Item
  name.vb: System.Collections.IList.set_Item
- uid: System.Collections.IList.set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.IList.set_Item(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: set_Item(Int32, Object)
  nameWithType: IList.set_Item(Int32, Object)
  fullName: System.Collections.IList.set_Item(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.set_Item(System.Int32,System.Object)
    name: set_Item
    nameWithType: IList.set_Item
    fullName: System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.set_Item(System.Int32,System.Object)
    name: set_Item
    nameWithType: IList.set_Item
    fullName: System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#get_Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#get_Item
  isExternal: true
  name: IList<TListItem>.get_Item
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.get_Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.get_Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.get_Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.get_Item
  name.vb: System.Collections.Generic.IList<TListItem>.get_Item
- uid: System.Collections.Generic.IList{{TListItem}}.get_Item(System.Int32)
  commentId: M:System.Collections.Generic.IList{`1}.get_Item(System.Int32)
  parent: System.Collections.Generic.IList{{TListItem}}
  definition: System.Collections.Generic.IList`1.get_Item(System.Int32)
  name: get_Item(Int32)
  nameWithType: IList<TListItem>.get_Item(Int32)
  fullName: System.Collections.Generic.IList<TListItem>.get_Item(System.Int32)
  nameWithType.vb: IList(Of TListItem).get_Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of TListItem).get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.get_Item(System.Int32)
    name: get_Item
    nameWithType: IList<TListItem>.get_Item
    fullName: System.Collections.Generic.IList<TListItem>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.get_Item(System.Int32)
    name: get_Item
    nameWithType: IList(Of TListItem).get_Item
    fullName: System.Collections.Generic.IList(Of TListItem).get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TListItem}'
  commentId: '!:TListItem'
  definition: TListItem
  name: TListItem
  nameWithType: TListItem
  fullName: TListItem
- uid: System.Collections.Generic.IList`1.get_Item(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.get_Item(System.Int32)
  isExternal: true
  name: get_Item(Int32)
  nameWithType: IList<T>.get_Item(Int32)
  fullName: System.Collections.Generic.IList<T>.get_Item(System.Int32)
  nameWithType.vb: IList(Of T).get_Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.get_Item(System.Int32)
    name: get_Item
    nameWithType: IList<T>.get_Item
    fullName: System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.get_Item(System.Int32)
    name: get_Item
    nameWithType: IList(Of T).get_Item
    fullName: System.Collections.Generic.IList(Of T).get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TListItem
  name: TListItem
  nameWithType: TListItem
  fullName: TListItem
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#set_Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#set_Item
  isExternal: true
  name: IList<TListItem>.set_Item
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.set_Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.set_Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.set_Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.set_Item
  name.vb: System.Collections.Generic.IList<TListItem>.set_Item
- uid: System.Collections.Generic.IList{{TListItem}}.set_Item(System.Int32,{TListItem})
  commentId: M:System.Collections.Generic.IList{`1}.set_Item(System.Int32,`1)
  parent: System.Collections.Generic.IList{{TListItem}}
  definition: System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
  name: set_Item(Int32, TListItem)
  nameWithType: IList<TListItem>.set_Item(Int32, TListItem)
  fullName: System.Collections.Generic.IList<TListItem>.set_Item(System.Int32, TListItem)
  nameWithType.vb: IList(Of TListItem).set_Item(Int32, TListItem)
  fullName.vb: System.Collections.Generic.IList(Of TListItem).set_Item(System.Int32, TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
    name: set_Item
    nameWithType: IList<TListItem>.set_Item
    fullName: System.Collections.Generic.IList<TListItem>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
    name: set_Item
    nameWithType: IList(Of TListItem).set_Item
    fullName: System.Collections.Generic.IList(Of TListItem).set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
  isExternal: true
  name: set_Item(Int32, T)
  nameWithType: IList<T>.set_Item(Int32, T)
  fullName: System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  nameWithType.vb: IList(Of T).set_Item(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).set_Item(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
    name: set_Item
    nameWithType: IList<T>.set_Item
    fullName: System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.set_Item(System.Int32,`0)
    name: set_Item
    nameWithType: IList(Of T).set_Item
    fullName: System.Collections.Generic.IList(Of T).set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.CopyTo
  isExternal: true
  name: CopyTo
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
- uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)
  parent: System.Collections.ICollection
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ICollection.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ICollection.CopyTo
    fullName: System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Generic.ICollection{{TListItem}}.CopyTo({TListItem}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`1}.CopyTo(`1[],System.Int32)
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(TListItem[], Int32)
  nameWithType: ICollection<TListItem>.CopyTo(TListItem[], Int32)
  fullName: System.Collections.Generic.ICollection<TListItem>.CopyTo(TListItem[], System.Int32)
  nameWithType.vb: ICollection(Of TListItem).CopyTo(TListItem(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).CopyTo(TListItem(), System.Int32)
  name.vb: CopyTo(TListItem(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<TListItem>.CopyTo
    fullName: System.Collections.Generic.ICollection<TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of TListItem).CopyTo
    fullName: System.Collections.Generic.ICollection(Of TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{TListItem}[]'
  isExternal: true
  name: TListItem[]
  nameWithType: TListItem[]
  fullName: TListItem[]
  nameWithType.vb: TListItem()
  fullName.vb: TListItem()
  name.vb: TListItem()
  spec.csharp:
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Add*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Add
  isExternal: true
  name: IList.Add
  nameWithType: ListBase<TListSelect, TListItem>.IList.Add
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Add
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Add
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Add
  name.vb: System.Collections.IList.Add
- uid: System.Collections.IList.Add(System.Object)
  commentId: M:System.Collections.IList.Add(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Add(Object)
  nameWithType: IList.Add(Object)
  fullName: System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Add(System.Object)
    name: Add
    nameWithType: IList.Add
    fullName: System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Add*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Add
  isExternal: true
  name: ICollection<TListItem>.Add
  nameWithType: ListBase<TListSelect, TListItem>.ICollection<TListItem>.Add
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.ICollection<TListItem>.Add
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Add
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Add
  name.vb: System.Collections.Generic.ICollection<TListItem>.Add
- uid: System.Collections.Generic.ICollection{{TListItem}}.Add({TListItem})
  commentId: M:System.Collections.Generic.ICollection{`1}.Add(`1)
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(TListItem)
  nameWithType: ICollection<TListItem>.Add(TListItem)
  fullName: System.Collections.Generic.ICollection<TListItem>.Add(TListItem)
  nameWithType.vb: ICollection(Of TListItem).Add(TListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).Add(TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<TListItem>.Add
    fullName: System.Collections.Generic.ICollection<TListItem>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of TListItem).Add
    fullName: System.Collections.Generic.ICollection(Of TListItem).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#IndexOf*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#IndexOf
  isExternal: true
  name: IList.IndexOf
  nameWithType: ListBase<TListSelect, TListItem>.IList.IndexOf
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.IndexOf
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.IndexOf
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.IndexOf
  name.vb: System.Collections.IList.IndexOf
- uid: System.Collections.IList.IndexOf(System.Object)
  commentId: M:System.Collections.IList.IndexOf(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: IndexOf(Object)
  nameWithType: IList.IndexOf(Object)
  fullName: System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.IndexOf(System.Object)
    name: IndexOf
    nameWithType: IList.IndexOf
    fullName: System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.IndexOf
  isExternal: true
  name: IndexOf
  nameWithType: ListBase<TListSelect, TListItem>.IndexOf
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IndexOf
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf
- uid: System.Collections.Generic.IList{{TListItem}}.IndexOf({TListItem})
  commentId: M:System.Collections.Generic.IList{`1}.IndexOf(`1)
  parent: System.Collections.Generic.IList{{TListItem}}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(TListItem)
  nameWithType: IList<TListItem>.IndexOf(TListItem)
  fullName: System.Collections.Generic.IList<TListItem>.IndexOf(TListItem)
  nameWithType.vb: IList(Of TListItem).IndexOf(TListItem)
  fullName.vb: System.Collections.Generic.IList(Of TListItem).IndexOf(TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<TListItem>.IndexOf
    fullName: System.Collections.Generic.IList<TListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of TListItem).IndexOf
    fullName: System.Collections.Generic.IList(Of TListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Contains*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Contains
  isExternal: true
  name: IList.Contains
  nameWithType: ListBase<TListSelect, TListItem>.IList.Contains
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Contains
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Contains
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Contains
  name.vb: System.Collections.IList.Contains
- uid: System.Collections.IList.Contains(System.Object)
  commentId: M:System.Collections.IList.Contains(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Contains(Object)
  nameWithType: IList.Contains(Object)
  fullName: System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Contains(System.Object)
    name: Contains
    nameWithType: IList.Contains
    fullName: System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Lists.ListBase`2.Contains*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.Contains
  isExternal: true
  name: Contains
  nameWithType: ListBase<TListSelect, TListItem>.Contains
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Contains
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains
- uid: System.Collections.Generic.ICollection{{TListItem}}.Contains({TListItem})
  commentId: M:System.Collections.Generic.ICollection{`1}.Contains(`1)
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(TListItem)
  nameWithType: ICollection<TListItem>.Contains(TListItem)
  fullName: System.Collections.Generic.ICollection<TListItem>.Contains(TListItem)
  nameWithType.vb: ICollection(Of TListItem).Contains(TListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).Contains(TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<TListItem>.Contains
    fullName: System.Collections.Generic.ICollection<TListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of TListItem).Contains
    fullName: System.Collections.Generic.ICollection(Of TListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Clear*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Clear
  isExternal: true
  name: IList.Clear
  nameWithType: ListBase<TListSelect, TListItem>.IList.Clear
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Clear
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Clear
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Clear
  name.vb: System.Collections.IList.Clear
- uid: System.Collections.IList.Clear
  commentId: M:System.Collections.IList.Clear
  parent: System.Collections.IList
  isExternal: true
  name: Clear()
  nameWithType: IList.Clear()
  fullName: System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Clear
    name: Clear
    nameWithType: IList.Clear
    fullName: System.Collections.IList.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Clear*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Clear
  isExternal: true
  name: ICollection<TListItem>.Clear
  nameWithType: ListBase<TListSelect, TListItem>.ICollection<TListItem>.Clear
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.ICollection<TListItem>.Clear
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Clear
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Clear
  name.vb: System.Collections.Generic.ICollection<TListItem>.Clear
- uid: System.Collections.Generic.ICollection{{TListItem}}.Clear
  commentId: M:System.Collections.Generic.ICollection{`1}.Clear
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<TListItem>.Clear()
  fullName: System.Collections.Generic.ICollection<TListItem>.Clear()
  nameWithType.vb: ICollection(Of TListItem).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<TListItem>.Clear
    fullName: System.Collections.Generic.ICollection<TListItem>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of TListItem).Clear
    fullName: System.Collections.Generic.ICollection(Of TListItem).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Insert*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Insert
  isExternal: true
  name: IList.Insert
  nameWithType: ListBase<TListSelect, TListItem>.IList.Insert
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Insert
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Insert
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Insert
  name.vb: System.Collections.IList.Insert
- uid: System.Collections.IList.Insert(System.Int32,System.Object)
  commentId: M:System.Collections.IList.Insert(System.Int32,System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Insert(Int32, Object)
  nameWithType: IList.Insert(Int32, Object)
  fullName: System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Insert(System.Int32,System.Object)
    name: Insert
    nameWithType: IList.Insert
    fullName: System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Insert*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Insert
  isExternal: true
  name: IList<TListItem>.Insert
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.Insert
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.Insert
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Insert
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Insert
  name.vb: System.Collections.Generic.IList<TListItem>.Insert
- uid: System.Collections.Generic.IList{{TListItem}}.Insert(System.Int32,{TListItem})
  commentId: M:System.Collections.Generic.IList{`1}.Insert(System.Int32,`1)
  parent: System.Collections.Generic.IList{{TListItem}}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, TListItem)
  nameWithType: IList<TListItem>.Insert(Int32, TListItem)
  fullName: System.Collections.Generic.IList<TListItem>.Insert(System.Int32, TListItem)
  nameWithType.vb: IList(Of TListItem).Insert(Int32, TListItem)
  fullName.vb: System.Collections.Generic.IList(Of TListItem).Insert(System.Int32, TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<TListItem>.Insert
    fullName: System.Collections.Generic.IList<TListItem>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of TListItem).Insert
    fullName: System.Collections.Generic.IList(Of TListItem).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Remove*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Remove
  isExternal: true
  name: IList.Remove
  nameWithType: ListBase<TListSelect, TListItem>.IList.Remove
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Remove
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Remove
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Remove
  name.vb: System.Collections.IList.Remove
- uid: System.Collections.IList.Remove(System.Object)
  commentId: M:System.Collections.IList.Remove(System.Object)
  parent: System.Collections.IList
  isExternal: true
  name: Remove(Object)
  nameWithType: IList.Remove(Object)
  fullName: System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.Remove(System.Object)
    name: Remove
    nameWithType: IList.Remove
    fullName: System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Remove*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#ICollection{TListItem}#Remove
  isExternal: true
  name: ICollection<TListItem>.Remove
  nameWithType: ListBase<TListSelect, TListItem>.ICollection<TListItem>.Remove
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.ICollection<TListItem>.Remove
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Remove
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.ICollection<TListItem>.Remove
  name.vb: System.Collections.Generic.ICollection<TListItem>.Remove
- uid: System.Collections.Generic.ICollection{{TListItem}}.Remove({TListItem})
  commentId: M:System.Collections.Generic.ICollection{`1}.Remove(`1)
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(TListItem)
  nameWithType: ICollection<TListItem>.Remove(TListItem)
  fullName: System.Collections.Generic.ICollection<TListItem>.Remove(TListItem)
  nameWithType.vb: ICollection(Of TListItem).Remove(TListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).Remove(TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<TListItem>.Remove
    fullName: System.Collections.Generic.ICollection<TListItem>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of TListItem).Remove
    fullName: System.Collections.Generic.ICollection(Of TListItem).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#RemoveAt*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#RemoveAt
  isExternal: true
  name: IList.RemoveAt
  nameWithType: ListBase<TListSelect, TListItem>.IList.RemoveAt
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.RemoveAt
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.RemoveAt
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.RemoveAt
  name.vb: System.Collections.IList.RemoveAt
- uid: System.Collections.IList.RemoveAt(System.Int32)
  commentId: M:System.Collections.IList.RemoveAt(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList.RemoveAt(Int32)
  fullName: System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IList.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList.RemoveAt
    fullName: System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#RemoveAt*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#RemoveAt
  isExternal: true
  name: IList<TListItem>.RemoveAt
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.RemoveAt
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.RemoveAt
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.RemoveAt
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.RemoveAt
  name.vb: System.Collections.Generic.IList<TListItem>.RemoveAt
- uid: System.Collections.Generic.IList{{TListItem}}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{`1}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{{TListItem}}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<TListItem>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<TListItem>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of TListItem).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of TListItem).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<TListItem>.RemoveAt
    fullName: System.Collections.Generic.IList<TListItem>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of TListItem).RemoveAt
    fullName: System.Collections.Generic.IList(Of TListItem).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.#ctor
  isExternal: true
  name: ListBase
  nameWithType: ListBase<TListSelect, TListItem>.ListBase
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListBase
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListBase
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListBase
- uid: SuperOffice.CRM.Lists.ListBase`2.OnLoad*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: ListBase<TListSelect, TListItem>.OnLoad
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoad
  nameWithType.vb: ListBase(Of TListSelect, TListItem).OnLoad
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoad
- uid: '{TListSelect}'
  commentId: '!:TListSelect'
  definition: TListSelect
  name: TListSelect
  nameWithType: TListSelect
  fullName: TListSelect
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: TListSelect
  name: TListSelect
  nameWithType: TListSelect
  fullName: TListSelect
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  isExternal: true
  name: GetEnumerator
  nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator
  nameWithType.vb: ListBase(Of TListSelect, TListItem).GetEnumerator
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IEnumerable{TListItem}#GetEnumerator
  isExternal: true
  name: IEnumerable<TListItem>.GetEnumerator
  nameWithType: ListBase<TListSelect, TListItem>.IEnumerable<TListItem>.GetEnumerator
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{TListItem}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`1}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TListItem}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<TListItem>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of TListItem).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TListItem).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<TListItem>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of TListItem).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TListItem}}
  commentId: T:System.Collections.Generic.IEnumerator{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TListItem>
  nameWithType: IEnumerator<TListItem>
  fullName: System.Collections.Generic.IEnumerator<TListItem>
  nameWithType.vb: IEnumerator(Of TListItem)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TListItem)
  name.vb: IEnumerator(Of TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.Item
  isExternal: true
  name: Item
  nameWithType: ListBase<TListSelect, TListItem>.Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item
- uid: SuperOffice.CRM.Lists.ListBase`2.ListCollection*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.ListCollection
  isExternal: true
  name: ListCollection
  nameWithType: ListBase<TListSelect, TListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListCollection
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListCollection
- uid: System.Collections.Generic.List{{TListItem}}
  commentId: T:System.Collections.Generic.List{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TListItem>
  nameWithType: List<TListItem>
  fullName: System.Collections.Generic.List<TListItem>
  nameWithType.vb: List(Of TListItem)
  fullName.vb: System.Collections.Generic.List(Of TListItem)
  name.vb: List(Of TListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#IList#Item
  isExternal: true
  name: IList.Item
  nameWithType: ListBase<TListSelect, TListItem>.IList.Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.IList.Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.IList.Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.IList.Item
  name.vb: System.Collections.IList.Item
- uid: System.Collections.IList.Item(System.Int32)
  commentId: P:System.Collections.IList.Item(System.Int32)
  parent: System.Collections.IList
  isExternal: true
  name: Item[Int32]
  nameWithType: IList.Item[Int32]
  fullName: System.Collections.IList.Item[System.Int32]
  nameWithType.vb: IList.Item(Int32)
  fullName.vb: System.Collections.IList.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.IList.Item(System.Int32)
    name: Item
    nameWithType: IList.Item
    fullName: System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Exceptions.SoNotImplementedException
  commentId: T:SuperOffice.Exceptions.SoNotImplementedException
  isExternal: true
  name: SoNotImplementedException
  nameWithType: SoNotImplementedException
  fullName: SuperOffice.Exceptions.SoNotImplementedException
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Item*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#Generic#IList{TListItem}#Item
  isExternal: true
  name: IList<TListItem>.Item
  nameWithType: ListBase<TListSelect, TListItem>.IList<TListItem>.Item
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.Generic.IList<TListItem>.Item
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Item
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.Generic.IList<TListItem>.Item
  name.vb: System.Collections.Generic.IList<TListItem>.Item
- uid: System.Collections.Generic.IList{{TListItem}}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{`1}.Item(System.Int32)
  parent: System.Collections.Generic.IList{{TListItem}}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<TListItem>.Item[Int32]
  fullName: System.Collections.Generic.IList<TListItem>.Item[System.Int32]
  nameWithType.vb: IList(Of TListItem).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of TListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<TListItem>.Item
    fullName: System.Collections.Generic.IList<TListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of TListItem).Item
    fullName: System.Collections.Generic.IList(Of TListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Count*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.Count
  isExternal: true
  name: Count
  nameWithType: ListBase<TListSelect, TListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Count
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Count
- uid: System.Collections.ICollection.Count
  commentId: P:System.Collections.ICollection.Count
  parent: System.Collections.ICollection
  isExternal: true
  name: Count
  nameWithType: ICollection.Count
  fullName: System.Collections.ICollection.Count
- uid: System.Collections.Generic.ICollection{{TListItem}}.Count
  commentId: P:System.Collections.Generic.ICollection{`1}.Count
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<TListItem>.Count
  fullName: System.Collections.Generic.ICollection<TListItem>.Count
  nameWithType.vb: ICollection(Of TListItem).Count
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).Count
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  isExternal: true
  name: IsFixedSize
  nameWithType: ListBase<TListSelect, TListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsFixedSize
- uid: System.Collections.IList.IsFixedSize
  commentId: P:System.Collections.IList.IsFixedSize
  parent: System.Collections.IList
  isExternal: true
  name: IsFixedSize
  nameWithType: IList.IsFixedSize
  fullName: System.Collections.IList.IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ListBase<TListSelect, TListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsReadOnly
- uid: System.Collections.IList.IsReadOnly
  commentId: P:System.Collections.IList.IsReadOnly
  parent: System.Collections.IList
  isExternal: true
  name: IsReadOnly
  nameWithType: IList.IsReadOnly
  fullName: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.ICollection{{TListItem}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{`1}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{TListItem}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<TListItem>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<TListItem>.IsReadOnly
  nameWithType.vb: ICollection(Of TListItem).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of TListItem).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#IsSynchronized*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: ListBase<TListSelect, TListItem>.ICollection.IsSynchronized
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.ICollection.IsSynchronized
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ICollection.IsSynchronized
  commentId: P:System.Collections.ICollection.IsSynchronized
  parent: System.Collections.ICollection
  isExternal: true
  name: IsSynchronized
  nameWithType: ICollection.IsSynchronized
  fullName: System.Collections.ICollection.IsSynchronized
- uid: SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#SyncRoot*
  commentId: Overload:SuperOffice.CRM.Lists.ListBase`2.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: ListBase<TListSelect, TListItem>.ICollection.SyncRoot
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: ListBase(Of TListSelect, TListItem).System.Collections.ICollection.SyncRoot
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.ICollection.SyncRoot
  commentId: P:System.Collections.ICollection.SyncRoot
  parent: System.Collections.ICollection
  isExternal: true
  name: SyncRoot
  nameWithType: ICollection.SyncRoot
  fullName: System.Collections.ICollection.SyncRoot
