### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase
  commentId: T:SuperOffice.CRM.Lists.LiteralsOnlyBase
  id: LiteralsOnlyBase
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.#ctor
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  langs:
  - csharp
  - vb
  name: LiteralsOnlyBase
  nameWithType: LiteralsOnlyBase
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nBase class for making So List providers that represent one single, hard-coded list, i.e., a list where\nall the items are hard coded and known at compile or run time. Generally, items do not come from the database,\nthough that would always be possible. See the <xref href=\"SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems\" data-throw-if-not-resolved=\"false\"></xref> method for an example subclass implementation.\n"
  syntax:
    content: 'public abstract class LiteralsOnlyBase : ISoListProvider, ISoList, IPlugin'
    content.vb: >-
      Public MustInherit Class LiteralsOnlyBase
          Implements ISoListProvider, ISoList, IPlugin
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.ArchiveLists.OperatorProvider
  - SuperOffice.CRM.ArchiveLists.RecordTypeProvider
  - SuperOffice.CRM.ArchiveLists.SaintActivityTypeProvider
  - SuperOffice.CRM.ArchiveLists.SaintTicketStatusProvider
  - SuperOffice.CRM.Lists.ActivityStatusProvider
  - SuperOffice.CRM.Lists.AllPreferenceKeysProvider
  - SuperOffice.CRM.Lists.AppointmentCautionWarningProvider
  - SuperOffice.CRM.Lists.AppointmentCompleted
  - SuperOffice.CRM.Lists.AppointmentFavouriteListProvider
  - SuperOffice.CRM.Lists.AppointmentGroupProvider
  - SuperOffice.CRM.Lists.AppointmentTypeProvider
  - SuperOffice.CRM.Lists.AssociateTypeListProvider
  - SuperOffice.CRM.Lists.ChatbotProvider
  - SuperOffice.CRM.Lists.ChatChannelProvider
  - SuperOffice.CRM.Lists.ChatUserProvider
  - SuperOffice.CRM.Lists.ColorIndexProvider
  - SuperOffice.CRM.Lists.ContactFavouriteListProvider
  - SuperOffice.CRM.Lists.CreateDocumentTemplatePluginsProvider
  - SuperOffice.CRM.Lists.CredentialGroupProvider
  - SuperOffice.CRM.Lists.CRMScriptProvider
  - SuperOffice.CRM.Lists.DashboardEntityList
  - SuperOffice.CRM.Lists.DashboardTileEntityTypeProvider
  - SuperOffice.CRM.Lists.DashboardTileListProvider
  - SuperOffice.CRM.Lists.DayOfMonthProvider
  - SuperOffice.CRM.Lists.DirectionProvider
  - SuperOffice.CRM.Lists.DisconnectPersonActionsProvider
  - SuperOffice.CRM.Lists.DocumentCompletedProvider
  - SuperOffice.CRM.Lists.DocumentFavouriteListProvider
  - SuperOffice.CRM.Lists.DocumentGroupProvider
  - SuperOffice.CRM.Lists.DocumentTypesListProvider
  - SuperOffice.CRM.Lists.EjUserProvider
  - SuperOffice.CRM.Lists.ErpConnections
  - SuperOffice.CRM.Lists.ErpConnectors
  - SuperOffice.CRM.Lists.EventHandlerTypeProvider
  - SuperOffice.CRM.Lists.ExecuteOnEventProvider
  - SuperOffice.CRM.Lists.ExportTemplateProvider
  - SuperOffice.CRM.Lists.FaqCategoryProvider
  - SuperOffice.CRM.Lists.FavouriteTypeListProvider
  - SuperOffice.CRM.Lists.FilterFutureDateList
  - SuperOffice.CRM.Lists.FindProduct
  - SuperOffice.CRM.Lists.FontSizeProvider
  - SuperOffice.CRM.Lists.FontTypeProvider
  - SuperOffice.CRM.Lists.FormMailingsProvider
  - SuperOffice.CRM.Lists.FormProvider
  - SuperOffice.CRM.Lists.FormSubmissionStatusProvider
  - SuperOffice.CRM.Lists.FreetextSearchEntityProvider
  - SuperOffice.CRM.Lists.ImportBlankActionProvider
  - SuperOffice.CRM.Lists.ImportContactDuplicateMatchProvider
  - SuperOffice.CRM.Lists.ImportDuplicateActionProvider
  - SuperOffice.CRM.Lists.ImportDuplicateActionWithoutAddProvider
  - SuperOffice.CRM.Lists.ImportFieldsProvider
  - SuperOffice.CRM.Lists.ImportNewListItemProvider
  - SuperOffice.CRM.Lists.ImportNewPositionItemProvider
  - SuperOffice.CRM.Lists.ImportNewProductListItemProvider
  - SuperOffice.CRM.Lists.ImportPersonDuplicateMatchProvider
  - SuperOffice.CRM.Lists.ImportPhoneUrlsEmailProvider
  - SuperOffice.CRM.Lists.ImportProductDuplicateMatchProvider
  - SuperOffice.CRM.Lists.ImportProductFieldsProvider
  - SuperOffice.CRM.Lists.Iso6391LanguageProvider
  - SuperOffice.CRM.Lists.LanguageProvider
  - SuperOffice.CRM.Lists.MailingFavouriteListProvider
  - SuperOffice.CRM.Lists.MailingTypeProvider
  - SuperOffice.CRM.Lists.MergeTagsProvider
  - SuperOffice.CRM.Lists.MonthProvider
  - SuperOffice.CRM.Lists.NextAvailableTime
  - SuperOffice.CRM.Lists.OfMonthProvider
  - SuperOffice.CRM.Lists.PeriodProvider
  - SuperOffice.CRM.Lists.PeriodsProvider
  - SuperOffice.CRM.Lists.PersonContactFavouriteListProvider
  - SuperOffice.CRM.Lists.PersonFavouriteListProvider
  - SuperOffice.CRM.Lists.PluginProvider
  - SuperOffice.CRM.Lists.PreferenceKeyProvider
  - SuperOffice.CRM.Lists.PreferenceLineItemProvider
  - SuperOffice.CRM.Lists.PreferenceSearchProvider
  - SuperOffice.CRM.Lists.PreferenceSectionProvider
  - SuperOffice.CRM.Lists.ProjectFavouriteListProvider
  - SuperOffice.CRM.Lists.QuoteAlternativeProvider
  - SuperOffice.CRM.Lists.QuoteApprovers
  - SuperOffice.CRM.Lists.QuoteConnections
  - SuperOffice.CRM.Lists.QuoteConnectors
  - SuperOffice.CRM.Lists.QuoteDocumentGroupFields
  - SuperOffice.CRM.Lists.QuoteDocumentOrderByFields
  - SuperOffice.CRM.Lists.QuoteDocumentTypeProvider
  - SuperOffice.CRM.Lists.QuoteLineStatus
  - SuperOffice.CRM.Lists.QuoteVersionProvider
  - SuperOffice.CRM.Lists.QuoteVersionStateListProvider
  - SuperOffice.CRM.Lists.RecurrenceEveryMonthProvider
  - SuperOffice.CRM.Lists.RecurrenceWeekCycleProvider
  - SuperOffice.CRM.Lists.ReportCategoryProvider
  - SuperOffice.CRM.Lists.ReportLayoutProvider
  - SuperOffice.CRM.Lists.SaleDoneProvider
  - SuperOffice.CRM.Lists.SaleFavouriteListProvider
  - SuperOffice.CRM.Lists.SaleStatusProvider
  - SuperOffice.CRM.Lists.SelectionFavouriteListProvider
  - SuperOffice.CRM.Lists.SelectionMemberTypeClean
  - SuperOffice.CRM.Lists.SelectionMemberTypeList
  - SuperOffice.CRM.Lists.SelectionMemberTypeListV2
  - SuperOffice.CRM.Lists.SelectionMemberWithMailListProvider
  - SuperOffice.CRM.Lists.SelectionTypeList
  - SuperOffice.CRM.Lists.SelectionUnionTypeList
  - SuperOffice.CRM.Lists.SentimentScoreProvider
  - SuperOffice.CRM.Lists.SourceListProvider
  - SuperOffice.CRM.Lists.SystemEventTypeProvider
  - SuperOffice.CRM.Lists.TicketFavouriteListProvider
  - SuperOffice.CRM.Lists.TicketOriginProvider
  - SuperOffice.CRM.Lists.TicketReadStatusProvider
  - SuperOffice.CRM.Lists.TicketSLevelProvider
  - SuperOffice.CRM.Lists.TicketStatusProvider
  - SuperOffice.CRM.Lists.TimeListProvider
  - SuperOffice.CRM.Lists.TypeGroupProvider
  - SuperOffice.CRM.Lists.TypicalSearchProvider
  - SuperOffice.CRM.Lists.UdefFieldsProviderBase
  - SuperOffice.CRM.Lists.UdefFieldTypeProvider
  - SuperOffice.CRM.Lists.VisibleForListProvider
  - SuperOffice.CRM.Lists.VisibleInMenuProvider
  - SuperOffice.CRM.Lists.VisibleInProvider
  - SuperOffice.CRM.Lists.VisibleInTaskProvider
  - SuperOffice.CRM.Lists.WeekdayProvider
  - SuperOffice.CRM.Lists.WeekNumberProvider
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider
  - SuperOffice.CRM.Lists.ISoList
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  id: AddItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: AddItems()
  nameWithType: LiteralsOnlyBase.AddItems()
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSubclass contract: use the <xref href=\"SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems\" data-throw-if-not-resolved=\"false\"></xref> properties to add items to\nyour literals-only list. The base class will then perform any search or flattening required.\n"
  remarks: "\nLists that only contain literals can be either flat or grouped. If you create a grouped list and the caller\nspecifies a forceFlatList attribute, the base class will do the flattening for you.\n"
  example:
  - "\nThis example shows a typical implementation of a literal list, in this case the date interval list from the Filter dialog:\n<pre><code>	[MDOProviderPlugin( &quot;FilterFutureDate&quot; )]\n	public class FilterFutureDateList : LiteralsOnlyBase\n	{\n		protected override void AddItems()\n		{\n			RawRootItems.Add( new SoListItem( 1, &quot;[SR_DATE_RANGE_3MONTHS]&quot;, string.Empty, string.Empty ) );\n			RawRootItems.Add( new SoListItem( 2, &quot;[SR_DATE_RANGE_4MONTHS]&quot;, string.Empty, string.Empty ) );\n			RawRootItems.Add( new SoListItem( 3, &quot;[SR_DATE_RANGE_6MONTHS]&quot;, string.Empty, string.Empty ) );\n			RawRootItems.Add( new SoListItem( 4, &quot;[SR_DATE_RANGE_1YEAR]&quot;, string.Empty, string.Empty ) );\n			RawRootItems.Add( new SoListItem( 5, &quot;[SR_DATE_RANGE_2YEAR]&quot;, string.Empty, string.Empty ) );\n		}\n	}</code></pre>\nNote that using a search in this case yields unexpected results. The search is performed on the raw items, which\ncontains resource tags - and that is not what you actually want to search against. So resources + search do not\ngo together.\n"
  syntax:
    content: protected abstract void AddItems()
    content.vb: Protected MustOverride Sub AddItems
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  id: Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: Construct(String, String, Int32[], Boolean, String, Boolean)
  nameWithType: LiteralsOnlyBase.Construct(String, String, Int32[], Boolean, String, Boolean)
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public virtual void Construct(string listName, string additionalInfo, int[] historyIDs, bool onlyReadHistory, string searchValue, bool forceFlatList)
    parameters:
    - id: listName
      type: System.String
    - id: additionalInfo
      type: System.String
    - id: historyIDs
      type: System.Int32[]
    - id: onlyReadHistory
      type: System.Boolean
    - id: searchValue
      type: System.String
    - id: forceFlatList
      type: System.Boolean
    content.vb: Public Overridable Sub Construct(listName As String, additionalInfo As String, historyIDs As Integer(), onlyReadHistory As Boolean, searchValue As String, forceFlatList As Boolean)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct*
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  nameWithType.vb: LiteralsOnlyBase.Construct(String, String, Int32(), Boolean, String, Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean)
  name.vb: Construct(String, String, Int32(), Boolean, String, Boolean)
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.#ctor
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: LiteralsOnlyBase()
  nameWithType: LiteralsOnlyBase.LiteralsOnlyBase()
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.LiteralsOnlyBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected LiteralsOnlyBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  id: ListName
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: ListName
  nameWithType: LiteralsOnlyBase.ListName
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected string ListName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ListName As String
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  id: ExtraInfo
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: ExtraInfo
  nameWithType: LiteralsOnlyBase.ExtraInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected string ExtraInfo { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property ExtraInfo As String
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  id: SearchValue
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: SearchValue
  nameWithType: LiteralsOnlyBase.SearchValue
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected string SearchValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property SearchValue As String
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  id: RawRootItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: RawRootItems
  nameWithType: LiteralsOnlyBase.RawRootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected List<ISoListItem> RawRootItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Protected ReadOnly Property RawRootItems As List(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  id: RawHeadingItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: RawHeadingItems
  nameWithType: LiteralsOnlyBase.RawHeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected List<ISoListHeading> RawHeadingItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}
    content.vb: Protected ReadOnly Property RawHeadingItems As List(Of ISoListHeading)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  id: RawHistoryItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: RawHistoryItems
  nameWithType: LiteralsOnlyBase.RawHistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected List<ISoListItem> RawHistoryItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Protected ReadOnly Property RawHistoryItems As List(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  id: HistoryInfo
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: HistoryInfo
  nameWithType: LiteralsOnlyBase.HistoryInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public HistoryInfo HistoryInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.HistoryInfo
    content.vb: Public ReadOnly Property HistoryInfo As HistoryInfo
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo*
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  id: HistoryItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: HistoryItems
  nameWithType: LiteralsOnlyBase.HistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public List<ISoListItem> HistoryItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Public ReadOnly Property HistoryItems As List(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems*
  implements:
  - SuperOffice.CRM.Lists.ISoList.HistoryItems
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  id: RootItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: RootItems
  nameWithType: LiteralsOnlyBase.RootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public List<ISoListItem> RootItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Public ReadOnly Property RootItems As List(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems*
  implements:
  - SuperOffice.CRM.Lists.ISoList.RootItems
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  id: HeadingItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  langs:
  - csharp
  - vb
  name: HeadingItems
  nameWithType: LiteralsOnlyBase.HeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public List<ISoListHeading> HeadingItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}
    content.vb: Public ReadOnly Property HeadingItems As List(Of ISoListHeading)
  overload: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems*
  implements:
  - SuperOffice.CRM.Lists.ISoList.HeadingItems
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ISoListProvider
  commentId: T:SuperOffice.CRM.Lists.ISoListProvider
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListProvider
  nameWithType: ISoListProvider
  fullName: SuperOffice.CRM.Lists.ISoListProvider
- uid: SuperOffice.CRM.Lists.ISoList
  commentId: T:SuperOffice.CRM.Lists.ISoList
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoList
  nameWithType: ISoList
  fullName: SuperOffice.CRM.Lists.ISoList
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<LiteralsOnlyBase, To>()
  nameWithType: EnumUtil.MapEnums<LiteralsOnlyBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.LiteralsOnlyBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of LiteralsOnlyBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.LiteralsOnlyBase, To)()
  name.vb: MapEnums(Of LiteralsOnlyBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<LiteralsOnlyBase, To>
    nameWithType: EnumUtil.MapEnums<LiteralsOnlyBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.LiteralsOnlyBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of LiteralsOnlyBase, To)
    nameWithType: EnumUtil.MapEnums(Of LiteralsOnlyBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.LiteralsOnlyBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<LiteralsOnlyBase, To>()
  nameWithType: Converters.MapEnums<LiteralsOnlyBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.LiteralsOnlyBase, To>()
  nameWithType.vb: Converters.MapEnums(Of LiteralsOnlyBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.LiteralsOnlyBase, To)()
  name.vb: MapEnums(Of LiteralsOnlyBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<LiteralsOnlyBase, To>
    nameWithType: Converters.MapEnums<LiteralsOnlyBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.LiteralsOnlyBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of LiteralsOnlyBase, To)
    nameWithType: Converters.MapEnums(Of LiteralsOnlyBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.LiteralsOnlyBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  isExternal: true
  name: AddItems
  nameWithType: LiteralsOnlyBase.AddItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct
  isExternal: true
  name: Construct
  nameWithType: LiteralsOnlyBase.Construct
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct
- uid: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.ISoListProvider
  isExternal: true
  name: Construct(String, String, Int32[], Boolean, String, Boolean)
  nameWithType: ISoListProvider.Construct(String, String, Int32[], Boolean, String, Boolean)
  fullName: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean)
  nameWithType.vb: ISoListProvider.Construct(String, String, Int32(), Boolean, String, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean)
  name.vb: Construct(String, String, Int32(), Boolean, String, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
    name: Construct
    nameWithType: ISoListProvider.Construct
    fullName: SuperOffice.CRM.Lists.ISoListProvider.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoListProvider.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
    name: Construct
    nameWithType: ISoListProvider.Construct
    fullName: SuperOffice.CRM.Lists.ISoListProvider.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.#ctor
  isExternal: true
  name: LiteralsOnlyBase
  nameWithType: LiteralsOnlyBase.LiteralsOnlyBase
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.LiteralsOnlyBase
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  isExternal: true
  name: ListName
  nameWithType: LiteralsOnlyBase.ListName
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  isExternal: true
  name: ExtraInfo
  nameWithType: LiteralsOnlyBase.ExtraInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  isExternal: true
  name: SearchValue
  nameWithType: LiteralsOnlyBase.SearchValue
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  isExternal: true
  name: RawRootItems
  nameWithType: LiteralsOnlyBase.RawRootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
- uid: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ISoListItem>
  nameWithType: List<ISoListItem>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: List(Of ISoListItem)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: List(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  isExternal: true
  name: RawHeadingItems
  nameWithType: LiteralsOnlyBase.RawHeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
- uid: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ISoListHeading>
  nameWithType: List<ISoListHeading>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListHeading>
  nameWithType.vb: List(Of ISoListHeading)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListHeading)
  name.vb: List(Of ISoListHeading)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListHeading
    name: ISoListHeading
    nameWithType: ISoListHeading
    fullName: SuperOffice.CRM.Lists.ISoListHeading
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListHeading
    name: ISoListHeading
    nameWithType: ISoListHeading
    fullName: SuperOffice.CRM.Lists.ISoListHeading
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  isExternal: true
  name: RawHistoryItems
  nameWithType: LiteralsOnlyBase.RawHistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  isExternal: true
  name: HistoryInfo
  nameWithType: LiteralsOnlyBase.HistoryInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
- uid: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  parent: SuperOffice.CRM.Lists.ISoListProvider
  isExternal: true
  name: HistoryInfo
  nameWithType: ISoListProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
- uid: SuperOffice.CRM.Lists.HistoryInfo
  commentId: T:SuperOffice.CRM.Lists.HistoryInfo
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: HistoryInfo
  nameWithType: HistoryInfo
  fullName: SuperOffice.CRM.Lists.HistoryInfo
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  isExternal: true
  name: HistoryItems
  nameWithType: LiteralsOnlyBase.HistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
- uid: SuperOffice.CRM.Lists.ISoList.HistoryItems
  commentId: P:SuperOffice.CRM.Lists.ISoList.HistoryItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: HistoryItems
  nameWithType: ISoList.HistoryItems
  fullName: SuperOffice.CRM.Lists.ISoList.HistoryItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  isExternal: true
  name: RootItems
  nameWithType: LiteralsOnlyBase.RootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
- uid: SuperOffice.CRM.Lists.ISoList.RootItems
  commentId: P:SuperOffice.CRM.Lists.ISoList.RootItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: RootItems
  nameWithType: ISoList.RootItems
  fullName: SuperOffice.CRM.Lists.ISoList.RootItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems*
  commentId: Overload:SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  isExternal: true
  name: HeadingItems
  nameWithType: LiteralsOnlyBase.HeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
- uid: SuperOffice.CRM.Lists.ISoList.HeadingItems
  commentId: P:SuperOffice.CRM.Lists.ISoList.HeadingItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: HeadingItems
  nameWithType: ISoList.HeadingItems
  fullName: SuperOffice.CRM.Lists.ISoList.HeadingItems
