### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.TZLocationRecordData
  commentId: T:SuperOffice.CRM.Rows.TZLocationRecordData
  id: TZLocationRecordData
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.TZLocationRecordData.#ctor
  - SuperOffice.CRM.Rows.TZLocationRecordData.Cities
  - SuperOffice.CRM.Rows.TZLocationRecordData.CountryId
  - SuperOffice.CRM.Rows.TZLocationRecordData.Deleted
  - SuperOffice.CRM.Rows.TZLocationRecordData.Description
  - SuperOffice.CRM.Rows.TZLocationRecordData.GroupName
  - SuperOffice.CRM.Rows.TZLocationRecordData.IsActive
  - SuperOffice.CRM.Rows.TZLocationRecordData.IsBuiltIn
  - SuperOffice.CRM.Rows.TZLocationRecordData.LocationCode
  - SuperOffice.CRM.Rows.TZLocationRecordData.RegionName
  - SuperOffice.CRM.Rows.TZLocationRecordData.Registered
  - SuperOffice.CRM.Rows.TZLocationRecordData.RegisteredAssociateId
  - SuperOffice.CRM.Rows.TZLocationRecordData.ShortName
  - SuperOffice.CRM.Rows.TZLocationRecordData.TZLocationId
  - SuperOffice.CRM.Rows.TZLocationRecordData.Updated
  - SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedAssociateId
  - SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedCount
  langs:
  - csharp
  - vb
  name: TZLocationRecordData
  nameWithType: TZLocationRecordData
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPOCO (Plain Old CLR Object) class that can be used to hold data corresponding\nto a row from the TZLocation table.\n"
  remarks: "\nPlease use this class instead of a full <xref href=\"SuperOffice.CRM.Rows.TZLocationRow\" data-throw-if-not-resolved=\"false\"></xref> object when\nyou do not need to <strong>create or update</strong> a value in the database. Row objects have a large overhead\nsince they carry the corresponding <xref href=\"SuperOffice.CRM.Data.TZLocationTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object, which\nin turn defines fields and aliases; there may be a Sentry on a row, and various other helper objects.\n"
  syntax:
    content: public class TZLocationRecordData
    content.vb: Public Class TZLocationRecordData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.TZLocationRecordData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.TZLocationRecordData)
  - SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
  - SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.TZLocationId
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.TZLocationId
  id: TZLocationId
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: TZLocationId
  nameWithType: TZLocationRecordData.TZLocationId
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.TZLocationId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPrimary key \n"
  syntax:
    content: public int TZLocationId
    return:
      type: System.Int32
    content.vb: Public TZLocationId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.CountryId
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.CountryId
  id: CountryId
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: CountryId
  nameWithType: TZLocationRecordData.CountryId
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.CountryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCountry that this timezone location is defined for \n"
  syntax:
    content: public int CountryId
    return:
      type: System.Int32
    content.vb: Public CountryId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.LocationCode
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.LocationCode
  id: LocationCode
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: LocationCode
  nameWithType: TZLocationRecordData.LocationCode
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.LocationCode
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCode, such as CA-NT, identifying the timezone location in the imported data. Unique, NOT equal to the culture codes of Windows \n"
  syntax:
    content: public string LocationCode
    return:
      type: System.String
    content.vb: Public LocationCode As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.GroupName
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.GroupName
  id: GroupName
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: TZLocationRecordData.GroupName
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.GroupName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGroup (heading) name for timezone locations that do not have a country (such as the EU zones) \n"
  syntax:
    content: public string GroupName
    return:
      type: System.String
    content.vb: Public GroupName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.RegionName
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.RegionName
  id: RegionName
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: RegionName
  nameWithType: TZLocationRecordData.RegionName
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.RegionName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nName of region, such as Northwest Territories. Future localization via localeText resource type 31 \n"
  syntax:
    content: public string RegionName
    return:
      type: System.String
    content.vb: Public RegionName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.Cities
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.Cities
  id: Cities
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: Cities
  nameWithType: TZLocationRecordData.Cities
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.Cities
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCities, comma-separated list. Future localization via localeText resource type 32 \n"
  syntax:
    content: public string Cities
    return:
      type: System.String
    content.vb: Public Cities As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.ShortName
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.ShortName
  id: ShortName
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: ShortName
  nameWithType: TZLocationRecordData.ShortName
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.ShortName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nShort name, such as CET (Central European Time); future localization via localeText resource type 33 \n"
  syntax:
    content: public string ShortName
    return:
      type: System.String
    content.vb: Public ShortName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.Description
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.Description
  id: Description
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TZLocationRecordData.Description
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.Description
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nDcescription, only visible in Admin contexts \n"
  syntax:
    content: public string Description
    return:
      type: System.String
    content.vb: Public Description As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.IsBuiltIn
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.IsBuiltIn
  id: IsBuiltIn
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: IsBuiltIn
  nameWithType: TZLocationRecordData.IsBuiltIn
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.IsBuiltIn
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this row part of SuperOffice priming data \n"
  syntax:
    content: public short IsBuiltIn
    return:
      type: System.Int16
    content.vb: Public IsBuiltIn As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.IsActive
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.IsActive
  id: IsActive
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: TZLocationRecordData.IsActive
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.IsActive
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this field visible in the standard drop-down list in the GUI? If no, it can still be used and searched for, but won&apos;t be visible directly in the dropdown list. \n"
  syntax:
    content: public short IsActive
    return:
      type: System.Int16
    content.vb: Public IsActive As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.Deleted
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.Deleted
  id: Deleted
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: TZLocationRecordData.Deleted
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.Deleted
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this row &apos;deleted&apos; (invisible in lists) \n"
  syntax:
    content: public short Deleted
    return:
      type: System.Int16
    content.vb: Public Deleted As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.Registered
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: TZLocationRecordData.Registered
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.Registered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nRegistered when in UTC.  \n"
  syntax:
    content: public DateTime Registered
    return:
      type: System.DateTime
    content.vb: Public Registered As Date
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.RegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: TZLocationRecordData.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.RegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nRegistered by whom \n"
  syntax:
    content: public int RegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Public RegisteredAssociateId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.Updated
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: TZLocationRecordData.Updated
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.Updated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nLast updated when in UTC.  \n"
  syntax:
    content: public DateTime Updated
    return:
      type: System.DateTime
    content.vb: Public Updated As Date
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: TZLocationRecordData.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nLast updated by whom \n"
  syntax:
    content: public int UpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Public UpdatedAssociateId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedCount
  commentId: F:SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: TZLocationRecordData.UpdatedCount
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.UpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nNumber of updates made to this record \n"
  syntax:
    content: public short UpdatedCount
    return:
      type: System.Int16
    content.vb: Public UpdatedCount As Short
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.#ctor
  commentId: M:SuperOffice.CRM.Rows.TZLocationRecordData.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.TZLocationRecordData
  langs:
  - csharp
  - vb
  name: TZLocationRecordData()
  nameWithType: TZLocationRecordData.TZLocationRecordData()
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.TZLocationRecordData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public TZLocationRecordData()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.TZLocationRecordData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TZLocationRecordData, To>()
  nameWithType: EnumUtil.MapEnums<TZLocationRecordData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.TZLocationRecordData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TZLocationRecordData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.TZLocationRecordData, To)()
  name.vb: MapEnums(Of TZLocationRecordData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TZLocationRecordData, To>
    nameWithType: EnumUtil.MapEnums<TZLocationRecordData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.TZLocationRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TZLocationRecordData, To)
    nameWithType: EnumUtil.MapEnums(Of TZLocationRecordData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.TZLocationRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.TZLocationRecordData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TZLocationRecordData>(TZLocationRecordData)
  nameWithType: ObjectExtensions.AssignByReflection<TZLocationRecordData>(TZLocationRecordData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.TZLocationRecordData>(SuperOffice.CRM.Rows.TZLocationRecordData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TZLocationRecordData)(TZLocationRecordData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.TZLocationRecordData)(SuperOffice.CRM.Rows.TZLocationRecordData)
  name.vb: AssignByReflection(Of TZLocationRecordData)(TZLocationRecordData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TZLocationRecordData>
    nameWithType: ObjectExtensions.AssignByReflection<TZLocationRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.TZLocationRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.TZLocationRecordData
    name: TZLocationRecordData
    nameWithType: TZLocationRecordData
    fullName: SuperOffice.CRM.Rows.TZLocationRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TZLocationRecordData)
    nameWithType: ObjectExtensions.AssignByReflection(Of TZLocationRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.TZLocationRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.TZLocationRecordData
    name: TZLocationRecordData
    nameWithType: TZLocationRecordData
    fullName: SuperOffice.CRM.Rows.TZLocationRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TZLocationRecordData>()
  nameWithType: ObjectExtensions.GraphCopy<TZLocationRecordData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.TZLocationRecordData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TZLocationRecordData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.TZLocationRecordData)()
  name.vb: GraphCopy(Of TZLocationRecordData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TZLocationRecordData>
    nameWithType: ObjectExtensions.GraphCopy<TZLocationRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.TZLocationRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TZLocationRecordData)
    nameWithType: ObjectExtensions.GraphCopy(Of TZLocationRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.TZLocationRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
  commentId: M:SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
  parent: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions
  definition: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
  name: ToInsert()
  nameWithType: TZLocationRecordDataExtensions.ToInsert()
  fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
    name: ToInsert
    nameWithType: TZLocationRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
    name: ToInsert
    nameWithType: TZLocationRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TZLocationRecordData, To>()
  nameWithType: Converters.MapEnums<TZLocationRecordData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.TZLocationRecordData, To>()
  nameWithType.vb: Converters.MapEnums(Of TZLocationRecordData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.TZLocationRecordData, To)()
  name.vb: MapEnums(Of TZLocationRecordData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TZLocationRecordData, To>
    nameWithType: Converters.MapEnums<TZLocationRecordData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.TZLocationRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TZLocationRecordData, To)
    nameWithType: Converters.MapEnums(Of TZLocationRecordData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.TZLocationRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
  commentId: M:SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
  isExternal: true
  name: ToInsert(TZLocationRecordData)
  nameWithType: TZLocationRecordDataExtensions.ToInsert(TZLocationRecordData)
  fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
    name: ToInsert
    nameWithType: TZLocationRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.TZLocationRecordData
    name: TZLocationRecordData
    nameWithType: TZLocationRecordData
    fullName: SuperOffice.CRM.Rows.TZLocationRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TZLocationRecordData)
    name: ToInsert
    nameWithType: TZLocationRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.TZLocationRecordData
    name: TZLocationRecordData
    nameWithType: TZLocationRecordData
    fullName: SuperOffice.CRM.Rows.TZLocationRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.TZLocationRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TZLocationRecordDataExtensions
  nameWithType: TZLocationRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.TZLocationRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Rows.TZLocationRecordData.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.TZLocationRecordData.#ctor
  isExternal: true
  name: TZLocationRecordData
  nameWithType: TZLocationRecordData.TZLocationRecordData
  fullName: SuperOffice.CRM.Rows.TZLocationRecordData.TZLocationRecordData
