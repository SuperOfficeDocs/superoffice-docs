### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin
  commentId: T:SuperOffice.Diagnostics.ISoLoggerPlugin
  id: ISoLoggerPlugin
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry(SuperOffice.Diagnostics.LogEntryInfo)
  - SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery(SuperOffice.Diagnostics.LogEntryInfo,SuperOffice.Diagnostics.SqlCommandInfo)
  langs:
  - csharp
  - vb
  name: ISoLoggerPlugin
  nameWithType: ISoLoggerPlugin
  fullName: SuperOffice.Diagnostics.ISoLoggerPlugin
  type: Interface
  source:
    path: SOCore
    isExternal: true
  assemblies:
  - SOCore
  namespace: SuperOffice.Diagnostics
  summary: "\nInterface should be implemented for plugins wanting to do custom logging.\n"
  syntax:
    content: 'public interface ISoLoggerPlugin : IPlugin'
    content.vb: >-
      Public Interface ISoLoggerPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Diagnostics.ISoLoggerPlugin.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.ISoLoggerPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry(SuperOffice.Diagnostics.LogEntryInfo)
  commentId: M:SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry(SuperOffice.Diagnostics.LogEntryInfo)
  id: LogEntry(SuperOffice.Diagnostics.LogEntryInfo)
  parent: SuperOffice.Diagnostics.ISoLoggerPlugin
  langs:
  - csharp
  - vb
  name: LogEntry(LogEntryInfo)
  nameWithType: ISoLoggerPlugin.LogEntry(LogEntryInfo)
  fullName: SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry(SuperOffice.Diagnostics.LogEntryInfo)
  type: Method
  source:
    path: SOCore
    isExternal: true
  assemblies:
  - SOCore
  namespace: SuperOffice.Diagnostics
  summary: "\nCalled when logging a LogEntry\n"
  syntax:
    content: void LogEntry(LogEntryInfo entry)
    parameters:
    - id: entry
      type: SuperOffice.Diagnostics.LogEntryInfo
    content.vb: Sub LogEntry(entry As LogEntryInfo)
  overload: SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry*
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery(SuperOffice.Diagnostics.LogEntryInfo,SuperOffice.Diagnostics.SqlCommandInfo)
  commentId: M:SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery(SuperOffice.Diagnostics.LogEntryInfo,SuperOffice.Diagnostics.SqlCommandInfo)
  id: LogQuery(SuperOffice.Diagnostics.LogEntryInfo,SuperOffice.Diagnostics.SqlCommandInfo)
  parent: SuperOffice.Diagnostics.ISoLoggerPlugin
  langs:
  - csharp
  - vb
  name: LogQuery(LogEntryInfo, SqlCommandInfo)
  nameWithType: ISoLoggerPlugin.LogQuery(LogEntryInfo, SqlCommandInfo)
  fullName: SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery(SuperOffice.Diagnostics.LogEntryInfo, SuperOffice.Diagnostics.SqlCommandInfo)
  type: Method
  source:
    path: SOCore
    isExternal: true
  assemblies:
  - SOCore
  namespace: SuperOffice.Diagnostics
  summary: "\nCalled when logging a LogQuery\n"
  syntax:
    content: void LogQuery(LogEntryInfo entry, SqlCommandInfo sqlCommandInfo)
    parameters:
    - id: entry
      type: SuperOffice.Diagnostics.LogEntryInfo
    - id: sqlCommandInfo
      type: SuperOffice.Diagnostics.SqlCommandInfo
    content.vb: Sub LogQuery(entry As LogEntryInfo, sqlCommandInfo As SqlCommandInfo)
  overload: SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery*
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoLoggerPlugin, To>()
  nameWithType: EnumUtil.MapEnums<ISoLoggerPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.ISoLoggerPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoLoggerPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.ISoLoggerPlugin, To)()
  name.vb: MapEnums(Of ISoLoggerPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoLoggerPlugin, To>
    nameWithType: EnumUtil.MapEnums<ISoLoggerPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.ISoLoggerPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoLoggerPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of ISoLoggerPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.ISoLoggerPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoLoggerPlugin, To>()
  nameWithType: Converters.MapEnums<ISoLoggerPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.ISoLoggerPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoLoggerPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.ISoLoggerPlugin, To)()
  name.vb: MapEnums(Of ISoLoggerPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoLoggerPlugin, To>
    nameWithType: Converters.MapEnums<ISoLoggerPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.ISoLoggerPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoLoggerPlugin, To)
    nameWithType: Converters.MapEnums(Of ISoLoggerPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.ISoLoggerPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry*
  commentId: Overload:SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry
  isExternal: true
  name: LogEntry
  nameWithType: ISoLoggerPlugin.LogEntry
  fullName: SuperOffice.Diagnostics.ISoLoggerPlugin.LogEntry
- uid: SuperOffice.Diagnostics.LogEntryInfo
  commentId: T:SuperOffice.Diagnostics.LogEntryInfo
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: LogEntryInfo
  nameWithType: LogEntryInfo
  fullName: SuperOffice.Diagnostics.LogEntryInfo
- uid: SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery*
  commentId: Overload:SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery
  isExternal: true
  name: LogQuery
  nameWithType: ISoLoggerPlugin.LogQuery
  fullName: SuperOffice.Diagnostics.ISoLoggerPlugin.LogQuery
- uid: SuperOffice.Diagnostics.SqlCommandInfo
  commentId: T:SuperOffice.Diagnostics.SqlCommandInfo
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: SqlCommandInfo
  nameWithType: SqlCommandInfo
  fullName: SuperOffice.Diagnostics.SqlCommandInfo
