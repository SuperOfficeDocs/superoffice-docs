### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.SentryQueryUpdater
  commentId: T:SuperOffice.CRM.Security.SentryQueryUpdater
  id: SentryQueryUpdater
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.SentryQueryUpdater.#ctor(SuperOffice.Data.SoCommand)
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead(SuperOffice.Data.SoCommand,SuperOffice.Data.SoDataReader,System.Boolean@)
  - SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback
  - SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand@)
  langs:
  - csharp
  - vb
  name: SentryQueryUpdater
  nameWithType: SentryQueryUpdater
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nModifies SELECT queries according to the fields used in the query. For example, if a person row is being read, \nthen a contact row will be outer-joined to provide the contact.associate-id for the sentry. If the appointment \ntable is being searched, then the appointment table is inner-joined with the visible-for table to filter out any \nhidden/private appointments.\n<p></p>\nThe query updater will analyze the query and automatically add the sentries it considers relevant to the query \nunless the SoCommand.IsAutoSentry flag is cleared.\n<p></p>\nThe query updater uses the sentries attached to the query to modify the query to ensure that all the \nright fields and restrictions are in place. This ensures that private or unpublished data\nis filtered out on the server.\n<p></p>\nThis plug-in will also throw an SoSentryException if an update violates a sentry&apos;s rules.\n"
  syntax:
    content: 'public sealed class SentryQueryUpdater : IQueryProcessorPlugin'
    content.vb: >-
      Public NotInheritable Class SentryQueryUpdater
          Implements IQueryProcessorPlugin
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Security.SentryQueryUpdater.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Security.SentryQueryUpdater.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.#ctor(SuperOffice.Data.SoCommand)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.#ctor(SuperOffice.Data.SoCommand)
  id: '#ctor(SuperOffice.Data.SoCommand)'
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: SentryQueryUpdater(SoCommand)
  nameWithType: SentryQueryUpdater.SentryQueryUpdater(SoCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.SentryQueryUpdater(SuperOffice.Data.SoCommand)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nCreate a new sentry filter for the command.\n"
  syntax:
    content: public SentryQueryUpdater(SoCommand socommand)
    parameters:
    - id: socommand
      type: SuperOffice.Data.SoCommand
      description: Command object with Sentries and the IsAutoSentry property.
    content.vb: Public Sub New(socommand As SoCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand@)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand@)
  id: InitialTransform(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand@)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: InitialTransform(SqlCommand, ref SqlCommand)
  nameWithType: SentryQueryUpdater.InitialTransform(SqlCommand, ref SqlCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform(SuperOffice.Data.SQL.SqlCommand, ref SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nHandle the BeforeGenerate event, unwind batches and call the template method OnBeforeGenerate, \nsupplied by the derived class.\n"
  syntax:
    content: public void InitialTransform(SqlCommand orgCommand, ref SqlCommand command)
    parameters:
    - id: orgCommand
      type: SuperOffice.Data.SQL.SqlCommand
      description: Original Query object. May be a BatchSave, a Row object or a simple Select, Update, Delete, etc
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
      description: Query to be processed. May be BatchSave, Union, simple Select, Update, Delete, etc
    content.vb: Public Sub InitialTransform(orgCommand As SqlCommand, ByRef command As SqlCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform*
  nameWithType.vb: SentryQueryUpdater.InitialTransform(SqlCommand, ByRef SqlCommand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform(SuperOffice.Data.SQL.SqlCommand, ByRef SuperOffice.Data.SQL.SqlCommand)
  name.vb: InitialTransform(SqlCommand, ByRef SqlCommand)
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  id: AfterGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterGenerate(SqlCommand, SqlCommand)
  nameWithType: SentryQueryUpdater.AfterGenerate(SqlCommand, SqlCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate(SuperOffice.Data.SQL.SqlCommand, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nAdd sentries to command\n"
  syntax:
    content: public void AfterGenerate(SqlCommand orgCommand, SqlCommand command)
    parameters:
    - id: orgCommand
      type: SuperOffice.Data.SQL.SqlCommand
      description: Original Query object. May be a BatchSave, a Row object or a simple Select, Update, Delete, etc
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
      description: Query to be processed. May be BatchSave, Union, simple Select, Update, Delete, etc
    content.vb: Public Sub AfterGenerate(orgCommand As SqlCommand, command As SqlCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  id: BeforeExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: BeforeExecute(SqlCommand, SqlCommand)
  nameWithType: SentryQueryUpdater.BeforeExecute(SqlCommand, SqlCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute(SuperOffice.Data.SQL.SqlCommand, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nCheck the sentries to see if we are allowed to do what we are trying to do.\n"
  syntax:
    content: public void BeforeExecute(SqlCommand orgCommand, SqlCommand command)
    parameters:
    - id: orgCommand
      type: SuperOffice.Data.SQL.SqlCommand
      description: Original Query object. May be a BatchSave, a Row object or a simple Select, Update, Delete, etc
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
      description: Query to be processed. May be BatchSave, Union, simple Select, Update, Delete, etc
    content.vb: Public Sub BeforeExecute(orgCommand As SqlCommand, command As SqlCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  id: BeforeGenerate(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: BeforeGenerate(SqlCommand, SqlCommand)
  nameWithType: SentryQueryUpdater.BeforeGenerate(SqlCommand, SqlCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate(SuperOffice.Data.SQL.SqlCommand, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void BeforeGenerate(SqlCommand orgCommand, SqlCommand command)
    parameters:
    - id: orgCommand
      type: SuperOffice.Data.SQL.SqlCommand
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
    content.vb: Public Sub BeforeGenerate(orgCommand As SqlCommand, command As SqlCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  id: AfterExecute(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterExecute(SqlCommand, SqlCommand)
  nameWithType: SentryQueryUpdater.AfterExecute(SqlCommand, SqlCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute(SuperOffice.Data.SQL.SqlCommand, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void AfterExecute(SqlCommand orgCommand, SqlCommand command)
    parameters:
    - id: orgCommand
      type: SuperOffice.Data.SQL.SqlCommand
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
    content.vb: Public Sub AfterExecute(orgCommand As SqlCommand, command As SqlCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead(SuperOffice.Data.SoCommand,SuperOffice.Data.SoDataReader,System.Boolean@)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead(SuperOffice.Data.SoCommand,SuperOffice.Data.SoDataReader,System.Boolean@)
  id: AfterRead(SuperOffice.Data.SoCommand,SuperOffice.Data.SoDataReader,System.Boolean@)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterRead(SoCommand, SoDataReader, ref Boolean)
  nameWithType: SentryQueryUpdater.AfterRead(SoCommand, SoDataReader, ref Boolean)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead(SuperOffice.Data.SoCommand, SuperOffice.Data.SoDataReader, ref System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void AfterRead(SoCommand command, SoDataReader reader, ref bool skipRow)
    parameters:
    - id: command
      type: SuperOffice.Data.SoCommand
    - id: reader
      type: SuperOffice.Data.SoDataReader
    - id: skipRow
      type: System.Boolean
    content.vb: Public Sub AfterRead(command As SoCommand, reader As SoDataReader, ByRef skipRow As Boolean)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead*
  nameWithType.vb: SentryQueryUpdater.AfterRead(SoCommand, SoDataReader, ByRef Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead(SuperOffice.Data.SoCommand, SuperOffice.Data.SoDataReader, ByRef System.Boolean)
  name.vb: AfterRead(SoCommand, SoDataReader, ByRef Boolean)
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  id: AfterExecuteFailed(SuperOffice.Data.SQL.SqlCommand,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterExecuteFailed(SqlCommand, SqlCommand)
  nameWithType: SentryQueryUpdater.AfterExecuteFailed(SqlCommand, SqlCommand)
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed(SuperOffice.Data.SQL.SqlCommand, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void AfterExecuteFailed(SqlCommand orgCommand, SqlCommand command)
    parameters:
    - id: orgCommand
      type: SuperOffice.Data.SQL.SqlCommand
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
    content.vb: Public Sub AfterExecuteFailed(orgCommand As SqlCommand, command As SqlCommand)
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit
  id: AfterCommit
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterCommit()
  nameWithType: SentryQueryUpdater.AfterCommit()
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void AfterCommit()
    content.vb: Public Sub AfterCommit
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback
  id: AfterRollback
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterRollback()
  nameWithType: SentryQueryUpdater.AfterRollback()
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void AfterRollback()
    content.vb: Public Sub AfterRollback
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit
  commentId: M:SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit
  id: AfterCommitOrAutoCommit
  parent: SuperOffice.CRM.Security.SentryQueryUpdater
  langs:
  - csharp
  - vb
  name: AfterCommitOrAutoCommit()
  nameWithType: SentryQueryUpdater.AfterCommitOrAutoCommit()
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public void AfterCommitOrAutoCommit()
    content.vb: Public Sub AfterCommitOrAutoCommit
  overload: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SentryQueryUpdater, To>()
  nameWithType: EnumUtil.MapEnums<SentryQueryUpdater, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryQueryUpdater, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SentryQueryUpdater, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryQueryUpdater, To)()
  name.vb: MapEnums(Of SentryQueryUpdater, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SentryQueryUpdater, To>
    nameWithType: EnumUtil.MapEnums<SentryQueryUpdater, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryQueryUpdater, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SentryQueryUpdater, To)
    nameWithType: EnumUtil.MapEnums(Of SentryQueryUpdater, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryQueryUpdater, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SentryQueryUpdater, To>()
  nameWithType: Converters.MapEnums<SentryQueryUpdater, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryQueryUpdater, To>()
  nameWithType.vb: Converters.MapEnums(Of SentryQueryUpdater, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryQueryUpdater, To)()
  name.vb: MapEnums(Of SentryQueryUpdater, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SentryQueryUpdater, To>
    nameWithType: Converters.MapEnums<SentryQueryUpdater, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryQueryUpdater, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SentryQueryUpdater, To)
    nameWithType: Converters.MapEnums(Of SentryQueryUpdater, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryQueryUpdater, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.#ctor
  isExternal: true
  name: SentryQueryUpdater
  nameWithType: SentryQueryUpdater.SentryQueryUpdater
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.SentryQueryUpdater
- uid: SuperOffice.Data.SoCommand
  commentId: T:SuperOffice.Data.SoCommand
  parent: SuperOffice.Data
  isExternal: true
  name: SoCommand
  nameWithType: SoCommand
  fullName: SuperOffice.Data.SoCommand
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform
  isExternal: true
  name: InitialTransform
  nameWithType: SentryQueryUpdater.InitialTransform
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.InitialTransform
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate
  isExternal: true
  name: AfterGenerate
  nameWithType: SentryQueryUpdater.AfterGenerate
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterGenerate
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute
  isExternal: true
  name: BeforeExecute
  nameWithType: SentryQueryUpdater.BeforeExecute
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeExecute
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate
  isExternal: true
  name: BeforeGenerate
  nameWithType: SentryQueryUpdater.BeforeGenerate
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.BeforeGenerate
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute
  isExternal: true
  name: AfterExecute
  nameWithType: SentryQueryUpdater.AfterExecute
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecute
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead
  isExternal: true
  name: AfterRead
  nameWithType: SentryQueryUpdater.AfterRead
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRead
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed
  isExternal: true
  name: AfterExecuteFailed
  nameWithType: SentryQueryUpdater.AfterExecuteFailed
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterExecuteFailed
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit
  isExternal: true
  name: AfterCommit
  nameWithType: SentryQueryUpdater.AfterCommit
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommit
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback
  isExternal: true
  name: AfterRollback
  nameWithType: SentryQueryUpdater.AfterRollback
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterRollback
- uid: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit*
  commentId: Overload:SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit
  isExternal: true
  name: AfterCommitOrAutoCommit
  nameWithType: SentryQueryUpdater.AfterCommitOrAutoCommit
  fullName: SuperOffice.CRM.Security.SentryQueryUpdater.AfterCommitOrAutoCommit
