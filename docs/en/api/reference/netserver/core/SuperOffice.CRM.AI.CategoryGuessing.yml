### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.AI.CategoryGuessing
  commentId: T:SuperOffice.CRM.AI.CategoryGuessing
  id: CategoryGuessing
  parent: SuperOffice.CRM.AI
  children:
  - SuperOffice.CRM.AI.CategoryGuessing.#ctor
  - SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem(System.Int32)
  - SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems(System.Int32,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: CategoryGuessing
  nameWithType: CategoryGuessing
  fullName: SuperOffice.CRM.AI.CategoryGuessing
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.AI
  summary: "\nImplementation of AI functions for category guessing\n"
  syntax:
    content: >-
      [SoInject("Database")]

      public class CategoryGuessing
    content.vb: >-
      <SoInject("Database")>

      Public Class CategoryGuessing
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.AI.CategoryGuessing.EnumUtil.MapEnums``2
  - SuperOffice.CRM.AI.CategoryGuessing.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.AI.CategoryGuessing)
  - SuperOffice.CRM.AI.CategoryGuessing.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.AI.CategoryGuessing.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems(System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems(System.Int32,System.Int32,System.Int32)
  id: GetCategorizationTrainingItems(System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.AI.CategoryGuessing
  langs:
  - csharp
  - vb
  name: GetCategorizationTrainingItems(Int32, Int32, Int32)
  nameWithType: CategoryGuessing.GetCategorizationTrainingItems(Int32, Int32, Int32)
  fullName: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.AI
  summary: "\nThe category guesser training API will be called with an array of CategorizationTrainingItem during the (background, Batch) execution of this call\n"
  remarks: "\nSee class diagram in Modelling\\Diagrams\\Ticket_Message.cd for the database structure that&apos;s referred here\n"
  syntax:
    content: public List<CategoryGuessing.CategorizationTrainingItem> GetCategorizationTrainingItems(int selectionId, int maxItems, int maxTextLength)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of selection of tickets, to retrieve training data from
    - id: maxItems
      type: System.Int32
      description: Maximum number of tickets to retrieve data from
    - id: maxTextLength
      type: System.Int32
      description: Maximum length of PlainTextBody or any other large text, truncated to nearest word boundary
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem}
      description: Placeholder for result...  should this be a BatchTaskId?  maybe not useful?
    content.vb: Public Function GetCategorizationTrainingItems(selectionId As Integer, maxItems As Integer, maxTextLength As Integer) As List(Of CategoryGuessing.CategorizationTrainingItem)
  overload: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem(System.Int32)
  commentId: M:SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem(System.Int32)
  id: GetCategorizationRequestItem(System.Int32)
  parent: SuperOffice.CRM.AI.CategoryGuessing
  langs:
  - csharp
  - vb
  name: GetCategorizationRequestItem(Int32)
  nameWithType: CategoryGuessing.GetCategorizationRequestItem(Int32)
  fullName: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.AI
  summary: "\nGet the data required by the Category Guesser\n"
  syntax:
    content: public CategoryGuessing.CategorizationRequestItem GetCategorizationRequestItem(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
    return:
      type: SuperOffice.CRM.AI.CategoryGuessing.CategorizationRequestItem
    content.vb: Public Function GetCategorizationRequestItem(ticketId As Integer) As CategoryGuessing.CategorizationRequestItem
  overload: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.AI.CategoryGuessing.#ctor
  commentId: M:SuperOffice.CRM.AI.CategoryGuessing.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.AI.CategoryGuessing
  langs:
  - csharp
  - vb
  name: CategoryGuessing()
  nameWithType: CategoryGuessing.CategoryGuessing()
  fullName: SuperOffice.CRM.AI.CategoryGuessing.CategoryGuessing()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.AI
  syntax:
    content: public CategoryGuessing()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.AI.CategoryGuessing.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.AI
  commentId: N:SuperOffice.CRM.AI
  isExternal: true
  name: SuperOffice.CRM.AI
  nameWithType: SuperOffice.CRM.AI
  fullName: SuperOffice.CRM.AI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AI.CategoryGuessing.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CategoryGuessing, To>()
  nameWithType: EnumUtil.MapEnums<CategoryGuessing, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.AI.CategoryGuessing, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CategoryGuessing, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.AI.CategoryGuessing, To)()
  name.vb: MapEnums(Of CategoryGuessing, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CategoryGuessing, To>
    nameWithType: EnumUtil.MapEnums<CategoryGuessing, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.AI.CategoryGuessing, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CategoryGuessing, To)
    nameWithType: EnumUtil.MapEnums(Of CategoryGuessing, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.AI.CategoryGuessing, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AI.CategoryGuessing.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.AI.CategoryGuessing)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<CategoryGuessing>(CategoryGuessing)
  nameWithType: ObjectExtensions.AssignByReflection<CategoryGuessing>(CategoryGuessing)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.AI.CategoryGuessing>(SuperOffice.CRM.AI.CategoryGuessing)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of CategoryGuessing)(CategoryGuessing)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.AI.CategoryGuessing)(SuperOffice.CRM.AI.CategoryGuessing)
  name.vb: AssignByReflection(Of CategoryGuessing)(CategoryGuessing)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<CategoryGuessing>
    nameWithType: ObjectExtensions.AssignByReflection<CategoryGuessing>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.AI.CategoryGuessing>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.AI.CategoryGuessing
    name: CategoryGuessing
    nameWithType: CategoryGuessing
    fullName: SuperOffice.CRM.AI.CategoryGuessing
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of CategoryGuessing)
    nameWithType: ObjectExtensions.AssignByReflection(Of CategoryGuessing)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.AI.CategoryGuessing)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.AI.CategoryGuessing
    name: CategoryGuessing
    nameWithType: CategoryGuessing
    fullName: SuperOffice.CRM.AI.CategoryGuessing
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AI.CategoryGuessing.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<CategoryGuessing>()
  nameWithType: ObjectExtensions.GraphCopy<CategoryGuessing>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.AI.CategoryGuessing>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of CategoryGuessing)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.AI.CategoryGuessing)()
  name.vb: GraphCopy(Of CategoryGuessing)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<CategoryGuessing>
    nameWithType: ObjectExtensions.GraphCopy<CategoryGuessing>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.AI.CategoryGuessing>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of CategoryGuessing)
    nameWithType: ObjectExtensions.GraphCopy(Of CategoryGuessing)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.AI.CategoryGuessing)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.AI.CategoryGuessing.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CategoryGuessing, To>()
  nameWithType: Converters.MapEnums<CategoryGuessing, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.AI.CategoryGuessing, To>()
  nameWithType.vb: Converters.MapEnums(Of CategoryGuessing, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.AI.CategoryGuessing, To)()
  name.vb: MapEnums(Of CategoryGuessing, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CategoryGuessing, To>
    nameWithType: Converters.MapEnums<CategoryGuessing, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.AI.CategoryGuessing, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CategoryGuessing, To)
    nameWithType: Converters.MapEnums(Of CategoryGuessing, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.AI.CategoryGuessing, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems*
  commentId: Overload:SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems
  isExternal: true
  name: GetCategorizationTrainingItems
  nameWithType: CategoryGuessing.GetCategorizationTrainingItems
  fullName: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationTrainingItems
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<CategoryGuessing.CategorizationTrainingItem>
  nameWithType: List<CategoryGuessing.CategorizationTrainingItem>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem>
  nameWithType.vb: List(Of CategoryGuessing.CategorizationTrainingItem)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem)
  name.vb: List(Of CategoryGuessing.CategorizationTrainingItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem
    name: CategoryGuessing.CategorizationTrainingItem
    nameWithType: CategoryGuessing.CategorizationTrainingItem
    fullName: SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem
    name: CategoryGuessing.CategorizationTrainingItem
    nameWithType: CategoryGuessing.CategorizationTrainingItem
    fullName: SuperOffice.CRM.AI.CategoryGuessing.CategorizationTrainingItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem*
  commentId: Overload:SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem
  isExternal: true
  name: GetCategorizationRequestItem
  nameWithType: CategoryGuessing.GetCategorizationRequestItem
  fullName: SuperOffice.CRM.AI.CategoryGuessing.GetCategorizationRequestItem
- uid: SuperOffice.CRM.AI.CategoryGuessing.CategorizationRequestItem
  commentId: T:SuperOffice.CRM.AI.CategoryGuessing.CategorizationRequestItem
  parent: SuperOffice.CRM.AI
  isExternal: true
  name: CategoryGuessing.CategorizationRequestItem
  nameWithType: CategoryGuessing.CategorizationRequestItem
  fullName: SuperOffice.CRM.AI.CategoryGuessing.CategorizationRequestItem
- uid: SuperOffice.CRM.AI.CategoryGuessing.#ctor*
  commentId: Overload:SuperOffice.CRM.AI.CategoryGuessing.#ctor
  isExternal: true
  name: CategoryGuessing
  nameWithType: CategoryGuessing.CategoryGuessing
  fullName: SuperOffice.CRM.AI.CategoryGuessing.CategoryGuessing
