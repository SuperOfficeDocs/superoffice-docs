### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.AssociateModuleLicenseOwner
  commentId: T:SuperOffice.License.AssociateModuleLicenseOwner
  id: AssociateModuleLicenseOwner
  parent: SuperOffice.License
  children:
  - SuperOffice.License.AssociateModuleLicenseOwner.#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)
  langs:
  - csharp
  - vb
  name: AssociateModuleLicenseOwner
  nameWithType: AssociateModuleLicenseOwner
  fullName: SuperOffice.License.AssociateModuleLicenseOwner
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: 'public class AssociateModuleLicenseOwner : ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>, INestedPersist'
    content.vb: >-
      Public Class AssociateModuleLicenseOwner
          Inherits ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow)
          Implements INestedPersist
  inheritance:
  - System.Object
  - SuperOffice.Data.NestedPersist
  - SuperOffice.Data.NestedPersistFacade
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  implements:
  - SuperOffice.Data.INestedPersist
  inheritedMembers:
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.OnPreIdUpdateAsync
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.GetFacadingItems
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.OnSavedAsync(System.Boolean)
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Owner
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Modules
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Item(System.Int32)
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Item(System.String)
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.IsDirty
  - SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.IsDeleted
  - SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  - SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  - SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  - SuperOffice.Data.NestedPersistFacade.IsDirty
  - SuperOffice.Data.NestedPersist._saveOwner
  - SuperOffice.Data.NestedPersist._isSaving
  - SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.Data.NestedPersist.SaveAsync
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  - SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.Data.NestedPersist.IsSaving
  - SuperOffice.Data.NestedPersist.IsDeleted
  - SuperOffice.Data.NestedPersist.IsMarkedForDelete
  - SuperOffice.Data.NestedPersist.OnElementSaved
  - SuperOffice.Data.NestedPersist.OnElementIdUpdate
  extensionMethods:
  - SuperOffice.License.AssociateModuleLicenseOwner.EnumUtil.MapEnums``2
  - SuperOffice.License.AssociateModuleLicenseOwner.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.License.AssociateModuleLicenseOwner.#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)
  commentId: M:SuperOffice.License.AssociateModuleLicenseOwner.#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)
  id: '#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)'
  parent: SuperOffice.License.AssociateModuleLicenseOwner
  langs:
  - csharp
  - vb
  name: AssociateModuleLicenseOwner(ModuleOwnerRow, Int32)
  nameWithType: AssociateModuleLicenseOwner.AssociateModuleLicenseOwner(ModuleOwnerRow, Int32)
  fullName: SuperOffice.License.AssociateModuleLicenseOwner.AssociateModuleLicenseOwner(SuperOffice.CRM.Rows.ModuleOwnerRow, System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public AssociateModuleLicenseOwner(ModuleOwnerRow owner, int associateId)
    parameters:
    - id: owner
      type: SuperOffice.CRM.Rows.ModuleOwnerRow
    - id: associateId
      type: System.Int32
    content.vb: Public Sub New(owner As ModuleOwnerRow, associateId As Integer)
  overload: SuperOffice.License.AssociateModuleLicenseOwner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.NestedPersist
  commentId: T:SuperOffice.Data.NestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: NestedPersist
  nameWithType: NestedPersist
  fullName: SuperOffice.Data.NestedPersist
- uid: SuperOffice.Data.NestedPersistFacade
  commentId: T:SuperOffice.Data.NestedPersistFacade
  parent: SuperOffice.Data
  isExternal: true
  name: NestedPersistFacade
  nameWithType: NestedPersistFacade
  fullName: SuperOffice.Data.NestedPersistFacade
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  commentId: T:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  parent: SuperOffice.License
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2
  name: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow)
  name.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    nameWithType: ModuleLicenseOwnerBase
    fullName: SuperOffice.License.ModuleLicenseOwnerBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.License.AssociateModuleLicenseLink
    name: AssociateModuleLicenseLink
    nameWithType: AssociateModuleLicenseLink
    fullName: SuperOffice.License.AssociateModuleLicenseLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.LicenseAssocLinkRow
    name: LicenseAssocLinkRow
    nameWithType: LicenseAssocLinkRow
    fullName: SuperOffice.CRM.Rows.LicenseAssocLinkRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    nameWithType: ModuleLicenseOwnerBase
    fullName: SuperOffice.License.ModuleLicenseOwnerBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.License.AssociateModuleLicenseLink
    name: AssociateModuleLicenseLink
    nameWithType: AssociateModuleLicenseLink
    fullName: SuperOffice.License.AssociateModuleLicenseLink
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.LicenseAssocLinkRow
    name: LicenseAssocLinkRow
    nameWithType: LicenseAssocLinkRow
    fullName: SuperOffice.CRM.Rows.LicenseAssocLinkRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.OnPreIdUpdateAsync
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.OnPreIdUpdateAsync
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  name: OnPreIdUpdateAsync()
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.OnPreIdUpdateAsync()
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.OnPreIdUpdateAsync()
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).OnPreIdUpdateAsync()
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.OnPreIdUpdateAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).OnPreIdUpdateAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.GetFacadingItems
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.GetFacadingItems
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  name: GetFacadingItems()
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.GetFacadingItems()
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.GetFacadingItems()
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).GetFacadingItems()
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
    name: GetFacadingItems
    nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.GetFacadingItems
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
    name: GetFacadingItems
    nameWithType: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).GetFacadingItems
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.OnSavedAsync(System.Boolean)
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
  name: OnSavedAsync(Boolean)
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.OnSavedAsync(Boolean)
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.OnSavedAsync(System.Boolean)
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).OnSavedAsync(Boolean)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).OnSavedAsync(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.OnSavedAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).OnSavedAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Owner
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Owner
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  name: Owner
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.Owner
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.Owner
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).Owner
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).Owner
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Modules
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Modules
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  name: Modules
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.Modules
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.Modules
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).Modules
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).Modules
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Item(System.Int32)
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Item(System.Int32)
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.Item[Int32]
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.Item[System.Int32]
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).Item(Int32)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
    name: Item
    nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
    name: Item
    nameWithType: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Item(System.String)
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.Item(System.String)
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
  name: Item[String]
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.Item[String]
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.Item[System.String]
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).Item(String)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
    name: Item
    nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
    name: Item
    nameWithType: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.IsDirty
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.IsDirty
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  name: IsDirty
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.IsDirty
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.IsDirty
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).IsDirty
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).IsDirty
- uid: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.IsDeleted
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}.IsDeleted
  parent: SuperOffice.License.ModuleLicenseOwnerBase{SuperOffice.License.AssociateModuleLicenseLink,SuperOffice.CRM.Rows.LicenseAssocLinkRow}
  definition: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  name: IsDeleted
  nameWithType: ModuleLicenseOwnerBase<AssociateModuleLicenseLink, LicenseAssocLinkRow>.IsDeleted
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow>.IsDeleted
  nameWithType.vb: ModuleLicenseOwnerBase(Of AssociateModuleLicenseLink, LicenseAssocLinkRow).IsDeleted
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of SuperOffice.License.AssociateModuleLicenseLink, SuperOffice.CRM.Rows.LicenseAssocLinkRow).IsDeleted
- uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPreIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnPreIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: NestedPersistFacade.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: NestedPersistFacade.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: NestedPersistFacade.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: NestedPersistFacade.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnSaveAsync(BatchSave)
  nameWithType: NestedPersistFacade.OnSaveAsync(BatchSave)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: NestedPersistFacade.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: NestedPersistFacade.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnSavedAsync(Boolean)
  nameWithType: NestedPersistFacade.OnSavedAsync(Boolean)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: NestedPersistFacade.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: NestedPersistFacade.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  commentId: M:SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: GetFacadingItems()
  nameWithType: NestedPersistFacade.GetFacadingItems()
  fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    nameWithType: NestedPersistFacade.GetFacadingItems
    fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    nameWithType: NestedPersistFacade.GetFacadingItems
    fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.IsDirty
  commentId: P:SuperOffice.Data.NestedPersistFacade.IsDirty
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: IsDirty
  nameWithType: NestedPersistFacade.IsDirty
  fullName: SuperOffice.Data.NestedPersistFacade.IsDirty
- uid: SuperOffice.Data.NestedPersist._saveOwner
  commentId: F:SuperOffice.Data.NestedPersist._saveOwner
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: _saveOwner
  nameWithType: NestedPersist._saveOwner
  fullName: SuperOffice.Data.NestedPersist._saveOwner
- uid: SuperOffice.Data.NestedPersist._isSaving
  commentId: F:SuperOffice.Data.NestedPersist._isSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: _isSaving
  nameWithType: NestedPersist._isSaving
  fullName: SuperOffice.Data.NestedPersist._isSaving
- uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: NestedPersist.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: NestedPersist.SetSaveOwner
    fullName: SuperOffice.Data.NestedPersist.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: NestedPersist.SetSaveOwner
    fullName: SuperOffice.Data.NestedPersist.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SaveAsync
  commentId: M:SuperOffice.Data.NestedPersist.SaveAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: SaveAsync()
  nameWithType: NestedPersist.SaveAsync()
  fullName: SuperOffice.Data.NestedPersist.SaveAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    nameWithType: NestedPersist.SaveAsync
    fullName: SuperOffice.Data.NestedPersist.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    nameWithType: NestedPersist.SaveAsync
    fullName: SuperOffice.Data.NestedPersist.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPreIdUpdateAsync()
  nameWithType: NestedPersist.INestedPersist.OnPreIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: INestedPersist.OnPreIdUpdateAsync
    nameWithType: NestedPersist.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnIdUpdateAsync()
  nameWithType: NestedPersist.INestedPersist.OnIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: INestedPersist.OnIdUpdateAsync
    nameWithType: NestedPersist.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnSaveAsync(BatchSave)
  nameWithType: NestedPersist.INestedPersist.OnSaveAsync(BatchSave)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSaveAsync
    nameWithType: NestedPersist.INestedPersist.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSaveAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnSavedAsync(Boolean)
  nameWithType: NestedPersist.INestedPersist.OnSavedAsync(Boolean)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync(System.Boolean)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: INestedPersist.OnSavedAsync
    nameWithType: NestedPersist.INestedPersist.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSavedAsync
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: add_OnElementSaved(OnSaved)
  nameWithType: NestedPersist.add_OnElementSaved(OnSaved)
  fullName: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: NestedPersist.add_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: NestedPersist.add_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: remove_OnElementSaved(OnSaved)
  nameWithType: NestedPersist.remove_OnElementSaved(OnSaved)
  fullName: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: NestedPersist.remove_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: NestedPersist.remove_OnElementSaved
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: add_OnElementIdUpdate(OnIdUpdate)
  nameWithType: NestedPersist.add_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: NestedPersist.add_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: NestedPersist.add_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: remove_OnElementIdUpdate(OnIdUpdate)
  nameWithType: NestedPersist.remove_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: NestedPersist.remove_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: NestedPersist.remove_OnElementIdUpdate
    fullName: SuperOffice.Data.NestedPersist.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.IsSaving
  commentId: P:SuperOffice.Data.NestedPersist.IsSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsSaving
  nameWithType: NestedPersist.IsSaving
  fullName: SuperOffice.Data.NestedPersist.IsSaving
- uid: SuperOffice.Data.NestedPersist.IsDeleted
  commentId: P:SuperOffice.Data.NestedPersist.IsDeleted
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsDeleted
  nameWithType: NestedPersist.IsDeleted
  fullName: SuperOffice.Data.NestedPersist.IsDeleted
- uid: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  commentId: P:SuperOffice.Data.NestedPersist.IsMarkedForDelete
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: NestedPersist.IsMarkedForDelete
  fullName: SuperOffice.Data.NestedPersist.IsMarkedForDelete
- uid: SuperOffice.Data.NestedPersist.OnElementSaved
  commentId: E:SuperOffice.Data.NestedPersist.OnElementSaved
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: OnElementSaved
  nameWithType: NestedPersist.OnElementSaved
  fullName: SuperOffice.Data.NestedPersist.OnElementSaved
- uid: SuperOffice.Data.NestedPersist.OnElementIdUpdate
  commentId: E:SuperOffice.Data.NestedPersist.OnElementIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: NestedPersist.OnElementIdUpdate
  fullName: SuperOffice.Data.NestedPersist.OnElementIdUpdate
- uid: SuperOffice.License.AssociateModuleLicenseOwner.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AssociateModuleLicenseOwner, To>()
  nameWithType: EnumUtil.MapEnums<AssociateModuleLicenseOwner, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.License.AssociateModuleLicenseOwner, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AssociateModuleLicenseOwner, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.AssociateModuleLicenseOwner, To)()
  name.vb: MapEnums(Of AssociateModuleLicenseOwner, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AssociateModuleLicenseOwner, To>
    nameWithType: EnumUtil.MapEnums<AssociateModuleLicenseOwner, To>
    fullName: EnumUtil.MapEnums<SuperOffice.License.AssociateModuleLicenseOwner, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AssociateModuleLicenseOwner, To)
    nameWithType: EnumUtil.MapEnums(Of AssociateModuleLicenseOwner, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.License.AssociateModuleLicenseOwner, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.AssociateModuleLicenseOwner.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AssociateModuleLicenseOwner, To>()
  nameWithType: Converters.MapEnums<AssociateModuleLicenseOwner, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.AssociateModuleLicenseOwner, To>()
  nameWithType.vb: Converters.MapEnums(Of AssociateModuleLicenseOwner, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.AssociateModuleLicenseOwner, To)()
  name.vb: MapEnums(Of AssociateModuleLicenseOwner, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AssociateModuleLicenseOwner, To>
    nameWithType: Converters.MapEnums<AssociateModuleLicenseOwner, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.AssociateModuleLicenseOwner, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AssociateModuleLicenseOwner, To)
    nameWithType: Converters.MapEnums(Of AssociateModuleLicenseOwner, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.AssociateModuleLicenseOwner, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2
  commentId: T:SuperOffice.License.ModuleLicenseOwnerBase`2
  isExternal: true
  name: ModuleLicenseOwnerBase<TLink, TLinkRow>
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow)
  name.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    nameWithType: ModuleLicenseOwnerBase
    fullName: SuperOffice.License.ModuleLicenseOwnerBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TLink
    nameWithType: TLink
    fullName: TLink
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TLinkRow
    nameWithType: TLinkRow
    fullName: TLinkRow
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    nameWithType: ModuleLicenseOwnerBase
    fullName: SuperOffice.License.ModuleLicenseOwnerBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TLink
    nameWithType: TLink
    fullName: TLink
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TLinkRow
    nameWithType: TLinkRow
    fullName: TLinkRow
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  isExternal: true
  name: OnPreIdUpdateAsync()
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync()
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync()
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync()
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  isExternal: true
  name: GetFacadingItems()
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems()
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems()
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems()
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
    name: GetFacadingItems
    nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
    name: GetFacadingItems
    nameWithType: ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
  isExternal: true
  name: OnSavedAsync(Boolean)
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync(Boolean)
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync(System.Boolean)
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync(Boolean)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  isExternal: true
  name: Owner
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Owner
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Owner
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Owner
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Owner
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  isExternal: true
  name: Modules
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Modules
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Modules
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Modules
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Modules
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Item[Int32]
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Item[System.Int32]
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item(Int32)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
    name: Item
    nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
    name: Item
    nameWithType: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Item[String]
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Item[System.String]
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item(String)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
    name: Item
    nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
    name: Item
    nameWithType: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item
    fullName: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDirty
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDirty
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDirty
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDirty
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  isExternal: true
  name: IsDeleted
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDeleted
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDeleted
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDeleted
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDeleted
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.License.AssociateModuleLicenseOwner.#ctor*
  commentId: Overload:SuperOffice.License.AssociateModuleLicenseOwner.#ctor
  isExternal: true
  name: AssociateModuleLicenseOwner
  nameWithType: AssociateModuleLicenseOwner.AssociateModuleLicenseOwner
  fullName: SuperOffice.License.AssociateModuleLicenseOwner.AssociateModuleLicenseOwner
- uid: SuperOffice.CRM.Rows.ModuleOwnerRow
  commentId: T:SuperOffice.CRM.Rows.ModuleOwnerRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ModuleOwnerRow
  nameWithType: ModuleOwnerRow
  fullName: SuperOffice.CRM.Rows.ModuleOwnerRow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
