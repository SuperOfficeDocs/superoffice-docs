### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  id: NetServerLocalOptionsBuilder
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType``1
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType``1
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider``1
  langs:
  - csharp
  - vb
  name: NetServerLocalOptionsBuilder
  nameWithType: NetServerLocalOptionsBuilder
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nBuilder for configuring <xref href=\"Microsoft.Extensions.DependencyInjection.NetServerLocalOptions\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: 'public sealed class NetServerLocalOptionsBuilder : Object'
    content.vb: >-
      Public NotInheritable Class NetServerLocalOptionsBuilder
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.EnumUtil.MapEnums``2
  - Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType``1
  commentId: M:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType``1
  id: UseCustomerServiceUrlResolverType``1
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  langs:
  - csharp
  - vb
  name: UseCustomerServiceUrlResolverType<TType>()
  nameWithType: NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType<TType>()
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType<TType>()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nConfigure type of Customer Service resolver to use.  Default is <xref href=\"SuperOffice.CRM.CustomerServiceUrlResolver\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: >-
      public NetServerLocalOptionsBuilder UseCustomerServiceUrlResolverType<TType>()
          where TType : class, ICustomerServiceUrlResolver
    typeParameters:
    - id: TType
      description: Type of Customer Service resolver to use
    return:
      type: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
    content.vb: Public Function UseCustomerServiceUrlResolverType(Of TType As {Class, ICustomerServiceUrlResolver}) As NetServerLocalOptionsBuilder
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType*
  nameWithType.vb: NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType(Of TType)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType(Of TType)()
  name.vb: UseCustomerServiceUrlResolverType(Of TType)()
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider``1
  commentId: M:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider``1
  id: UseTempFileProvider``1
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  langs:
  - csharp
  - vb
  name: UseTempFileProvider<T>()
  nameWithType: NetServerLocalOptionsBuilder.UseTempFileProvider<T>()
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider<T>()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: >-
      public NetServerLocalOptionsBuilder UseTempFileProvider<T>()
          where T : class, ITempFileProvider
    typeParameters:
    - id: T
    return:
      type: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
    content.vb: Public Function UseTempFileProvider(Of T As {Class, ITempFileProvider}) As NetServerLocalOptionsBuilder
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider*
  nameWithType.vb: NetServerLocalOptionsBuilder.UseTempFileProvider(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider(Of T)()
  name.vb: UseTempFileProvider(Of T)()
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType``1
  commentId: M:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType``1
  id: UseFlushCacheAndBroadcastPluginType``1
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  langs:
  - csharp
  - vb
  name: UseFlushCacheAndBroadcastPluginType<TType>()
  nameWithType: NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType<TType>()
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType<TType>()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: >-
      public NetServerLocalOptionsBuilder UseFlushCacheAndBroadcastPluginType<TType>()
          where TType : class, IFlushCacheAndBroadcastPlugin
    typeParameters:
    - id: TType
    return:
      type: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
    content.vb: Public Function UseFlushCacheAndBroadcastPluginType(Of TType As {Class, IFlushCacheAndBroadcastPlugin}) As NetServerLocalOptionsBuilder
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType*
  nameWithType.vb: NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType(Of TType)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType(Of TType)()
  name.vb: UseFlushCacheAndBroadcastPluginType(Of TType)()
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  id: ExcludeSoArc2DocumentPlugin
  parent: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  langs:
  - csharp
  - vb
  name: ExcludeSoArc2DocumentPlugin
  nameWithType: NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nExclude the default <xref href=\"SuperOffice.CRM.Documents.SoArc2\" data-throw-if-not-resolved=\"false\"></xref> document plugin from the application.\n"
  syntax:
    content: public bool ExcludeSoArc2DocumentPlugin { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ExcludeSoArc2DocumentPlugin As Boolean
  overload: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NetServerLocalOptionsBuilder, To>()
  nameWithType: EnumUtil.MapEnums<NetServerLocalOptionsBuilder, To>()
  fullName: EnumUtil.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NetServerLocalOptionsBuilder, To)()
  fullName.vb: EnumUtil.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To)()
  name.vb: MapEnums(Of NetServerLocalOptionsBuilder, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NetServerLocalOptionsBuilder, To>
    nameWithType: EnumUtil.MapEnums<NetServerLocalOptionsBuilder, To>
    fullName: EnumUtil.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NetServerLocalOptionsBuilder, To)
    nameWithType: EnumUtil.MapEnums(Of NetServerLocalOptionsBuilder, To)
    fullName: EnumUtil.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NetServerLocalOptionsBuilder, To>()
  nameWithType: Converters.MapEnums<NetServerLocalOptionsBuilder, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To>()
  nameWithType.vb: Converters.MapEnums(Of NetServerLocalOptionsBuilder, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To)()
  name.vb: MapEnums(Of NetServerLocalOptionsBuilder, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NetServerLocalOptionsBuilder, To>
    nameWithType: Converters.MapEnums<NetServerLocalOptionsBuilder, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NetServerLocalOptionsBuilder, To)
    nameWithType: Converters.MapEnums(Of NetServerLocalOptionsBuilder, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType
  isExternal: true
  name: UseCustomerServiceUrlResolverType
  nameWithType: NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseCustomerServiceUrlResolverType
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  commentId: T:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: NetServerLocalOptionsBuilder
  nameWithType: NetServerLocalOptionsBuilder
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider
  isExternal: true
  name: UseTempFileProvider
  nameWithType: NetServerLocalOptionsBuilder.UseTempFileProvider
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseTempFileProvider
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType
  isExternal: true
  name: UseFlushCacheAndBroadcastPluginType
  nameWithType: NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.UseFlushCacheAndBroadcastPluginType
- uid: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  isExternal: true
  name: ExcludeSoArc2DocumentPlugin
  nameWithType: NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
  fullName: Microsoft.Extensions.DependencyInjection.NetServerLocalOptionsBuilder.ExcludeSoArc2DocumentPlugin
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
