### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.SentryPreferenceCache
  commentId: T:SuperOffice.CRM.Security.SentryPreferenceCache
  id: SentryPreferenceCache
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.SentryPreferenceCache.#ctor
  - SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent
  - SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32,SuperOffice.Security.Principal.SoPrincipal)
  - SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32,System.Int32)
  - SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad
  - SuperOffice.CRM.Security.SentryPreferenceCache.TableNames
  langs:
  - csharp
  - vb
  name: SentryPreferenceCache
  nameWithType: SentryPreferenceCache
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nCaches preferences in the &quot;Rights-*&quot; section.\nCache is manually flushed when SoPreference sets a &quot;Rights-&quot; preference value, or every 10 minutes.\n"
  syntax:
    content: >-
      [CacheV2("Database", 0)]

      public class SentryPreferenceCache : CacheBaseV2, IFlushableV2, IDisposable
    content.vb: >-
      <CacheV2("Database", 0)>

      Public Class SentryPreferenceCache
          Inherits CacheBaseV2
          Implements IFlushableV2, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  implements:
  - SuperOffice.Data.Cache.IFlushableV2
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.Dispose
  - SuperOffice.Data.Cache.CacheBaseV2.Flush
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Security.SentryPreferenceCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Security.SentryPreferenceCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Security.SentryPreferenceCache)
  - SuperOffice.CRM.Security.SentryPreferenceCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Security.SentryPreferenceCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Database
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32,System.Int32)
  id: GetTableRights(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: GetTableRights(Int32, Int32)
  nameWithType: SentryPreferenceCache.GetTableRights(Int32, Int32)
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet table rights from the preference system for the logged in user.\n"
  syntax:
    content: public TableRight GetTableRights(int sentryTable, int rowId)
    parameters:
    - id: sentryTable
      type: System.Int32
      description: TableNumber for the main sentry table.
    - id: rowId
      type: System.Int32
      description: Primary key of the row.  0 if the row is new.
    return:
      type: SuperOffice.CRM.Security.TableRight
      description: Table rights from the preference system.
    content.vb: Public Function GetTableRights(sentryTable As Integer, rowId As Integer) As TableRight
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetTableRights(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: GetTableRights(Int32, Int32, Int32, Int32)
  nameWithType: SentryPreferenceCache.GetTableRights(Int32, Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights(System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet table rights from the preference system for a user.\n"
  syntax:
    content: public TableRight GetTableRights(int sentryTable, int associateId, int groupId, int rowId)
    parameters:
    - id: sentryTable
      type: System.Int32
      description: TableNumber for the main sentry table.
    - id: associateId
      type: System.Int32
      description: AssociateId for the user to get the rights for.
    - id: groupId
      type: System.Int32
      description: Group id for the user to get the rights for
    - id: rowId
      type: System.Int32
      description: Primary key of the row.  0 if the row is new.
    return:
      type: SuperOffice.CRM.Security.TableRight
      description: Table rights from the preference system.
    content.vb: Public Function GetTableRights(sentryTable As Integer, associateId As Integer, groupId As Integer, rowId As Integer) As TableRight
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32)
  id: GetFieldRights(System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: GetFieldRights(Int32, Int32, Int32)
  nameWithType: SentryPreferenceCache.GetFieldRights(Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet the field rights from the preference system for a user.\n"
  syntax:
    content: public FieldRight GetFieldRights(int sentryTable, int fieldId, int rowId)
    parameters:
    - id: sentryTable
      type: System.Int32
      description: TableNumber for the main sentry table.
    - id: fieldId
      type: System.Int32
      description: FieldNumber (TableNumber [left shift] 8 + FieldNumber) for the field to look up
    - id: rowId
      type: System.Int32
      description: Primary key of the row.  0 if the row is new.
    return:
      type: SuperOffice.CRM.Security.FieldRight
      description: Field rights from the preference system.
    content.vb: Public Function GetFieldRights(sentryTable As Integer, fieldId As Integer, rowId As Integer) As FieldRight
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32,SuperOffice.Security.Principal.SoPrincipal)
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32,SuperOffice.Security.Principal.SoPrincipal)
  id: GetFieldRights(System.Int32,System.Int32,System.Int32,SuperOffice.Security.Principal.SoPrincipal)
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: GetFieldRights(Int32, Int32, Int32, SoPrincipal)
  nameWithType: SentryPreferenceCache.GetFieldRights(Int32, Int32, Int32, SoPrincipal)
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32, System.Int32, System.Int32, SuperOffice.Security.Principal.SoPrincipal)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet the field rights from the preference system for a user.\n"
  syntax:
    content: public FieldRight GetFieldRights(int sentryTable, int fieldId, int rowId, SoPrincipal principal)
    parameters:
    - id: sentryTable
      type: System.Int32
      description: TableNumber for the main sentry table.
    - id: fieldId
      type: System.Int32
      description: FieldNumber (TableNumber [left shift] 8 + FieldNumber) for the field to look up
    - id: rowId
      type: System.Int32
      description: Primary key of the row.  0 if the row is new.
    - id: principal
      type: SuperOffice.Security.Principal.SoPrincipal
      description: Providing the princpial for optimization
    return:
      type: SuperOffice.CRM.Security.FieldRight
      description: Field rights from the preference system.
    content.vb: Public Function GetFieldRights(sentryTable As Integer, fieldId As Integer, rowId As Integer, principal As SoPrincipal) As FieldRight
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: GetFieldRights(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: GetFieldRights(Int32, Int32, Int32, Int32, Int32)
  nameWithType: SentryPreferenceCache.GetFieldRights(Int32, Int32, Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nGet the field rights from the preference system for a user.\n"
  syntax:
    content: public FieldRight GetFieldRights(int sentryTable, int fieldId, int associateId, int groupId, int rowId)
    parameters:
    - id: sentryTable
      type: System.Int32
      description: TableNumber for the main sentry table.
    - id: fieldId
      type: System.Int32
      description: FieldNumber (TableNumber [left shift] 8 + FieldNumber) for the field to look up
    - id: associateId
      type: System.Int32
      description: AssociateId for the user to get the rights for.
    - id: groupId
      type: System.Int32
      description: Group id for the user to get the rights for
    - id: rowId
      type: System.Int32
      description: Primary key of the row.  0 if the row is new.
    return:
      type: SuperOffice.CRM.Security.FieldRight
      description: Field rights from the preference system.
    content.vb: Public Function GetFieldRights(sentryTable As Integer, fieldId As Integer, associateId As Integer, groupId As Integer, rowId As Integer) As FieldRight
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  id: IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: SentryPreferenceCache.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nDetermine if cache was <strong>actually</strong> invalidated by this change - much of the traffic on the userpreference table does not affect us here\n"
  remarks: "\nThis cache is invalidated if one of the previously known rows is deleted, OR if a row with a section name starting with Rights- is created or updated.\n"
  syntax:
    content: protected override bool IsCacheInvalidated(string tableName, int primaryKey, PrivateSave save)
    parameters:
    - id: tableName
      type: System.String
    - id: primaryKey
      type: System.Int32
    - id: save
      type: SuperOffice.Data.SQL.PrivateSave
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsCacheInvalidated(tableName As String, primaryKey As Integer, save As PrivateSave) As Boolean
  overridden: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: SentryPreferenceCache.OnLoad()
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent
  id: GetCurrent
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: SentryPreferenceCache.GetCurrent()
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public static SentryPreferenceCache GetCurrent()
    return:
      type: SuperOffice.CRM.Security.SentryPreferenceCache
    content.vb: Public Shared Function GetCurrent As SentryPreferenceCache
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.#ctor
  commentId: M:SuperOffice.CRM.Security.SentryPreferenceCache.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: SentryPreferenceCache()
  nameWithType: SentryPreferenceCache.SentryPreferenceCache()
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.SentryPreferenceCache()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public SentryPreferenceCache()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.TableNames
  commentId: P:SuperOffice.CRM.Security.SentryPreferenceCache.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Security.SentryPreferenceCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: SentryPreferenceCache.TableNames
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  remarks: "\nAlthough we read from table &quot;UserPreference&quot; we shouldn&apos;t add it to TableNames for this cache\nbecause there&apos;s too much traffic on that table. Invoking flush on every table change would be\nexpensive, so we implement a custom <xref href=\"SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated(System.String%2cSystem.Int32%2cSuperOffice.Data.SQL.PrivateSave)\" data-throw-if-not-resolved=\"false\"></xref> to only trigger when it\nsees Rights-* changes or updates to known sentry preferences.\n"
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Security.SentryPreferenceCache.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.IFlushableV2
  commentId: T:SuperOffice.Data.Cache.IFlushableV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: IFlushableV2
  nameWithType: IFlushableV2
  fullName: SuperOffice.Data.Cache.IFlushableV2
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Dispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Dispose()
  nameWithType: CacheBaseV2.Dispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Flush
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Flush()
  nameWithType: CacheBaseV2.Flush()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: GetCurrent<T>()
  nameWithType: CacheBaseV2.GetCurrent<T>()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>()
  nameWithType.vb: CacheBaseV2.GetCurrent(Of T)()
  fullName.vb: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)()
  name.vb: GetCurrent(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent<T>
    nameWithType: CacheBaseV2.GetCurrent<T>
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent(Of T)
    nameWithType: CacheBaseV2.GetCurrent(Of T)
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SentryPreferenceCache, To>()
  nameWithType: EnumUtil.MapEnums<SentryPreferenceCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryPreferenceCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SentryPreferenceCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryPreferenceCache, To)()
  name.vb: MapEnums(Of SentryPreferenceCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SentryPreferenceCache, To>
    nameWithType: EnumUtil.MapEnums<SentryPreferenceCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryPreferenceCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SentryPreferenceCache, To)
    nameWithType: EnumUtil.MapEnums(Of SentryPreferenceCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryPreferenceCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Security.SentryPreferenceCache)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SentryPreferenceCache>(SentryPreferenceCache)
  nameWithType: ObjectExtensions.AssignByReflection<SentryPreferenceCache>(SentryPreferenceCache)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Security.SentryPreferenceCache>(SuperOffice.CRM.Security.SentryPreferenceCache)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SentryPreferenceCache)(SentryPreferenceCache)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Security.SentryPreferenceCache)(SuperOffice.CRM.Security.SentryPreferenceCache)
  name.vb: AssignByReflection(Of SentryPreferenceCache)(SentryPreferenceCache)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SentryPreferenceCache>
    nameWithType: ObjectExtensions.AssignByReflection<SentryPreferenceCache>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Security.SentryPreferenceCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Security.SentryPreferenceCache
    name: SentryPreferenceCache
    nameWithType: SentryPreferenceCache
    fullName: SuperOffice.CRM.Security.SentryPreferenceCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SentryPreferenceCache)
    nameWithType: ObjectExtensions.AssignByReflection(Of SentryPreferenceCache)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Security.SentryPreferenceCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Security.SentryPreferenceCache
    name: SentryPreferenceCache
    nameWithType: SentryPreferenceCache
    fullName: SuperOffice.CRM.Security.SentryPreferenceCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SentryPreferenceCache>()
  nameWithType: ObjectExtensions.GraphCopy<SentryPreferenceCache>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Security.SentryPreferenceCache>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SentryPreferenceCache)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Security.SentryPreferenceCache)()
  name.vb: GraphCopy(Of SentryPreferenceCache)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SentryPreferenceCache>
    nameWithType: ObjectExtensions.GraphCopy<SentryPreferenceCache>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Security.SentryPreferenceCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SentryPreferenceCache)
    nameWithType: ObjectExtensions.GraphCopy(Of SentryPreferenceCache)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Security.SentryPreferenceCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SentryPreferenceCache, To>()
  nameWithType: Converters.MapEnums<SentryPreferenceCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryPreferenceCache, To>()
  nameWithType.vb: Converters.MapEnums(Of SentryPreferenceCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryPreferenceCache, To)()
  name.vb: MapEnums(Of SentryPreferenceCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SentryPreferenceCache, To>
    nameWithType: Converters.MapEnums<SentryPreferenceCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryPreferenceCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SentryPreferenceCache, To)
    nameWithType: Converters.MapEnums(Of SentryPreferenceCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryPreferenceCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights
  isExternal: true
  name: GetTableRights
  nameWithType: SentryPreferenceCache.GetTableRights
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetTableRights
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Security.TableRight
  commentId: T:SuperOffice.CRM.Security.TableRight
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: TableRight
  nameWithType: TableRight
  fullName: SuperOffice.CRM.Security.TableRight
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights
  isExternal: true
  name: GetFieldRights
  nameWithType: SentryPreferenceCache.GetFieldRights
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetFieldRights
- uid: SuperOffice.CRM.Security.FieldRight
  commentId: T:SuperOffice.CRM.Security.FieldRight
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: FieldRight
  nameWithType: FieldRight
  fullName: SuperOffice.CRM.Security.FieldRight
- uid: SuperOffice.Security.Principal.SoPrincipal
  commentId: T:SuperOffice.Security.Principal.SoPrincipal
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: SoPrincipal
  nameWithType: SoPrincipal
  fullName: SuperOffice.Security.Principal.SoPrincipal
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: CacheBaseV2.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated
  isExternal: true
  name: IsCacheInvalidated
  nameWithType: SentryPreferenceCache.IsCacheInvalidated
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.IsCacheInvalidated
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: SentryPreferenceCache.OnLoad
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.OnLoad
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: SentryPreferenceCache.GetCurrent
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.GetCurrent
- uid: SuperOffice.CRM.Security.SentryPreferenceCache
  commentId: T:SuperOffice.CRM.Security.SentryPreferenceCache
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: SentryPreferenceCache
  nameWithType: SentryPreferenceCache
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.#ctor
  isExternal: true
  name: SentryPreferenceCache
  nameWithType: SentryPreferenceCache.SentryPreferenceCache
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.SentryPreferenceCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Security.SentryPreferenceCache.TableNames*
  commentId: Overload:SuperOffice.CRM.Security.SentryPreferenceCache.TableNames
  isExternal: true
  name: TableNames
  nameWithType: SentryPreferenceCache.TableNames
  fullName: SuperOffice.CRM.Security.SentryPreferenceCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
