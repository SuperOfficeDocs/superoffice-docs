### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.Util.SerializationHelper
  commentId: T:SuperOffice.CRM.Services.Util.SerializationHelper
  id: SerializationHelper
  parent: SuperOffice.CRM.Services.Util
  children:
  - SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer(System.Type,System.String)
  - SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml(System.Xml.XmlReader,System.String)
  - SuperOffice.CRM.Services.Util.SerializationHelper.xmlSerializers
  langs:
  - csharp
  - vb
  name: SerializationHelper
  nameWithType: SerializationHelper
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Util
  summary: "\nUtility class for xml serialization\n"
  syntax:
    content: public sealed class SerializationHelper
    content.vb: Public NotInheritable Class SerializationHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Services.Util.SerializationHelper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Services.Util.SerializationHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.xmlSerializers
  commentId: F:SuperOffice.CRM.Services.Util.SerializationHelper.xmlSerializers
  id: xmlSerializers
  parent: SuperOffice.CRM.Services.Util.SerializationHelper
  langs:
  - csharp
  - vb
  name: xmlSerializers
  nameWithType: SerializationHelper.xmlSerializers
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper.xmlSerializers
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Util
  syntax:
    content: public static Dictionary<Type, XmlSerializer> xmlSerializers
    return:
      type: System.Collections.Generic.Dictionary{System.Type,System.Xml.Serialization.XmlSerializer}
    content.vb: Public Shared xmlSerializers As Dictionary(Of Type, XmlSerializer)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml(System.Xml.XmlReader,System.String)
  commentId: M:SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml(System.Xml.XmlReader,System.String)
  id: EnterReadXml(System.Xml.XmlReader,System.String)
  parent: SuperOffice.CRM.Services.Util.SerializationHelper
  langs:
  - csharp
  - vb
  name: EnterReadXml(XmlReader, String)
  nameWithType: SerializationHelper.EnterReadXml(XmlReader, String)
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml(System.Xml.XmlReader, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Util
  summary: "\nHelper method for using the <xref href=\"System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public static SerializationHelper.ReadXmlHelper EnterReadXml(XmlReader reader, string firstElementName)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The reader de-serializating from
    - id: firstElementName
      type: System.String
      description: Name of the first element to read.
    return:
      type: SuperOffice.CRM.Services.Util.SerializationHelper.ReadXmlHelper
      description: Implementation of IDisposable cleaning up state in the reader with regard to handling outer xml.
    content.vb: Public Shared Function EnterReadXml(reader As XmlReader, firstElementName As String) As SerializationHelper.ReadXmlHelper
  overload: SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer(System.Type,System.String)
  commentId: M:SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer(System.Type,System.String)
  id: CreateSerializer(System.Type,System.String)
  parent: SuperOffice.CRM.Services.Util.SerializationHelper
  langs:
  - csharp
  - vb
  name: CreateSerializer(Type, String)
  nameWithType: SerializationHelper.CreateSerializer(Type, String)
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer(System.Type, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Util
  syntax:
    content: public static XmlSerializer CreateSerializer(Type targetType, string rootElementName)
    parameters:
    - id: targetType
      type: System.Type
    - id: rootElementName
      type: System.String
    return:
      type: System.Xml.Serialization.XmlSerializer
    content.vb: Public Shared Function CreateSerializer(targetType As Type, rootElementName As String) As XmlSerializer
  overload: SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Services.Util
  commentId: N:SuperOffice.CRM.Services.Util
  isExternal: true
  name: SuperOffice.CRM.Services.Util
  nameWithType: SuperOffice.CRM.Services.Util
  fullName: SuperOffice.CRM.Services.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SerializationHelper, To>()
  nameWithType: EnumUtil.MapEnums<SerializationHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.Util.SerializationHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SerializationHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.Util.SerializationHelper, To)()
  name.vb: MapEnums(Of SerializationHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SerializationHelper, To>
    nameWithType: EnumUtil.MapEnums<SerializationHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.Util.SerializationHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SerializationHelper, To)
    nameWithType: EnumUtil.MapEnums(Of SerializationHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.Util.SerializationHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SerializationHelper, To>()
  nameWithType: Converters.MapEnums<SerializationHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.Util.SerializationHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of SerializationHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.Util.SerializationHelper, To)()
  name.vb: MapEnums(Of SerializationHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SerializationHelper, To>
    nameWithType: Converters.MapEnums<SerializationHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.Util.SerializationHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SerializationHelper, To)
    nameWithType: Converters.MapEnums(Of SerializationHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.Util.SerializationHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Collections.Generic.Dictionary{System.Type,System.Xml.Serialization.XmlSerializer}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,System.Xml.Serialization.XmlSerializer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, XmlSerializer>
  nameWithType: Dictionary<Type, XmlSerializer>
  fullName: System.Collections.Generic.Dictionary<System.Type, System.Xml.Serialization.XmlSerializer>
  nameWithType.vb: Dictionary(Of Type, XmlSerializer)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, System.Xml.Serialization.XmlSerializer)
  name.vb: Dictionary(Of Type, XmlSerializer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.Serialization.XmlSerializer
    name: XmlSerializer
    nameWithType: XmlSerializer
    fullName: System.Xml.Serialization.XmlSerializer
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.Serialization.XmlSerializer
    name: XmlSerializer
    nameWithType: XmlSerializer
    fullName: System.Xml.Serialization.XmlSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml*
  commentId: Overload:SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml
  isExternal: true
  name: EnterReadXml
  nameWithType: SerializationHelper.EnterReadXml
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper.EnterReadXml
- uid: System.Xml.XmlReader
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.ReadXmlHelper
  commentId: T:SuperOffice.CRM.Services.Util.SerializationHelper.ReadXmlHelper
  parent: SuperOffice.CRM.Services.Util
  isExternal: true
  name: SerializationHelper.ReadXmlHelper
  nameWithType: SerializationHelper.ReadXmlHelper
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper.ReadXmlHelper
- uid: SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer*
  commentId: Overload:SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer
  isExternal: true
  name: CreateSerializer
  nameWithType: SerializationHelper.CreateSerializer
  fullName: SuperOffice.CRM.Services.Util.SerializationHelper.CreateSerializer
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializer
  isExternal: true
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
