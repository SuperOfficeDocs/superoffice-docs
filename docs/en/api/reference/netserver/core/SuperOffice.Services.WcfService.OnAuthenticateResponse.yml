### YamlMime:ManagedReference
items:
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse
  commentId: T:SuperOffice.Services.WcfService.OnAuthenticateResponse
  id: OnAuthenticateResponse
  parent: SuperOffice.Services.WcfService
  children:
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.#ctor
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.Name
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded
  langs:
  - csharp
  - vb
  name: OnAuthenticateResponse
  nameWithType: OnAuthenticateResponse
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse
  type: Class
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Services.WcfService
  syntax:
    content: 'public sealed class OnAuthenticateResponse : Object'
    content.vb: >-
      Public NotInheritable Class OnAuthenticateResponse
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.EnumUtil.MapEnums``2
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Services.WcfService.OnAuthenticateResponse)
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Services.WcfService.OnAuthenticateResponse.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.Name
  commentId: F:SuperOffice.Services.WcfService.OnAuthenticateResponse.Name
  id: Name
  parent: SuperOffice.Services.WcfService.OnAuthenticateResponse
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OnAuthenticateResponse.Name
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.Name
  type: Field
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Services.WcfService
  syntax:
    content: public const string Name = "WcfRequestInterceptor.AuthResponce"
    return:
      type: System.String
    content.vb: Public Const Name As String = "WcfRequestInterceptor.AuthResponce"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.#ctor
  commentId: M:SuperOffice.Services.WcfService.OnAuthenticateResponse.#ctor
  id: '#ctor'
  parent: SuperOffice.Services.WcfService.OnAuthenticateResponse
  langs:
  - csharp
  - vb
  name: OnAuthenticateResponse()
  nameWithType: OnAuthenticateResponse.OnAuthenticateResponse()
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.OnAuthenticateResponse()
  type: Constructor
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Services.WcfService
  syntax:
    content: public OnAuthenticateResponse()
    content.vb: Public Sub New
  overload: SuperOffice.Services.WcfService.OnAuthenticateResponse.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded
  commentId: P:SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded
  id: Succeeded
  parent: SuperOffice.Services.WcfService.OnAuthenticateResponse
  langs:
  - csharp
  - vb
  name: Succeeded
  nameWithType: OnAuthenticateResponse.Succeeded
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Services.WcfService
  syntax:
    content: public bool Succeeded { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Succeeded As Boolean
  overload: SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason
  commentId: P:SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason
  id: Reason
  parent: SuperOffice.Services.WcfService.OnAuthenticateResponse
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: OnAuthenticateResponse.Reason
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Services.WcfService
  syntax:
    content: public string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Reason As String
  overload: SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState
  commentId: P:SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState
  id: PluginState
  parent: SuperOffice.Services.WcfService.OnAuthenticateResponse
  langs:
  - csharp
  - vb
  name: PluginState
  nameWithType: OnAuthenticateResponse.PluginState
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.Services.WcfService
  syntax:
    content: public WcfRequestInterceptorState PluginState { get; set; }
    parameters: []
    return:
      type: SuperOffice.Services.WcfService.WcfRequestInterceptorState
    content.vb: Public Property PluginState As WcfRequestInterceptorState
  overload: SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Services.WcfService
  commentId: N:SuperOffice.Services.WcfService
  isExternal: true
  name: SuperOffice.Services.WcfService
  nameWithType: SuperOffice.Services.WcfService
  fullName: SuperOffice.Services.WcfService
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<OnAuthenticateResponse, To>()
  nameWithType: EnumUtil.MapEnums<OnAuthenticateResponse, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Services.WcfService.OnAuthenticateResponse, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of OnAuthenticateResponse, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Services.WcfService.OnAuthenticateResponse, To)()
  name.vb: MapEnums(Of OnAuthenticateResponse, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<OnAuthenticateResponse, To>
    nameWithType: EnumUtil.MapEnums<OnAuthenticateResponse, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Services.WcfService.OnAuthenticateResponse, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of OnAuthenticateResponse, To)
    nameWithType: EnumUtil.MapEnums(Of OnAuthenticateResponse, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Services.WcfService.OnAuthenticateResponse, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Services.WcfService.OnAuthenticateResponse)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<OnAuthenticateResponse>(OnAuthenticateResponse)
  nameWithType: ObjectExtensions.AssignByReflection<OnAuthenticateResponse>(OnAuthenticateResponse)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Services.WcfService.OnAuthenticateResponse>(SuperOffice.Services.WcfService.OnAuthenticateResponse)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of OnAuthenticateResponse)(OnAuthenticateResponse)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Services.WcfService.OnAuthenticateResponse)(SuperOffice.Services.WcfService.OnAuthenticateResponse)
  name.vb: AssignByReflection(Of OnAuthenticateResponse)(OnAuthenticateResponse)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<OnAuthenticateResponse>
    nameWithType: ObjectExtensions.AssignByReflection<OnAuthenticateResponse>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Services.WcfService.OnAuthenticateResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Services.WcfService.OnAuthenticateResponse
    name: OnAuthenticateResponse
    nameWithType: OnAuthenticateResponse
    fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of OnAuthenticateResponse)
    nameWithType: ObjectExtensions.AssignByReflection(Of OnAuthenticateResponse)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Services.WcfService.OnAuthenticateResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Services.WcfService.OnAuthenticateResponse
    name: OnAuthenticateResponse
    nameWithType: OnAuthenticateResponse
    fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<OnAuthenticateResponse>()
  nameWithType: ObjectExtensions.GraphCopy<OnAuthenticateResponse>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Services.WcfService.OnAuthenticateResponse>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of OnAuthenticateResponse)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Services.WcfService.OnAuthenticateResponse)()
  name.vb: GraphCopy(Of OnAuthenticateResponse)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<OnAuthenticateResponse>
    nameWithType: ObjectExtensions.GraphCopy<OnAuthenticateResponse>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Services.WcfService.OnAuthenticateResponse>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of OnAuthenticateResponse)
    nameWithType: ObjectExtensions.GraphCopy(Of OnAuthenticateResponse)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Services.WcfService.OnAuthenticateResponse)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<OnAuthenticateResponse, To>()
  nameWithType: Converters.MapEnums<OnAuthenticateResponse, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Services.WcfService.OnAuthenticateResponse, To>()
  nameWithType.vb: Converters.MapEnums(Of OnAuthenticateResponse, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Services.WcfService.OnAuthenticateResponse, To)()
  name.vb: MapEnums(Of OnAuthenticateResponse, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<OnAuthenticateResponse, To>
    nameWithType: Converters.MapEnums<OnAuthenticateResponse, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Services.WcfService.OnAuthenticateResponse, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of OnAuthenticateResponse, To)
    nameWithType: Converters.MapEnums(Of OnAuthenticateResponse, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Services.WcfService.OnAuthenticateResponse, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.#ctor*
  commentId: Overload:SuperOffice.Services.WcfService.OnAuthenticateResponse.#ctor
  isExternal: true
  name: OnAuthenticateResponse
  nameWithType: OnAuthenticateResponse.OnAuthenticateResponse
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.OnAuthenticateResponse
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded*
  commentId: Overload:SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded
  isExternal: true
  name: Succeeded
  nameWithType: OnAuthenticateResponse.Succeeded
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.Succeeded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason*
  commentId: Overload:SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason
  isExternal: true
  name: Reason
  nameWithType: OnAuthenticateResponse.Reason
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.Reason
- uid: SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState*
  commentId: Overload:SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState
  isExternal: true
  name: PluginState
  nameWithType: OnAuthenticateResponse.PluginState
  fullName: SuperOffice.Services.WcfService.OnAuthenticateResponse.PluginState
- uid: SuperOffice.Services.WcfService.WcfRequestInterceptorState
  commentId: T:SuperOffice.Services.WcfService.WcfRequestInterceptorState
  parent: SuperOffice.Services.WcfService
  isExternal: true
  name: WcfRequestInterceptorState
  nameWithType: WcfRequestInterceptorState
  fullName: SuperOffice.Services.WcfService.WcfRequestInterceptorState
