### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  id: ArchiveRestrictionInfo
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.Boolean,System.String[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.String[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.Int32[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.String[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue(System.String[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Boolean)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues(System.Int32)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]@)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue(System.Int32)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue(System.Int32)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue(System.Int32)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue(System.Int32)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MissingValueMarker
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiDisplayValueSeparator
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiListDisplayValueSeparator
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray(System.Boolean,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue(System.Int32)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray(System.Int32[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive(System.Boolean)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue(System.String[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators(System.String)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueKeyElementDelimiter
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo
  nameWithType: ArchiveRestrictionInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nThis class carries information about a restriction on the query of an archive provider\n"
  syntax:
    content: 'public sealed class ArchiveRestrictionInfo : ICloneable'
    content.vb: >-
      Public NotInheritable Class ArchiveRestrictionInfo
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
  - SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiDisplayValueSeparator
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiDisplayValueSeparator
  id: MultiDisplayValueSeparator
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: MultiDisplayValueSeparator
  nameWithType: ArchiveRestrictionInfo.MultiDisplayValueSeparator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiDisplayValueSeparator
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public const string MultiDisplayValueSeparator = " - "
    return:
      type: System.String
    content.vb: Public Const MultiDisplayValueSeparator As String = " - "
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiListDisplayValueSeparator
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiListDisplayValueSeparator
  id: MultiListDisplayValueSeparator
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: MultiListDisplayValueSeparator
  nameWithType: ArchiveRestrictionInfo.MultiListDisplayValueSeparator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MultiListDisplayValueSeparator
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public const string MultiListDisplayValueSeparator = "; "
    return:
      type: System.String
    content.vb: Public Const MultiListDisplayValueSeparator As String = "; "
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueKeyElementDelimiter
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueKeyElementDelimiter
  id: UniqueKeyElementDelimiter
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: UniqueKeyElementDelimiter
  nameWithType: ArchiveRestrictionInfo.UniqueKeyElementDelimiter
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueKeyElementDelimiter
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public const string UniqueKeyElementDelimiter = "|"
    return:
      type: System.String
    content.vb: Public Const UniqueKeyElementDelimiter As String = "|"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MissingValueMarker
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MissingValueMarker
  id: MissingValueMarker
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: MissingValueMarker
  nameWithType: ArchiveRestrictionInfo.MissingValueMarker
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.MissingValueMarker
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public const string MissingValueMarker = "!novalue!"
    return:
      type: System.String
    content.vb: Public Const MissingValueMarker As String = "!novalue!"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone
  id: Clone
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ArchiveRestrictionInfo.Clone()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone As Object
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo()
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the object with blank values\n"
  syntax:
    content: public ArchiveRestrictionInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(String)
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the object, setting basic items\n"
  syntax:
    content: public ArchiveRestrictionInfo(string restriction)
    parameters:
    - id: restriction
      type: System.String
      description: 'Column name, operator and value. Ex: &apos;contact_id=2&apos;'
    content.vb: Public Sub New(restriction As String)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(String, String, String)
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String, String, String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String, System.String, System.String)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the object, setting basic items\n"
  syntax:
    content: public ArchiveRestrictionInfo(string name, string oper, string value)
    parameters:
    - id: name
      type: System.String
      description: Column name, including any prefixes
    - id: oper
      type: System.String
      description: Operator
    - id: value
      type: System.String
      description: Value, non-string values must be formatted using the invariant culture
    content.vb: Public Sub New(name As String, oper As String, value As String)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(String, String)
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String, String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String, System.String)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the object, setting basic items\n"
  syntax:
    content: public ArchiveRestrictionInfo(string name, string oper)
    parameters:
    - id: name
      type: System.String
      description: Column name, including any prefixes
    - id: oper
      type: System.String
      description: Operator
    content.vb: Public Sub New(name As String, oper As String)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.String[])
  id: '#ctor(System.String,System.String,System.String[])'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(String, String, String[])
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String, String, String[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String, System.String, System.String[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the object, setting basic items and more than one value\n"
  syntax:
    content: public ArchiveRestrictionInfo(string name, string oper, params string[] value)
    parameters:
    - id: name
      type: System.String
      description: Column name, including any prefixes
    - id: oper
      type: System.String
      description: Operator
    - id: value
      type: System.String[]
      description: Value, non-string values must be formatted using the invariant culture
    content.vb: Public Sub New(name As String, oper As String, ParamArray value As String())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  nameWithType.vb: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String, String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String, System.String, System.String())
  name.vb: ArchiveRestrictionInfo(String, String, String())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.Int32[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(System.String,System.String,System.Int32[])
  id: '#ctor(System.String,System.String,System.Int32[])'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(String, String, Int32[])
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String, String, Int32[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String, System.String, System.Int32[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the object, setting basic items and more than one value\n"
  syntax:
    content: public ArchiveRestrictionInfo(string name, string oper, params int[] values)
    parameters:
    - id: name
      type: System.String
      description: Column name, including any prefixes
    - id: oper
      type: System.String
      description: Operator
    - id: values
      type: System.Int32[]
      description: Value, non-string values must be formatted using the invariant culture
    content.vb: Public Sub New(name As String, oper As String, ParamArray values As Integer())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  nameWithType.vb: ArchiveRestrictionInfo.ArchiveRestrictionInfo(String, String, Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(System.String, System.String, System.Int32())
  name.vb: ArchiveRestrictionInfo(String, String, Int32())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.String[])
  id: '#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.String[])'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(ArchiveColumnInfo, String, String[])
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(ArchiveColumnInfo, String, String[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo, System.String, System.String[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ArchiveRestrictionInfo(ArchiveColumnInfo baseColumn, string oper, params string[] value)
    parameters:
    - id: baseColumn
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    - id: oper
      type: System.String
    - id: value
      type: System.String[]
    content.vb: Public Sub New(baseColumn As ArchiveColumnInfo, oper As String, ParamArray value As String())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  nameWithType.vb: ArchiveRestrictionInfo.ArchiveRestrictionInfo(ArchiveColumnInfo, String, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo, System.String, System.String())
  name.vb: ArchiveRestrictionInfo(ArchiveColumnInfo, String, String())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.Boolean,System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.Boolean,System.String[])
  id: '#ctor(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo,System.String,System.Boolean,System.String[])'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(ArchiveColumnInfo, String, Boolean, String[])
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(ArchiveColumnInfo, String, Boolean, String[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo, System.String, System.Boolean, System.String[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ArchiveRestrictionInfo(ArchiveColumnInfo baseColumn, string oper, bool isActive, params string[] value)
    parameters:
    - id: baseColumn
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    - id: oper
      type: System.String
    - id: isActive
      type: System.Boolean
    - id: value
      type: System.String[]
    content.vb: Public Sub New(baseColumn As ArchiveColumnInfo, oper As String, isActive As Boolean, ParamArray value As String())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  nameWithType.vb: ArchiveRestrictionInfo.ArchiveRestrictionInfo(ArchiveColumnInfo, String, Boolean, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo, System.String, System.Boolean, System.String())
  name.vb: ArchiveRestrictionInfo(ArchiveColumnInfo, String, Boolean, String())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  id: '#ctor(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ArchiveRestrictionInfo(ArchiveRestrictionInfo)
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo(ArchiveRestrictionInfo)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ArchiveRestrictionInfo(ArchiveRestrictionInfo original)
    parameters:
    - id: original
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    content.vb: Public Sub New(original As ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction(System.String)
  id: GetSubRestriction(System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetSubRestriction(String)
  nameWithType: ArchiveRestrictionInfo.GetSubRestriction(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet a named subrestriction from this restriction\n"
  syntax:
    content: public ArchiveRestrictionInfo GetSubRestriction(string name)
    parameters:
    - id: name
      type: System.String
      description: Case-insensivite nameof subrestriction
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
      description: Subrestriction if found, or null
    content.vb: Public Function GetSubRestriction(name As String) As ArchiveRestrictionInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive(System.Boolean)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive(System.Boolean)
  id: SetRecursiveActive(System.Boolean)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: SetRecursiveActive(Boolean)
  nameWithType: ArchiveRestrictionInfo.SetRecursiveActive(Boolean)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive(System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSet the <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive\" data-throw-if-not-resolved=\"false\"></xref> flag for the restriction, and propagate into all subrestrictions as well\n"
  syntax:
    content: public void SetRecursiveActive(bool isActive)
    parameters:
    - id: isActive
      type: System.Boolean
      description: New value for isActive flag
    content.vb: Public Sub SetRecursiveActive(isActive As Boolean)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues(System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues(System.Int32)
  id: EnforceNumValues(System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: EnforceNumValues(Int32)
  nameWithType: ArchiveRestrictionInfo.EnforceNumValues(Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nEnforce exactly or at least a certain number of values; an exception is thrown if there are too few or too many\n"
  syntax:
    content: public void EnforceNumValues(int requiredValues)
    parameters:
    - id: requiredValues
      type: System.Int32
      description: >-
        Positive number: Require exactly this number of values.

        Negative number: Require at least the number of values of the absolute value of this parameter
    content.vb: Public Sub EnforceNumValues(requiredValues As Integer)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue(System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue(System.Int32)
  id: GetIntValue(System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetIntValue(Int32)
  nameWithType: ArchiveRestrictionInfo.GetIntValue(Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet a value as an integer. Uses CultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedInt(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns 0 if the value array is empty, regardless of index.\n"
  syntax:
    content: public int GetIntValue(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of value to return
    return:
      type: System.Int32
      description: Integer value
    content.vb: Public Function GetIntValue(index As Integer) As Integer
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is out of range, except if the value array is empty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue(System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue(System.Int32)
  id: GetDateTimeValue(System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetDateTimeValue(Int32)
  nameWithType: ArchiveRestrictionInfo.GetDateTimeValue(Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet a value as a DateTime. Uses CultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedDate(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns DateTime.MinValue if the value array is empty, regardless of index.\n"
  syntax:
    content: public DateTime GetDateTimeValue(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of value to return
    return:
      type: System.DateTime
      description: Integer value
    content.vb: Public Function GetDateTimeValue(index As Integer) As Date
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is out of range, except if the value array is empty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue(System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue(System.Int32)
  id: GetDoubleValue(System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetDoubleValue(Int32)
  nameWithType: ArchiveRestrictionInfo.GetDoubleValue(Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet a value as a double. Uses CultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedDouble(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns 0.0 if the value array is empty, regardless of index.\n"
  syntax:
    content: public double GetDoubleValue(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of value to return
    return:
      type: System.Double
      description: Double value
    content.vb: Public Function GetDoubleValue(index As Integer) As Double
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is out of range, except if the value array is empty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue(System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue(System.Int32)
  id: GetBoolValue(System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetBoolValue(Int32)
  nameWithType: ArchiveRestrictionInfo.GetBoolValue(Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet a value as a boolean. Uses bool.<xref href=\"System.Boolean.TryParse(System.String%2cSystem.Boolean%40)\" data-throw-if-not-resolved=\"false\"></xref>, but also accepts integer values through\nCultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedInt(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns 0 if the value array is empty, regardless of index.\n"
  syntax:
    content: public bool GetBoolValue(int index)
    parameters:
    - id: index
      type: System.Int32
      description: Index of value to return
    return:
      type: System.Boolean
      description: Bool value
    content.vb: Public Function GetBoolValue(index As Integer) As Boolean
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: Thrown if the index is out of range, except if the value array is empty
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray
  id: GetIntValueArray
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetIntValueArray()
  nameWithType: ArchiveRestrictionInfo.GetIntValueArray()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet an array of integer values - assumes that the values array is of a homogenous type.\nUses CultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedInt(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns an empty array if the values array is empty or null, or if the values array contains one element\nand that element is null or the empty string.\n"
  syntax:
    content: public int[] GetIntValueArray()
    return:
      type: System.Int32[]
      description: Array of values
    content.vb: Public Function GetIntValueArray As Integer()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray
  id: GetDateTimeValueArray
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetDateTimeValueArray()
  nameWithType: ArchiveRestrictionInfo.GetDateTimeValueArray()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet an array of datetime values - assumes that the values array is of a homogenous type.\nUses CultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedDate(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns an empty array if the values array is empty or null, or if the values array contains one element\nand that element is null or the empty string.\n"
  syntax:
    content: public DateTime[] GetDateTimeValueArray()
    return:
      type: System.DateTime[]
      description: Array of values
    content.vb: Public Function GetDateTimeValueArray As Date()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray
  id: GetDoubleValueArray
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetDoubleValueArray()
  nameWithType: ArchiveRestrictionInfo.GetDoubleValueArray()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet an array of double values - assumes that the values array is of a homogenous type.\nUses CultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedDouble(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns an empty array if the values array is empty or null, or if the values array contains one element\nand that element is null or the empty string.\n"
  syntax:
    content: public double[] GetDoubleValueArray()
    return:
      type: System.Double[]
      description: Array of values
    content.vb: Public Function GetDoubleValueArray As Double()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray
  id: GetBoolValueArray
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetBoolValueArray()
  nameWithType: ArchiveRestrictionInfo.GetBoolValueArray()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet an array of boolean values - assumes that the values array is of a homogenous type.\nUses bool.<xref href=\"System.Boolean.TryParse(System.String%2cSystem.Boolean%40)\" data-throw-if-not-resolved=\"false\"></xref>, but also accepts integer values through\nCultureDataFormatter.<xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter.ParseEncodedInt(System.String)\" data-throw-if-not-resolved=\"false\"></xref>\nto do the parsing. Returns an empty array if the values array is empty or null, or if the values array contains one element\nand that element is null or the empty string.\n"
  syntax:
    content: public bool[] GetBoolValueArray()
    return:
      type: System.Boolean[]
      description: Array of values
    content.vb: Public Function GetBoolValueArray As Boolean()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue(System.String[])
  id: AddValue(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: AddValue(String[])
  nameWithType: ArchiveRestrictionInfo.AddValue(String[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue(System.String[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nAdd another value at the end of the current collection of values\n"
  syntax:
    content: public void AddValue(params string[] newValue)
    parameters:
    - id: newValue
      type: System.String[]
      description: Value to add
    content.vb: Public Sub AddValue(ParamArray newValue As String())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue*
  nameWithType.vb: ArchiveRestrictionInfo.AddValue(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue(System.String())
  name.vb: AddValue(String())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue(System.String[])
  id: SetValue(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: SetValue(String[])
  nameWithType: ArchiveRestrictionInfo.SetValue(String[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue(System.String[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSet the given value as the current collection of values; this method is here because of the params notation,\notherwise it is equivalent to simply setting the Values property\n"
  syntax:
    content: public void SetValue(params string[] newValue)
    parameters:
    - id: newValue
      type: System.String[]
      description: Value to add
    content.vb: Public Sub SetValue(ParamArray newValue As String())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue*
  nameWithType.vb: ArchiveRestrictionInfo.SetValue(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue(System.String())
  name.vb: SetValue(String())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue(System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue(System.Int32)
  id: SetIntValue(System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: SetIntValue(Int32)
  nameWithType: ArchiveRestrictionInfo.SetIntValue(Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSet the value to be a single integer; any previous value(s) are lost\n"
  syntax:
    content: public void SetIntValue(int value)
    parameters:
    - id: value
      type: System.Int32
      description: integer value to set
    content.vb: Public Sub SetIntValue(value As Integer)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray(System.Int32[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray(System.Int32[])
  id: SetIntValueArray(System.Int32[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: SetIntValueArray(Int32[])
  nameWithType: ArchiveRestrictionInfo.SetIntValueArray(Int32[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray(System.Int32[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSet the value to be the given array of integers; any previous value(s) are lost\n"
  syntax:
    content: public void SetIntValueArray(int[] values)
    parameters:
    - id: values
      type: System.Int32[]
      description: Arrayof integers to set
    content.vb: Public Sub SetIntValueArray(values As Integer())
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray*
  nameWithType.vb: ArchiveRestrictionInfo.SetIntValueArray(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray(System.Int32())
  name.vb: SetIntValueArray(Int32())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  id: AddSubRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: AddSubRestriction(ArchiveRestrictionInfo)
  nameWithType: ArchiveRestrictionInfo.AddSubRestriction(ArchiveRestrictionInfo)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nAdd another subrestriction at the end of the current collection of restrictions.\n"
  syntax:
    content: public void AddSubRestriction(ArchiveRestrictionInfo subRestriction)
    parameters:
    - id: subRestriction
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    content.vb: Public Sub AddSubRestriction(subRestriction As ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString
  id: ToString
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ArchiveRestrictionInfo.ToString()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nReturn a string representation, suitable for debugging\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString(System.String)
  id: ToString(System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToString(String)
  nameWithType: ArchiveRestrictionInfo.ToString(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public string ToString(string prefix)
    parameters:
    - id: prefix
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(prefix As String) As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction
  id: ToSoListRestriction
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToSoListRestriction()
  nameWithType: ArchiveRestrictionInfo.ToSoListRestriction()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConvert this restrictionInfo instance into a syntax understood by the SoList providers that represent archives\n"
  syntax:
    content: public string ToSoListRestriction()
    return:
      type: System.String
    content.vb: Public Function ToSoListRestriction As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue
  id: GetConcatenatedDisplayValue
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetConcatenatedDisplayValue()
  nameWithType: ArchiveRestrictionInfo.GetConcatenatedDisplayValue()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet a concatenated display value that contains all actual values separated by the\ncorrect multi-value separator, taking into account the restriction value type\n"
  syntax:
    content: public string GetConcatenatedDisplayValue()
    return:
      type: System.String
    content.vb: Public Function GetConcatenatedDisplayValue As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction(System.String)
  id: FromSoListRestriction(System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: FromSoListRestriction(String)
  nameWithType: ArchiveRestrictionInfo.FromSoListRestriction(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nCreate a new archive restriction info object based on a string made by <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: public static ArchiveRestrictionInfo FromSoListRestriction(string soListRestriction)
    parameters:
    - id: soListRestriction
      type: System.String
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    content.vb: Public Shared Function FromSoListRestriction(soListRestriction As String) As ArchiveRestrictionInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator(System.String)
  id: GetMultiValueSeparator(System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetMultiValueSeparator(String)
  nameWithType: ArchiveRestrictionInfo.GetMultiValueSeparator(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet the oppropriate separator between multiple display values, based on restriction type\n"
  syntax:
    content: public static string GetMultiValueSeparator(string restrictionType)
    parameters:
    - id: restrictionType
      type: System.String
      description: Type of restriction
    return:
      type: System.String
      description: Value separator
    content.vb: Public Shared Function GetMultiValueSeparator(restrictionType As String) As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  id: GetUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetUniqueIdRestriction(String, ArchiveRestrictionInfo[], String)
  nameWithType: ArchiveRestrictionInfo.GetUniqueIdRestriction(String, ArchiveRestrictionInfo[], String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nScan the given restriction array to find the given restriction; require it to have an equals or = operator;\nparse the single scalar value as an int and return it. This is a very common case, where a restriction\non a single id is used.\n"
  syntax:
    content: public static int GetUniqueIdRestriction(string restrictionName, ArchiveRestrictionInfo[] restrictions, string exceptionText)
    parameters:
    - id: restrictionName
      type: System.String
      description: Case-insensitive name of restriction to find
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions to scan
    - id: exceptionText
      type: System.String
      description: >-
        Text for exception if the restriction does not exist. If this parameter is

        null, then no exception will be thrown and the integer value 0 will be returned instead
    return:
      type: System.Int32
      description: Integer value if found, or either 0 or an exception if not found, depending on the exceptiontext parameter
    content.vb: Public Shared Function GetUniqueIdRestriction(restrictionName As String, restrictions As ArchiveRestrictionInfo(), exceptionText As String) As Integer
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if the restriction does not exist, using the given text
  nameWithType.vb: ArchiveRestrictionInfo.GetUniqueIdRestriction(String, ArchiveRestrictionInfo(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String)
  name.vb: GetUniqueIdRestriction(String, ArchiveRestrictionInfo(), String)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  id: EnforceUniqueIdRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: EnforceUniqueIdRestriction(String, ArchiveRestrictionInfo[], String)
  nameWithType: ArchiveRestrictionInfo.EnforceUniqueIdRestriction(String, ArchiveRestrictionInfo[], String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nScan the given restriction array, look for a given restriction, and throw an exception if it is not present or\nnot of type unique id (operator equals or =).\n"
  syntax:
    content: public static void EnforceUniqueIdRestriction(string restrictionName, ArchiveRestrictionInfo[] restrictions, string exceptionText)
    parameters:
    - id: restrictionName
      type: System.String
      description: Restriction to look for
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions to look in
    - id: exceptionText
      type: System.String
      description: Exception text to use if the unique id restriction is not there
    content.vb: Public Shared Sub EnforceUniqueIdRestriction(restrictionName As String, restrictions As ArchiveRestrictionInfo(), exceptionText As String)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction*
  nameWithType.vb: ArchiveRestrictionInfo.EnforceUniqueIdRestriction(String, ArchiveRestrictionInfo(), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.String)
  name.vb: EnforceUniqueIdRestriction(String, ArchiveRestrictionInfo(), String)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  id: AddRestrictionIfMissing(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: AddRestrictionIfMissing(ArchiveRestrictionInfo[], ArchiveRestrictionInfo)
  nameWithType: ArchiveRestrictionInfo.AddRestrictionIfMissing(ArchiveRestrictionInfo[], ArchiveRestrictionInfo)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nAdd an archive restriction if it is not already present in the array; otherwise do nothing\n"
  syntax:
    content: public static ArchiveRestrictionInfo[] AddRestrictionIfMissing(ArchiveRestrictionInfo[] restrictions, ArchiveRestrictionInfo addIfMissing)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions to look in, returned unchanged if desired restriction is already present
    - id: addIfMissing
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
      description: Restrictions to add if not already there
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions, guaranteed to contain the addifMissing restriction (plus all other restrictions originally there)
    content.vb: Public Shared Function AddRestrictionIfMissing(restrictions As ArchiveRestrictionInfo(), addIfMissing As ArchiveRestrictionInfo) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing*
  nameWithType.vb: ArchiveRestrictionInfo.AddRestrictionIfMissing(ArchiveRestrictionInfo(), ArchiveRestrictionInfo)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: AddRestrictionIfMissing(ArchiveRestrictionInfo(), ArchiveRestrictionInfo)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ExtractRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ExtractRestriction(String, ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ExtractRestriction(String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nScan the restriction array and return the given restriction if found; otherwise return null\n"
  syntax:
    content: public static ArchiveRestrictionInfo ExtractRestriction(string findRestriction, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: findRestriction
      type: System.String
      description: Name of restriction to look for
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions to look in
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
      description: Found restriction, or null
    content.vb: Public Shared Function ExtractRestriction(findRestriction As String, restrictions As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction*
  nameWithType.vb: ArchiveRestrictionInfo.ExtractRestriction(String, ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ExtractRestriction(String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]@)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]@)
  id: ExtractAndDropRestriction(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]@)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ExtractAndDropRestriction(String, ref ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ExtractAndDropRestriction(String, ref ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction(System.String, ref SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public static ArchiveRestrictionInfo ExtractAndDropRestriction(string findRestriction, ref ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: findRestriction
      type: System.String
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    content.vb: Public Shared Function ExtractAndDropRestriction(findRestriction As String, ByRef restrictions As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction*
  nameWithType.vb: ArchiveRestrictionInfo.ExtractAndDropRestriction(String, ByRef ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction(System.String, ByRef SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ExtractAndDropRestriction(String, ByRef ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray(System.Boolean,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray(System.Boolean,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: PatchRestrictionArray(System.Boolean,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: PatchRestrictionArray(Boolean, ArchiveRestrictionInfo[], ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.PatchRestrictionArray(Boolean, ArchiveRestrictionInfo[], ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray(System.Boolean, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nTake an array of restrictions, and patch in one or more replacements. Such replacements will be added if\nthey are not already there, and will REPLACE any existing restrictions with the same keys. The returned array\nis always a copy of the original, which is not touched.\n"
  syntax:
    content: public static ArchiveRestrictionInfo[] PatchRestrictionArray(bool dropIfNoValues, ArchiveRestrictionInfo[] original, params ArchiveRestrictionInfo[] toBeReplaced)
    parameters:
    - id: dropIfNoValues
      type: System.Boolean
    - id: original
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Original set of restrictions, will not be changed
    - id: toBeReplaced
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions that will override existing ones with the same key
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Original restrictions, with the replacements patched in
    content.vb: Public Shared Function PatchRestrictionArray(dropIfNoValues As Boolean, original As ArchiveRestrictionInfo(), ParamArray toBeReplaced As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray*
  nameWithType.vb: ArchiveRestrictionInfo.PatchRestrictionArray(Boolean, ArchiveRestrictionInfo(), ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray(System.Boolean, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: PatchRestrictionArray(Boolean, ArchiveRestrictionInfo(), ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ExtractRestrictionsByBaseName(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ExtractRestrictionsByBaseName(String, ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(String, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nScan the restriction array and return all instances of the desired restriction. All\ncomparisons are base name to base name, case insensitive.\n"
  remarks: "\nThe <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction(System.String%2cSuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref> method performs a case-insensitive exact match search - so\nthat looking for source/contactRestrictionId would NOT match targe/contactRestrictionId. Here,\nonly base names are used, so there would be a match. However, it&apos;s not a simple\nsubstring search, so that source/restrictionContactId will not match contactId.\n"
  syntax:
    content: public static ArchiveRestrictionInfo[] ExtractRestrictionsByBaseName(string restrictionName, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: restrictionName
      type: System.String
      description: Restriction to search for, only base name will be used
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restrictions to search, only base names will be used
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of matching restrictions, or an empty array (never null)
    content.vb: Public Shared Function ExtractRestrictionsByBaseName(restrictionName As String, restrictions As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName*
  nameWithType.vb: ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(String, ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName(System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ExtractRestrictionsByBaseName(String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.String)
  id: PrefixRestrictions(System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: PrefixRestrictions(IEnumerable<ArchiveRestrictionInfo>, String)
  nameWithType: ArchiveRestrictionInfo.PrefixRestrictions(IEnumerable<ArchiveRestrictionInfo>, String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions(System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nPrefix each restriction in a collection with a certain name prefix, according to the standard prefix rules\n"
  syntax:
    content: public static void PrefixRestrictions(IEnumerable<ArchiveRestrictionInfo> restrictions, string prefix)
    parameters:
    - id: restrictions
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
    - id: prefix
      type: System.String
    content.vb: Public Shared Sub PrefixRestrictions(restrictions As IEnumerable(Of ArchiveRestrictionInfo), prefix As String)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions*
  nameWithType.vb: ArchiveRestrictionInfo.PrefixRestrictions(IEnumerable(Of ArchiveRestrictionInfo), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), System.String)
  name.vb: PrefixRestrictions(IEnumerable(Of ArchiveRestrictionInfo), String)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Boolean)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Boolean)
  id: EliminateEmptyValueRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Boolean)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: EliminateEmptyValueRestrictions(ArchiveRestrictionInfo[], Boolean)
  nameWithType: ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(ArchiveRestrictionInfo[], Boolean)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nScan through an array of restrictions, and remove those that have a null or empty value array.\nNote that having a single value element that itself is null or the empty string is something different,\nsuch restrictions will be eliminated only if so requested. The return value is a copy, the original is not touched.\n"
  syntax:
    content: public static ArchiveRestrictionInfo[] EliminateEmptyValueRestrictions(ArchiveRestrictionInfo[] restrictions, bool eliminateEmptyString)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Array of restrictions to scan
    - id: eliminateEmptyString
      type: System.Boolean
      description: "If true, consider empty strings to be &apos;no value&apos;, and eliminate \nrestrictions that have exatcly one empty string, as if they had no value at all"
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Copy of input, containing only those restrictions that had non-null and non-empty value arrays
    content.vb: Public Shared Function EliminateEmptyValueRestrictions(restrictions As ArchiveRestrictionInfo(), eliminateEmptyString As Boolean) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions*
  nameWithType.vb: ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(ArchiveRestrictionInfo(), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.Boolean)
  name.vb: EliminateEmptyValueRestrictions(ArchiveRestrictionInfo(), Boolean)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo
  id: GetNoRowsRestrictionInfo
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetNoRowsRestrictionInfo()
  nameWithType: ArchiveRestrictionInfo.GetNoRowsRestrictionInfo()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nReturns a new <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo\" data-throw-if-not-resolved=\"false\"></xref> which tell the provider not to return any rows.\n"
  syntax:
    content: public static ArchiveRestrictionInfo GetNoRowsRestrictionInfo()
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
      description: <xref href="SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo" data-throw-if-not-resolved="false"></xref> with the getNoRows restriction.
    content.vb: Public Shared Function GetNoRowsRestrictionInfo As ArchiveRestrictionInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo
  id: GetAllRowsRestrictionInfo
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetAllRowsRestrictionInfo()
  nameWithType: ArchiveRestrictionInfo.GetAllRowsRestrictionInfo()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nReturns a new <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo\" data-throw-if-not-resolved=\"false\"></xref> which tell the provider to return all rows.\n"
  syntax:
    content: public static ArchiveRestrictionInfo GetAllRowsRestrictionInfo()
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
      description: <xref href="SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo" data-throw-if-not-resolved="false"></xref> with the getAllRows restriction.
    content.vb: Public Shared Function GetAllRowsRestrictionInfo As ArchiveRestrictionInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators(System.String)
  id: TransformSpecialOperators(System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: TransformSpecialOperators(String)
  nameWithType: ArchiveRestrictionInfo.TransformSpecialOperators(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nA few operators have dual names - such as equals, which has the synonym &apos;=&apos;. Sometimes we\nneed to avoid using the synonyms, which may match special separators or other elements with\nsemantic meanings. See hard coding in the constructor of this class as well.\n"
  syntax:
    content: public static string TransformSpecialOperators(string operatorName)
    parameters:
    - id: operatorName
      type: System.String
      description: Operator name, either primary or synonym
    return:
      type: System.String
      description: Primary operator name
    content.vb: Public Shared Function TransformSpecialOperators(operatorName As String) As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToNameArray(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert an array of ArchiveRestrictionInfo into a string array containing the names only\n"
  syntax:
    content: public static string[] ToNameArray(params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Column infos to extract names from
    return:
      type: System.String[]
      description: Array of names, in original order
    content.vb: Public Shared Function ToNameArray(ParamArray restrictionInfos As ArchiveRestrictionInfo()) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameArray(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToNameArray(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToNameArray(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to conditionally convert an array of ArchiveRestrictionInfo into a string array containing\nthe names only. The given predicate is applied to each ArchiveRestrictionInfo to determine if its name should\nbe included in the result.\n"
  syntax:
    content: public static string[] ToNameArray(Predicate<ArchiveRestrictionInfo> condition, params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Column infos to test and extract the name from
    return:
      type: System.String[]
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToNameArray(condition As Predicate(Of ArchiveRestrictionInfo), ParamArray restrictionInfos As ArchiveRestrictionInfo()) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameArray(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToNameArray(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(List<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToNameArray(List<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert a list of ArchiveRestrictionInfo into a string array containing the names only\n"
  syntax:
    content: public static string[] ToNameArray(List<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Column infos to extract names from
    return:
      type: System.String[]
      description: Array of names, in original order
    content.vb: Public Shared Function ToNameArray(restrictionInfos As List(Of ArchiveRestrictionInfo)) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameArray(List(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToNameArray(List(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(Predicate<ArchiveRestrictionInfo>, List<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToNameArray(Predicate<ArchiveRestrictionInfo>, List<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to conditionally convert a list of ArchiveRestrictionInfo into a string array containing\nthe names only. The given predicate is applied to each ArchiveRestrictionInfo to determine if its name should\nbe included in the result.\n"
  syntax:
    content: public static string[] ToNameArray(Predicate<ArchiveRestrictionInfo> condition, List<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Column infos to test and extract the name from
    return:
      type: System.String[]
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToNameArray(condition As Predicate(Of ArchiveRestrictionInfo), restrictionInfos As List(Of ArchiveRestrictionInfo)) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameArray(Predicate(Of ArchiveRestrictionInfo), List(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToNameArray(Predicate(Of ArchiveRestrictionInfo), List(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToNameDictionary(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert an array of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<string, ArchiveRestrictionInfo> ToNameDictionary(params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToNameDictionary(ParamArray restrictionInfos As ArchiveRestrictionInfo()) As Dictionary(Of String, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameDictionary(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToNameDictionary(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToNameDictionary(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert an array of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<string, ArchiveRestrictionInfo> ToNameDictionary(Predicate<ArchiveRestrictionInfo> condition, params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToNameDictionary(condition As Predicate(Of ArchiveRestrictionInfo), ParamArray restrictionInfos As ArchiveRestrictionInfo()) As Dictionary(Of String, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameDictionary(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToNameDictionary(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToNameDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(ICollection<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToNameDictionary(ICollection<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert a collection of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<string, ArchiveRestrictionInfo> ToNameDictionary(ICollection<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToNameDictionary(restrictionInfos As ICollection(Of ArchiveRestrictionInfo)) As Dictionary(Of String, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameDictionary(ICollection(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Collections.Generic.ICollection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToNameDictionary(ICollection(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(Predicate<ArchiveRestrictionInfo>, ICollection<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToNameDictionary(Predicate<ArchiveRestrictionInfo>, ICollection<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to conditionally convert a collection of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<string, ArchiveRestrictionInfo> ToNameDictionary(Predicate<ArchiveRestrictionInfo> condition, ICollection<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToNameDictionary(condition As Predicate(Of ArchiveRestrictionInfo), restrictionInfos As ICollection(Of ArchiveRestrictionInfo)) As Dictionary(Of String, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToNameDictionary(Predicate(Of ArchiveRestrictionInfo), ICollection(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), System.Collections.Generic.ICollection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToNameDictionary(Predicate(Of ArchiveRestrictionInfo), ICollection(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToKeyArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyArray(ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToKeyArray(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert an array of ArchiveRestrictionInfo into a int array containing the names only\n"
  syntax:
    content: public static int[] ToKeyArray(params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Column infos to extract names from
    return:
      type: System.Int32[]
      description: Array of names, in original order
    content.vb: Public Shared Function ToKeyArray(ParamArray restrictionInfos As ArchiveRestrictionInfo()) As Integer()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyArray(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToKeyArray(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyArray(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToKeyArray(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to conditionally convert an array of ArchiveRestrictionInfo into a int array containing\nthe names only. The given predicate is applied to each ArchiveRestrictionInfo to determine if its name should\nbe included in the result.\n"
  syntax:
    content: public static int[] ToKeyArray(Predicate<ArchiveRestrictionInfo> condition, params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Column infos to test and extract the name from
    return:
      type: System.Int32[]
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToKeyArray(condition As Predicate(Of ArchiveRestrictionInfo), ParamArray restrictionInfos As ArchiveRestrictionInfo()) As Integer()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyArray(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToKeyArray(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToKeyArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyArray(List<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToKeyArray(List<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert a list of ArchiveRestrictionInfo into a int array containing the names only\n"
  syntax:
    content: public static int[] ToKeyArray(List<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Column infos to extract names from
    return:
      type: System.Int32[]
      description: Array of names, in original order
    content.vb: Public Shared Function ToKeyArray(restrictionInfos As List(Of ArchiveRestrictionInfo)) As Integer()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyArray(List(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToKeyArray(List(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToKeyArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyArray(Predicate<ArchiveRestrictionInfo>, List<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToKeyArray(Predicate<ArchiveRestrictionInfo>, List<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to conditionally convert a list of ArchiveRestrictionInfo into a int array containing\nthe names only. The given predicate is applied to each ArchiveRestrictionInfo to determine if its name should\nbe included in the result.\n"
  syntax:
    content: public static int[] ToKeyArray(Predicate<ArchiveRestrictionInfo> condition, List<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Column infos to test and extract the name from
    return:
      type: System.Int32[]
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToKeyArray(condition As Predicate(Of ArchiveRestrictionInfo), restrictionInfos As List(Of ArchiveRestrictionInfo)) As Integer()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyArray(Predicate(Of ArchiveRestrictionInfo), List(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToKeyArray(Predicate(Of ArchiveRestrictionInfo), List(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToKeyDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyDictionary(ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToKeyDictionary(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert an array of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<int, ArchiveRestrictionInfo> ToKeyDictionary(params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToKeyDictionary(ParamArray restrictionInfos As ArchiveRestrictionInfo()) As Dictionary(Of Integer, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyDictionary(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToKeyDictionary(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyDictionary(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.ToKeyDictionary(Predicate<ArchiveRestrictionInfo>, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert an array of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<int, ArchiveRestrictionInfo> ToKeyDictionary(Predicate<ArchiveRestrictionInfo> condition, params ArchiveRestrictionInfo[] restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToKeyDictionary(condition As Predicate(Of ArchiveRestrictionInfo), ParamArray restrictionInfos As ArchiveRestrictionInfo()) As Dictionary(Of Integer, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyDictionary(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: ToKeyDictionary(Predicate(Of ArchiveRestrictionInfo), ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToKeyDictionary(System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyDictionary(ICollection<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToKeyDictionary(ICollection<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to convert a collection of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<int, ArchiveRestrictionInfo> ToKeyDictionary(ICollection<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: restrictionInfos
      type: System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToKeyDictionary(restrictionInfos As ICollection(Of ArchiveRestrictionInfo)) As Dictionary(Of Integer, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyDictionary(ICollection(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Collections.Generic.ICollection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToKeyDictionary(ICollection(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  id: ToKeyDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo},System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ToKeyDictionary(Predicate<ArchiveRestrictionInfo>, ICollection<ArchiveRestrictionInfo>)
  nameWithType: ArchiveRestrictionInfo.ToKeyDictionary(Predicate<ArchiveRestrictionInfo>, ICollection<ArchiveRestrictionInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>, System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUtility method to conditionally convert a collection of ArchiveRestrictionInfo into a dictionary keyed by the restriction unique\nidentifier (see <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey\" data-throw-if-not-resolved=\"false\"></xref> for how such an identifier is created). The values of the dictionary\nwill be the restriction info objects.\n"
  syntax:
    content: public static Dictionary<int, ArchiveRestrictionInfo> ToKeyDictionary(Predicate<ArchiveRestrictionInfo> condition, ICollection<ArchiveRestrictionInfo> restrictionInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: >-
        Predicate that takes an ArchiveRestrictionInfo and returns a bool. A value of true indicates

        that that particular ArchiveRestrictionInfo should be included in the result.
    - id: restrictionInfos
      type: System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Restriction infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
      description: Dictionary of key/restriction pairs
    content.vb: Public Shared Function ToKeyDictionary(condition As Predicate(Of ArchiveRestrictionInfo), restrictionInfos As ICollection(Of ArchiveRestrictionInfo)) As Dictionary(Of Integer, ArchiveRestrictionInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary*
  nameWithType.vb: ArchiveRestrictionInfo.ToKeyDictionary(Predicate(Of ArchiveRestrictionInfo), ICollection(Of ArchiveRestrictionInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo), System.Collections.Generic.ICollection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo))
  name.vb: ToKeyDictionary(Predicate(Of ArchiveRestrictionInfo), ICollection(Of ArchiveRestrictionInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: FilterInactive(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: FilterInactive(ArchiveRestrictionInfo[])
  nameWithType: ArchiveRestrictionInfo.FilterInactive(ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nTake an array of restrictions and return a shallow copy that contains only active restrictions\n"
  syntax:
    content: public static ArchiveRestrictionInfo[] FilterInactive(ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Restriction array to filter
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Copy of array, referring to the same elements, but only those that have <xref href="SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive" data-throw-if-not-resolved="false"></xref> set to true.
    content.vb: Public Shared Function FilterInactive(restrictions As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive*
  nameWithType.vb: ArchiveRestrictionInfo.FilterInactive(ArchiveRestrictionInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: FilterInactive(ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName
  id: GetComplexName
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetComplexName()
  nameWithType: ArchiveRestrictionInfo.GetComplexName()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nCreate a string that will uniquely identify a restriction. For simple restrictions this is the name;\nif there are sub-restrictions, their names and values will be part of the key (needed for Saint searches,\nwhere the same basic restriction may be repeated with different sub restrictions).\n"
  syntax:
    content: public string GetComplexName()
    return:
      type: System.String
      description: String that will uniquely identify the restriction.
    content.vb: Public Function GetComplexName As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey
  id: GetUniqueRestrictionKey
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetUniqueRestrictionKey()
  nameWithType: ArchiveRestrictionInfo.GetUniqueRestrictionKey()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet the unique restriction key - really unique, and no longer related to the name of the restriction\n"
  syntax:
    content: public int GetUniqueRestrictionKey()
    return:
      type: System.Int32
    content.vb: Public Function GetUniqueRestrictionKey As Integer
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName(System.String)
  id: GetBaseNameFromComplexName(System.String)
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: GetBaseNameFromComplexName(String)
  nameWithType: ArchiveRestrictionInfo.GetBaseNameFromComplexName(String)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nExtract the base name from a (possibly) complex name (which involves subrestrictions)\n"
  syntax:
    content: public static string GetBaseNameFromComplexName(string uniqueKey)
    parameters:
    - id: uniqueKey
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetBaseNameFromComplexName(uniqueKey As String) As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name
  id: Name
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ArchiveRestrictionInfo.Name
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nThe programmatic column name, including any required prefixes\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator
  id: Operator
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: ArchiveRestrictionInfo.Operator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nThe operator, such as =, etc\n"
  syntax:
    content: public string Operator { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Operator As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values
  id: Values
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: ArchiveRestrictionInfo.Values
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nValue(s) to test against\n"
  syntax:
    content: public string[] Values { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Values As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues
  id: DisplayValues
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: DisplayValues
  nameWithType: ArchiveRestrictionInfo.DisplayValues
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nDisplay representation of value(s) - list ID&apos;s are decoded to display texts, other values are represented in a format\nsuitable for decoding and display through the <xref href=\"SuperOffice.CRM.Globalization.CultureDataFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public string[] DisplayValues { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property DisplayValues As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo
  id: ColumnInfo
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ColumnInfo
  nameWithType: ArchiveRestrictionInfo.ColumnInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nOptional complete ArchiveColumnInfo for this restriction; in that case, ColumnInfo.Name == this.Name will always be true\n"
  syntax:
    content: public ArchiveColumnInfo ColumnInfo { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
    content.vb: Public Property ColumnInfo As ArchiveColumnInfo
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive
  id: IsActive
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: ArchiveRestrictionInfo.IsActive
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nIs this restriction active?  Inactive restrictions will not influence the generated query \n"
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions
  id: SubRestrictions
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: SubRestrictions
  nameWithType: ArchiveRestrictionInfo.SubRestrictions
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nOptional collection of sub criteria, usually null but set for Saint counter fields\n"
  syntax:
    content: public ArchiveRestrictionInfo[] SubRestrictions { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
    content.vb: Public Property SubRestrictions As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis
  id: InterParenthesis
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: InterParenthesis
  nameWithType: ArchiveRestrictionInfo.InterParenthesis
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet or set the parenthesis (if any) associated with this restriction. Positive values indicate a number\nof opening parentheses (deepening nesting level), while negative numbers indicate closing parentheses.\nZero means no change in nesting level (no parentheses).\n"
  syntax:
    content: public int InterParenthesis { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InterParenthesis As Integer
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator
  id: InterOperator
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: InterOperator
  nameWithType: ArchiveRestrictionInfo.InterOperator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nGet or set the inter-restriction operator that describes how this\nrestriction is related to the next one in an array.\nDefault for new ArchiveRestrictionInfo objects is And\n"
  syntax:
    content: public InterRestrictionOperator InterOperator { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.InterRestrictionOperator
    content.vb: Public Property InterOperator As InterRestrictionOperator
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash
  id: UniqueHash
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: UniqueHash
  nameWithType: ArchiveRestrictionInfo.UniqueHash
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int UniqueHash { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UniqueHash As Integer
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue
  id: ScalarValue
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ScalarValue
  nameWithType: ArchiveRestrictionInfo.ScalarValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nReadonly shortcut to Values[0] that will return the empty string if there are no values, or the zero&apos;th element of the array if there is one\n"
  syntax:
    content: public string ScalarValue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ScalarValue As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue
  id: ScalarDisplayValue
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: ScalarDisplayValue
  nameWithType: ArchiveRestrictionInfo.ScalarDisplayValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nReadonly shortcut to DisplayValues[0] that will return the empty string if there are no values, or the zero&apos;th element of the array if there is one\n"
  syntax:
    content: public string ScalarDisplayValue { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ScalarDisplayValue As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues
  id: NumValues
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  langs:
  - csharp
  - vb
  name: NumValues
  nameWithType: ArchiveRestrictionInfo.NumValues
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nReturn the number of values of this restriction (subrestrictions not taken into account).\nA &apos;null&apos; value array will return 0.\n"
  syntax:
    content: public int NumValues { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NumValues As Integer
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ArchiveRestrictionInfo, To>()
  nameWithType: EnumUtil.MapEnums<ArchiveRestrictionInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ArchiveRestrictionInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To)()
  name.vb: MapEnums(Of ArchiveRestrictionInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ArchiveRestrictionInfo, To>
    nameWithType: EnumUtil.MapEnums<ArchiveRestrictionInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ArchiveRestrictionInfo, To)
    nameWithType: EnumUtil.MapEnums(Of ArchiveRestrictionInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ArchiveRestrictionInfo>(ArchiveRestrictionInfo)
  nameWithType: ObjectExtensions.AssignByReflection<ArchiveRestrictionInfo>(ArchiveRestrictionInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ArchiveRestrictionInfo)(ArchiveRestrictionInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: AssignByReflection(Of ArchiveRestrictionInfo)(ArchiveRestrictionInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ArchiveRestrictionInfo>
    nameWithType: ObjectExtensions.AssignByReflection<ArchiveRestrictionInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ArchiveRestrictionInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of ArchiveRestrictionInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ArchiveRestrictionInfo>()
  nameWithType: ObjectExtensions.GraphCopy<ArchiveRestrictionInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ArchiveRestrictionInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)()
  name.vb: GraphCopy(Of ArchiveRestrictionInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ArchiveRestrictionInfo>
    nameWithType: ObjectExtensions.GraphCopy<ArchiveRestrictionInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ArchiveRestrictionInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of ArchiveRestrictionInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
  commentId: M:SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  parent: SuperOffice.CRM.ArchiveLists.ConnectorExtensions
  definition: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name: GetSearchOperator()
  nameWithType: ConnectorExtensions.GetSearchOperator()
  fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
    name: GetSearchOperator
    nameWithType: ConnectorExtensions.GetSearchOperator
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
    name: GetSearchOperator
    nameWithType: ConnectorExtensions.GetSearchOperator
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
  commentId: M:SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  parent: SuperOffice.CRM.ArchiveLists.ConnectorExtensions
  definition: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name: ToSearchRestrictionInfo()
  nameWithType: ConnectorExtensions.ToSearchRestrictionInfo()
  fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
    name: ToSearchRestrictionInfo
    nameWithType: ConnectorExtensions.ToSearchRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
    name: ToSearchRestrictionInfo
    nameWithType: ConnectorExtensions.ToSearchRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ArchiveRestrictionInfo, To>()
  nameWithType: Converters.MapEnums<ArchiveRestrictionInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of ArchiveRestrictionInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To)()
  name.vb: MapEnums(Of ArchiveRestrictionInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ArchiveRestrictionInfo, To>
    nameWithType: Converters.MapEnums<ArchiveRestrictionInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ArchiveRestrictionInfo, To)
    nameWithType: Converters.MapEnums(Of ArchiveRestrictionInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  isExternal: true
  name: GetSearchOperator(ArchiveRestrictionInfo)
  nameWithType: ConnectorExtensions.GetSearchOperator(ArchiveRestrictionInfo)
  fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
    name: GetSearchOperator
    nameWithType: ConnectorExtensions.GetSearchOperator
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
    name: GetSearchOperator
    nameWithType: ConnectorExtensions.GetSearchOperator
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.GetSearchOperator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions
  commentId: T:SuperOffice.CRM.ArchiveLists.ConnectorExtensions
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ConnectorExtensions
  nameWithType: ConnectorExtensions
  fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions
- uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  isExternal: true
  name: ToSearchRestrictionInfo(ArchiveRestrictionInfo)
  nameWithType: ConnectorExtensions.ToSearchRestrictionInfo(ArchiveRestrictionInfo)
  fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
    name: ToSearchRestrictionInfo
    nameWithType: ConnectorExtensions.ToSearchRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
    name: ToSearchRestrictionInfo
    nameWithType: ConnectorExtensions.ToSearchRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ConnectorExtensions.ToSearchRestrictionInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone
  isExternal: true
  name: Clone
  nameWithType: ArchiveRestrictionInfo.Clone
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.#ctor
  isExternal: true
  name: ArchiveRestrictionInfo
  nameWithType: ArchiveRestrictionInfo.ArchiveRestrictionInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ArchiveRestrictionInfo
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveColumnInfo
  nameWithType: ArchiveColumnInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveRestrictionInfo
  nameWithType: ArchiveRestrictionInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction
  isExternal: true
  name: GetSubRestriction
  nameWithType: ArchiveRestrictionInfo.GetSubRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetSubRestriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive
  isExternal: true
  name: SetRecursiveActive
  nameWithType: ArchiveRestrictionInfo.SetRecursiveActive
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetRecursiveActive
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues
  isExternal: true
  name: EnforceNumValues
  nameWithType: ArchiveRestrictionInfo.EnforceNumValues
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceNumValues
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue
  isExternal: true
  name: GetIntValue
  nameWithType: ArchiveRestrictionInfo.GetIntValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValue
- uid: System.IndexOutOfRangeException
  commentId: T:System.IndexOutOfRangeException
  isExternal: true
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue
  isExternal: true
  name: GetDateTimeValue
  nameWithType: ArchiveRestrictionInfo.GetDateTimeValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValue
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue
  isExternal: true
  name: GetDoubleValue
  nameWithType: ArchiveRestrictionInfo.GetDoubleValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValue
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue
  isExternal: true
  name: GetBoolValue
  nameWithType: ArchiveRestrictionInfo.GetBoolValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray
  isExternal: true
  name: GetIntValueArray
  nameWithType: ArchiveRestrictionInfo.GetIntValueArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetIntValueArray
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray
  isExternal: true
  name: GetDateTimeValueArray
  nameWithType: ArchiveRestrictionInfo.GetDateTimeValueArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDateTimeValueArray
- uid: System.DateTime[]
  isExternal: true
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: DateTime()
  fullName.vb: System.DateTime()
  name.vb: DateTime()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray
  isExternal: true
  name: GetDoubleValueArray
  nameWithType: ArchiveRestrictionInfo.GetDoubleValueArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetDoubleValueArray
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray
  isExternal: true
  name: GetBoolValueArray
  nameWithType: ArchiveRestrictionInfo.GetBoolValueArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBoolValueArray
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue
  isExternal: true
  name: AddValue
  nameWithType: ArchiveRestrictionInfo.AddValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue
  isExternal: true
  name: SetValue
  nameWithType: ArchiveRestrictionInfo.SetValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue
  isExternal: true
  name: SetIntValue
  nameWithType: ArchiveRestrictionInfo.SetIntValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray
  isExternal: true
  name: SetIntValueArray
  nameWithType: ArchiveRestrictionInfo.SetIntValueArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SetIntValueArray
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction
  isExternal: true
  name: AddSubRestriction
  nameWithType: ArchiveRestrictionInfo.AddSubRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddSubRestriction
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString
  isExternal: true
  name: ToString
  nameWithType: ArchiveRestrictionInfo.ToString
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToString
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction
  isExternal: true
  name: ToSoListRestriction
  nameWithType: ArchiveRestrictionInfo.ToSoListRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToSoListRestriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue
  isExternal: true
  name: GetConcatenatedDisplayValue
  nameWithType: ArchiveRestrictionInfo.GetConcatenatedDisplayValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetConcatenatedDisplayValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction
  isExternal: true
  name: FromSoListRestriction
  nameWithType: ArchiveRestrictionInfo.FromSoListRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FromSoListRestriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator
  isExternal: true
  name: GetMultiValueSeparator
  nameWithType: ArchiveRestrictionInfo.GetMultiValueSeparator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetMultiValueSeparator
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction
  isExternal: true
  name: GetUniqueIdRestriction
  nameWithType: ArchiveRestrictionInfo.GetUniqueIdRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueIdRestriction
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction
  isExternal: true
  name: EnforceUniqueIdRestriction
  nameWithType: ArchiveRestrictionInfo.EnforceUniqueIdRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EnforceUniqueIdRestriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing
  isExternal: true
  name: AddRestrictionIfMissing
  nameWithType: ArchiveRestrictionInfo.AddRestrictionIfMissing
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.AddRestrictionIfMissing
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction
  isExternal: true
  name: ExtractRestriction
  nameWithType: ArchiveRestrictionInfo.ExtractRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction
  isExternal: true
  name: ExtractAndDropRestriction
  nameWithType: ArchiveRestrictionInfo.ExtractAndDropRestriction
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractAndDropRestriction
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray
  isExternal: true
  name: PatchRestrictionArray
  nameWithType: ArchiveRestrictionInfo.PatchRestrictionArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PatchRestrictionArray
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName
  isExternal: true
  name: ExtractRestrictionsByBaseName
  nameWithType: ArchiveRestrictionInfo.ExtractRestrictionsByBaseName
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ExtractRestrictionsByBaseName
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions
  isExternal: true
  name: PrefixRestrictions
  nameWithType: ArchiveRestrictionInfo.PrefixRestrictions
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.PrefixRestrictions
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ArchiveRestrictionInfo>
  nameWithType: IEnumerable<ArchiveRestrictionInfo>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
  nameWithType.vb: IEnumerable(Of ArchiveRestrictionInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: IEnumerable(Of ArchiveRestrictionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions
  isExternal: true
  name: EliminateEmptyValueRestrictions
  nameWithType: ArchiveRestrictionInfo.EliminateEmptyValueRestrictions
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.EliminateEmptyValueRestrictions
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo
  isExternal: true
  name: GetNoRowsRestrictionInfo
  nameWithType: ArchiveRestrictionInfo.GetNoRowsRestrictionInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetNoRowsRestrictionInfo
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo
  isExternal: true
  name: GetAllRowsRestrictionInfo
  nameWithType: ArchiveRestrictionInfo.GetAllRowsRestrictionInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetAllRowsRestrictionInfo
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators
  isExternal: true
  name: TransformSpecialOperators
  nameWithType: ArchiveRestrictionInfo.TransformSpecialOperators
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.TransformSpecialOperators
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray
  isExternal: true
  name: ToNameArray
  nameWithType: ArchiveRestrictionInfo.ToNameArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameArray
- uid: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  commentId: T:System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  parent: System
  definition: System.Predicate`1
  name: Predicate<ArchiveRestrictionInfo>
  nameWithType: Predicate<ArchiveRestrictionInfo>
  fullName: System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
  nameWithType.vb: Predicate(Of ArchiveRestrictionInfo)
  fullName.vb: System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: Predicate(Of ArchiveRestrictionInfo)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ArchiveRestrictionInfo>
  nameWithType: List<ArchiveRestrictionInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
  nameWithType.vb: List(Of ArchiveRestrictionInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: List(Of ArchiveRestrictionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary
  isExternal: true
  name: ToNameDictionary
  nameWithType: ArchiveRestrictionInfo.ToNameDictionary
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToNameDictionary
- uid: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ArchiveRestrictionInfo>
  nameWithType: Dictionary<String, ArchiveRestrictionInfo>
  fullName: System.Collections.Generic.Dictionary<System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
  nameWithType.vb: Dictionary(Of String, ArchiveRestrictionInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: Dictionary(Of String, ArchiveRestrictionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  commentId: T:System.Collections.Generic.ICollection{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<ArchiveRestrictionInfo>
  nameWithType: ICollection<ArchiveRestrictionInfo>
  fullName: System.Collections.Generic.ICollection<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
  nameWithType.vb: ICollection(Of ArchiveRestrictionInfo)
  fullName.vb: System.Collections.Generic.ICollection(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: ICollection(Of ArchiveRestrictionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray
  isExternal: true
  name: ToKeyArray
  nameWithType: ArchiveRestrictionInfo.ToKeyArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyArray
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary
  isExternal: true
  name: ToKeyDictionary
  nameWithType: ArchiveRestrictionInfo.ToKeyDictionary
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ToKeyDictionary
- uid: System.Collections.Generic.Dictionary{System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, ArchiveRestrictionInfo>
  nameWithType: Dictionary<Int32, ArchiveRestrictionInfo>
  fullName: System.Collections.Generic.Dictionary<System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo>
  nameWithType.vb: Dictionary(Of Int32, ArchiveRestrictionInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo)
  name.vb: Dictionary(Of Int32, ArchiveRestrictionInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive
  isExternal: true
  name: FilterInactive
  nameWithType: ArchiveRestrictionInfo.FilterInactive
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.FilterInactive
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName
  isExternal: true
  name: GetComplexName
  nameWithType: ArchiveRestrictionInfo.GetComplexName
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetComplexName
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey
  isExternal: true
  name: GetUniqueRestrictionKey
  nameWithType: ArchiveRestrictionInfo.GetUniqueRestrictionKey
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetUniqueRestrictionKey
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName
  isExternal: true
  name: GetBaseNameFromComplexName
  nameWithType: ArchiveRestrictionInfo.GetBaseNameFromComplexName
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.GetBaseNameFromComplexName
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name
  isExternal: true
  name: Name
  nameWithType: ArchiveRestrictionInfo.Name
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Name
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator
  isExternal: true
  name: Operator
  nameWithType: ArchiveRestrictionInfo.Operator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Operator
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values
  isExternal: true
  name: Values
  nameWithType: ArchiveRestrictionInfo.Values
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.Values
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues
  isExternal: true
  name: DisplayValues
  nameWithType: ArchiveRestrictionInfo.DisplayValues
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.DisplayValues
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo
  isExternal: true
  name: ColumnInfo
  nameWithType: ArchiveRestrictionInfo.ColumnInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ColumnInfo
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive
  isExternal: true
  name: IsActive
  nameWithType: ArchiveRestrictionInfo.IsActive
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.IsActive
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions
  isExternal: true
  name: SubRestrictions
  nameWithType: ArchiveRestrictionInfo.SubRestrictions
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.SubRestrictions
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis
  isExternal: true
  name: InterParenthesis
  nameWithType: ArchiveRestrictionInfo.InterParenthesis
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterParenthesis
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator
  isExternal: true
  name: InterOperator
  nameWithType: ArchiveRestrictionInfo.InterOperator
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.InterOperator
- uid: SuperOffice.Data.InterRestrictionOperator
  commentId: T:SuperOffice.Data.InterRestrictionOperator
  parent: SuperOffice.Data
  isExternal: true
  name: InterRestrictionOperator
  nameWithType: InterRestrictionOperator
  fullName: SuperOffice.Data.InterRestrictionOperator
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash
  isExternal: true
  name: UniqueHash
  nameWithType: ArchiveRestrictionInfo.UniqueHash
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.UniqueHash
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue
  isExternal: true
  name: ScalarValue
  nameWithType: ArchiveRestrictionInfo.ScalarValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue
  isExternal: true
  name: ScalarDisplayValue
  nameWithType: ArchiveRestrictionInfo.ScalarDisplayValue
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.ScalarDisplayValue
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues
  isExternal: true
  name: NumValues
  nameWithType: ArchiveRestrictionInfo.NumValues
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo.NumValues
