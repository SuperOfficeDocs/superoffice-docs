### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.IAppointmentUtility
  commentId: T:SuperOffice.Util.IAppointmentUtility
  id: IAppointmentUtility
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.IAppointmentUtility.AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription(System.String)
  - SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetAgenda(System.String,System.Boolean)
  - SuperOffice.Util.IAppointmentUtility.GetAgendaHtml(System.String,System.Boolean)
  - SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync
  - SuperOffice.Util.IAppointmentUtility.GetDescription(System.String,System.String)
  - SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(System.Int32,System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetParticipantAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.Data.AppointmentStatus,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.GetTitle(System.String,System.Boolean)
  - SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.HaveChanged(System.String,System.String)
  - SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.Util.RowModification,SuperOffice.Util.RowModification,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.RejectAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.String,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(SuperOffice.CRM.Rows.InvitationRow,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  - SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync(System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  langs:
  - csharp
  - vb
  name: IAppointmentUtility
  nameWithType: IAppointmentUtility
  fullName: SuperOffice.Util.IAppointmentUtility
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public interface IAppointmentUtility
    content.vb: Public Interface IAppointmentUtility
  extensionMethods:
  - SuperOffice.Util.IAppointmentUtility.EnumUtil.MapEnums``2
  - SuperOffice.Util.IAppointmentUtility.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Util.IAppointmentUtility.AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: AcceptAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: AcceptAsync(Int32, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentUtility.AcceptAsync(Int32, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.AcceptAsync(System.Int32, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task AcceptAsync(int appointmentId, RecurrenceUpdateMode recurrenceUpdateMode, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: recurrenceUpdateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function AcceptAsync(appointmentId As Integer, recurrenceUpdateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.IAppointmentUtility.AcceptAsync*
- uid: SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription(System.String)
  commentId: M:SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription(System.String)
  id: CleanSynchronizerValuesFromDescription(System.String)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: CleanSynchronizerValuesFromDescription(String)
  nameWithType: IAppointmentUtility.CleanSynchronizerValuesFromDescription(String)
  fullName: SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nCleaning function for stripping out prefix and dividing line InfoBridge added to their appointments\n"
  syntax:
    content: string CleanSynchronizerValuesFromDescription(string description)
    parameters:
    - id: description
      type: System.String
    return:
      type: System.String
    content.vb: Function CleanSynchronizerValuesFromDescription(description As String) As String
  overload: SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription*
- uid: SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: DeleteCancelledAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: DeleteCancelledAsync(Int32, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentUtility.DeleteCancelledAsync(Int32, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync(System.Int32, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nDeletes appointment if it is cancelled.\n"
  syntax:
    content: Task DeleteCancelledAsync(int appointmentId, RecurrenceUpdateMode recurrenceUpdateMode, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: .
    - id: recurrenceUpdateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: How recurrence updates should be handled
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteCancelledAsync(appointmentId As Integer, recurrenceUpdateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetAgenda(System.String,System.Boolean)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetAgenda(System.String,System.Boolean)
  id: GetAgenda(System.String,System.Boolean)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetAgenda(String, Boolean)
  nameWithType: IAppointmentUtility.GetAgenda(String, Boolean)
  fullName: SuperOffice.Util.IAppointmentUtility.GetAgenda(System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: string GetAgenda(string description, bool cleanDescription = false)
    parameters:
    - id: description
      type: System.String
    - id: cleanDescription
      type: System.Boolean
    return:
      type: System.String
    content.vb: Function GetAgenda(description As String, cleanDescription As Boolean = False) As String
  overload: SuperOffice.Util.IAppointmentUtility.GetAgenda*
- uid: SuperOffice.Util.IAppointmentUtility.GetAgendaHtml(System.String,System.Boolean)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetAgendaHtml(System.String,System.Boolean)
  id: GetAgendaHtml(System.String,System.Boolean)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetAgendaHtml(String, Boolean)
  nameWithType: IAppointmentUtility.GetAgendaHtml(String, Boolean)
  fullName: SuperOffice.Util.IAppointmentUtility.GetAgendaHtml(System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: string GetAgendaHtml(string description, bool cleanDescription = false)
    parameters:
    - id: description
      type: System.String
    - id: cleanDescription
      type: System.Boolean
    return:
      type: System.String
    content.vb: Function GetAgendaHtml(description As String, cleanDescription As Boolean = False) As String
  overload: SuperOffice.Util.IAppointmentUtility.GetAgendaHtml*
- uid: SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  id: GetAllAppointmentRowsOfRecurrenceRuleIDAsync(System.Int32,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetAllAppointmentRowsOfRecurrenceRuleIDAsync(Int32, Boolean, CancellationToken)
  nameWithType: IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync(Int32, Boolean, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync(System.Int32, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<AppointmentRow[]> GetAllAppointmentRowsOfRecurrenceRuleIDAsync(int recurrenceRuleId, bool motherAppointmentsOnly = false, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: motherAppointmentsOnly
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AppointmentRow[]}
    content.vb: Function GetAllAppointmentRowsOfRecurrenceRuleIDAsync(recurrenceRuleId As Integer, motherAppointmentsOnly As Boolean = False, cancellationToken As CancellationToken = Nothing) As Task(Of AppointmentRow())
  overload: SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAppointmentIdFromRecurringIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetAppointmentIdFromRecurringIdAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<int> GetAppointmentIdFromRecurringIdAsync(int recurringId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurringId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetAppointmentIdFromRecurringIdAsync(recurringId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  id: GetAppointmentIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetAppointmentIdFromUIDAsync(String, CancellationToken)
  nameWithType: IAppointmentUtility.GetAppointmentIdFromUIDAsync(String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<int> GetAppointmentIdFromUIDAsync(string uid, CancellationToken cancellationToken = null)
    parameters:
    - id: uid
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetAppointmentIdFromUIDAsync(uid As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync
  id: GetConnectionInfoAsync
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetConnectionInfoAsync()
  nameWithType: IAppointmentUtility.GetConnectionInfoAsync()
  fullName: SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<ServiceAuthRecordData, ServiceAuthRecordData, string>> GetConnectionInfoAsync()
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{SuperOffice.CRM.Rows.ServiceAuthRecordData,SuperOffice.CRM.Rows.ServiceAuthRecordData,System.String}}
    content.vb: Function GetConnectionInfoAsync As Task(Of ValueTuple(Of ServiceAuthRecordData, ServiceAuthRecordData, String))
  overload: SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetDescription(System.String,System.String)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetDescription(System.String,System.String)
  id: GetDescription(System.String,System.String)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetDescription(String, String)
  nameWithType: IAppointmentUtility.GetDescription(String, String)
  fullName: SuperOffice.Util.IAppointmentUtility.GetDescription(System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: string GetDescription(string title, string agenda)
    parameters:
    - id: title
      type: System.String
    - id: agenda
      type: System.String
    return:
      type: System.String
    content.vb: Function GetDescription(title As String, agenda As String) As String
  overload: SuperOffice.Util.IAppointmentUtility.GetDescription*
- uid: SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  id: GetExistingInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetExistingInvitationIdFromUIDAsync(String, CancellationToken)
  nameWithType: IAppointmentUtility.GetExistingInvitationIdFromUIDAsync(String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<int> GetExistingInvitationIdFromUIDAsync(string uid, CancellationToken cancellationToken = null)
    parameters:
    - id: uid
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetExistingInvitationIdFromUIDAsync(uid As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync(System.Int32,System.Threading.CancellationToken)
  id: GetInvitationRecordDataAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetInvitationRecordDataAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetInvitationRecordDataAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<InvitationRecordData> GetInvitationRecordDataAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRecordData}
    content.vb: Function GetInvitationRecordDataAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of InvitationRecordData)
  overload: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync(System.String,System.Threading.CancellationToken)
  id: GetInvitationRecordDataFromUidAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetInvitationRecordDataFromUidAsync(String, CancellationToken)
  nameWithType: IAppointmentUtility.GetInvitationRecordDataFromUidAsync(String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<InvitationRecordData> GetInvitationRecordDataFromUidAsync(string uid, CancellationToken cancellationToken = null)
    parameters:
    - id: uid
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRecordData}
    content.vb: Function GetInvitationRecordDataFromUidAsync(uid As String, cancellationToken As CancellationToken = Nothing) As Task(Of InvitationRecordData)
  overload: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync(System.String,System.Threading.CancellationToken)
  id: GetInvitationRowFromUidAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetInvitationRowFromUidAsync(String, CancellationToken)
  nameWithType: IAppointmentUtility.GetInvitationRowFromUidAsync(String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<InvitationRow> GetInvitationRowFromUidAsync(string uid, CancellationToken cancellationToken = null)
    parameters:
    - id: uid
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRow}
    content.vb: Function GetInvitationRowFromUidAsync(uid As String, cancellationToken As CancellationToken = Nothing) As Task(Of InvitationRow)
  overload: SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  id: GetLastModifiedDateOfAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetLastModifiedDateOfAppointment(AppointmentRow)
  nameWithType: IAppointmentUtility.GetLastModifiedDateOfAppointment(AppointmentRow)
  fullName: SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nReturns the newest of the row&apos;s Registered and Updated fields. \nThe fields are stored as UTC in the DB, but are converted to DB-TZ when retrieved by the system, so we don&apos;t have to do any conversion.\n"
  syntax:
    content: DateTime GetLastModifiedDateOfAppointment(AppointmentRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.AppointmentRow
    return:
      type: System.DateTime
    content.vb: Function GetLastModifiedDateOfAppointment(row As AppointmentRow) As DateTime
  overload: SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment*
- uid: SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  id: GetOrCreateInvitationIdFromUIDAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetOrCreateInvitationIdFromUIDAsync(String, CancellationToken)
  nameWithType: IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync(String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<int, bool>> GetOrCreateInvitationIdFromUIDAsync(string uid, CancellationToken cancellationToken)
    parameters:
    - id: uid
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.Boolean}}
    content.vb: Function GetOrCreateInvitationIdFromUIDAsync(uid As String, cancellationToken As CancellationToken) As Task(Of ValueTuple(Of Integer, Boolean))
  overload: SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(System.Int32,System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(System.Int32,System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)
  id: GetOrCreateUidOfAppointmentAsync(System.Int32,System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetOrCreateUidOfAppointmentAsync(Int32, String, DateTime, Nullable<DateTime>, Nullable<DateTime>, String, CancellationToken)
  nameWithType: IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(Int32, String, DateTime, Nullable<DateTime>, Nullable<DateTime>, String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(System.Int32, System.String, System.DateTime, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<string, int>> GetOrCreateUidOfAppointmentAsync(int appointmentId, string from, DateTime lastModified, Nullable<DateTime> recurringStartDate, Nullable<DateTime> recurringEndDate, string templateLanguage, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: from
      type: System.String
    - id: lastModified
      type: System.DateTime
    - id: recurringStartDate
      type: System.Nullable{System.DateTime}
    - id: recurringEndDate
      type: System.Nullable{System.DateTime}
    - id: templateLanguage
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int32}}
    content.vb: Function GetOrCreateUidOfAppointmentAsync(appointmentId As Integer, from As String, lastModified As DateTime, recurringStartDate As Nullable(Of DateTime), recurringEndDate As Nullable(Of DateTime), templateLanguage As String, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of String, Integer))
  overload: SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync*
  nameWithType.vb: IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(Int32, String, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), String, CancellationToken)
  fullName.vb: SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync(System.Int32, System.String, System.DateTime, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.String, System.Threading.CancellationToken)
  name.vb: GetOrCreateUidOfAppointmentAsync(Int32, String, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), String, CancellationToken)
- uid: SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync(System.Int32,System.Threading.CancellationToken)
  id: GetOrganizerEmailAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetOrganizerEmailAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetOrganizerEmailAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<string> GetOrganizerEmailAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetOrganizerEmailAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync(System.Int32,System.Threading.CancellationToken)
  id: GetOrganizerInfoAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetOrganizerInfoAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetOrganizerInfoAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<string, string>> GetOrganizerInfoAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
    content.vb: Function GetOrganizerInfoAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of String, String))
  overload: SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetParticipantAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.Data.AppointmentStatus,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetParticipantAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.Data.AppointmentStatus,System.Boolean,System.Threading.CancellationToken)
  id: GetParticipantAsync(System.Int32,System.Int32,System.Int32,System.Int32,SuperOffice.Data.AppointmentStatus,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetParticipantAsync(Int32, Int32, Int32, Int32, AppointmentStatus, Boolean, CancellationToken)
  nameWithType: IAppointmentUtility.GetParticipantAsync(Int32, Int32, Int32, Int32, AppointmentStatus, Boolean, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetParticipantAsync(System.Int32, System.Int32, System.Int32, System.Int32, SuperOffice.Data.AppointmentStatus, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ParticipantInfo> GetParticipantAsync(int associateId, int personId, int contactId, int emailId, AppointmentStatus appointmentStatus, bool sendEmail, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: personId
      type: System.Int32
    - id: contactId
      type: System.Int32
    - id: emailId
      type: System.Int32
    - id: appointmentStatus
      type: SuperOffice.Data.AppointmentStatus
    - id: sendEmail
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ParticipantInfo}
    content.vb: Function GetParticipantAsync(associateId As Integer, personId As Integer, contactId As Integer, emailId As Integer, appointmentStatus As AppointmentStatus, sendEmail As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of ParticipantInfo)
  overload: SuperOffice.Util.IAppointmentUtility.GetParticipantAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRecurrenceRuleIdOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetRecurrenceRuleIdOfAppointmentIdAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<int> GetRecurrenceRuleIdOfAppointmentIdAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function GetRecurrenceRuleIdOfAppointmentIdAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetRecurringSeriesForInvitedEmailAttendeeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetRecurringSeriesForInvitedEmailAttendeeAsync(Int32, Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nReturns a <xref href=\"SuperOffice.Util.RecurringSeries\" data-throw-if-not-resolved=\"false\"></xref> object containing recurring subseries that are related to the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">recurrenceRuleId</code>. The returned array is sorted by DoBy, ascending. I.e. the earliest subseries is the first item in the list.\n"
  syntax:
    content: Task<RecurringSeries> GetRecurringSeriesForInvitedEmailAttendeeAsync(int recurrenceRuleId, int invitedEmailId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: invitedEmailId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.RecurringSeries}
    content.vb: Function GetRecurringSeriesForInvitedEmailAttendeeAsync(recurrenceRuleId As Integer, invitedEmailId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RecurringSeries)
  overload: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: GetRecurringSeriesForInvitedPersonAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetRecurringSeriesForInvitedPersonAsync(Int32, Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nReturns a <xref href=\"SuperOffice.Util.RecurringSeries\" data-throw-if-not-resolved=\"false\"></xref> object containing recurring subseries that are related to the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">recurrenceRuleId</code>. The returned array is sorted by DoBy, ascending. I.e. the earliest subseries is the first item in the list.\n"
  syntax:
    content: Task<RecurringSeries> GetRecurringSeriesForInvitedPersonAsync(int recurrenceRuleId, int invitedPersonId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: invitedPersonId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.RecurringSeries}
    content.vb: Function GetRecurringSeriesForInvitedPersonAsync(recurrenceRuleId As Integer, invitedPersonId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RecurringSeries)
  overload: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRecurringSeriesOnlyMotherAppointmentsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetRecurringSeriesOnlyMotherAppointmentsAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nReturns a <xref href=\"SuperOffice.Util.RecurringSeries\" data-throw-if-not-resolved=\"false\"></xref> object containing recurring subseries that are related to the given <code data-dev-comment-type=\"paramref\" class=\"paramref\">recurrenceRuleId</code>. The returned array is sorted by DoBy, ascending. I.e. the earliest subseries is the first item in the list.\n"
  syntax:
    content: Task<RecurringSeries> GetRecurringSeriesOnlyMotherAppointmentsAsync(int recurrenceRuleId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.Util.RecurringSeries}
    content.vb: Function GetRecurringSeriesOnlyMotherAppointmentsAsync(recurrenceRuleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of RecurringSeries)
  overload: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTemplateLanguageAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetTemplateLanguageAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.GetTemplateLanguageAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nSO Language code used for e-mail invites for this appointment.\n"
  syntax:
    content: Task<string> GetTemplateLanguageAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: SO Language code (&quot;US&quot;, &quot;SW&quot; or &quot;GE&quot;) or NULL if appointment not found.
    content.vb: Function GetTemplateLanguageAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync*
- uid: SuperOffice.Util.IAppointmentUtility.GetTitle(System.String,System.Boolean)
  commentId: M:SuperOffice.Util.IAppointmentUtility.GetTitle(System.String,System.Boolean)
  id: GetTitle(System.String,System.Boolean)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: GetTitle(String, Boolean)
  nameWithType: IAppointmentUtility.GetTitle(String, Boolean)
  fullName: SuperOffice.Util.IAppointmentUtility.GetTitle(System.String, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: string GetTitle(string description, bool cleanDescription = false)
    parameters:
    - id: description
      type: System.String
    - id: cleanDescription
      type: System.Boolean
    return:
      type: System.String
    content.vb: Function GetTitle(description As String, cleanDescription As Boolean = False) As String
  overload: SuperOffice.Util.IAppointmentUtility.GetTitle*
- uid: SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: HasCalendarAccessAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: HasCalendarAccessAsync(Int32, Int32, CancellationToken)
  nameWithType: IAppointmentUtility.HasCalendarAccessAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nChecks whether the active person has access to see someones calendar.\n"
  syntax:
    content: Task<bool> HasCalendarAccessAsync(int activePersonId, int calendarOwnerId, CancellationToken cancellationToken = null)
    parameters:
    - id: activePersonId
      type: System.Int32
      description: Person id of the active person (the one logged on).
    - id: calendarOwnerId
      type: System.Int32
      description: The id of the person whose calendar the logged on user wants to see
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if access is allowed, false otherwise.
    content.vb: Function HasCalendarAccessAsync(activePersonId As Integer, calendarOwnerId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync*
- uid: SuperOffice.Util.IAppointmentUtility.HaveChanged(System.String,System.String)
  commentId: M:SuperOffice.Util.IAppointmentUtility.HaveChanged(System.String,System.String)
  id: HaveChanged(System.String,System.String)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: HaveChanged(String, String)
  nameWithType: IAppointmentUtility.HaveChanged(String, String)
  fullName: SuperOffice.Util.IAppointmentUtility.HaveChanged(System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: bool HaveChanged(string dataContainerValue, string carrierValue)
    parameters:
    - id: dataContainerValue
      type: System.String
    - id: carrierValue
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HaveChanged(dataContainerValue As String, carrierValue As String) As Boolean
  overload: SuperOffice.Util.IAppointmentUtility.HaveChanged*
- uid: SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.Util.RowModification,SuperOffice.Util.RowModification,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.Util.RowModification,SuperOffice.Util.RowModification,System.Threading.CancellationToken)
  id: ModifyOnRowsAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.Util.RowModification,SuperOffice.Util.RowModification,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: ModifyOnRowsAsync(Int32, RecurrenceUpdateMode, RowModification, RowModification, CancellationToken)
  nameWithType: IAppointmentUtility.ModifyOnRowsAsync(Int32, RecurrenceUpdateMode, RowModification, RowModification, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync(System.Int32, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.Util.RowModification, SuperOffice.Util.RowModification, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task ModifyOnRowsAsync(int appointmentId, RecurrenceUpdateMode recurrenceUpdateMode, RowModification operationOnFirst, RowModification operationOnConsecutive, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: recurrenceUpdateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
    - id: operationOnFirst
      type: SuperOffice.Util.RowModification
    - id: operationOnConsecutive
      type: SuperOffice.Util.RowModification
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ModifyOnRowsAsync(appointmentId As Integer, recurrenceUpdateMode As RecurrenceUpdateMode, operationOnFirst As RowModification, operationOnConsecutive As RowModification, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync*
- uid: SuperOffice.Util.IAppointmentUtility.RejectAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.RejectAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.String,System.Threading.CancellationToken)
  id: RejectAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: RejectAsync(Int32, RecurrenceUpdateMode, String, CancellationToken)
  nameWithType: IAppointmentUtility.RejectAsync(Int32, RecurrenceUpdateMode, String, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.RejectAsync(System.Int32, SuperOffice.Data.RecurrenceUpdateMode, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nRejects all occurrences of the appointment for the participant. If only one occurrence exist, then only\nthis one is rejected (not a recurring booking appointment).  The result of the rejection is saved to the database.\n"
  syntax:
    content: Task RejectAsync(int appointmentId, RecurrenceUpdateMode recurrenceUpdateMode, string rejectReason, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: AppointmentId of Invitation or Assignment to be set to rejected.
    - id: recurrenceUpdateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: How recurrence updates should be handled
    - id: rejectReason
      type: System.String
      description: Text that explains why he/she can not attend
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RejectAsync(appointmentId As Integer, recurrenceUpdateMode As RecurrenceUpdateMode, rejectReason As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.IAppointmentUtility.RejectAsync*
- uid: SuperOffice.Util.IAppointmentUtility.SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  id: SetSeenAsync(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: SetSeenAsync(Int32, RecurrenceUpdateMode, CancellationToken)
  nameWithType: IAppointmentUtility.SetSeenAsync(Int32, RecurrenceUpdateMode, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.SetSeenAsync(System.Int32, SuperOffice.Data.RecurrenceUpdateMode, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nSets an appointment Invitation or Assignment to seen and save it to the database.\n"
  remarks: "\nSet Seen (Booking or Assignment) or MovedSeen (Booking) depending on the previous status \nof the Appointment\n"
  syntax:
    content: Task SetSeenAsync(int appointmentId, RecurrenceUpdateMode recurrenceUpdateMode, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: AppointmentId of Invitation or Assignment to be set to seen.
    - id: recurrenceUpdateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: How recurrence updates should be handled
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetSeenAsync(appointmentId As Integer, recurrenceUpdateMode As RecurrenceUpdateMode, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.IAppointmentUtility.SetSeenAsync*
- uid: SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: TryGetNearestUidOfAppointmentIdAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: TryGetNearestUidOfAppointmentIdAsync(Int32, Int32, CancellationToken)
  nameWithType: IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<bool, string, int>> TryGetNearestUidOfAppointmentIdAsync(int recurrenceRuleId, int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String,System.Int32}}
    content.vb: Function TryGetNearestUidOfAppointmentIdAsync(recurrenceRuleId As Integer, appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Boolean, String, Integer))
  overload: SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  id: TryGetOfAppointmentIdFromRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: TryGetOfAppointmentIdFromRecurrenceIdAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nAttempts to match the appointment id to a recurring id from the Invitation table.\n"
  syntax:
    content: Task<int> TryGetOfAppointmentIdFromRecurrenceIdAsync(int recurrenceRuleId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function TryGetOfAppointmentIdFromRecurrenceIdAsync(recurrenceRuleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  id: TryGetRelatedUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: TryGetRelatedUidOfAppointmentIdAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nAttempts to match the appointment id to a Uid in the Invitation table. If the appointment id refers to a child, the mother id is used.\n"
  syntax:
    content: Task<ValueTuple<bool, string>> TryGetRelatedUidOfAppointmentIdAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
    content.vb: Function TryGetRelatedUidOfAppointmentIdAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Boolean, String))
  overload: SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync(System.Int32,System.Threading.CancellationToken)
  id: TryGetUidFromRecurringAppointmentChildAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: TryGetUidFromRecurringAppointmentChildAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nRecurring chilren are not directly connected to the mother appointment listed in the invitation table\n"
  syntax:
    content: Task<ValueTuple<bool, string>> TryGetUidFromRecurringAppointmentChildAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
    content.vb: Function TryGetUidFromRecurringAppointmentChildAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Boolean, String))
  overload: SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync*
- uid: SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  id: TryGetUidOfAppointmentIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: TryGetUidOfAppointmentIdAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.TryGetUidOfAppointmentIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nAttempts to match the appointment id to a Uid in the Invitation table.\n"
  syntax:
    content: Task<ValueTuple<bool, string, int, string>> TryGetUidOfAppointmentIdAsync(int appointmentId, CancellationToken cancellationToken = null)
    parameters:
    - id: appointmentId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String,System.Int32,System.String}}
      description: First Uid found, sorted by invitationId ascending.
    content.vb: Function TryGetUidOfAppointmentIdAsync(appointmentId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Boolean, String, Integer, String))
  overload: SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  id: TryGetUidOfRecurrenceIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: TryGetUidOfRecurrenceIdAsync(Int32, CancellationToken)
  nameWithType: IAppointmentUtility.TryGetUidOfRecurrenceIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nAttempts to match the appointment id to a Uid in the Invitation table.\n"
  syntax:
    content: Task<ValueTuple<bool, string>> TryGetUidOfRecurrenceIdAsync(int recurrenceRuleId, CancellationToken cancellationToken = null)
    parameters:
    - id: recurrenceRuleId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
    content.vb: Function TryGetUidOfRecurrenceIdAsync(recurrenceRuleId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Boolean, String))
  overload: SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync*
- uid: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: UpdateLastModifiedAndIncrementSequenceAsync(System.Int32,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: UpdateLastModifiedAndIncrementSequenceAsync(Int32, DateTime, Nullable<DateTime>, Nullable<DateTime>, CancellationToken)
  nameWithType: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(Int32, DateTime, Nullable<DateTime>, Nullable<DateTime>, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(System.Int32, System.DateTime, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<int, string>> UpdateLastModifiedAndIncrementSequenceAsync(int invitationId, DateTime lastModified, Nullable<DateTime> recurringStartDate = null, Nullable<DateTime> recurringEndDate = null, CancellationToken cancellationToken = null)
    parameters:
    - id: invitationId
      type: System.Int32
    - id: lastModified
      type: System.DateTime
    - id: recurringStartDate
      type: System.Nullable{System.DateTime}
    - id: recurringEndDate
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.String}}
    content.vb: Function UpdateLastModifiedAndIncrementSequenceAsync(invitationId As Integer, lastModified As DateTime, recurringStartDate As Nullable(Of DateTime) = Nothing, recurringEndDate As Nullable(Of DateTime) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Integer, String))
  overload: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync*
  nameWithType.vb: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(Int32, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), CancellationToken)
  fullName.vb: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync(System.Int32, System.DateTime, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UpdateLastModifiedAndIncrementSequenceAsync(Int32, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), CancellationToken)
- uid: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(SuperOffice.CRM.Rows.InvitationRow,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(SuperOffice.CRM.Rows.InvitationRow,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: UpdateLastModifiedAndIncrementSequenceOfRowAsync(SuperOffice.CRM.Rows.InvitationRow,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: UpdateLastModifiedAndIncrementSequenceOfRowAsync(InvitationRow, DateTime, Nullable<DateTime>, Nullable<DateTime>, CancellationToken)
  nameWithType: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(InvitationRow, DateTime, Nullable<DateTime>, Nullable<DateTime>, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(SuperOffice.CRM.Rows.InvitationRow, System.DateTime, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: Task<ValueTuple<int, string>> UpdateLastModifiedAndIncrementSequenceOfRowAsync(InvitationRow row, DateTime lastModified, Nullable<DateTime> recurringStartDate = null, Nullable<DateTime> recurringEndDate = null, CancellationToken cancellationToken = null)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.InvitationRow
    - id: lastModified
      type: System.DateTime
    - id: recurringStartDate
      type: System.Nullable{System.DateTime}
    - id: recurringEndDate
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.String}}
    content.vb: Function UpdateLastModifiedAndIncrementSequenceOfRowAsync(row As InvitationRow, lastModified As DateTime, recurringStartDate As Nullable(Of DateTime) = Nothing, recurringEndDate As Nullable(Of DateTime) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Integer, String))
  overload: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync*
  nameWithType.vb: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(InvitationRow, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), CancellationToken)
  fullName.vb: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync(SuperOffice.CRM.Rows.InvitationRow, System.DateTime, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UpdateLastModifiedAndIncrementSequenceOfRowAsync(InvitationRow, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), CancellationToken)
- uid: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  id: UpdateLastModifiedAndIncrementSequenceOfUidAsync(System.String,System.DateTime,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: UpdateLastModifiedAndIncrementSequenceOfUidAsync(String, DateTime, Nullable<DateTime>, Nullable<DateTime>, CancellationToken)
  nameWithType: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(String, DateTime, Nullable<DateTime>, Nullable<DateTime>, CancellationToken)
  fullName: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(System.String, System.DateTime, System.Nullable<System.DateTime>, System.Nullable<System.DateTime>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nUpdates the last modified value, and increments the sequence number of the uid in the Invitation table. Returns the new sequence number.\n"
  syntax:
    content: Task<ValueTuple<int, string>> UpdateLastModifiedAndIncrementSequenceOfUidAsync(string uid, DateTime lastModified, Nullable<DateTime> recurringStartDate = null, Nullable<DateTime> recurringEndDate = null, CancellationToken cancellationToken = null)
    parameters:
    - id: uid
      type: System.String
    - id: lastModified
      type: System.DateTime
    - id: recurringStartDate
      type: System.Nullable{System.DateTime}
    - id: recurringEndDate
      type: System.Nullable{System.DateTime}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.String}}
      description: The new sequence number. -1 if failed.
    content.vb: Function UpdateLastModifiedAndIncrementSequenceOfUidAsync(uid As String, lastModified As DateTime, recurringStartDate As Nullable(Of DateTime) = Nothing, recurringEndDate As Nullable(Of DateTime) = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of ValueTuple(Of Integer, String))
  overload: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync*
  nameWithType.vb: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(String, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), CancellationToken)
  fullName.vb: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync(System.String, System.DateTime, System.Nullable(Of System.DateTime), System.Nullable(Of System.DateTime), System.Threading.CancellationToken)
  name.vb: UpdateLastModifiedAndIncrementSequenceOfUidAsync(String, DateTime, Nullable(Of DateTime), Nullable(Of DateTime), CancellationToken)
- uid: SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync(System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  commentId: M:SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync(System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  id: ValidateParticipantAsync(System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  parent: SuperOffice.Util.IAppointmentUtility
  langs:
  - csharp
  - vb
  name: ValidateParticipantAsync(CancellationToken, ParticipantInfo[])
  nameWithType: IAppointmentUtility.ValidateParticipantAsync(CancellationToken, ParticipantInfo[])
  fullName: SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync(System.Threading.CancellationToken, SuperOffice.CRM.Services.ParticipantInfo[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nValidates the information in the ParticipantInfo given as parameter and fills inn \nlacking information if needed. I.e assoc_id could both represent an associate or a resource.\nIn the case of an associate, the person_id should also be present. Person that are\nactually associates are similarly updated with their associate id. \n<p></p>This also ensures consistent processing later on (associates really are processed as associates, etc)\n"
  syntax:
    content: Task ValidateParticipantAsync(CancellationToken cancellationToken, params ParticipantInfo[] participants)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: participants
      type: SuperOffice.CRM.Services.ParticipantInfo[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ValidateParticipantAsync(cancellationToken As CancellationToken, ParamArray participants As ParticipantInfo()) As Task
  overload: SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync*
  nameWithType.vb: IAppointmentUtility.ValidateParticipantAsync(CancellationToken, ParticipantInfo())
  fullName.vb: SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync(System.Threading.CancellationToken, SuperOffice.CRM.Services.ParticipantInfo())
  name.vb: ValidateParticipantAsync(CancellationToken, ParticipantInfo())
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.Util.IAppointmentUtility.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IAppointmentUtility, To>()
  nameWithType: EnumUtil.MapEnums<IAppointmentUtility, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Util.IAppointmentUtility, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IAppointmentUtility, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.IAppointmentUtility, To)()
  name.vb: MapEnums(Of IAppointmentUtility, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IAppointmentUtility, To>
    nameWithType: EnumUtil.MapEnums<IAppointmentUtility, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Util.IAppointmentUtility, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IAppointmentUtility, To)
    nameWithType: EnumUtil.MapEnums(Of IAppointmentUtility, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Util.IAppointmentUtility, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IAppointmentUtility, To>()
  nameWithType: Converters.MapEnums<IAppointmentUtility, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.IAppointmentUtility, To>()
  nameWithType.vb: Converters.MapEnums(Of IAppointmentUtility, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.IAppointmentUtility, To)()
  name.vb: MapEnums(Of IAppointmentUtility, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IAppointmentUtility, To>
    nameWithType: Converters.MapEnums<IAppointmentUtility, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.IAppointmentUtility, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IAppointmentUtility, To)
    nameWithType: Converters.MapEnums(Of IAppointmentUtility, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.IAppointmentUtility, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Util.IAppointmentUtility.AcceptAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.AcceptAsync
  isExternal: true
  name: AcceptAsync
  nameWithType: IAppointmentUtility.AcceptAsync
  fullName: SuperOffice.Util.IAppointmentUtility.AcceptAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.RecurrenceUpdateMode
  commentId: T:SuperOffice.Data.RecurrenceUpdateMode
  parent: SuperOffice.Data
  isExternal: true
  name: RecurrenceUpdateMode
  nameWithType: RecurrenceUpdateMode
  fullName: SuperOffice.Data.RecurrenceUpdateMode
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription
  isExternal: true
  name: CleanSynchronizerValuesFromDescription
  nameWithType: IAppointmentUtility.CleanSynchronizerValuesFromDescription
  fullName: SuperOffice.Util.IAppointmentUtility.CleanSynchronizerValuesFromDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync
  isExternal: true
  name: DeleteCancelledAsync
  nameWithType: IAppointmentUtility.DeleteCancelledAsync
  fullName: SuperOffice.Util.IAppointmentUtility.DeleteCancelledAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetAgenda*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetAgenda
  isExternal: true
  name: GetAgenda
  nameWithType: IAppointmentUtility.GetAgenda
  fullName: SuperOffice.Util.IAppointmentUtility.GetAgenda
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Util.IAppointmentUtility.GetAgendaHtml*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetAgendaHtml
  isExternal: true
  name: GetAgendaHtml
  nameWithType: IAppointmentUtility.GetAgendaHtml
  fullName: SuperOffice.Util.IAppointmentUtility.GetAgendaHtml
- uid: SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync
  isExternal: true
  name: GetAllAppointmentRowsOfRecurrenceRuleIDAsync
  nameWithType: IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetAllAppointmentRowsOfRecurrenceRuleIDAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AppointmentRow[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AppointmentRow[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AppointmentRow[]>
  nameWithType: Task<AppointmentRow[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.AppointmentRow[]>
  nameWithType.vb: Task(Of AppointmentRow())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.AppointmentRow())
  name.vb: Task(Of AppointmentRow())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    nameWithType: AppointmentRow
    fullName: SuperOffice.CRM.Rows.AppointmentRow
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    nameWithType: AppointmentRow
    fullName: SuperOffice.CRM.Rows.AppointmentRow
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync
  isExternal: true
  name: GetAppointmentIdFromRecurringIdAsync
  nameWithType: IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromRecurringIdAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync
  isExternal: true
  name: GetAppointmentIdFromUIDAsync
  nameWithType: IAppointmentUtility.GetAppointmentIdFromUIDAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetAppointmentIdFromUIDAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync
  isExternal: true
  name: GetConnectionInfoAsync
  nameWithType: IAppointmentUtility.GetConnectionInfoAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetConnectionInfoAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{SuperOffice.CRM.Rows.ServiceAuthRecordData,SuperOffice.CRM.Rows.ServiceAuthRecordData,System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{SuperOffice.CRM.Rows.ServiceAuthRecordData,SuperOffice.CRM.Rows.ServiceAuthRecordData,System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<ServiceAuthRecordData, ServiceAuthRecordData, String>>
  nameWithType: Task<ValueTuple<ServiceAuthRecordData, ServiceAuthRecordData, String>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<SuperOffice.CRM.Rows.ServiceAuthRecordData, SuperOffice.CRM.Rows.ServiceAuthRecordData, System.String>>
  nameWithType.vb: Task(Of ValueTuple(Of ServiceAuthRecordData, ServiceAuthRecordData, String))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of SuperOffice.CRM.Rows.ServiceAuthRecordData, SuperOffice.CRM.Rows.ServiceAuthRecordData, System.String))
  name.vb: Task(Of ValueTuple(Of ServiceAuthRecordData, ServiceAuthRecordData, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.ServiceAuthRecordData
    name: ServiceAuthRecordData
    nameWithType: ServiceAuthRecordData
    fullName: SuperOffice.CRM.Rows.ServiceAuthRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.ServiceAuthRecordData
    name: ServiceAuthRecordData
    nameWithType: ServiceAuthRecordData
    fullName: SuperOffice.CRM.Rows.ServiceAuthRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.ServiceAuthRecordData
    name: ServiceAuthRecordData
    nameWithType: ServiceAuthRecordData
    fullName: SuperOffice.CRM.Rows.ServiceAuthRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.ServiceAuthRecordData
    name: ServiceAuthRecordData
    nameWithType: ServiceAuthRecordData
    fullName: SuperOffice.CRM.Rows.ServiceAuthRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetDescription*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetDescription
  isExternal: true
  name: GetDescription
  nameWithType: IAppointmentUtility.GetDescription
  fullName: SuperOffice.Util.IAppointmentUtility.GetDescription
- uid: SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync
  isExternal: true
  name: GetExistingInvitationIdFromUIDAsync
  nameWithType: IAppointmentUtility.GetExistingInvitationIdFromUIDAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetExistingInvitationIdFromUIDAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync
  isExternal: true
  name: GetInvitationRecordDataAsync
  nameWithType: IAppointmentUtility.GetInvitationRecordDataAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRecordData}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRecordData}'
  definition: System.Threading.Tasks.Task`1
  name: Task<InvitationRecordData>
  nameWithType: Task<InvitationRecordData>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.InvitationRecordData>
  nameWithType.vb: Task(Of InvitationRecordData)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.InvitationRecordData)
  name.vb: Task(Of InvitationRecordData)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.InvitationRecordData
    name: InvitationRecordData
    nameWithType: InvitationRecordData
    fullName: SuperOffice.CRM.Rows.InvitationRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.InvitationRecordData
    name: InvitationRecordData
    nameWithType: InvitationRecordData
    fullName: SuperOffice.CRM.Rows.InvitationRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync
  isExternal: true
  name: GetInvitationRecordDataFromUidAsync
  nameWithType: IAppointmentUtility.GetInvitationRecordDataFromUidAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetInvitationRecordDataFromUidAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync
  isExternal: true
  name: GetInvitationRowFromUidAsync
  nameWithType: IAppointmentUtility.GetInvitationRowFromUidAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetInvitationRowFromUidAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.InvitationRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<InvitationRow>
  nameWithType: Task<InvitationRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.InvitationRow>
  nameWithType.vb: Task(Of InvitationRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.InvitationRow)
  name.vb: Task(Of InvitationRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.InvitationRow
    name: InvitationRow
    nameWithType: InvitationRow
    fullName: SuperOffice.CRM.Rows.InvitationRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.InvitationRow
    name: InvitationRow
    nameWithType: InvitationRow
    fullName: SuperOffice.CRM.Rows.InvitationRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment
  isExternal: true
  name: GetLastModifiedDateOfAppointment
  nameWithType: IAppointmentUtility.GetLastModifiedDateOfAppointment
  fullName: SuperOffice.Util.IAppointmentUtility.GetLastModifiedDateOfAppointment
- uid: SuperOffice.CRM.Rows.AppointmentRow
  commentId: T:SuperOffice.CRM.Rows.AppointmentRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: AppointmentRow
  nameWithType: AppointmentRow
  fullName: SuperOffice.CRM.Rows.AppointmentRow
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync
  isExternal: true
  name: GetOrCreateInvitationIdFromUIDAsync
  nameWithType: IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrCreateInvitationIdFromUIDAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.Boolean}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.Boolean}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<Int32, Boolean>>
  nameWithType: Task<ValueTuple<Int32, Boolean>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.Int32, System.Boolean>>
  nameWithType.vb: Task(Of ValueTuple(Of Int32, Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.Int32, System.Boolean))
  name.vb: Task(Of ValueTuple(Of Int32, Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync
  isExternal: true
  name: GetOrCreateUidOfAppointmentAsync
  nameWithType: IAppointmentUtility.GetOrCreateUidOfAppointmentAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrCreateUidOfAppointmentAsync
- uid: System.Nullable{System.DateTime}
  commentId: '!:System.Nullable{System.DateTime}'
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int32}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.String,System.Int32}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<String, Int32>>
  nameWithType: Task<ValueTuple<String, Int32>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.String, System.Int32>>
  nameWithType.vb: Task(Of ValueTuple(Of String, Int32))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.String, System.Int32))
  name.vb: Task(Of ValueTuple(Of String, Int32))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync
  isExternal: true
  name: GetOrganizerEmailAsync
  nameWithType: IAppointmentUtility.GetOrganizerEmailAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrganizerEmailAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync
  isExternal: true
  name: GetOrganizerInfoAsync
  nameWithType: IAppointmentUtility.GetOrganizerInfoAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetOrganizerInfoAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<String, String>>
  nameWithType: Task<ValueTuple<String, String>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.String, System.String>>
  nameWithType.vb: Task(Of ValueTuple(Of String, String))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.String, System.String))
  name.vb: Task(Of ValueTuple(Of String, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetParticipantAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetParticipantAsync
  isExternal: true
  name: GetParticipantAsync
  nameWithType: IAppointmentUtility.GetParticipantAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetParticipantAsync
- uid: SuperOffice.Data.AppointmentStatus
  commentId: T:SuperOffice.Data.AppointmentStatus
  parent: SuperOffice.Data
  isExternal: true
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.Data.AppointmentStatus
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.ParticipantInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.ParticipantInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ParticipantInfo>
  nameWithType: Task<ParticipantInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.ParticipantInfo>
  nameWithType.vb: Task(Of ParticipantInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.ParticipantInfo)
  name.vb: Task(Of ParticipantInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.ParticipantInfo
    name: ParticipantInfo
    nameWithType: ParticipantInfo
    fullName: SuperOffice.CRM.Services.ParticipantInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.ParticipantInfo
    name: ParticipantInfo
    nameWithType: ParticipantInfo
    fullName: SuperOffice.CRM.Services.ParticipantInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync
  isExternal: true
  name: GetRecurrenceRuleIdOfAppointmentIdAsync
  nameWithType: IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurrenceRuleIdOfAppointmentIdAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync
  isExternal: true
  name: GetRecurringSeriesForInvitedEmailAttendeeAsync
  nameWithType: IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedEmailAttendeeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.Util.RecurringSeries}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.Util.RecurringSeries}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RecurringSeries>
  nameWithType: Task<RecurringSeries>
  fullName: System.Threading.Tasks.Task<SuperOffice.Util.RecurringSeries>
  nameWithType.vb: Task(Of RecurringSeries)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.Util.RecurringSeries)
  name.vb: Task(Of RecurringSeries)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Util.RecurringSeries
    name: RecurringSeries
    nameWithType: RecurringSeries
    fullName: SuperOffice.Util.RecurringSeries
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Util.RecurringSeries
    name: RecurringSeries
    nameWithType: RecurringSeries
    fullName: SuperOffice.Util.RecurringSeries
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync
  isExternal: true
  name: GetRecurringSeriesForInvitedPersonAsync
  nameWithType: IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesForInvitedPersonAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync
  isExternal: true
  name: GetRecurringSeriesOnlyMotherAppointmentsAsync
  nameWithType: IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetRecurringSeriesOnlyMotherAppointmentsAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync
  isExternal: true
  name: GetTemplateLanguageAsync
  nameWithType: IAppointmentUtility.GetTemplateLanguageAsync
  fullName: SuperOffice.Util.IAppointmentUtility.GetTemplateLanguageAsync
- uid: SuperOffice.Util.IAppointmentUtility.GetTitle*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.GetTitle
  isExternal: true
  name: GetTitle
  nameWithType: IAppointmentUtility.GetTitle
  fullName: SuperOffice.Util.IAppointmentUtility.GetTitle
- uid: SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync
  isExternal: true
  name: HasCalendarAccessAsync
  nameWithType: IAppointmentUtility.HasCalendarAccessAsync
  fullName: SuperOffice.Util.IAppointmentUtility.HasCalendarAccessAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.HaveChanged*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.HaveChanged
  isExternal: true
  name: HaveChanged
  nameWithType: IAppointmentUtility.HaveChanged
  fullName: SuperOffice.Util.IAppointmentUtility.HaveChanged
- uid: SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync
  isExternal: true
  name: ModifyOnRowsAsync
  nameWithType: IAppointmentUtility.ModifyOnRowsAsync
  fullName: SuperOffice.Util.IAppointmentUtility.ModifyOnRowsAsync
- uid: SuperOffice.Util.RowModification
  commentId: T:SuperOffice.Util.RowModification
  parent: SuperOffice.Util
  isExternal: true
  name: RowModification
  nameWithType: RowModification
  fullName: SuperOffice.Util.RowModification
- uid: SuperOffice.Util.IAppointmentUtility.RejectAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.RejectAsync
  isExternal: true
  name: RejectAsync
  nameWithType: IAppointmentUtility.RejectAsync
  fullName: SuperOffice.Util.IAppointmentUtility.RejectAsync
- uid: SuperOffice.Util.IAppointmentUtility.SetSeenAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.SetSeenAsync
  isExternal: true
  name: SetSeenAsync
  nameWithType: IAppointmentUtility.SetSeenAsync
  fullName: SuperOffice.Util.IAppointmentUtility.SetSeenAsync
- uid: SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync
  isExternal: true
  name: TryGetNearestUidOfAppointmentIdAsync
  nameWithType: IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetNearestUidOfAppointmentIdAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String,System.Int32}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String,System.Int32}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<Boolean, String, Int32>>
  nameWithType: Task<ValueTuple<Boolean, String, Int32>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.Boolean, System.String, System.Int32>>
  nameWithType.vb: Task(Of ValueTuple(Of Boolean, String, Int32))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.Boolean, System.String, System.Int32))
  name.vb: Task(Of ValueTuple(Of Boolean, String, Int32))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`3
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`3
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync
  isExternal: true
  name: TryGetOfAppointmentIdFromRecurrenceIdAsync
  nameWithType: IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetOfAppointmentIdFromRecurrenceIdAsync
- uid: SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync
  isExternal: true
  name: TryGetRelatedUidOfAppointmentIdAsync
  nameWithType: IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetRelatedUidOfAppointmentIdAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<Boolean, String>>
  nameWithType: Task<ValueTuple<Boolean, String>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.Boolean, System.String>>
  nameWithType.vb: Task(Of ValueTuple(Of Boolean, String))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.Boolean, System.String))
  name.vb: Task(Of ValueTuple(Of Boolean, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync
  isExternal: true
  name: TryGetUidFromRecurringAppointmentChildAsync
  nameWithType: IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetUidFromRecurringAppointmentChildAsync
- uid: SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync
  isExternal: true
  name: TryGetUidOfAppointmentIdAsync
  nameWithType: IAppointmentUtility.TryGetUidOfAppointmentIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetUidOfAppointmentIdAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String,System.Int32,System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.Boolean,System.String,System.Int32,System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<Boolean, String, Int32, String>>
  nameWithType: Task<ValueTuple<Boolean, String, Int32, String>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.Boolean, System.String, System.Int32, System.String>>
  nameWithType.vb: Task(Of ValueTuple(Of Boolean, String, Int32, String))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.Boolean, System.String, System.Int32, System.String))
  name.vb: Task(Of ValueTuple(Of Boolean, String, Int32, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`4
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`4
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync
  isExternal: true
  name: TryGetUidOfRecurrenceIdAsync
  nameWithType: IAppointmentUtility.TryGetUidOfRecurrenceIdAsync
  fullName: SuperOffice.Util.IAppointmentUtility.TryGetUidOfRecurrenceIdAsync
- uid: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync
  isExternal: true
  name: UpdateLastModifiedAndIncrementSequenceAsync
  nameWithType: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync
  fullName: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.ValueTuple{System.Int32,System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ValueTuple<Int32, String>>
  nameWithType: Task<ValueTuple<Int32, String>>
  fullName: System.Threading.Tasks.Task<System.ValueTuple<System.Int32, System.String>>
  nameWithType.vb: Task(Of ValueTuple(Of Int32, String))
  fullName.vb: System.Threading.Tasks.Task(Of System.ValueTuple(Of System.Int32, System.String))
  name.vb: Task(Of ValueTuple(Of Int32, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync
  isExternal: true
  name: UpdateLastModifiedAndIncrementSequenceOfRowAsync
  nameWithType: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync
  fullName: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfRowAsync
- uid: SuperOffice.CRM.Rows.InvitationRow
  commentId: T:SuperOffice.CRM.Rows.InvitationRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: InvitationRow
  nameWithType: InvitationRow
  fullName: SuperOffice.CRM.Rows.InvitationRow
- uid: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync
  isExternal: true
  name: UpdateLastModifiedAndIncrementSequenceOfUidAsync
  nameWithType: IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync
  fullName: SuperOffice.Util.IAppointmentUtility.UpdateLastModifiedAndIncrementSequenceOfUidAsync
- uid: SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync*
  commentId: Overload:SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync
  isExternal: true
  name: ValidateParticipantAsync
  nameWithType: IAppointmentUtility.ValidateParticipantAsync
  fullName: SuperOffice.Util.IAppointmentUtility.ValidateParticipantAsync
- uid: SuperOffice.CRM.Services.ParticipantInfo[]
  isExternal: true
  name: ParticipantInfo[]
  nameWithType: ParticipantInfo[]
  fullName: SuperOffice.CRM.Services.ParticipantInfo[]
  nameWithType.vb: ParticipantInfo()
  fullName.vb: SuperOffice.CRM.Services.ParticipantInfo()
  name.vb: ParticipantInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ParticipantInfo
    name: ParticipantInfo
    nameWithType: ParticipantInfo
    fullName: SuperOffice.CRM.Services.ParticipantInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ParticipantInfo
    name: ParticipantInfo
    nameWithType: ParticipantInfo
    fullName: SuperOffice.CRM.Services.ParticipantInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
