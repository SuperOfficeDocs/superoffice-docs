### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Cache.SoCache
  commentId: T:SuperOffice.Data.Cache.SoCache
  id: SoCache
  parent: SuperOffice.Data.Cache
  children:
  - SuperOffice.Data.Cache.SoCache.Flush
  - SuperOffice.Data.Cache.SoCache.Flush(System.Type)
  - SuperOffice.Data.Cache.SoCache.GetAllCachesInContext
  - SuperOffice.Data.Cache.SoCache.GetCache(System.Type)
  - SuperOffice.Data.Cache.SoCache.GetCache``1
  langs:
  - csharp
  - vb
  name: SoCache
  nameWithType: SoCache
  fullName: SuperOffice.Data.Cache.SoCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nUtility class for dealing with caches.\n"
  syntax:
    content: public sealed class SoCache
    content.vb: Public NotInheritable Class SoCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.Cache.SoCache.EnumUtil.MapEnums``2
  - SuperOffice.Data.Cache.SoCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Data.Cache.SoCache.GetAllCachesInContext
  commentId: M:SuperOffice.Data.Cache.SoCache.GetAllCachesInContext
  id: GetAllCachesInContext
  parent: SuperOffice.Data.Cache.SoCache
  langs:
  - csharp
  - vb
  name: GetAllCachesInContext()
  nameWithType: SoCache.GetAllCachesInContext()
  fullName: SuperOffice.Data.Cache.SoCache.GetAllCachesInContext()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  syntax:
    content: public static IEnumerable<IFlushable> GetAllCachesInContext()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.Cache.IFlushable}
    content.vb: Public Shared Function GetAllCachesInContext As IEnumerable(Of IFlushable)
  overload: SuperOffice.Data.Cache.SoCache.GetAllCachesInContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.Cache.SoCache.Flush
  commentId: M:SuperOffice.Data.Cache.SoCache.Flush
  id: Flush
  parent: SuperOffice.Data.Cache.SoCache
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: SoCache.Flush()
  fullName: SuperOffice.Data.Cache.SoCache.Flush()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nForce all caches in the system to be flushed.\n"
  syntax:
    content: public static void Flush()
    content.vb: Public Shared Sub Flush
  overload: SuperOffice.Data.Cache.SoCache.Flush*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.Cache.SoCache.Flush(System.Type)
  commentId: M:SuperOffice.Data.Cache.SoCache.Flush(System.Type)
  id: Flush(System.Type)
  parent: SuperOffice.Data.Cache.SoCache
  langs:
  - csharp
  - vb
  name: Flush(Type)
  nameWithType: SoCache.Flush(Type)
  fullName: SuperOffice.Data.Cache.SoCache.Flush(System.Type)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nForce a single cache to be flushed\n"
  syntax:
    content: public static void Flush(Type cacheType)
    parameters:
    - id: cacheType
      type: System.Type
      description: The type that identifies the cache
    content.vb: Public Shared Sub Flush(cacheType As Type)
  overload: SuperOffice.Data.Cache.SoCache.Flush*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.Cache.SoCache.GetCache(System.Type)
  commentId: M:SuperOffice.Data.Cache.SoCache.GetCache(System.Type)
  id: GetCache(System.Type)
  parent: SuperOffice.Data.Cache.SoCache
  langs:
  - csharp
  - vb
  name: GetCache(Type)
  nameWithType: SoCache.GetCache(Type)
  fullName: SuperOffice.Data.Cache.SoCache.GetCache(System.Type)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nGet a cache given its&apos; type.\n"
  syntax:
    content: public static CacheBase GetCache(Type cacheType)
    parameters:
    - id: cacheType
      type: System.Type
      description: Type of the cache
    return:
      type: SuperOffice.Data.Cache.CacheBase
      description: Instance of the given cache
    content.vb: Public Shared Function GetCache(cacheType As Type) As CacheBase
  overload: SuperOffice.Data.Cache.SoCache.GetCache*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.Cache.SoCache.GetCache``1
  commentId: M:SuperOffice.Data.Cache.SoCache.GetCache``1
  id: GetCache``1
  parent: SuperOffice.Data.Cache.SoCache
  langs:
  - csharp
  - vb
  name: GetCache<T>()
  nameWithType: SoCache.GetCache<T>()
  fullName: SuperOffice.Data.Cache.SoCache.GetCache<T>()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nGet a cache given its&apos; type.\n"
  syntax:
    content: >-
      public static T GetCache<T>()
          where T : CacheBase
    typeParameters:
    - id: T
      description: Type of the cache
    return:
      type: '{T}'
      description: Instance of the given cache
    content.vb: Public Shared Function GetCache(Of T As CacheBase) As T
  overload: SuperOffice.Data.Cache.SoCache.GetCache*
  nameWithType.vb: SoCache.GetCache(Of T)()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Data.Cache.SoCache.GetCache(Of T)()
  name.vb: GetCache(Of T)()
references:
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.SoCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoCache, To>()
  nameWithType: EnumUtil.MapEnums<SoCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.SoCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.SoCache, To)()
  name.vb: MapEnums(Of SoCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoCache, To>
    nameWithType: EnumUtil.MapEnums<SoCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.SoCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoCache, To)
    nameWithType: EnumUtil.MapEnums(Of SoCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.SoCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.SoCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoCache, To>()
  nameWithType: Converters.MapEnums<SoCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.SoCache, To>()
  nameWithType.vb: Converters.MapEnums(Of SoCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.SoCache, To)()
  name.vb: MapEnums(Of SoCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoCache, To>
    nameWithType: Converters.MapEnums<SoCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.SoCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoCache, To)
    nameWithType: Converters.MapEnums(Of SoCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.SoCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Cache.SoCache.GetAllCachesInContext*
  commentId: Overload:SuperOffice.Data.Cache.SoCache.GetAllCachesInContext
  isExternal: true
  name: GetAllCachesInContext
  nameWithType: SoCache.GetAllCachesInContext
  fullName: SuperOffice.Data.Cache.SoCache.GetAllCachesInContext
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.Cache.IFlushable}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.Cache.IFlushable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFlushable>
  nameWithType: IEnumerable<IFlushable>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.Cache.IFlushable>
  nameWithType.vb: IEnumerable(Of IFlushable)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.Cache.IFlushable)
  name.vb: IEnumerable(Of IFlushable)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.Cache.IFlushable
    name: IFlushable
    nameWithType: IFlushable
    fullName: SuperOffice.Data.Cache.IFlushable
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.Cache.IFlushable
    name: IFlushable
    nameWithType: IFlushable
    fullName: SuperOffice.Data.Cache.IFlushable
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data.Cache.SoCache.Flush*
  commentId: Overload:SuperOffice.Data.Cache.SoCache.Flush
  isExternal: true
  name: Flush
  nameWithType: SoCache.Flush
  fullName: SuperOffice.Data.Cache.SoCache.Flush
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: SuperOffice.Data.Cache.SoCache.GetCache*
  commentId: Overload:SuperOffice.Data.Cache.SoCache.GetCache
  isExternal: true
  name: GetCache
  nameWithType: SoCache.GetCache
  fullName: SuperOffice.Data.Cache.SoCache.GetCache
- uid: SuperOffice.Data.Cache.CacheBase
  commentId: T:SuperOffice.Data.Cache.CacheBase
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBase
  nameWithType: CacheBase
  fullName: SuperOffice.Data.Cache.CacheBase
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
