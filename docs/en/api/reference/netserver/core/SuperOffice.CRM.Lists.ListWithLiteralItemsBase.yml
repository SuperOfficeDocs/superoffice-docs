### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  commentId: T:SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  id: ListWithLiteralItemsBase
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.#ctor
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem})
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo(System.String)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName(System.String)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem},System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem})
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync(SuperOffice.CRM.Lists.ISoListItem,System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem(SuperOffice.CRM.Lists.ISoListItem)
  langs:
  - csharp
  - vb
  name: ListWithLiteralItemsBase
  nameWithType: ListWithLiteralItemsBase
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nBase class for MDO lists that are based on an existing list, but need to add leading or trailing\nroot items. This is typical for lists like the probability in the search dialog, amount class for SAINT\ncriteria, etc.\n<p></p>The template method pattern is used; override the virtual methods you need to do your stuff.\nMethods you do not override will revert to their empty base implementation.\n"
  syntax:
    content: 'public abstract class ListWithLiteralItemsBase : Object, ISoListProvider, ISoList, IPlugin'
    content.vb: >-
      Public MustInherit Class ListWithLiteralItemsBase
          Inherits Object
          Implements ISoListProvider, ISoList, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider
  - SuperOffice.CRM.Lists.ISoList
  extensionMethods:
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.ListWithLiteralItemsBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem},System.Threading.CancellationToken)
  id: GetLeadingRootItemsAsync(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetLeadingRootItemsAsync(List<ISoListItem>, CancellationToken)
  nameWithType: ListWithLiteralItemsBase.GetLeadingRootItemsAsync(List<ISoListItem>, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync(System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSubclass contract: Override this method to provide leading root items. Add your items\nto the list that is passed in. If you do not need to add leading items, do not override\nthis method.\n"
  syntax:
    content: protected virtual Task GetLeadingRootItemsAsync(List<ISoListItem> leadingItems, CancellationToken cancellationToken = null)
    parameters:
    - id: leadingItems
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
      description: List to add leading items to
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function GetLeadingRootItemsAsync(leadingItems As List(Of ISoListItem), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync*
  nameWithType.vb: ListWithLiteralItemsBase.GetLeadingRootItemsAsync(List(Of ISoListItem), CancellationToken)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync(System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem), System.Threading.CancellationToken)
  name.vb: GetLeadingRootItemsAsync(List(Of ISoListItem), CancellationToken)
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem})
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem})
  id: GetTrailingRootItems(System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem})
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetTrailingRootItems(List<ISoListItem>)
  nameWithType: ListWithLiteralItemsBase.GetTrailingRootItems(List<ISoListItem>)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems(System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSubclass contract: Override this method to provide trailing root items. Add your items\nto the list that is passed in. If you do not need to add trailing items, do not override\nthis method.\n"
  syntax:
    content: protected virtual void GetTrailingRootItems(List<ISoListItem> trailingItems)
    parameters:
    - id: trailingItems
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
      description: List to add trailing items to
    content.vb: Protected Overridable Sub GetTrailingRootItems(trailingItems As List(Of ISoListItem))
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems*
  nameWithType.vb: ListWithLiteralItemsBase.GetTrailingRootItems(List(Of ISoListItem))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems(System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem))
  name.vb: GetTrailingRootItems(List(Of ISoListItem))
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem(SuperOffice.CRM.Lists.ISoListItem)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem(SuperOffice.CRM.Lists.ISoListItem)
  id: ProcessItem(SuperOffice.CRM.Lists.ISoListItem)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: ProcessItem(ISoListItem)
  nameWithType: ListWithLiteralItemsBase.ProcessItem(ISoListItem)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem(SuperOffice.CRM.Lists.ISoListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSubclass contract: Override this method to manipulate each root item (after\nleading and trailing items have been added). This method will be called once for\neach non-history item. If you do not need to manipulate items, do not override this method.\n<p></p>Note - items are not re-sorted, so chaning the rank may not have any effect.\n"
  syntax:
    content: protected virtual void ProcessItem(ISoListItem item)
    parameters:
    - id: item
      type: SuperOffice.CRM.Lists.ISoListItem
      description: Item, to be updated as you see fit
    content.vb: Protected Overridable Sub ProcessItem(item As ISoListItem)
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync(SuperOffice.CRM.Lists.ISoListItem,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync(SuperOffice.CRM.Lists.ISoListItem,System.Threading.CancellationToken)
  id: ProcessHistoryItemAsync(SuperOffice.CRM.Lists.ISoListItem,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: ProcessHistoryItemAsync(ISoListItem, CancellationToken)
  nameWithType: ListWithLiteralItemsBase.ProcessHistoryItemAsync(ISoListItem, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync(SuperOffice.CRM.Lists.ISoListItem, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSubclass contract: Override this method to manipulate each history item. This method will be called once for\neach history item. If you do not need to manipulate items, do not override this method.\n<p></p>Note - items are not re-sorted, so chaning the rank may not have any effect.\n"
  syntax:
    content: protected virtual Task ProcessHistoryItemAsync(ISoListItem item, CancellationToken cancellationToken = null)
    parameters:
    - id: item
      type: SuperOffice.CRM.Lists.ISoListItem
      description: Item, to be updated as you see fit
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overridable Function ProcessHistoryItemAsync(item As ISoListItem, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName(System.String)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName(System.String)
  id: GetInnerListProviderName(System.String)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetInnerListProviderName(String)
  nameWithType: ListWithLiteralItemsBase.GetInnerListProviderName(String)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nSubclass contract: Return the name of the desired inner provider; this will be passed to the <xref href=\"SuperOffice.CRM.Lists.SoListProviderFactory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected abstract string GetInnerListProviderName(string outerListname)
    parameters:
    - id: outerListname
      type: System.String
      description: List name from the client code, useful if one class is to extend more than one list
    return:
      type: System.String
    content.vb: Protected MustOverride Function GetInnerListProviderName(outerListname As String) As String
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo(System.String)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo(System.String)
  id: GetInnerListAdditionalInfo(System.String)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetInnerListAdditionalInfo(String)
  nameWithType: ListWithLiteralItemsBase.GetInnerListAdditionalInfo(String)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected virtual string GetInnerListAdditionalInfo(string additionalInfo)
    parameters:
    - id: additionalInfo
      type: System.String
    return:
      type: System.String
    content.vb: Protected Overridable Function GetInnerListAdditionalInfo(additionalInfo As String) As String
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  id: ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  nameWithType: ListWithLiteralItemsBase.ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nConstruct the list, by using the derived class&apos; <see cref=\"!:InnerListProviderName\"></see> property to call the <xref href=\"SuperOffice.CRM.Lists.SoListProviderFactory\" data-throw-if-not-resolved=\"false\"></xref>.\nThe various virtual methods are called, and the final list constructed.\n"
  syntax:
    content: public Task ConstructAsync(string listName, string additionalInfo, int[] historyIDs, bool onlyReadHistory, string searchValue, bool forceFlatList, CancellationToken cancellationToken = null)
    parameters:
    - id: listName
      type: System.String
      description: Name of the desired list, passed to the derived class
    - id: additionalInfo
      type: System.String
    - id: historyIDs
      type: System.Int32[]
      description: List of history id&apos;s (primary keys of the table holding the MDO list values).
    - id: onlyReadHistory
      type: System.Boolean
      description: Only read history nodes.
    - id: searchValue
      type: System.String
      description: Search value (case insensetive string used like &apos;[searchValue]%&apos;.  The result when using this is allways a flat list without hisotry elements.
    - id: forceFlatList
      type: System.Boolean
      description: State that a forced flat list should be returned.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ConstructAsync(listName As String, additionalInfo As String, historyIDs As Integer(), onlyReadHistory As Boolean, searchValue As String, forceFlatList As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: ListWithLiteralItemsBase.ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  name.vb: ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem})
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem})
  id: FilterBySearchValue(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem})
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: FilterBySearchValue(IEnumerable<ISoListItem>)
  nameWithType: ListWithLiteralItemsBase.FilterBySearchValue(IEnumerable<ISoListItem>)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Lists.ISoListItem>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\n\n"
  syntax:
    content: public IEnumerable<ISoListItem> FilterBySearchValue(IEnumerable<ISoListItem> items)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Public Function FilterBySearchValue(items As IEnumerable(Of ISoListItem)) As IEnumerable(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue*
  nameWithType.vb: ListWithLiteralItemsBase.FilterBySearchValue(IEnumerable(Of ISoListItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Lists.ISoListItem))
  name.vb: FilterBySearchValue(IEnumerable(Of ISoListItem))
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync(System.Threading.CancellationToken)
  id: GetAllItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetAllItemsAsync(CancellationToken)
  nameWithType: ListWithLiteralItemsBase.GetAllItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nUtility enumerator, runs over all non-history items\n"
  syntax:
    content: public IAsyncEnumerable<ISoListItem> GetAllItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Public Function GetAllItemsAsync(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync(System.Threading.CancellationToken)
  id: GetHistoryItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetHistoryItemsAsync(CancellationToken)
  nameWithType: ListWithLiteralItemsBase.GetHistoryItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nReturn history items, empty if this is a flat list or a search\n"
  syntax:
    content: public Task<List<ISoListItem>> GetHistoryItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}
    content.vb: Public Function GetHistoryItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of ISoListItem))
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems
  id: ClearHistoryItems
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: ClearHistoryItems()
  nameWithType: ListWithLiteralItemsBase.ClearHistoryItems()
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public void ClearHistoryItems()
    content.vb: Public Sub ClearHistoryItems
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems*
  implements:
  - SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync(System.Threading.CancellationToken)
  id: GetRootItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetRootItemsAsync(CancellationToken)
  nameWithType: ListWithLiteralItemsBase.GetRootItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nReturn root items, all items in case of a flat list or search\n"
  syntax:
    content: public Task<List<ISoListItem>> GetRootItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}
    content.vb: Public Function GetRootItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of ISoListItem))
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync(System.Threading.CancellationToken)
  id: GetHeadingItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: GetHeadingItemsAsync(CancellationToken)
  nameWithType: ListWithLiteralItemsBase.GetHeadingItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nReturn headings and underlying items, empty if this is a flat list or a search\n"
  syntax:
    content: public Task<List<ISoListHeading>> GetHeadingItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}}
    content.vb: Public Function GetHeadingItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of ISoListHeading))
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.#ctor
  commentId: M:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: ListWithLiteralItemsBase()
  nameWithType: ListWithLiteralItemsBase.ListWithLiteralItemsBase()
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ListWithLiteralItemsBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected ListWithLiteralItemsBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList
  commentId: P:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList
  id: InnerList
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: InnerList
  nameWithType: ListWithLiteralItemsBase.InnerList
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nMainTableName to give access to the inner list, ie., the provider of the inner MDO list you wish to extend\n"
  syntax:
    content: protected ISoListProvider InnerList { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.ISoListProvider
    content.vb: Protected ReadOnly Property InnerList As ISoListProvider
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo
  id: HistoryInfo
  parent: SuperOffice.CRM.Lists.ListWithLiteralItemsBase
  langs:
  - csharp
  - vb
  name: HistoryInfo
  nameWithType: ListWithLiteralItemsBase.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nHistory information, returns null\n"
  syntax:
    content: public HistoryInfo HistoryInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.HistoryInfo
    content.vb: Public ReadOnly Property HistoryInfo As HistoryInfo
  overload: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo*
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ISoListProvider
  commentId: T:SuperOffice.CRM.Lists.ISoListProvider
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListProvider
  nameWithType: ISoListProvider
  fullName: SuperOffice.CRM.Lists.ISoListProvider
- uid: SuperOffice.CRM.Lists.ISoList
  commentId: T:SuperOffice.CRM.Lists.ISoList
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoList
  nameWithType: ISoList
  fullName: SuperOffice.CRM.Lists.ISoList
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ListWithLiteralItemsBase, To>()
  nameWithType: EnumUtil.MapEnums<ListWithLiteralItemsBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ListWithLiteralItemsBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To)()
  name.vb: MapEnums(Of ListWithLiteralItemsBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ListWithLiteralItemsBase, To>
    nameWithType: EnumUtil.MapEnums<ListWithLiteralItemsBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ListWithLiteralItemsBase, To)
    nameWithType: EnumUtil.MapEnums(Of ListWithLiteralItemsBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ListWithLiteralItemsBase, To>()
  nameWithType: Converters.MapEnums<ListWithLiteralItemsBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To>()
  nameWithType.vb: Converters.MapEnums(Of ListWithLiteralItemsBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To)()
  name.vb: MapEnums(Of ListWithLiteralItemsBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ListWithLiteralItemsBase, To>
    nameWithType: Converters.MapEnums<ListWithLiteralItemsBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ListWithLiteralItemsBase, To)
    nameWithType: Converters.MapEnums(Of ListWithLiteralItemsBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ListWithLiteralItemsBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync
  isExternal: true
  name: GetLeadingRootItemsAsync
  nameWithType: ListWithLiteralItemsBase.GetLeadingRootItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetLeadingRootItemsAsync
- uid: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  commentId: '!:System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}'
  definition: System.Collections.Generic.List`1
  name: List<ISoListItem>
  nameWithType: List<ISoListItem>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: List(Of ISoListItem)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: List(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems
  isExternal: true
  name: GetTrailingRootItems
  nameWithType: ListWithLiteralItemsBase.GetTrailingRootItems
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetTrailingRootItems
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem
  isExternal: true
  name: ProcessItem
  nameWithType: ListWithLiteralItemsBase.ProcessItem
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessItem
- uid: SuperOffice.CRM.Lists.ISoListItem
  commentId: T:SuperOffice.CRM.Lists.ISoListItem
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListItem
  nameWithType: ISoListItem
  fullName: SuperOffice.CRM.Lists.ISoListItem
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync
  isExternal: true
  name: ProcessHistoryItemAsync
  nameWithType: ListWithLiteralItemsBase.ProcessHistoryItemAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ProcessHistoryItemAsync
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName
  isExternal: true
  name: GetInnerListProviderName
  nameWithType: ListWithLiteralItemsBase.GetInnerListProviderName
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListProviderName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo
  isExternal: true
  name: GetInnerListAdditionalInfo
  nameWithType: ListWithLiteralItemsBase.GetInnerListAdditionalInfo
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetInnerListAdditionalInfo
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync
  isExternal: true
  name: ConstructAsync
  nameWithType: ListWithLiteralItemsBase.ConstructAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ConstructAsync
- uid: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoListProvider
  isExternal: true
  name: ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  nameWithType: ISoListProvider.ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: ISoListProvider.ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  name.vb: ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
    name: ConstructAsync
    nameWithType: ISoListProvider.ConstructAsync
    fullName: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
    name: ConstructAsync
    nameWithType: ISoListProvider.ConstructAsync
    fullName: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue
  isExternal: true
  name: FilterBySearchValue
  nameWithType: ListWithLiteralItemsBase.FilterBySearchValue
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.FilterBySearchValue
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Lists.ISoListItem}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISoListItem>
  nameWithType: IEnumerable<ISoListItem>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: IEnumerable(Of ISoListItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: IEnumerable(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync
  isExternal: true
  name: GetAllItemsAsync
  nameWithType: ListWithLiteralItemsBase.GetAllItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetAllItemsAsync
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Lists.ISoListItem}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Lists.ISoListItem}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<ISoListItem>
  nameWithType: IAsyncEnumerable<ISoListItem>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: IAsyncEnumerable(Of ISoListItem)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: IAsyncEnumerable(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: System.Collections.Generic.IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync
  isExternal: true
  name: GetHistoryItemsAsync
  nameWithType: ListWithLiteralItemsBase.GetHistoryItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHistoryItemsAsync
- uid: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: GetHistoryItemsAsync(CancellationToken)
  nameWithType: ISoList.GetHistoryItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
    name: GetHistoryItemsAsync
    nameWithType: ISoList.GetHistoryItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
    name: GetHistoryItemsAsync
    nameWithType: ISoList.GetHistoryItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ISoListItem>>
  nameWithType: Task<List<ISoListItem>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>>
  nameWithType.vb: Task(Of List(Of ISoListItem))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem))
  name.vb: Task(Of List(Of ISoListItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems
  isExternal: true
  name: ClearHistoryItems
  nameWithType: ListWithLiteralItemsBase.ClearHistoryItems
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ClearHistoryItems
- uid: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
  commentId: M:SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: ClearHistoryItems()
  nameWithType: ISoList.ClearHistoryItems()
  fullName: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    name: ClearHistoryItems
    nameWithType: ISoList.ClearHistoryItems
    fullName: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    name: ClearHistoryItems
    nameWithType: ISoList.ClearHistoryItems
    fullName: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync
  isExternal: true
  name: GetRootItemsAsync
  nameWithType: ListWithLiteralItemsBase.GetRootItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetRootItemsAsync
- uid: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: GetRootItemsAsync(CancellationToken)
  nameWithType: ISoList.GetRootItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
    name: GetRootItemsAsync
    nameWithType: ISoList.GetRootItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
    name: GetRootItemsAsync
    nameWithType: ISoList.GetRootItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync
  isExternal: true
  name: GetHeadingItemsAsync
  nameWithType: ListWithLiteralItemsBase.GetHeadingItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.GetHeadingItemsAsync
- uid: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: GetHeadingItemsAsync(CancellationToken)
  nameWithType: ISoList.GetHeadingItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
    name: GetHeadingItemsAsync
    nameWithType: ISoList.GetHeadingItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
    name: GetHeadingItemsAsync
    nameWithType: ISoList.GetHeadingItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ISoListHeading>>
  nameWithType: Task<List<ISoListHeading>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListHeading>>
  nameWithType.vb: Task(Of List(Of ISoListHeading))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListHeading))
  name.vb: Task(Of List(Of ISoListHeading))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListHeading
    name: ISoListHeading
    nameWithType: ISoListHeading
    fullName: SuperOffice.CRM.Lists.ISoListHeading
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListHeading
    name: ISoListHeading
    nameWithType: ISoListHeading
    fullName: SuperOffice.CRM.Lists.ISoListHeading
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.#ctor
  isExternal: true
  name: ListWithLiteralItemsBase
  nameWithType: ListWithLiteralItemsBase.ListWithLiteralItemsBase
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.ListWithLiteralItemsBase
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList
  isExternal: true
  name: InnerList
  nameWithType: ListWithLiteralItemsBase.InnerList
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.InnerList
- uid: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo
  isExternal: true
  name: HistoryInfo
  nameWithType: ListWithLiteralItemsBase.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ListWithLiteralItemsBase.HistoryInfo
- uid: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  parent: SuperOffice.CRM.Lists.ISoListProvider
  isExternal: true
  name: HistoryInfo
  nameWithType: ISoListProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
- uid: SuperOffice.CRM.Lists.HistoryInfo
  commentId: T:SuperOffice.CRM.Lists.HistoryInfo
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: HistoryInfo
  nameWithType: HistoryInfo
  fullName: SuperOffice.CRM.Lists.HistoryInfo
