### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions
  commentId: T:SuperOffice.CRM.Entities.EntityManagementFunctions
  id: EntityManagementFunctions
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync(System.Int32,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync(SuperOffice.CRM.Entities.Person,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync(System.Int32,System.Int32,System.Boolean,System.Action{System.String},System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: EntityManagementFunctions
  nameWithType: EntityManagementFunctions
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nMove, merge and copy contact, person and project; as well as replay such events on behalf of travel\n"
  remarks: "\nThe public Copy and Merge methods are the outside entrypoints, as well as the generic PerformOperationFromLog.\n<p></p>\nOperations are not logged to traveltransactionlog, but instead to mergemovelog, from where they can be replayed.\nNote that move/merge are not supported on child databases, only on central (once you got out of sync with crossing\noperations, there would be no way back).\n"
  syntax:
    content: 'public static class EntityManagementFunctions : Object'
    content.vb: >-
      Public Module EntityManagementFunctions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync(System.Int32,System.Threading.CancellationToken)
  id: PerformOperationFromLogAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: PerformOperationFromLogAsync(Int32, CancellationToken)
  nameWithType: EntityManagementFunctions.PerformOperationFromLogAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nPerform a move/merge operation from a MergeMoveLog entry\nUsed for merging from a travel database\n"
  syntax:
    content: public static Task PerformOperationFromLogAsync(int logId, CancellationToken cancellationToken)
    parameters:
    - id: logId
      type: System.Int32
      description: The id of the log entry containing the move/merge operation
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function PerformOperationFromLogAsync(logId As Integer, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: MergeContactsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: MergeContactsAsync(Int32, Int32, Boolean, Boolean, Boolean, CancellationToken)
  nameWithType: EntityManagementFunctions.MergeContactsAsync(Int32, Int32, Boolean, Boolean, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync(System.Int32, System.Int32, System.Boolean, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nMerge two contacts. The destination contact will remain.\n"
  syntax:
    content: public static Task MergeContactsAsync(int sourceContactId, int destinationContactId, bool mergeIdenticalPersons, bool replaceEmptyFieldsOnDestination, bool logOperation, CancellationToken cancellationToken = null)
    parameters:
    - id: sourceContactId
      type: System.Int32
      description: Source contact to merge from
    - id: destinationContactId
      type: System.Int32
      description: Destination contact to merge into
    - id: mergeIdenticalPersons
      type: System.Boolean
      description: Persons with identical names will be merged
    - id: replaceEmptyFieldsOnDestination
      type: System.Boolean
    - id: logOperation
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function MergeContactsAsync(sourceContactId As Integer, destinationContactId As Integer, mergeIdenticalPersons As Boolean, replaceEmptyFieldsOnDestination As Boolean, logOperation As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync(SuperOffice.CRM.Entities.Person,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync(SuperOffice.CRM.Entities.Person,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  id: DisconnectPersonNoSaveAsync(SuperOffice.CRM.Entities.Person,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: DisconnectPersonNoSaveAsync(Person, DateTime, Boolean, CancellationToken)
  nameWithType: EntityManagementFunctions.DisconnectPersonNoSaveAsync(Person, DateTime, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync(SuperOffice.CRM.Entities.Person, System.DateTime, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nDisconnect a person from its contact\n"
  syntax:
    content: public static Task DisconnectPersonNoSaveAsync(Person person, DateTime moveAfterDate, bool logOperation = true, CancellationToken cancellationToken = null)
    parameters:
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: A person entity with update rights, without ERP links
    - id: moveAfterDate
      type: System.DateTime
      description: Only move activites after this date
    - id: logOperation
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function DisconnectPersonNoSaveAsync(person As Person, moveAfterDate As DateTime, logOperation As Boolean = True, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  id: MovePersonAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: MovePersonAsync(Int32, Int32, DateTime, Boolean, CancellationToken)
  nameWithType: EntityManagementFunctions.MovePersonAsync(Int32, Int32, DateTime, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync(System.Int32, System.Int32, System.DateTime, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nMove a person to a specified contact\n"
  syntax:
    content: public static Task MovePersonAsync(int personId, int destinationContactId, DateTime moveAfterDate, bool logOperation, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: destinationContactId
      type: System.Int32
    - id: moveAfterDate
      type: System.DateTime
      description: Only move activites after this date
    - id: logOperation
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function MovePersonAsync(personId As Integer, destinationContactId As Integer, moveAfterDate As DateTime, logOperation As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: MergePersonsAsync(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: MergePersonsAsync(Int32, Int32, DateTime, Boolean, Boolean, Boolean, CancellationToken)
  nameWithType: EntityManagementFunctions.MergePersonsAsync(Int32, Int32, DateTime, Boolean, Boolean, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync(System.Int32, System.Int32, System.DateTime, System.Boolean, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nMerge two persons\n"
  syntax:
    content: public static Task MergePersonsAsync(int sourcePersonId, int destinationPersonId, DateTime moveAfterDate, bool deleteSource, bool replaceEmptyFieldsOnDestination, bool logOperation, CancellationToken cancellationToken = null)
    parameters:
    - id: sourcePersonId
      type: System.Int32
    - id: destinationPersonId
      type: System.Int32
    - id: moveAfterDate
      type: System.DateTime
      description: Only move activities after this date
    - id: deleteSource
      type: System.Boolean
      description: 'If true the source will be deleted instead of retired and activities before moveAfterDate will have their personId set to 0 '
    - id: replaceEmptyFieldsOnDestination
      type: System.Boolean
    - id: logOperation
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function MergePersonsAsync(sourcePersonId As Integer, destinationPersonId As Integer, moveAfterDate As DateTime, deleteSource As Boolean, replaceEmptyFieldsOnDestination As Boolean, logOperation As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync(System.Int32,System.Int32,System.Boolean,System.Action{System.String},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync(System.Int32,System.Int32,System.Boolean,System.Action{System.String},System.Threading.CancellationToken)
  id: UpdateConsentPersonForMergeAsync(System.Int32,System.Int32,System.Boolean,System.Action{System.String},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: UpdateConsentPersonForMergeAsync(Int32, Int32, Boolean, Action<String>, CancellationToken)
  nameWithType: EntityManagementFunctions.UpdateConsentPersonForMergeAsync(Int32, Int32, Boolean, Action<String>, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync(System.Int32, System.Int32, System.Boolean, System.Action<System.String>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task UpdateConsentPersonForMergeAsync(int sourcePersonId, int destinationPersonId, bool deleteSource, Action<string> markAsManuallyHandled, CancellationToken cancellationToken = null)
    parameters:
    - id: sourcePersonId
      type: System.Int32
    - id: destinationPersonId
      type: System.Int32
    - id: deleteSource
      type: System.Boolean
    - id: markAsManuallyHandled
      type: System.Action{System.String}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function UpdateConsentPersonForMergeAsync(sourcePersonId As Integer, destinationPersonId As Integer, deleteSource As Boolean, markAsManuallyHandled As Action(Of String), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync*
  nameWithType.vb: EntityManagementFunctions.UpdateConsentPersonForMergeAsync(Int32, Int32, Boolean, Action(Of String), CancellationToken)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync(System.Int32, System.Int32, System.Boolean, System.Action(Of System.String), System.Threading.CancellationToken)
  name.vb: UpdateConsentPersonForMergeAsync(Int32, Int32, Boolean, Action(Of String), CancellationToken)
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: MergeProjectsAsync(System.Int32,System.Int32,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: MergeProjectsAsync(Int32, Int32, Boolean, Boolean, CancellationToken)
  nameWithType: EntityManagementFunctions.MergeProjectsAsync(Int32, Int32, Boolean, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync(System.Int32, System.Int32, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nMerge two projects\n"
  syntax:
    content: public static Task MergeProjectsAsync(int sourceProjectId, int destinationProjectId, bool replaceEmptyFieldsOnDestination, bool logOperation, CancellationToken cancellationToken = null)
    parameters:
    - id: sourceProjectId
      type: System.Int32
    - id: destinationProjectId
      type: System.Int32
    - id: replaceEmptyFieldsOnDestination
      type: System.Boolean
      description: Fill in empty fields on destination from source
    - id: logOperation
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function MergeProjectsAsync(sourceProjectId As Integer, destinationProjectId As Integer, replaceEmptyFieldsOnDestination As Boolean, logOperation As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync(System.Int32,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync(System.Int32,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  id: CopyContactAsync(System.Int32,System.String,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.EntityManagementFunctions
  langs:
  - csharp
  - vb
  name: CopyContactAsync(Int32, String, String, Boolean, CancellationToken)
  nameWithType: EntityManagementFunctions.CopyContactAsync(Int32, String, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync(System.Int32, System.String, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: "\nCopy a contact. Activities and related data will be ignored\n"
  syntax:
    content: public static Task<int> CopyContactAsync(int sourceContactId, string destinationContactName, string destinationContactDepartment, bool copyPersons, CancellationToken cancellationToken = null)
    parameters:
    - id: sourceContactId
      type: System.Int32
    - id: destinationContactName
      type: System.String
      description: The name of the destination contact
    - id: destinationContactDepartment
      type: System.String
    - id: copyPersons
      type: System.Boolean
      description: If true, persons will be copied from source contact
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: Id of copied contact
    content.vb: Public Shared Function CopyContactAsync(sourceContactId As Integer, destinationContactName As String, destinationContactDepartment As String, copyPersons As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync
  isExternal: true
  name: PerformOperationFromLogAsync
  nameWithType: EntityManagementFunctions.PerformOperationFromLogAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.PerformOperationFromLogAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync
  isExternal: true
  name: MergeContactsAsync
  nameWithType: EntityManagementFunctions.MergeContactsAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeContactsAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync
  isExternal: true
  name: DisconnectPersonNoSaveAsync
  nameWithType: EntityManagementFunctions.DisconnectPersonNoSaveAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.DisconnectPersonNoSaveAsync
- uid: SuperOffice.CRM.Entities.Person
  commentId: T:SuperOffice.CRM.Entities.Person
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Entities.Person
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync
  isExternal: true
  name: MovePersonAsync
  nameWithType: EntityManagementFunctions.MovePersonAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MovePersonAsync
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync
  isExternal: true
  name: MergePersonsAsync
  nameWithType: EntityManagementFunctions.MergePersonsAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MergePersonsAsync
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync
  isExternal: true
  name: UpdateConsentPersonForMergeAsync
  nameWithType: EntityManagementFunctions.UpdateConsentPersonForMergeAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.UpdateConsentPersonForMergeAsync
- uid: System.Action{System.String}
  commentId: '!:System.Action{System.String}'
  definition: System.Action`1
  name: Action<String>
  nameWithType: Action<String>
  fullName: System.Action<System.String>
  nameWithType.vb: Action(Of String)
  fullName.vb: System.Action(Of System.String)
  name.vb: Action(Of String)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: System.Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync
  isExternal: true
  name: MergeProjectsAsync
  nameWithType: EntityManagementFunctions.MergeProjectsAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.MergeProjectsAsync
- uid: SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync*
  commentId: Overload:SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync
  isExternal: true
  name: CopyContactAsync
  nameWithType: EntityManagementFunctions.CopyContactAsync
  fullName: SuperOffice.CRM.Entities.EntityManagementFunctions.CopyContactAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
