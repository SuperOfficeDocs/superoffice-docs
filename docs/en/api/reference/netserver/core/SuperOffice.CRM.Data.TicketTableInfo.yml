### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.TicketTableInfo
  commentId: T:SuperOffice.CRM.Data.TicketTableInfo
  id: TicketTableInfo
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.TicketTableInfo.Activate
  - SuperOffice.CRM.Data.TicketTableInfo.AlertLevel
  - SuperOffice.CRM.Data.TicketTableInfo.AlertStop
  - SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout
  - SuperOffice.CRM.Data.TicketTableInfo.Author
  - SuperOffice.CRM.Data.TicketTableInfo.Category
  - SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory
  - SuperOffice.CRM.Data.TicketTableInfo.ClosedAt
  - SuperOffice.CRM.Data.TicketTableInfo.ConnectId
  - SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket
  - SuperOffice.CRM.Data.TicketTableInfo.ContactId
  - SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact
  - SuperOffice.CRM.Data.TicketTableInfo.CreatedAt
  - SuperOffice.CRM.Data.TicketTableInfo.CreatedBy
  - SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  - SuperOffice.CRM.Data.TicketTableInfo.CustId
  - SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person
  - SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId
  - SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  - SuperOffice.CRM.Data.TicketTableInfo.DbiKey
  - SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified
  - SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized
  - SuperOffice.CRM.Data.TicketTableInfo.Deadline
  - SuperOffice.CRM.Data.TicketTableInfo.Definition
  - SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableName
  - SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber
  - SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter
  - SuperOffice.CRM.Data.TicketTableInfo.FilterAddress
  - SuperOffice.CRM.Data.TicketTableInfo.FilterId
  - SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter
  - SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner
  - SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser
  - SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId
  - SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  - SuperOffice.CRM.Data.TicketTableInfo.FromAddress
  - SuperOffice.CRM.Data.TicketTableInfo.HasAttachment
  - SuperOffice.CRM.Data.TicketTableInfo.Language
  - SuperOffice.CRM.Data.TicketTableInfo.LastChanged
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  - SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.NumMessages
  - SuperOffice.CRM.Data.TicketTableInfo.NumReplies
  - SuperOffice.CRM.Data.TicketTableInfo.OrigCategory
  - SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  - SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId
  - SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  - SuperOffice.CRM.Data.TicketTableInfo.Origin
  - SuperOffice.CRM.Data.TicketTableInfo.OrigPriority
  - SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  - SuperOffice.CRM.Data.TicketTableInfo.OwnedBy
  - SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  - SuperOffice.CRM.Data.TicketTableInfo.Priority
  - SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority
  - SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer
  - SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner
  - SuperOffice.CRM.Data.TicketTableInfo.ReadStatus
  - SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally
  - SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally
  - SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue
  - SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose
  - SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply
  - SuperOffice.CRM.Data.TicketTableInfo.RepliedAt
  - SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition
  - SuperOffice.CRM.Data.TicketTableInfo.Sentiment
  - SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence
  - SuperOffice.CRM.Data.TicketTableInfo.Slevel
  - SuperOffice.CRM.Data.TicketTableInfo.Status
  - SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId
  - SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  - SuperOffice.CRM.Data.TicketTableInfo.Tags
  - SuperOffice.CRM.Data.TicketTableInfo.TicketId
  - SuperOffice.CRM.Data.TicketTableInfo.TicketStatus
  - SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  - SuperOffice.CRM.Data.TicketTableInfo.TicketType
  - SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType
  - SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated
  - SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally
  - SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally
  - SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue
  - SuperOffice.CRM.Data.TicketTableInfo.TimeToClose
  - SuperOffice.CRM.Data.TicketTableInfo.TimeToReply
  - SuperOffice.CRM.Data.TicketTableInfo.Title
  langs:
  - csharp
  - vb
  name: TicketTableInfo
  nameWithType: TicketTableInfo
  fullName: SuperOffice.CRM.Data.TicketTableInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable &apos;ticket&apos;: This table contains the tickets (requests) of the system. Its purpose should be evident.\n"
  remarks: "\nAn instance of this class represents one instance of this table in an SQL statement. In most\ncases each table appears only once in a SELECT, but in cases where you need to self-join, or\nthere are multiple occurrences for other reasons (typically additional restrictions in the joins),\nthen you will need multiple instances. <br />\nInstances of this class are created by calling <see cref=\"!:TablesInfo.GetTicketInfo()\"></see>.\n"
  syntax:
    content: >-
      [DatabaseTable("ticket")]

      public class TicketTableInfo : TableInfo, ICloneable
    content.vb: >-
      <DatabaseTable("ticket")>

      Public Class TicketTableInfo
          Inherits TableInfo
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.TableInfo
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.TableInfo.ToString
  - SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.Data.SQL.TableInfo.Clone
  - SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  - SuperOffice.Data.SQL.TableInfo.ProtAll
  - SuperOffice.Data.SQL.TableInfo.HashCheckFields
  - SuperOffice.Data.SQL.TableInfo.TableName
  - SuperOffice.Data.SQL.TableInfo.DbName
  - SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  - SuperOffice.Data.SQL.TableInfo.All
  - SuperOffice.Data.SQL.TableInfo.Item(System.String)
  - SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Data.TicketTableInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.TicketTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.SQL.DatabaseTableAttribute
    ctor: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ticket
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableName
  commentId: F:SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableName
  id: DictionaryTableName
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableName
  nameWithType: TicketTableInfo.DictionaryTableName
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nConceptual name of table Ticket in the database dictionary: ticket\n"
  syntax:
    content: public const string DictionaryTableName = "ticket"
    return:
      type: System.String
    content.vb: Public Const DictionaryTableName As String = "ticket"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber
  id: DictionaryTableNumber
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableNumber
  nameWithType: TicketTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable number for table Ticket in the database dictionary; potentially changes between databases, but\nalways the same over the lifetime of any single database\n"
  syntax:
    content: public int DictionaryTableNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DictionaryTableNumber As Integer
  overload: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition
  id: RuntimeDefinition
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RuntimeDefinition
  nameWithType: TicketTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: >-
      [Obsolete("Use instance property Definition or static member DictionaryTableNumber", true)]

      public static SoTable RuntimeDefinition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: >-
      <Obsolete("Use instance property Definition or static member DictionaryTableNumber", True)>

      Public Shared ReadOnly Property RuntimeDefinition As SoTable
  overload: SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use instance property Definition or static member DictionaryTableNumber
    - type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Definition
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Definition
  id: Definition
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: TicketTableInfo.Definition
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Definition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: public override SoTable Definition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Overrides ReadOnly Property Definition As SoTable
  overridden: SuperOffice.Data.SQL.TableInfo.Definition
  overload: SuperOffice.CRM.Data.TicketTableInfo.Definition*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TicketId
  id: TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TicketId
  nameWithType: TicketTableInfo.TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;id&apos; in table &apos;ticket&apos;: Dictionary type PK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe primary key (auto-incremented)\n"
  syntax:
    content: public Int32FieldInfo TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TicketId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ConnectId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ConnectId
  id: ConnectId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ConnectId
  nameWithType: TicketTableInfo.ConnectId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ConnectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;connect_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIf a ticket is connected to another ticket, this field is set to the id of the &apos;master&apos; ticket.\n"
  syntax:
    content: public Int32FieldInfo ConnectId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ConnectId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.ConnectId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Title
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Title
  id: Title
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TicketTableInfo.Title
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Title
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;title&apos; in table &apos;ticket&apos;: Dictionary type String[256], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe title of the ticket.\n"
  syntax:
    content: public StringFieldInfo Title { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Title As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Title*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.CreatedAt
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.CreatedAt
  id: CreatedAt
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: TicketTableInfo.CreatedAt
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CreatedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;created_at&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhen the ticket was created.\n"
  syntax:
    content: public DateTimeFieldInfo CreatedAt { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property CreatedAt As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.CreatedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LastChanged
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LastChanged
  id: LastChanged
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LastChanged
  nameWithType: TicketTableInfo.LastChanged
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LastChanged
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;last_changed&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe last time the ticket was modified.\n"
  syntax:
    content: public DateTimeFieldInfo LastChanged { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property LastChanged As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.LastChanged*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Activate
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Activate
  id: Activate
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Activate
  nameWithType: TicketTableInfo.Activate
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Activate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;activate&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhen the ticket should be activated, if it is postponed.\n"
  syntax:
    content: public DateTimeFieldInfo Activate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Activate As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Activate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ClosedAt
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ClosedAt
  id: ClosedAt
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ClosedAt
  nameWithType: TicketTableInfo.ClosedAt
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ClosedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;closed_at&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhen the ticket was closed.\n"
  syntax:
    content: public DateTimeFieldInfo ClosedAt { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property ClosedAt As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.ClosedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.CreatedBy
  id: CreatedBy
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: TicketTableInfo.CreatedBy
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;created_by&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe id of the user who created the ticket. 1 (system user) if the ticket was created externally\n"
  syntax:
    content: public Int32FieldInfo CreatedBy { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property CreatedBy As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Author
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Author
  id: Author
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: TicketTableInfo.Author
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Author
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;author&apos; in table &apos;ticket&apos;: Dictionary type String[256], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nA string representing the author of the ticket (same as author of first message).\n"
  syntax:
    content: public StringFieldInfo Author { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Author As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Author*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OwnedBy
  id: OwnedBy
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OwnedBy
  nameWithType: TicketTableInfo.OwnedBy
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;owned_by&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe id of the user who owns the ticket. 1 (system user) if the ticket is unassigned.\n"
  syntax:
    content: public Int32FieldInfo OwnedBy { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property OwnedBy As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Category
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Category
  id: Category
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: TicketTableInfo.Category
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Category
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;category&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe id of the category a ticket is in.\n"
  syntax:
    content: public Int32FieldInfo Category { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property Category As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Category*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OrigCategory
  id: OrigCategory
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OrigCategory
  nameWithType: TicketTableInfo.OrigCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;orig_category&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe id of the category the ticket was posted to.\n"
  syntax:
    content: public Int32FieldInfo OrigCategory { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property OrigCategory As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Slevel
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Slevel
  id: Slevel
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Slevel
  nameWithType: TicketTableInfo.Slevel
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Slevel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;slevel&apos; in table &apos;ticket&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.TicketSecurityLevel\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe securitylevel of the ticket.\n"
  syntax:
    content: public TicketSecurityLevelFieldInfo Slevel { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TicketSecurityLevelFieldInfo
    content.vb: Public ReadOnly Property Slevel As TicketSecurityLevelFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Slevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Status
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Status
  id: Status
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: TicketTableInfo.Status
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;status&apos; in table &apos;ticket&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.TicketBaseStatus\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe status of the ticket. I.e. active/closed/postponed/deleted\n"
  syntax:
    content: public TicketBaseStatusFieldInfo Status { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TicketBaseStatusFieldInfo
    content.vb: Public ReadOnly Property Status As TicketBaseStatusFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Status*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TicketStatus
  id: TicketStatus
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TicketStatus
  nameWithType: TicketTableInfo.TicketStatus
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;ticket_status&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nUser defined ticket status\n"
  syntax:
    content: public Int32FieldInfo TicketStatus { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TicketStatus As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.CustId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.CustId
  id: CustId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: CustId
  nameWithType: TicketTableInfo.CustId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CustId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;cust_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe reference to the customer. NULL or -1 if ticket is not connected to customer.\n"
  syntax:
    content: public Int32FieldInfo CustId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property CustId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.CustId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Priority
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Priority
  id: Priority
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: TicketTableInfo.Priority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Priority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;priority&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe reference to the ticket_priority table.\n"
  syntax:
    content: public Int32FieldInfo Priority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property Priority As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Priority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OrigPriority
  id: OrigPriority
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OrigPriority
  nameWithType: TicketTableInfo.OrigPriority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;orig_priority&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe reference to the initial priority for the ticket.\n"
  syntax:
    content: public Int32FieldInfo OrigPriority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property OrigPriority As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.AlertLevel
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.AlertLevel
  id: AlertLevel
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: AlertLevel
  nameWithType: TicketTableInfo.AlertLevel
  fullName: SuperOffice.CRM.Data.TicketTableInfo.AlertLevel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;alert_level&apos; in table &apos;ticket&apos;: Dictionary type Short, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe alert level for the ticket. Matches the level value of the ticket_alert table.\n"
  syntax:
    content: public Int16FieldInfo AlertLevel { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int16FieldInfo
    content.vb: Public ReadOnly Property AlertLevel As Int16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.AlertLevel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout
  id: AlertTimeout
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: AlertTimeout
  nameWithType: TicketTableInfo.AlertTimeout
  fullName: SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;alert_timeout&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe datetime for when the ticket should jump to the next alert_level.\n"
  syntax:
    content: public DateTimeFieldInfo AlertTimeout { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property AlertTimeout As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.AlertStop
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.AlertStop
  id: AlertStop
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: AlertStop
  nameWithType: TicketTableInfo.AlertStop
  fullName: SuperOffice.CRM.Data.TicketTableInfo.AlertStop
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;alert_stop&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIf the esclatation was stopped, this fields indicates how many seconds left before the next escalation level. -1 if escalation is running.\n"
  syntax:
    content: public Int32FieldInfo AlertStop { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property AlertStop As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.AlertStop*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner
  id: ReadByOwner
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ReadByOwner
  nameWithType: TicketTableInfo.ReadByOwner
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;read_by_owner&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe datetime for when the ticket last was read by the owner.\n"
  syntax:
    content: public DateTimeFieldInfo ReadByOwner { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property ReadByOwner As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner
  id: FirstReadByOwner
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FirstReadByOwner
  nameWithType: TicketTableInfo.FirstReadByOwner
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;first_read_by_owner&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe datetime for when the ticket first was read by the current owner.\n"
  syntax:
    content: public DateTimeFieldInfo FirstReadByOwner { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property FirstReadByOwner As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser
  id: FirstReadByUser
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FirstReadByUser
  nameWithType: TicketTableInfo.FirstReadByUser
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;first_read_by_user&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe datetime for when the ticket first was read by a user.\n"
  syntax:
    content: public DateTimeFieldInfo FirstReadByUser { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property FirstReadByUser As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer
  id: ReadByCustomer
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ReadByCustomer
  nameWithType: TicketTableInfo.ReadByCustomer
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;read_by_customer&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe datetime for when the ticket was read by the customer.\n"
  syntax:
    content: public DateTimeFieldInfo ReadByCustomer { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property ReadByCustomer As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FilterId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FilterId
  id: FilterId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FilterId
  nameWithType: TicketTableInfo.FilterId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FilterId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;filter_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe reference to the mailbox from which the ticket was created. NULL or -1 if the ticket was not created by a mailbox.\n"
  syntax:
    content: public Int32FieldInfo FilterId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property FilterId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.FilterId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter
  id: DisplayFilter
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DisplayFilter
  nameWithType: TicketTableInfo.DisplayFilter
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;display_filter&apos; in table &apos;ticket&apos;: Dictionary type String[256], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe name of the mailbox from which the ticket was created. Only for displaypurposes\n"
  syntax:
    content: public StringFieldInfo DisplayFilter { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property DisplayFilter As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RepliedAt
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RepliedAt
  id: RepliedAt
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RepliedAt
  nameWithType: TicketTableInfo.RepliedAt
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RepliedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;replied_at&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe datetime for when the ticket was replied to. I.e. the first external message added to the ticket.\n"
  syntax:
    content: public DateTimeFieldInfo RepliedAt { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property RepliedAt As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.RepliedAt*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeToReply
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TimeToReply
  id: TimeToReply
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TimeToReply
  nameWithType: TicketTableInfo.TimeToReply
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeToReply
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;time_to_reply&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe time (minutes) between when the ticket was created and when it was replied to. Calculated based on priority&apos;s timeframe.\n"
  syntax:
    content: public Int32FieldInfo TimeToReply { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TimeToReply As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TimeToReply*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeToClose
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TimeToClose
  id: TimeToClose
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TimeToClose
  nameWithType: TicketTableInfo.TimeToClose
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeToClose
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;time_to_close&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe time (minutes) between when the ticket was created and when it was closed. Calculated based on priority&apos;s timeframe.\n"
  syntax:
    content: public Int32FieldInfo TimeToClose { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TimeToClose As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TimeToClose*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply
  id: RealTimeToReply
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RealTimeToReply
  nameWithType: TicketTableInfo.RealTimeToReply
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;real_time_to_reply&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSame as time_to_reply, but not calculated based on priority.\n"
  syntax:
    content: public Int32FieldInfo RealTimeToReply { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RealTimeToReply As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose
  id: RealTimeToClose
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RealTimeToClose
  nameWithType: TicketTableInfo.RealTimeToClose
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;real_time_to_close&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSame as time_to_close, but not calculated based on priority.\n"
  syntax:
    content: public Int32FieldInfo RealTimeToClose { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RealTimeToClose As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ReadStatus
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ReadStatus
  id: ReadStatus
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ReadStatus
  nameWithType: TicketTableInfo.ReadStatus
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ReadStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;read_status&apos; in table &apos;ticket&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.TicketReadStatus\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhether the owner has read the ticket or not (red, yellow, green).\n"
  syntax:
    content: public TicketReadStatusFieldInfo ReadStatus { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TicketReadStatusFieldInfo
    content.vb: Public ReadOnly Property ReadStatus As TicketReadStatusFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.ReadStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.HasAttachment
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.HasAttachment
  id: HasAttachment
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: HasAttachment
  nameWithType: TicketTableInfo.HasAttachment
  fullName: SuperOffice.CRM.Data.TicketTableInfo.HasAttachment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;has_attachment&apos; in table &apos;ticket&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nBoolean indicating if this ticket has one or more attachments.\n"
  syntax:
    content: public UInt16FieldInfo HasAttachment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property HasAttachment As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.HasAttachment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Deadline
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Deadline
  id: Deadline
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Deadline
  nameWithType: TicketTableInfo.Deadline
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Deadline
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;deadline&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDeadline for ticket.\n"
  syntax:
    content: public DateTimeFieldInfo Deadline { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Deadline As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Deadline*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FilterAddress
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FilterAddress
  id: FilterAddress
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FilterAddress
  nameWithType: TicketTableInfo.FilterAddress
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FilterAddress
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;filter_address&apos; in table &apos;ticket&apos;: Dictionary type String[256], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nAddress of receiving filter (mail box)\n"
  syntax:
    content: public StringFieldInfo FilterAddress { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property FilterAddress As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.FilterAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId
  id: DbiAgentId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DbiAgentId
  nameWithType: TicketTableInfo.DbiAgentId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;dbi_agent_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIntegration agent (eJournal)\n"
  syntax:
    content: public Int32FieldInfo DbiAgentId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property DbiAgentId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiKey
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DbiKey
  id: DbiKey
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DbiKey
  nameWithType: TicketTableInfo.DbiKey
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;dbi_key&apos; in table &apos;ticket&apos;: Dictionary type String[256], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe primary key for the integrated entry in the external datasource.\n"
  syntax:
    content: public StringFieldInfo DbiKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property DbiKey As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.DbiKey*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized
  id: DbiLastSyncronized
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DbiLastSyncronized
  nameWithType: TicketTableInfo.DbiLastSyncronized
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;dbi_last_syncronized&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast external synchronization.\n"
  syntax:
    content: public DateTimeFieldInfo DbiLastSyncronized { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property DbiLastSyncronized As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified
  id: DbiLastModified
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DbiLastModified
  nameWithType: TicketTableInfo.DbiLastModified
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;dbi_last_modified&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhen the entry was last modified.\n"
  syntax:
    content: public DateTimeFieldInfo DbiLastModified { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property DbiLastModified As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Origin
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Origin
  id: Origin
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: TicketTableInfo.Origin
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Origin
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;origin&apos; in table &apos;ticket&apos;: Dictionary type Enum, .NET type: <xref href=\"SuperOffice.Data.TicketOrigin\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhat is the origin of this ticket\n"
  syntax:
    content: public TicketOriginFieldInfo Origin { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TicketOriginFieldInfo
    content.vb: Public ReadOnly Property Origin As TicketOriginFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Origin*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally
  id: TimeSpentInternally
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TimeSpentInternally
  nameWithType: TicketTableInfo.TimeSpentInternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;time_spent_internally&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total time (seconds) within the priority&apos;s office hours the ticket has been in an open status (configurable), not including current state\n"
  syntax:
    content: public Int32FieldInfo TimeSpentInternally { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TimeSpentInternally As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally
  id: TimeSpentExternally
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TimeSpentExternally
  nameWithType: TicketTableInfo.TimeSpentExternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;time_spent_externally&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total time (seconds) within the priority&apos;s office hours the ticket has been in a external waiting status (configurable), not including current state\n"
  syntax:
    content: public Int32FieldInfo TimeSpentExternally { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TimeSpentExternally As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue
  id: TimeSpentQueue
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TimeSpentQueue
  nameWithType: TicketTableInfo.TimeSpentQueue
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;time_spent_queue&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total time (seconds) within the priority&apos;s office hours the ticket has been in a queue status, not including current state\n"
  syntax:
    content: public Int32FieldInfo TimeSpentQueue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TimeSpentQueue As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally
  id: RealTimeSpentInternally
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RealTimeSpentInternally
  nameWithType: TicketTableInfo.RealTimeSpentInternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;real_time_spent_internally&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total time (seconds) within 24x7 the ticket has been in an open status (configurable), not including current state\n"
  syntax:
    content: public Int32FieldInfo RealTimeSpentInternally { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RealTimeSpentInternally As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally
  id: RealTimeSpentExternally
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RealTimeSpentExternally
  nameWithType: TicketTableInfo.RealTimeSpentExternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;real_time_spent_externally&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total time (seconds) within 24x7 the ticket has been in a external waiting status (configurable), not including current state\n"
  syntax:
    content: public Int32FieldInfo RealTimeSpentExternally { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RealTimeSpentExternally As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue
  id: RealTimeSpentQueue
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: RealTimeSpentQueue
  nameWithType: TicketTableInfo.RealTimeSpentQueue
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;real_time_spent_queue&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total time (seconds) within 24x7 hours the ticket has been in a queue status, not including current state\n"
  syntax:
    content: public Int32FieldInfo RealTimeSpentQueue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RealTimeSpentQueue As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated
  id: TimeSpentCalculated
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TimeSpentCalculated
  nameWithType: TicketTableInfo.TimeSpentCalculated
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;time_spent_calculated&apos; in table &apos;ticket&apos;: Dictionary type DateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWhen the time_spent value was last calculated.\n"
  syntax:
    content: public DateTimeFieldInfo TimeSpentCalculated { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property TimeSpentCalculated As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.NumReplies
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.NumReplies
  id: NumReplies
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: NumReplies
  nameWithType: TicketTableInfo.NumReplies
  fullName: SuperOffice.CRM.Data.TicketTableInfo.NumReplies
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;num_replies&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe number of replies (messages) to the customer for this request.\n"
  syntax:
    content: public Int32FieldInfo NumReplies { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property NumReplies As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.NumReplies*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.NumMessages
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.NumMessages
  id: NumMessages
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: NumMessages
  nameWithType: TicketTableInfo.NumMessages
  fullName: SuperOffice.CRM.Data.TicketTableInfo.NumMessages
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;num_messages&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe total number of messages for this request.\n"
  syntax:
    content: public Int32FieldInfo NumMessages { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property NumMessages As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.NumMessages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketType
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TicketType
  id: TicketType
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TicketType
  nameWithType: TicketTableInfo.TicketType
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;ticket_type&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nTicket type\n"
  syntax:
    content: public Int32FieldInfo TicketType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TicketType As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.TicketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FromAddress
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FromAddress
  id: FromAddress
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FromAddress
  nameWithType: TicketTableInfo.FromAddress
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FromAddress
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;from_address&apos; in table &apos;ticket&apos;: Dictionary type String[4001], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe from-address used when this ticket got created, e.g. by email\n"
  syntax:
    content: public StringFieldInfo FromAddress { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property FromAddress As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.FromAddress*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Tags
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Tags
  id: Tags
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: TicketTableInfo.Tags
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Tags
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;tags&apos; in table &apos;ticket&apos;: Dictionary type FKArray, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nArray of references to the Tags records\n"
  syntax:
    content: public Int32ArrayFieldInfo Tags { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32ArrayFieldInfo
    content.vb: Public ReadOnly Property Tags As Int32ArrayFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Tags*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ContactId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: TicketTableInfo.ContactId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;contact_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe company of the person in the cust_id field, if that person belongs to a company\n"
  syntax:
    content: public Int32FieldInfo ContactId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ContactId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.ContactId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Language
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Language
  id: Language
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: TicketTableInfo.Language
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Language
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;language&apos; in table &apos;ticket&apos;: Dictionary type String[11], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe language of the first external message\n"
  syntax:
    content: public StringFieldInfo Language { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Language As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Language*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Sentiment
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Sentiment
  id: Sentiment
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Sentiment
  nameWithType: TicketTableInfo.Sentiment
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Sentiment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;sentiment&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe sentiment index of the last external message\n"
  syntax:
    content: public Int32FieldInfo Sentiment { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property Sentiment As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.Sentiment*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence
  id: SentimentConfidence
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: SentimentConfidence
  nameWithType: TicketTableInfo.SentimentConfidence
  fullName: SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;sentimentConfidence&apos; in table &apos;ticket&apos;: Dictionary type Int, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe sentiment confidence of the last external message\n"
  syntax:
    content: public Int32FieldInfo SentimentConfidence { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SentimentConfidence As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId
  id: FormSubmissionId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FormSubmissionId
  nameWithType: TicketTableInfo.FormSubmissionId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;form_submission_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIf this ticket was created from a form submission, this field will point to that record\n"
  syntax:
    content: public Int32FieldInfo FormSubmissionId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property FormSubmissionId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId
  id: SuggestedCategoryId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: SuggestedCategoryId
  nameWithType: TicketTableInfo.SuggestedCategoryId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;suggestedCategory_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSuggestion for categorization, based on the text of the message (AI)\n"
  syntax:
    content: public Int32FieldInfo SuggestedCategoryId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property SuggestedCategoryId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId
  id: OrigHumanCategoryId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OrigHumanCategoryId
  nameWithType: TicketTableInfo.OrigHumanCategoryId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;origHumanCategory_id&apos; in table &apos;ticket&apos;: Dictionary type FK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nWill contain the category id selected by the user, when having the choice of using the suggested category or manually selecting a category\n"
  syntax:
    content: public Int32FieldInfo OrigHumanCategoryId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property OrigHumanCategoryId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket
  id: ConnectId_InnerJoin_Ticket
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ConnectId_InnerJoin_Ticket
  nameWithType: TicketTableInfo.ConnectId_InnerJoin_Ticket
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ConnectId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketTableInfo> ConnectId_InnerJoin_Ticket { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketTableInfo}
    content.vb: Public ReadOnly Property ConnectId_InnerJoin_Ticket As TargetedInnerJoin(Of TicketTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  id: CreatedBy_InnerJoin_Ejuser
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: CreatedBy_InnerJoin_Ejuser
  nameWithType: TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key CreatedBy in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EjuserTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EjuserTableInfo> CreatedBy_InnerJoin_Ejuser { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjuserTableInfo}
    content.vb: Public ReadOnly Property CreatedBy_InnerJoin_Ejuser As TargetedInnerJoin(Of EjuserTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  id: OwnedBy_InnerJoin_Ejuser
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OwnedBy_InnerJoin_Ejuser
  nameWithType: TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key OwnedBy in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EjuserTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EjuserTableInfo> OwnedBy_InnerJoin_Ejuser { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjuserTableInfo}
    content.vb: Public ReadOnly Property OwnedBy_InnerJoin_Ejuser As TargetedInnerJoin(Of EjuserTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory
  id: Category_InnerJoin_EjCategory
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Category_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.Category_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key Category in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EjCategoryTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EjCategoryTableInfo> Category_InnerJoin_EjCategory { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjCategoryTableInfo}
    content.vb: Public ReadOnly Property Category_InnerJoin_EjCategory As TargetedInnerJoin(Of EjCategoryTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  id: OrigCategory_InnerJoin_EjCategory
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OrigCategory_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key OrigCategory in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EjCategoryTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EjCategoryTableInfo> OrigCategory_InnerJoin_EjCategory { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjCategoryTableInfo}
    content.vb: Public ReadOnly Property OrigCategory_InnerJoin_EjCategory As TargetedInnerJoin(Of EjCategoryTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  id: TicketStatus_InnerJoin_TicketStatus
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TicketStatus_InnerJoin_TicketStatus
  nameWithType: TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key TicketStatus in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketStatusTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketStatusTableInfo> TicketStatus_InnerJoin_TicketStatus { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketStatusTableInfo}
    content.vb: Public ReadOnly Property TicketStatus_InnerJoin_TicketStatus As TargetedInnerJoin(Of TicketStatusTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person
  id: CustId_InnerJoin_Person
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: CustId_InnerJoin_Person
  nameWithType: TicketTableInfo.CustId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key CustId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.PersonTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<PersonTableInfo> CustId_InnerJoin_Person { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
    content.vb: Public ReadOnly Property CustId_InnerJoin_Person As TargetedInnerJoin(Of PersonTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority
  id: Priority_InnerJoin_TicketPriority
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: Priority_InnerJoin_TicketPriority
  nameWithType: TicketTableInfo.Priority_InnerJoin_TicketPriority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key Priority in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketPriorityTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketPriorityTableInfo> Priority_InnerJoin_TicketPriority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
    content.vb: Public ReadOnly Property Priority_InnerJoin_TicketPriority As TargetedInnerJoin(Of TicketPriorityTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  id: OrigPriority_InnerJoin_TicketPriority
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OrigPriority_InnerJoin_TicketPriority
  nameWithType: TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key OrigPriority in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketPriorityTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketPriorityTableInfo> OrigPriority_InnerJoin_TicketPriority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
    content.vb: Public ReadOnly Property OrigPriority_InnerJoin_TicketPriority As TargetedInnerJoin(Of TicketPriorityTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter
  id: FilterId_InnerJoin_MailInFilter
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FilterId_InnerJoin_MailInFilter
  nameWithType: TicketTableInfo.FilterId_InnerJoin_MailInFilter
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key FilterId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.MailInFilterTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<MailInFilterTableInfo> FilterId_InnerJoin_MailInFilter { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.MailInFilterTableInfo}
    content.vb: Public ReadOnly Property FilterId_InnerJoin_MailInFilter As TargetedInnerJoin(Of MailInFilterTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  id: DbiAgentId_InnerJoin_DbiAgent
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: DbiAgentId_InnerJoin_DbiAgent
  nameWithType: TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key DbiAgentId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.DbiAgentTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<DbiAgentTableInfo> DbiAgentId_InnerJoin_DbiAgent { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DbiAgentTableInfo}
    content.vb: Public ReadOnly Property DbiAgentId_InnerJoin_DbiAgent As TargetedInnerJoin(Of DbiAgentTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType
  id: TicketType_InnerJoin_TicketType
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: TicketType_InnerJoin_TicketType
  nameWithType: TicketTableInfo.TicketType_InnerJoin_TicketType
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key TicketType in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketTypeTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketTypeTableInfo> TicketType_InnerJoin_TicketType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketTypeTableInfo}
    content.vb: Public ReadOnly Property TicketType_InnerJoin_TicketType As TargetedInnerJoin(Of TicketTypeTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact
  id: ContactId_InnerJoin_Contact
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: ContactId_InnerJoin_Contact
  nameWithType: TicketTableInfo.ContactId_InnerJoin_Contact
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ContactId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ContactTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ContactTableInfo> ContactId_InnerJoin_Contact { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
    content.vb: Public ReadOnly Property ContactId_InnerJoin_Contact As TargetedInnerJoin(Of ContactTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  id: FormSubmissionId_InnerJoin_FormSubmission
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: FormSubmissionId_InnerJoin_FormSubmission
  nameWithType: TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key FormSubmissionId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.FormSubmissionTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<FormSubmissionTableInfo> FormSubmissionId_InnerJoin_FormSubmission { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.FormSubmissionTableInfo}
    content.vb: Public ReadOnly Property FormSubmissionId_InnerJoin_FormSubmission As TargetedInnerJoin(Of FormSubmissionTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  id: SuggestedCategoryId_InnerJoin_EjCategory
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: SuggestedCategoryId_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key SuggestedCategoryId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EjCategoryTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EjCategoryTableInfo> SuggestedCategoryId_InnerJoin_EjCategory { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjCategoryTableInfo}
    content.vb: Public ReadOnly Property SuggestedCategoryId_InnerJoin_EjCategory As TargetedInnerJoin(Of EjCategoryTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  id: OrigHumanCategoryId_InnerJoin_EjCategory
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: OrigHumanCategoryId_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key OrigHumanCategoryId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.EjCategoryTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<EjCategoryTableInfo> OrigHumanCategoryId_InnerJoin_EjCategory { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjCategoryTableInfo}
    content.vb: Public ReadOnly Property OrigHumanCategoryId_InnerJoin_EjCategory As TargetedInnerJoin(Of EjCategoryTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  id: LeftOuterJoin_EjMessage_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_EjMessage_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to EjMessage.<xref href=\"SuperOffice.CRM.Data.EjMessageTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<EjMessageTableInfo> LeftOuterJoin_EjMessage_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EjMessageTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_EjMessage_TicketId As TargetedLeftOuterJoin(Of EjMessageTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  id: LeftOuterJoin_TicketStatusHistory_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketStatusHistory_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketStatusHistory.<xref href=\"SuperOffice.CRM.Data.TicketStatusHistoryTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketStatusHistoryTableInfo> LeftOuterJoin_TicketStatusHistory_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketStatusHistoryTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketStatusHistory_TicketId As TargetedLeftOuterJoin(Of TicketStatusHistoryTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  id: LeftOuterJoin_TicketCustomers_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketCustomers_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketCustomers.<xref href=\"SuperOffice.CRM.Data.TicketCustomersTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketCustomersTableInfo> LeftOuterJoin_TicketCustomers_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketCustomersTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketCustomers_TicketId As TargetedLeftOuterJoin(Of TicketCustomersTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  id: LeftOuterJoin_TicketLog_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketLog_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketLog.<xref href=\"SuperOffice.CRM.Data.TicketLogTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketLogTableInfo> LeftOuterJoin_TicketLog_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketLog_TicketId As TargetedLeftOuterJoin(Of TicketLogTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  id: LeftOuterJoin_TicketLogChange_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketLogChange_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketLogChange.<xref href=\"SuperOffice.CRM.Data.TicketLogChangeTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketLogChangeTableInfo> LeftOuterJoin_TicketLogChange_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogChangeTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketLogChange_TicketId As TargetedLeftOuterJoin(Of TicketLogChangeTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  id: LeftOuterJoin_TicketLogAction_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketLogAction_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketLogAction.<xref href=\"SuperOffice.CRM.Data.TicketLogActionTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketLogActionTableInfo> LeftOuterJoin_TicketLogAction_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogActionTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketLogAction_TicketId As TargetedLeftOuterJoin(Of TicketLogActionTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  id: LeftOuterJoin_TicketLogAction_OrgTicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketLogAction_OrgTicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketLogAction.<xref href=\"SuperOffice.CRM.Data.TicketLogActionTableInfo.OrgTicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketLogActionTableInfo> LeftOuterJoin_TicketLogAction_OrgTicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogActionTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketLogAction_OrgTicketId As TargetedLeftOuterJoin(Of TicketLogActionTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId
  id: LeftOuterJoin_Notify_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Notify_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_Notify_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to Notify.<xref href=\"SuperOffice.CRM.Data.NotifyTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<NotifyTableInfo> LeftOuterJoin_Notify_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.NotifyTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Notify_TicketId As TargetedLeftOuterJoin(Of NotifyTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  id: LeftOuterJoin_ChatSession_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_ChatSession_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to ChatSession.<xref href=\"SuperOffice.CRM.Data.ChatSessionTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<ChatSessionTableInfo> LeftOuterJoin_ChatSession_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ChatSessionTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_ChatSession_TicketId As TargetedLeftOuterJoin(Of ChatSessionTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  id: LeftOuterJoin_SShipmentAddr_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_SShipmentAddr_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to SShipmentAddr.<xref href=\"SuperOffice.CRM.Data.SShipmentAddrTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<SShipmentAddrTableInfo> LeftOuterJoin_SShipmentAddr_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SShipmentAddrTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_SShipmentAddr_TicketId As TargetedLeftOuterJoin(Of SShipmentAddrTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  id: LeftOuterJoin_Outbox_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Outbox_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to Outbox.<xref href=\"SuperOffice.CRM.Data.OutboxTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<OutboxTableInfo> LeftOuterJoin_Outbox_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.OutboxTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Outbox_TicketId As TargetedLeftOuterJoin(Of OutboxTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  id: LeftOuterJoin_Hotlist_TicketId
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Hotlist_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to Hotlist.<xref href=\"SuperOffice.CRM.Data.HotlistTableInfo.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<HotlistTableInfo> LeftOuterJoin_Hotlist_TicketId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.HotlistTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Hotlist_TicketId As TargetedLeftOuterJoin(Of HotlistTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  id: LeftOuterJoin_TicketRelation_Source
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketRelation_Source
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketRelation.<xref href=\"SuperOffice.CRM.Data.TicketRelationTableInfo.Source\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketRelationTableInfo> LeftOuterJoin_TicketRelation_Source { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketRelationTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketRelation_Source As TargetedLeftOuterJoin(Of TicketRelationTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  commentId: P:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  id: LeftOuterJoin_TicketRelation_Target
  parent: SuperOffice.CRM.Data.TicketTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketRelation_Target
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketId on this table, to TicketRelation.<xref href=\"SuperOffice.CRM.Data.TicketRelationTableInfo.Target\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketRelationTableInfo> LeftOuterJoin_TicketRelation_Target { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketRelationTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketRelation_Target As TargetedLeftOuterJoin(Of TicketRelationTableInfo)
  overload: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.TableInfo.ToString
  commentId: M:SuperOffice.Data.SQL.TableInfo.ToString
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ToString()
  nameWithType: TableInfo.ToString()
  fullName: SuperOffice.Data.SQL.TableInfo.ToString()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: RegisterFields(FieldInfo[])
  nameWithType: TableInfo.RegisterFields(FieldInfo[])
  fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  nameWithType.vb: TableInfo.RegisterFields(FieldInfo())
  fullName.vb: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo())
  name.vb: RegisterFields(FieldInfo())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FieldInfoFromSoField(SoField)
  nameWithType: TableInfo.FieldInfoFromSoField(SoField)
  fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.Clone
  commentId: M:SuperOffice.Data.SQL.TableInfo.Clone
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Clone()
  nameWithType: TableInfo.Clone()
  fullName: SuperOffice.Data.SQL.TableInfo.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsSameTable(TableInfo)
  nameWithType: TableInfo.IsSameTable(TableInfo)
  fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FindField(String)
  nameWithType: TableInfo.FindField(String)
  fullName: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.ProtAll
  commentId: P:SuperOffice.Data.SQL.TableInfo.ProtAll
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ProtAll
  nameWithType: TableInfo.ProtAll
  fullName: SuperOffice.Data.SQL.TableInfo.ProtAll
- uid: SuperOffice.Data.SQL.TableInfo.HashCheckFields
  commentId: P:SuperOffice.Data.SQL.TableInfo.HashCheckFields
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: HashCheckFields
  nameWithType: TableInfo.HashCheckFields
  fullName: SuperOffice.Data.SQL.TableInfo.HashCheckFields
- uid: SuperOffice.Data.SQL.TableInfo.TableName
  commentId: P:SuperOffice.Data.SQL.TableInfo.TableName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: TableName
  nameWithType: TableInfo.TableName
  fullName: SuperOffice.Data.SQL.TableInfo.TableName
- uid: SuperOffice.Data.SQL.TableInfo.DbName
  commentId: P:SuperOffice.Data.SQL.TableInfo.DbName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: DbName
  nameWithType: TableInfo.DbName
  fullName: SuperOffice.Data.SQL.TableInfo.DbName
- uid: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  commentId: P:SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsDictionaryTable
  nameWithType: TableInfo.IsDictionaryTable
  fullName: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
- uid: SuperOffice.Data.SQL.TableInfo.All
  commentId: P:SuperOffice.Data.SQL.TableInfo.All
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: All
  nameWithType: TableInfo.All
  fullName: SuperOffice.Data.SQL.TableInfo.All
- uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  commentId: P:SuperOffice.Data.SQL.TableInfo.Item(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Item[String]
  nameWithType: TableInfo.Item[String]
  fullName: SuperOffice.Data.SQL.TableInfo.Item[System.String]
  nameWithType.vb: TableInfo.Item(String)
  fullName.vb: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  commentId: P:SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: PrimaryKeyField
  nameWithType: TableInfo.PrimaryKeyField
  fullName: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketTableInfo, To>()
  nameWithType: EnumUtil.MapEnums<TicketTableInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.TicketTableInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketTableInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.TicketTableInfo, To)()
  name.vb: MapEnums(Of TicketTableInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketTableInfo, To>
    nameWithType: EnumUtil.MapEnums<TicketTableInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.TicketTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketTableInfo, To)
    nameWithType: EnumUtil.MapEnums(Of TicketTableInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.TicketTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketTableInfo, To>()
  nameWithType: Converters.MapEnums<TicketTableInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.TicketTableInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketTableInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.TicketTableInfo, To)()
  name.vb: MapEnums(Of TicketTableInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketTableInfo, To>
    nameWithType: Converters.MapEnums<TicketTableInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.TicketTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketTableInfo, To)
    nameWithType: Converters.MapEnums(Of TicketTableInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.TicketTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber
  isExternal: true
  name: DictionaryTableNumber
  nameWithType: TicketTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DictionaryTableNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition
  isExternal: true
  name: RuntimeDefinition
  nameWithType: TicketTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RuntimeDefinition
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.Data.SQL.TableInfo.Definition
  commentId: P:SuperOffice.Data.SQL.TableInfo.Definition
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Definition
  nameWithType: TableInfo.Definition
  fullName: SuperOffice.Data.SQL.TableInfo.Definition
- uid: SuperOffice.CRM.Data.TicketTableInfo.Definition*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Definition
  isExternal: true
  name: Definition
  nameWithType: TicketTableInfo.Definition
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Definition
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TicketId
  isExternal: true
  name: TicketId
  nameWithType: TicketTableInfo.TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketId
- uid: SuperOffice.Data.SQL.Int32FieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32FieldInfo
  nameWithType: Int32FieldInfo
  fullName: SuperOffice.Data.SQL.Int32FieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.ConnectId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ConnectId
  isExternal: true
  name: ConnectId
  nameWithType: TicketTableInfo.ConnectId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ConnectId
- uid: SuperOffice.CRM.Data.TicketTableInfo.Title*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Title
  isExternal: true
  name: Title
  nameWithType: TicketTableInfo.Title
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Title
- uid: SuperOffice.Data.SQL.StringFieldInfo
  commentId: T:SuperOffice.Data.SQL.StringFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: StringFieldInfo
  nameWithType: StringFieldInfo
  fullName: SuperOffice.Data.SQL.StringFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.CreatedAt*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.CreatedAt
  isExternal: true
  name: CreatedAt
  nameWithType: TicketTableInfo.CreatedAt
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CreatedAt
- uid: SuperOffice.Data.SQL.DateTimeFieldInfo
  commentId: T:SuperOffice.Data.SQL.DateTimeFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: DateTimeFieldInfo
  nameWithType: DateTimeFieldInfo
  fullName: SuperOffice.Data.SQL.DateTimeFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.LastChanged*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LastChanged
  isExternal: true
  name: LastChanged
  nameWithType: TicketTableInfo.LastChanged
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LastChanged
- uid: SuperOffice.CRM.Data.TicketTableInfo.Activate*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Activate
  isExternal: true
  name: Activate
  nameWithType: TicketTableInfo.Activate
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Activate
- uid: SuperOffice.CRM.Data.TicketTableInfo.ClosedAt*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ClosedAt
  isExternal: true
  name: ClosedAt
  nameWithType: TicketTableInfo.ClosedAt
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ClosedAt
- uid: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.CreatedBy
  isExternal: true
  name: CreatedBy
  nameWithType: TicketTableInfo.CreatedBy
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy
- uid: SuperOffice.CRM.Data.TicketTableInfo.Author*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Author
  isExternal: true
  name: Author
  nameWithType: TicketTableInfo.Author
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Author
- uid: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OwnedBy
  isExternal: true
  name: OwnedBy
  nameWithType: TicketTableInfo.OwnedBy
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy
- uid: SuperOffice.CRM.Data.TicketTableInfo.Category*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Category
  isExternal: true
  name: Category
  nameWithType: TicketTableInfo.Category
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Category
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OrigCategory
  isExternal: true
  name: OrigCategory
  nameWithType: TicketTableInfo.OrigCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory
- uid: SuperOffice.CRM.Data.TicketTableInfo.Slevel*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Slevel
  isExternal: true
  name: Slevel
  nameWithType: TicketTableInfo.Slevel
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Slevel
- uid: SuperOffice.Data.SQL.TicketSecurityLevelFieldInfo
  commentId: T:SuperOffice.Data.SQL.TicketSecurityLevelFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TicketSecurityLevelFieldInfo
  nameWithType: TicketSecurityLevelFieldInfo
  fullName: SuperOffice.Data.SQL.TicketSecurityLevelFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.Status*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Status
  isExternal: true
  name: Status
  nameWithType: TicketTableInfo.Status
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Status
- uid: SuperOffice.Data.SQL.TicketBaseStatusFieldInfo
  commentId: T:SuperOffice.Data.SQL.TicketBaseStatusFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TicketBaseStatusFieldInfo
  nameWithType: TicketBaseStatusFieldInfo
  fullName: SuperOffice.Data.SQL.TicketBaseStatusFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TicketStatus
  isExternal: true
  name: TicketStatus
  nameWithType: TicketTableInfo.TicketStatus
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus
- uid: SuperOffice.CRM.Data.TicketTableInfo.CustId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.CustId
  isExternal: true
  name: CustId
  nameWithType: TicketTableInfo.CustId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CustId
- uid: SuperOffice.CRM.Data.TicketTableInfo.Priority*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Priority
  isExternal: true
  name: Priority
  nameWithType: TicketTableInfo.Priority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Priority
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OrigPriority
  isExternal: true
  name: OrigPriority
  nameWithType: TicketTableInfo.OrigPriority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority
- uid: SuperOffice.CRM.Data.TicketTableInfo.AlertLevel*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.AlertLevel
  isExternal: true
  name: AlertLevel
  nameWithType: TicketTableInfo.AlertLevel
  fullName: SuperOffice.CRM.Data.TicketTableInfo.AlertLevel
- uid: SuperOffice.Data.SQL.Int16FieldInfo
  commentId: T:SuperOffice.Data.SQL.Int16FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int16FieldInfo
  nameWithType: Int16FieldInfo
  fullName: SuperOffice.Data.SQL.Int16FieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout
  isExternal: true
  name: AlertTimeout
  nameWithType: TicketTableInfo.AlertTimeout
  fullName: SuperOffice.CRM.Data.TicketTableInfo.AlertTimeout
- uid: SuperOffice.CRM.Data.TicketTableInfo.AlertStop*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.AlertStop
  isExternal: true
  name: AlertStop
  nameWithType: TicketTableInfo.AlertStop
  fullName: SuperOffice.CRM.Data.TicketTableInfo.AlertStop
- uid: SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner
  isExternal: true
  name: ReadByOwner
  nameWithType: TicketTableInfo.ReadByOwner
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ReadByOwner
- uid: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner
  isExternal: true
  name: FirstReadByOwner
  nameWithType: TicketTableInfo.FirstReadByOwner
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByOwner
- uid: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser
  isExternal: true
  name: FirstReadByUser
  nameWithType: TicketTableInfo.FirstReadByUser
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FirstReadByUser
- uid: SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer
  isExternal: true
  name: ReadByCustomer
  nameWithType: TicketTableInfo.ReadByCustomer
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ReadByCustomer
- uid: SuperOffice.CRM.Data.TicketTableInfo.FilterId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FilterId
  isExternal: true
  name: FilterId
  nameWithType: TicketTableInfo.FilterId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FilterId
- uid: SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter
  isExternal: true
  name: DisplayFilter
  nameWithType: TicketTableInfo.DisplayFilter
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DisplayFilter
- uid: SuperOffice.CRM.Data.TicketTableInfo.RepliedAt*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RepliedAt
  isExternal: true
  name: RepliedAt
  nameWithType: TicketTableInfo.RepliedAt
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RepliedAt
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeToReply*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TimeToReply
  isExternal: true
  name: TimeToReply
  nameWithType: TicketTableInfo.TimeToReply
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeToReply
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeToClose*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TimeToClose
  isExternal: true
  name: TimeToClose
  nameWithType: TicketTableInfo.TimeToClose
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeToClose
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply
  isExternal: true
  name: RealTimeToReply
  nameWithType: TicketTableInfo.RealTimeToReply
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToReply
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose
  isExternal: true
  name: RealTimeToClose
  nameWithType: TicketTableInfo.RealTimeToClose
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeToClose
- uid: SuperOffice.CRM.Data.TicketTableInfo.ReadStatus*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ReadStatus
  isExternal: true
  name: ReadStatus
  nameWithType: TicketTableInfo.ReadStatus
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ReadStatus
- uid: SuperOffice.Data.SQL.TicketReadStatusFieldInfo
  commentId: T:SuperOffice.Data.SQL.TicketReadStatusFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TicketReadStatusFieldInfo
  nameWithType: TicketReadStatusFieldInfo
  fullName: SuperOffice.Data.SQL.TicketReadStatusFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.HasAttachment*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.HasAttachment
  isExternal: true
  name: HasAttachment
  nameWithType: TicketTableInfo.HasAttachment
  fullName: SuperOffice.CRM.Data.TicketTableInfo.HasAttachment
- uid: SuperOffice.Data.SQL.UInt16FieldInfo
  commentId: T:SuperOffice.Data.SQL.UInt16FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: UInt16FieldInfo
  nameWithType: UInt16FieldInfo
  fullName: SuperOffice.Data.SQL.UInt16FieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.Deadline*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Deadline
  isExternal: true
  name: Deadline
  nameWithType: TicketTableInfo.Deadline
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Deadline
- uid: SuperOffice.CRM.Data.TicketTableInfo.FilterAddress*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FilterAddress
  isExternal: true
  name: FilterAddress
  nameWithType: TicketTableInfo.FilterAddress
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FilterAddress
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId
  isExternal: true
  name: DbiAgentId
  nameWithType: TicketTableInfo.DbiAgentId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiKey*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DbiKey
  isExternal: true
  name: DbiKey
  nameWithType: TicketTableInfo.DbiKey
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiKey
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized
  isExternal: true
  name: DbiLastSyncronized
  nameWithType: TicketTableInfo.DbiLastSyncronized
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiLastSyncronized
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified
  isExternal: true
  name: DbiLastModified
  nameWithType: TicketTableInfo.DbiLastModified
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiLastModified
- uid: SuperOffice.CRM.Data.TicketTableInfo.Origin*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Origin
  isExternal: true
  name: Origin
  nameWithType: TicketTableInfo.Origin
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Origin
- uid: SuperOffice.Data.SQL.TicketOriginFieldInfo
  commentId: T:SuperOffice.Data.SQL.TicketOriginFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TicketOriginFieldInfo
  nameWithType: TicketOriginFieldInfo
  fullName: SuperOffice.Data.SQL.TicketOriginFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally
  isExternal: true
  name: TimeSpentInternally
  nameWithType: TicketTableInfo.TimeSpentInternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentInternally
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally
  isExternal: true
  name: TimeSpentExternally
  nameWithType: TicketTableInfo.TimeSpentExternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentExternally
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue
  isExternal: true
  name: TimeSpentQueue
  nameWithType: TicketTableInfo.TimeSpentQueue
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentQueue
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally
  isExternal: true
  name: RealTimeSpentInternally
  nameWithType: TicketTableInfo.RealTimeSpentInternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentInternally
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally
  isExternal: true
  name: RealTimeSpentExternally
  nameWithType: TicketTableInfo.RealTimeSpentExternally
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentExternally
- uid: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue
  isExternal: true
  name: RealTimeSpentQueue
  nameWithType: TicketTableInfo.RealTimeSpentQueue
  fullName: SuperOffice.CRM.Data.TicketTableInfo.RealTimeSpentQueue
- uid: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated
  isExternal: true
  name: TimeSpentCalculated
  nameWithType: TicketTableInfo.TimeSpentCalculated
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TimeSpentCalculated
- uid: SuperOffice.CRM.Data.TicketTableInfo.NumReplies*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.NumReplies
  isExternal: true
  name: NumReplies
  nameWithType: TicketTableInfo.NumReplies
  fullName: SuperOffice.CRM.Data.TicketTableInfo.NumReplies
- uid: SuperOffice.CRM.Data.TicketTableInfo.NumMessages*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.NumMessages
  isExternal: true
  name: NumMessages
  nameWithType: TicketTableInfo.NumMessages
  fullName: SuperOffice.CRM.Data.TicketTableInfo.NumMessages
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketType*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TicketType
  isExternal: true
  name: TicketType
  nameWithType: TicketTableInfo.TicketType
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketType
- uid: SuperOffice.CRM.Data.TicketTableInfo.FromAddress*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FromAddress
  isExternal: true
  name: FromAddress
  nameWithType: TicketTableInfo.FromAddress
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FromAddress
- uid: SuperOffice.CRM.Data.TicketTableInfo.Tags*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Tags
  isExternal: true
  name: Tags
  nameWithType: TicketTableInfo.Tags
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Tags
- uid: SuperOffice.Data.SQL.Int32ArrayFieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32ArrayFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32ArrayFieldInfo
  nameWithType: Int32ArrayFieldInfo
  fullName: SuperOffice.Data.SQL.Int32ArrayFieldInfo
- uid: SuperOffice.CRM.Data.TicketTableInfo.ContactId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ContactId
  isExternal: true
  name: ContactId
  nameWithType: TicketTableInfo.ContactId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ContactId
- uid: SuperOffice.CRM.Data.TicketTableInfo.Language*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Language
  isExternal: true
  name: Language
  nameWithType: TicketTableInfo.Language
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Language
- uid: SuperOffice.CRM.Data.TicketTableInfo.Sentiment*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Sentiment
  isExternal: true
  name: Sentiment
  nameWithType: TicketTableInfo.Sentiment
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Sentiment
- uid: SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence
  isExternal: true
  name: SentimentConfidence
  nameWithType: TicketTableInfo.SentimentConfidence
  fullName: SuperOffice.CRM.Data.TicketTableInfo.SentimentConfidence
- uid: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId
  isExternal: true
  name: FormSubmissionId
  nameWithType: TicketTableInfo.FormSubmissionId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId
- uid: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId
  isExternal: true
  name: SuggestedCategoryId
  nameWithType: TicketTableInfo.SuggestedCategoryId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId
  isExternal: true
  name: OrigHumanCategoryId
  nameWithType: TicketTableInfo.OrigHumanCategoryId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId
- uid: SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket
  isExternal: true
  name: ConnectId_InnerJoin_Ticket
  nameWithType: TicketTableInfo.ConnectId_InnerJoin_Ticket
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ConnectId_InnerJoin_Ticket
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TicketTableInfo>
  nameWithType: TargetedInnerJoin<TicketTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TicketTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TicketTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TicketTableInfo)
  name.vb: TargetedInnerJoin(Of TicketTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketTableInfo
    name: TicketTableInfo
    nameWithType: TicketTableInfo
    fullName: SuperOffice.CRM.Data.TicketTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketTableInfo
    name: TicketTableInfo
    nameWithType: TicketTableInfo
    fullName: SuperOffice.CRM.Data.TicketTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin`1
  isExternal: true
  name: TargetedInnerJoin<TargetTableInfo>
  nameWithType: TargetedInnerJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<TargetTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of TargetTableInfo)
  name.vb: TargetedInnerJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  isExternal: true
  name: CreatedBy_InnerJoin_Ejuser
  nameWithType: TicketTableInfo.CreatedBy_InnerJoin_Ejuser
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CreatedBy_InnerJoin_Ejuser
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjuserTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjuserTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<EjuserTableInfo>
  nameWithType: TargetedInnerJoin<EjuserTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.EjuserTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of EjuserTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.EjuserTableInfo)
  name.vb: TargetedInnerJoin(Of EjuserTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EjuserTableInfo
    name: EjuserTableInfo
    nameWithType: EjuserTableInfo
    fullName: SuperOffice.CRM.Data.EjuserTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EjuserTableInfo
    name: EjuserTableInfo
    nameWithType: EjuserTableInfo
    fullName: SuperOffice.CRM.Data.EjuserTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  isExternal: true
  name: OwnedBy_InnerJoin_Ejuser
  nameWithType: TicketTableInfo.OwnedBy_InnerJoin_Ejuser
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OwnedBy_InnerJoin_Ejuser
- uid: SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory
  isExternal: true
  name: Category_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.Category_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Category_InnerJoin_EjCategory
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjCategoryTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.EjCategoryTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<EjCategoryTableInfo>
  nameWithType: TargetedInnerJoin<EjCategoryTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.EjCategoryTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of EjCategoryTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.EjCategoryTableInfo)
  name.vb: TargetedInnerJoin(Of EjCategoryTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EjCategoryTableInfo
    name: EjCategoryTableInfo
    nameWithType: EjCategoryTableInfo
    fullName: SuperOffice.CRM.Data.EjCategoryTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EjCategoryTableInfo
    name: EjCategoryTableInfo
    nameWithType: EjCategoryTableInfo
    fullName: SuperOffice.CRM.Data.EjCategoryTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  isExternal: true
  name: OrigCategory_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.OrigCategory_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigCategory_InnerJoin_EjCategory
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  isExternal: true
  name: TicketStatus_InnerJoin_TicketStatus
  nameWithType: TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketStatus_InnerJoin_TicketStatus
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketStatusTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketStatusTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TicketStatusTableInfo>
  nameWithType: TargetedInnerJoin<TicketStatusTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TicketStatusTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TicketStatusTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TicketStatusTableInfo)
  name.vb: TargetedInnerJoin(Of TicketStatusTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketStatusTableInfo
    name: TicketStatusTableInfo
    nameWithType: TicketStatusTableInfo
    fullName: SuperOffice.CRM.Data.TicketStatusTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketStatusTableInfo
    name: TicketStatusTableInfo
    nameWithType: TicketStatusTableInfo
    fullName: SuperOffice.CRM.Data.TicketStatusTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person
  isExternal: true
  name: CustId_InnerJoin_Person
  nameWithType: TicketTableInfo.CustId_InnerJoin_Person
  fullName: SuperOffice.CRM.Data.TicketTableInfo.CustId_InnerJoin_Person
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.PersonTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<PersonTableInfo>
  nameWithType: TargetedInnerJoin<PersonTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.PersonTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of PersonTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.PersonTableInfo)
  name.vb: TargetedInnerJoin(Of PersonTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.PersonTableInfo
    name: PersonTableInfo
    nameWithType: PersonTableInfo
    fullName: SuperOffice.CRM.Data.PersonTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.PersonTableInfo
    name: PersonTableInfo
    nameWithType: PersonTableInfo
    fullName: SuperOffice.CRM.Data.PersonTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority
  isExternal: true
  name: Priority_InnerJoin_TicketPriority
  nameWithType: TicketTableInfo.Priority_InnerJoin_TicketPriority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.Priority_InnerJoin_TicketPriority
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TicketPriorityTableInfo>
  nameWithType: TargetedInnerJoin<TicketPriorityTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TicketPriorityTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TicketPriorityTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TicketPriorityTableInfo)
  name.vb: TargetedInnerJoin(Of TicketPriorityTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketPriorityTableInfo
    name: TicketPriorityTableInfo
    nameWithType: TicketPriorityTableInfo
    fullName: SuperOffice.CRM.Data.TicketPriorityTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketPriorityTableInfo
    name: TicketPriorityTableInfo
    nameWithType: TicketPriorityTableInfo
    fullName: SuperOffice.CRM.Data.TicketPriorityTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  isExternal: true
  name: OrigPriority_InnerJoin_TicketPriority
  nameWithType: TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigPriority_InnerJoin_TicketPriority
- uid: SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter
  isExternal: true
  name: FilterId_InnerJoin_MailInFilter
  nameWithType: TicketTableInfo.FilterId_InnerJoin_MailInFilter
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FilterId_InnerJoin_MailInFilter
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.MailInFilterTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.MailInFilterTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<MailInFilterTableInfo>
  nameWithType: TargetedInnerJoin<MailInFilterTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.MailInFilterTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of MailInFilterTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.MailInFilterTableInfo)
  name.vb: TargetedInnerJoin(Of MailInFilterTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.MailInFilterTableInfo
    name: MailInFilterTableInfo
    nameWithType: MailInFilterTableInfo
    fullName: SuperOffice.CRM.Data.MailInFilterTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.MailInFilterTableInfo
    name: MailInFilterTableInfo
    nameWithType: MailInFilterTableInfo
    fullName: SuperOffice.CRM.Data.MailInFilterTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  isExternal: true
  name: DbiAgentId_InnerJoin_DbiAgent
  nameWithType: TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
  fullName: SuperOffice.CRM.Data.TicketTableInfo.DbiAgentId_InnerJoin_DbiAgent
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DbiAgentTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.DbiAgentTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<DbiAgentTableInfo>
  nameWithType: TargetedInnerJoin<DbiAgentTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.DbiAgentTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of DbiAgentTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.DbiAgentTableInfo)
  name.vb: TargetedInnerJoin(Of DbiAgentTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.DbiAgentTableInfo
    name: DbiAgentTableInfo
    nameWithType: DbiAgentTableInfo
    fullName: SuperOffice.CRM.Data.DbiAgentTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.DbiAgentTableInfo
    name: DbiAgentTableInfo
    nameWithType: DbiAgentTableInfo
    fullName: SuperOffice.CRM.Data.DbiAgentTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType
  isExternal: true
  name: TicketType_InnerJoin_TicketType
  nameWithType: TicketTableInfo.TicketType_InnerJoin_TicketType
  fullName: SuperOffice.CRM.Data.TicketTableInfo.TicketType_InnerJoin_TicketType
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketTypeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketTypeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TicketTypeTableInfo>
  nameWithType: TargetedInnerJoin<TicketTypeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TicketTypeTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TicketTypeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TicketTypeTableInfo)
  name.vb: TargetedInnerJoin(Of TicketTypeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketTypeTableInfo
    name: TicketTypeTableInfo
    nameWithType: TicketTypeTableInfo
    fullName: SuperOffice.CRM.Data.TicketTypeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketTypeTableInfo
    name: TicketTypeTableInfo
    nameWithType: TicketTypeTableInfo
    fullName: SuperOffice.CRM.Data.TicketTypeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact
  isExternal: true
  name: ContactId_InnerJoin_Contact
  nameWithType: TicketTableInfo.ContactId_InnerJoin_Contact
  fullName: SuperOffice.CRM.Data.TicketTableInfo.ContactId_InnerJoin_Contact
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ContactTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ContactTableInfo>
  nameWithType: TargetedInnerJoin<ContactTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ContactTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ContactTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ContactTableInfo)
  name.vb: TargetedInnerJoin(Of ContactTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ContactTableInfo
    name: ContactTableInfo
    nameWithType: ContactTableInfo
    fullName: SuperOffice.CRM.Data.ContactTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ContactTableInfo
    name: ContactTableInfo
    nameWithType: ContactTableInfo
    fullName: SuperOffice.CRM.Data.ContactTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  isExternal: true
  name: FormSubmissionId_InnerJoin_FormSubmission
  nameWithType: TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
  fullName: SuperOffice.CRM.Data.TicketTableInfo.FormSubmissionId_InnerJoin_FormSubmission
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.FormSubmissionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.FormSubmissionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<FormSubmissionTableInfo>
  nameWithType: TargetedInnerJoin<FormSubmissionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.FormSubmissionTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of FormSubmissionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.FormSubmissionTableInfo)
  name.vb: TargetedInnerJoin(Of FormSubmissionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.FormSubmissionTableInfo
    name: FormSubmissionTableInfo
    nameWithType: FormSubmissionTableInfo
    fullName: SuperOffice.CRM.Data.FormSubmissionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.FormSubmissionTableInfo
    name: FormSubmissionTableInfo
    nameWithType: FormSubmissionTableInfo
    fullName: SuperOffice.CRM.Data.FormSubmissionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  isExternal: true
  name: SuggestedCategoryId_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.SuggestedCategoryId_InnerJoin_EjCategory
- uid: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  isExternal: true
  name: OrigHumanCategoryId_InnerJoin_EjCategory
  nameWithType: TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
  fullName: SuperOffice.CRM.Data.TicketTableInfo.OrigHumanCategoryId_InnerJoin_EjCategory
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  isExternal: true
  name: LeftOuterJoin_EjMessage_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_EjMessage_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EjMessageTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.EjMessageTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<EjMessageTableInfo>
  nameWithType: TargetedLeftOuterJoin<EjMessageTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.EjMessageTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of EjMessageTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.EjMessageTableInfo)
  name.vb: TargetedLeftOuterJoin(Of EjMessageTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.EjMessageTableInfo
    name: EjMessageTableInfo
    nameWithType: EjMessageTableInfo
    fullName: SuperOffice.CRM.Data.EjMessageTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.EjMessageTableInfo
    name: EjMessageTableInfo
    nameWithType: EjMessageTableInfo
    fullName: SuperOffice.CRM.Data.EjMessageTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  isExternal: true
  name: TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType: TargetedLeftOuterJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of TargetTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  isExternal: true
  name: LeftOuterJoin_TicketStatusHistory_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketStatusHistory_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketStatusHistoryTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketStatusHistoryTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketStatusHistoryTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketStatusHistoryTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketStatusHistoryTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketStatusHistoryTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketStatusHistoryTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketStatusHistoryTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketStatusHistoryTableInfo
    name: TicketStatusHistoryTableInfo
    nameWithType: TicketStatusHistoryTableInfo
    fullName: SuperOffice.CRM.Data.TicketStatusHistoryTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketStatusHistoryTableInfo
    name: TicketStatusHistoryTableInfo
    nameWithType: TicketStatusHistoryTableInfo
    fullName: SuperOffice.CRM.Data.TicketStatusHistoryTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  isExternal: true
  name: LeftOuterJoin_TicketCustomers_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketCustomers_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketCustomersTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketCustomersTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketCustomersTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketCustomersTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketCustomersTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketCustomersTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketCustomersTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketCustomersTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketCustomersTableInfo
    name: TicketCustomersTableInfo
    nameWithType: TicketCustomersTableInfo
    fullName: SuperOffice.CRM.Data.TicketCustomersTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketCustomersTableInfo
    name: TicketCustomersTableInfo
    nameWithType: TicketCustomersTableInfo
    fullName: SuperOffice.CRM.Data.TicketCustomersTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  isExternal: true
  name: LeftOuterJoin_TicketLog_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLog_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketLogTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketLogTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketLogTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketLogTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketLogTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketLogTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketLogTableInfo
    name: TicketLogTableInfo
    nameWithType: TicketLogTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketLogTableInfo
    name: TicketLogTableInfo
    nameWithType: TicketLogTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  isExternal: true
  name: LeftOuterJoin_TicketLogChange_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogChange_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogChangeTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogChangeTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketLogChangeTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketLogChangeTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketLogChangeTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketLogChangeTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketLogChangeTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketLogChangeTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketLogChangeTableInfo
    name: TicketLogChangeTableInfo
    nameWithType: TicketLogChangeTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogChangeTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketLogChangeTableInfo
    name: TicketLogChangeTableInfo
    nameWithType: TicketLogChangeTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogChangeTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  isExternal: true
  name: LeftOuterJoin_TicketLogAction_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogActionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketLogActionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketLogActionTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketLogActionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketLogActionTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketLogActionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketLogActionTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketLogActionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketLogActionTableInfo
    name: TicketLogActionTableInfo
    nameWithType: TicketLogActionTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogActionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketLogActionTableInfo
    name: TicketLogActionTableInfo
    nameWithType: TicketLogActionTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogActionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  isExternal: true
  name: LeftOuterJoin_TicketLogAction_OrgTicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketLogAction_OrgTicketId
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId
  isExternal: true
  name: LeftOuterJoin_Notify_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_Notify_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Notify_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.NotifyTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.NotifyTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<NotifyTableInfo>
  nameWithType: TargetedLeftOuterJoin<NotifyTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.NotifyTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of NotifyTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.NotifyTableInfo)
  name.vb: TargetedLeftOuterJoin(Of NotifyTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.NotifyTableInfo
    name: NotifyTableInfo
    nameWithType: NotifyTableInfo
    fullName: SuperOffice.CRM.Data.NotifyTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.NotifyTableInfo
    name: NotifyTableInfo
    nameWithType: NotifyTableInfo
    fullName: SuperOffice.CRM.Data.NotifyTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  isExternal: true
  name: LeftOuterJoin_ChatSession_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_ChatSession_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ChatSessionTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.ChatSessionTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<ChatSessionTableInfo>
  nameWithType: TargetedLeftOuterJoin<ChatSessionTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.ChatSessionTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of ChatSessionTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.ChatSessionTableInfo)
  name.vb: TargetedLeftOuterJoin(Of ChatSessionTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ChatSessionTableInfo
    name: ChatSessionTableInfo
    nameWithType: ChatSessionTableInfo
    fullName: SuperOffice.CRM.Data.ChatSessionTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ChatSessionTableInfo
    name: ChatSessionTableInfo
    nameWithType: ChatSessionTableInfo
    fullName: SuperOffice.CRM.Data.ChatSessionTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  isExternal: true
  name: LeftOuterJoin_SShipmentAddr_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_SShipmentAddr_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SShipmentAddrTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.SShipmentAddrTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<SShipmentAddrTableInfo>
  nameWithType: TargetedLeftOuterJoin<SShipmentAddrTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.SShipmentAddrTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of SShipmentAddrTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.SShipmentAddrTableInfo)
  name.vb: TargetedLeftOuterJoin(Of SShipmentAddrTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.SShipmentAddrTableInfo
    name: SShipmentAddrTableInfo
    nameWithType: SShipmentAddrTableInfo
    fullName: SuperOffice.CRM.Data.SShipmentAddrTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.SShipmentAddrTableInfo
    name: SShipmentAddrTableInfo
    nameWithType: SShipmentAddrTableInfo
    fullName: SuperOffice.CRM.Data.SShipmentAddrTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  isExternal: true
  name: LeftOuterJoin_Outbox_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_Outbox_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Outbox_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.OutboxTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.OutboxTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<OutboxTableInfo>
  nameWithType: TargetedLeftOuterJoin<OutboxTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.OutboxTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of OutboxTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.OutboxTableInfo)
  name.vb: TargetedLeftOuterJoin(Of OutboxTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.OutboxTableInfo
    name: OutboxTableInfo
    nameWithType: OutboxTableInfo
    fullName: SuperOffice.CRM.Data.OutboxTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.OutboxTableInfo
    name: OutboxTableInfo
    nameWithType: OutboxTableInfo
    fullName: SuperOffice.CRM.Data.OutboxTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  isExternal: true
  name: LeftOuterJoin_Hotlist_TicketId
  nameWithType: TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_Hotlist_TicketId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.HotlistTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.HotlistTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<HotlistTableInfo>
  nameWithType: TargetedLeftOuterJoin<HotlistTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.HotlistTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of HotlistTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.HotlistTableInfo)
  name.vb: TargetedLeftOuterJoin(Of HotlistTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.HotlistTableInfo
    name: HotlistTableInfo
    nameWithType: HotlistTableInfo
    fullName: SuperOffice.CRM.Data.HotlistTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.HotlistTableInfo
    name: HotlistTableInfo
    nameWithType: HotlistTableInfo
    fullName: SuperOffice.CRM.Data.HotlistTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  isExternal: true
  name: LeftOuterJoin_TicketRelation_Source
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketRelation_Source
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Source
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketRelationTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketRelationTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketRelationTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketRelationTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketRelationTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketRelationTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketRelationTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketRelationTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketRelationTableInfo
    name: TicketRelationTableInfo
    nameWithType: TicketRelationTableInfo
    fullName: SuperOffice.CRM.Data.TicketRelationTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketRelationTableInfo
    name: TicketRelationTableInfo
    nameWithType: TicketRelationTableInfo
    fullName: SuperOffice.CRM.Data.TicketRelationTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target*
  commentId: Overload:SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  isExternal: true
  name: LeftOuterJoin_TicketRelation_Target
  nameWithType: TicketTableInfo.LeftOuterJoin_TicketRelation_Target
  fullName: SuperOffice.CRM.Data.TicketTableInfo.LeftOuterJoin_TicketRelation_Target
