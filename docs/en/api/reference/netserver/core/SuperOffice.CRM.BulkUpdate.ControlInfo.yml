### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo
  commentId: T:SuperOffice.CRM.BulkUpdate.ControlInfo
  id: ControlInfo
  parent: SuperOffice.CRM.BulkUpdate
  children:
  - SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor
  - SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor(System.String,System.Int32)
  - SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor(System.String,System.String,System.String)
  - SuperOffice.CRM.BulkUpdate.ControlInfo.Dimension
  - SuperOffice.CRM.BulkUpdate.ControlInfo.ExtraInfo
  - SuperOffice.CRM.BulkUpdate.ControlInfo.Label
  - SuperOffice.CRM.BulkUpdate.ControlInfo.ListLeadText
  - SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderExtraInfo
  - SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderName
  - SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderPrimaryKeyName
  - SuperOffice.CRM.BulkUpdate.ControlInfo.Type
  langs:
  - csharp
  - vb
  name: ControlInfo
  nameWithType: ControlInfo
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public sealed class ControlInfo
    content.vb: Public NotInheritable Class ControlInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.BulkUpdate.ControlInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BulkUpdate.ControlInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.BulkUpdate.ControlInfo)
  - SuperOffice.CRM.BulkUpdate.ControlInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.BulkUpdate.ControlInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.Type
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.Type
  id: Type
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ControlInfo.Type
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.Type
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string Type
    return:
      type: System.String
    content.vb: Public Type As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.Label
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.Label
  id: Label
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: Label
  nameWithType: ControlInfo.Label
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.Label
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string Label
    return:
      type: System.String
    content.vb: Public Label As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.Dimension
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.Dimension
  id: Dimension
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: Dimension
  nameWithType: ControlInfo.Dimension
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.Dimension
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public int Dimension
    return:
      type: System.Int32
    content.vb: Public Dimension As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.ExtraInfo
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.ExtraInfo
  id: ExtraInfo
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ExtraInfo
  nameWithType: ControlInfo.ExtraInfo
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ExtraInfo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string ExtraInfo
    return:
      type: System.String
    content.vb: Public ExtraInfo As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderName
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderName
  id: ListProviderName
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ListProviderName
  nameWithType: ControlInfo.ListProviderName
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string ListProviderName
    return:
      type: System.String
    content.vb: Public ListProviderName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderExtraInfo
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderExtraInfo
  id: ListProviderExtraInfo
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ListProviderExtraInfo
  nameWithType: ControlInfo.ListProviderExtraInfo
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderExtraInfo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string ListProviderExtraInfo
    return:
      type: System.String
    content.vb: Public ListProviderExtraInfo As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderPrimaryKeyName
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderPrimaryKeyName
  id: ListProviderPrimaryKeyName
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ListProviderPrimaryKeyName
  nameWithType: ControlInfo.ListProviderPrimaryKeyName
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ListProviderPrimaryKeyName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string ListProviderPrimaryKeyName
    return:
      type: System.String
    content.vb: Public ListProviderPrimaryKeyName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.ListLeadText
  commentId: F:SuperOffice.CRM.BulkUpdate.ControlInfo.ListLeadText
  id: ListLeadText
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ListLeadText
  nameWithType: ControlInfo.ListLeadText
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ListLeadText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public string ListLeadText
    return:
      type: System.String
    content.vb: Public ListLeadText As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor
  commentId: M:SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ControlInfo()
  nameWithType: ControlInfo.ControlInfo()
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ControlInfo()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public ControlInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ControlInfo(String, Int32)
  nameWithType: ControlInfo.ControlInfo(String, Int32)
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ControlInfo(System.String, System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public ControlInfo(string i_Type, int i_Dimension = 0)
    parameters:
    - id: i_Type
      type: System.String
    - id: i_Dimension
      type: System.Int32
    content.vb: Public Sub New(i_Type As String, i_Dimension As Integer = 0)
  overload: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: SuperOffice.CRM.BulkUpdate.ControlInfo
  langs:
  - csharp
  - vb
  name: ControlInfo(String, String, String)
  nameWithType: ControlInfo.ControlInfo(String, String, String)
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ControlInfo(System.String, System.String, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.BulkUpdate
  syntax:
    content: public ControlInfo(string i_Type, string i_ListProviderName, string i_ListProviderExtraInfo = null)
    parameters:
    - id: i_Type
      type: System.String
    - id: i_ListProviderName
      type: System.String
    - id: i_ListProviderExtraInfo
      type: System.String
    content.vb: Public Sub New(i_Type As String, i_ListProviderName As String, i_ListProviderExtraInfo As String = Nothing)
  overload: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.BulkUpdate
  commentId: N:SuperOffice.CRM.BulkUpdate
  isExternal: true
  name: SuperOffice.CRM.BulkUpdate
  nameWithType: SuperOffice.CRM.BulkUpdate
  fullName: SuperOffice.CRM.BulkUpdate
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ControlInfo, To>()
  nameWithType: EnumUtil.MapEnums<ControlInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BulkUpdate.ControlInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ControlInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BulkUpdate.ControlInfo, To)()
  name.vb: MapEnums(Of ControlInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ControlInfo, To>
    nameWithType: EnumUtil.MapEnums<ControlInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BulkUpdate.ControlInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ControlInfo, To)
    nameWithType: EnumUtil.MapEnums(Of ControlInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BulkUpdate.ControlInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.BulkUpdate.ControlInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ControlInfo>(ControlInfo)
  nameWithType: ObjectExtensions.AssignByReflection<ControlInfo>(ControlInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.BulkUpdate.ControlInfo>(SuperOffice.CRM.BulkUpdate.ControlInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ControlInfo)(ControlInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.BulkUpdate.ControlInfo)(SuperOffice.CRM.BulkUpdate.ControlInfo)
  name.vb: AssignByReflection(Of ControlInfo)(ControlInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ControlInfo>
    nameWithType: ObjectExtensions.AssignByReflection<ControlInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.BulkUpdate.ControlInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.BulkUpdate.ControlInfo
    name: ControlInfo
    nameWithType: ControlInfo
    fullName: SuperOffice.CRM.BulkUpdate.ControlInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ControlInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of ControlInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.BulkUpdate.ControlInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.BulkUpdate.ControlInfo
    name: ControlInfo
    nameWithType: ControlInfo
    fullName: SuperOffice.CRM.BulkUpdate.ControlInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ControlInfo>()
  nameWithType: ObjectExtensions.GraphCopy<ControlInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.BulkUpdate.ControlInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ControlInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.BulkUpdate.ControlInfo)()
  name.vb: GraphCopy(Of ControlInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ControlInfo>
    nameWithType: ObjectExtensions.GraphCopy<ControlInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.BulkUpdate.ControlInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ControlInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of ControlInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.BulkUpdate.ControlInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ControlInfo, To>()
  nameWithType: Converters.MapEnums<ControlInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BulkUpdate.ControlInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of ControlInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BulkUpdate.ControlInfo, To)()
  name.vb: MapEnums(Of ControlInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ControlInfo, To>
    nameWithType: Converters.MapEnums<ControlInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BulkUpdate.ControlInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ControlInfo, To)
    nameWithType: Converters.MapEnums(Of ControlInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BulkUpdate.ControlInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.BulkUpdate.ControlInfo.#ctor
  isExternal: true
  name: ControlInfo
  nameWithType: ControlInfo.ControlInfo
  fullName: SuperOffice.CRM.BulkUpdate.ControlInfo.ControlInfo
