### YamlMime:ManagedReference
items:
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  commentId: T:SuperOffice.Threading.AsynchronousHandlerProcessor`1
  id: AsynchronousHandlerProcessor`1
  parent: SuperOffice.Threading
  children:
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWorkAsync(System.Threading.CancellationToken)
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup(`0)
  langs:
  - csharp
  - vb
  name: AsynchronousHandlerProcessor<TAsynchronousArgument>
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nBase class for processing carried out by <see cref=\"!:AsynchronousHandler&lt;TAsynchronousHandlerProcessor, TAsynchronousArgument>\"></see>\nand implementations of such.  \n"
  remarks: "\nThread handling and processing are separated into two parts.  This part represents processing.  \nImplementations of this class needs to have a default constructor to work with <see cref=\"!:AsynchronousHandler&lt;TAsynchronousHandlerProcessor, TAsynchronousArgument>\"></see>.\nThis class is instantiated by the <see cref=\"!:AsynchronousHandler&lt;TAsynchronousHandlerProcessor, TAsynchronousArgument>\"></see>.\n"
  syntax:
    content: 'public abstract class AsynchronousHandlerProcessor<TAsynchronousArgument> : Object where TAsynchronousArgument : class'
    typeParameters:
    - id: TAsynchronousArgument
      description: Type of object used as argument for processing asynchronous.
    content.vb: >-
      Public MustInherit Class AsynchronousHandlerProcessor(Of TAsynchronousArgument As Class)
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.EnumUtil.MapEnums``2
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument)
  name.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup(`0)
  commentId: M:SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup(`0)
  id: OnSetup(`0)
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: OnSetup(TAsynchronousArgument)
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup(TAsynchronousArgument)
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup(TAsynchronousArgument)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nCalled by <see cref=\"!:AsynchronousHandler&lt;TAsynchronousHandlerProcessor, TAsynchronousArgument>\"></see> to initiate processing.\n"
  remarks: The default implementation copies the argument to a member variable exposed by the <xref href="SuperOffice.Threading.AsynchronousHandlerProcessor%601.Argument" data-throw-if-not-resolved="false"></xref> property
  syntax:
    content: public virtual bool OnSetup(TAsynchronousArgument argument)
    parameters:
    - id: argument
      type: '{TAsynchronousArgument}'
      description: Argument to use for processing.
    return:
      type: System.Boolean
      description: True if able to sert up correctly.
    content.vb: Public Overridable Function OnSetup(argument As TAsynchronousArgument) As Boolean
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup(TAsynchronousArgument)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup(TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWorkAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWorkAsync(System.Threading.CancellationToken)
  id: ExecuteWorkAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: ExecuteWorkAsync(CancellationToken)
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWorkAsync(CancellationToken)
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWorkAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nImplemented by sub classes to execute the actual work.\n"
  syntax:
    content: public virtual Task ExecuteWorkAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overridable Function ExecuteWorkAsync(cancellationToken As CancellationToken) As Task
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWorkAsync*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWorkAsync(CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWorkAsync(System.Threading.CancellationToken)
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  commentId: M:SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  id: '#ctor'
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: AsynchronousHandlerProcessor()
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor()
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: protected AsynchronousHandlerProcessor()
    content.vb: Protected Sub New
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor()
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  commentId: P:SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  id: HasWorkToDo
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: HasWorkToDo
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nImplemented by sub classes.  Get if there are work to be carried out.\n"
  syntax:
    content: public abstract bool HasWorkToDo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property HasWorkToDo As Boolean
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  commentId: P:SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  id: Argument
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: Argument
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nArgument for the processor to work with.\n"
  syntax:
    content: protected TAsynchronousArgument Argument { get; }
    parameters: []
    return:
      type: '{TAsynchronousArgument}'
    content.vb: Protected ReadOnly Property Argument As TAsynchronousArgument
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
references:
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType: EnumUtil.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  name.vb: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    nameWithType: EnumUtil.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    nameWithType: EnumUtil.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType: Converters.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType.vb: Converters.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  name.vb: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    nameWithType: Converters.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    nameWithType: Converters.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup
  isExternal: true
  name: OnSetup
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup
- uid: '{TAsynchronousArgument}'
  commentId: '!:TAsynchronousArgument'
  definition: TAsynchronousArgument
  name: TAsynchronousArgument
  nameWithType: TAsynchronousArgument
  fullName: TAsynchronousArgument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TAsynchronousArgument
  name: TAsynchronousArgument
  nameWithType: TAsynchronousArgument
  fullName: TAsynchronousArgument
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWorkAsync*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWorkAsync
  isExternal: true
  name: ExecuteWorkAsync
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWorkAsync
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWorkAsync
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWorkAsync
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWorkAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  isExternal: true
  name: AsynchronousHandlerProcessor
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  isExternal: true
  name: HasWorkToDo
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  isExternal: true
  name: Argument
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
