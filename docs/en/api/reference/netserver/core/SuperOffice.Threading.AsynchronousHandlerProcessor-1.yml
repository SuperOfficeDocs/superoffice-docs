### YamlMime:ManagedReference
items:
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  commentId: T:SuperOffice.Threading.AsynchronousHandlerProcessor`1
  id: AsynchronousHandlerProcessor`1
  parent: SuperOffice.Threading
  children:
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWork
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup(`0)
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.ThreadName
  langs:
  - csharp
  - vb
  name: AsynchronousHandlerProcessor<TAsynchronousArgument>
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nBase class for processing carried out by <xref href=\"SuperOffice.Threading.AsynchronousHandler%602\" data-throw-if-not-resolved=\"false\"></xref>\nand implementations of such.  \n"
  remarks: "\nThread handling and processing are separated into two parts.  This part represents processing.  \nImplementations of this class needs to have a default constructor to work with <xref href=\"SuperOffice.Threading.AsynchronousHandler%602\" data-throw-if-not-resolved=\"false\"></xref>.\nThis class is instantiated by the <xref href=\"SuperOffice.Threading.AsynchronousHandler%602\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: >-
      public abstract class AsynchronousHandlerProcessor<TAsynchronousArgument>
          where TAsynchronousArgument : class
    typeParameters:
    - id: TAsynchronousArgument
      description: Type of object used as argument for processing asynchronous.
    content.vb: Public MustInherit Class AsynchronousHandlerProcessor(Of TAsynchronousArgument As Class)
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Mail.CacheMailQueueProcessor
  - SuperOffice.CRM.Mail.SendMailQueueProcessor
  - SuperOffice.Threading.QueueAsyncChunkProcessor`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.EnumUtil.MapEnums``2
  - SuperOffice.Threading.AsynchronousHandlerProcessor`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument)
  name.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup(`0)
  commentId: M:SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup(`0)
  id: OnSetup(`0)
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: OnSetup(TAsynchronousArgument)
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup(TAsynchronousArgument)
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup(TAsynchronousArgument)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nCalled by <xref href=\"SuperOffice.Threading.AsynchronousHandler%602\" data-throw-if-not-resolved=\"false\"></xref> to initiate processing.\n"
  remarks: The default implementation copies the argument to a member variable exposed by the <xref href="SuperOffice.Threading.AsynchronousHandlerProcessor%601.Argument" data-throw-if-not-resolved="false"></xref> property
  syntax:
    content: public virtual bool OnSetup(TAsynchronousArgument argument)
    parameters:
    - id: argument
      type: '{TAsynchronousArgument}'
      description: Argument to use for processing.
    return:
      type: System.Boolean
      description: True if able to sert up correctly.
    content.vb: Public Overridable Function OnSetup(argument As TAsynchronousArgument) As Boolean
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup(TAsynchronousArgument)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup(TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWork
  commentId: M:SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWork
  id: ExecuteWork
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: ExecuteWork()
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWork()
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWork()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nImplemented by sub classes to execute the actual work.\n"
  syntax:
    content: public abstract void ExecuteWork()
    content.vb: Public MustOverride Sub ExecuteWork
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWork*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWork()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWork()
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  commentId: M:SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  id: '#ctor'
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: AsynchronousHandlerProcessor()
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor()
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: protected AsynchronousHandlerProcessor()
    content.vb: Protected Sub New
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor()
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  commentId: P:SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  id: HasWorkToDo
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: HasWorkToDo
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nImplemented by sub classes.  Get if there are work to be carried out.\n"
  syntax:
    content: public abstract bool HasWorkToDo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property HasWorkToDo As Boolean
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  commentId: P:SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  id: Argument
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: Argument
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nArgument for the processor to work with.\n"
  syntax:
    content: protected TAsynchronousArgument Argument { get; }
    parameters: []
    return:
      type: '{TAsynchronousArgument}'
    content.vb: Protected ReadOnly Property Argument As TAsynchronousArgument
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ThreadName
  commentId: P:SuperOffice.Threading.AsynchronousHandlerProcessor`1.ThreadName
  id: ThreadName
  parent: SuperOffice.Threading.AsynchronousHandlerProcessor`1
  langs:
  - csharp
  - vb
  name: ThreadName
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.ThreadName
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.ThreadName
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: "\nImplemented by sub classes to get the name of the thread.\n"
  remarks: "\nUsed by <xref href=\"SuperOffice.Threading.AsynchronousHandler%602\" data-throw-if-not-resolved=\"false\"></xref> to\nget a meaning full name of the thread.\n"
  syntax:
    content: public abstract string ThreadName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property ThreadName As String
  overload: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ThreadName*
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).ThreadName
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).ThreadName
references:
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType: EnumUtil.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  name.vb: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    nameWithType: EnumUtil.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    nameWithType: EnumUtil.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType: Converters.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>()
  nameWithType.vb: Converters.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  name.vb: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    nameWithType: Converters.MapEnums<AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    nameWithType: Converters.MapEnums(Of AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.OnSetup
  isExternal: true
  name: OnSetup
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.OnSetup
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).OnSetup
- uid: '{TAsynchronousArgument}'
  commentId: '!:TAsynchronousArgument'
  definition: TAsynchronousArgument
  name: TAsynchronousArgument
  nameWithType: TAsynchronousArgument
  fullName: TAsynchronousArgument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TAsynchronousArgument
  name: TAsynchronousArgument
  nameWithType: TAsynchronousArgument
  fullName: TAsynchronousArgument
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWork*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.ExecuteWork
  isExternal: true
  name: ExecuteWork
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWork
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.ExecuteWork
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWork
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).ExecuteWork
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.#ctor
  isExternal: true
  name: AsynchronousHandlerProcessor
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.AsynchronousHandlerProcessor
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).AsynchronousHandlerProcessor
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.HasWorkToDo
  isExternal: true
  name: HasWorkToDo
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.HasWorkToDo
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).HasWorkToDo
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.Argument
  isExternal: true
  name: Argument
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.Argument
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).Argument
- uid: SuperOffice.Threading.AsynchronousHandlerProcessor`1.ThreadName*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandlerProcessor`1.ThreadName
  isExternal: true
  name: ThreadName
  nameWithType: AsynchronousHandlerProcessor<TAsynchronousArgument>.ThreadName
  fullName: SuperOffice.Threading.AsynchronousHandlerProcessor<TAsynchronousArgument>.ThreadName
  nameWithType.vb: AsynchronousHandlerProcessor(Of TAsynchronousArgument).ThreadName
  fullName.vb: SuperOffice.Threading.AsynchronousHandlerProcessor(Of TAsynchronousArgument).ThreadName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
