### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.SaleHistRow
  commentId: T:SuperOffice.CRM.Rows.SaleHistRow
  id: SaleHistRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.SaleHistRow.#ctor(SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase)
  - SuperOffice.CRM.Rows.SaleHistRow._currentActiveLinks
  - SuperOffice.CRM.Rows.SaleHistRow._currentAmount
  - SuperOffice.CRM.Rows.SaleHistRow._currentAppointmentId
  - SuperOffice.CRM.Rows.SaleHistRow._currentAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow._currentComptrId
  - SuperOffice.CRM.Rows.SaleHistRow._currentContactId
  - SuperOffice.CRM.Rows.SaleHistRow._currentCreditedId
  - SuperOffice.CRM.Rows.SaleHistRow._currentCurrencyId
  - SuperOffice.CRM.Rows.SaleHistRow._currentDone
  - SuperOffice.CRM.Rows.SaleHistRow._currentEarning
  - SuperOffice.CRM.Rows.SaleHistRow._currentEarningPercent
  - SuperOffice.CRM.Rows.SaleHistRow._currentGroupIdx
  - SuperOffice.CRM.Rows.SaleHistRow._currentHeading
  - SuperOffice.CRM.Rows.SaleHistRow._currentNddAppointmentId
  - SuperOffice.CRM.Rows.SaleHistRow._currentNextDueDate
  - SuperOffice.CRM.Rows.SaleHistRow._currentNumber1
  - SuperOffice.CRM.Rows.SaleHistRow._currentPersonId
  - SuperOffice.CRM.Rows.SaleHistRow._currentPostitTextId
  - SuperOffice.CRM.Rows.SaleHistRow._currentProbability
  - SuperOffice.CRM.Rows.SaleHistRow._currentProbabilityIdx
  - SuperOffice.CRM.Rows.SaleHistRow._currentProjectId
  - SuperOffice.CRM.Rows.SaleHistRow._currentReasonId
  - SuperOffice.CRM.Rows.SaleHistRow._currentReasonSoldId
  - SuperOffice.CRM.Rows.SaleHistRow._currentReasonStalledId
  - SuperOffice.CRM.Rows.SaleHistRow._currentRegistered
  - SuperOffice.CRM.Rows.SaleHistRow._currentRegisteredAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow._currentReopenDate
  - SuperOffice.CRM.Rows.SaleHistRow._currentSaledate
  - SuperOffice.CRM.Rows.SaleHistRow._currentSalehistId
  - SuperOffice.CRM.Rows.SaleHistRow._currentSaleId
  - SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeCatId
  - SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeId
  - SuperOffice.CRM.Rows.SaleHistRow._currentSource
  - SuperOffice.CRM.Rows.SaleHistRow._currentSourceId
  - SuperOffice.CRM.Rows.SaleHistRow._currentStatus
  - SuperOffice.CRM.Rows.SaleHistRow._currentTextId
  - SuperOffice.CRM.Rows.SaleHistRow._currentUpdated
  - SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedCount
  - SuperOffice.CRM.Rows.SaleHistRow._currentUserdef2Id
  - SuperOffice.CRM.Rows.SaleHistRow._currentUserdefId
  - SuperOffice.CRM.Rows.SaleHistRow._currentVisibility
  - SuperOffice.CRM.Rows.SaleHistRow._onActiveLinksChange
  - SuperOffice.CRM.Rows.SaleHistRow._onAmountChange
  - SuperOffice.CRM.Rows.SaleHistRow._onAppointmentIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onAssociateIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onComptrIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onContactIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onCreditedIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onCurrencyIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onDoneChange
  - SuperOffice.CRM.Rows.SaleHistRow._onEarningChange
  - SuperOffice.CRM.Rows.SaleHistRow._onEarningPercentChange
  - SuperOffice.CRM.Rows.SaleHistRow._onGroupIdxChange
  - SuperOffice.CRM.Rows.SaleHistRow._onHeadingChange
  - SuperOffice.CRM.Rows.SaleHistRow._onNddAppointmentIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onNextDueDateChange
  - SuperOffice.CRM.Rows.SaleHistRow._onNumber1Change
  - SuperOffice.CRM.Rows.SaleHistRow._onPersonIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onPostitTextIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onProbabilityChange
  - SuperOffice.CRM.Rows.SaleHistRow._onProbabilityIdxChange
  - SuperOffice.CRM.Rows.SaleHistRow._onProjectIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onReasonIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onReasonSoldIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onReasonStalledIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onRegisteredChange
  - SuperOffice.CRM.Rows.SaleHistRow._onReopenDateChange
  - SuperOffice.CRM.Rows.SaleHistRow._onSaledateChange
  - SuperOffice.CRM.Rows.SaleHistRow._onSaleIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeCatIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onSourceChange
  - SuperOffice.CRM.Rows.SaleHistRow._onSourceIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onStatusChange
  - SuperOffice.CRM.Rows.SaleHistRow._onTextIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onUpdatedChange
  - SuperOffice.CRM.Rows.SaleHistRow._onUpdatedCountChange
  - SuperOffice.CRM.Rows.SaleHistRow._onUserdef2IdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onUserdefIdChange
  - SuperOffice.CRM.Rows.SaleHistRow._onVisibilityChange
  - SuperOffice.CRM.Rows.SaleHistRow._persistedActiveLinks
  - SuperOffice.CRM.Rows.SaleHistRow._persistedAmount
  - SuperOffice.CRM.Rows.SaleHistRow._persistedAppointmentId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedComptrId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedContactId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedCreditedId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedCurrencyId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedDone
  - SuperOffice.CRM.Rows.SaleHistRow._persistedEarning
  - SuperOffice.CRM.Rows.SaleHistRow._persistedEarningPercent
  - SuperOffice.CRM.Rows.SaleHistRow._persistedGroupIdx
  - SuperOffice.CRM.Rows.SaleHistRow._persistedHeading
  - SuperOffice.CRM.Rows.SaleHistRow._persistedNddAppointmentId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedNextDueDate
  - SuperOffice.CRM.Rows.SaleHistRow._persistedNumber1
  - SuperOffice.CRM.Rows.SaleHistRow._persistedPersonId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedPostitTextId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedProbability
  - SuperOffice.CRM.Rows.SaleHistRow._persistedProbabilityIdx
  - SuperOffice.CRM.Rows.SaleHistRow._persistedProjectId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedReasonId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedReasonSoldId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedReasonStalledId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedRegistered
  - SuperOffice.CRM.Rows.SaleHistRow._persistedRegisteredAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedReopenDate
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSaledate
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSalehistId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSaleId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeCatId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSource
  - SuperOffice.CRM.Rows.SaleHistRow._persistedSourceId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedStatus
  - SuperOffice.CRM.Rows.SaleHistRow._persistedTextId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedUpdated
  - SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedCount
  - SuperOffice.CRM.Rows.SaleHistRow._persistedUserdef2Id
  - SuperOffice.CRM.Rows.SaleHistRow._persistedUserdefId
  - SuperOffice.CRM.Rows.SaleHistRow._persistedVisibility
  - SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks
  - SuperOffice.CRM.Rows.SaleHistRow.Amount
  - SuperOffice.CRM.Rows.SaleHistRow.AppointmentId
  - SuperOffice.CRM.Rows.SaleHistRow.AssociateId
  - SuperOffice.CRM.Rows.SaleHistRow.ComptrId
  - SuperOffice.CRM.Rows.SaleHistRow.ContactId
  - SuperOffice.CRM.Rows.SaleHistRow.CreateNew
  - SuperOffice.CRM.Rows.SaleHistRow.CreditedId
  - SuperOffice.CRM.Rows.SaleHistRow.CurrencyId
  - SuperOffice.CRM.Rows.SaleHistRow.Done
  - SuperOffice.CRM.Rows.SaleHistRow.Earning
  - SuperOffice.CRM.Rows.SaleHistRow.EarningPercent
  - SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch(SuperOffice.CRM.Rows.SaleHistRow.CustomSearch)
  - SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId(System.Int32)
  - SuperOffice.CRM.Rows.SaleHistRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.SaleHistTableInfo)
  - SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.SaleHistRow.GroupIdx
  - SuperOffice.CRM.Rows.SaleHistRow.Heading
  - SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.SaleHistRow.IsDirty
  - SuperOffice.CRM.Rows.SaleHistRow.IsNew
  - SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.SaleHistRow.Item(System.String)
  - SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId
  - SuperOffice.CRM.Rows.SaleHistRow.NextDueDate
  - SuperOffice.CRM.Rows.SaleHistRow.Number1
  - SuperOffice.CRM.Rows.SaleHistRow.OnActiveLinksChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnAmountChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnAppointmentIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnAssociateIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnComptrIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnContactIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnCreditedIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnCurrencyIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnDoneChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnEarningChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnEarningPercentChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnGroupIdxChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnHeadingChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.SaleHistRow.OnNddAppointmentIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnNextDueDateChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnNumber1Change
  - SuperOffice.CRM.Rows.SaleHistRow.OnPersonIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnPostitTextIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityIdxChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnProjectIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnReasonIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnReasonSoldIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnReasonStalledIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnReopenDateChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnSaledateChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnSaleIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeCatIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.SaleHistRow.OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.SaleHistRow.OnSourceChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnSourceIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnStatusChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnTextIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedCountChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnUserdef2IdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnUserdefIdChange
  - SuperOffice.CRM.Rows.SaleHistRow.OnVisibilityChange
  - SuperOffice.CRM.Rows.SaleHistRow.PersonId
  - SuperOffice.CRM.Rows.SaleHistRow.PostitTextId
  - SuperOffice.CRM.Rows.SaleHistRow.Probability
  - SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx
  - SuperOffice.CRM.Rows.SaleHistRow.ProjectId
  - SuperOffice.CRM.Rows.SaleHistRow.ReasonId
  - SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId
  - SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId
  - SuperOffice.CRM.Rows.SaleHistRow.Registered
  - SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow.ReopenDate
  - SuperOffice.CRM.Rows.SaleHistRow.Reset
  - SuperOffice.CRM.Rows.SaleHistRow.Saledate
  - SuperOffice.CRM.Rows.SaleHistRow.SalehistId
  - SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo
  - SuperOffice.CRM.Rows.SaleHistRow.SaleId
  - SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId
  - SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId
  - SuperOffice.CRM.Rows.SaleHistRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  - SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew
  - SuperOffice.CRM.Rows.SaleHistRow.Source
  - SuperOffice.CRM.Rows.SaleHistRow.SourceId
  - SuperOffice.CRM.Rows.SaleHistRow.Status
  - SuperOffice.CRM.Rows.SaleHistRow.TableInfo
  - SuperOffice.CRM.Rows.SaleHistRow.TextId
  - SuperOffice.CRM.Rows.SaleHistRow.ToString
  - SuperOffice.CRM.Rows.SaleHistRow.Updated
  - SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId
  - SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount
  - SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id
  - SuperOffice.CRM.Rows.SaleHistRow.UserdefId
  - SuperOffice.CRM.Rows.SaleHistRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  - SuperOffice.CRM.Rows.SaleHistRow.Visibility
  langs:
  - csharp
  - vb
  name: SaleHistRow
  nameWithType: SaleHistRow
  fullName: SuperOffice.CRM.Rows.SaleHistRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMirror image of the Sale table, providing a full transaction history. Every time you edit a sale, the previous record of the sale is moved here. \n<br />Row Object for table &apos;SaleHist&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) SaleHistRow <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch(SuperOffice.CRM.Rows.SaleHistRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.SaleHistRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.SaleHistRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.SaleHistTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.SaleHistTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.SaleHistRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <xref href=\"SuperOffice.CRM.Rows.SaleHistRows.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.SaleHistTableInfo)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table SaleHist are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class SaleHistRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem'
    content.vb: >-
      Public Class SaleHistRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  - SuperOffice.Data.ISoItem
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._onValueChange
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.Save
  - SuperOffice.CRM.Rows.TableRowBase.Delete
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.SaleHistRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.SaleHistRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSalehistId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSalehistId
  id: _persistedSalehistId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSalehistId
  nameWithType: SaleHistRow._persistedSalehistId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSalehistId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SalehistId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSalehistId
    return:
      type: System.Int32
    content.vb: Protected _persistedSalehistId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSaleId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSaleId
  id: _persistedSaleId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSaleId
  nameWithType: SaleHistRow._persistedSaleId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSaleId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSaleId
    return:
      type: System.Int32
    content.vb: Protected _persistedSaleId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedAssociateId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedAssociateId
  id: _persistedAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedAssociateId
  nameWithType: SaleHistRow._persistedAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.AssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedGroupIdx
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedGroupIdx
  id: _persistedGroupIdx
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedGroupIdx
  nameWithType: SaleHistRow._persistedGroupIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedGroupIdx
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.GroupIdx\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedGroupIdx
    return:
      type: System.Int32
    content.vb: Protected _persistedGroupIdx As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedContactId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedContactId
  id: _persistedContactId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedContactId
  nameWithType: SaleHistRow._persistedContactId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedContactId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedContactId
    return:
      type: System.Int32
    content.vb: Protected _persistedContactId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedPersonId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedPersonId
  id: _persistedPersonId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedPersonId
  nameWithType: SaleHistRow._persistedPersonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedPersonId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.PersonId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedPersonId
    return:
      type: System.Int32
    content.vb: Protected _persistedPersonId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedRegistered
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedRegistered
  id: _persistedRegistered
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedRegistered
  nameWithType: SaleHistRow._persistedRegistered
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedRegistered
    return:
      type: System.DateTime
    content.vb: Protected _persistedRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSaledate
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSaledate
  id: _persistedSaledate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSaledate
  nameWithType: SaleHistRow._persistedSaledate
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSaledate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Saledate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedSaledate
    return:
      type: System.DateTime
    content.vb: Protected _persistedSaledate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedAmount
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedAmount
  id: _persistedAmount
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedAmount
  nameWithType: SaleHistRow._persistedAmount
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Amount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedAmount
    return:
      type: System.Double
    content.vb: Protected _persistedAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedProbabilityIdx
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedProbabilityIdx
  id: _persistedProbabilityIdx
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedProbabilityIdx
  nameWithType: SaleHistRow._persistedProbabilityIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedProbabilityIdx
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedProbabilityIdx
    return:
      type: System.Int32
    content.vb: Protected _persistedProbabilityIdx As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedAppointmentId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedAppointmentId
  id: _persistedAppointmentId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedAppointmentId
  nameWithType: SaleHistRow._persistedAppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedAppointmentId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedAppointmentId
    return:
      type: System.Int32
    content.vb: Protected _persistedAppointmentId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedTextId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedTextId
  id: _persistedTextId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedTextId
  nameWithType: SaleHistRow._persistedTextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedTextId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.TextId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTextId
    return:
      type: System.Int32
    content.vb: Protected _persistedTextId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedProjectId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedProjectId
  id: _persistedProjectId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedProjectId
  nameWithType: SaleHistRow._persistedProjectId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedProjectId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ProjectId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedProjectId
    return:
      type: System.Int32
    content.vb: Protected _persistedProjectId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedEarning
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedEarning
  id: _persistedEarning
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedEarning
  nameWithType: SaleHistRow._persistedEarning
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedEarning
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Earning\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedEarning
    return:
      type: System.Double
    content.vb: Protected _persistedEarning As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedEarningPercent
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedEarningPercent
  id: _persistedEarningPercent
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedEarningPercent
  nameWithType: SaleHistRow._persistedEarningPercent
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedEarningPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.EarningPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedEarningPercent
    return:
      type: System.Double
    content.vb: Protected _persistedEarningPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedUserdefId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedUserdefId
  id: _persistedUserdefId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedUserdefId
  nameWithType: SaleHistRow._persistedUserdefId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedUserdefId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UserdefId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUserdefId
    return:
      type: System.Int32
    content.vb: Protected _persistedUserdefId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedUserdef2Id
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedUserdef2Id
  id: _persistedUserdef2Id
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedUserdef2Id
  nameWithType: SaleHistRow._persistedUserdef2Id
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedUserdef2Id
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUserdef2Id
    return:
      type: System.Int32
    content.vb: Protected _persistedUserdef2Id As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedHeading
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedHeading
  id: _persistedHeading
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedHeading
  nameWithType: SaleHistRow._persistedHeading
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedHeading
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Heading\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedHeading
    return:
      type: System.String
    content.vb: Protected _persistedHeading As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedCreditedId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedCreditedId
  id: _persistedCreditedId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedCreditedId
  nameWithType: SaleHistRow._persistedCreditedId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedCreditedId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CreditedId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCreditedId
    return:
      type: System.Int32
    content.vb: Protected _persistedCreditedId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSourceId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSourceId
  id: _persistedSourceId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSourceId
  nameWithType: SaleHistRow._persistedSourceId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSourceId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SourceId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSourceId
    return:
      type: System.Int32
    content.vb: Protected _persistedSourceId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedReasonId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedReasonId
  id: _persistedReasonId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedReasonId
  nameWithType: SaleHistRow._persistedReasonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedReasonId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedReasonId
    return:
      type: System.Int32
    content.vb: Protected _persistedReasonId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedComptrId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedComptrId
  id: _persistedComptrId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedComptrId
  nameWithType: SaleHistRow._persistedComptrId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedComptrId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ComptrId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedComptrId
    return:
      type: System.Int32
    content.vb: Protected _persistedComptrId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedCurrencyId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedCurrencyId
  id: _persistedCurrencyId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedCurrencyId
  nameWithType: SaleHistRow._persistedCurrencyId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedCurrencyId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CurrencyId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCurrencyId
    return:
      type: System.Int32
    content.vb: Protected _persistedCurrencyId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedProbability
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedProbability
  id: _persistedProbability
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedProbability
  nameWithType: SaleHistRow._persistedProbability
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedProbability
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Probability\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedProbability
    return:
      type: System.Int16
    content.vb: Protected _persistedProbability As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedStatus
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedStatus
  id: _persistedStatus
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedStatus
  nameWithType: SaleHistRow._persistedStatus
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected SaleStatus _persistedStatus
    return:
      type: SuperOffice.Data.SaleStatus
    content.vb: Protected _persistedStatus As SaleStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedDone
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedDone
  id: _persistedDone
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedDone
  nameWithType: SaleHistRow._persistedDone
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedDone
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Done\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected SaleDone _persistedDone
    return:
      type: SuperOffice.Data.SaleDone
    content.vb: Protected _persistedDone As SaleDone
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedNumber1
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedNumber1
  id: _persistedNumber1
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedNumber1
  nameWithType: SaleHistRow._persistedNumber1
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedNumber1
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Number1\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedNumber1
    return:
      type: System.String
    content.vb: Protected _persistedNumber1 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedVisibility
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedVisibility
  id: _persistedVisibility
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedVisibility
  nameWithType: SaleHistRow._persistedVisibility
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedVisibility
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Visibility\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedVisibility
    return:
      type: System.Int16
    content.vb: Protected _persistedVisibility As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSource
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSource
  id: _persistedSource
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSource
  nameWithType: SaleHistRow._persistedSource
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSource
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Source\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedSource
    return:
      type: System.Int16
    content.vb: Protected _persistedSource As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedRegisteredAssociateId
  id: _persistedRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedRegisteredAssociateId
  nameWithType: SaleHistRow._persistedRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedUpdated
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedUpdated
  id: _persistedUpdated
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedUpdated
  nameWithType: SaleHistRow._persistedUpdated
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedUpdated
    return:
      type: System.DateTime
    content.vb: Protected _persistedUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedAssociateId
  id: _persistedUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedAssociateId
  nameWithType: SaleHistRow._persistedUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedCount
  id: _persistedUpdatedCount
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedCount
  nameWithType: SaleHistRow._persistedUpdatedCount
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _persistedUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedActiveLinks
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedActiveLinks
  id: _persistedActiveLinks
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedActiveLinks
  nameWithType: SaleHistRow._persistedActiveLinks
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedActiveLinks
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _persistedActiveLinks
    return:
      type: System.UInt32
    content.vb: Protected _persistedActiveLinks As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeId
  id: _persistedSaleTypeId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSaleTypeId
  nameWithType: SaleHistRow._persistedSaleTypeId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSaleTypeId
    return:
      type: System.Int32
    content.vb: Protected _persistedSaleTypeId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedPostitTextId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedPostitTextId
  id: _persistedPostitTextId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedPostitTextId
  nameWithType: SaleHistRow._persistedPostitTextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedPostitTextId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.PostitTextId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedPostitTextId
    return:
      type: System.Int32
    content.vb: Protected _persistedPostitTextId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedReasonStalledId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedReasonStalledId
  id: _persistedReasonStalledId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedReasonStalledId
  nameWithType: SaleHistRow._persistedReasonStalledId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedReasonStalledId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedReasonStalledId
    return:
      type: System.Int32
    content.vb: Protected _persistedReasonStalledId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedReopenDate
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedReopenDate
  id: _persistedReopenDate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedReopenDate
  nameWithType: SaleHistRow._persistedReopenDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedReopenDate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReopenDate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedReopenDate
    return:
      type: System.DateTime
    content.vb: Protected _persistedReopenDate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedNextDueDate
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedNextDueDate
  id: _persistedNextDueDate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedNextDueDate
  nameWithType: SaleHistRow._persistedNextDueDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedNextDueDate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.NextDueDate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedNextDueDate
    return:
      type: System.DateTime
    content.vb: Protected _persistedNextDueDate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedNddAppointmentId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedNddAppointmentId
  id: _persistedNddAppointmentId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedNddAppointmentId
  nameWithType: SaleHistRow._persistedNddAppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedNddAppointmentId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedNddAppointmentId
    return:
      type: System.Int32
    content.vb: Protected _persistedNddAppointmentId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedReasonSoldId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedReasonSoldId
  id: _persistedReasonSoldId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedReasonSoldId
  nameWithType: SaleHistRow._persistedReasonSoldId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedReasonSoldId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedReasonSoldId
    return:
      type: System.Int32
    content.vb: Protected _persistedReasonSoldId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeCatId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeCatId
  id: _persistedSaleTypeCatId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _persistedSaleTypeCatId
  nameWithType: SaleHistRow._persistedSaleTypeCatId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._persistedSaleTypeCatId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSaleTypeCatId
    return:
      type: System.Int32
    content.vb: Protected _persistedSaleTypeCatId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSalehistId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSalehistId
  id: _currentSalehistId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSalehistId
  nameWithType: SaleHistRow._currentSalehistId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSalehistId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SalehistId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSalehistId
    return:
      type: System.Int32
    content.vb: Protected _currentSalehistId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSaleId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSaleId
  id: _currentSaleId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSaleId
  nameWithType: SaleHistRow._currentSaleId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSaleId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSaleId
    return:
      type: System.Int32
    content.vb: Protected _currentSaleId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentAssociateId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentAssociateId
  id: _currentAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentAssociateId
  nameWithType: SaleHistRow._currentAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.AssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentGroupIdx
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentGroupIdx
  id: _currentGroupIdx
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentGroupIdx
  nameWithType: SaleHistRow._currentGroupIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentGroupIdx
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.GroupIdx\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentGroupIdx
    return:
      type: System.Int32
    content.vb: Protected _currentGroupIdx As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentContactId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentContactId
  id: _currentContactId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentContactId
  nameWithType: SaleHistRow._currentContactId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentContactId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentContactId
    return:
      type: System.Int32
    content.vb: Protected _currentContactId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentPersonId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentPersonId
  id: _currentPersonId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentPersonId
  nameWithType: SaleHistRow._currentPersonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentPersonId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.PersonId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentPersonId
    return:
      type: System.Int32
    content.vb: Protected _currentPersonId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentRegistered
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentRegistered
  id: _currentRegistered
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentRegistered
  nameWithType: SaleHistRow._currentRegistered
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentRegistered
    return:
      type: System.DateTime
    content.vb: Protected _currentRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSaledate
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSaledate
  id: _currentSaledate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSaledate
  nameWithType: SaleHistRow._currentSaledate
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSaledate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Saledate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentSaledate
    return:
      type: System.DateTime
    content.vb: Protected _currentSaledate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentAmount
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentAmount
  id: _currentAmount
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentAmount
  nameWithType: SaleHistRow._currentAmount
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Amount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentAmount
    return:
      type: System.Double
    content.vb: Protected _currentAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentProbabilityIdx
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentProbabilityIdx
  id: _currentProbabilityIdx
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentProbabilityIdx
  nameWithType: SaleHistRow._currentProbabilityIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentProbabilityIdx
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentProbabilityIdx
    return:
      type: System.Int32
    content.vb: Protected _currentProbabilityIdx As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentAppointmentId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentAppointmentId
  id: _currentAppointmentId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentAppointmentId
  nameWithType: SaleHistRow._currentAppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentAppointmentId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentAppointmentId
    return:
      type: System.Int32
    content.vb: Protected _currentAppointmentId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentTextId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentTextId
  id: _currentTextId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentTextId
  nameWithType: SaleHistRow._currentTextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentTextId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.TextId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTextId
    return:
      type: System.Int32
    content.vb: Protected _currentTextId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentProjectId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentProjectId
  id: _currentProjectId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentProjectId
  nameWithType: SaleHistRow._currentProjectId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentProjectId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ProjectId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentProjectId
    return:
      type: System.Int32
    content.vb: Protected _currentProjectId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentEarning
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentEarning
  id: _currentEarning
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentEarning
  nameWithType: SaleHistRow._currentEarning
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentEarning
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Earning\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentEarning
    return:
      type: System.Double
    content.vb: Protected _currentEarning As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentEarningPercent
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentEarningPercent
  id: _currentEarningPercent
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentEarningPercent
  nameWithType: SaleHistRow._currentEarningPercent
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentEarningPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.EarningPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentEarningPercent
    return:
      type: System.Double
    content.vb: Protected _currentEarningPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentUserdefId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentUserdefId
  id: _currentUserdefId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentUserdefId
  nameWithType: SaleHistRow._currentUserdefId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentUserdefId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UserdefId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUserdefId
    return:
      type: System.Int32
    content.vb: Protected _currentUserdefId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentUserdef2Id
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentUserdef2Id
  id: _currentUserdef2Id
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentUserdef2Id
  nameWithType: SaleHistRow._currentUserdef2Id
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentUserdef2Id
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUserdef2Id
    return:
      type: System.Int32
    content.vb: Protected _currentUserdef2Id As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentHeading
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentHeading
  id: _currentHeading
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentHeading
  nameWithType: SaleHistRow._currentHeading
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentHeading
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Heading\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentHeading
    return:
      type: System.String
    content.vb: Protected _currentHeading As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentCreditedId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentCreditedId
  id: _currentCreditedId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentCreditedId
  nameWithType: SaleHistRow._currentCreditedId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentCreditedId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CreditedId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCreditedId
    return:
      type: System.Int32
    content.vb: Protected _currentCreditedId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSourceId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSourceId
  id: _currentSourceId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSourceId
  nameWithType: SaleHistRow._currentSourceId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSourceId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SourceId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSourceId
    return:
      type: System.Int32
    content.vb: Protected _currentSourceId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentReasonId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentReasonId
  id: _currentReasonId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentReasonId
  nameWithType: SaleHistRow._currentReasonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentReasonId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentReasonId
    return:
      type: System.Int32
    content.vb: Protected _currentReasonId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentComptrId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentComptrId
  id: _currentComptrId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentComptrId
  nameWithType: SaleHistRow._currentComptrId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentComptrId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ComptrId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentComptrId
    return:
      type: System.Int32
    content.vb: Protected _currentComptrId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentCurrencyId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentCurrencyId
  id: _currentCurrencyId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentCurrencyId
  nameWithType: SaleHistRow._currentCurrencyId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentCurrencyId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CurrencyId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCurrencyId
    return:
      type: System.Int32
    content.vb: Protected _currentCurrencyId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentProbability
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentProbability
  id: _currentProbability
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentProbability
  nameWithType: SaleHistRow._currentProbability
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentProbability
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Probability\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentProbability
    return:
      type: System.Int16
    content.vb: Protected _currentProbability As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentStatus
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentStatus
  id: _currentStatus
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentStatus
  nameWithType: SaleHistRow._currentStatus
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected SaleStatus _currentStatus
    return:
      type: SuperOffice.Data.SaleStatus
    content.vb: Protected _currentStatus As SaleStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentDone
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentDone
  id: _currentDone
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentDone
  nameWithType: SaleHistRow._currentDone
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentDone
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Done\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected SaleDone _currentDone
    return:
      type: SuperOffice.Data.SaleDone
    content.vb: Protected _currentDone As SaleDone
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentNumber1
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentNumber1
  id: _currentNumber1
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentNumber1
  nameWithType: SaleHistRow._currentNumber1
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentNumber1
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Number1\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentNumber1
    return:
      type: System.String
    content.vb: Protected _currentNumber1 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentVisibility
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentVisibility
  id: _currentVisibility
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentVisibility
  nameWithType: SaleHistRow._currentVisibility
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentVisibility
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Visibility\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentVisibility
    return:
      type: System.Int16
    content.vb: Protected _currentVisibility As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSource
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSource
  id: _currentSource
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSource
  nameWithType: SaleHistRow._currentSource
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSource
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Source\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentSource
    return:
      type: System.Int16
    content.vb: Protected _currentSource As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentRegisteredAssociateId
  id: _currentRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentRegisteredAssociateId
  nameWithType: SaleHistRow._currentRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentUpdated
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentUpdated
  id: _currentUpdated
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentUpdated
  nameWithType: SaleHistRow._currentUpdated
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentUpdated
    return:
      type: System.DateTime
    content.vb: Protected _currentUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedAssociateId
  id: _currentUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedAssociateId
  nameWithType: SaleHistRow._currentUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedCount
  id: _currentUpdatedCount
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedCount
  nameWithType: SaleHistRow._currentUpdatedCount
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _currentUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentActiveLinks
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentActiveLinks
  id: _currentActiveLinks
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentActiveLinks
  nameWithType: SaleHistRow._currentActiveLinks
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentActiveLinks
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _currentActiveLinks
    return:
      type: System.UInt32
    content.vb: Protected _currentActiveLinks As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeId
  id: _currentSaleTypeId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSaleTypeId
  nameWithType: SaleHistRow._currentSaleTypeId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSaleTypeId
    return:
      type: System.Int32
    content.vb: Protected _currentSaleTypeId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentPostitTextId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentPostitTextId
  id: _currentPostitTextId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentPostitTextId
  nameWithType: SaleHistRow._currentPostitTextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentPostitTextId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.PostitTextId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentPostitTextId
    return:
      type: System.Int32
    content.vb: Protected _currentPostitTextId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentReasonStalledId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentReasonStalledId
  id: _currentReasonStalledId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentReasonStalledId
  nameWithType: SaleHistRow._currentReasonStalledId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentReasonStalledId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentReasonStalledId
    return:
      type: System.Int32
    content.vb: Protected _currentReasonStalledId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentReopenDate
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentReopenDate
  id: _currentReopenDate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentReopenDate
  nameWithType: SaleHistRow._currentReopenDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentReopenDate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReopenDate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentReopenDate
    return:
      type: System.DateTime
    content.vb: Protected _currentReopenDate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentNextDueDate
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentNextDueDate
  id: _currentNextDueDate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentNextDueDate
  nameWithType: SaleHistRow._currentNextDueDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentNextDueDate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.NextDueDate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentNextDueDate
    return:
      type: System.DateTime
    content.vb: Protected _currentNextDueDate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentNddAppointmentId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentNddAppointmentId
  id: _currentNddAppointmentId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentNddAppointmentId
  nameWithType: SaleHistRow._currentNddAppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentNddAppointmentId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentNddAppointmentId
    return:
      type: System.Int32
    content.vb: Protected _currentNddAppointmentId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentReasonSoldId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentReasonSoldId
  id: _currentReasonSoldId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentReasonSoldId
  nameWithType: SaleHistRow._currentReasonSoldId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentReasonSoldId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentReasonSoldId
    return:
      type: System.Int32
    content.vb: Protected _currentReasonSoldId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeCatId
  commentId: F:SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeCatId
  id: _currentSaleTypeCatId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _currentSaleTypeCatId
  nameWithType: SaleHistRow._currentSaleTypeCatId
  fullName: SuperOffice.CRM.Rows.SaleHistRow._currentSaleTypeCatId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSaleTypeCatId
    return:
      type: System.Int32
    content.vb: Protected _currentSaleTypeCatId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: SaleHistRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: SaleHistRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: SaleHistRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.#ctor(SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.#ctor(SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase)'
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SaleHistRow(SaleHistRow.SaleHistRowIdxBase)
  nameWithType: SaleHistRow.SaleHistRow(SaleHistRow.SaleHistRowIdxBase)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleHistRow(SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nMirror image of the Sale table, providing a full transaction history. Every time you edit a sale, the previous record of the sale is moved here. \n"
  syntax:
    content: protected SaleHistRow(SaleHistRow.SaleHistRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As SaleHistRow.SaleHistRowIdxBase)
  overload: SuperOffice.CRM.Rows.SaleHistRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: SaleHistRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the SaleHistRow object.\nMirror image of the Sale table, providing a full transaction history. Every time you edit a sale, the previous record of the sale is moved here. \n"
  syntax:
    content: public static SaleHistRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.SaleHistRow
      description: A new instance of the SaleHistRow object.
    content.vb: Public Shared Function CreateNew As SaleHistRow
  overload: SuperOffice.CRM.Rows.SaleHistRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.SaleHistTableInfo)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.SaleHistTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.SaleHistTableInfo)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, SaleHistTableInfo)
  nameWithType: SaleHistRow.GetFromReader(SoDataReader, SaleHistTableInfo)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.SaleHistTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the SaleHistRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nMirror image of the Sale table, providing a full transaction history. Every time you edit a sale, the previous record of the sale is moved here. \n"
  syntax:
    content: public static SaleHistRow GetFromReader(SoDataReader reader, SaleHistTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.SaleHistTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.SaleHistTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.SaleHistRow
      description: A new instance of the SaleHistRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As SaleHistTableInfo) As SaleHistRow
  overload: SuperOffice.CRM.Rows.SaleHistRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch(SuperOffice.CRM.Rows.SaleHistRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch(SuperOffice.CRM.Rows.SaleHistRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.SaleHistRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(SaleHistRow.CustomSearch)
  nameWithType: SaleHistRow.GetFromCustomSearch(SaleHistRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch(SuperOffice.CRM.Rows.SaleHistRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the SaleHistRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static SaleHistRow GetFromCustomSearch(SaleHistRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.SaleHistRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.SaleHistRow
      description: A new instance of the SaleHistRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As SaleHistRow.CustomSearch) As SaleHistRow
  overload: SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId(System.Int32)
  id: GetFromIdxSalehistId(System.Int32)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: GetFromIdxSalehistId(Int32)
  nameWithType: SaleHistRow.GetFromIdxSalehistId(Int32)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the SaleHistRow object, by querying the database table via the index &apos;IDXSaleHistId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the SaleHist table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.SaleHistRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static SaleHistRow GetFromIdxSalehistId(int salehistId)
    parameters:
    - id: salehistId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.SaleHistRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxSalehistId(salehistId As Integer) As SaleHistRow
  overload: SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.SaleHistRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  id: SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SetDefaults(DefaulterStrategy)
  nameWithType: SaleHistRow.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override void SetDefaults(DefaulterStrategy strategy)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    content.vb: Public Overrides Sub SetDefaults(strategy As DefaulterStrategy)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  overload: SuperOffice.CRM.Rows.SaleHistRow.SetDefaults*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.ToString
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SaleHistRow.ToString()
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.Rows.SaleHistRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: SaleHistRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.Reset
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SaleHistRow.Reset()
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.SaleHistRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: SaleHistRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.SaleHistRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: SaleHistRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  id: OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSave(BatchSave)
  nameWithType: SaleHistRow.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override void OnSave(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    content.vb: Protected Overrides Sub OnSave(batchSave As BatchSave)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.SaleHistRow.OnSave*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.OnSaved(System.Boolean)
  id: OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSaved(Boolean)
  nameWithType: SaleHistRow.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSaved(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override void OnSaved(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    content.vb: Protected Overrides Sub OnSaved(bSucceeded As Boolean)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  overload: SuperOffice.CRM.Rows.SaleHistRow.OnSaved*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.SaleHistRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: SaleHistRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.SaleHistRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.SaleHistRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: SaleHistRow.Item[String]
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.SaleHistRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: SaleHistRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.SaleHistRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.SaleHistRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: SaleHistRow.TableInfo
  fullName: SuperOffice.CRM.Rows.SaleHistRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.SaleHistRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo
  id: SaleHistTableInfo
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SaleHistTableInfo
  nameWithType: SaleHistRow.SaleHistTableInfo
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.SaleHistTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public SaleHistTableInfo SaleHistTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.SaleHistTableInfo
    content.vb: Public ReadOnly Property SaleHistTableInfo As SaleHistTableInfo
  overload: SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: SaleHistRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: SaleHistRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: SaleHistRow.IsNew
  fullName: SuperOffice.CRM.Rows.SaleHistRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.SaleHistRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: SaleHistRow.IsDirty
  fullName: SuperOffice.CRM.Rows.SaleHistRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.SaleHistRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: SaleHistRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.SalehistId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.SalehistId
  id: SalehistId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SalehistId
  nameWithType: SaleHistRow.SalehistId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SalehistId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Primary key \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>		\n<p>Read only for code not signed by SuperOffice.</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int SalehistId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property SalehistId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.SalehistId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.SaleId
  id: SaleId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SaleId
  nameWithType: SaleHistRow.SaleId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The sale \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int SaleId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SaleId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.SaleId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.AssociateId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: SaleHistRow.AssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.AssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Owning associate \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>Setting this field to a new value will reset the Sentry and recalculate your rights based on the new value</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n"
  syntax:
    content: public virtual int AssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property AssociateId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.AssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.GroupIdx
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.GroupIdx
  id: GroupIdx
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: GroupIdx
  nameWithType: SaleHistRow.GroupIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GroupIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Owner&apos;s group whn sale was created \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>Setting this field to a new value will reset the Sentry and recalculate your rights based on the new value</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n"
  syntax:
    content: public virtual int GroupIdx { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property GroupIdx As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.GroupIdx*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ContactId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: SaleHistRow.ContactId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Optional contact reference \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ContactId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ContactId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ContactId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.PersonId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.PersonId
  id: PersonId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: SaleHistRow.PersonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.PersonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Optional person reference \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int PersonId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property PersonId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.PersonId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Registered
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: SaleHistRow.Registered
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Registered date in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Registered { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Registered As Date
  overload: SuperOffice.CRM.Rows.SaleHistRow.Registered*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Saledate
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Saledate
  id: Saledate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Saledate
  nameWithType: SaleHistRow.Saledate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Saledate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. (expected | lost | won) sales date \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Saledate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Saledate As Date
  overload: SuperOffice.CRM.Rows.SaleHistRow.Saledate*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Amount
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Amount
  id: Amount
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: SaleHistRow.Amount
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Amount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. Total sale amount \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double Amount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property Amount As Double
  overload: SuperOffice.CRM.Rows.SaleHistRow.Amount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx
  id: ProbabilityIdx
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ProbabilityIdx
  nameWithType: SaleHistRow.ProbabilityIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Pointer to probability list value \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ProbabilityIdx { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ProbabilityIdx As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.AppointmentId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.AppointmentId
  id: AppointmentId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: AppointmentId
  nameWithType: SaleHistRow.AppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.AppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. For future use \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int AppointmentId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property AppointmentId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.AppointmentId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.TextId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.TextId
  id: TextId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: TextId
  nameWithType: SaleHistRow.TextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.TextId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Optional long description \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TextId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TextId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.TextId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ProjectId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ProjectId
  id: ProjectId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: SaleHistRow.ProjectId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ProjectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Optional project reference \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ProjectId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ProjectId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ProjectId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Earning
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Earning
  id: Earning
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Earning
  nameWithType: SaleHistRow.Earning
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Earning
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. Earning on sale \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double Earning { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property Earning As Double
  overload: SuperOffice.CRM.Rows.SaleHistRow.Earning*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.EarningPercent
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.EarningPercent
  id: EarningPercent
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: EarningPercent
  nameWithType: SaleHistRow.EarningPercent
  fullName: SuperOffice.CRM.Rows.SaleHistRow.EarningPercent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. Earning as percent of total \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double EarningPercent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property EarningPercent As Double
  overload: SuperOffice.CRM.Rows.SaleHistRow.EarningPercent*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.UserdefId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.UserdefId
  id: UserdefId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: UserdefId
  nameWithType: SaleHistRow.UserdefId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.UserdefId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. User-defined fields reference \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int UserdefId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UserdefId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.UserdefId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id
  id: Userdef2Id
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Userdef2Id
  nameWithType: SaleHistRow.Userdef2Id
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. User-defined fields reference \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int Userdef2Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Userdef2Id As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Heading
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Heading
  id: Heading
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: SaleHistRow.Heading
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Heading
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Sale heading (short description?) \n"
  remarks: "\nOriginal type in dictionary:  String[220].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Heading { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Heading As String
  overload: SuperOffice.CRM.Rows.SaleHistRow.Heading*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.CreditedId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.CreditedId
  id: CreditedId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: CreditedId
  nameWithType: SaleHistRow.CreditedId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CreditedId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Who is to be credited for the sale \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int CreditedId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property CreditedId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.CreditedId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.SourceId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.SourceId
  id: SourceId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SourceId
  nameWithType: SaleHistRow.SourceId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SourceId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Source of order \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int SourceId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SourceId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.SourceId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReasonId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ReasonId
  id: ReasonId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ReasonId
  nameWithType: SaleHistRow.ReasonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReasonId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Why we lost it \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ReasonId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ReasonId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ReasonId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ComptrId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ComptrId
  id: ComptrId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ComptrId
  nameWithType: SaleHistRow.ComptrId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ComptrId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Competitor \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ComptrId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ComptrId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ComptrId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.CurrencyId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.CurrencyId
  id: CurrencyId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: CurrencyId
  nameWithType: SaleHistRow.CurrencyId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CurrencyId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Currency of sale \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int CurrencyId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property CurrencyId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.CurrencyId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Probability
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Probability
  id: Probability
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: SaleHistRow.Probability
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Probability
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Actual probability, may differ from the one in the list \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Probability { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Probability As Short
  overload: SuperOffice.CRM.Rows.SaleHistRow.Probability*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Status
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Status
  id: Status
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SaleHistRow.Status
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: SaleStatus. Status (open, closed, lost) \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual SaleStatus Status { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SaleStatus
    content.vb: Public Overridable Property Status As SaleStatus
  overload: SuperOffice.CRM.Rows.SaleHistRow.Status*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Done
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Done
  id: Done
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Done
  nameWithType: SaleHistRow.Done
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Done
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: SaleDone. Done (0=don&apos;t know, 1 = No, 2=Yes) \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>Setting this field to a new value will reset the Sentry and recalculate your rights based on the new value</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n"
  syntax:
    content: public virtual SaleDone Done { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SaleDone
    content.vb: Public Overridable Property Done As SaleDone
  overload: SuperOffice.CRM.Rows.SaleHistRow.Done*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Number1
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Number1
  id: Number1
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Number1
  nameWithType: SaleHistRow.Number1
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Number1
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Alphanumeric user field \n"
  remarks: "\nOriginal type in dictionary:  String[50].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Number1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Number1 As String
  overload: SuperOffice.CRM.Rows.SaleHistRow.Number1*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Visibility
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Visibility
  id: Visibility
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: SaleHistRow.Visibility
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Visibility
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Obsolete, but still maintained denormalization of visiblefor \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Visibility { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Visibility As Short
  overload: SuperOffice.CRM.Rows.SaleHistRow.Visibility*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Source
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Source
  id: Source
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: SaleHistRow.Source
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Source
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. For future integration use; source of record \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Source { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Source As Short
  overload: SuperOffice.CRM.Rows.SaleHistRow.Source*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: SaleHistRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Registered by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RegisteredAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RegisteredAssociateId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.Updated
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: SaleHistRow.Updated
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Last updated in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Updated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Updated As Date
  overload: SuperOffice.CRM.Rows.SaleHistRow.Updated*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: SaleHistRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Last updated by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int UpdatedAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UpdatedAssociateId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: SaleHistRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Number of updates made to this record \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short UpdatedCount { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property UpdatedCount As Short
  overload: SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks
  id: ActiveLinks
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ActiveLinks
  nameWithType: SaleHistRow.ActiveLinks
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: uint. Number of active links to documents and such \n"
  remarks: "\nOriginal type in dictionary:  UInt.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((UInt32)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual uint ActiveLinks { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Overridable Property ActiveLinks As UInteger
  overload: SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId
  id: SaleTypeId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SaleTypeId
  nameWithType: SaleHistRow.SaleTypeId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Link to list, sale type (big sale, small sale, no-process sale, ...) \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int SaleTypeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SaleTypeId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.PostitTextId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.PostitTextId
  id: PostitTextId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: PostitTextId
  nameWithType: SaleHistRow.PostitTextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.PostitTextId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Paperclip text \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int PostitTextId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property PostitTextId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.PostitTextId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId
  id: ReasonStalledId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ReasonStalledId
  nameWithType: SaleHistRow.ReasonStalledId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. If the status is stalled, it should be commented here \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ReasonStalledId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ReasonStalledId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReopenDate
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ReopenDate
  id: ReopenDate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ReopenDate
  nameWithType: SaleHistRow.ReopenDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReopenDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Date the sale is to be reopened; valid only for status=stalled. Not necessarily the same as the nextDueDate. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime ReopenDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property ReopenDate As Date
  overload: SuperOffice.CRM.Rows.SaleHistRow.ReopenDate*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.NextDueDate
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.NextDueDate
  id: NextDueDate
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: NextDueDate
  nameWithType: SaleHistRow.NextDueDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.NextDueDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Next due date, this is a denormalization of &apos;closest future activity date, or most recent if no future activities&apos;. Maintained by the system, but very convenient for searching. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime NextDueDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property NextDueDate As Date
  overload: SuperOffice.CRM.Rows.SaleHistRow.NextDueDate*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId
  id: NddAppointmentId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: NddAppointmentId
  nameWithType: SaleHistRow.NddAppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. ID, can be 0, of the appointment that &quot;caused&quot; the nextDueDate \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int NddAppointmentId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property NddAppointmentId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId
  id: ReasonSoldId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: ReasonSoldId
  nameWithType: SaleHistRow.ReasonSoldId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Reason why we made the sale \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ReasonSoldId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ReasonSoldId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId
  commentId: P:SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId
  id: SaleTypeCatId
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: SaleTypeCatId
  nameWithType: SaleHistRow.SaleTypeCatId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Category of sale type, slaved from saletype \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int SaleTypeCatId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SaleTypeCatId As Integer
  overload: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.SaleHistRow._onSaleIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onSaleIdChange
  id: _onSaleIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onSaleIdChange
  nameWithType: SaleHistRow._onSaleIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onSaleIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSaleIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSaleIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onAssociateIdChange
  id: _onAssociateIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onAssociateIdChange
  nameWithType: SaleHistRow._onAssociateIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.AssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onGroupIdxChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onGroupIdxChange
  id: _onGroupIdxChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onGroupIdxChange
  nameWithType: SaleHistRow._onGroupIdxChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onGroupIdxChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.GroupIdx\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onGroupIdxChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onGroupIdxChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onContactIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onContactIdChange
  id: _onContactIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onContactIdChange
  nameWithType: SaleHistRow._onContactIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onContactIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onContactIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onContactIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onPersonIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onPersonIdChange
  id: _onPersonIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onPersonIdChange
  nameWithType: SaleHistRow._onPersonIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onPersonIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.PersonId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onPersonIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onPersonIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onRegisteredChange
  id: _onRegisteredChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onRegisteredChange
  nameWithType: SaleHistRow._onRegisteredChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onSaledateChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onSaledateChange
  id: _onSaledateChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onSaledateChange
  nameWithType: SaleHistRow._onSaledateChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onSaledateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Saledate\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onSaledateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onSaledateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onAmountChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onAmountChange
  id: _onAmountChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onAmountChange
  nameWithType: SaleHistRow._onAmountChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Amount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onProbabilityIdxChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onProbabilityIdxChange
  id: _onProbabilityIdxChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onProbabilityIdxChange
  nameWithType: SaleHistRow._onProbabilityIdxChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onProbabilityIdxChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onProbabilityIdxChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onProbabilityIdxChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onAppointmentIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onAppointmentIdChange
  id: _onAppointmentIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onAppointmentIdChange
  nameWithType: SaleHistRow._onAppointmentIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onAppointmentIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.AppointmentId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onAppointmentIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onAppointmentIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onTextIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onTextIdChange
  id: _onTextIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onTextIdChange
  nameWithType: SaleHistRow._onTextIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onTextIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.TextId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTextIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTextIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onProjectIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onProjectIdChange
  id: _onProjectIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onProjectIdChange
  nameWithType: SaleHistRow._onProjectIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onProjectIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ProjectId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onProjectIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onProjectIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onEarningChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onEarningChange
  id: _onEarningChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onEarningChange
  nameWithType: SaleHistRow._onEarningChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onEarningChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Earning\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onEarningChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onEarningChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onEarningPercentChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onEarningPercentChange
  id: _onEarningPercentChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onEarningPercentChange
  nameWithType: SaleHistRow._onEarningPercentChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onEarningPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.EarningPercent\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onEarningPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onEarningPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onUserdefIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onUserdefIdChange
  id: _onUserdefIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onUserdefIdChange
  nameWithType: SaleHistRow._onUserdefIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onUserdefIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UserdefId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onUserdefIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onUserdefIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onUserdef2IdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onUserdef2IdChange
  id: _onUserdef2IdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onUserdef2IdChange
  nameWithType: SaleHistRow._onUserdef2IdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onUserdef2IdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onUserdef2IdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onUserdef2IdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onHeadingChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onHeadingChange
  id: _onHeadingChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onHeadingChange
  nameWithType: SaleHistRow._onHeadingChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onHeadingChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Heading\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onHeadingChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onHeadingChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onCreditedIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onCreditedIdChange
  id: _onCreditedIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onCreditedIdChange
  nameWithType: SaleHistRow._onCreditedIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onCreditedIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CreditedId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onCreditedIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onCreditedIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onSourceIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onSourceIdChange
  id: _onSourceIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onSourceIdChange
  nameWithType: SaleHistRow._onSourceIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onSourceIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SourceId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSourceIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSourceIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onReasonIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onReasonIdChange
  id: _onReasonIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onReasonIdChange
  nameWithType: SaleHistRow._onReasonIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onReasonIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onReasonIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onReasonIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onComptrIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onComptrIdChange
  id: _onComptrIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onComptrIdChange
  nameWithType: SaleHistRow._onComptrIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onComptrIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ComptrId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onComptrIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onComptrIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onCurrencyIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onCurrencyIdChange
  id: _onCurrencyIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onCurrencyIdChange
  nameWithType: SaleHistRow._onCurrencyIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onCurrencyIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.CurrencyId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onCurrencyIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onCurrencyIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onProbabilityChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onProbabilityChange
  id: _onProbabilityChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onProbabilityChange
  nameWithType: SaleHistRow._onProbabilityChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onProbabilityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Probability\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onProbabilityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onProbabilityChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onStatusChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onStatusChange
  id: _onStatusChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onStatusChange
  nameWithType: SaleHistRow._onStatusChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Status\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<SaleStatus> _onStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleStatus}
    content.vb: Protected Event _onStatusChange As OnFieldChange(Of SaleStatus)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onDoneChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onDoneChange
  id: _onDoneChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onDoneChange
  nameWithType: SaleHistRow._onDoneChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onDoneChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Done\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<SaleDone> _onDoneChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleDone}
    content.vb: Protected Event _onDoneChange As OnFieldChange(Of SaleDone)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onNumber1Change
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onNumber1Change
  id: _onNumber1Change
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onNumber1Change
  nameWithType: SaleHistRow._onNumber1Change
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onNumber1Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Number1\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onNumber1Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onNumber1Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onVisibilityChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onVisibilityChange
  id: _onVisibilityChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onVisibilityChange
  nameWithType: SaleHistRow._onVisibilityChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onVisibilityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Visibility\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onVisibilityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onVisibilityChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onSourceChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onSourceChange
  id: _onSourceChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onSourceChange
  nameWithType: SaleHistRow._onSourceChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onSourceChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Source\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onSourceChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onSourceChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onRegisteredAssociateIdChange
  id: _onRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onRegisteredAssociateIdChange
  nameWithType: SaleHistRow._onRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onUpdatedChange
  id: _onUpdatedChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onUpdatedChange
  nameWithType: SaleHistRow._onUpdatedChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onUpdatedAssociateIdChange
  id: _onUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onUpdatedAssociateIdChange
  nameWithType: SaleHistRow._onUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onUpdatedCountChange
  id: _onUpdatedCountChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onUpdatedCountChange
  nameWithType: SaleHistRow._onUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onActiveLinksChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onActiveLinksChange
  id: _onActiveLinksChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onActiveLinksChange
  nameWithType: SaleHistRow._onActiveLinksChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onActiveLinksChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type uint.\n"
  syntax:
    content: protected event OnFieldChange<uint> _onActiveLinksChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Protected Event _onActiveLinksChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeIdChange
  id: _onSaleTypeIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onSaleTypeIdChange
  nameWithType: SaleHistRow._onSaleTypeIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSaleTypeIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSaleTypeIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onPostitTextIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onPostitTextIdChange
  id: _onPostitTextIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onPostitTextIdChange
  nameWithType: SaleHistRow._onPostitTextIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onPostitTextIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.PostitTextId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onPostitTextIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onPostitTextIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onReasonStalledIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onReasonStalledIdChange
  id: _onReasonStalledIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onReasonStalledIdChange
  nameWithType: SaleHistRow._onReasonStalledIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onReasonStalledIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onReasonStalledIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onReasonStalledIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onReopenDateChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onReopenDateChange
  id: _onReopenDateChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onReopenDateChange
  nameWithType: SaleHistRow._onReopenDateChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onReopenDateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReopenDate\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onReopenDateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onReopenDateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onNextDueDateChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onNextDueDateChange
  id: _onNextDueDateChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onNextDueDateChange
  nameWithType: SaleHistRow._onNextDueDateChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onNextDueDateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.NextDueDate\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onNextDueDateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onNextDueDateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onNddAppointmentIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onNddAppointmentIdChange
  id: _onNddAppointmentIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onNddAppointmentIdChange
  nameWithType: SaleHistRow._onNddAppointmentIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onNddAppointmentIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onNddAppointmentIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onNddAppointmentIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onReasonSoldIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onReasonSoldIdChange
  id: _onReasonSoldIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onReasonSoldIdChange
  nameWithType: SaleHistRow._onReasonSoldIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onReasonSoldIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onReasonSoldIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onReasonSoldIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeCatIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeCatIdChange
  id: _onSaleTypeCatIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: _onSaleTypeCatIdChange
  nameWithType: SaleHistRow._onSaleTypeCatIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow._onSaleTypeCatIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSaleTypeCatIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSaleTypeCatIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSaleIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnSaleIdChange
  id: OnSaleIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSaleIdChange
  nameWithType: SaleHistRow.OnSaleIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSaleIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when SaleId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSaleIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSaleIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnAssociateIdChange
  id: OnAssociateIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnAssociateIdChange
  nameWithType: SaleHistRow.OnAssociateIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnGroupIdxChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnGroupIdxChange
  id: OnGroupIdxChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnGroupIdxChange
  nameWithType: SaleHistRow.OnGroupIdxChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnGroupIdxChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when GroupIdx is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnGroupIdxChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnGroupIdxChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnContactIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnContactIdChange
  id: OnContactIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnContactIdChange
  nameWithType: SaleHistRow.OnContactIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnContactIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ContactId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnContactIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnContactIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnPersonIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnPersonIdChange
  id: OnPersonIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnPersonIdChange
  nameWithType: SaleHistRow.OnPersonIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnPersonIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when PersonId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnPersonIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnPersonIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredChange
  id: OnRegisteredChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnRegisteredChange
  nameWithType: SaleHistRow.OnRegisteredChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Registered is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSaledateChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnSaledateChange
  id: OnSaledateChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSaledateChange
  nameWithType: SaleHistRow.OnSaledateChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSaledateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Saledate is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnSaledateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnSaledateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnAmountChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnAmountChange
  id: OnAmountChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnAmountChange
  nameWithType: SaleHistRow.OnAmountChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Amount is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityIdxChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityIdxChange
  id: OnProbabilityIdxChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnProbabilityIdxChange
  nameWithType: SaleHistRow.OnProbabilityIdxChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityIdxChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ProbabilityIdx is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnProbabilityIdxChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnProbabilityIdxChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnAppointmentIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnAppointmentIdChange
  id: OnAppointmentIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnAppointmentIdChange
  nameWithType: SaleHistRow.OnAppointmentIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnAppointmentIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AppointmentId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnAppointmentIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnAppointmentIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnTextIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnTextIdChange
  id: OnTextIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnTextIdChange
  nameWithType: SaleHistRow.OnTextIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnTextIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TextId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTextIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTextIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnProjectIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnProjectIdChange
  id: OnProjectIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnProjectIdChange
  nameWithType: SaleHistRow.OnProjectIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnProjectIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ProjectId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnProjectIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnProjectIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnEarningChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnEarningChange
  id: OnEarningChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnEarningChange
  nameWithType: SaleHistRow.OnEarningChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnEarningChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Earning is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnEarningChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnEarningChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnEarningPercentChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnEarningPercentChange
  id: OnEarningPercentChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnEarningPercentChange
  nameWithType: SaleHistRow.OnEarningPercentChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnEarningPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when EarningPercent is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnEarningPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnEarningPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnUserdefIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnUserdefIdChange
  id: OnUserdefIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnUserdefIdChange
  nameWithType: SaleHistRow.OnUserdefIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnUserdefIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UserdefId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnUserdefIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnUserdefIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnUserdef2IdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnUserdef2IdChange
  id: OnUserdef2IdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnUserdef2IdChange
  nameWithType: SaleHistRow.OnUserdef2IdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnUserdef2IdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Userdef2Id is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnUserdef2IdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnUserdef2IdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnHeadingChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnHeadingChange
  id: OnHeadingChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnHeadingChange
  nameWithType: SaleHistRow.OnHeadingChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnHeadingChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Heading is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnHeadingChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnHeadingChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnCreditedIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnCreditedIdChange
  id: OnCreditedIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnCreditedIdChange
  nameWithType: SaleHistRow.OnCreditedIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnCreditedIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CreditedId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnCreditedIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnCreditedIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSourceIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnSourceIdChange
  id: OnSourceIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSourceIdChange
  nameWithType: SaleHistRow.OnSourceIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSourceIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when SourceId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSourceIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSourceIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnReasonIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnReasonIdChange
  id: OnReasonIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnReasonIdChange
  nameWithType: SaleHistRow.OnReasonIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnReasonIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReasonId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnReasonIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnReasonIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnComptrIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnComptrIdChange
  id: OnComptrIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnComptrIdChange
  nameWithType: SaleHistRow.OnComptrIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnComptrIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ComptrId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnComptrIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnComptrIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnCurrencyIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnCurrencyIdChange
  id: OnCurrencyIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnCurrencyIdChange
  nameWithType: SaleHistRow.OnCurrencyIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnCurrencyIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CurrencyId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnCurrencyIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnCurrencyIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityChange
  id: OnProbabilityChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnProbabilityChange
  nameWithType: SaleHistRow.OnProbabilityChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnProbabilityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Probability is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnProbabilityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnProbabilityChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnStatusChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnStatusChange
  id: OnStatusChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnStatusChange
  nameWithType: SaleHistRow.OnStatusChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Status is changing.\n"
  syntax:
    content: public event OnFieldChange<SaleStatus> OnStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleStatus}
    content.vb: Public Event OnStatusChange As OnFieldChange(Of SaleStatus)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnDoneChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnDoneChange
  id: OnDoneChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnDoneChange
  nameWithType: SaleHistRow.OnDoneChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnDoneChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Done is changing.\n"
  syntax:
    content: public event OnFieldChange<SaleDone> OnDoneChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleDone}
    content.vb: Public Event OnDoneChange As OnFieldChange(Of SaleDone)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnNumber1Change
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnNumber1Change
  id: OnNumber1Change
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnNumber1Change
  nameWithType: SaleHistRow.OnNumber1Change
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnNumber1Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Number1 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnNumber1Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnNumber1Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnVisibilityChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnVisibilityChange
  id: OnVisibilityChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnVisibilityChange
  nameWithType: SaleHistRow.OnVisibilityChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnVisibilityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Visibility is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnVisibilityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnVisibilityChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSourceChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnSourceChange
  id: OnSourceChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSourceChange
  nameWithType: SaleHistRow.OnSourceChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSourceChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Source is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnSourceChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnSourceChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredAssociateIdChange
  id: OnRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnRegisteredAssociateIdChange
  nameWithType: SaleHistRow.OnRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RegisteredAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedChange
  id: OnUpdatedChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnUpdatedChange
  nameWithType: SaleHistRow.OnUpdatedChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Updated is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedAssociateIdChange
  id: OnUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnUpdatedAssociateIdChange
  nameWithType: SaleHistRow.OnUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedCountChange
  id: OnUpdatedCountChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnUpdatedCountChange
  nameWithType: SaleHistRow.OnUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedCount is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnActiveLinksChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnActiveLinksChange
  id: OnActiveLinksChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnActiveLinksChange
  nameWithType: SaleHistRow.OnActiveLinksChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnActiveLinksChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ActiveLinks is changing.\n"
  syntax:
    content: public event OnFieldChange<uint> OnActiveLinksChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Public Event OnActiveLinksChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeIdChange
  id: OnSaleTypeIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSaleTypeIdChange
  nameWithType: SaleHistRow.OnSaleTypeIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when SaleTypeId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSaleTypeIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSaleTypeIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnPostitTextIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnPostitTextIdChange
  id: OnPostitTextIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnPostitTextIdChange
  nameWithType: SaleHistRow.OnPostitTextIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnPostitTextIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when PostitTextId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnPostitTextIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnPostitTextIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnReasonStalledIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnReasonStalledIdChange
  id: OnReasonStalledIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnReasonStalledIdChange
  nameWithType: SaleHistRow.OnReasonStalledIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnReasonStalledIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReasonStalledId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnReasonStalledIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnReasonStalledIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnReopenDateChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnReopenDateChange
  id: OnReopenDateChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnReopenDateChange
  nameWithType: SaleHistRow.OnReopenDateChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnReopenDateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReopenDate is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnReopenDateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnReopenDateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnNextDueDateChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnNextDueDateChange
  id: OnNextDueDateChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnNextDueDateChange
  nameWithType: SaleHistRow.OnNextDueDateChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnNextDueDateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when NextDueDate is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnNextDueDateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnNextDueDateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnNddAppointmentIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnNddAppointmentIdChange
  id: OnNddAppointmentIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnNddAppointmentIdChange
  nameWithType: SaleHistRow.OnNddAppointmentIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnNddAppointmentIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when NddAppointmentId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnNddAppointmentIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnNddAppointmentIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnReasonSoldIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnReasonSoldIdChange
  id: OnReasonSoldIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnReasonSoldIdChange
  nameWithType: SaleHistRow.OnReasonSoldIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnReasonSoldIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReasonSoldId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnReasonSoldIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnReasonSoldIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeCatIdChange
  commentId: E:SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeCatIdChange
  id: OnSaleTypeCatIdChange
  parent: SuperOffice.CRM.Rows.SaleHistRow
  langs:
  - csharp
  - vb
  name: OnSaleTypeCatIdChange
  nameWithType: SaleHistRow.OnSaleTypeCatIdChange
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSaleTypeCatIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when SaleTypeCatId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSaleTypeCatIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSaleTypeCatIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.Data.ISoItem
  commentId: T:SuperOffice.Data.ISoItem
  parent: SuperOffice.Data
  isExternal: true
  name: ISoItem
  nameWithType: ISoItem
  fullName: SuperOffice.Data.ISoItem
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._onValueChange
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._onValueChange
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _onValueChange
  nameWithType: TableRowBase._onValueChange
  fullName: SuperOffice.CRM.Rows.TableRowBase._onValueChange
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults()
  nameWithType: TableRowBase.SetDefaults()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DashboardTileDefinitionRow, String)
  nameWithType: TableRowBase.SetDefaults(DashboardTileDefinitionRow, String)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Save
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Save
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Save()
  nameWithType: TableRowBase.Save()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Save()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Delete
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Delete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Delete()
  nameWithType: TableRowBase.Delete()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Delete()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: SuperOffice.Data.INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSave(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSave
    nameWithType: TableRowBase.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSave
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaved(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: INestedPersist.OnSaved
    nameWithType: TableRowBase.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSaved
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdate()
  nameWithType: TableRowBase.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdate()
  nameWithType: TableRowBase.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ForeignKeyHelper
  nameWithType: TableRowBase.ForeignKeyHelper
  fullName: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnValueChanged
  nameWithType: TableRowBase.OnValueChanged
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SaleHistRow, To>()
  nameWithType: EnumUtil.MapEnums<SaleHistRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.SaleHistRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SaleHistRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.SaleHistRow, To)()
  name.vb: MapEnums(Of SaleHistRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SaleHistRow, To>
    nameWithType: EnumUtil.MapEnums<SaleHistRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.SaleHistRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SaleHistRow, To)
    nameWithType: EnumUtil.MapEnums(Of SaleHistRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.SaleHistRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SaleHistRow, To>()
  nameWithType: Converters.MapEnums<SaleHistRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.SaleHistRow, To>()
  nameWithType.vb: Converters.MapEnums(Of SaleHistRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.SaleHistRow, To)()
  name.vb: MapEnums(Of SaleHistRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SaleHistRow, To>
    nameWithType: Converters.MapEnums<SaleHistRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.SaleHistRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SaleHistRow, To)
    nameWithType: Converters.MapEnums(Of SaleHistRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.SaleHistRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.Data.SaleStatus
  commentId: T:SuperOffice.Data.SaleStatus
  parent: SuperOffice.Data
  isExternal: true
  name: SaleStatus
  nameWithType: SaleStatus
  fullName: SuperOffice.Data.SaleStatus
- uid: SuperOffice.Data.SaleDone
  commentId: T:SuperOffice.Data.SaleDone
  parent: SuperOffice.Data
  isExternal: true
  name: SaleDone
  nameWithType: SaleDone
  fullName: SuperOffice.Data.SaleDone
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: SaleHistRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InternalSetValue
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: SaleHistRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: SaleHistRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.SaleHistRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.SaleHistRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.#ctor
  isExternal: true
  name: SaleHistRow
  nameWithType: SaleHistRow.SaleHistRow
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleHistRow
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: SaleHistRow.SaleHistRowIdxBase
  nameWithType: SaleHistRow.SaleHistRowIdxBase
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleHistRowIdxBase
- uid: SuperOffice.CRM.Rows.SaleHistRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: SaleHistRow.CreateNew
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CreateNew
- uid: SuperOffice.CRM.Rows.SaleHistRow
  commentId: T:SuperOffice.CRM.Rows.SaleHistRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: SaleHistRow
  nameWithType: SaleHistRow
  fullName: SuperOffice.CRM.Rows.SaleHistRow
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: SaleHistRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.SaleHistTableInfo
  commentId: T:SuperOffice.CRM.Data.SaleHistTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: SaleHistTableInfo
  nameWithType: SaleHistTableInfo
  fullName: SuperOffice.CRM.Data.SaleHistTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: SaleHistRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.SaleHistRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.SaleHistRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: SaleHistRow.CustomSearch
  nameWithType: SaleHistRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CustomSearch
- uid: SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId
  isExternal: true
  name: GetFromIdxSalehistId
  nameWithType: SaleHistRow.GetFromIdxSalehistId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GetFromIdxSalehistId
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DefaulterStrategy)
  nameWithType: TableRowBase.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.SetDefaults*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SetDefaults
  isExternal: true
  name: SetDefaults
  nameWithType: SaleHistRow.SetDefaults
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SetDefaults
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ToString
  isExternal: true
  name: ToString
  nameWithType: SaleHistRow.ToString
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: SaleHistRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Reset
  isExternal: true
  name: Reset
  nameWithType: SaleHistRow.Reset
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: SaleHistRow.OnLoad
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: SaleHistRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSave(BatchSave)
  nameWithType: TableRowBase.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSave*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.OnSave
  isExternal: true
  name: OnSave
  nameWithType: SaleHistRow.OnSave
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSave
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaved(Boolean)
  nameWithType: TableRowBase.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.OnSaved*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.OnSaved
  isExternal: true
  name: OnSaved
  nameWithType: SaleHistRow.OnSaved
  fullName: SuperOffice.CRM.Rows.SaleHistRow.OnSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Validate
  isExternal: true
  name: Validate
  nameWithType: SaleHistRow.Validate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.SaleHistRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Item
  isExternal: true
  name: Item
  nameWithType: SaleHistRow.Item
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.SaleHistRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: SaleHistRow.TableInfo
  fullName: SuperOffice.CRM.Rows.SaleHistRow.TableInfo
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo
  isExternal: true
  name: SaleHistTableInfo
  nameWithType: SaleHistRow.SaleHistTableInfo
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleHistTableInfo
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: SaleHistRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: SaleHistRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.SaleHistRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: SaleHistRow.IsNew
  fullName: SuperOffice.CRM.Rows.SaleHistRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.SaleHistRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: SaleHistRow.IsDirty
  fullName: SuperOffice.CRM.Rows.SaleHistRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: SaleHistRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.SaleHistRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.SaleHistRow.SalehistId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SalehistId
  isExternal: true
  name: SalehistId
  nameWithType: SaleHistRow.SalehistId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SalehistId
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SaleId
  isExternal: true
  name: SaleId
  nameWithType: SaleHistRow.SaleId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleId
- uid: SuperOffice.CRM.Rows.SaleHistRow.AssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.AssociateId
  isExternal: true
  name: AssociateId
  nameWithType: SaleHistRow.AssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.AssociateId
- uid: SuperOffice.Exceptions.SoSentryException
  commentId: T:SuperOffice.Exceptions.SoSentryException
  isExternal: true
  name: SoSentryException
  nameWithType: SoSentryException
  fullName: SuperOffice.Exceptions.SoSentryException
- uid: SuperOffice.CRM.Rows.SaleHistRow.GroupIdx*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.GroupIdx
  isExternal: true
  name: GroupIdx
  nameWithType: SaleHistRow.GroupIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow.GroupIdx
- uid: SuperOffice.CRM.Rows.SaleHistRow.ContactId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ContactId
  isExternal: true
  name: ContactId
  nameWithType: SaleHistRow.ContactId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ContactId
- uid: SuperOffice.CRM.Rows.SaleHistRow.PersonId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.PersonId
  isExternal: true
  name: PersonId
  nameWithType: SaleHistRow.PersonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.PersonId
- uid: SuperOffice.CRM.Rows.SaleHistRow.Registered*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Registered
  isExternal: true
  name: Registered
  nameWithType: SaleHistRow.Registered
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Registered
- uid: SuperOffice.CRM.Rows.SaleHistRow.Saledate*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Saledate
  isExternal: true
  name: Saledate
  nameWithType: SaleHistRow.Saledate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Saledate
- uid: SuperOffice.CRM.Rows.SaleHistRow.Amount*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Amount
  isExternal: true
  name: Amount
  nameWithType: SaleHistRow.Amount
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Amount
- uid: SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx
  isExternal: true
  name: ProbabilityIdx
  nameWithType: SaleHistRow.ProbabilityIdx
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ProbabilityIdx
- uid: SuperOffice.CRM.Rows.SaleHistRow.AppointmentId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.AppointmentId
  isExternal: true
  name: AppointmentId
  nameWithType: SaleHistRow.AppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.AppointmentId
- uid: SuperOffice.CRM.Rows.SaleHistRow.TextId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.TextId
  isExternal: true
  name: TextId
  nameWithType: SaleHistRow.TextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.TextId
- uid: SuperOffice.CRM.Rows.SaleHistRow.ProjectId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ProjectId
  isExternal: true
  name: ProjectId
  nameWithType: SaleHistRow.ProjectId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ProjectId
- uid: SuperOffice.CRM.Rows.SaleHistRow.Earning*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Earning
  isExternal: true
  name: Earning
  nameWithType: SaleHistRow.Earning
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Earning
- uid: SuperOffice.CRM.Rows.SaleHistRow.EarningPercent*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.EarningPercent
  isExternal: true
  name: EarningPercent
  nameWithType: SaleHistRow.EarningPercent
  fullName: SuperOffice.CRM.Rows.SaleHistRow.EarningPercent
- uid: SuperOffice.CRM.Rows.SaleHistRow.UserdefId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.UserdefId
  isExternal: true
  name: UserdefId
  nameWithType: SaleHistRow.UserdefId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.UserdefId
- uid: SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id
  isExternal: true
  name: Userdef2Id
  nameWithType: SaleHistRow.Userdef2Id
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Userdef2Id
- uid: SuperOffice.CRM.Rows.SaleHistRow.Heading*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Heading
  isExternal: true
  name: Heading
  nameWithType: SaleHistRow.Heading
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Heading
- uid: SuperOffice.CRM.Rows.SaleHistRow.CreditedId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.CreditedId
  isExternal: true
  name: CreditedId
  nameWithType: SaleHistRow.CreditedId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CreditedId
- uid: SuperOffice.CRM.Rows.SaleHistRow.SourceId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SourceId
  isExternal: true
  name: SourceId
  nameWithType: SaleHistRow.SourceId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SourceId
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReasonId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ReasonId
  isExternal: true
  name: ReasonId
  nameWithType: SaleHistRow.ReasonId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReasonId
- uid: SuperOffice.CRM.Rows.SaleHistRow.ComptrId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ComptrId
  isExternal: true
  name: ComptrId
  nameWithType: SaleHistRow.ComptrId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ComptrId
- uid: SuperOffice.CRM.Rows.SaleHistRow.CurrencyId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.CurrencyId
  isExternal: true
  name: CurrencyId
  nameWithType: SaleHistRow.CurrencyId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.CurrencyId
- uid: SuperOffice.CRM.Rows.SaleHistRow.Probability*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Probability
  isExternal: true
  name: Probability
  nameWithType: SaleHistRow.Probability
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Probability
- uid: SuperOffice.CRM.Rows.SaleHistRow.Status*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Status
  isExternal: true
  name: Status
  nameWithType: SaleHistRow.Status
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Status
- uid: SuperOffice.CRM.Rows.SaleHistRow.Done*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Done
  isExternal: true
  name: Done
  nameWithType: SaleHistRow.Done
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Done
- uid: SuperOffice.CRM.Rows.SaleHistRow.Number1*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Number1
  isExternal: true
  name: Number1
  nameWithType: SaleHistRow.Number1
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Number1
- uid: SuperOffice.CRM.Rows.SaleHistRow.Visibility*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Visibility
  isExternal: true
  name: Visibility
  nameWithType: SaleHistRow.Visibility
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Visibility
- uid: SuperOffice.CRM.Rows.SaleHistRow.Source*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Source
  isExternal: true
  name: Source
  nameWithType: SaleHistRow.Source
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Source
- uid: SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: SaleHistRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.RegisteredAssociateId
- uid: SuperOffice.CRM.Rows.SaleHistRow.Updated*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.Updated
  isExternal: true
  name: Updated
  nameWithType: SaleHistRow.Updated
  fullName: SuperOffice.CRM.Rows.SaleHistRow.Updated
- uid: SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: SaleHistRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.UpdatedAssociateId
- uid: SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: SaleHistRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.SaleHistRow.UpdatedCount
- uid: SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks
  isExternal: true
  name: ActiveLinks
  nameWithType: SaleHistRow.ActiveLinks
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ActiveLinks
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId
  isExternal: true
  name: SaleTypeId
  nameWithType: SaleHistRow.SaleTypeId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeId
- uid: SuperOffice.CRM.Rows.SaleHistRow.PostitTextId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.PostitTextId
  isExternal: true
  name: PostitTextId
  nameWithType: SaleHistRow.PostitTextId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.PostitTextId
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId
  isExternal: true
  name: ReasonStalledId
  nameWithType: SaleHistRow.ReasonStalledId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReasonStalledId
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReopenDate*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ReopenDate
  isExternal: true
  name: ReopenDate
  nameWithType: SaleHistRow.ReopenDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReopenDate
- uid: SuperOffice.CRM.Rows.SaleHistRow.NextDueDate*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.NextDueDate
  isExternal: true
  name: NextDueDate
  nameWithType: SaleHistRow.NextDueDate
  fullName: SuperOffice.CRM.Rows.SaleHistRow.NextDueDate
- uid: SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId
  isExternal: true
  name: NddAppointmentId
  nameWithType: SaleHistRow.NddAppointmentId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.NddAppointmentId
- uid: SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId
  isExternal: true
  name: ReasonSoldId
  nameWithType: SaleHistRow.ReasonSoldId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.ReasonSoldId
- uid: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId*
  commentId: Overload:SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId
  isExternal: true
  name: SaleTypeCatId
  nameWithType: SaleHistRow.SaleTypeCatId
  fullName: SuperOffice.CRM.Rows.SaleHistRow.SaleTypeCatId
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int32>
  nameWithType: OnFieldChange<Int32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int32>
  nameWithType.vb: OnFieldChange(Of Int32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int32)
  name.vb: OnFieldChange(Of Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange`1
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange`1
  isExternal: true
  name: OnFieldChange<TValue>
  nameWithType: OnFieldChange<TValue>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<TValue>
  nameWithType.vb: OnFieldChange(Of TValue)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of TValue)
  name.vb: OnFieldChange(Of TValue)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<DateTime>
  nameWithType: OnFieldChange<DateTime>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.DateTime>
  nameWithType.vb: OnFieldChange(Of DateTime)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.DateTime)
  name.vb: OnFieldChange(Of DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Double}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Double>
  nameWithType: OnFieldChange<Double>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Double>
  nameWithType.vb: OnFieldChange(Of Double)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Double)
  name.vb: OnFieldChange(Of Double)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.String}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.String}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<String>
  nameWithType: OnFieldChange<String>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.String>
  nameWithType.vb: OnFieldChange(Of String)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.String)
  name.vb: OnFieldChange(Of String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int16>
  nameWithType: OnFieldChange<Int16>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int16>
  nameWithType.vb: OnFieldChange(Of Int16)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int16)
  name.vb: OnFieldChange(Of Int16)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleStatus}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleStatus}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<SaleStatus>
  nameWithType: OnFieldChange<SaleStatus>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.SaleStatus>
  nameWithType.vb: OnFieldChange(Of SaleStatus)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.SaleStatus)
  name.vb: OnFieldChange(Of SaleStatus)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SaleStatus
    name: SaleStatus
    nameWithType: SaleStatus
    fullName: SuperOffice.Data.SaleStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SaleStatus
    name: SaleStatus
    nameWithType: SaleStatus
    fullName: SuperOffice.Data.SaleStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleDone}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.SaleDone}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<SaleDone>
  nameWithType: OnFieldChange<SaleDone>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.SaleDone>
  nameWithType.vb: OnFieldChange(Of SaleDone)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.SaleDone)
  name.vb: OnFieldChange(Of SaleDone)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SaleDone
    name: SaleDone
    nameWithType: SaleDone
    fullName: SuperOffice.Data.SaleDone
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SaleDone
    name: SaleDone
    nameWithType: SaleDone
    fullName: SuperOffice.Data.SaleDone
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<UInt32>
  nameWithType: OnFieldChange<UInt32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.UInt32>
  nameWithType.vb: OnFieldChange(Of UInt32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.UInt32)
  name.vb: OnFieldChange(Of UInt32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
