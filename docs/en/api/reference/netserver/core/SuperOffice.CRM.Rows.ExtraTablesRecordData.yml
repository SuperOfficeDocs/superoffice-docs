### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData
  commentId: T:SuperOffice.CRM.Rows.ExtraTablesRecordData
  id: ExtraTablesRecordData
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.#ctor
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.Description
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.DisplayField
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.EditEntryHeader
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTableName
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTablesId
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.Flags
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.FullnameField
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.HierarchyId
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.Name
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.NewEntryHeader
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ParentField
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserAll
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEdit
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEntry
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.SearchHeader
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.SortOrder
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.ViewEntryHeader
  langs:
  - csharp
  - vb
  name: ExtraTablesRecordData
  nameWithType: ExtraTablesRecordData
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPOCO (Plain Old CLR Object) class that can be used to hold data corresponding\nto a row from the extra_tables table.\n"
  remarks: "\nPlease use this class instead of a full <xref href=\"SuperOffice.CRM.Rows.ExtraTablesRow\" data-throw-if-not-resolved=\"false\"></xref> object when\nyou do not need to <strong>create or update</strong> a value in the database. Row objects have a large overhead\nsince they carry the corresponding <xref href=\"SuperOffice.CRM.Data.ExtraTablesTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object, which\nin turn defines fields and aliases; there may be a Sentry on a row, and various other helper objects.\n"
  syntax:
    content: public class ExtraTablesRecordData
    content.vb: Public Class ExtraTablesRecordData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
  - SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTablesId
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTablesId
  id: ExtraTablesId
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ExtraTablesId
  nameWithType: ExtraTablesRecordData.ExtraTablesId
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTablesId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key (auto-incremented) \n"
  syntax:
    content: public int ExtraTablesId
    return:
      type: System.Int32
    content.vb: Public ExtraTablesId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTableName
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTableName
  id: ExtraTableName
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ExtraTableName
  nameWithType: ExtraTablesRecordData.ExtraTableName
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTableName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe database name of this extra table. \n"
  syntax:
    content: public string ExtraTableName
    return:
      type: System.String
    content.vb: Public ExtraTableName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.Name
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.Name
  id: Name
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ExtraTablesRecordData.Name
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.Name
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe name of this extra table. \n"
  syntax:
    content: public string Name
    return:
      type: System.String
    content.vb: Public Name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.SearchHeader
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.SearchHeader
  id: SearchHeader
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: SearchHeader
  nameWithType: ExtraTablesRecordData.SearchHeader
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.SearchHeader
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe header when searching this table. \n"
  syntax:
    content: public string SearchHeader
    return:
      type: System.String
    content.vb: Public SearchHeader As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ViewEntryHeader
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ViewEntryHeader
  id: ViewEntryHeader
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ViewEntryHeader
  nameWithType: ExtraTablesRecordData.ViewEntryHeader
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ViewEntryHeader
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe header when viewing entries in this table. \n"
  syntax:
    content: public string ViewEntryHeader
    return:
      type: System.String
    content.vb: Public ViewEntryHeader As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.NewEntryHeader
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.NewEntryHeader
  id: NewEntryHeader
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: NewEntryHeader
  nameWithType: ExtraTablesRecordData.NewEntryHeader
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.NewEntryHeader
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe header when creating a new entry in this table. \n"
  syntax:
    content: public string NewEntryHeader
    return:
      type: System.String
    content.vb: Public NewEntryHeader As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.EditEntryHeader
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.EditEntryHeader
  id: EditEntryHeader
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: EditEntryHeader
  nameWithType: ExtraTablesRecordData.EditEntryHeader
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.EditEntryHeader
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe header when editing an entry in this table. \n"
  syntax:
    content: public string EditEntryHeader
    return:
      type: System.String
    content.vb: Public EditEntryHeader As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.HierarchyId
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.HierarchyId
  id: HierarchyId
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: HierarchyId
  nameWithType: ExtraTablesRecordData.HierarchyId
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.HierarchyId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThis extra table is inside this hierarchy folder \n"
  syntax:
    content: public int HierarchyId
    return:
      type: System.Int32
    content.vb: Public HierarchyId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.SortOrder
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.SortOrder
  id: SortOrder
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: SortOrder
  nameWithType: ExtraTablesRecordData.SortOrder
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.SortOrder
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe default sort_order for this extra table. \n"
  syntax:
    content: public string SortOrder
    return:
      type: System.String
    content.vb: Public SortOrder As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.DisplayField
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.DisplayField
  id: DisplayField
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: DisplayField
  nameWithType: ExtraTablesRecordData.DisplayField
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.DisplayField
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe default field to display for this extra table. \n"
  syntax:
    content: public int DisplayField
    return:
      type: System.Int32
    content.vb: Public DisplayField As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.Flags
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.Flags
  id: Flags
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: ExtraTablesRecordData.Flags
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.Flags
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nBitmap for flags for this entry. \n"
  syntax:
    content: public uint Flags
    return:
      type: System.UInt32
    content.vb: Public Flags As UInteger
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ParentField
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ParentField
  id: ParentField
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ParentField
  nameWithType: ExtraTablesRecordData.ParentField
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ParentField
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIf this table is hierarchically organized, then this field can contain a field which is a parent-field, creating a hierarchy. \n"
  syntax:
    content: public int ParentField
    return:
      type: System.Int32
    content.vb: Public ParentField As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.FullnameField
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.FullnameField
  id: FullnameField
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: FullnameField
  nameWithType: ExtraTablesRecordData.FullnameField
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.FullnameField
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIf this table is hierarchically organized, then this field can contain a field which will be assigned a fullname, such as &apos;Support/Hardware/Keyboards&apos;. \n"
  syntax:
    content: public int FullnameField
    return:
      type: System.Int32
    content.vb: Public FullnameField As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEntry
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEntry
  id: ScreenChooserEntry
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ScreenChooserEntry
  nameWithType: ExtraTablesRecordData.ScreenChooserEntry
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEntry
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe screen chooser to use for this extra table when viewing an entry. \n"
  syntax:
    content: public int ScreenChooserEntry
    return:
      type: System.Int32
    content.vb: Public ScreenChooserEntry As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserAll
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserAll
  id: ScreenChooserAll
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ScreenChooserAll
  nameWithType: ExtraTablesRecordData.ScreenChooserAll
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserAll
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe screen chooser to use for this extra table when viewing the table. \n"
  syntax:
    content: public int ScreenChooserAll
    return:
      type: System.Int32
    content.vb: Public ScreenChooserAll As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEdit
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEdit
  id: ScreenChooserEdit
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ScreenChooserEdit
  nameWithType: ExtraTablesRecordData.ScreenChooserEdit
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ScreenChooserEdit
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe screen chooser to use for this extra table when editing the table. \n"
  syntax:
    content: public int ScreenChooserEdit
    return:
      type: System.Int32
    content.vb: Public ScreenChooserEdit As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.Description
  commentId: F:SuperOffice.CRM.Rows.ExtraTablesRecordData.Description
  id: Description
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ExtraTablesRecordData.Description
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.Description
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nOptional description of what this table is used for \n"
  syntax:
    content: public string Description
    return:
      type: System.String
    content.vb: Public Description As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.#ctor
  commentId: M:SuperOffice.CRM.Rows.ExtraTablesRecordData.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordData
  langs:
  - csharp
  - vb
  name: ExtraTablesRecordData()
  nameWithType: ExtraTablesRecordData.ExtraTablesRecordData()
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTablesRecordData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public ExtraTablesRecordData()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.ExtraTablesRecordData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ExtraTablesRecordData, To>()
  nameWithType: EnumUtil.MapEnums<ExtraTablesRecordData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.ExtraTablesRecordData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ExtraTablesRecordData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.ExtraTablesRecordData, To)()
  name.vb: MapEnums(Of ExtraTablesRecordData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ExtraTablesRecordData, To>
    nameWithType: EnumUtil.MapEnums<ExtraTablesRecordData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.ExtraTablesRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ExtraTablesRecordData, To)
    nameWithType: EnumUtil.MapEnums(Of ExtraTablesRecordData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.ExtraTablesRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ExtraTablesRecordData>(ExtraTablesRecordData)
  nameWithType: ObjectExtensions.AssignByReflection<ExtraTablesRecordData>(ExtraTablesRecordData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.ExtraTablesRecordData>(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ExtraTablesRecordData)(ExtraTablesRecordData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.ExtraTablesRecordData)(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  name.vb: AssignByReflection(Of ExtraTablesRecordData)(ExtraTablesRecordData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ExtraTablesRecordData>
    nameWithType: ObjectExtensions.AssignByReflection<ExtraTablesRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.ExtraTablesRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordData
    name: ExtraTablesRecordData
    nameWithType: ExtraTablesRecordData
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ExtraTablesRecordData)
    nameWithType: ObjectExtensions.AssignByReflection(Of ExtraTablesRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.ExtraTablesRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordData
    name: ExtraTablesRecordData
    nameWithType: ExtraTablesRecordData
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ExtraTablesRecordData>()
  nameWithType: ObjectExtensions.GraphCopy<ExtraTablesRecordData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.ExtraTablesRecordData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ExtraTablesRecordData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.ExtraTablesRecordData)()
  name.vb: GraphCopy(Of ExtraTablesRecordData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ExtraTablesRecordData>
    nameWithType: ObjectExtensions.GraphCopy<ExtraTablesRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.ExtraTablesRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ExtraTablesRecordData)
    nameWithType: ObjectExtensions.GraphCopy(Of ExtraTablesRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.ExtraTablesRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
  commentId: M:SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  parent: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions
  definition: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  name: ToInsert()
  nameWithType: ExtraTablesRecordDataExtensions.ToInsert()
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
    name: ToInsert
    nameWithType: ExtraTablesRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
    name: ToInsert
    nameWithType: ExtraTablesRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ExtraTablesRecordData, To>()
  nameWithType: Converters.MapEnums<ExtraTablesRecordData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.ExtraTablesRecordData, To>()
  nameWithType.vb: Converters.MapEnums(Of ExtraTablesRecordData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.ExtraTablesRecordData, To)()
  name.vb: MapEnums(Of ExtraTablesRecordData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ExtraTablesRecordData, To>
    nameWithType: Converters.MapEnums<ExtraTablesRecordData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.ExtraTablesRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ExtraTablesRecordData, To)
    nameWithType: Converters.MapEnums(Of ExtraTablesRecordData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.ExtraTablesRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  commentId: M:SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  isExternal: true
  name: ToInsert(ExtraTablesRecordData)
  nameWithType: ExtraTablesRecordDataExtensions.ToInsert(ExtraTablesRecordData)
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
    name: ToInsert
    nameWithType: ExtraTablesRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordData
    name: ExtraTablesRecordData
    nameWithType: ExtraTablesRecordData
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.ExtraTablesRecordData)
    name: ToInsert
    nameWithType: ExtraTablesRecordDataExtensions.ToInsert
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions.ToInsert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ExtraTablesRecordData
    name: ExtraTablesRecordData
    nameWithType: ExtraTablesRecordData
    fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ExtraTablesRecordDataExtensions
  nameWithType: ExtraTablesRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: SuperOffice.CRM.Rows.ExtraTablesRecordData.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.ExtraTablesRecordData.#ctor
  isExternal: true
  name: ExtraTablesRecordData
  nameWithType: ExtraTablesRecordData.ExtraTablesRecordData
  fullName: SuperOffice.CRM.Rows.ExtraTablesRecordData.ExtraTablesRecordData
