### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.FieldValidator
  commentId: T:SuperOffice.CRM.Rows.FieldValidator
  id: FieldValidator
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.FieldValidator.#ctor(System.String)
  - SuperOffice.CRM.Rows.FieldValidator.FieldName
  langs:
  - csharp
  - vb
  name: FieldValidator
  nameWithType: FieldValidator
  fullName: SuperOffice.CRM.Rows.FieldValidator
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nClass representing the validation of a field.  This class is a collection of ValidationRule\n"
  syntax:
    content: 'public class FieldValidator : ArrayList'
    content.vb: >-
      Public Class FieldValidator
          Inherits ArrayList
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Rows.FieldValidator.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.FieldValidator.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.FieldValidator.#ctor(System.String)
  commentId: M:SuperOffice.CRM.Rows.FieldValidator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.CRM.Rows.FieldValidator
  langs:
  - csharp
  - vb
  name: FieldValidator(String)
  nameWithType: FieldValidator.FieldValidator(String)
  fullName: SuperOffice.CRM.Rows.FieldValidator.FieldValidator(System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nDefault constructor.\n"
  syntax:
    content: public FieldValidator(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field validated
    content.vb: Public Sub New(fieldName As String)
  overload: SuperOffice.CRM.Rows.FieldValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.FieldValidator.FieldName
  commentId: P:SuperOffice.CRM.Rows.FieldValidator.FieldName
  id: FieldName
  parent: SuperOffice.CRM.Rows.FieldValidator
  langs:
  - csharp
  - vb
  name: FieldName
  nameWithType: FieldValidator.FieldName
  fullName: SuperOffice.CRM.Rows.FieldValidator.FieldName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nName of the validated field.\n"
  syntax:
    content: public string FieldName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FieldName As String
  overload: SuperOffice.CRM.Rows.FieldValidator.FieldName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Rows.FieldValidator.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<FieldValidator, To>()
  nameWithType: EnumUtil.MapEnums<FieldValidator, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.FieldValidator, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of FieldValidator, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.FieldValidator, To)()
  name.vb: MapEnums(Of FieldValidator, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<FieldValidator, To>
    nameWithType: EnumUtil.MapEnums<FieldValidator, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.FieldValidator, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of FieldValidator, To)
    nameWithType: EnumUtil.MapEnums(Of FieldValidator, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.FieldValidator, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FieldValidator.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<FieldValidator, To>()
  nameWithType: Converters.MapEnums<FieldValidator, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.FieldValidator, To>()
  nameWithType.vb: Converters.MapEnums(Of FieldValidator, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.FieldValidator, To)()
  name.vb: MapEnums(Of FieldValidator, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<FieldValidator, To>
    nameWithType: Converters.MapEnums<FieldValidator, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.FieldValidator, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of FieldValidator, To)
    nameWithType: Converters.MapEnums(Of FieldValidator, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.FieldValidator, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.FieldValidator.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.FieldValidator.#ctor
  isExternal: true
  name: FieldValidator
  nameWithType: FieldValidator.FieldValidator
  fullName: SuperOffice.CRM.Rows.FieldValidator.FieldValidator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Rows.FieldValidator.FieldName*
  commentId: Overload:SuperOffice.CRM.Rows.FieldValidator.FieldName
  isExternal: true
  name: FieldName
  nameWithType: FieldValidator.FieldName
  fullName: SuperOffice.CRM.Rows.FieldValidator.FieldName
