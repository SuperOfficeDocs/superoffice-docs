### YamlMime:ManagedReference
items:
- uid: SuperOffice.ISoDatabaseContextFactory
  commentId: T:SuperOffice.ISoDatabaseContextFactory
  id: ISoDatabaseContextFactory
  parent: SuperOffice
  children:
  - SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext(System.String)
  - SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers
  - SuperOffice.ISoDatabaseContextFactory.GetCurrent
  - SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier
  - SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser
  - SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext(System.String)
  - SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext(System.String)
  - SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext(System.String,System.Boolean)
  - SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.Security.Claims.ClaimsIdentity[])
  - SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.String)
  langs:
  - csharp
  - vb
  name: ISoDatabaseContextFactory
  nameWithType: ISoDatabaseContextFactory
  fullName: SuperOffice.ISoDatabaseContextFactory
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nInterface implemented by SoDatabaseContextFactory for exposing tenant specific database contextx\n"
  syntax:
    content: public interface ISoDatabaseContextFactory
    content.vb: Public Interface ISoDatabaseContextFactory
  extensionMethods:
  - SuperOffice.ISoDatabaseContextFactory.EnumUtil.MapEnums``2
  - SuperOffice.ISoDatabaseContextFactory.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext(System.String)
  commentId: M:SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext(System.String)
  id: EnterDatabaseContext(System.String)
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: EnterDatabaseContext(String)
  nameWithType: ISoDatabaseContextFactory.EnterDatabaseContext(String)
  fullName: SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nEnter an explicit database context temporarely.  Dispose to leavce the database context\n"
  syntax:
    content: IDatabaseContext EnterDatabaseContext(string contextIdentifier)
    parameters:
    - id: contextIdentifier
      type: System.String
    return:
      type: SuperOffice.IDatabaseContext
    content.vb: Function EnterDatabaseContext(contextIdentifier As String) As IDatabaseContext
  overload: SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext*
- uid: SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers
  commentId: M:SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers
  id: GetAllContextIdentifiers
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: GetAllContextIdentifiers()
  nameWithType: ISoDatabaseContextFactory.GetAllContextIdentifiers()
  fullName: SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nGet all context identifiers currently in the process.\n"
  syntax:
    content: string[] GetAllContextIdentifiers()
    return:
      type: System.String[]
    content.vb: Function GetAllContextIdentifiers As String()
  overload: SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers*
- uid: SuperOffice.ISoDatabaseContextFactory.GetCurrent
  commentId: M:SuperOffice.ISoDatabaseContextFactory.GetCurrent
  id: GetCurrent
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: ISoDatabaseContextFactory.GetCurrent()
  fullName: SuperOffice.ISoDatabaseContextFactory.GetCurrent()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nCurrent database contexct\n"
  syntax:
    content: SoDatabaseContext GetCurrent()
    return:
      type: SuperOffice.SoDatabaseContext
    content.vb: Function GetCurrent As SoDatabaseContext
  overload: SuperOffice.ISoDatabaseContextFactory.GetCurrent*
- uid: SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser
  commentId: M:SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser
  id: GetCurrentIgnoreUser
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: GetCurrentIgnoreUser()
  nameWithType: ISoDatabaseContextFactory.GetCurrentIgnoreUser()
  fullName: SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nGet current database context, ignoring information about the state of a potentially logged in user.\n"
  syntax:
    content: SoDatabaseContext GetCurrentIgnoreUser()
    return:
      type: SuperOffice.SoDatabaseContext
    content.vb: Function GetCurrentIgnoreUser As SoDatabaseContext
  overload: SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser*
- uid: SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext(System.String)
  commentId: M:SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext(System.String)
  id: GetDatabaseContext(System.String)
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: GetDatabaseContext(String)
  nameWithType: ISoDatabaseContextFactory.GetDatabaseContext(String)
  fullName: SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nGet database context from a context identifier\n"
  syntax:
    content: SoDatabaseContext GetDatabaseContext(string contextIdentifier)
    parameters:
    - id: contextIdentifier
      type: System.String
    return:
      type: SuperOffice.SoDatabaseContext
    content.vb: Function GetDatabaseContext(contextIdentifier As String) As SoDatabaseContext
  overload: SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext*
- uid: SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext(System.String)
  commentId: M:SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext(System.String)
  id: HasDatabaseContext(System.String)
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: HasDatabaseContext(String)
  nameWithType: ISoDatabaseContextFactory.HasDatabaseContext(String)
  fullName: SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nCheck if a particular database context is known to the process.\n"
  syntax:
    content: bool HasDatabaseContext(string contextIdentifier)
    parameters:
    - id: contextIdentifier
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HasDatabaseContext(contextIdentifier As String) As Boolean
  overload: SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext*
- uid: SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext(System.String,System.Boolean)
  commentId: M:SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext(System.String,System.Boolean)
  id: RemoveDatabaseContext(System.String,System.Boolean)
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: RemoveDatabaseContext(String, Boolean)
  nameWithType: ISoDatabaseContextFactory.RemoveDatabaseContext(String, Boolean)
  fullName: SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext(System.String, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nRemove a database context from the system (forget the tenant)\n"
  syntax:
    content: bool RemoveDatabaseContext(string contextIdentifier, bool forceDisconnect = false)
    parameters:
    - id: contextIdentifier
      type: System.String
    - id: forceDisconnect
      type: System.Boolean
      description: Force logging out everythuing
    return:
      type: System.Boolean
    content.vb: Function RemoveDatabaseContext(contextIdentifier As String, forceDisconnect As Boolean = False) As Boolean
  overload: SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext*
- uid: SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier
  commentId: M:SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier
  id: GetCurrentContextIdentifier
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: GetCurrentContextIdentifier()
  nameWithType: ISoDatabaseContextFactory.GetCurrentContextIdentifier()
  fullName: SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nTry to see if we have a current, contextidentifier with the least possible amount of fuss and side effects.\nUsed in logging situations, to avoid triggering the whole lazyload avalanche\n"
  syntax:
    content: string GetCurrentContextIdentifier()
    return:
      type: System.String
    content.vb: Function GetCurrentContextIdentifier As String
  overload: SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier*
- uid: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  commentId: M:SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  id: TryResolveContext(System.String@,System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: TryResolveContext(out String, IEnumerable<ClaimsIdentity>)
  nameWithType: ISoDatabaseContextFactory.TryResolveContext(out String, IEnumerable<ClaimsIdentity>)
  fullName: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(out System.String, System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nTry to resolve current database context\n"
  syntax:
    content: bool TryResolveContext(out string context, IEnumerable<ClaimsIdentity> identites)
    parameters:
    - id: context
      type: System.String
    - id: identites
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
    return:
      type: System.Boolean
    content.vb: Function TryResolveContext(ByRef context As String, identites As IEnumerable(Of ClaimsIdentity)) As Boolean
  overload: SuperOffice.ISoDatabaseContextFactory.TryResolveContext*
  nameWithType.vb: ISoDatabaseContextFactory.TryResolveContext(ByRef String, IEnumerable(Of ClaimsIdentity))
  fullName.vb: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(ByRef System.String, System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))
  name.vb: TryResolveContext(ByRef String, IEnumerable(Of ClaimsIdentity))
- uid: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.Security.Claims.ClaimsIdentity[])
  commentId: M:SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.Security.Claims.ClaimsIdentity[])
  id: TryResolveContext(System.String@,System.Security.Claims.ClaimsIdentity[])
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: TryResolveContext(out String, ClaimsIdentity[])
  nameWithType: ISoDatabaseContextFactory.TryResolveContext(out String, ClaimsIdentity[])
  fullName: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(out System.String, System.Security.Claims.ClaimsIdentity[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nTry to resolve current database context\n"
  syntax:
    content: bool TryResolveContext(out string context, params ClaimsIdentity[] identites)
    parameters:
    - id: context
      type: System.String
    - id: identites
      type: System.Security.Claims.ClaimsIdentity[]
    return:
      type: System.Boolean
    content.vb: Function TryResolveContext(ByRef context As String, ParamArray identites As ClaimsIdentity()) As Boolean
  overload: SuperOffice.ISoDatabaseContextFactory.TryResolveContext*
  nameWithType.vb: ISoDatabaseContextFactory.TryResolveContext(ByRef String, ClaimsIdentity())
  fullName.vb: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(ByRef System.String, System.Security.Claims.ClaimsIdentity())
  name.vb: TryResolveContext(ByRef String, ClaimsIdentity())
- uid: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.String)
  commentId: M:SuperOffice.ISoDatabaseContextFactory.TryResolveContext(System.String@,System.String)
  id: TryResolveContext(System.String@,System.String)
  parent: SuperOffice.ISoDatabaseContextFactory
  langs:
  - csharp
  - vb
  name: TryResolveContext(out String, String)
  nameWithType: ISoDatabaseContextFactory.TryResolveContext(out String, String)
  fullName: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(out System.String, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: "\nTry to resolve current database context\n"
  syntax:
    content: bool TryResolveContext(out string context, string ticket)
    parameters:
    - id: context
      type: System.String
    - id: ticket
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function TryResolveContext(ByRef context As String, ticket As String) As Boolean
  overload: SuperOffice.ISoDatabaseContextFactory.TryResolveContext*
  nameWithType.vb: ISoDatabaseContextFactory.TryResolveContext(ByRef String, String)
  fullName.vb: SuperOffice.ISoDatabaseContextFactory.TryResolveContext(ByRef System.String, System.String)
  name.vb: TryResolveContext(ByRef String, String)
references:
- uid: SuperOffice
  commentId: N:SuperOffice
  isExternal: true
  name: SuperOffice
  nameWithType: SuperOffice
  fullName: SuperOffice
- uid: SuperOffice.ISoDatabaseContextFactory.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoDatabaseContextFactory, To>()
  nameWithType: EnumUtil.MapEnums<ISoDatabaseContextFactory, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.ISoDatabaseContextFactory, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoDatabaseContextFactory, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.ISoDatabaseContextFactory, To)()
  name.vb: MapEnums(Of ISoDatabaseContextFactory, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoDatabaseContextFactory, To>
    nameWithType: EnumUtil.MapEnums<ISoDatabaseContextFactory, To>
    fullName: EnumUtil.MapEnums<SuperOffice.ISoDatabaseContextFactory, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoDatabaseContextFactory, To)
    nameWithType: EnumUtil.MapEnums(Of ISoDatabaseContextFactory, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.ISoDatabaseContextFactory, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ISoDatabaseContextFactory.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoDatabaseContextFactory, To>()
  nameWithType: Converters.MapEnums<ISoDatabaseContextFactory, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.ISoDatabaseContextFactory, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoDatabaseContextFactory, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.ISoDatabaseContextFactory, To)()
  name.vb: MapEnums(Of ISoDatabaseContextFactory, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoDatabaseContextFactory, To>
    nameWithType: Converters.MapEnums<ISoDatabaseContextFactory, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.ISoDatabaseContextFactory, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoDatabaseContextFactory, To)
    nameWithType: Converters.MapEnums(Of ISoDatabaseContextFactory, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.ISoDatabaseContextFactory, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext
  isExternal: true
  name: EnterDatabaseContext
  nameWithType: ISoDatabaseContextFactory.EnterDatabaseContext
  fullName: SuperOffice.ISoDatabaseContextFactory.EnterDatabaseContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.IDatabaseContext
  commentId: T:SuperOffice.IDatabaseContext
  parent: SuperOffice
  isExternal: true
  name: IDatabaseContext
  nameWithType: IDatabaseContext
  fullName: SuperOffice.IDatabaseContext
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers
  isExternal: true
  name: GetAllContextIdentifiers
  nameWithType: ISoDatabaseContextFactory.GetAllContextIdentifiers
  fullName: SuperOffice.ISoDatabaseContextFactory.GetAllContextIdentifiers
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.ISoDatabaseContextFactory.GetCurrent*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: ISoDatabaseContextFactory.GetCurrent
  fullName: SuperOffice.ISoDatabaseContextFactory.GetCurrent
- uid: SuperOffice.SoDatabaseContext
  commentId: T:SuperOffice.SoDatabaseContext
  parent: SuperOffice
  isExternal: true
  name: SoDatabaseContext
  nameWithType: SoDatabaseContext
  fullName: SuperOffice.SoDatabaseContext
- uid: SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser
  isExternal: true
  name: GetCurrentIgnoreUser
  nameWithType: ISoDatabaseContextFactory.GetCurrentIgnoreUser
  fullName: SuperOffice.ISoDatabaseContextFactory.GetCurrentIgnoreUser
- uid: SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext
  isExternal: true
  name: GetDatabaseContext
  nameWithType: ISoDatabaseContextFactory.GetDatabaseContext
  fullName: SuperOffice.ISoDatabaseContextFactory.GetDatabaseContext
- uid: SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext
  isExternal: true
  name: HasDatabaseContext
  nameWithType: ISoDatabaseContextFactory.HasDatabaseContext
  fullName: SuperOffice.ISoDatabaseContextFactory.HasDatabaseContext
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext
  isExternal: true
  name: RemoveDatabaseContext
  nameWithType: ISoDatabaseContextFactory.RemoveDatabaseContext
  fullName: SuperOffice.ISoDatabaseContextFactory.RemoveDatabaseContext
- uid: SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier
  isExternal: true
  name: GetCurrentContextIdentifier
  nameWithType: ISoDatabaseContextFactory.GetCurrentContextIdentifier
  fullName: SuperOffice.ISoDatabaseContextFactory.GetCurrentContextIdentifier
- uid: SuperOffice.ISoDatabaseContextFactory.TryResolveContext*
  commentId: Overload:SuperOffice.ISoDatabaseContextFactory.TryResolveContext
  isExternal: true
  name: TryResolveContext
  nameWithType: ISoDatabaseContextFactory.TryResolveContext
  fullName: SuperOffice.ISoDatabaseContextFactory.TryResolveContext
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ClaimsIdentity>
  nameWithType: IEnumerable<ClaimsIdentity>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>
  nameWithType.vb: IEnumerable(Of ClaimsIdentity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity)
  name.vb: IEnumerable(Of ClaimsIdentity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.ClaimsIdentity[]
  isExternal: true
  name: ClaimsIdentity[]
  nameWithType: ClaimsIdentity[]
  fullName: System.Security.Claims.ClaimsIdentity[]
  nameWithType.vb: ClaimsIdentity()
  fullName.vb: System.Security.Claims.ClaimsIdentity()
  name.vb: ClaimsIdentity()
  spec.csharp:
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    nameWithType: ClaimsIdentity
    fullName: System.Security.Claims.ClaimsIdentity
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
