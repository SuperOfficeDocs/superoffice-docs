### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.NotifyRecordData
  commentId: T:SuperOffice.CRM.Rows.NotifyRecordData
  id: NotifyRecordData
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.NotifyRecordData.#ctor
  - SuperOffice.CRM.Rows.NotifyRecordData.CategoryId
  - SuperOffice.CRM.Rows.NotifyRecordData.ChatNickName
  - SuperOffice.CRM.Rows.NotifyRecordData.ChatTopicId
  - SuperOffice.CRM.Rows.NotifyRecordData.CustomMessage
  - SuperOffice.CRM.Rows.NotifyRecordData.CustomUrl
  - SuperOffice.CRM.Rows.NotifyRecordData.Expires
  - SuperOffice.CRM.Rows.NotifyRecordData.NotifyId
  - SuperOffice.CRM.Rows.NotifyRecordData.OwnerId
  - SuperOffice.CRM.Rows.NotifyRecordData.Registered
  - SuperOffice.CRM.Rows.NotifyRecordData.RegisteredAssociateId
  - SuperOffice.CRM.Rows.NotifyRecordData.TicketAlertId
  - SuperOffice.CRM.Rows.NotifyRecordData.TicketId
  - SuperOffice.CRM.Rows.NotifyRecordData.Type
  - SuperOffice.CRM.Rows.NotifyRecordData.User2Id
  - SuperOffice.CRM.Rows.NotifyRecordData.UserId
  langs:
  - csharp
  - vb
  name: NotifyRecordData
  nameWithType: NotifyRecordData
  fullName: SuperOffice.CRM.Rows.NotifyRecordData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPOCO (Plain Old CLR Object) class that can be used to hold data corresponding\nto a row from the notify table.\n"
  remarks: "\nPlease use this class instead of a full <xref href=\"SuperOffice.CRM.Rows.NotifyRow\" data-throw-if-not-resolved=\"false\"></xref> object when\nyou do not need to <strong>create or update</strong> a value in the database. Row objects have a large overhead\nsince they carry the corresponding <xref href=\"SuperOffice.CRM.Data.NotifyTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object, which\nin turn defines fields and aliases; there may be a Sentry on a row, and various other helper objects.\n"
  syntax:
    content: 'public class NotifyRecordData : Object'
    content.vb: >-
      Public Class NotifyRecordData
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Rows.NotifyRecordData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.NotifyRecordData)
  - SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.NotifyRecordData.NotifyId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.NotifyId
  id: NotifyId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: NotifyId
  nameWithType: NotifyRecordData.NotifyId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.NotifyId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key (auto-incremented) \n"
  syntax:
    content: public int NotifyId
    return:
      type: System.Int32
    content.vb: Public NotifyId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.Type
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.Type
  id: Type
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: NotifyRecordData.Type
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.Type
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nA number (enum) indicating the type of the notification. \n"
  syntax:
    content: public int Type
    return:
      type: System.Int32
    content.vb: Public Type As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.Expires
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.Expires
  id: Expires
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: Expires
  nameWithType: NotifyRecordData.Expires
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.Expires
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nWhen the notification expires, if it has not yet been displayed. \n"
  syntax:
    content: public DateTime Expires
    return:
      type: System.DateTime
    content.vb: Public Expires As DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.UserId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.UserId
  id: UserId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: NotifyRecordData.UserId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.UserId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe id of the user who should be notified. \n"
  syntax:
    content: public int UserId
    return:
      type: System.Int32
    content.vb: Public UserId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.OwnerId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.OwnerId
  id: OwnerId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: OwnerId
  nameWithType: NotifyRecordData.OwnerId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.OwnerId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe id of the user who is the original owner of this notification. \n"
  syntax:
    content: public int OwnerId
    return:
      type: System.Int32
    content.vb: Public OwnerId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.TicketId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.TicketId
  id: TicketId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: TicketId
  nameWithType: NotifyRecordData.TicketId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.TicketId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe id of the ticket this notification message affects. \n"
  syntax:
    content: public int TicketId
    return:
      type: System.Int32
    content.vb: Public TicketId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.User2Id
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.User2Id
  id: User2Id
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: User2Id
  nameWithType: NotifyRecordData.User2Id
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.User2Id
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nA second user involved in this notification \n"
  syntax:
    content: public int User2Id
    return:
      type: System.Int32
    content.vb: Public User2Id As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.CategoryId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.CategoryId
  id: CategoryId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: CategoryId
  nameWithType: NotifyRecordData.CategoryId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.CategoryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe category involed in this notification \n"
  syntax:
    content: public int CategoryId
    return:
      type: System.Int32
    content.vb: Public CategoryId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.ChatTopicId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.ChatTopicId
  id: ChatTopicId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: ChatTopicId
  nameWithType: NotifyRecordData.ChatTopicId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.ChatTopicId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChat topic involed in this notification \n"
  syntax:
    content: public int ChatTopicId
    return:
      type: System.Int32
    content.vb: Public ChatTopicId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.ChatNickName
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.ChatNickName
  id: ChatNickName
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: ChatNickName
  nameWithType: NotifyRecordData.ChatNickName
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.ChatNickName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChat customer nick name in this notification \n"
  syntax:
    content: public string ChatNickName
    return:
      type: System.String
    content.vb: Public ChatNickName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.TicketAlertId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.TicketAlertId
  id: TicketAlertId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: TicketAlertId
  nameWithType: NotifyRecordData.TicketAlertId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.TicketAlertId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nTicket alert used when tickets are escalated \n"
  syntax:
    content: public int TicketAlertId
    return:
      type: System.Int32
    content.vb: Public TicketAlertId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.CustomMessage
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.CustomMessage
  id: CustomMessage
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: CustomMessage
  nameWithType: NotifyRecordData.CustomMessage
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.CustomMessage
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nText for custom notify messages \n"
  syntax:
    content: public string CustomMessage
    return:
      type: System.String
    content.vb: Public CustomMessage As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.CustomUrl
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.CustomUrl
  id: CustomUrl
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: CustomUrl
  nameWithType: NotifyRecordData.CustomUrl
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.CustomUrl
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAn URL which can be set with custom notification messages \n"
  syntax:
    content: public string CustomUrl
    return:
      type: System.String
    content.vb: Public CustomUrl As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.Registered
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: NotifyRecordData.Registered
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.Registered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nRegistered when in UTC.  \n"
  syntax:
    content: public DateTime Registered
    return:
      type: System.DateTime
    content.vb: Public Registered As DateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.RegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.NotifyRecordData.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: NotifyRecordData.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.RegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nRegistered by whom \n"
  syntax:
    content: public int RegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Public RegisteredAssociateId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.NotifyRecordData.#ctor
  commentId: M:SuperOffice.CRM.Rows.NotifyRecordData.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.NotifyRecordData
  langs:
  - csharp
  - vb
  name: NotifyRecordData()
  nameWithType: NotifyRecordData.NotifyRecordData()
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.NotifyRecordData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public NotifyRecordData()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.NotifyRecordData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Rows.NotifyRecordData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NotifyRecordData, To>()
  nameWithType: EnumUtil.MapEnums<NotifyRecordData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.NotifyRecordData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NotifyRecordData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.NotifyRecordData, To)()
  name.vb: MapEnums(Of NotifyRecordData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NotifyRecordData, To>
    nameWithType: EnumUtil.MapEnums<NotifyRecordData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.NotifyRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NotifyRecordData, To)
    nameWithType: EnumUtil.MapEnums(Of NotifyRecordData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.NotifyRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.NotifyRecordData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<NotifyRecordData>(NotifyRecordData)
  nameWithType: ObjectExtensions.AssignByReflection<NotifyRecordData>(NotifyRecordData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.NotifyRecordData>(SuperOffice.CRM.Rows.NotifyRecordData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of NotifyRecordData)(NotifyRecordData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.NotifyRecordData)(SuperOffice.CRM.Rows.NotifyRecordData)
  name.vb: AssignByReflection(Of NotifyRecordData)(NotifyRecordData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<NotifyRecordData>
    nameWithType: ObjectExtensions.AssignByReflection<NotifyRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.NotifyRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.NotifyRecordData
    name: NotifyRecordData
    nameWithType: NotifyRecordData
    fullName: SuperOffice.CRM.Rows.NotifyRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of NotifyRecordData)
    nameWithType: ObjectExtensions.AssignByReflection(Of NotifyRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.NotifyRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.NotifyRecordData
    name: NotifyRecordData
    nameWithType: NotifyRecordData
    fullName: SuperOffice.CRM.Rows.NotifyRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<NotifyRecordData>()
  nameWithType: ObjectExtensions.GraphCopy<NotifyRecordData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.NotifyRecordData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of NotifyRecordData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.NotifyRecordData)()
  name.vb: GraphCopy(Of NotifyRecordData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<NotifyRecordData>
    nameWithType: ObjectExtensions.GraphCopy<NotifyRecordData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.NotifyRecordData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of NotifyRecordData)
    nameWithType: ObjectExtensions.GraphCopy(Of NotifyRecordData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.NotifyRecordData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.NotifyRecordDataExtensions
  definition: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData,System.Threading.CancellationToken)
  name: ToInsertAsync(CancellationToken)
  nameWithType: NotifyRecordDataExtensions.ToInsertAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: NotifyRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: NotifyRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.NotifyRecordData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NotifyRecordData, To>()
  nameWithType: Converters.MapEnums<NotifyRecordData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.NotifyRecordData, To>()
  nameWithType.vb: Converters.MapEnums(Of NotifyRecordData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.NotifyRecordData, To)()
  name.vb: MapEnums(Of NotifyRecordData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NotifyRecordData, To>
    nameWithType: Converters.MapEnums<NotifyRecordData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.NotifyRecordData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NotifyRecordData, To)
    nameWithType: Converters.MapEnums(Of NotifyRecordData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.NotifyRecordData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData,System.Threading.CancellationToken)
  isExternal: true
  name: ToInsertAsync(NotifyRecordData, CancellationToken)
  nameWithType: NotifyRecordDataExtensions.ToInsertAsync(NotifyRecordData, CancellationToken)
  fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData,System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: NotifyRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.NotifyRecordData
    name: NotifyRecordData
    nameWithType: NotifyRecordData
    fullName: SuperOffice.CRM.Rows.NotifyRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync(SuperOffice.CRM.Rows.NotifyRecordData,System.Threading.CancellationToken)
    name: ToInsertAsync
    nameWithType: NotifyRecordDataExtensions.ToInsertAsync
    fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions.ToInsertAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.NotifyRecordData
    name: NotifyRecordData
    nameWithType: NotifyRecordData
    fullName: SuperOffice.CRM.Rows.NotifyRecordData
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.NotifyRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.NotifyRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: NotifyRecordDataExtensions
  nameWithType: NotifyRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.NotifyRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Rows.NotifyRecordData.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.NotifyRecordData.#ctor
  isExternal: true
  name: NotifyRecordData
  nameWithType: NotifyRecordData.NotifyRecordData
  fullName: SuperOffice.CRM.Rows.NotifyRecordData.NotifyRecordData
