### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.XmlUtil
  commentId: T:SuperOffice.Util.XmlUtil
  id: XmlUtil
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode)
  - SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode,System.String)
  - SuperOffice.Util.XmlUtil.GetValidXmlString(System.String)
  - SuperOffice.Util.XmlUtil.InnerMerge(System.Xml.XmlNode,System.Xml.XmlNode)
  - SuperOffice.Util.XmlUtil.Merge(System.Xml.XmlNode,System.Xml.XmlNode)
  - SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode,System.String)
  - SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode,System.String,System.String)
  - SuperOffice.Util.XmlUtil.SafeGetAttributes(System.Xml.XmlNode,System.Boolean,System.String[])
  - SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute(System.Xml.XmlNode,System.String)
  - SuperOffice.Util.XmlUtil.SafeRemoveAttribute(System.Xml.XmlNode,System.String)
  - SuperOffice.Util.XmlUtil.SafeSetAttribute(System.Xml.XmlNode,System.String,System.String,SuperOffice.Util.XmlUtil.Override)
  - SuperOffice.Util.XmlUtil.SafeSetChildNodeText(System.Xml.XmlNode,System.String,System.String)
  langs:
  - csharp
  - vb
  name: XmlUtil
  nameWithType: XmlUtil
  fullName: SuperOffice.Util.XmlUtil
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: This class contains utility methods for manipulating Xml elements
  example: []
  syntax:
    content: public static class XmlUtil
    content.vb: Public Module XmlUtil
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.Util.XmlUtil.GetValidXmlString(System.String)
  commentId: M:SuperOffice.Util.XmlUtil.GetValidXmlString(System.String)
  id: GetValidXmlString(System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: GetValidXmlString(string)
  nameWithType: XmlUtil.GetValidXmlString(string)
  fullName: SuperOffice.Util.XmlUtil.GetValidXmlString(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Get rid of characters WriteElementString does not handle
  example: []
  syntax:
    content: public static string GetValidXmlString(string text)
    parameters:
    - id: text
      type: System.String
      description: Text to verify
    return:
      type: System.String
      description: Valid xml string
    content.vb: Public Shared Function GetValidXmlString(text As String) As String
  overload: SuperOffice.Util.XmlUtil.GetValidXmlString*
  nameWithType.vb: XmlUtil.GetValidXmlString(String)
  fullName.vb: SuperOffice.Util.XmlUtil.GetValidXmlString(String)
  name.vb: GetValidXmlString(String)
- uid: SuperOffice.Util.XmlUtil.Merge(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:SuperOffice.Util.XmlUtil.Merge(System.Xml.XmlNode,System.Xml.XmlNode)
  id: Merge(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: Merge(XmlNode, XmlNode)
  nameWithType: XmlUtil.Merge(XmlNode, XmlNode)
  fullName: SuperOffice.Util.XmlUtil.Merge(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Merge two XML trees
  remarks: >-
    Equivalent nodes appear only once in the output. Two element nodes are treated equivalent if: their local names are equal, 

    their namespace-uris are equal, and all their attributes are equal. Two text nodes are treated equal if their normalized 

    content is equal. The same rule applies for comments and processing instructions.

    <p></p>

    See http://www.informatik.hu-berlin.de/~obecker/XSLT/ for a more detailed explanation!
  example: []
  syntax:
    content: public static string Merge(XmlNode first, XmlNode second)
    parameters:
    - id: first
      type: System.Xml.XmlNode
      description: First XML tree
    - id: second
      type: System.Xml.XmlNode
      description: Second XML tree
    return:
      type: System.String
      description: Markup of result
    content.vb: Public Shared Function Merge(first As XmlNode, second As XmlNode) As String
  overload: SuperOffice.Util.XmlUtil.Merge*
- uid: SuperOffice.Util.XmlUtil.InnerMerge(System.Xml.XmlNode,System.Xml.XmlNode)
  commentId: M:SuperOffice.Util.XmlUtil.InnerMerge(System.Xml.XmlNode,System.Xml.XmlNode)
  id: InnerMerge(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: InnerMerge(XmlNode, XmlNode)
  nameWithType: XmlUtil.InnerMerge(XmlNode, XmlNode)
  fullName: SuperOffice.Util.XmlUtil.InnerMerge(System.Xml.XmlNode, System.Xml.XmlNode)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Merge the inner XML's of two XML trees, i.e., leave the outer element alone (it is assumed to match), and merge the inner parts.
  remarks: See the other Merge method for information on the merge process
  example: []
  syntax:
    content: public static string InnerMerge(XmlNode first, XmlNode second)
    parameters:
    - id: first
      type: System.Xml.XmlNode
      description: First XML tree
    - id: second
      type: System.Xml.XmlNode
      description: Second XML tree
    return:
      type: System.String
      description: Markup of result, which does NOT contain the outer parts of any of the input elements
    content.vb: Public Shared Function InnerMerge(first As XmlNode, second As XmlNode) As String
  overload: SuperOffice.Util.XmlUtil.InnerMerge*
- uid: SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode,System.String,System.String)
  commentId: M:SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode,System.String,System.String)
  id: SafeGetAttribute(System.Xml.XmlNode,System.String,System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeGetAttribute(XmlNode, string, string)
  nameWithType: XmlUtil.SafeGetAttribute(XmlNode, string, string)
  fullName: SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode, string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Get an attribute text value; return defaultValue if it does not exist or is empty. This method

    does not throw any exceptions
  example: []
  syntax:
    content: public static string SafeGetAttribute(XmlNode node, string attributeName, string defaultValue)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: Node to get from
    - id: attributeName
      type: System.String
      description: Name of attribute
    - id: defaultValue
      type: System.String
      description: The value to return if attribute does not exist or is empty.
    return:
      type: System.String
      description: Value, or defaultValue
    content.vb: Public Shared Function SafeGetAttribute(node As XmlNode, attributeName As String, defaultValue As String) As String
  overload: SuperOffice.Util.XmlUtil.SafeGetAttribute*
  nameWithType.vb: XmlUtil.SafeGetAttribute(XmlNode, String, String)
  fullName.vb: SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode, String, String)
  name.vb: SafeGetAttribute(XmlNode, String, String)
- uid: SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode,System.String)
  commentId: M:SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode,System.String)
  id: SafeGetAttribute(System.Xml.XmlNode,System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeGetAttribute(XmlNode, string)
  nameWithType: XmlUtil.SafeGetAttribute(XmlNode, string)
  fullName: SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Get an attribute text value; return string.Empty if it does not exist. This method

    does not throw any exceptions
  example: []
  syntax:
    content: public static string SafeGetAttribute(XmlNode node, string attributeName)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: Node to get from
    - id: attributeName
      type: System.String
      description: Name of attribute
    return:
      type: System.String
      description: Value, or empty string
    content.vb: Public Shared Function SafeGetAttribute(node As XmlNode, attributeName As String) As String
  overload: SuperOffice.Util.XmlUtil.SafeGetAttribute*
  nameWithType.vb: XmlUtil.SafeGetAttribute(XmlNode, String)
  fullName.vb: SuperOffice.Util.XmlUtil.SafeGetAttribute(System.Xml.XmlNode, String)
  name.vb: SafeGetAttribute(XmlNode, String)
- uid: SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute(System.Xml.XmlNode,System.String)
  commentId: M:SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute(System.Xml.XmlNode,System.String)
  id: SafeGetRequiredAttribute(System.Xml.XmlNode,System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeGetRequiredAttribute(XmlNode, string)
  nameWithType: XmlUtil.SafeGetRequiredAttribute(XmlNode, string)
  fullName: SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute(System.Xml.XmlNode, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Get an attribute text value; throw an exception if it is empty
  example: []
  syntax:
    content: public static string SafeGetRequiredAttribute(XmlNode node, string attributeName)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: Node to get from
    - id: attributeName
      type: System.String
      description: Name of attribute
    return:
      type: System.String
      description: Value, or empty string
    content.vb: Public Shared Function SafeGetRequiredAttribute(node As XmlNode, attributeName As String) As String
  overload: SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalXmlException
    commentId: T:SuperOffice.Exceptions.SoIllegalXmlException
    description: Thrown if the attribute does not exist or has an empty value
  nameWithType.vb: XmlUtil.SafeGetRequiredAttribute(XmlNode, String)
  fullName.vb: SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute(System.Xml.XmlNode, String)
  name.vb: SafeGetRequiredAttribute(XmlNode, String)
- uid: SuperOffice.Util.XmlUtil.SafeSetAttribute(System.Xml.XmlNode,System.String,System.String,SuperOffice.Util.XmlUtil.Override)
  commentId: M:SuperOffice.Util.XmlUtil.SafeSetAttribute(System.Xml.XmlNode,System.String,System.String,SuperOffice.Util.XmlUtil.Override)
  id: SafeSetAttribute(System.Xml.XmlNode,System.String,System.String,SuperOffice.Util.XmlUtil.Override)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeSetAttribute(XmlNode, string, string, Override)
  nameWithType: XmlUtil.SafeSetAttribute(XmlNode, string, string, XmlUtil.Override)
  fullName: SuperOffice.Util.XmlUtil.SafeSetAttribute(System.Xml.XmlNode, string, string, SuperOffice.Util.XmlUtil.Override)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Set an attribute value; create the attribute or overwrite its previous value as appropriate
  example: []
  syntax:
    content: public static void SafeSetAttribute(XmlNode node, string attrName, string attrValue, XmlUtil.Override overrideExisting)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: Node to modify
    - id: attrName
      type: System.String
      description: Attribute name
    - id: attrValue
      type: System.String
      description: Desired attribute value
    - id: overrideExisting
      type: SuperOffice.Util.XmlUtil.Override
      description: Should an existing value be overwritten or not
    content.vb: Public Shared Sub SafeSetAttribute(node As XmlNode, attrName As String, attrValue As String, overrideExisting As XmlUtil.Override)
  overload: SuperOffice.Util.XmlUtil.SafeSetAttribute*
  nameWithType.vb: XmlUtil.SafeSetAttribute(XmlNode, String, String, XmlUtil.Override)
  fullName.vb: SuperOffice.Util.XmlUtil.SafeSetAttribute(System.Xml.XmlNode, String, String, SuperOffice.Util.XmlUtil.Override)
  name.vb: SafeSetAttribute(XmlNode, String, String, Override)
- uid: SuperOffice.Util.XmlUtil.SafeRemoveAttribute(System.Xml.XmlNode,System.String)
  commentId: M:SuperOffice.Util.XmlUtil.SafeRemoveAttribute(System.Xml.XmlNode,System.String)
  id: SafeRemoveAttribute(System.Xml.XmlNode,System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeRemoveAttribute(XmlNode, string)
  nameWithType: XmlUtil.SafeRemoveAttribute(XmlNode, string)
  fullName: SuperOffice.Util.XmlUtil.SafeRemoveAttribute(System.Xml.XmlNode, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Remove an attribute from a node, whether it exists or not ;-)
  example: []
  syntax:
    content: public static void SafeRemoveAttribute(XmlNode node, string attrName)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: Node to be modified
    - id: attrName
      type: System.String
      description: Attribute to remove
    content.vb: Public Shared Sub SafeRemoveAttribute(node As XmlNode, attrName As String)
  overload: SuperOffice.Util.XmlUtil.SafeRemoveAttribute*
  nameWithType.vb: XmlUtil.SafeRemoveAttribute(XmlNode, String)
  fullName.vb: SuperOffice.Util.XmlUtil.SafeRemoveAttribute(System.Xml.XmlNode, String)
  name.vb: SafeRemoveAttribute(XmlNode, String)
- uid: SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode,System.String)
  commentId: M:SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode,System.String)
  id: GetNodeText(System.Xml.XmlNode,System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: GetNodeText(XmlNode, string)
  nameWithType: XmlUtil.GetNodeText(XmlNode, string)
  fullName: SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Get the text that is inside one Xml element node
  example: []
  syntax:
    content: public static string GetNodeText(XmlNode node, string defaultValue)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: The node
    - id: defaultValue
      type: System.String
      description: The string returned if the node is null
    return:
      type: System.String
      description: Text, the default value will be returned if the node is null or does not contain an XmlText childnode
    content.vb: Public Shared Function GetNodeText(node As XmlNode, defaultValue As String) As String
  overload: SuperOffice.Util.XmlUtil.GetNodeText*
  nameWithType.vb: XmlUtil.GetNodeText(XmlNode, String)
  fullName.vb: SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode, String)
  name.vb: GetNodeText(XmlNode, String)
- uid: SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode)
  commentId: M:SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode)
  id: GetNodeText(System.Xml.XmlNode)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: GetNodeText(XmlNode)
  nameWithType: XmlUtil.GetNodeText(XmlNode)
  fullName: SuperOffice.Util.XmlUtil.GetNodeText(System.Xml.XmlNode)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Get the text that is inside one Xml element node
  example: []
  syntax:
    content: public static string GetNodeText(XmlNode node)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: The node
    return:
      type: System.String
      description: Text, null will be returned if the node does not contain an XmlText childnode
    content.vb: Public Shared Function GetNodeText(node As XmlNode) As String
  overload: SuperOffice.Util.XmlUtil.GetNodeText*
- uid: SuperOffice.Util.XmlUtil.SafeSetChildNodeText(System.Xml.XmlNode,System.String,System.String)
  commentId: M:SuperOffice.Util.XmlUtil.SafeSetChildNodeText(System.Xml.XmlNode,System.String,System.String)
  id: SafeSetChildNodeText(System.Xml.XmlNode,System.String,System.String)
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeSetChildNodeText(XmlNode, string, string)
  nameWithType: XmlUtil.SafeSetChildNodeText(XmlNode, string, string)
  fullName: SuperOffice.Util.XmlUtil.SafeSetChildNodeText(System.Xml.XmlNode, string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Set the text value of the named child node. The child node is created, as an element, if it does not exist.

    Any previous value is lost! - so don't use this on child nodes that contain other nodes.
  example: []
  syntax:
    content: public static XmlNode SafeSetChildNodeText(XmlNode parent, string childName, string childText)
    parameters:
    - id: parent
      type: System.Xml.XmlNode
      description: The parent node whose child is to be set
    - id: childName
      type: System.String
      description: The name of the child node
    - id: childText
      type: System.String
      description: The desired text value; null is acceptable and means 'do not create the inner text element'.
    return:
      type: System.Xml.XmlNode
      description: The child node
    content.vb: Public Shared Function SafeSetChildNodeText(parent As XmlNode, childName As String, childText As String) As XmlNode
  overload: SuperOffice.Util.XmlUtil.SafeSetChildNodeText*
  nameWithType.vb: XmlUtil.SafeSetChildNodeText(XmlNode, String, String)
  fullName.vb: SuperOffice.Util.XmlUtil.SafeSetChildNodeText(System.Xml.XmlNode, String, String)
  name.vb: SafeSetChildNodeText(XmlNode, String, String)
- uid: SuperOffice.Util.XmlUtil.SafeGetAttributes(System.Xml.XmlNode,System.Boolean,System.String[])
  commentId: M:SuperOffice.Util.XmlUtil.SafeGetAttributes(System.Xml.XmlNode,System.Boolean,System.String[])
  id: SafeGetAttributes(System.Xml.XmlNode,System.Boolean,System.String[])
  parent: SuperOffice.Util.XmlUtil
  langs:
  - csharp
  - vb
  name: SafeGetAttributes(XmlNode, bool, params string[])
  nameWithType: XmlUtil.SafeGetAttributes(XmlNode, bool, params string[])
  fullName: SuperOffice.Util.XmlUtil.SafeGetAttributes(System.Xml.XmlNode, bool, params string[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Extract a number of attributes from a node, and return them as a dictionary
  example: []
  syntax:
    content: public static Dictionary<string, string> SafeGetAttributes(XmlNode node, bool require, params string[] attributeNames)
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: Node to extract data from
    - id: require
      type: System.Boolean
      description: >-
        Require all attributes (exception if at least one is missing) - if false,
                    missing attributes will be returned as blank values instead
    - id: attributeNames
      type: System.String[]
      description: Array of case-sensitive attribute names
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Dictionary containing one entry per requested attribute
    content.vb: Public Shared Function SafeGetAttributes(node As XmlNode, require As Boolean, ParamArray attributeNames As String()) As Dictionary(Of String, String)
  overload: SuperOffice.Util.XmlUtil.SafeGetAttributes*
  nameWithType.vb: XmlUtil.SafeGetAttributes(XmlNode, Boolean, ParamArray String())
  fullName.vb: SuperOffice.Util.XmlUtil.SafeGetAttributes(System.Xml.XmlNode, Boolean, ParamArray String())
  name.vb: SafeGetAttributes(XmlNode, Boolean, ParamArray String())
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.XmlUtil.GetValidXmlString*
  commentId: Overload:SuperOffice.Util.XmlUtil.GetValidXmlString
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_GetValidXmlString_System_String_
  name: GetValidXmlString
  nameWithType: XmlUtil.GetValidXmlString
  fullName: SuperOffice.Util.XmlUtil.GetValidXmlString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Util.XmlUtil.Merge*
  commentId: Overload:SuperOffice.Util.XmlUtil.Merge
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_Merge_System_Xml_XmlNode_System_Xml_XmlNode_
  name: Merge
  nameWithType: XmlUtil.Merge
  fullName: SuperOffice.Util.XmlUtil.Merge
- uid: System.Xml.XmlNode
  commentId: T:System.Xml.XmlNode
  parent: System.Xml
  isExternal: true
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Xml
    name: Xml
    isExternal: true
- uid: SuperOffice.Util.XmlUtil.InnerMerge*
  commentId: Overload:SuperOffice.Util.XmlUtil.InnerMerge
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_InnerMerge_System_Xml_XmlNode_System_Xml_XmlNode_
  name: InnerMerge
  nameWithType: XmlUtil.InnerMerge
  fullName: SuperOffice.Util.XmlUtil.InnerMerge
- uid: SuperOffice.Util.XmlUtil.SafeGetAttribute*
  commentId: Overload:SuperOffice.Util.XmlUtil.SafeGetAttribute
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_SafeGetAttribute_System_Xml_XmlNode_System_String_System_String_
  name: SafeGetAttribute
  nameWithType: XmlUtil.SafeGetAttribute
  fullName: SuperOffice.Util.XmlUtil.SafeGetAttribute
- uid: SuperOffice.Exceptions.SoIllegalXmlException
  commentId: T:SuperOffice.Exceptions.SoIllegalXmlException
  isExternal: true
  href: SuperOffice.Exceptions.SoIllegalXmlException.html
  name: SoIllegalXmlException
  nameWithType: SoIllegalXmlException
  fullName: SuperOffice.Exceptions.SoIllegalXmlException
- uid: SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute*
  commentId: Overload:SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_SafeGetRequiredAttribute_System_Xml_XmlNode_System_String_
  name: SafeGetRequiredAttribute
  nameWithType: XmlUtil.SafeGetRequiredAttribute
  fullName: SuperOffice.Util.XmlUtil.SafeGetRequiredAttribute
- uid: SuperOffice.Util.XmlUtil.SafeSetAttribute*
  commentId: Overload:SuperOffice.Util.XmlUtil.SafeSetAttribute
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_SafeSetAttribute_System_Xml_XmlNode_System_String_System_String_SuperOffice_Util_XmlUtil_Override_
  name: SafeSetAttribute
  nameWithType: XmlUtil.SafeSetAttribute
  fullName: SuperOffice.Util.XmlUtil.SafeSetAttribute
- uid: SuperOffice.Util.XmlUtil.Override
  commentId: T:SuperOffice.Util.XmlUtil.Override
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html
  name: XmlUtil.Override
  nameWithType: XmlUtil.Override
  fullName: SuperOffice.Util.XmlUtil.Override
  spec.csharp:
  - uid: SuperOffice.Util.XmlUtil
    name: XmlUtil
    isExternal: true
    href: SuperOffice.Util.XmlUtil.html
  - name: .
  - uid: SuperOffice.Util.XmlUtil.Override
    name: Override
    isExternal: true
    href: SuperOffice.Util.XmlUtil.Override.html
  spec.vb:
  - uid: SuperOffice.Util.XmlUtil
    name: XmlUtil
    isExternal: true
    href: SuperOffice.Util.XmlUtil.html
  - name: .
  - uid: SuperOffice.Util.XmlUtil.Override
    name: Override
    isExternal: true
    href: SuperOffice.Util.XmlUtil.Override.html
- uid: SuperOffice.Util.XmlUtil.SafeRemoveAttribute*
  commentId: Overload:SuperOffice.Util.XmlUtil.SafeRemoveAttribute
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_SafeRemoveAttribute_System_Xml_XmlNode_System_String_
  name: SafeRemoveAttribute
  nameWithType: XmlUtil.SafeRemoveAttribute
  fullName: SuperOffice.Util.XmlUtil.SafeRemoveAttribute
- uid: SuperOffice.Util.XmlUtil.GetNodeText*
  commentId: Overload:SuperOffice.Util.XmlUtil.GetNodeText
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_GetNodeText_System_Xml_XmlNode_System_String_
  name: GetNodeText
  nameWithType: XmlUtil.GetNodeText
  fullName: SuperOffice.Util.XmlUtil.GetNodeText
- uid: SuperOffice.Util.XmlUtil.SafeSetChildNodeText*
  commentId: Overload:SuperOffice.Util.XmlUtil.SafeSetChildNodeText
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_SafeSetChildNodeText_System_Xml_XmlNode_System_String_System_String_
  name: SafeSetChildNodeText
  nameWithType: XmlUtil.SafeSetChildNodeText
  fullName: SuperOffice.Util.XmlUtil.SafeSetChildNodeText
- uid: SuperOffice.Util.XmlUtil.SafeGetAttributes*
  commentId: Overload:SuperOffice.Util.XmlUtil.SafeGetAttributes
  isExternal: true
  href: SuperOffice.Util.XmlUtil.html#SuperOffice_Util_XmlUtil_SafeGetAttributes_System_Xml_XmlNode_System_Boolean_System_String___
  name: SafeGetAttributes
  nameWithType: XmlUtil.SafeGetAttributes
  fullName: SuperOffice.Util.XmlUtil.SafeGetAttributes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
