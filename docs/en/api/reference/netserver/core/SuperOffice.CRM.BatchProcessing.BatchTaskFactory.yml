### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  commentId: T:SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  id: BatchTaskFactory
  parent: SuperOffice.CRM.BatchProcessing
  children:
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.#ctor(Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory})
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo(System.Int32)
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks(System.TimeSpan)
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: BatchTaskFactory
  nameWithType: BatchTaskFactory
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nFactory for dealing with batch tasks.  Tasks are identified by a unique name and might require a context.\n"
  syntax:
    content: 'public class BatchTaskFactory : Object, IBatchTaskFactory'
    content.vb: >-
      Public Class BatchTaskFactory
          Inherits Object
          Implements IBatchTaskFactory
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.BatchTaskFactory.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.#ctor(Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory})
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.#ctor(Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory})
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory})'
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: BatchTaskFactory(ILogger<BatchTaskFactory>)
  nameWithType: BatchTaskFactory.BatchTaskFactory(ILogger<BatchTaskFactory>)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.BatchTaskFactory(Microsoft.Extensions.Logging.ILogger<SuperOffice.CRM.BatchProcessing.BatchTaskFactory>)
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public BatchTaskFactory(ILogger<BatchTaskFactory> logger)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory}
    content.vb: Public Sub New(logger As ILogger(Of BatchTaskFactory))
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.#ctor*
  nameWithType.vb: BatchTaskFactory.BatchTaskFactory(ILogger(Of BatchTaskFactory))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.BatchTaskFactory(Microsoft.Extensions.Logging.ILogger(Of SuperOffice.CRM.BatchProcessing.BatchTaskFactory))
  name.vb: BatchTaskFactory(ILogger(Of BatchTaskFactory))
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  id: GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: GetRunningTasks(BatchTaskState, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: BatchTaskFactory.GetRunningTasks(BatchTaskState, Nullable<Boolean>, Nullable<Boolean>)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nReturns array of running tasks in a given state.\n"
  syntax:
    content: public BatchTaskInfo[] GetRunningTasks(BatchTaskState state, Nullable<bool> internalTasks = null, Nullable<bool> systemTasks = null)
    parameters:
    - id: state
      type: SuperOffice.Data.BatchTaskState
      description: Only return tasks in this state
    - id: internalTasks
      type: System.Nullable{System.Boolean}
    - id: systemTasks
      type: System.Nullable{System.Boolean}
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo[]
      description: Array of running task info
    content.vb: Public Function GetRunningTasks(state As BatchTaskState, internalTasks As Nullable(Of Boolean) = Nothing, systemTasks As Nullable(Of Boolean) = Nothing) As BatchTaskInfo()
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  nameWithType.vb: BatchTaskFactory.GetRunningTasks(BatchTaskState, Nullable(Of Boolean), Nullable(Of Boolean))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: GetRunningTasks(BatchTaskState, Nullable(Of Boolean), Nullable(Of Boolean))
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks(System.TimeSpan)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks(System.TimeSpan)
  id: PurgeOldFinishedTasks(System.TimeSpan)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: PurgeOldFinishedTasks(TimeSpan)
  nameWithType: BatchTaskFactory.PurgeOldFinishedTasks(TimeSpan)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks(System.TimeSpan)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nPurge outdated task information from the Factory\n"
  syntax:
    content: public void PurgeOldFinishedTasks(TimeSpan timeSinceLastUpdate)
    parameters:
    - id: timeSinceLastUpdate
      type: System.TimeSpan
      description: How old information do you want to keep
    content.vb: Public Sub PurgeOldFinishedTasks(timeSinceLastUpdate As TimeSpan)
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  id: RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: RunTaskAsync(BatchTaskInfo, String, CancellationToken)
  nameWithType: BatchTaskFactory.RunTaskAsync(BatchTaskInfo, String, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public Task RunTaskAsync(BatchTaskInfo batchTaskInfo, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    - id: context
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RunTaskAsync(batchTaskInfo As BatchTaskInfo, context As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo(System.Int32)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo(System.Int32)
  id: GetTaskInfo(System.Int32)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: GetTaskInfo(Int32)
  nameWithType: BatchTaskFactory.GetTaskInfo(Int32)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo(System.Int32)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public BatchTaskInfo GetTaskInfo(int taskId)
    parameters:
    - id: taskId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
    content.vb: Public Function GetTaskInfo(taskId As Integer) As BatchTaskInfo
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo(System.Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  id: EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: EndTaskAsync(Int32, CancellationToken)
  nameWithType: BatchTaskFactory.EndTaskAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public Task EndTaskAsync(int taskId, CancellationToken cancellationToken = null)
    parameters:
    - id: taskId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EndTaskAsync(taskId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  id: WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
  langs:
  - csharp
  - vb
  name: WaitForTaskCompletionAsync(Int32, CancellationToken)
  nameWithType: BatchTaskFactory.WaitForTaskCompletionAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public Task<BatchTaskInfo> WaitForTaskCompletionAsync(int taskId, CancellationToken cancellationToken = null)
    parameters:
    - id: taskId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
    content.vb: Public Function WaitForTaskCompletionAsync(taskId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTaskFactory
  nameWithType: IBatchTaskFactory
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<BatchTaskFactory, To>()
  nameWithType: EnumUtil.MapEnums<BatchTaskFactory, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of BatchTaskFactory, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To)()
  name.vb: MapEnums(Of BatchTaskFactory, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<BatchTaskFactory, To>
    nameWithType: EnumUtil.MapEnums<BatchTaskFactory, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of BatchTaskFactory, To)
    nameWithType: EnumUtil.MapEnums(Of BatchTaskFactory, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<BatchTaskFactory, To>()
  nameWithType: Converters.MapEnums<BatchTaskFactory, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To>()
  nameWithType.vb: Converters.MapEnums(Of BatchTaskFactory, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To)()
  name.vb: MapEnums(Of BatchTaskFactory, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<BatchTaskFactory, To>
    nameWithType: Converters.MapEnums<BatchTaskFactory, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of BatchTaskFactory, To)
    nameWithType: Converters.MapEnums(Of BatchTaskFactory, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchTaskFactory, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.#ctor
  isExternal: true
  name: BatchTaskFactory
  nameWithType: BatchTaskFactory.BatchTaskFactory
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.BatchTaskFactory
- uid: Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory}
  commentId: '!:Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.BatchTaskFactory}'
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<BatchTaskFactory>
  nameWithType: ILogger<BatchTaskFactory>
  fullName: Microsoft.Extensions.Logging.ILogger<SuperOffice.CRM.BatchProcessing.BatchTaskFactory>
  nameWithType.vb: ILogger(Of BatchTaskFactory)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of SuperOffice.CRM.BatchProcessing.BatchTaskFactory)
  name.vb: ILogger(Of BatchTaskFactory)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
    name: BatchTaskFactory
    nameWithType: BatchTaskFactory
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
    name: BatchTaskFactory
    nameWithType: BatchTaskFactory
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: Microsoft.Extensions.Logging.ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks
  isExternal: true
  name: GetRunningTasks
  nameWithType: BatchTaskFactory.GetRunningTasks
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetRunningTasks
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  isExternal: true
  name: GetRunningTasks(BatchTaskState, Nullable<Boolean>, Nullable<Boolean>)
  nameWithType: IBatchTaskFactory.GetRunningTasks(BatchTaskState, Nullable<Boolean>, Nullable<Boolean>)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState, System.Nullable<System.Boolean>, System.Nullable<System.Boolean>)
  nameWithType.vb: IBatchTaskFactory.GetRunningTasks(BatchTaskState, Nullable(Of Boolean), Nullable(Of Boolean))
  fullName.vb: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState, System.Nullable(Of System.Boolean), System.Nullable(Of System.Boolean))
  name.vb: GetRunningTasks(BatchTaskState, Nullable(Of Boolean), Nullable(Of Boolean))
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
    name: GetRunningTasks
    nameWithType: IBatchTaskFactory.GetRunningTasks
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks(SuperOffice.Data.BatchTaskState,System.Nullable{System.Boolean},System.Nullable{System.Boolean})
    name: GetRunningTasks
    nameWithType: IBatchTaskFactory.GetRunningTasks
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetRunningTasks
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.BatchTaskState
  commentId: T:SuperOffice.Data.BatchTaskState
  parent: SuperOffice.Data
  isExternal: true
  name: BatchTaskState
  nameWithType: BatchTaskState
  fullName: SuperOffice.Data.BatchTaskState
- uid: System.Nullable{System.Boolean}
  commentId: '!:System.Nullable{System.Boolean}'
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.BatchTaskInfo[]
  isExternal: true
  name: BatchTaskInfo[]
  nameWithType: BatchTaskInfo[]
  fullName: SuperOffice.CRM.Services.BatchTaskInfo[]
  nameWithType.vb: BatchTaskInfo()
  fullName.vb: SuperOffice.CRM.Services.BatchTaskInfo()
  name.vb: BatchTaskInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Nullable`1
  isExternal: true
  name: Nullable<>
  nameWithType: Nullable<>
  fullName: System.Nullable<>
  nameWithType.vb: Nullable(Of )
  fullName.vb: System.Nullable(Of )
  name.vb: Nullable(Of )
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks
  isExternal: true
  name: PurgeOldFinishedTasks
  nameWithType: BatchTaskFactory.PurgeOldFinishedTasks
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.PurgeOldFinishedTasks
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync
  isExternal: true
  name: RunTaskAsync
  nameWithType: BatchTaskFactory.RunTaskAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.RunTaskAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  isExternal: true
  name: RunTaskAsync(BatchTaskInfo, String, CancellationToken)
  nameWithType: IBatchTaskFactory.RunTaskAsync(BatchTaskInfo, String, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
    name: RunTaskAsync
    nameWithType: IBatchTaskFactory.RunTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,System.Threading.CancellationToken)
    name: RunTaskAsync
    nameWithType: IBatchTaskFactory.RunTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.RunTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo
  isExternal: true
  name: GetTaskInfo
  nameWithType: BatchTaskFactory.GetTaskInfo
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.GetTaskInfo
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo(System.Int32)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo(System.Int32)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  isExternal: true
  name: GetTaskInfo(Int32)
  nameWithType: IBatchTaskFactory.GetTaskInfo(Int32)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo(System.Int32)
    name: GetTaskInfo
    nameWithType: IBatchTaskFactory.GetTaskInfo
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo(System.Int32)
    name: GetTaskInfo
    nameWithType: IBatchTaskFactory.GetTaskInfo
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.GetTaskInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync
  isExternal: true
  name: EndTaskAsync
  nameWithType: BatchTaskFactory.EndTaskAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.EndTaskAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  isExternal: true
  name: EndTaskAsync(Int32, CancellationToken)
  nameWithType: IBatchTaskFactory.EndTaskAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
    name: EndTaskAsync
    nameWithType: IBatchTaskFactory.EndTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync(System.Int32,System.Threading.CancellationToken)
    name: EndTaskAsync
    nameWithType: IBatchTaskFactory.EndTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.EndTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync
  isExternal: true
  name: WaitForTaskCompletionAsync
  nameWithType: BatchTaskFactory.WaitForTaskCompletionAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskFactory.WaitForTaskCompletionAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  isExternal: true
  name: WaitForTaskCompletionAsync(Int32, CancellationToken)
  nameWithType: IBatchTaskFactory.WaitForTaskCompletionAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
    name: WaitForTaskCompletionAsync
    nameWithType: IBatchTaskFactory.WaitForTaskCompletionAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync(System.Int32,System.Threading.CancellationToken)
    name: WaitForTaskCompletionAsync
    nameWithType: IBatchTaskFactory.WaitForTaskCompletionAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory.WaitForTaskCompletionAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchTaskInfo>
  nameWithType: Task<BatchTaskInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BatchTaskInfo>
  nameWithType.vb: Task(Of BatchTaskInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BatchTaskInfo)
  name.vb: Task(Of BatchTaskInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
