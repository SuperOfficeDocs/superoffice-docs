### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.ImportDuplicateAction
  commentId: T:SuperOffice.Data.ImportDuplicateAction
  id: ImportDuplicateAction
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.ImportDuplicateAction.Add
  - SuperOffice.Data.ImportDuplicateAction.MergeBlank
  - SuperOffice.Data.ImportDuplicateAction.Replace
  - SuperOffice.Data.ImportDuplicateAction.Skip
  langs:
  - csharp
  - vb
  name: ImportDuplicateAction
  nameWithType: ImportDuplicateAction
  fullName: SuperOffice.Data.ImportDuplicateAction
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nDuplicate action for import\n"
  syntax:
    content: public enum ImportDuplicateAction
    content.vb: Public Enum ImportDuplicateAction
  extensionMethods:
  - SuperOffice.Data.ImportDuplicateAction.EnumUtil.MapEnums``2
  - SuperOffice.Data.ImportDuplicateAction.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.ImportDuplicateAction)
  - SuperOffice.Data.ImportDuplicateAction.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.ImportDuplicateAction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.ImportDuplicateAction.Add
  commentId: F:SuperOffice.Data.ImportDuplicateAction.Add
  id: Add
  parent: SuperOffice.Data.ImportDuplicateAction
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: ImportDuplicateAction.Add
  fullName: SuperOffice.Data.ImportDuplicateAction.Add
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Add\n"
  syntax:
    content: Add = 1
    return:
      type: SuperOffice.Data.ImportDuplicateAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ImportDuplicateAction.MergeBlank
  commentId: F:SuperOffice.Data.ImportDuplicateAction.MergeBlank
  id: MergeBlank
  parent: SuperOffice.Data.ImportDuplicateAction
  langs:
  - csharp
  - vb
  name: MergeBlank
  nameWithType: ImportDuplicateAction.MergeBlank
  fullName: SuperOffice.Data.ImportDuplicateAction.MergeBlank
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Merge blank\n"
  syntax:
    content: MergeBlank = 2
    return:
      type: SuperOffice.Data.ImportDuplicateAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ImportDuplicateAction.Replace
  commentId: F:SuperOffice.Data.ImportDuplicateAction.Replace
  id: Replace
  parent: SuperOffice.Data.ImportDuplicateAction
  langs:
  - csharp
  - vb
  name: Replace
  nameWithType: ImportDuplicateAction.Replace
  fullName: SuperOffice.Data.ImportDuplicateAction.Replace
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: Replace\n"
  syntax:
    content: Replace = 3
    return:
      type: SuperOffice.Data.ImportDuplicateAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ImportDuplicateAction.Skip
  commentId: F:SuperOffice.Data.ImportDuplicateAction.Skip
  id: Skip
  parent: SuperOffice.Data.ImportDuplicateAction
  langs:
  - csharp
  - vb
  name: Skip
  nameWithType: ImportDuplicateAction.Skip
  fullName: SuperOffice.Data.ImportDuplicateAction.Skip
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: Skip\n"
  syntax:
    content: Skip = 4
    return:
      type: SuperOffice.Data.ImportDuplicateAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.ImportDuplicateAction.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ImportDuplicateAction, To>()
  nameWithType: EnumUtil.MapEnums<ImportDuplicateAction, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.ImportDuplicateAction, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ImportDuplicateAction, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.ImportDuplicateAction, To)()
  name.vb: MapEnums(Of ImportDuplicateAction, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ImportDuplicateAction, To>
    nameWithType: EnumUtil.MapEnums<ImportDuplicateAction, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.ImportDuplicateAction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ImportDuplicateAction, To)
    nameWithType: EnumUtil.MapEnums(Of ImportDuplicateAction, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.ImportDuplicateAction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportDuplicateAction.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.ImportDuplicateAction)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ImportDuplicateAction>(ImportDuplicateAction)
  nameWithType: ObjectExtensions.AssignByReflection<ImportDuplicateAction>(ImportDuplicateAction)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.ImportDuplicateAction>(SuperOffice.Data.ImportDuplicateAction)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ImportDuplicateAction)(ImportDuplicateAction)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.ImportDuplicateAction)(SuperOffice.Data.ImportDuplicateAction)
  name.vb: AssignByReflection(Of ImportDuplicateAction)(ImportDuplicateAction)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ImportDuplicateAction>
    nameWithType: ObjectExtensions.AssignByReflection<ImportDuplicateAction>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.ImportDuplicateAction>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.ImportDuplicateAction
    name: ImportDuplicateAction
    nameWithType: ImportDuplicateAction
    fullName: SuperOffice.Data.ImportDuplicateAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ImportDuplicateAction)
    nameWithType: ObjectExtensions.AssignByReflection(Of ImportDuplicateAction)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.ImportDuplicateAction)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.ImportDuplicateAction
    name: ImportDuplicateAction
    nameWithType: ImportDuplicateAction
    fullName: SuperOffice.Data.ImportDuplicateAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportDuplicateAction.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ImportDuplicateAction>()
  nameWithType: ObjectExtensions.GraphCopy<ImportDuplicateAction>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.ImportDuplicateAction>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ImportDuplicateAction)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.ImportDuplicateAction)()
  name.vb: GraphCopy(Of ImportDuplicateAction)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ImportDuplicateAction>
    nameWithType: ObjectExtensions.GraphCopy<ImportDuplicateAction>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.ImportDuplicateAction>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ImportDuplicateAction)
    nameWithType: ObjectExtensions.GraphCopy(Of ImportDuplicateAction)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.ImportDuplicateAction)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ImportDuplicateAction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ImportDuplicateAction, To>()
  nameWithType: Converters.MapEnums<ImportDuplicateAction, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ImportDuplicateAction, To>()
  nameWithType.vb: Converters.MapEnums(Of ImportDuplicateAction, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ImportDuplicateAction, To)()
  name.vb: MapEnums(Of ImportDuplicateAction, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ImportDuplicateAction, To>
    nameWithType: Converters.MapEnums<ImportDuplicateAction, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ImportDuplicateAction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ImportDuplicateAction, To)
    nameWithType: Converters.MapEnums(Of ImportDuplicateAction, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ImportDuplicateAction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.ImportDuplicateAction
  commentId: T:SuperOffice.Data.ImportDuplicateAction
  parent: SuperOffice.Data
  isExternal: true
  name: ImportDuplicateAction
  nameWithType: ImportDuplicateAction
  fullName: SuperOffice.Data.ImportDuplicateAction
