### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
  commentId: T:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
  id: ServiceCallsRepositoryResourceLogger
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.#ctor
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  langs:
  - csharp
  - vb
  name: ServiceCallsRepositoryResourceLogger
  nameWithType: ServiceCallsRepositoryResourceLogger
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: "\nRecorder plugin for the SoTimer system, to selectively track only Database Operations and contribute them to the parent service statistics\n"
  syntax:
    content: >-
      [SoTimeRecorderPlugin("ServiceCallsRepositoryResourceLogger")]

      public class ServiceCallsRepositoryResourceLogger : Object, ISoTimeRecorderPlugin, IPlugin
    content.vb: >-
      <SoTimeRecorderPlugin("ServiceCallsRepositoryResourceLogger")>

      Public Class ServiceCallsRepositoryResourceLogger
          Inherits Object
          Implements ISoTimeRecorderPlugin, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  extensionMethods:
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Diagnostics.SoTimeRecorderPluginAttribute
    ctor: SuperOffice.Diagnostics.SoTimeRecorderPluginAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ServiceCallsRepositoryResourceLogger
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  commentId: M:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  id: Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  parent: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
  langs:
  - csharp
  - vb
  name: Start(SoTimerType, String, Func<String>)
  nameWithType: ServiceCallsRepositoryResourceLogger.Start(SoTimerType, String, Func<String>)
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start(SuperOffice.Diagnostics.SoTimerType, System.String, System.Func<System.String>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public ISoTimeRecorderContext Start(SoTimerType type, string category, Func<string> getDescription)
    parameters:
    - id: type
      type: SuperOffice.Diagnostics.SoTimerType
    - id: category
      type: System.String
    - id: getDescription
      type: System.Func{System.String}
    return:
      type: SuperOffice.Diagnostics.ISoTimeRecorderContext
    content.vb: Public Function Start(type As SoTimerType, category As String, getDescription As Func(Of String)) As ISoTimeRecorderContext
  overload: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start*
  implements:
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  nameWithType.vb: ServiceCallsRepositoryResourceLogger.Start(SoTimerType, String, Func(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start(SuperOffice.Diagnostics.SoTimerType, System.String, System.Func(Of System.String))
  name.vb: Start(SoTimerType, String, Func(Of String))
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.#ctor
  commentId: M:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.#ctor
  id: '#ctor'
  parent: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
  langs:
  - csharp
  - vb
  name: ServiceCallsRepositoryResourceLogger()
  nameWithType: ServiceCallsRepositoryResourceLogger.ServiceCallsRepositoryResourceLogger()
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.ServiceCallsRepositoryResourceLogger()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public ServiceCallsRepositoryResourceLogger()
    content.vb: Public Sub New
  overload: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled
  commentId: P:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled
  id: Enabled
  parent: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
  langs:
  - csharp
  - vb
  name: Enabled
  nameWithType: ServiceCallsRepositoryResourceLogger.Enabled
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public bool Enabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Enabled As Boolean
  overload: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled*
  implements:
  - SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  commentId: T:SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: ISoTimeRecorderPlugin
  nameWithType: ISoTimeRecorderPlugin
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ServiceCallsRepositoryResourceLogger, To>()
  nameWithType: EnumUtil.MapEnums<ServiceCallsRepositoryResourceLogger, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ServiceCallsRepositoryResourceLogger, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To)()
  name.vb: MapEnums(Of ServiceCallsRepositoryResourceLogger, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ServiceCallsRepositoryResourceLogger, To>
    nameWithType: EnumUtil.MapEnums<ServiceCallsRepositoryResourceLogger, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ServiceCallsRepositoryResourceLogger, To)
    nameWithType: EnumUtil.MapEnums(Of ServiceCallsRepositoryResourceLogger, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ServiceCallsRepositoryResourceLogger>(ServiceCallsRepositoryResourceLogger)
  nameWithType: ObjectExtensions.AssignByReflection<ServiceCallsRepositoryResourceLogger>(ServiceCallsRepositoryResourceLogger)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger>(SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ServiceCallsRepositoryResourceLogger)(ServiceCallsRepositoryResourceLogger)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)(SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)
  name.vb: AssignByReflection(Of ServiceCallsRepositoryResourceLogger)(ServiceCallsRepositoryResourceLogger)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ServiceCallsRepositoryResourceLogger>
    nameWithType: ObjectExtensions.AssignByReflection<ServiceCallsRepositoryResourceLogger>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
    name: ServiceCallsRepositoryResourceLogger
    nameWithType: ServiceCallsRepositoryResourceLogger
    fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ServiceCallsRepositoryResourceLogger)
    nameWithType: ObjectExtensions.AssignByReflection(Of ServiceCallsRepositoryResourceLogger)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
    name: ServiceCallsRepositoryResourceLogger
    nameWithType: ServiceCallsRepositoryResourceLogger
    fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ServiceCallsRepositoryResourceLogger>()
  nameWithType: ObjectExtensions.GraphCopy<ServiceCallsRepositoryResourceLogger>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ServiceCallsRepositoryResourceLogger)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)()
  name.vb: GraphCopy(Of ServiceCallsRepositoryResourceLogger)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ServiceCallsRepositoryResourceLogger>
    nameWithType: ObjectExtensions.GraphCopy<ServiceCallsRepositoryResourceLogger>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ServiceCallsRepositoryResourceLogger)
    nameWithType: ObjectExtensions.GraphCopy(Of ServiceCallsRepositoryResourceLogger)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ServiceCallsRepositoryResourceLogger, To>()
  nameWithType: Converters.MapEnums<ServiceCallsRepositoryResourceLogger, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To>()
  nameWithType.vb: Converters.MapEnums(Of ServiceCallsRepositoryResourceLogger, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To)()
  name.vb: MapEnums(Of ServiceCallsRepositoryResourceLogger, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ServiceCallsRepositoryResourceLogger, To>
    nameWithType: Converters.MapEnums<ServiceCallsRepositoryResourceLogger, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ServiceCallsRepositoryResourceLogger, To)
    nameWithType: Converters.MapEnums(Of ServiceCallsRepositoryResourceLogger, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start*
  commentId: Overload:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start
  isExternal: true
  name: Start
  nameWithType: ServiceCallsRepositoryResourceLogger.Start
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Start
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  commentId: M:SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
  parent: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  isExternal: true
  name: Start(SoTimerType, String, Func<String>)
  nameWithType: ISoTimeRecorderPlugin.Start(SoTimerType, String, Func<String>)
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType, System.String, System.Func<System.String>)
  nameWithType.vb: ISoTimeRecorderPlugin.Start(SoTimerType, String, Func(Of String))
  fullName.vb: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType, System.String, System.Func(Of System.String))
  name.vb: Start(SoTimerType, String, Func(Of String))
  spec.csharp:
  - uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
    name: Start
    nameWithType: ISoTimeRecorderPlugin.Start
    fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Diagnostics.SoTimerType
    name: SoTimerType
    nameWithType: SoTimerType
    fullName: SuperOffice.Diagnostics.SoTimerType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start(SuperOffice.Diagnostics.SoTimerType,System.String,System.Func{System.String})
    name: Start
    nameWithType: ISoTimeRecorderPlugin.Start
    fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Start
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Diagnostics.SoTimerType
    name: SoTimerType
    nameWithType: SoTimerType
    fullName: SuperOffice.Diagnostics.SoTimerType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.SoTimerType
  commentId: T:SuperOffice.Diagnostics.SoTimerType
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: SoTimerType
  nameWithType: SoTimerType
  fullName: SuperOffice.Diagnostics.SoTimerType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.String}
  commentId: '!:System.Func{System.String}'
  definition: System.Func`1
  name: Func<String>
  nameWithType: Func<String>
  fullName: System.Func<System.String>
  nameWithType.vb: Func(Of String)
  fullName.vb: System.Func(Of System.String)
  name.vb: Func(Of String)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ISoTimeRecorderContext
  commentId: T:SuperOffice.Diagnostics.ISoTimeRecorderContext
  parent: SuperOffice.Diagnostics
  isExternal: true
  name: ISoTimeRecorderContext
  nameWithType: ISoTimeRecorderContext
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderContext
- uid: System.Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: System.Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: System.Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.#ctor*
  commentId: Overload:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.#ctor
  isExternal: true
  name: ServiceCallsRepositoryResourceLogger
  nameWithType: ServiceCallsRepositoryResourceLogger.ServiceCallsRepositoryResourceLogger
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.ServiceCallsRepositoryResourceLogger
- uid: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled*
  commentId: Overload:SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled
  isExternal: true
  name: Enabled
  nameWithType: ServiceCallsRepositoryResourceLogger.Enabled
  fullName: SuperOffice.Diagnostics.ServiceCallsRepositoryResourceLogger.Enabled
- uid: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  commentId: P:SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
  parent: SuperOffice.Diagnostics.ISoTimeRecorderPlugin
  isExternal: true
  name: Enabled
  nameWithType: ISoTimeRecorderPlugin.Enabled
  fullName: SuperOffice.Diagnostics.ISoTimeRecorderPlugin.Enabled
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
