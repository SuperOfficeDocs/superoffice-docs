### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings
  commentId: T:SuperOffice.CRM.Workflow.WaitForTimeSettings
  id: WaitForTimeSettings
  parent: SuperOffice.CRM.Workflow
  children:
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.#ctor
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.Until
  langs:
  - csharp
  - vb
  name: WaitForTimeSettings
  nameWithType: WaitForTimeSettings
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: 'public class WaitForTimeSettings : StepSettings'
    content.vb: >-
      Public Class WaitForTimeSettings
          Inherits StepSettings
  inheritance:
  - System.Object
  - SuperOffice.CRM.Workflow.StepSettings
  extensionMethods:
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Workflow.WaitForTimeSettings)
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Workflow.WaitForTimeSettings.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.#ctor
  commentId: M:SuperOffice.CRM.Workflow.WaitForTimeSettings.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Workflow.WaitForTimeSettings
  langs:
  - csharp
  - vb
  name: WaitForTimeSettings()
  nameWithType: WaitForTimeSettings.WaitForTimeSettings()
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.WaitForTimeSettings()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public WaitForTimeSettings()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Workflow.WaitForTimeSettings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm
  commentId: P:SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm
  id: TimeWaitAlgorithm
  parent: SuperOffice.CRM.Workflow.WaitForTimeSettings
  langs:
  - csharp
  - vb
  name: TimeWaitAlgorithm
  nameWithType: WaitForTimeSettings.TimeWaitAlgorithm
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public WorkflowTimeWaitAlgorithm TimeWaitAlgorithm { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.WorkflowTimeWaitAlgorithm
    content.vb: Public Property TimeWaitAlgorithm As WorkflowTimeWaitAlgorithm
  overload: SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals
  commentId: P:SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals
  id: NumIntervals
  parent: SuperOffice.CRM.Workflow.WaitForTimeSettings
  langs:
  - csharp
  - vb
  name: NumIntervals
  nameWithType: WaitForTimeSettings.NumIntervals
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public int NumIntervals { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property NumIntervals As Integer
  overload: SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType
  commentId: P:SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType
  id: IntervalType
  parent: SuperOffice.CRM.Workflow.WaitForTimeSettings
  langs:
  - csharp
  - vb
  name: IntervalType
  nameWithType: WaitForTimeSettings.IntervalType
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public WorkflowTimeWaitIntervalType IntervalType { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.WorkflowTimeWaitIntervalType
    content.vb: Public Property IntervalType As WorkflowTimeWaitIntervalType
  overload: SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.Until
  commentId: P:SuperOffice.CRM.Workflow.WaitForTimeSettings.Until
  id: Until
  parent: SuperOffice.CRM.Workflow.WaitForTimeSettings
  langs:
  - csharp
  - vb
  name: Until
  nameWithType: WaitForTimeSettings.Until
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.Until
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public string Until { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Until As String
  overload: SuperOffice.CRM.Workflow.WaitForTimeSettings.Until*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Workflow
  commentId: N:SuperOffice.CRM.Workflow
  isExternal: true
  name: SuperOffice.CRM.Workflow
  nameWithType: SuperOffice.CRM.Workflow
  fullName: SuperOffice.CRM.Workflow
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Workflow.StepSettings
  commentId: T:SuperOffice.CRM.Workflow.StepSettings
  parent: SuperOffice.CRM.Workflow
  isExternal: true
  name: StepSettings
  nameWithType: StepSettings
  fullName: SuperOffice.CRM.Workflow.StepSettings
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<WaitForTimeSettings, To>()
  nameWithType: EnumUtil.MapEnums<WaitForTimeSettings, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Workflow.WaitForTimeSettings, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of WaitForTimeSettings, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Workflow.WaitForTimeSettings, To)()
  name.vb: MapEnums(Of WaitForTimeSettings, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<WaitForTimeSettings, To>
    nameWithType: EnumUtil.MapEnums<WaitForTimeSettings, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Workflow.WaitForTimeSettings, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of WaitForTimeSettings, To)
    nameWithType: EnumUtil.MapEnums(Of WaitForTimeSettings, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Workflow.WaitForTimeSettings, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Workflow.WaitForTimeSettings)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<WaitForTimeSettings>(WaitForTimeSettings)
  nameWithType: ObjectExtensions.AssignByReflection<WaitForTimeSettings>(WaitForTimeSettings)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Workflow.WaitForTimeSettings>(SuperOffice.CRM.Workflow.WaitForTimeSettings)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of WaitForTimeSettings)(WaitForTimeSettings)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Workflow.WaitForTimeSettings)(SuperOffice.CRM.Workflow.WaitForTimeSettings)
  name.vb: AssignByReflection(Of WaitForTimeSettings)(WaitForTimeSettings)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<WaitForTimeSettings>
    nameWithType: ObjectExtensions.AssignByReflection<WaitForTimeSettings>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Workflow.WaitForTimeSettings>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Workflow.WaitForTimeSettings
    name: WaitForTimeSettings
    nameWithType: WaitForTimeSettings
    fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of WaitForTimeSettings)
    nameWithType: ObjectExtensions.AssignByReflection(Of WaitForTimeSettings)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Workflow.WaitForTimeSettings)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Workflow.WaitForTimeSettings
    name: WaitForTimeSettings
    nameWithType: WaitForTimeSettings
    fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<WaitForTimeSettings>()
  nameWithType: ObjectExtensions.GraphCopy<WaitForTimeSettings>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Workflow.WaitForTimeSettings>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of WaitForTimeSettings)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Workflow.WaitForTimeSettings)()
  name.vb: GraphCopy(Of WaitForTimeSettings)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<WaitForTimeSettings>
    nameWithType: ObjectExtensions.GraphCopy<WaitForTimeSettings>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Workflow.WaitForTimeSettings>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of WaitForTimeSettings)
    nameWithType: ObjectExtensions.GraphCopy(Of WaitForTimeSettings)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Workflow.WaitForTimeSettings)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<WaitForTimeSettings, To>()
  nameWithType: Converters.MapEnums<WaitForTimeSettings, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Workflow.WaitForTimeSettings, To>()
  nameWithType.vb: Converters.MapEnums(Of WaitForTimeSettings, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Workflow.WaitForTimeSettings, To)()
  name.vb: MapEnums(Of WaitForTimeSettings, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<WaitForTimeSettings, To>
    nameWithType: Converters.MapEnums<WaitForTimeSettings, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Workflow.WaitForTimeSettings, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of WaitForTimeSettings, To)
    nameWithType: Converters.MapEnums(Of WaitForTimeSettings, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Workflow.WaitForTimeSettings, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.#ctor*
  commentId: Overload:SuperOffice.CRM.Workflow.WaitForTimeSettings.#ctor
  isExternal: true
  name: WaitForTimeSettings
  nameWithType: WaitForTimeSettings.WaitForTimeSettings
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.WaitForTimeSettings
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm*
  commentId: Overload:SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm
  isExternal: true
  name: TimeWaitAlgorithm
  nameWithType: WaitForTimeSettings.TimeWaitAlgorithm
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.TimeWaitAlgorithm
- uid: SuperOffice.Data.WorkflowTimeWaitAlgorithm
  commentId: T:SuperOffice.Data.WorkflowTimeWaitAlgorithm
  parent: SuperOffice.Data
  isExternal: true
  name: WorkflowTimeWaitAlgorithm
  nameWithType: WorkflowTimeWaitAlgorithm
  fullName: SuperOffice.Data.WorkflowTimeWaitAlgorithm
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals*
  commentId: Overload:SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals
  isExternal: true
  name: NumIntervals
  nameWithType: WaitForTimeSettings.NumIntervals
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.NumIntervals
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType*
  commentId: Overload:SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType
  isExternal: true
  name: IntervalType
  nameWithType: WaitForTimeSettings.IntervalType
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.IntervalType
- uid: SuperOffice.Data.WorkflowTimeWaitIntervalType
  commentId: T:SuperOffice.Data.WorkflowTimeWaitIntervalType
  parent: SuperOffice.Data
  isExternal: true
  name: WorkflowTimeWaitIntervalType
  nameWithType: WorkflowTimeWaitIntervalType
  fullName: SuperOffice.Data.WorkflowTimeWaitIntervalType
- uid: SuperOffice.CRM.Workflow.WaitForTimeSettings.Until*
  commentId: Overload:SuperOffice.CRM.Workflow.WaitForTimeSettings.Until
  isExternal: true
  name: Until
  nameWithType: WaitForTimeSettings.Until
  fullName: SuperOffice.CRM.Workflow.WaitForTimeSettings.Until
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
