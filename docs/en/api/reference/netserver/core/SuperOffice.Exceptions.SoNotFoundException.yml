### YamlMime:ManagedReference
items:
- uid: SuperOffice.Exceptions.SoNotFoundException
  commentId: T:SuperOffice.Exceptions.SoNotFoundException
  id: SoNotFoundException
  parent: SuperOffice.Exceptions
  children:
  - SuperOffice.Exceptions.SoNotFoundException.#ctor(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: SoNotFoundException
  nameWithType: SoNotFoundException
  fullName: SuperOffice.Exceptions.SoNotFoundException
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Exceptions
  summary: "\nException stating that something is not found.\n"
  syntax:
    content: 'public class SoNotFoundException : SoException'
    content.vb: >-
      Public Class SoNotFoundException
          Inherits SoException
  inheritance:
  - System.Object
  - SuperOffice.Exceptions.SoException
  inheritedMembers:
  - SuperOffice.Exceptions.SoException.LogAsException
  - SuperOffice.Exceptions.SoException.FriendlyText
  extensionMethods:
  - SuperOffice.Exceptions.SoNotFoundException.EnumUtil.MapEnums``2
  - SuperOffice.Exceptions.SoNotFoundException.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Exceptions.SoNotFoundException.#ctor(System.String,System.Boolean)
  commentId: M:SuperOffice.Exceptions.SoNotFoundException.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: SuperOffice.Exceptions.SoNotFoundException
  langs:
  - csharp
  - vb
  name: SoNotFoundException(String, Boolean)
  nameWithType: SoNotFoundException.SoNotFoundException(String, Boolean)
  fullName: SuperOffice.Exceptions.SoNotFoundException.SoNotFoundException(System.String, System.Boolean)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Exceptions
  summary: "\nException stating that something is not found.\n"
  syntax:
    content: public SoNotFoundException(string message, bool logAsException = true)
    parameters:
    - id: message
      type: System.String
      description: What is not found.
    - id: logAsException
      type: System.Boolean
    content.vb: Public Sub New(message As String, logAsException As Boolean = True)
  overload: SuperOffice.Exceptions.SoNotFoundException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Exceptions
  commentId: N:SuperOffice.Exceptions
  isExternal: true
  name: SuperOffice.Exceptions
  nameWithType: SuperOffice.Exceptions
  fullName: SuperOffice.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Exceptions.SoException
  commentId: T:SuperOffice.Exceptions.SoException
  parent: SuperOffice.Exceptions
  isExternal: true
  name: SoException
  nameWithType: SoException
  fullName: SuperOffice.Exceptions.SoException
- uid: SuperOffice.Exceptions.SoException.LogAsException
  commentId: P:SuperOffice.Exceptions.SoException.LogAsException
  parent: SuperOffice.Exceptions.SoException
  isExternal: true
  name: LogAsException
  nameWithType: SoException.LogAsException
  fullName: SuperOffice.Exceptions.SoException.LogAsException
- uid: SuperOffice.Exceptions.SoException.FriendlyText
  commentId: P:SuperOffice.Exceptions.SoException.FriendlyText
  parent: SuperOffice.Exceptions.SoException
  isExternal: true
  name: FriendlyText
  nameWithType: SoException.FriendlyText
  fullName: SuperOffice.Exceptions.SoException.FriendlyText
- uid: SuperOffice.Exceptions.SoNotFoundException.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoNotFoundException, To>()
  nameWithType: EnumUtil.MapEnums<SoNotFoundException, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Exceptions.SoNotFoundException, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoNotFoundException, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Exceptions.SoNotFoundException, To)()
  name.vb: MapEnums(Of SoNotFoundException, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoNotFoundException, To>
    nameWithType: EnumUtil.MapEnums<SoNotFoundException, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Exceptions.SoNotFoundException, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoNotFoundException, To)
    nameWithType: EnumUtil.MapEnums(Of SoNotFoundException, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Exceptions.SoNotFoundException, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Exceptions.SoNotFoundException.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoNotFoundException, To>()
  nameWithType: Converters.MapEnums<SoNotFoundException, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Exceptions.SoNotFoundException, To>()
  nameWithType.vb: Converters.MapEnums(Of SoNotFoundException, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Exceptions.SoNotFoundException, To)()
  name.vb: MapEnums(Of SoNotFoundException, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoNotFoundException, To>
    nameWithType: Converters.MapEnums<SoNotFoundException, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Exceptions.SoNotFoundException, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoNotFoundException, To)
    nameWithType: Converters.MapEnums(Of SoNotFoundException, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Exceptions.SoNotFoundException, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Exceptions.SoNotFoundException.#ctor*
  commentId: Overload:SuperOffice.Exceptions.SoNotFoundException.#ctor
  isExternal: true
  name: SoNotFoundException
  nameWithType: SoNotFoundException.SoNotFoundException
  fullName: SuperOffice.Exceptions.SoNotFoundException.SoNotFoundException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
