### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute
  commentId: T:SuperOffice.Data.SQL.DatabaseTableAttribute
  id: DatabaseTableAttribute
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
  - SuperOffice.Data.SQL.DatabaseTableAttribute.TableName
  langs:
  - csharp
  - vb
  name: DatabaseTableAttribute
  nameWithType: DatabaseTableAttribute
  fullName: SuperOffice.Data.SQL.DatabaseTableAttribute
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nA class decorated with this attribute represents a table in the database\n"
  syntax:
    content: 'public class DatabaseTableAttribute : Attribute'
    content.vb: >-
      Public Class DatabaseTableAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Data.SQL.DatabaseTableAttribute.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.DatabaseTableAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
  commentId: M:SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.Data.SQL.DatabaseTableAttribute
  langs:
  - csharp
  - vb
  name: DatabaseTableAttribute(String)
  nameWithType: DatabaseTableAttribute.DatabaseTableAttribute(String)
  fullName: SuperOffice.Data.SQL.DatabaseTableAttribute.DatabaseTableAttribute(System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public DatabaseTableAttribute(string tableName)
    parameters:
    - id: tableName
      type: System.String
    content.vb: Public Sub New(tableName As String)
  overload: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute.TableName
  commentId: P:SuperOffice.Data.SQL.DatabaseTableAttribute.TableName
  id: TableName
  parent: SuperOffice.Data.SQL.DatabaseTableAttribute
  langs:
  - csharp
  - vb
  name: TableName
  nameWithType: DatabaseTableAttribute.TableName
  fullName: SuperOffice.Data.SQL.DatabaseTableAttribute.TableName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public string TableName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TableName As String
  overload: SuperOffice.Data.SQL.DatabaseTableAttribute.TableName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DatabaseTableAttribute, To>()
  nameWithType: EnumUtil.MapEnums<DatabaseTableAttribute, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.DatabaseTableAttribute, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DatabaseTableAttribute, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.DatabaseTableAttribute, To)()
  name.vb: MapEnums(Of DatabaseTableAttribute, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DatabaseTableAttribute, To>
    nameWithType: EnumUtil.MapEnums<DatabaseTableAttribute, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.DatabaseTableAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DatabaseTableAttribute, To)
    nameWithType: EnumUtil.MapEnums(Of DatabaseTableAttribute, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.DatabaseTableAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DatabaseTableAttribute, To>()
  nameWithType: Converters.MapEnums<DatabaseTableAttribute, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.DatabaseTableAttribute, To>()
  nameWithType.vb: Converters.MapEnums(Of DatabaseTableAttribute, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.DatabaseTableAttribute, To)()
  name.vb: MapEnums(Of DatabaseTableAttribute, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DatabaseTableAttribute, To>
    nameWithType: Converters.MapEnums<DatabaseTableAttribute, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.DatabaseTableAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DatabaseTableAttribute, To)
    nameWithType: Converters.MapEnums(Of DatabaseTableAttribute, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.DatabaseTableAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor
  isExternal: true
  name: DatabaseTableAttribute
  nameWithType: DatabaseTableAttribute.DatabaseTableAttribute
  fullName: SuperOffice.Data.SQL.DatabaseTableAttribute.DatabaseTableAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.SQL.DatabaseTableAttribute.TableName*
  commentId: Overload:SuperOffice.Data.SQL.DatabaseTableAttribute.TableName
  isExternal: true
  name: TableName
  nameWithType: DatabaseTableAttribute.TableName
  fullName: SuperOffice.Data.SQL.DatabaseTableAttribute.TableName
