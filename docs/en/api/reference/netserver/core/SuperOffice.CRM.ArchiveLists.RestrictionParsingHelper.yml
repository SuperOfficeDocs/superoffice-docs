### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
  commentId: T:SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
  id: RestrictionParsingHelper
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.#ctor
  - SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction})
  langs:
  - csharp
  - vb
  name: RestrictionParsingHelper
  nameWithType: RestrictionParsingHelper
  fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nThis class implements an infix-to-binary-expression-tree parser, so that the expansions of ArchiveRestrictionInfos\ncan be made into a proper SQL Restriction.\n"
  remarks: "\nProcessing (a = 2 OR b = 3) AND (c = 4 OR d = 5) kind of restrictions is done by letting each provider component\nhandle individual restrictions (&apos;atoms&apos;), i.e., a = 2 above. However, instead of appending them directly to the main\nquery using RestrictionAnd like today, the individual expansions (of type Restriction) will instead be put &quot;on hold&quot;\nin the ArchiveSelect, and left for later processing.\n<p></p>\nThis class comes in when that &quot;later processing&quot; is done - it will parse the original ArchiveRestrictionInfo[] and extract\nfrom it the main structure, such as (restriction OR restriction) AND (restriction OR restriction) from the example above.\nIt will then combine the structural tree (which handles AND, OR and parentheses) with the individual expansions of\neach ArchiveRestrictionInfo, and create a final <xref href=\"SuperOffice.Data.SQL.Restriction\" data-throw-if-not-resolved=\"false\"></xref> which contains both.\n<p></p>\nThe algorithm is a standard infix to binary tree conversion, preceded by a step that converts the rather mixed representation\nof and ArchiveRestrictionInfo into a stream of tokens that are easier to work with; and there is a lookup to get hold\nof the expansion of each restriction. \n<p></p>\nIf an expansion is missing, then that restriction is ignored - this means that the ArchiveRestrictionInfo either did not\nresult in an expansion, or that it was hard-appended to the query; we assume that this was done for a good reason.\n<br />\nThe final return value may be null, since empty restriction sets (or no valid expansions) is a valid case.\n<p></p>\nReference: http://www.cs.utexas.edu/users/lavender/courses/EE360C/lectures/lecture-24.pdf - this is a well-written and\nconcise reference to the algorithm used. Basic second-year CS stuff, really...\n"
  syntax:
    content: public class RestrictionParsingHelper
    content.vb: Public Class RestrictionParsingHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)
  - SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction})
  commentId: M:SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction})
  id: GenerateSqlRestrictionFromExpansions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction})
  parent: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
  langs:
  - csharp
  - vb
  name: GenerateSqlRestrictionFromExpansions(ArchiveRestrictionInfo[], Dictionary<ArchiveRestrictionInfo, Restriction>)
  nameWithType: RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(ArchiveRestrictionInfo[], Dictionary<ArchiveRestrictionInfo, Restriction>)
  fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], System.Collections.Generic.Dictionary<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, SuperOffice.Data.SQL.Restriction>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nCombine an array of ArchiveRestrictionInfo objects with their corresponding expansions into individual Restriction objects,\ninto a properly structure Restriction that takes operator precedence and parentheses into account. See class remarks for details.\n"
  syntax:
    content: public Restriction GenerateSqlRestrictionFromExpansions(ArchiveRestrictionInfo[] restrictions, Dictionary<ArchiveRestrictionInfo, Restriction> expansion)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Original restriction array
    - id: expansion
      type: System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction}
      description: Expansion dictionary, presumably from an ArchiveSelect
    return:
      type: SuperOffice.Data.SQL.Restriction
      description: Complete, structured Restriction - or null, if there were no expansions (this is quite legal)
    content.vb: Public Function GenerateSqlRestrictionFromExpansions(restrictions As ArchiveRestrictionInfo(), expansion As Dictionary(Of ArchiveRestrictionInfo, Restriction)) As Restriction
  overload: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions*
  nameWithType.vb: RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(ArchiveRestrictionInfo(), Dictionary(Of ArchiveRestrictionInfo, Restriction))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions(SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), System.Collections.Generic.Dictionary(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, SuperOffice.Data.SQL.Restriction))
  name.vb: GenerateSqlRestrictionFromExpansions(ArchiveRestrictionInfo(), Dictionary(Of ArchiveRestrictionInfo, Restriction))
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
  langs:
  - csharp
  - vb
  name: RestrictionParsingHelper()
  nameWithType: RestrictionParsingHelper.RestrictionParsingHelper()
  fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.RestrictionParsingHelper()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public RestrictionParsingHelper()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RestrictionParsingHelper, To>()
  nameWithType: EnumUtil.MapEnums<RestrictionParsingHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RestrictionParsingHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To)()
  name.vb: MapEnums(Of RestrictionParsingHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RestrictionParsingHelper, To>
    nameWithType: EnumUtil.MapEnums<RestrictionParsingHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RestrictionParsingHelper, To)
    nameWithType: EnumUtil.MapEnums(Of RestrictionParsingHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RestrictionParsingHelper>(RestrictionParsingHelper)
  nameWithType: ObjectExtensions.AssignByReflection<RestrictionParsingHelper>(RestrictionParsingHelper)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper>(SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RestrictionParsingHelper)(RestrictionParsingHelper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)(SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)
  name.vb: AssignByReflection(Of RestrictionParsingHelper)(RestrictionParsingHelper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RestrictionParsingHelper>
    nameWithType: ObjectExtensions.AssignByReflection<RestrictionParsingHelper>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
    name: RestrictionParsingHelper
    nameWithType: RestrictionParsingHelper
    fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RestrictionParsingHelper)
    nameWithType: ObjectExtensions.AssignByReflection(Of RestrictionParsingHelper)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
    name: RestrictionParsingHelper
    nameWithType: RestrictionParsingHelper
    fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RestrictionParsingHelper>()
  nameWithType: ObjectExtensions.GraphCopy<RestrictionParsingHelper>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RestrictionParsingHelper)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)()
  name.vb: GraphCopy(Of RestrictionParsingHelper)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RestrictionParsingHelper>
    nameWithType: ObjectExtensions.GraphCopy<RestrictionParsingHelper>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RestrictionParsingHelper)
    nameWithType: ObjectExtensions.GraphCopy(Of RestrictionParsingHelper)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RestrictionParsingHelper, To>()
  nameWithType: Converters.MapEnums<RestrictionParsingHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of RestrictionParsingHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To)()
  name.vb: MapEnums(Of RestrictionParsingHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RestrictionParsingHelper, To>
    nameWithType: Converters.MapEnums<RestrictionParsingHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RestrictionParsingHelper, To)
    nameWithType: Converters.MapEnums(Of RestrictionParsingHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions
  isExternal: true
  name: GenerateSqlRestrictionFromExpansions
  nameWithType: RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions
  fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.GenerateSqlRestrictionFromExpansions
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction}
  commentId: T:System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo,SuperOffice.Data.SQL.Restriction}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<ArchiveRestrictionInfo, Restriction>
  nameWithType: Dictionary<ArchiveRestrictionInfo, Restriction>
  fullName: System.Collections.Generic.Dictionary<SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, SuperOffice.Data.SQL.Restriction>
  nameWithType.vb: Dictionary(Of ArchiveRestrictionInfo, Restriction)
  fullName.vb: System.Collections.Generic.Dictionary(Of SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo, SuperOffice.Data.SQL.Restriction)
  name.vb: Dictionary(Of ArchiveRestrictionInfo, Restriction)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    nameWithType: ArchiveRestrictionInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.#ctor
  isExternal: true
  name: RestrictionParsingHelper
  nameWithType: RestrictionParsingHelper.RestrictionParsingHelper
  fullName: SuperOffice.CRM.ArchiveLists.RestrictionParsingHelper.RestrictionParsingHelper
