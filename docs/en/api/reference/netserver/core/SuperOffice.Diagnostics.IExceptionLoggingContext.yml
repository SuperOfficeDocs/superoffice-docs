### YamlMime:ManagedReference
items:
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext
  commentId: T:SuperOffice.Diagnostics.IExceptionLoggingContext
  id: IExceptionLoggingContext
  parent: SuperOffice.Diagnostics
  children:
  - SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(System.Collections.Generic.IDictionary{System.String,System.String})
  - SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo``1(System.Collections.Generic.IDictionary{System.String,System.String})
  - SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo``1(System.String,System.String)
  - SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo(System.Type)
  langs:
  - csharp
  - vb
  name: IExceptionLoggingContext
  nameWithType: IExceptionLoggingContext
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext
  type: Interface
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  syntax:
    content: public interface IExceptionLoggingContext
    content.vb: Public Interface IExceptionLoggingContext
  extensionMethods:
  - SuperOffice.Diagnostics.IExceptionLoggingContext.EnumUtil.MapEnums``2
  - SuperOffice.Diagnostics.IExceptionLoggingContext.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(System.Collections.Generic.IDictionary{System.String,System.String})
  id: AddExceptionInfo(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: SuperOffice.Diagnostics.IExceptionLoggingContext
  langs:
  - csharp
  - vb
  name: AddExceptionInfo(IDictionary<string, string>)
  nameWithType: IExceptionLoggingContext.AddExceptionInfo(IDictionary<string, string>)
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(System.Collections.Generic.IDictionary<string, string>)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Add information to be logged if exception is thrown and logged
  example: []
  syntax:
    content: void AddExceptionInfo(IDictionary<string, string> args)
    parameters:
    - id: args
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
    content.vb: Sub AddExceptionInfo(args As IDictionary(Of String, String))
  overload: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo*
  nameWithType.vb: IExceptionLoggingContext.AddExceptionInfo(IDictionary(Of String, String))
  fullName.vb: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(System.Collections.Generic.IDictionary(Of String, String))
  name.vb: AddExceptionInfo(IDictionary(Of String, String))
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo``1(System.Collections.Generic.IDictionary{System.String,System.String})
  commentId: M:SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo``1(System.Collections.Generic.IDictionary{System.String,System.String})
  id: AddExceptionInfo``1(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: SuperOffice.Diagnostics.IExceptionLoggingContext
  langs:
  - csharp
  - vb
  name: AddExceptionInfo<TException>(IDictionary<string, string>)
  nameWithType: IExceptionLoggingContext.AddExceptionInfo<TException>(IDictionary<string, string>)
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo<TException>(System.Collections.Generic.IDictionary<string, string>)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Add information to be logged if the provided exception is thrown and logged
  example: []
  syntax:
    content: 'void AddExceptionInfo<TException>(IDictionary<string, string> args) where TException : Exception'
    parameters:
    - id: args
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
    typeParameters:
    - id: TException
      description: Type of exception to log information for
    content.vb: Sub AddExceptionInfo(Of TException As Exception)(args As IDictionary(Of String, String))
  overload: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo*
  nameWithType.vb: IExceptionLoggingContext.AddExceptionInfo(Of TException)(IDictionary(Of String, String))
  fullName.vb: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(Of TException)(System.Collections.Generic.IDictionary(Of String, String))
  name.vb: AddExceptionInfo(Of TException)(IDictionary(Of String, String))
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo``1(System.String,System.String)
  commentId: M:SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo``1(System.String,System.String)
  id: AddExceptionInfo``1(System.String,System.String)
  parent: SuperOffice.Diagnostics.IExceptionLoggingContext
  langs:
  - csharp
  - vb
  name: AddExceptionInfo<TException>(string, string)
  nameWithType: IExceptionLoggingContext.AddExceptionInfo<TException>(string, string)
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo<TException>(string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Add information to be logged if the provided exception is thrown and logged
  example: []
  syntax:
    content: 'void AddExceptionInfo<TException>(string key, string value) where TException : Exception'
    parameters:
    - id: key
      type: System.String
      description: ''
    - id: value
      type: System.String
      description: ''
    typeParameters:
    - id: TException
      description: ''
    content.vb: Sub AddExceptionInfo(Of TException As Exception)(key As String, value As String)
  overload: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo*
  nameWithType.vb: IExceptionLoggingContext.AddExceptionInfo(Of TException)(String, String)
  fullName.vb: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo(Of TException)(String, String)
  name.vb: AddExceptionInfo(Of TException)(String, String)
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo(System.Type)
  commentId: M:SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo(System.Type)
  id: GetExceptionInfo(System.Type)
  parent: SuperOffice.Diagnostics.IExceptionLoggingContext
  langs:
  - csharp
  - vb
  name: GetExceptionInfo(Type)
  nameWithType: IExceptionLoggingContext.GetExceptionInfo(Type)
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Diagnostics
  summary: Get information that should be added to exceptions when logged.
  example: []
  syntax:
    content: IDictionary<string, string> GetExceptionInfo(Type exceptionType)
    parameters:
    - id: exceptionType
      type: System.Type
      description: ''
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: ''
    content.vb: Function GetExceptionInfo(exceptionType As Type) As IDictionary(Of String, String)
  overload: SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo*
references:
- uid: SuperOffice.Diagnostics
  commentId: N:SuperOffice.Diagnostics
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Diagnostics
  nameWithType: SuperOffice.Diagnostics
  fullName: SuperOffice.Diagnostics
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Diagnostics
    name: Diagnostics
    isExternal: true
    href: SuperOffice.Diagnostics.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Diagnostics
    name: Diagnostics
    isExternal: true
    href: SuperOffice.Diagnostics.html
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<IExceptionLoggingContext, To>(IExceptionLoggingContext)
  nameWithType: EnumUtil.MapEnums<IExceptionLoggingContext, To>(IExceptionLoggingContext)
  fullName: EnumUtil.MapEnums<SuperOffice.Diagnostics.IExceptionLoggingContext, To>(SuperOffice.Diagnostics.IExceptionLoggingContext)
  nameWithType.vb: EnumUtil.MapEnums(Of IExceptionLoggingContext, To)(IExceptionLoggingContext)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Diagnostics.IExceptionLoggingContext, To)(SuperOffice.Diagnostics.IExceptionLoggingContext)
  name.vb: MapEnums(Of IExceptionLoggingContext, To)(IExceptionLoggingContext)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Diagnostics.IExceptionLoggingContext)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Diagnostics.IExceptionLoggingContext)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: )
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<IExceptionLoggingContext, To>(IExceptionLoggingContext)
  nameWithType: Converters.MapEnums<IExceptionLoggingContext, To>(IExceptionLoggingContext)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Diagnostics.IExceptionLoggingContext, To>(SuperOffice.Diagnostics.IExceptionLoggingContext)
  nameWithType.vb: Converters.MapEnums(Of IExceptionLoggingContext, To)(IExceptionLoggingContext)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Diagnostics.IExceptionLoggingContext, To)(SuperOffice.Diagnostics.IExceptionLoggingContext)
  name.vb: MapEnums(Of IExceptionLoggingContext, To)(IExceptionLoggingContext)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Diagnostics.IExceptionLoggingContext)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Diagnostics.IExceptionLoggingContext)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Diagnostics.IExceptionLoggingContext
    name: IExceptionLoggingContext
    isExternal: true
    href: SuperOffice.Diagnostics.IExceptionLoggingContext.html
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo*
  commentId: Overload:SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo
  isExternal: true
  href: SuperOffice.Diagnostics.IExceptionLoggingContext.html#SuperOffice_Diagnostics_IExceptionLoggingContext_AddExceptionInfo_System_Collections_Generic_IDictionary_System_String_System_String__
  name: AddExceptionInfo
  nameWithType: IExceptionLoggingContext.AddExceptionInfo
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext.AddExceptionInfo
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<string, string>
  nameWithType: IDictionary<string, string>
  fullName: System.Collections.Generic.IDictionary<string, string>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of String, String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo*
  commentId: Overload:SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo
  isExternal: true
  href: SuperOffice.Diagnostics.IExceptionLoggingContext.html#SuperOffice_Diagnostics_IExceptionLoggingContext_GetExceptionInfo_System_Type_
  name: GetExceptionInfo
  nameWithType: IExceptionLoggingContext.GetExceptionInfo
  fullName: SuperOffice.Diagnostics.IExceptionLoggingContext.GetExceptionInfo
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
