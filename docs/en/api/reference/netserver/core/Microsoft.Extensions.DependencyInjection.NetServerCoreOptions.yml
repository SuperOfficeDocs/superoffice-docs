### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  commentId: T:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  id: NetServerCoreOptions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.#ctor
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels
  langs:
  - csharp
  - vb
  name: NetServerCoreOptions
  nameWithType: NetServerCoreOptions
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: 'public class NetServerCoreOptions : Object, INetServerCoreOptions'
    content.vb: >-
      Public Class NetServerCoreOptions
          Inherits Object
          Implements INetServerCoreOptions
  inheritance:
  - System.Object
  implements:
  - Microsoft.Extensions.DependencyInjection.INetServerCoreOptions
  extensionMethods:
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.EnumUtil.MapEnums``2
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.#ctor
  commentId: M:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.#ctor
  id: '#ctor'
  parent: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  langs:
  - csharp
  - vb
  name: NetServerCoreOptions()
  nameWithType: NetServerCoreOptions.NetServerCoreOptions()
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.NetServerCoreOptions()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public NetServerCoreOptions()
    content.vb: Public Sub New
  overload: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers
  id: TokenSuppliers
  parent: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  langs:
  - csharp
  - vb
  name: TokenSuppliers
  nameWithType: NetServerCoreOptions.TokenSuppliers
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: public List<Type> TokenSuppliers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Type}
    content.vb: Public ReadOnly Property TokenSuppliers As List(Of Type)
  overload: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers
  id: Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers
  isEii: true
  parent: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  langs:
  - csharp
  - vb
  name: INetServerCoreOptions.TokenSuppliers
  nameWithType: NetServerCoreOptions.INetServerCoreOptions.TokenSuppliers
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: Microsoft.Extensions.DependencyInjection
  syntax:
    content: IList<Type> INetServerCoreOptions.TokenSuppliers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{System.Type}
    content.vb: ReadOnly WriteOnly Property Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers As IList(Of Type) Implements INetServerCoreOptions.TokenSuppliers
  overload: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers*
  implements:
  - Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  nameWithType.vb: NetServerCoreOptions.Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  name.vb: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels
  commentId: P:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels
  id: UseNetServerLogLevels
  parent: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
  langs:
  - csharp
  - vb
  name: UseNetServerLogLevels
  nameWithType: NetServerCoreOptions.UseNetServerLogLevels
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nUse LogLevel from <see cref=\"!:ConfigFile.Diagnostics\"></see>\n"
  syntax:
    content: public bool UseNetServerLogLevels { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseNetServerLogLevels As Boolean
  overload: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions
  commentId: T:Microsoft.Extensions.DependencyInjection.INetServerCoreOptions
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: INetServerCoreOptions
  nameWithType: INetServerCoreOptions
  fullName: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NetServerCoreOptions, To>()
  nameWithType: EnumUtil.MapEnums<NetServerCoreOptions, To>()
  fullName: EnumUtil.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NetServerCoreOptions, To)()
  fullName.vb: EnumUtil.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To)()
  name.vb: MapEnums(Of NetServerCoreOptions, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NetServerCoreOptions, To>
    nameWithType: EnumUtil.MapEnums<NetServerCoreOptions, To>
    fullName: EnumUtil.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NetServerCoreOptions, To)
    nameWithType: EnumUtil.MapEnums(Of NetServerCoreOptions, To)
    fullName: EnumUtil.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<NetServerCoreOptions>(NetServerCoreOptions)
  nameWithType: ObjectExtensions.AssignByReflection<NetServerCoreOptions>(NetServerCoreOptions)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions>(Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of NetServerCoreOptions)(NetServerCoreOptions)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)(Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)
  name.vb: AssignByReflection(Of NetServerCoreOptions)(NetServerCoreOptions)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<NetServerCoreOptions>
    nameWithType: ObjectExtensions.AssignByReflection<NetServerCoreOptions>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
    name: NetServerCoreOptions
    nameWithType: NetServerCoreOptions
    fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of NetServerCoreOptions)
    nameWithType: ObjectExtensions.AssignByReflection(Of NetServerCoreOptions)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
    name: NetServerCoreOptions
    nameWithType: NetServerCoreOptions
    fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<NetServerCoreOptions>()
  nameWithType: ObjectExtensions.GraphCopy<NetServerCoreOptions>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of NetServerCoreOptions)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)()
  name.vb: GraphCopy(Of NetServerCoreOptions)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<NetServerCoreOptions>
    nameWithType: ObjectExtensions.GraphCopy<NetServerCoreOptions>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of NetServerCoreOptions)
    nameWithType: ObjectExtensions.GraphCopy(Of NetServerCoreOptions)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NetServerCoreOptions, To>()
  nameWithType: Converters.MapEnums<NetServerCoreOptions, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To>()
  nameWithType.vb: Converters.MapEnums(Of NetServerCoreOptions, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To)()
  name.vb: MapEnums(Of NetServerCoreOptions, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NetServerCoreOptions, To>
    nameWithType: Converters.MapEnums<NetServerCoreOptions, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NetServerCoreOptions, To)
    nameWithType: Converters.MapEnums(Of NetServerCoreOptions, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of Microsoft.Extensions.DependencyInjection.NetServerCoreOptions, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.#ctor*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.#ctor
  isExternal: true
  name: NetServerCoreOptions
  nameWithType: NetServerCoreOptions.NetServerCoreOptions
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.NetServerCoreOptions
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers
  isExternal: true
  name: TokenSuppliers
  nameWithType: NetServerCoreOptions.TokenSuppliers
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.TokenSuppliers
- uid: System.Collections.Generic.List{System.Type}
  commentId: '!:System.Collections.Generic.List{System.Type}'
  definition: System.Collections.Generic.List`1
  name: List<Type>
  nameWithType: List<Type>
  fullName: System.Collections.Generic.List<System.Type>
  nameWithType.vb: List(Of Type)
  fullName.vb: System.Collections.Generic.List(Of System.Type)
  name.vb: List(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft#Extensions#DependencyInjection#INetServerCoreOptions#TokenSuppliers
  isExternal: true
  name: INetServerCoreOptions.TokenSuppliers
  nameWithType: NetServerCoreOptions.INetServerCoreOptions.TokenSuppliers
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  nameWithType.vb: NetServerCoreOptions.Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  name.vb: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
- uid: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  commentId: P:Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
  parent: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions
  isExternal: true
  name: TokenSuppliers
  nameWithType: INetServerCoreOptions.TokenSuppliers
  fullName: Microsoft.Extensions.DependencyInjection.INetServerCoreOptions.TokenSuppliers
- uid: System.Collections.Generic.IList{System.Type}
  commentId: '!:System.Collections.Generic.IList{System.Type}'
  definition: System.Collections.Generic.IList`1
  name: IList<Type>
  nameWithType: IList<Type>
  fullName: System.Collections.Generic.IList<System.Type>
  nameWithType.vb: IList(Of Type)
  fullName.vb: System.Collections.Generic.IList(Of System.Type)
  name.vb: IList(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels
  isExternal: true
  name: UseNetServerLogLevels
  nameWithType: NetServerCoreOptions.UseNetServerLogLevels
  fullName: Microsoft.Extensions.DependencyInjection.NetServerCoreOptions.UseNetServerLogLevels
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
