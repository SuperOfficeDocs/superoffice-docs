### YamlMime:ManagedReference
items:
- uid: SuperOffice.IO.IFileSystem
  commentId: T:SuperOffice.IO.IFileSystem
  id: IFileSystem
  parent: SuperOffice.IO
  children:
  - SuperOffice.IO.IFileSystem.FileExists(System.String)
  - SuperOffice.IO.IFileSystem.ReadAllText(System.String)
  langs:
  - csharp
  - vb
  name: IFileSystem
  nameWithType: IFileSystem
  fullName: SuperOffice.IO.IFileSystem
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nA wrapper-interface for file-system related operations.\nThis interface is used internally to assist testing.\n"
  syntax:
    content: public interface IFileSystem
    content.vb: Public Interface IFileSystem
  extensionMethods:
  - SuperOffice.IO.IFileSystem.EnumUtil.MapEnums``2
  - SuperOffice.IO.IFileSystem.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.IO.IFileSystem.ReadAllText(System.String)
  commentId: M:SuperOffice.IO.IFileSystem.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: SuperOffice.IO.IFileSystem
  langs:
  - csharp
  - vb
  name: ReadAllText(String)
  nameWithType: IFileSystem.ReadAllText(String)
  fullName: SuperOffice.IO.IFileSystem.ReadAllText(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nRead all lines in the provided file.\n"
  syntax:
    content: string ReadAllText(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.String
    content.vb: Function ReadAllText(fileName As String) As String
  overload: SuperOffice.IO.IFileSystem.ReadAllText*
- uid: SuperOffice.IO.IFileSystem.FileExists(System.String)
  commentId: M:SuperOffice.IO.IFileSystem.FileExists(System.String)
  id: FileExists(System.String)
  parent: SuperOffice.IO.IFileSystem
  langs:
  - csharp
  - vb
  name: FileExists(String)
  nameWithType: IFileSystem.FileExists(String)
  fullName: SuperOffice.IO.IFileSystem.FileExists(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nChecks if the filename provided represents an existing file.\n"
  syntax:
    content: bool FileExists(string fileName)
    parameters:
    - id: fileName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function FileExists(fileName As String) As Boolean
  overload: SuperOffice.IO.IFileSystem.FileExists*
references:
- uid: SuperOffice.IO
  commentId: N:SuperOffice.IO
  isExternal: true
  name: SuperOffice.IO
  nameWithType: SuperOffice.IO
  fullName: SuperOffice.IO
- uid: SuperOffice.IO.IFileSystem.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IFileSystem, To>()
  nameWithType: EnumUtil.MapEnums<IFileSystem, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.IO.IFileSystem, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IFileSystem, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.IO.IFileSystem, To)()
  name.vb: MapEnums(Of IFileSystem, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IFileSystem, To>
    nameWithType: EnumUtil.MapEnums<IFileSystem, To>
    fullName: EnumUtil.MapEnums<SuperOffice.IO.IFileSystem, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IFileSystem, To)
    nameWithType: EnumUtil.MapEnums(Of IFileSystem, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.IO.IFileSystem, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.IO.IFileSystem.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IFileSystem, To>()
  nameWithType: Converters.MapEnums<IFileSystem, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.IO.IFileSystem, To>()
  nameWithType.vb: Converters.MapEnums(Of IFileSystem, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.IO.IFileSystem, To)()
  name.vb: MapEnums(Of IFileSystem, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IFileSystem, To>
    nameWithType: Converters.MapEnums<IFileSystem, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.IO.IFileSystem, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IFileSystem, To)
    nameWithType: Converters.MapEnums(Of IFileSystem, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.IO.IFileSystem, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.IO.IFileSystem.ReadAllText*
  commentId: Overload:SuperOffice.IO.IFileSystem.ReadAllText
  isExternal: true
  name: ReadAllText
  nameWithType: IFileSystem.ReadAllText
  fullName: SuperOffice.IO.IFileSystem.ReadAllText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.IO.IFileSystem.FileExists*
  commentId: Overload:SuperOffice.IO.IFileSystem.FileExists
  isExternal: true
  name: FileExists
  nameWithType: IFileSystem.FileExists
  fullName: SuperOffice.IO.IFileSystem.FileExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
