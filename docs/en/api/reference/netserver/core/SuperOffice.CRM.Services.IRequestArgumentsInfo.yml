### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo
  commentId: T:SuperOffice.CRM.Services.IRequestArgumentsInfo
  id: IRequestArgumentsInfo
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo(System.String,System.String)
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Int64,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix
  langs:
  - csharp
  - vb
  name: IRequestArgumentsInfo
  nameWithType: IRequestArgumentsInfo
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: "\nHolds request arguments for logging in case of exception/long duration.\n"
  remarks: "\n<see cref=\"!:SuperOffice.Online.Fileset.Common.OnlineTelemetryInitializerBase\"></see>\n"
  syntax:
    content: public interface IRequestArgumentsInfo
    content.vb: Public Interface IRequestArgumentsInfo
  extensionMethods:
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Services.IRequestArgumentsInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Int64,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String,System.Int64,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})
  id: Initialize(System.String,System.Int64,System.Int32,System.Collections.Generic.Dictionary{System.String,System.Object},System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: Initialize(String, Int64, Int32, Dictionary<String, Object>, Dictionary<String, Object>)
  nameWithType: IRequestArgumentsInfo.Initialize(String, Int64, Int32, Dictionary<String, Object>, Dictionary<String, Object>)
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String, System.Int64, System.Int32, System.Collections.Generic.Dictionary<System.String, System.Object>, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: void Initialize(string methodName, long nsApiDuration, int nsApiSlowThreshold, Dictionary<string, object> args, Dictionary<string, object> argumentsAppendedToOperationName = null)
    parameters:
    - id: methodName
      type: System.String
    - id: nsApiDuration
      type: System.Int64
    - id: nsApiSlowThreshold
      type: System.Int32
    - id: args
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    - id: argumentsAppendedToOperationName
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Sub Initialize(methodName As String, nsApiDuration As Long, nsApiSlowThreshold As Integer, args As Dictionary(Of String, Object), argumentsAppendedToOperationName As Dictionary(Of String, Object) = Nothing)
  overload: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize*
  nameWithType.vb: IRequestArgumentsInfo.Initialize(String, Int64, Int32, Dictionary(Of String, Object), Dictionary(Of String, Object))
  fullName.vb: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize(System.String, System.Int64, System.Int32, System.Collections.Generic.Dictionary(Of System.String, System.Object), System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: Initialize(String, Int64, Int32, Dictionary(Of String, Object), Dictionary(Of String, Object))
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo(System.String,System.String)
  id: AddInfo(System.String,System.String)
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: AddInfo(String, String)
  nameWithType: IRequestArgumentsInfo.AddInfo(String, String)
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo(System.String, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: void AddInfo(string key, string value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.String
    content.vb: Sub AddInfo(key As String, value As String)
  overload: SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo*
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  commentId: P:SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  id: MethodName
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: MethodName
  nameWithType: IRequestArgumentsInfo.MethodName
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: string MethodName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property MethodName As String
  overload: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow
  commentId: P:SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow
  id: NsApiSlow
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: NsApiSlow
  nameWithType: IRequestArgumentsInfo.NsApiSlow
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: bool NsApiSlow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property NsApiSlow As Boolean
  overload: SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  commentId: P:SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  id: Arguments
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: IRequestArgumentsInfo.Arguments
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: Dictionary<string, string> Arguments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: ReadOnly Property Arguments As Dictionary(Of String, String)
  overload: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix
  commentId: P:SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix
  id: OperationNameArgumentsAppendix
  parent: SuperOffice.CRM.Services.IRequestArgumentsInfo
  langs:
  - csharp
  - vb
  name: OperationNameArgumentsAppendix
  nameWithType: IRequestArgumentsInfo.OperationNameArgumentsAppendix
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: string OperationNameArgumentsAppendix { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property OperationNameArgumentsAppendix As String
  overload: SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IRequestArgumentsInfo, To>()
  nameWithType: EnumUtil.MapEnums<IRequestArgumentsInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.IRequestArgumentsInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IRequestArgumentsInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.IRequestArgumentsInfo, To)()
  name.vb: MapEnums(Of IRequestArgumentsInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IRequestArgumentsInfo, To>
    nameWithType: EnumUtil.MapEnums<IRequestArgumentsInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.IRequestArgumentsInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IRequestArgumentsInfo, To)
    nameWithType: EnumUtil.MapEnums(Of IRequestArgumentsInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.IRequestArgumentsInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IRequestArgumentsInfo, To>()
  nameWithType: Converters.MapEnums<IRequestArgumentsInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.IRequestArgumentsInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of IRequestArgumentsInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.IRequestArgumentsInfo, To)()
  name.vb: MapEnums(Of IRequestArgumentsInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IRequestArgumentsInfo, To>
    nameWithType: Converters.MapEnums<IRequestArgumentsInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.IRequestArgumentsInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IRequestArgumentsInfo, To)
    nameWithType: Converters.MapEnums(Of IRequestArgumentsInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.IRequestArgumentsInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize*
  commentId: Overload:SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize
  isExternal: true
  name: Initialize
  nameWithType: IRequestArgumentsInfo.Initialize
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Initialize
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Object}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo*
  commentId: Overload:SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo
  isExternal: true
  name: AddInfo
  nameWithType: IRequestArgumentsInfo.AddInfo
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.AddInfo
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName*
  commentId: Overload:SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
  isExternal: true
  name: MethodName
  nameWithType: IRequestArgumentsInfo.MethodName
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.MethodName
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow*
  commentId: Overload:SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow
  isExternal: true
  name: NsApiSlow
  nameWithType: IRequestArgumentsInfo.NsApiSlow
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.NsApiSlow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments*
  commentId: Overload:SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
  isExternal: true
  name: Arguments
  nameWithType: IRequestArgumentsInfo.Arguments
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.Arguments
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.String}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix*
  commentId: Overload:SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix
  isExternal: true
  name: OperationNameArgumentsAppendix
  nameWithType: IRequestArgumentsInfo.OperationNameArgumentsAppendix
  fullName: SuperOffice.CRM.Services.IRequestArgumentsInfo.OperationNameArgumentsAppendix
