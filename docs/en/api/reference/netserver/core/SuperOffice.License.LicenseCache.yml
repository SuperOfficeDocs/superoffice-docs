### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.LicenseCache
  commentId: T:SuperOffice.License.LicenseCache
  id: LicenseCache
  parent: SuperOffice.License
  children:
  - SuperOffice.License.LicenseCache.#ctor
  - SuperOffice.License.LicenseCache.GetLoginRightModule(SuperOffice.License.UserType)
  - SuperOffice.License.LicenseCache.GetLoginRightModuleId(SuperOffice.License.UserType)
  - SuperOffice.License.LicenseCache.GetModule(System.Int32)
  - SuperOffice.License.LicenseCache.GetModule(System.String)
  - SuperOffice.License.LicenseCache.GetModule(System.String,System.String)
  - SuperOffice.License.LicenseCache.GetModules(System.String)
  - SuperOffice.License.LicenseCache.GetOwner(System.Int32)
  - SuperOffice.License.LicenseCache.GetOwner(System.String)
  - SuperOffice.License.LicenseCache.GetOwners
  - SuperOffice.License.LicenseCache.GetSiteLicenses
  - SuperOffice.License.LicenseCache.OnLoad
  - SuperOffice.License.LicenseCache.OnLoadAsync(System.Threading.CancellationToken)
  - SuperOffice.License.LicenseCache.TableNames
  langs:
  - csharp
  - vb
  name: LicenseCache
  nameWithType: LicenseCache
  fullName: SuperOffice.License.LicenseCache
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: >-
    Cache containing list of all module owners, module licenses, system licenses and satellite licenses.  

    Associate licenses are not covered by this cache as this might cause the cache to be too slow.
  example: []
  syntax:
    content: >-
      [CacheV2(0)]

      public sealed class LicenseCache : CacheBaseV2
    content.vb: >-
      <CacheV2(0)>

      Public NotInheritable Class LicenseCache Inherits CacheBaseV2
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.License.LicenseCache.EnumUtil.MapEnums``2
  - SuperOffice.License.LicenseCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.License.LicenseCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.LicenseCache)
  - SuperOffice.License.LicenseCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 0
- uid: SuperOffice.License.LicenseCache.GetOwners
  commentId: M:SuperOffice.License.LicenseCache.GetOwners
  id: GetOwners
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetOwners()
  nameWithType: LicenseCache.GetOwners()
  fullName: SuperOffice.License.LicenseCache.GetOwners()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Return all module owners
  example: []
  syntax:
    content: public IEnumerable<ModuleOwnerRecordData> GetOwners()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleOwnerRecordData}
      description: ''
    content.vb: Public Function GetOwners() As IEnumerable(Of ModuleOwnerRecordData)
  overload: SuperOffice.License.LicenseCache.GetOwners*
- uid: SuperOffice.License.LicenseCache.GetOwner(System.Int32)
  commentId: M:SuperOffice.License.LicenseCache.GetOwner(System.Int32)
  id: GetOwner(System.Int32)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetOwner(int)
  nameWithType: LicenseCache.GetOwner(int)
  fullName: SuperOffice.License.LicenseCache.GetOwner(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get Module owner from id
  example: []
  syntax:
    content: public ModuleOwnerRecordData GetOwner(int moduleOwnerId)
    parameters:
    - id: moduleOwnerId
      type: System.Int32
      description: Id of module owner
    return:
      type: SuperOffice.CRM.Rows.ModuleOwnerRecordData
      description: Module owner from Id. Null is returned if the owner is not held by the cache.
    content.vb: Public Function GetOwner(moduleOwnerId As Integer) As ModuleOwnerRecordData
  overload: SuperOffice.License.LicenseCache.GetOwner*
  nameWithType.vb: LicenseCache.GetOwner(Integer)
  fullName.vb: SuperOffice.License.LicenseCache.GetOwner(Integer)
  name.vb: GetOwner(Integer)
- uid: SuperOffice.License.LicenseCache.GetOwner(System.String)
  commentId: M:SuperOffice.License.LicenseCache.GetOwner(System.String)
  id: GetOwner(System.String)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetOwner(string)
  nameWithType: LicenseCache.GetOwner(string)
  fullName: SuperOffice.License.LicenseCache.GetOwner(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get module owner from the owner name
  example: []
  syntax:
    content: public ModuleOwnerRecordData GetOwner(string moduleOwner)
    parameters:
    - id: moduleOwner
      type: System.String
      description: Name of the module owner
    return:
      type: SuperOffice.CRM.Rows.ModuleOwnerRecordData
      description: Module owner from name. Null is returned if the owner is not held by the cache.
    content.vb: Public Function GetOwner(moduleOwner As String) As ModuleOwnerRecordData
  overload: SuperOffice.License.LicenseCache.GetOwner*
  nameWithType.vb: LicenseCache.GetOwner(String)
  fullName.vb: SuperOffice.License.LicenseCache.GetOwner(String)
  name.vb: GetOwner(String)
- uid: SuperOffice.License.LicenseCache.GetModules(System.String)
  commentId: M:SuperOffice.License.LicenseCache.GetModules(System.String)
  id: GetModules(System.String)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetModules(string)
  nameWithType: LicenseCache.GetModules(string)
  fullName: SuperOffice.License.LicenseCache.GetModules(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Return all the module licenses belonging to one owner
  example: []
  syntax:
    content: public IEnumerable<ModuleLicenseRecordData> GetModules(string ownerName)
    parameters:
    - id: ownerName
      type: System.String
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleLicenseRecordData}
      description: ''
    content.vb: Public Function GetModules(ownerName As String) As IEnumerable(Of ModuleLicenseRecordData)
  overload: SuperOffice.License.LicenseCache.GetModules*
  nameWithType.vb: LicenseCache.GetModules(String)
  fullName.vb: SuperOffice.License.LicenseCache.GetModules(String)
  name.vb: GetModules(String)
- uid: SuperOffice.License.LicenseCache.GetModule(System.Int32)
  commentId: M:SuperOffice.License.LicenseCache.GetModule(System.Int32)
  id: GetModule(System.Int32)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetModule(int)
  nameWithType: LicenseCache.GetModule(int)
  fullName: SuperOffice.License.LicenseCache.GetModule(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get Module License from a module license id.
  example: []
  syntax:
    content: public ModuleLicenseRecordData GetModule(int moduleId)
    parameters:
    - id: moduleId
      type: System.Int32
      description: Primary key of the module license to get.
    return:
      type: SuperOffice.CRM.Rows.ModuleLicenseRecordData
      description: Module license from module id.  Null is returned if the module license is not held by the cache.
    content.vb: Public Function GetModule(moduleId As Integer) As ModuleLicenseRecordData
  overload: SuperOffice.License.LicenseCache.GetModule*
  nameWithType.vb: LicenseCache.GetModule(Integer)
  fullName.vb: SuperOffice.License.LicenseCache.GetModule(Integer)
  name.vb: GetModule(Integer)
- uid: SuperOffice.License.LicenseCache.GetModule(System.String,System.String)
  commentId: M:SuperOffice.License.LicenseCache.GetModule(System.String,System.String)
  id: GetModule(System.String,System.String)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetModule(string, string)
  nameWithType: LicenseCache.GetModule(string, string)
  fullName: SuperOffice.License.LicenseCache.GetModule(string, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get module row provided the module owner name and the module name.
  example: []
  syntax:
    content: public ModuleLicenseRecordData GetModule(string ownerName, string moduleName)
    parameters:
    - id: ownerName
      type: System.String
      description: Name of the module owner.
    - id: moduleName
      type: System.String
      description: Name of the module license
    return:
      type: SuperOffice.CRM.Rows.ModuleLicenseRecordData
      description: >-
        Module license from module owner name and the module name.  

        Null is returned if the module license is not held by the cache.
    content.vb: Public Function GetModule(ownerName As String, moduleName As String) As ModuleLicenseRecordData
  overload: SuperOffice.License.LicenseCache.GetModule*
  nameWithType.vb: LicenseCache.GetModule(String, String)
  fullName.vb: SuperOffice.License.LicenseCache.GetModule(String, String)
  name.vb: GetModule(String, String)
- uid: SuperOffice.License.LicenseCache.GetModule(System.String)
  commentId: M:SuperOffice.License.LicenseCache.GetModule(System.String)
  id: GetModule(System.String)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetModule(string)
  nameWithType: LicenseCache.GetModule(string)
  fullName: SuperOffice.License.LicenseCache.GetModule(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get a module from the modules full name, formatted like [ModuleOwner].[ModuleName].
  example: []
  syntax:
    content: public ModuleLicenseRecordData GetModule(string fullName)
    parameters:
    - id: fullName
      type: System.String
      description: Modules full name, formatted like [ModuleOwner].[ModuleName]
    return:
      type: SuperOffice.CRM.Rows.ModuleLicenseRecordData
      description: >-
        Module license from module owner name and the module name.  

        Null is returned if the module license is not held by the cache.
    content.vb: Public Function GetModule(fullName As String) As ModuleLicenseRecordData
  overload: SuperOffice.License.LicenseCache.GetModule*
  nameWithType.vb: LicenseCache.GetModule(String)
  fullName.vb: SuperOffice.License.LicenseCache.GetModule(String)
  name.vb: GetModule(String)
- uid: SuperOffice.License.LicenseCache.GetLoginRightModule(SuperOffice.License.UserType)
  commentId: M:SuperOffice.License.LicenseCache.GetLoginRightModule(SuperOffice.License.UserType)
  id: GetLoginRightModule(SuperOffice.License.UserType)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetLoginRightModule(UserType)
  nameWithType: LicenseCache.GetLoginRightModule(UserType)
  fullName: SuperOffice.License.LicenseCache.GetLoginRightModule(SuperOffice.License.UserType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get the module thay holds the login right for a particular user type.
  example: []
  syntax:
    content: public ModuleLicenseRecordData GetLoginRightModule(UserType userType)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
      description: User type to get module that is required for logging on.
    return:
      type: SuperOffice.CRM.Rows.ModuleLicenseRecordData
      description: Instance of <xref href="SuperOffice.CRM.Rows.ModuleLicenseRecordData" data-throw-if-not-resolved="false"></xref> if the appropriate login-right is found, otherwise null.
    content.vb: Public Function GetLoginRightModule(userType As UserType) As ModuleLicenseRecordData
  overload: SuperOffice.License.LicenseCache.GetLoginRightModule*
- uid: SuperOffice.License.LicenseCache.GetLoginRightModuleId(SuperOffice.License.UserType)
  commentId: M:SuperOffice.License.LicenseCache.GetLoginRightModuleId(SuperOffice.License.UserType)
  id: GetLoginRightModuleId(SuperOffice.License.UserType)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetLoginRightModuleId(UserType)
  nameWithType: LicenseCache.GetLoginRightModuleId(UserType)
  fullName: SuperOffice.License.LicenseCache.GetLoginRightModuleId(SuperOffice.License.UserType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get the primary key of the module license holding login right for a partular user type.
  example: []
  syntax:
    content: public int GetLoginRightModuleId(UserType userType)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
      description: User type.
    return:
      type: System.Int32
      description: >-
        Primary key of the module licese holding login right for a particular user type.  

        0 is returned if the module is not found.
    content.vb: Public Function GetLoginRightModuleId(userType As UserType) As Integer
  overload: SuperOffice.License.LicenseCache.GetLoginRightModuleId*
- uid: SuperOffice.License.LicenseCache.GetSiteLicenses
  commentId: M:SuperOffice.License.LicenseCache.GetSiteLicenses
  id: GetSiteLicenses
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: GetSiteLicenses()
  nameWithType: LicenseCache.GetSiteLicenses()
  fullName: SuperOffice.License.LicenseCache.GetSiteLicenses()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Get all site module license record data in the database.
  example: []
  syntax:
    content: public IEnumerable<ModuleLicenseRecordData> GetSiteLicenses()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleLicenseRecordData}
      description: All site license record data.
    content.vb: Public Function GetSiteLicenses() As IEnumerable(Of ModuleLicenseRecordData)
  overload: SuperOffice.License.LicenseCache.GetSiteLicenses*
- uid: SuperOffice.License.LicenseCache.OnLoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.License.LicenseCache.OnLoadAsync(System.Threading.CancellationToken)
  id: OnLoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: OnLoadAsync(CancellationToken)
  nameWithType: LicenseCache.OnLoadAsync(CancellationToken)
  fullName: SuperOffice.License.LicenseCache.OnLoadAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      protected override Task OnLoadAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Protected Overrides Function OnLoadAsync(cancellationToken As CancellationToken) As Task
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  overload: SuperOffice.License.LicenseCache.OnLoadAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
- uid: SuperOffice.License.LicenseCache.OnLoad
  commentId: M:SuperOffice.License.LicenseCache.OnLoad
  id: OnLoad
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: LicenseCache.OnLoad()
  fullName: SuperOffice.License.LicenseCache.OnLoad()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  example: []
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad()
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.License.LicenseCache.OnLoad*
- uid: SuperOffice.License.LicenseCache.#ctor
  commentId: M:SuperOffice.License.LicenseCache.#ctor
  id: '#ctor'
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: LicenseCache()
  nameWithType: LicenseCache.LicenseCache()
  fullName: SuperOffice.License.LicenseCache.LicenseCache()
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public LicenseCache()
    content.vb: Public Sub New()
  overload: SuperOffice.License.LicenseCache.#ctor*
  nameWithType.vb: LicenseCache.New()
  fullName.vb: SuperOffice.License.LicenseCache.New()
  name.vb: New()
- uid: SuperOffice.License.LicenseCache.TableNames
  commentId: P:SuperOffice.License.LicenseCache.TableNames
  id: TableNames
  parent: SuperOffice.License.LicenseCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: LicenseCache.TableNames
  fullName: SuperOffice.License.LicenseCache.TableNames
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: >-
    Gets the names of the table data that are cached in this cache. When these tables are updated

    the cache will be disposed so a new cache instance can take its place.
  example: []
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.License.LicenseCache.TableNames*
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_InstanceDispose
  name: InstanceDispose()
  nameWithType: CacheBaseV2.InstanceDispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    name: InstanceDispose
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_InstanceDispose
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    name: InstanceDispose
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_InstanceDispose
  - name: (
  - name: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_BeginDisableAutoUpdate
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_BeginDisableAutoUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_BeginDisableAutoUpdate
  - name: (
  - name: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_Disposed
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.License.LicenseCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<LicenseCache, To>(LicenseCache)
  nameWithType: EnumUtil.MapEnums<LicenseCache, To>(LicenseCache)
  fullName: EnumUtil.MapEnums<SuperOffice.License.LicenseCache, To>(SuperOffice.License.LicenseCache)
  nameWithType.vb: EnumUtil.MapEnums(Of LicenseCache, To)(LicenseCache)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.LicenseCache, To)(SuperOffice.License.LicenseCache)
  name.vb: MapEnums(Of LicenseCache, To)(LicenseCache)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.License.LicenseCache)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.License.LicenseCache)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
- uid: SuperOffice.License.LicenseCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<LicenseCache, To>(LicenseCache)
  nameWithType: Converters.MapEnums<LicenseCache, To>(LicenseCache)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.LicenseCache, To>(SuperOffice.License.LicenseCache)
  nameWithType.vb: Converters.MapEnums(Of LicenseCache, To)(LicenseCache)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.LicenseCache, To)(SuperOffice.License.LicenseCache)
  name.vb: MapEnums(Of LicenseCache, To)(LicenseCache)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.License.LicenseCache)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.License.LicenseCache)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
- uid: SuperOffice.License.LicenseCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.LicenseCache)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<LicenseCache>(LicenseCache, LicenseCache)
  nameWithType: ObjectExtensions.AssignByReflection<LicenseCache>(LicenseCache, LicenseCache)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.License.LicenseCache>(SuperOffice.License.LicenseCache, SuperOffice.License.LicenseCache)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of LicenseCache)(LicenseCache, LicenseCache)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.License.LicenseCache)(SuperOffice.License.LicenseCache, SuperOffice.License.LicenseCache)
  name.vb: AssignByReflection(Of LicenseCache)(LicenseCache, LicenseCache)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.LicenseCache,SuperOffice.License.LicenseCache)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: '>'
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: ','
  - name: " "
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.LicenseCache,SuperOffice.License.LicenseCache)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: ','
  - name: " "
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
- uid: SuperOffice.License.LicenseCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<LicenseCache>(LicenseCache)
  nameWithType: ObjectExtensions.GraphCopy<LicenseCache>(LicenseCache)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.License.LicenseCache>(SuperOffice.License.LicenseCache)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of LicenseCache)(LicenseCache)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.License.LicenseCache)(SuperOffice.License.LicenseCache)
  name.vb: GraphCopy(Of LicenseCache)(LicenseCache)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.License.LicenseCache)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: '>'
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.License.LicenseCache)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
  - name: (
  - uid: SuperOffice.License.LicenseCache
    name: LicenseCache
    isExternal: true
    href: SuperOffice.License.LicenseCache.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Cache
    name: Cache
    isExternal: true
    href: SuperOffice.Data.Cache.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Cache
    name: Cache
    isExternal: true
    href: SuperOffice.Data.Cache.html
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.License.LicenseCache.GetOwners*
  commentId: Overload:SuperOffice.License.LicenseCache.GetOwners
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetOwners
  name: GetOwners
  nameWithType: LicenseCache.GetOwners
  fullName: SuperOffice.License.LicenseCache.GetOwners
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleOwnerRecordData}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleOwnerRecordData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ModuleOwnerRecordData>
  nameWithType: IEnumerable<ModuleOwnerRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.ModuleOwnerRecordData>
  nameWithType.vb: IEnumerable(Of ModuleOwnerRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.ModuleOwnerRecordData)
  name.vb: IEnumerable(Of ModuleOwnerRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.CRM.Rows.ModuleOwnerRecordData
    name: ModuleOwnerRecordData
    isExternal: true
    href: SuperOffice.CRM.Rows.ModuleOwnerRecordData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Rows.ModuleOwnerRecordData
    name: ModuleOwnerRecordData
    isExternal: true
    href: SuperOffice.CRM.Rows.ModuleOwnerRecordData.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.License.LicenseCache.GetOwner*
  commentId: Overload:SuperOffice.License.LicenseCache.GetOwner
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetOwner_System_Int32_
  name: GetOwner
  nameWithType: LicenseCache.GetOwner
  fullName: SuperOffice.License.LicenseCache.GetOwner
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Rows.ModuleOwnerRecordData
  commentId: T:SuperOffice.CRM.Rows.ModuleOwnerRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.ModuleOwnerRecordData.html
  name: ModuleOwnerRecordData
  nameWithType: ModuleOwnerRecordData
  fullName: SuperOffice.CRM.Rows.ModuleOwnerRecordData
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.License.LicenseCache.GetModules*
  commentId: Overload:SuperOffice.License.LicenseCache.GetModules
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetModules_System_String_
  name: GetModules
  nameWithType: LicenseCache.GetModules
  fullName: SuperOffice.License.LicenseCache.GetModules
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleLicenseRecordData}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.ModuleLicenseRecordData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ModuleLicenseRecordData>
  nameWithType: IEnumerable<ModuleLicenseRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.ModuleLicenseRecordData>
  nameWithType.vb: IEnumerable(Of ModuleLicenseRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.ModuleLicenseRecordData)
  name.vb: IEnumerable(Of ModuleLicenseRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.CRM.Rows.ModuleLicenseRecordData
    name: ModuleLicenseRecordData
    isExternal: true
    href: SuperOffice.CRM.Rows.ModuleLicenseRecordData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Rows.ModuleLicenseRecordData
    name: ModuleLicenseRecordData
    isExternal: true
    href: SuperOffice.CRM.Rows.ModuleLicenseRecordData.html
  - name: )
- uid: SuperOffice.License.LicenseCache.GetModule*
  commentId: Overload:SuperOffice.License.LicenseCache.GetModule
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetModule_System_Int32_
  name: GetModule
  nameWithType: LicenseCache.GetModule
  fullName: SuperOffice.License.LicenseCache.GetModule
- uid: SuperOffice.CRM.Rows.ModuleLicenseRecordData
  commentId: T:SuperOffice.CRM.Rows.ModuleLicenseRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.ModuleLicenseRecordData.html
  name: ModuleLicenseRecordData
  nameWithType: ModuleLicenseRecordData
  fullName: SuperOffice.CRM.Rows.ModuleLicenseRecordData
- uid: SuperOffice.License.LicenseCache.GetLoginRightModule*
  commentId: Overload:SuperOffice.License.LicenseCache.GetLoginRightModule
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetLoginRightModule_SuperOffice_License_UserType_
  name: GetLoginRightModule
  nameWithType: LicenseCache.GetLoginRightModule
  fullName: SuperOffice.License.LicenseCache.GetLoginRightModule
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: SuperOffice.License.LicenseCache.GetLoginRightModuleId*
  commentId: Overload:SuperOffice.License.LicenseCache.GetLoginRightModuleId
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetLoginRightModuleId_SuperOffice_License_UserType_
  name: GetLoginRightModuleId
  nameWithType: LicenseCache.GetLoginRightModuleId
  fullName: SuperOffice.License.LicenseCache.GetLoginRightModuleId
- uid: SuperOffice.License.LicenseCache.GetSiteLicenses*
  commentId: Overload:SuperOffice.License.LicenseCache.GetSiteLicenses
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_GetSiteLicenses
  name: GetSiteLicenses
  nameWithType: LicenseCache.GetSiteLicenses
  fullName: SuperOffice.License.LicenseCache.GetSiteLicenses
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_OnLoadAsync_System_Threading_CancellationToken_
  name: OnLoadAsync(CancellationToken)
  nameWithType: CacheBaseV2.OnLoadAsync(CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
    name: OnLoadAsync
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_OnLoadAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
    name: OnLoadAsync
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_OnLoadAsync_System_Threading_CancellationToken_
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.License.LicenseCache.OnLoadAsync*
  commentId: Overload:SuperOffice.License.LicenseCache.OnLoadAsync
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_OnLoadAsync_System_Threading_CancellationToken_
  name: OnLoadAsync
  nameWithType: LicenseCache.OnLoadAsync
  fullName: SuperOffice.License.LicenseCache.OnLoadAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_OnLoad
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_OnLoad
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    isExternal: true
    href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_OnLoad
  - name: (
  - name: )
- uid: SuperOffice.License.LicenseCache.OnLoad*
  commentId: Overload:SuperOffice.License.LicenseCache.OnLoad
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_OnLoad
  name: OnLoad
  nameWithType: LicenseCache.OnLoad
  fullName: SuperOffice.License.LicenseCache.OnLoad
- uid: SuperOffice.License.LicenseCache.#ctor*
  commentId: Overload:SuperOffice.License.LicenseCache.#ctor
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache__ctor
  name: LicenseCache
  nameWithType: LicenseCache.LicenseCache
  fullName: SuperOffice.License.LicenseCache.LicenseCache
  nameWithType.vb: LicenseCache.New
  fullName.vb: SuperOffice.License.LicenseCache.New
  name.vb: New
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  href: SuperOffice.Data.Cache.CacheBaseV2.html#SuperOffice_Data_Cache_CacheBaseV2_TableNames
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.License.LicenseCache.TableNames*
  commentId: Overload:SuperOffice.License.LicenseCache.TableNames
  isExternal: true
  href: SuperOffice.License.LicenseCache.html#SuperOffice_License_LicenseCache_TableNames
  name: TableNames
  nameWithType: LicenseCache.TableNames
  fullName: SuperOffice.License.LicenseCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
