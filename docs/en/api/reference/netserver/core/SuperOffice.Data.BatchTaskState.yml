### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.BatchTaskState
  commentId: T:SuperOffice.Data.BatchTaskState
  id: BatchTaskState
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.BatchTaskState.All
  - SuperOffice.Data.BatchTaskState.Aquired
  - SuperOffice.Data.BatchTaskState.Failed
  - SuperOffice.Data.BatchTaskState.New
  - SuperOffice.Data.BatchTaskState.Started
  - SuperOffice.Data.BatchTaskState.Succeeded
  - SuperOffice.Data.BatchTaskState.SucceededManualCleanup
  - SuperOffice.Data.BatchTaskState.Unknown
  langs:
  - csharp
  - vb
  name: BatchTaskState
  nameWithType: BatchTaskState
  fullName: SuperOffice.Data.BatchTaskState
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n\n"
  syntax:
    content: public enum BatchTaskState
    content.vb: Public Enum BatchTaskState
  extensionMethods:
  - SuperOffice.Data.BatchTaskState.EnumUtil.MapEnums``2
  - SuperOffice.Data.BatchTaskState.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.BatchTaskState)
  - SuperOffice.Data.BatchTaskState.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.BatchTaskState.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.BatchTaskState.Unknown
  commentId: F:SuperOffice.Data.BatchTaskState.Unknown
  id: Unknown
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: BatchTaskState.Unknown
  fullName: SuperOffice.Data.BatchTaskState.Unknown
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: Unknown state of the task.\n"
  syntax:
    content: Unknown = 0
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.New
  commentId: F:SuperOffice.Data.BatchTaskState.New
  id: New
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: New
  nameWithType: BatchTaskState.New
  fullName: SuperOffice.Data.BatchTaskState.New
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: The task is new, but not assigned or run by any party.\n"
  syntax:
    content: New = 1
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.Aquired
  commentId: F:SuperOffice.Data.BatchTaskState.Aquired
  id: Aquired
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: Aquired
  nameWithType: BatchTaskState.Aquired
  fullName: SuperOffice.Data.BatchTaskState.Aquired
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: The task has been aquired by an instance that wants to execute the task, but has not been started.\n"
  syntax:
    content: Aquired = 2
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.Started
  commentId: F:SuperOffice.Data.BatchTaskState.Started
  id: Started
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: Started
  nameWithType: BatchTaskState.Started
  fullName: SuperOffice.Data.BatchTaskState.Started
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: The task is executing.\n"
  syntax:
    content: Started = 3
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.Succeeded
  commentId: F:SuperOffice.Data.BatchTaskState.Succeeded
  id: Succeeded
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: Succeeded
  nameWithType: BatchTaskState.Succeeded
  fullName: SuperOffice.Data.BatchTaskState.Succeeded
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: Executing the task has completed successfully.\n"
  syntax:
    content: Succeeded = 4
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.Failed
  commentId: F:SuperOffice.Data.BatchTaskState.Failed
  id: Failed
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: Failed
  nameWithType: BatchTaskState.Failed
  fullName: SuperOffice.Data.BatchTaskState.Failed
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n5: Executing the task has halted and the task failed.   \n"
  syntax:
    content: Failed = 5
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.SucceededManualCleanup
  commentId: F:SuperOffice.Data.BatchTaskState.SucceededManualCleanup
  id: SucceededManualCleanup
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: SucceededManualCleanup
  nameWithType: BatchTaskState.SucceededManualCleanup
  fullName: SuperOffice.Data.BatchTaskState.SucceededManualCleanup
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n6: Executing the task has completed successfully, and related data will be cleaned up by the responsible code.\n"
  syntax:
    content: SucceededManualCleanup = 6
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.BatchTaskState.All
  commentId: F:SuperOffice.Data.BatchTaskState.All
  id: All
  parent: SuperOffice.Data.BatchTaskState
  langs:
  - csharp
  - vb
  name: All
  nameWithType: BatchTaskState.All
  fullName: SuperOffice.Data.BatchTaskState.All
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n99999: Special type. \n"
  syntax:
    content: All = 99999
    return:
      type: SuperOffice.Data.BatchTaskState
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.BatchTaskState.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<BatchTaskState, To>()
  nameWithType: EnumUtil.MapEnums<BatchTaskState, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.BatchTaskState, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of BatchTaskState, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.BatchTaskState, To)()
  name.vb: MapEnums(Of BatchTaskState, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<BatchTaskState, To>
    nameWithType: EnumUtil.MapEnums<BatchTaskState, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.BatchTaskState, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of BatchTaskState, To)
    nameWithType: EnumUtil.MapEnums(Of BatchTaskState, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.BatchTaskState, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.BatchTaskState.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.BatchTaskState)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<BatchTaskState>(BatchTaskState)
  nameWithType: ObjectExtensions.AssignByReflection<BatchTaskState>(BatchTaskState)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.BatchTaskState>(SuperOffice.Data.BatchTaskState)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of BatchTaskState)(BatchTaskState)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.BatchTaskState)(SuperOffice.Data.BatchTaskState)
  name.vb: AssignByReflection(Of BatchTaskState)(BatchTaskState)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<BatchTaskState>
    nameWithType: ObjectExtensions.AssignByReflection<BatchTaskState>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.BatchTaskState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of BatchTaskState)
    nameWithType: ObjectExtensions.AssignByReflection(Of BatchTaskState)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.BatchTaskState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.BatchTaskState.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<BatchTaskState>()
  nameWithType: ObjectExtensions.GraphCopy<BatchTaskState>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.BatchTaskState>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of BatchTaskState)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.BatchTaskState)()
  name.vb: GraphCopy(Of BatchTaskState)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<BatchTaskState>
    nameWithType: ObjectExtensions.GraphCopy<BatchTaskState>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.BatchTaskState>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of BatchTaskState)
    nameWithType: ObjectExtensions.GraphCopy(Of BatchTaskState)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.BatchTaskState)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.BatchTaskState.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<BatchTaskState, To>()
  nameWithType: Converters.MapEnums<BatchTaskState, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.BatchTaskState, To>()
  nameWithType.vb: Converters.MapEnums(Of BatchTaskState, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.BatchTaskState, To)()
  name.vb: MapEnums(Of BatchTaskState, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<BatchTaskState, To>
    nameWithType: Converters.MapEnums<BatchTaskState, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.BatchTaskState, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of BatchTaskState, To)
    nameWithType: Converters.MapEnums(Of BatchTaskState, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.BatchTaskState, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.BatchTaskState
  commentId: T:SuperOffice.Data.BatchTaskState
  parent: SuperOffice.Data
  isExternal: true
  name: BatchTaskState
  nameWithType: BatchTaskState
  fullName: SuperOffice.Data.BatchTaskState
