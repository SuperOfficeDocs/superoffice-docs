### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine
  commentId: T:SuperOffice.CRM.Workflow.IWorkflowEngine
  id: IWorkflowEngine
  parent: SuperOffice.CRM.Workflow
  children:
  - SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(SuperOffice.Data.WorkflowWaitForActionType,System.Int32,System.Threading.CancellationToken,System.Int32[])
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IWorkflowEngine
  nameWithType: IWorkflowEngine
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public interface IWorkflowEngine
    content.vb: Public Interface IWorkflowEngine
  extensionMethods:
  - SuperOffice.CRM.Workflow.IWorkflowEngine.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Workflow.IWorkflowEngine.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(SuperOffice.Data.WorkflowWaitForActionType,System.Int32,System.Threading.CancellationToken,System.Int32[])
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(SuperOffice.Data.WorkflowWaitForActionType,System.Int32,System.Threading.CancellationToken,System.Int32[])
  id: ActivateWorkflowInstancesForActionsAsync(SuperOffice.Data.WorkflowWaitForActionType,System.Int32,System.Threading.CancellationToken,System.Int32[])
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: ActivateWorkflowInstancesForActionsAsync(WorkflowWaitForActionType, Int32, CancellationToken, Int32[])
  nameWithType: IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(WorkflowWaitForActionType, Int32, CancellationToken, Int32[])
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(SuperOffice.Data.WorkflowWaitForActionType, System.Int32, System.Threading.CancellationToken, System.Int32[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task ActivateWorkflowInstancesForActionsAsync(WorkflowWaitForActionType actionType, int keyId, CancellationToken cancellationToken = null, params int[] personIds)
    parameters:
    - id: actionType
      type: SuperOffice.Data.WorkflowWaitForActionType
    - id: keyId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: personIds
      type: System.Int32[]
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function ActivateWorkflowInstancesForActionsAsync(actionType As WorkflowWaitForActionType, keyId As Integer, cancellationToken As CancellationToken = Nothing, ParamArray personIds As Integer()) As Task
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync*
  nameWithType.vb: IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(WorkflowWaitForActionType, Int32, CancellationToken, Int32())
  fullName.vb: SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync(SuperOffice.Data.WorkflowWaitForActionType, System.Int32, System.Threading.CancellationToken, System.Int32())
  name.vb: ActivateWorkflowInstancesForActionsAsync(WorkflowWaitForActionType, Int32, CancellationToken, Int32())
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  id: DoAddToProjectEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoAddToProjectEventAsync(WorkflowEvent, CancellationToken)
  nameWithType: IWorkflowEngine.DoAddToProjectEventAsync(WorkflowEvent, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoAddToProjectEventAsync(WorkflowEvent e, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoAddToProjectEventAsync(e As WorkflowEvent, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  id: DoContactEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoContactEventAsync(WorkflowEvent, WorkflowTriggerType, CancellationToken)
  nameWithType: IWorkflowEngine.DoContactEventAsync(WorkflowEvent, WorkflowTriggerType, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent, SuperOffice.Data.WorkflowTriggerType, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoContactEventAsync(WorkflowEvent e, WorkflowTriggerType triggerType, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: triggerType
      type: SuperOffice.Data.WorkflowTriggerType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoContactEventAsync(e As WorkflowEvent, triggerType As WorkflowTriggerType, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  id: DoEventHandlerAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoEventHandlerAsync(WorkflowEvent, CancellationToken)
  nameWithType: IWorkflowEngine.DoEventHandlerAsync(WorkflowEvent, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync(SuperOffice.CRM.Workflow.WorkflowEvent, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoEventHandlerAsync(WorkflowEvent e, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoEventHandlerAsync(e As WorkflowEvent, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  id: DoFormSubmissionEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoFormSubmissionEventAsync(WorkflowEvent, CancellationToken)
  nameWithType: IWorkflowEngine.DoFormSubmissionEventAsync(WorkflowEvent, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoFormSubmissionEventAsync(WorkflowEvent e, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoFormSubmissionEventAsync(e As WorkflowEvent, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  id: DoLinkClickedEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoLinkClickedEventAsync(WorkflowEvent, CancellationToken)
  nameWithType: IWorkflowEngine.DoLinkClickedEventAsync(WorkflowEvent, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoLinkClickedEventAsync(WorkflowEvent e, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoLinkClickedEventAsync(e As WorkflowEvent, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  id: DoRequestEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoRequestEventAsync(WorkflowEvent, CancellationToken)
  nameWithType: IWorkflowEngine.DoRequestEventAsync(WorkflowEvent, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoRequestEventAsync(WorkflowEvent e, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoRequestEventAsync(e As WorkflowEvent, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  id: DoSaleEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent,SuperOffice.Data.WorkflowTriggerType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: DoSaleEventAsync(WorkflowEvent, WorkflowTriggerType, CancellationToken)
  nameWithType: IWorkflowEngine.DoSaleEventAsync(WorkflowEvent, WorkflowTriggerType, CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync(SuperOffice.CRM.Workflow.WorkflowEvent, SuperOffice.Data.WorkflowTriggerType, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<WorkflowEventResult> DoSaleEventAsync(WorkflowEvent e, WorkflowTriggerType triggerType, CancellationToken cancellationToken = null)
    parameters:
    - id: e
      type: SuperOffice.CRM.Workflow.WorkflowEvent
    - id: triggerType
      type: SuperOffice.Data.WorkflowTriggerType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
    content.vb: Function DoSaleEventAsync(e As WorkflowEvent, triggerType As WorkflowTriggerType, cancellationToken As CancellationToken = Nothing) As Task(Of WorkflowEventResult)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync*
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync(System.Threading.CancellationToken)
  id: RunAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Workflow.IWorkflowEngine
  langs:
  - csharp
  - vb
  name: RunAsync(CancellationToken)
  nameWithType: IWorkflowEngine.RunAsync(CancellationToken)
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: Task<DateTime> RunAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.DateTime}
    content.vb: Function RunAsync(cancellationToken As CancellationToken = Nothing) As Task(Of DateTime)
  overload: SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync*
references:
- uid: SuperOffice.CRM.Workflow
  commentId: N:SuperOffice.CRM.Workflow
  isExternal: true
  name: SuperOffice.CRM.Workflow
  nameWithType: SuperOffice.CRM.Workflow
  fullName: SuperOffice.CRM.Workflow
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IWorkflowEngine, To>()
  nameWithType: EnumUtil.MapEnums<IWorkflowEngine, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Workflow.IWorkflowEngine, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IWorkflowEngine, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Workflow.IWorkflowEngine, To)()
  name.vb: MapEnums(Of IWorkflowEngine, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IWorkflowEngine, To>
    nameWithType: EnumUtil.MapEnums<IWorkflowEngine, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Workflow.IWorkflowEngine, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IWorkflowEngine, To)
    nameWithType: EnumUtil.MapEnums(Of IWorkflowEngine, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Workflow.IWorkflowEngine, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IWorkflowEngine, To>()
  nameWithType: Converters.MapEnums<IWorkflowEngine, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Workflow.IWorkflowEngine, To>()
  nameWithType.vb: Converters.MapEnums(Of IWorkflowEngine, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Workflow.IWorkflowEngine, To)()
  name.vb: MapEnums(Of IWorkflowEngine, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IWorkflowEngine, To>
    nameWithType: Converters.MapEnums<IWorkflowEngine, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Workflow.IWorkflowEngine, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IWorkflowEngine, To)
    nameWithType: Converters.MapEnums(Of IWorkflowEngine, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Workflow.IWorkflowEngine, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync
  isExternal: true
  name: ActivateWorkflowInstancesForActionsAsync
  nameWithType: IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.ActivateWorkflowInstancesForActionsAsync
- uid: SuperOffice.Data.WorkflowWaitForActionType
  commentId: T:SuperOffice.Data.WorkflowWaitForActionType
  parent: SuperOffice.Data
  isExternal: true
  name: WorkflowWaitForActionType
  nameWithType: WorkflowWaitForActionType
  fullName: SuperOffice.Data.WorkflowWaitForActionType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync
  isExternal: true
  name: DoAddToProjectEventAsync
  nameWithType: IWorkflowEngine.DoAddToProjectEventAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoAddToProjectEventAsync
- uid: SuperOffice.CRM.Workflow.WorkflowEvent
  commentId: T:SuperOffice.CRM.Workflow.WorkflowEvent
  parent: SuperOffice.CRM.Workflow
  isExternal: true
  name: WorkflowEvent
  nameWithType: WorkflowEvent
  fullName: SuperOffice.CRM.Workflow.WorkflowEvent
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Workflow.WorkflowEventResult}'
  definition: System.Threading.Tasks.Task`1
  name: Task<WorkflowEventResult>
  nameWithType: Task<WorkflowEventResult>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Workflow.WorkflowEventResult>
  nameWithType.vb: Task(Of WorkflowEventResult)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Workflow.WorkflowEventResult)
  name.vb: Task(Of WorkflowEventResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Workflow.WorkflowEventResult
    name: WorkflowEventResult
    nameWithType: WorkflowEventResult
    fullName: SuperOffice.CRM.Workflow.WorkflowEventResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Workflow.WorkflowEventResult
    name: WorkflowEventResult
    nameWithType: WorkflowEventResult
    fullName: SuperOffice.CRM.Workflow.WorkflowEventResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync
  isExternal: true
  name: DoContactEventAsync
  nameWithType: IWorkflowEngine.DoContactEventAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoContactEventAsync
- uid: SuperOffice.Data.WorkflowTriggerType
  commentId: T:SuperOffice.Data.WorkflowTriggerType
  parent: SuperOffice.Data
  isExternal: true
  name: WorkflowTriggerType
  nameWithType: WorkflowTriggerType
  fullName: SuperOffice.Data.WorkflowTriggerType
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync
  isExternal: true
  name: DoEventHandlerAsync
  nameWithType: IWorkflowEngine.DoEventHandlerAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoEventHandlerAsync
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync
  isExternal: true
  name: DoFormSubmissionEventAsync
  nameWithType: IWorkflowEngine.DoFormSubmissionEventAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoFormSubmissionEventAsync
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync
  isExternal: true
  name: DoLinkClickedEventAsync
  nameWithType: IWorkflowEngine.DoLinkClickedEventAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoLinkClickedEventAsync
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync
  isExternal: true
  name: DoRequestEventAsync
  nameWithType: IWorkflowEngine.DoRequestEventAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoRequestEventAsync
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync
  isExternal: true
  name: DoSaleEventAsync
  nameWithType: IWorkflowEngine.DoSaleEventAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.DoSaleEventAsync
- uid: SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync*
  commentId: Overload:SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync
  isExternal: true
  name: RunAsync
  nameWithType: IWorkflowEngine.RunAsync
  fullName: SuperOffice.CRM.Workflow.IWorkflowEngine.RunAsync
- uid: System.Threading.Tasks.Task{System.DateTime}
  commentId: '!:System.Threading.Tasks.Task{System.DateTime}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DateTime>
  nameWithType: Task<DateTime>
  fullName: System.Threading.Tasks.Task<System.DateTime>
  nameWithType.vb: Task(Of DateTime)
  fullName.vb: System.Threading.Tasks.Task(Of System.DateTime)
  name.vb: Task(Of DateTime)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
