### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.SoListHeading
  commentId: T:SuperOffice.CRM.Lists.SoListHeading
  id: SoListHeading
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.SoListHeading.#ctor(SuperOffice.CRM.Lists.ISoListItem)
  - SuperOffice.CRM.Lists.SoListHeading.Heading
  - SuperOffice.CRM.Lists.SoListHeading.Items
  langs:
  - csharp
  - vb
  name: SoListHeading
  nameWithType: SoListHeading
  fullName: SuperOffice.CRM.Lists.SoListHeading
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: 'public class SoListHeading : Object, ISoListHeading'
    content.vb: >-
      Public Class SoListHeading
          Inherits Object
          Implements ISoListHeading
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Lists.ISoListHeading
  extensionMethods:
  - SuperOffice.CRM.Lists.SoListHeading.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.SoListHeading.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Lists.SoListHeading.#ctor(SuperOffice.CRM.Lists.ISoListItem)
  commentId: M:SuperOffice.CRM.Lists.SoListHeading.#ctor(SuperOffice.CRM.Lists.ISoListItem)
  id: '#ctor(SuperOffice.CRM.Lists.ISoListItem)'
  parent: SuperOffice.CRM.Lists.SoListHeading
  langs:
  - csharp
  - vb
  name: SoListHeading(ISoListItem)
  nameWithType: SoListHeading.SoListHeading(ISoListItem)
  fullName: SuperOffice.CRM.Lists.SoListHeading.SoListHeading(SuperOffice.CRM.Lists.ISoListItem)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nCreate a new instance, using the parameter for the heading item, and with an empty subitems list\n"
  syntax:
    content: public SoListHeading(ISoListItem Heading)
    parameters:
    - id: Heading
      type: SuperOffice.CRM.Lists.ISoListItem
      description: List item to use as a heading
    content.vb: Public Sub New(Heading As ISoListItem)
  overload: SuperOffice.CRM.Lists.SoListHeading.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.SoListHeading.Items
  commentId: P:SuperOffice.CRM.Lists.SoListHeading.Items
  id: Items
  parent: SuperOffice.CRM.Lists.SoListHeading
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: SoListHeading.Items
  fullName: SuperOffice.CRM.Lists.SoListHeading.Items
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public List<ISoListItem> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: Public ReadOnly Property Items As List(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.SoListHeading.Items*
  implements:
  - SuperOffice.CRM.Lists.ISoListHeading.Items
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Lists.SoListHeading.Heading
  commentId: P:SuperOffice.CRM.Lists.SoListHeading.Heading
  id: Heading
  parent: SuperOffice.CRM.Lists.SoListHeading
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: SoListHeading.Heading
  fullName: SuperOffice.CRM.Lists.SoListHeading.Heading
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public ISoListItem Heading { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.ISoListItem
    content.vb: Public ReadOnly Property Heading As ISoListItem
  overload: SuperOffice.CRM.Lists.SoListHeading.Heading*
  implements:
  - SuperOffice.CRM.Lists.ISoListHeading.Heading
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ISoListHeading
  commentId: T:SuperOffice.CRM.Lists.ISoListHeading
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListHeading
  nameWithType: ISoListHeading
  fullName: SuperOffice.CRM.Lists.ISoListHeading
- uid: SuperOffice.CRM.Lists.SoListHeading.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoListHeading, To>()
  nameWithType: EnumUtil.MapEnums<SoListHeading, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.SoListHeading, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoListHeading, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.SoListHeading, To)()
  name.vb: MapEnums(Of SoListHeading, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoListHeading, To>
    nameWithType: EnumUtil.MapEnums<SoListHeading, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.SoListHeading, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoListHeading, To)
    nameWithType: EnumUtil.MapEnums(Of SoListHeading, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.SoListHeading, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.SoListHeading.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoListHeading, To>()
  nameWithType: Converters.MapEnums<SoListHeading, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.SoListHeading, To>()
  nameWithType.vb: Converters.MapEnums(Of SoListHeading, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.SoListHeading, To)()
  name.vb: MapEnums(Of SoListHeading, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoListHeading, To>
    nameWithType: Converters.MapEnums<SoListHeading, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.SoListHeading, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoListHeading, To)
    nameWithType: Converters.MapEnums(Of SoListHeading, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.SoListHeading, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Lists.SoListHeading.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.SoListHeading.#ctor
  isExternal: true
  name: SoListHeading
  nameWithType: SoListHeading.SoListHeading
  fullName: SuperOffice.CRM.Lists.SoListHeading.SoListHeading
- uid: SuperOffice.CRM.Lists.ISoListItem
  commentId: T:SuperOffice.CRM.Lists.ISoListItem
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListItem
  nameWithType: ISoListItem
  fullName: SuperOffice.CRM.Lists.ISoListItem
- uid: SuperOffice.CRM.Lists.SoListHeading.Items*
  commentId: Overload:SuperOffice.CRM.Lists.SoListHeading.Items
  isExternal: true
  name: Items
  nameWithType: SoListHeading.Items
  fullName: SuperOffice.CRM.Lists.SoListHeading.Items
- uid: SuperOffice.CRM.Lists.ISoListHeading.Items
  commentId: P:SuperOffice.CRM.Lists.ISoListHeading.Items
  parent: SuperOffice.CRM.Lists.ISoListHeading
  isExternal: true
  name: Items
  nameWithType: ISoListHeading.Items
  fullName: SuperOffice.CRM.Lists.ISoListHeading.Items
- uid: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  commentId: '!:System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}'
  definition: System.Collections.Generic.List`1
  name: List<ISoListItem>
  nameWithType: List<ISoListItem>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: List(Of ISoListItem)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: List(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.SoListHeading.Heading*
  commentId: Overload:SuperOffice.CRM.Lists.SoListHeading.Heading
  isExternal: true
  name: Heading
  nameWithType: SoListHeading.Heading
  fullName: SuperOffice.CRM.Lists.SoListHeading.Heading
- uid: SuperOffice.CRM.Lists.ISoListHeading.Heading
  commentId: P:SuperOffice.CRM.Lists.ISoListHeading.Heading
  parent: SuperOffice.CRM.Lists.ISoListHeading
  isExternal: true
  name: Heading
  nameWithType: ISoListHeading.Heading
  fullName: SuperOffice.CRM.Lists.ISoListHeading.Heading
