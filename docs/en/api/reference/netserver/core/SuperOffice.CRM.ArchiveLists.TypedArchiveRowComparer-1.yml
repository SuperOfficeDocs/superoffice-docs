### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1
  commentId: T:SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1
  id: TypedArchiveRowComparer`1
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  - SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.Compare(`0,`0)
  langs:
  - csharp
  - vb
  name: TypedArchiveRowComparer<RowType>
  nameWithType: TypedArchiveRowComparer<RowType>
  fullName: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nComparer class used to compare two ArchiveRow objects according to the given orderby\ncriteria. This class handles comparisons by both OrderByValue and DisplayValue, type\nharmonization and conversions, and multiple ascending/descending orderby criteria.\n<p></p>\nIf you have a set of archive row iterators, you can use the <xref href=\"SuperOffice.CRM.ArchiveLists.ArchiveRowIteratorComparer\" data-throw-if-not-resolved=\"false\"></xref>\nclass to sort the iterators according to their .Current rows\n"
  syntax:
    content: 'public class TypedArchiveRowComparer<RowType> : IComparer<RowType> where RowType : ArchiveRow'
    typeParameters:
    - id: RowType
    content.vb: >-
      Public Class TypedArchiveRowComparer(Of RowType As ArchiveRow)
          Implements IComparer(Of RowType)
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.ArchiveLists.ArchiveRowComparer
  implements:
  - System.Collections.Generic.IComparer{{RowType}}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: TypedArchiveRowComparer(Of RowType)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType)
  name.vb: TypedArchiveRowComparer(Of RowType)
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.#ctor(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  id: '#ctor(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])'
  parent: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1
  langs:
  - csharp
  - vb
  name: TypedArchiveRowComparer(ArchiveOrderByInfo[])
  nameWithType: TypedArchiveRowComparer<RowType>.TypedArchiveRowComparer(ArchiveOrderByInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>.TypedArchiveRowComparer(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nConstruct the comparer, and set the orderby criteria. \n"
  syntax:
    content: public TypedArchiveRowComparer(params ArchiveOrderByInfo[] orderByInfo)
    parameters:
    - id: orderByInfo
      type: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
      description: >-
        Set of ordering criteria. null is not acceptable. An empty array

        will cause all elements to be considered equal to another; the final result then depends on

        the behaviour of the sorting algorithm. If the algorithm is &apos;stable&apos;, no change in order

        will happen; otherwise the final ordering is undefined.
    content.vb: Public Sub New(ParamArray orderByInfo As ArchiveOrderByInfo())
  overload: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.#ctor*
  nameWithType.vb: TypedArchiveRowComparer(Of RowType).TypedArchiveRowComparer(ArchiveOrderByInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType).TypedArchiveRowComparer(SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo())
  name.vb: TypedArchiveRowComparer(ArchiveOrderByInfo())
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.Compare(`0,`0)
  commentId: M:SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.Compare(`0,`0)
  id: Compare(`0,`0)
  parent: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1
  langs:
  - csharp
  - vb
  name: Compare(RowType, RowType)
  nameWithType: TypedArchiveRowComparer<RowType>.Compare(RowType, RowType)
  fullName: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>.Compare(RowType, RowType)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nCompare two ArchiveRow elements according to the orderby criteria set\n"
  syntax:
    content: public int Compare(RowType xRow, RowType yRow)
    parameters:
    - id: xRow
      type: '{RowType}'
      description: Left-hand row
    - id: yRow
      type: '{RowType}'
      description: Right-hand row
    return:
      type: System.Int32
      description: -1, 0 or 1 according to actual row data order
    content.vb: Public Function Compare(xRow As RowType, yRow As RowType) As Integer
  overload: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.Compare*
  implements:
  - System.Collections.Generic.IComparer{{RowType}}.Compare({RowType},{RowType})
  nameWithType.vb: TypedArchiveRowComparer(Of RowType).Compare(RowType, RowType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType).Compare(RowType, RowType)
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{{RowType}}
  commentId: T:System.Collections.Generic.IComparer{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<RowType>
  nameWithType: IComparer<RowType>
  fullName: System.Collections.Generic.IComparer<RowType>
  nameWithType.vb: IComparer(Of RowType)
  fullName.vb: System.Collections.Generic.IComparer(Of RowType)
  name.vb: IComparer(Of RowType)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TypedArchiveRowComparer<RowType>, To>()
  nameWithType: EnumUtil.MapEnums<TypedArchiveRowComparer<RowType>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TypedArchiveRowComparer(Of RowType), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType), To)()
  name.vb: MapEnums(Of TypedArchiveRowComparer(Of RowType), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TypedArchiveRowComparer<RowType>, To>
    nameWithType: EnumUtil.MapEnums<TypedArchiveRowComparer<RowType>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TypedArchiveRowComparer(Of RowType), To)
    nameWithType: EnumUtil.MapEnums(Of TypedArchiveRowComparer(Of RowType), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TypedArchiveRowComparer<RowType>, To>()
  nameWithType: Converters.MapEnums<TypedArchiveRowComparer<RowType>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>, To>()
  nameWithType.vb: Converters.MapEnums(Of TypedArchiveRowComparer(Of RowType), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType), To)()
  name.vb: MapEnums(Of TypedArchiveRowComparer(Of RowType), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TypedArchiveRowComparer<RowType>, To>
    nameWithType: Converters.MapEnums<TypedArchiveRowComparer<RowType>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TypedArchiveRowComparer(Of RowType), To)
    nameWithType: Converters.MapEnums(Of TypedArchiveRowComparer(Of RowType), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.#ctor
  isExternal: true
  name: TypedArchiveRowComparer
  nameWithType: TypedArchiveRowComparer<RowType>.TypedArchiveRowComparer
  fullName: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>.TypedArchiveRowComparer
  nameWithType.vb: TypedArchiveRowComparer(Of RowType).TypedArchiveRowComparer
  fullName.vb: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType).TypedArchiveRowComparer
- uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  isExternal: true
  name: ArchiveOrderByInfo[]
  nameWithType: ArchiveOrderByInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo[]
  nameWithType.vb: ArchiveOrderByInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo()
  name.vb: ArchiveOrderByInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    name: ArchiveOrderByInfo
    nameWithType: ArchiveOrderByInfo
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveOrderByInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.Compare*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer`1.Compare
  isExternal: true
  name: Compare
  nameWithType: TypedArchiveRowComparer<RowType>.Compare
  fullName: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer<RowType>.Compare
  nameWithType.vb: TypedArchiveRowComparer(Of RowType).Compare
  fullName.vb: SuperOffice.CRM.ArchiveLists.TypedArchiveRowComparer(Of RowType).Compare
- uid: System.Collections.Generic.IComparer{{RowType}}.Compare({RowType},{RowType})
  commentId: M:System.Collections.Generic.IComparer{`0}.Compare(`0,`0)
  parent: System.Collections.Generic.IComparer{{RowType}}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(RowType, RowType)
  nameWithType: IComparer<RowType>.Compare(RowType, RowType)
  fullName: System.Collections.Generic.IComparer<RowType>.Compare(RowType, RowType)
  nameWithType.vb: IComparer(Of RowType).Compare(RowType, RowType)
  fullName.vb: System.Collections.Generic.IComparer(Of RowType).Compare(RowType, RowType)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<RowType>.Compare
    fullName: System.Collections.Generic.IComparer<RowType>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of RowType).Compare
    fullName: System.Collections.Generic.IComparer(Of RowType).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: RowType
    nameWithType: RowType
    fullName: RowType
  - name: )
    nameWithType: )
    fullName: )
- uid: '{RowType}'
  commentId: '!:RowType'
  definition: RowType
  name: RowType
  nameWithType: RowType
  fullName: RowType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: RowType
  name: RowType
  nameWithType: RowType
  fullName: RowType
