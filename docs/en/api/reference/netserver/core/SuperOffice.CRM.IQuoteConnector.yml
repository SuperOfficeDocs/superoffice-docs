### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.IQuoteConnector
  commentId: T:SuperOffice.CRM.IQuoteConnector
  id: IQuoteConnector
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.IQuoteConnector.CRMConnectionId
  - SuperOffice.CRM.IQuoteConnector.CanProvideCapability(System.String)
  - SuperOffice.CRM.IQuoteConnector.FindProductAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.IQuoteConnector.GetActivePriceLists(System.String)
  - SuperOffice.CRM.IQuoteConnector.GetAddresses(SuperOffice.CRM.QuoteAlternativeContextInfo)
  - SuperOffice.CRM.IQuoteConnector.GetAllPriceLists(System.String)
  - SuperOffice.CRM.IQuoteConnector.GetCapabilities
  - SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
  - SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists(System.String)
  - SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages(System.String)
  - SuperOffice.CRM.IQuoteConnector.GetOrderState(SuperOffice.CRM.QuoteAlternativeContextInfo)
  - SuperOffice.CRM.IQuoteConnector.GetProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  - SuperOffice.CRM.IQuoteConnector.GetProductImage(System.String,System.Int32)
  - SuperOffice.CRM.IQuoteConnector.GetProducts(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String[])
  - SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  - SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync(SuperOffice.CRM.SearchRestrictionInfo[],System.Threading.CancellationToken)
  - SuperOffice.CRM.IQuoteConnector.GetSearchableFields
  - SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
  - SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  - SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  - SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  - SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative(SuperOffice.CRM.QuoteAlternativeContextInfo)
  - SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  - SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote(SuperOffice.CRM.QuoteInfo,SuperOffice.CRM.ISaleInfo,SuperOffice.CRM.IContactInfo)
  - SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.IQuoteConnector.PlaceOrder(SuperOffice.CRM.QuoteAlternativeContextInfo)
  - SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.IQuoteConnector.TestConnection(System.Collections.Generic.Dictionary{System.String,System.String})
  - SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Collections.Generic.HashSet{System.String})
  - SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IQuoteConnector
  nameWithType: IQuoteConnector
  fullName: SuperOffice.CRM.IQuoteConnector
  type: Interface
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    This is the interface SuperOffice will call to integrate against an ERP system in the realm of quotes and orders.

    You don't have to implement all functions, use the capabilities to tell SuperOffice what the connector can and cannot do.

    <p></p>

    If an ERP system does not provide products, or if the ERP system is not available

    , the searches can be delegated to the built-in SuperOffice product registry by using 

    the SuperOffice IProductRegisterCache object that is provided at startup. 

    <p></p>

    Currencies are specified in ISO three letter codes: USD, NOK, SEK, EUR, GBP, etc.

    See http://www.currency-iso.org/dl_iso_table_a1.xls for details. 

    <p></p>

    The user may click the TEST button in the configuration dialog, which calls the TestConnection method.
  example: []
  syntax:
    content: 'public interface IQuoteConnector : IDisposable'
    content.vb: Public Interface IQuoteConnector Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - SuperOffice.CRM.IQuoteConnector.EnumUtil.MapEnums``2
  - SuperOffice.CRM.IQuoteConnector.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
  id: GetConfigurationFields
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetConfigurationFields()
  nameWithType: IQuoteConnector.GetConfigurationFields()
  fullName: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields()
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    This is a request for metadata needed to populate the Quote connection configuration admin dialog 

    that takes in the information needed to create a connection to an ERP system. 

    The values entered in the dialog are stored in the SuperOffice db and used when 

    <xref href="SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo%2cSuperOffice.CRM.UserInfo%2cSystem.Boolean%2cSystem.Collections.Generic.Dictionary%7bSystem.String%2cSystem.String%7d%2cSuperOffice.CRM.IProductRegisterCache)" data-throw-if-not-resolved="false"></xref> is called by the client.
  example: []
  syntax:
    content: Dictionary<string, FieldMetadataInfo> GetConfigurationFields()
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.FieldMetadataInfo}
      description: A list of field descriptions for the GUI to use when populating the config dialog. Make sure that the <xref href="SuperOffice.CRM.FieldMetadataInfo.Rank" data-throw-if-not-resolved="false"></xref> is set.
    content.vb: Function GetConfigurationFields() As Dictionary(Of String, FieldMetadataInfo)
  overload: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields*
- uid: SuperOffice.CRM.IQuoteConnector.TestConnection(System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:SuperOffice.CRM.IQuoteConnector.TestConnection(System.Collections.Generic.Dictionary{System.String,System.String})
  id: TestConnection(System.Collections.Generic.Dictionary{System.String,System.String})
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: TestConnection(Dictionary<string, string>)
  nameWithType: IQuoteConnector.TestConnection(Dictionary<string, string>)
  fullName: SuperOffice.CRM.IQuoteConnector.TestConnection(System.Collections.Generic.Dictionary<string, string>)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Check that the ERP connection is good. Return some status info that the Admin client can show to the user.

    <p></p>

    Testing if the connection data is sufficient to get a connection with the ERP system. 

    The Connector should try to do some operations to check if the connection has sufficient rights 

    to run. The connection has not been created yet.
  example: []
  syntax:
    content: PluginResponseInfo TestConnection(Dictionary<string, string> connectionData)
    parameters:
    - id: connectionData
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: '{"name" = "value"}. The names are defined by the FieldMetadata. The values are what the user typed into the fields in the configure connection dialog.'
    return:
      type: SuperOffice.CRM.PluginResponseInfo
      description: Ok or not + a status or error message. This message is shown in a result dialog.
    content.vb: Function TestConnection(connectionData As Dictionary(Of String, String)) As PluginResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.TestConnection*
  nameWithType.vb: IQuoteConnector.TestConnection(Dictionary(Of String, String))
  fullName.vb: SuperOffice.CRM.IQuoteConnector.TestConnection(System.Collections.Generic.Dictionary(Of String, String))
  name.vb: TestConnection(Dictionary(Of String, String))
- uid: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
  commentId: M:SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
  id: InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: InitializeConnection(QuoteConnectionInfo, UserInfo, bool, Dictionary<string, string>, IProductRegisterCache)
  nameWithType: IQuoteConnector.InitializeConnection(QuoteConnectionInfo, UserInfo, bool, Dictionary<string, string>, IProductRegisterCache)
  fullName: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo, SuperOffice.CRM.UserInfo, bool, System.Collections.Generic.Dictionary<string, string>, SuperOffice.CRM.IProductRegisterCache)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Set up the connection to the ERP system.

    Will be called as part of SuperOffice client startup for each installed connection. 

    Configuration data comes from the configuration dialog shown in the Admin client (<xref href="SuperOffice.CRM.IQuoteConnector.GetConfigurationFields" data-throw-if-not-resolved="false"></xref>)
  example: []
  syntax:
    content: PluginResponseInfo InitializeConnection(QuoteConnectionInfo connectionData, UserInfo user, bool isOnTravel, Dictionary<string, string> connectionConfigFields, IProductRegisterCache productRegister)
    parameters:
    - id: connectionData
      type: SuperOffice.CRM.QuoteConnectionInfo
      description: Contains the configuration values defined in the Admin client.
    - id: user
      type: SuperOffice.CRM.UserInfo
      description: Information about the logged in user
    - id: isOnTravel
      type: System.Boolean
      description: Is the user on Travel?
    - id: connectionConfigFields
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: '{"name" = "value"}. The names are defined by the FieldMetadata. The values are what the user typed into the fields in the configure connection dialog.'
    - id: productRegister
      type: SuperOffice.CRM.IProductRegisterCache
      description: Product caching object that allows connectors to stash product information in the SuperOffice database for off-line use.
    return:
      type: SuperOffice.CRM.PluginResponseInfo
      description: >-
        IsOk set to false if connector can’t provide service (no network); 
                    The connector is then ignored until the application restarts.
    content.vb: Function InitializeConnection(connectionData As QuoteConnectionInfo, user As UserInfo, isOnTravel As Boolean, connectionConfigFields As Dictionary(Of String, String), productRegister As IProductRegisterCache) As PluginResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.InitializeConnection*
  nameWithType.vb: IQuoteConnector.InitializeConnection(QuoteConnectionInfo, UserInfo, Boolean, Dictionary(Of String, String), IProductRegisterCache)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo, SuperOffice.CRM.UserInfo, Boolean, System.Collections.Generic.Dictionary(Of String, String), SuperOffice.CRM.IProductRegisterCache)
  name.vb: InitializeConnection(QuoteConnectionInfo, UserInfo, Boolean, Dictionary(Of String, String), IProductRegisterCache)
- uid: SuperOffice.CRM.IQuoteConnector.GetCapabilities
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetCapabilities
  id: GetCapabilities
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetCapabilities()
  nameWithType: IQuoteConnector.GetCapabilities()
  fullName: SuperOffice.CRM.IQuoteConnector.GetCapabilities()
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Return a set of capability name &gt; status pairs that tell the system what capabilities this connector provides.

    Using the <xref href="SuperOffice.CRM.PluginResponseInfo" data-throw-if-not-resolved="false"></xref> gives the connector the possibility to disable a capability,

    with a reason string that might be shown to the user.
  example: []
  syntax:
    content: Dictionary<string, bool> GetCapabilities()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Boolean}
      description: List of all capabilities
    content.vb: Function GetCapabilities() As Dictionary(Of String, Boolean)
  overload: SuperOffice.CRM.IQuoteConnector.GetCapabilities*
- uid: SuperOffice.CRM.IQuoteConnector.CanProvideCapability(System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.CanProvideCapability(System.String)
  id: CanProvideCapability(System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: CanProvideCapability(string)
  nameWithType: IQuoteConnector.CanProvideCapability(string)
  fullName: SuperOffice.CRM.IQuoteConnector.CanProvideCapability(string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Check if one named capability can be provided (now)

    Using the <xref href="SuperOffice.CRM.PluginResponseInfo" data-throw-if-not-resolved="false"></xref> gives the connector the possibility to disable a capability,

    with a reason string that might be shown to the user.
  example: []
  syntax:
    content: bool CanProvideCapability(string capabilityName)
    parameters:
    - id: capabilityName
      type: System.String
      description: Name of the capability, see <xref href="SuperOffice.CRM.CRMQuoteConnectorCapabilities" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: True if connector has this capability
    content.vb: Function CanProvideCapability(capabilityName As String) As Boolean
  overload: SuperOffice.CRM.IQuoteConnector.CanProvideCapability*
  nameWithType.vb: IQuoteConnector.CanProvideCapability(String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.CanProvideCapability(String)
  name.vb: CanProvideCapability(String)
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  id: OnBeforeCreateQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnBeforeCreateQuote(QuoteAlternativeContextInfo)
  nameWithType: IQuoteConnector.OnBeforeCreateQuote(QuoteAlternativeContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Called when a user is creating a quote.

    The Quote does not exist in database at this time; 

    any changes in the returned QuoteResponseInfo will be saved and the GUI updated.
  example: []
  syntax:
    content: QuoteResponseInfo OnBeforeCreateQuote(QuoteAlternativeContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: The quote and its parts.
    return:
      type: SuperOffice.CRM.QuoteResponseInfo
      description: An updated quote. If returns IsOk = false, then quote creation is aborted.
    content.vb: Function OnBeforeCreateQuote(context As QuoteAlternativeContextInfo) As QuoteResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote*
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  id: OnBeforeCreateQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnBeforeCreateQuoteVersion(QuoteVersionContextInfo)
  nameWithType: IQuoteConnector.OnBeforeCreateQuoteVersion(QuoteVersionContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Called when a user is creating a new quoteversion.

    The version does not exist in database at this time; 

    any changes in the returned QuoteVersionResponseInfo will be saved and the GUI updated.
  example: []
  syntax:
    content: QuoteVersionResponseInfo OnBeforeCreateQuoteVersion(QuoteVersionContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteVersionContextInfo
      description: The quote and its parts.
    return:
      type: SuperOffice.CRM.QuoteVersionResponseInfo
      description: An updated quote version. If returns IsOk = false, then quoteversion creation is aborted.
    content.vb: Function OnBeforeCreateQuoteVersion(context As QuoteVersionContextInfo) As QuoteVersionResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion*
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative(SuperOffice.CRM.QuoteAlternativeContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative(SuperOffice.CRM.QuoteAlternativeContextInfo)
  id: OnBeforeCreateQuoteAlternative(SuperOffice.CRM.QuoteAlternativeContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnBeforeCreateQuoteAlternative(QuoteAlternativeContextInfo)
  nameWithType: IQuoteConnector.OnBeforeCreateQuoteAlternative(QuoteAlternativeContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative(SuperOffice.CRM.QuoteAlternativeContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Called when a user is creating a quote alternative.

    The quote alternative does not exist in database at this time; 

    any changes in the returned Quote alternative will be saved and the GUI updated.
  example: []
  syntax:
    content: QuoteAlternativeResponseInfo OnBeforeCreateQuoteAlternative(QuoteAlternativeContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: The quote and its parts.
    return:
      type: SuperOffice.CRM.QuoteAlternativeResponseInfo
      description: An updated quote alternative. If returns IsOk = false, then quote alternative creation is aborted.
    content.vb: Function OnBeforeCreateQuoteAlternative(context As QuoteAlternativeContextInfo) As QuoteAlternativeResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative*
- uid: SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  id: OnAfterSaveQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnAfterSaveQuote(QuoteAlternativeContextInfo)
  nameWithType: IQuoteConnector.OnAfterSaveQuote(QuoteAlternativeContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote(SuperOffice.CRM.QuoteAlternativeContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: Called after a sale containing a quote is saved or created. (Notice that new items have now gotten their ids in the CRM system.)
  example: []
  syntax:
    content: void OnAfterSaveQuote(QuoteAlternativeContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: The quote and its parts. Contact, Person, Project are read-only. Quote, QuoteRevision, QuoteAlternative parts can be changed before the save.
    content.vb: Sub OnAfterSaveQuote(context As QuoteAlternativeContextInfo)
  overload: SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote*
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote(SuperOffice.CRM.QuoteInfo,SuperOffice.CRM.ISaleInfo,SuperOffice.CRM.IContactInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote(SuperOffice.CRM.QuoteInfo,SuperOffice.CRM.ISaleInfo,SuperOffice.CRM.IContactInfo)
  id: OnBeforeDeleteQuote(SuperOffice.CRM.QuoteInfo,SuperOffice.CRM.ISaleInfo,SuperOffice.CRM.IContactInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnBeforeDeleteQuote(QuoteInfo, ISaleInfo, IContactInfo)
  nameWithType: IQuoteConnector.OnBeforeDeleteQuote(QuoteInfo, ISaleInfo, IContactInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote(SuperOffice.CRM.QuoteInfo, SuperOffice.CRM.ISaleInfo, SuperOffice.CRM.IContactInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Called before a sale containing a quote is deleted. 

    Clean up in the ERP system, if needed.

    <p></p>

    The connector cannot stop the quote being deleted in the CRM system.
  example: []
  syntax:
    content: void OnBeforeDeleteQuote(QuoteInfo quote, ISaleInfo sale, IContactInfo contact)
    parameters:
    - id: quote
      type: SuperOffice.CRM.QuoteInfo
      description: The Quote being deleted
    - id: sale
      type: SuperOffice.CRM.ISaleInfo
      description: The sale the quote belongs to
    - id: contact
      type: SuperOffice.CRM.IContactInfo
      description: The main contact on the sale
    content.vb: Sub OnBeforeDeleteQuote(quote As QuoteInfo, sale As ISaleInfo, contact As IContactInfo)
  overload: SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote*
- uid: SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  id: OnAfterSentQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnAfterSentQuoteVersion(QuoteVersionContextInfo)
  nameWithType: IQuoteConnector.OnAfterSentQuoteVersion(QuoteVersionContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion(SuperOffice.CRM.QuoteVersionContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Called after a quote version is sent to the user's customer.

    <p></p>

    You may do extra work and return the modified the Quote Version info, but you cannot

    abort the sending process. Any mail or document generation in SuperOffice is 

    independent of the connector.
  example: []
  syntax:
    content: QuoteSentResponseInfo OnAfterSentQuoteVersion(QuoteVersionContextInfo quoteContext)
    parameters:
    - id: quoteContext
      type: SuperOffice.CRM.QuoteVersionContextInfo
      description: The Quote Version that was sent to the customer
    return:
      type: SuperOffice.CRM.QuoteSentResponseInfo
      description: URL and/or modified quote version info.
    content.vb: Function OnAfterSentQuoteVersion(quoteContext As QuoteVersionContextInfo) As QuoteSentResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion*
- uid: SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync(System.String,System.Threading.CancellationToken)
  id: GetQuoteListAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetQuoteListAsync(string, CancellationToken)
  nameWithType: IQuoteConnector.GetQuoteListAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Gets a named list from the connector.

    <p></p>

    There are a few lists in the ERP system that we would like to show to the users: 

    payment terms and types, delivery terms and types, and product classifications (product category, product family and product type).

    These lists can be supplied by the ERP connector using this interface.

    SuperOffice will take these values and convert the simple flat list of values into a SuperOffice list that appears in the GUI.

    If the ERP connector wants to supply a more complex nested list, then the ERP connector can implement a full MDO Provider.

    <p></p>

    There are some lists in the system we would like the ERP system to provide data for, if it can:<p></p>

    •	ProductCategory<p></p>

    •	ProductFamily<p></p>

    •	ProductType<p></p>

    •	PaymentTerms<p></p>

    •	PaymentType<p></p>

    •	DeliveryTerms<p></p>

    •	DeliveryType <p></p>

    If a quote list is NULL, then the GUI will fall back to a text input field, where the user can enter text. 

    This text is passed to the ERP plugin unchanged.<p></p>

    The Quote configuration API may also refer to custom list names which will be filled in by asking here. 

    I.e. you will be asked for more lists than just the ones mentioned here, if you have added custom lists to the configuration dialog.
  example: []
  syntax:
    content: Task<ListItemInfo[]> GetQuoteListAsync(string quoteListType, CancellationToken cancellationToken = default)
    parameters:
    - id: quoteListType
      type: System.String
      description: The quoteListType parameter is case insensitive.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ListItemInfo[]}
      description: >-
        Return array of QuoteListItems.

        Return NULL if the given list is not supported.
    content.vb: Function GetQuoteListAsync(quoteListType As String, cancellationToken As CancellationToken = Nothing) As Task(Of ListItemInfo())
  overload: SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync*
  nameWithType.vb: IQuoteConnector.GetQuoteListAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync(String, System.Threading.CancellationToken)
  name.vb: GetQuoteListAsync(String, CancellationToken)
- uid: SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists(System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists(System.String)
  id: GetNumberOfActivePriceLists(System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetNumberOfActivePriceLists(string)
  nameWithType: IQuoteConnector.GetNumberOfActivePriceLists(string)
  fullName: SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists(string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: Is used to warn the user if there is no active pricelists in a given currency.
  example: []
  syntax:
    content: int GetNumberOfActivePriceLists(string isoCurrencyCode)
    parameters:
    - id: isoCurrencyCode
      type: System.String
      description: 'Iso currency code like: USD or NOK. Case insensitive.'
    return:
      type: System.Int32
      description: >-
        Return all pricelists if isoCurrencyCode is empty.	

        Return an empty array if there is no PriceList with the stated currency available.
    content.vb: Function GetNumberOfActivePriceLists(isoCurrencyCode As String) As Integer
  overload: SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists*
  nameWithType.vb: IQuoteConnector.GetNumberOfActivePriceLists(String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists(String)
  name.vb: GetNumberOfActivePriceLists(String)
- uid: SuperOffice.CRM.IQuoteConnector.GetActivePriceLists(System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetActivePriceLists(System.String)
  id: GetActivePriceLists(System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetActivePriceLists(string)
  nameWithType: IQuoteConnector.GetActivePriceLists(string)
  fullName: SuperOffice.CRM.IQuoteConnector.GetActivePriceLists(string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Used by the admin client.

    Gets the available active PriceLists in a specific currency.
  example: []
  syntax:
    content: PriceListInfo[] GetActivePriceLists(string isoCurrencyCode)
    parameters:
    - id: isoCurrencyCode
      type: System.String
      description: 'Iso currency like: USD or NOK. Case insensitive.'
    return:
      type: SuperOffice.CRM.PriceListInfo[]
      description: >-
        Return empty array if there is no PriceList available in the currency.

        Return all pricelists if isoCurrencyCode is empty.
    content.vb: Function GetActivePriceLists(isoCurrencyCode As String) As PriceListInfo()
  overload: SuperOffice.CRM.IQuoteConnector.GetActivePriceLists*
  nameWithType.vb: IQuoteConnector.GetActivePriceLists(String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetActivePriceLists(String)
  name.vb: GetActivePriceLists(String)
- uid: SuperOffice.CRM.IQuoteConnector.GetAllPriceLists(System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetAllPriceLists(System.String)
  id: GetAllPriceLists(System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetAllPriceLists(string)
  nameWithType: IQuoteConnector.GetAllPriceLists(string)
  fullName: SuperOffice.CRM.IQuoteConnector.GetAllPriceLists(string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Used by the admin client.

    Gets the all PriceLists in the given currency, including those inactive.
  example: []
  syntax:
    content: PriceListInfo[] GetAllPriceLists(string isoCurrencyCode)
    parameters:
    - id: isoCurrencyCode
      type: System.String
      description: 'Iso currency like: USD or NOK. Case insensitive.'
    return:
      type: SuperOffice.CRM.PriceListInfo[]
      description: >-
        Return empty array if there is no PriceList available.

        Return all pricelists if isoCurrencyCode is empty.
    content.vb: Function GetAllPriceLists(isoCurrencyCode As String) As PriceListInfo()
  overload: SuperOffice.CRM.IQuoteConnector.GetAllPriceLists*
  nameWithType.vb: IQuoteConnector.GetAllPriceLists(String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetAllPriceLists(String)
  name.vb: GetAllPriceLists(String)
- uid: SuperOffice.CRM.IQuoteConnector.FindProductAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.FindProductAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: FindProductAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: FindProductAsync(QuoteAlternativeContextInfo, string, string, string, CancellationToken)
  nameWithType: IQuoteConnector.FindProductAsync(QuoteAlternativeContextInfo, string, string, string, CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.FindProductAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, string, string, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    The connector should treat this as a freetext search, the user might want to enter several words 

    and expect the system to search for through several fields like name, description, product code, extrafields, etc. 

    <p></p>

    Since the return list is a potentially large return value, the connector or the ERP system should 

    limit the number of matches returned to a few hundred.

    <p></p>

    The dropdown fast searcher calls this function to populate the dropdown list.
  example: []
  syntax:
    content: Task<ProductInfo[]> FindProductAsync(QuoteAlternativeContextInfo context, string currencyCode, string userinput, string priceListKey, CancellationToken cancellationToken = default)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: ''
    - id: currencyCode
      type: System.String
      description: ''
    - id: userinput
      type: System.String
      description: ''
    - id: priceListKey
      type: System.String
      description: If the pricelist is empty, the function will search in all active pricelists.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ProductInfo[]}
      description: An array of products matching the search words
    content.vb: Function FindProductAsync(context As QuoteAlternativeContextInfo, currencyCode As String, userinput As String, priceListKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of ProductInfo())
  overload: SuperOffice.CRM.IQuoteConnector.FindProductAsync*
  nameWithType.vb: IQuoteConnector.FindProductAsync(QuoteAlternativeContextInfo, String, String, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.FindProductAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, String, String, String, System.Threading.CancellationToken)
  name.vb: FindProductAsync(QuoteAlternativeContextInfo, String, String, String, CancellationToken)
- uid: SuperOffice.CRM.IQuoteConnector.GetProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  id: GetProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetProduct(QuoteAlternativeContextInfo, string)
  nameWithType: IQuoteConnector.GetProduct(QuoteAlternativeContextInfo, string)
  fullName: SuperOffice.CRM.IQuoteConnector.GetProduct(SuperOffice.CRM.QuoteAlternativeContextInfo, string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: Gets a product based on erpProductKey
  example: []
  syntax:
    content: ProductInfo GetProduct(QuoteAlternativeContextInfo context, string erpProductKey)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: ''
    - id: erpProductKey
      type: System.String
      description: ''
    return:
      type: SuperOffice.CRM.ProductInfo
      description: Returns the product with the specified key.
    content.vb: Function GetProduct(context As QuoteAlternativeContextInfo, erpProductKey As String) As ProductInfo
  overload: SuperOffice.CRM.IQuoteConnector.GetProduct*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      If the argument is null or empty
                  , the function will throw an ArgumentException.
  - type: System.Exception
    commentId: T:System.Exception
    description: >-
      If the product is not found
                  , the function will throw an Exception.
  nameWithType.vb: IQuoteConnector.GetProduct(QuoteAlternativeContextInfo, String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetProduct(SuperOffice.CRM.QuoteAlternativeContextInfo, String)
  name.vb: GetProduct(QuoteAlternativeContextInfo, String)
- uid: SuperOffice.CRM.IQuoteConnector.GetProducts(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String[])
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetProducts(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String[])
  id: GetProducts(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String[])
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetProducts(QuoteAlternativeContextInfo, string[])
  nameWithType: IQuoteConnector.GetProducts(QuoteAlternativeContextInfo, string[])
  fullName: SuperOffice.CRM.IQuoteConnector.GetProducts(SuperOffice.CRM.QuoteAlternativeContextInfo, string[])
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: See GetProduct for details
  example: []
  syntax:
    content: ProductInfo[] GetProducts(QuoteAlternativeContextInfo context, string[] erpProductKeys)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: ''
    - id: erpProductKeys
      type: System.String[]
      description: ''
    return:
      type: SuperOffice.CRM.ProductInfo[]
      description: Return products based on an array of unique ERP keys; handy when you’ve found products through archiveproviders or other mechanisms that leave you holding an ERPKey
    content.vb: Function GetProducts(context As QuoteAlternativeContextInfo, erpProductKeys As String()) As ProductInfo()
  overload: SuperOffice.CRM.IQuoteConnector.GetProducts*
  nameWithType.vb: IQuoteConnector.GetProducts(QuoteAlternativeContextInfo, String())
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetProducts(SuperOffice.CRM.QuoteAlternativeContextInfo, String())
  name.vb: GetProducts(QuoteAlternativeContextInfo, String())
- uid: SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  id: GetQuoteLinesFromProduct(SuperOffice.CRM.QuoteAlternativeContextInfo,System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetQuoteLinesFromProduct(QuoteAlternativeContextInfo, string)
  nameWithType: IQuoteConnector.GetQuoteLinesFromProduct(QuoteAlternativeContextInfo, string)
  fullName: SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct(SuperOffice.CRM.QuoteAlternativeContextInfo, string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Given a product ERP Key, return one or more quote lines with the product data filled in, and some default values

    , typically quantity set to 1 (but not necessarily!)

    The quoteLineId will be provided by SuperOffice later.
  example: []
  syntax:
    content: QuoteLineInfo[] GetQuoteLinesFromProduct(QuoteAlternativeContextInfo context, string erpProductKey)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: ''
    - id: erpProductKey
      type: System.String
      description: ''
    return:
      type: SuperOffice.CRM.QuoteLineInfo[]
      description: Return the QuoteLine(-s) with the product info filled in.
    content.vb: Function GetQuoteLinesFromProduct(context As QuoteAlternativeContextInfo, erpProductKey As String) As QuoteLineInfo()
  overload: SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      If the erpProductKey is null or empty
                  , the function will throw an ArgumentException.
  - type: System.Exception
    commentId: T:System.Exception
    description: >-
      If the product is not found
                  , the function will throw an Exception.
  nameWithType.vb: IQuoteConnector.GetQuoteLinesFromProduct(QuoteAlternativeContextInfo, String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct(SuperOffice.CRM.QuoteAlternativeContextInfo, String)
  name.vb: GetQuoteLinesFromProduct(QuoteAlternativeContextInfo, String)
- uid: SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages(System.String)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages(System.String)
  id: GetNumberOfProductImages(System.String)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetNumberOfProductImages(string)
  nameWithType: IQuoteConnector.GetNumberOfProductImages(string)
  fullName: SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages(string)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: Gets the number of images available for this product
  example: []
  syntax:
    content: int GetNumberOfProductImages(string erpProductKey)
    parameters:
    - id: erpProductKey
      type: System.String
      description: ''
    return:
      type: System.Int32
      description: Count of images
    content.vb: Function GetNumberOfProductImages(erpProductKey As String) As Integer
  overload: SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages*
  nameWithType.vb: IQuoteConnector.GetNumberOfProductImages(String)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages(String)
  name.vb: GetNumberOfProductImages(String)
- uid: SuperOffice.CRM.IQuoteConnector.GetProductImage(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetProductImage(System.String,System.Int32)
  id: GetProductImage(System.String,System.Int32)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetProductImage(string, int)
  nameWithType: IQuoteConnector.GetProductImage(string, int)
  fullName: SuperOffice.CRM.IQuoteConnector.GetProductImage(string, int)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: Gets the full size picture of the given product.
  example: []
  syntax:
    content: string GetProductImage(string erpProductKey, int rank)
    parameters:
    - id: erpProductKey
      type: System.String
      description: ''
    - id: rank
      type: System.Int32
      description: Which of the images to return, will in the first version only ask for the first.
    return:
      type: System.String
      description: >-
        Returns the full size picture of the given product.

        Return NULL if no picture available.
    content.vb: Function GetProductImage(erpProductKey As String, rank As Integer) As String
  overload: SuperOffice.CRM.IQuoteConnector.GetProductImage*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      If the erpProductKey is null or empty
                  , the function will throw an ArgumentException.
  - type: System.Exception
    commentId: T:System.Exception
    description: >-
      If the product is not found
                  , the function will throw an Exception.
  nameWithType.vb: IQuoteConnector.GetProductImage(String, Integer)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetProductImage(String, Integer)
  name.vb: GetProductImage(String, Integer)
- uid: SuperOffice.CRM.IQuoteConnector.GetSearchableFields
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetSearchableFields
  id: GetSearchableFields
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetSearchableFields()
  nameWithType: IQuoteConnector.GetSearchableFields()
  fullName: SuperOffice.CRM.IQuoteConnector.GetSearchableFields()
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Get metadata about the fields that can be used as search criteria. Note that

    they do not have to be the same as the fields in the ProductInfo structure;

    but erpPriceListKey has to be supported.
  remarks: >-
    There are three levels of searching:<br />

    a) Quick search through IProductProvider.FindProduct - this is mandatory for all connectors that provide products<br />

    b) Advanced search through IProductSearchProvider - this is optional, and implements are more generic search, 

    but still with a fixed result type (ProductInfo array)<br />

    c) Implement an Archive Provider called FindProduct&lt;Your connector name&gt; - this is a fully custom provider

    that can do whatever it wants, but it has to support a minimal result and restriction column set.

    <p></p>

    This interface defines alternative <b>b)</b> of the above list.
  example: []
  syntax:
    content: FieldMetadataInfo[] GetSearchableFields()
    return:
      type: SuperOffice.CRM.FieldMetadataInfo[]
      description: Metadata structures
    content.vb: Function GetSearchableFields() As FieldMetadataInfo()
  overload: SuperOffice.CRM.IQuoteConnector.GetSearchableFields*
- uid: SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync(SuperOffice.CRM.SearchRestrictionInfo[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync(SuperOffice.CRM.SearchRestrictionInfo[],System.Threading.CancellationToken)
  id: GetSearchResultsAsync(SuperOffice.CRM.SearchRestrictionInfo[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetSearchResultsAsync(SearchRestrictionInfo[], CancellationToken)
  nameWithType: IQuoteConnector.GetSearchResultsAsync(SearchRestrictionInfo[], CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync(SuperOffice.CRM.SearchRestrictionInfo[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: Perform the advanced search and return results
  example: []
  syntax:
    content: IAsyncEnumerable<ProductInfo> GetSearchResultsAsync(SearchRestrictionInfo[] restrictions, CancellationToken cancellationToken = default)
    parameters:
    - id: restrictions
      type: SuperOffice.CRM.SearchRestrictionInfo[]
      description: Array of restrictions chosen by the user; see <xref href="SuperOffice.CRM.SearchRestrictionInfo" data-throw-if-not-resolved="false"></xref> for details
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.ProductInfo}
      description: Array (possibly empty) of hits, populated as fully as reasonably possible (should follow same policy as IProductProvider.FindProducts
    content.vb: Function GetSearchResultsAsync(restrictions As SearchRestrictionInfo(), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of ProductInfo)
  overload: SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync*
  nameWithType.vb: IQuoteConnector.GetSearchResultsAsync(SearchRestrictionInfo(), CancellationToken)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync(SuperOffice.CRM.SearchRestrictionInfo(), System.Threading.CancellationToken)
  name.vb: GetSearchResultsAsync(SearchRestrictionInfo(), CancellationToken)
- uid: SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.String[],System.Threading.CancellationToken)
  id: OnQuoteLineChangedAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: OnQuoteLineChangedAsync(QuoteAlternativeContextInfo, QuoteLineInfo, string[], CancellationToken)
  nameWithType: IQuoteConnector.OnQuoteLineChangedAsync(QuoteAlternativeContextInfo, QuoteLineInfo, string[], CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, SuperOffice.CRM.QuoteLineInfo, string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Called when the user has changed a field in the Quote Line.

    The QuoteContext is readonly; QuoteLine may be changed in the return value. 

    Response time must be fast since this method is called often (every time a field is changed).
  remarks: >-
    The connect can signal errors or warnings by setting the <xref href="SuperOffice.CRM.QuoteLineInfo.Status" data-throw-if-not-resolved="false"></xref> and <xref href="SuperOffice.CRM.QuoteLineInfo.Reason" data-throw-if-not-resolved="false"></xref> fields. 

    This information will be displayed in the Quote Line dialog and in the quote-line archive.
  example: []
  syntax:
    content: Task<QuoteLineInfo> OnQuoteLineChangedAsync(QuoteAlternativeContextInfo context, QuoteLineInfo ql, string[] changedFields, CancellationToken cancellationToken = default)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: The alternative this quoteline belongs to
    - id: ql
      type: SuperOffice.CRM.QuoteLineInfo
      description: The changed quoteline
    - id: changedFields
      type: System.String[]
      description: 'List of fields that were changed, in the format: "TableName.FieldName"'
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteLineInfo}
      description: The updated quote line
    content.vb: Function OnQuoteLineChangedAsync(context As QuoteAlternativeContextInfo, ql As QuoteLineInfo, changedFields As String(), cancellationToken As CancellationToken = Nothing) As Task(Of QuoteLineInfo)
  overload: SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync*
  nameWithType.vb: IQuoteConnector.OnQuoteLineChangedAsync(QuoteAlternativeContextInfo, QuoteLineInfo, String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, SuperOffice.CRM.QuoteLineInfo, String(), System.Threading.CancellationToken)
  name.vb: OnQuoteLineChangedAsync(QuoteAlternativeContextInfo, QuoteLineInfo, String(), CancellationToken)
- uid: SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  id: RecalculateQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: RecalculateQuoteAlternativeAsync(QuoteAlternativeContextInfo, CancellationToken)
  nameWithType: IQuoteConnector.RecalculateQuoteAlternativeAsync(QuoteAlternativeContextInfo, CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    The user is finished with entering the quotelines, and wants to calculate the order discount (alternative discount)

    on this alternative.

    This method is called whenever the quote lines are changed in the alternative, or when the user clicks the RECALCULATE button.
  remarks: >-
    The connector may signal problems with the quote by setting the <xref href="SuperOffice.CRM.QuoteAlternativeInfo.Status?text=Quote+Alternative+Status" data-throw-if-not-resolved="false"></xref> 

    to Error, Warning or OkWithInfo, and fill in the alternative's Reason field with an explanation.

    <p></p>

    Use <xref href="SuperOffice.CRM.QuoteCalculation.CalculateQuoteAlternativeWithLines(SuperOffice.CRM.QuoteAlternativeWithLinesInfo)" data-throw-if-not-resolved="false"></xref> to help you calculate amounts.
  example: []
  syntax:
    content: Task<QuoteAlternativeWithLinesInfo> RecalculateQuoteAlternativeAsync(QuoteAlternativeContextInfo context, CancellationToken cancellationToken = default)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: The context as it appears to the user
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteAlternativeWithLinesInfo}
      description: The updated alternative
    content.vb: Function RecalculateQuoteAlternativeAsync(context As QuoteAlternativeContextInfo, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeWithLinesInfo)
  overload: SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync*
- uid: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
  id: ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: ValidateQuoteVersionAsync(QuoteVersionContextInfo, QuoteAction, CancellationToken)
  nameWithType: IQuoteConnector.ValidateQuoteVersionAsync(QuoteVersionContextInfo, QuoteAction, CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo, SuperOffice.CRM.QuoteAction, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Validates the version, looks for problems. Will typically change the Status and Reason fields, possibly change the State to NeedsApproval.

    Should validate all the alternatives and their quote-lines.

    The user is finished with entering the quote-lines, and wants to prepare the sending of the quote. 

    This method gives the ERP system a chance to enforce its business rules.

    <p></p>

    This method is called whenever the user clicks the SEND button, the PLACE ORDER or closes the quote dialog. 

    Quote Lines, Alternatives, Version and Quote fields can be changed in the return value. 

    Use <xref href="SuperOffice.CRM.QuoteCalculation.CalculateVersionWithAlternatives(SuperOffice.CRM.QuoteVersionContextInfo)" data-throw-if-not-resolved="false"></xref> to help you calculate amounts.
  remarks: >-
    Validation should not change the prices on quotelines - it should ensure conformance to business rules.

    <p></p>

    A draft quote version will have state = <xref href="QuoteVersionStateInfo.DraftNotCalculated" data-throw-if-not-resolved="false"></xref> when called. 

    The connector should set the version state to QuoteVersionStateInfo.DraftCalculated

    if the calculations were successful. Leave the state as DraftNotCalculated if the ERP system was not available or some other factor that made the calculation unsuccessful.

    <p></p>

    The connector can trigger the approval workflow by setting the state to <xref href="QuoteVersionStateInfo.DraftNeedsApproval" data-throw-if-not-resolved="false"></xref>. When a user with the approval permission 

    has approved or rejected the quote, the quote version state will be <xref href="QuoteVersionStateInfo.DraftApproved" data-throw-if-not-resolved="false"></xref> or <xref href="QuoteVersionStateInfo.DraftNotApproved" data-throw-if-not-resolved="false"></xref>.

    <p></p>

    Note that recalculate may also be called when the quote is Approved, or Archived.  In these cases, please leave the quote version state alone.

    <p></p>

    The connector may signal problems with the quote by setting the <xref href="SuperOffice.CRM.QuoteVersionInfo.Status?text=Quote+Version+Status" data-throw-if-not-resolved="false"></xref> 

    to Error, Warning or OkWithInfo, and fill in the version's Reason field with an explanation.

    <p></p>

    The <xref href="SuperOffice.CRM.QuoteConnectorBase" data-throw-if-not-resolved="false"></xref> implementation of this method defines methods for validating <xref href="SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo%2cSuperOffice.CRM.QuoteLineInfo%2cSystem.Boolean%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: Task<QuoteResponseInfo> ValidateQuoteVersionAsync(QuoteVersionContextInfo context, QuoteAction action, CancellationToken cancellationToken = default)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteVersionContextInfo
      description: The context as it appears to the user
    - id: action
      type: SuperOffice.CRM.QuoteAction
      description: The action that started this call; the context it is called in, like place order or send quote
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteResponseInfo}
      description: The updated Context, with changes to State and UserExplanation if needed.
    content.vb: Function ValidateQuoteVersionAsync(context As QuoteVersionContextInfo, action As QuoteAction, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteResponseInfo)
  overload: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync*
- uid: SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Collections.Generic.HashSet{System.String})
  commentId: M:SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Collections.Generic.HashSet{System.String})
  id: UpdateQuoteVersionPricesAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Collections.Generic.HashSet{System.String})
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: UpdateQuoteVersionPricesAsync(QuoteVersionContextInfo, HashSet<string>)
  nameWithType: IQuoteConnector.UpdateQuoteVersionPricesAsync(QuoteVersionContextInfo, HashSet<string>)
  fullName: SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync(SuperOffice.CRM.QuoteVersionContextInfo, System.Collections.Generic.HashSet<string>)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Fetch new prices from the pricelist for all the alternatives in the quote.

    This method is explicitly triggered by the user clicking the UPDATE PRICES button in the quote dialog.

    <p></p>

    The connector should update all the quotelines on all the alternatives with new list prices, minimum prices, cost prices, etc from the pricelist, and update the ERP discount suggestions.
  remarks: The system will call <xref href="SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo%2cSuperOffice.CRM.QuoteAction%2cSystem.Threading.CancellationToken)" data-throw-if-not-resolved="false"></xref> after calling this method to determine the new version state.
  example: []
  syntax:
    content: Task<QuoteVersionResponseInfo> UpdateQuoteVersionPricesAsync(QuoteVersionContextInfo context, HashSet<string> writeableFields)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteVersionContextInfo
      description: The quote version, with alternatives and quote lines
    - id: writeableFields
      type: System.Collections.Generic.HashSet{System.String}
      description: Collection of quoteline fieldnames that are writeable according to the QuotelineConfiguration table. Fieldnames are all lowercase.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteVersionResponseInfo}
      description: Updated quote version, with alternatives and quote lines.
    content.vb: Function UpdateQuoteVersionPricesAsync(context As QuoteVersionContextInfo, writeableFields As HashSet(Of String)) As Task(Of QuoteVersionResponseInfo)
  overload: SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync*
  nameWithType.vb: IQuoteConnector.UpdateQuoteVersionPricesAsync(QuoteVersionContextInfo, HashSet(Of String))
  fullName.vb: SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync(SuperOffice.CRM.QuoteVersionContextInfo, System.Collections.Generic.HashSet(Of String))
  name.vb: UpdateQuoteVersionPricesAsync(QuoteVersionContextInfo, HashSet(Of String))
- uid: SuperOffice.CRM.IQuoteConnector.PlaceOrder(SuperOffice.CRM.QuoteAlternativeContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.PlaceOrder(SuperOffice.CRM.QuoteAlternativeContextInfo)
  id: PlaceOrder(SuperOffice.CRM.QuoteAlternativeContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: PlaceOrder(QuoteAlternativeContextInfo)
  nameWithType: IQuoteConnector.PlaceOrder(QuoteAlternativeContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.PlaceOrder(SuperOffice.CRM.QuoteAlternativeContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Some ERP systems will be able to turn quotes into orders. The user selects a quote alternative to send to 

    the ERP system and clicks OK in the CREATE ORDER dialog.

    After the Quote has been accepted/sold, then the user can check the delivery status with the ERP system.

    <p></p>

    Place the order in the ERP system. 

    If the operation retuns successfully, the Quote will be locked (completed) in the CRM system

    and all updates will come from the ERP system thru the GetOrderState function.

    <p></p>

    Requires that the Create-Order capability is true. If the Create-Order capability is false, then this

    function is not called.
  example: []
  syntax:
    content: PlaceOrderResponseInfo PlaceOrder(QuoteAlternativeContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: The selected Quote Alternative, along with the version and lines
    return:
      type: SuperOffice.CRM.PlaceOrderResponseInfo
      description: >-
        The context, with any updates. The ERPOrderKey should be filled in with the id of the generated order.
                    If the returned state in not OK, then the PlaceOrder call is aborted and the error message displayed.
    content.vb: Function PlaceOrder(context As QuoteAlternativeContextInfo) As PlaceOrderResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.PlaceOrder*
- uid: SuperOffice.CRM.IQuoteConnector.GetOrderState(SuperOffice.CRM.QuoteAlternativeContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetOrderState(SuperOffice.CRM.QuoteAlternativeContextInfo)
  id: GetOrderState(SuperOffice.CRM.QuoteAlternativeContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetOrderState(QuoteAlternativeContextInfo)
  nameWithType: IQuoteConnector.GetOrderState(QuoteAlternativeContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.GetOrderState(SuperOffice.CRM.QuoteAlternativeContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    After the order is created in the ERP system and the user wants to see what the current state of 

    the order is this function gets called.

    <p></p>

    This new version will be displayed in the GUI.

    <p></p>

    Requires that the Order-State capability is true.
  example: []
  syntax:
    content: OrderResponseInfo GetOrderState(QuoteAlternativeContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: ''
    return:
      type: SuperOffice.CRM.OrderResponseInfo
      description: >-
        If nothing has changed it should return null.

        To create a new QuoteVersion, set OrderResponseInfo.CRMQuoteVersion.QuoteVersionId to 0, and return a new version with a new alternative and quotelines describing the current state.
    content.vb: Function GetOrderState(context As QuoteAlternativeContextInfo) As OrderResponseInfo
  overload: SuperOffice.CRM.IQuoteConnector.GetOrderState*
- uid: SuperOffice.CRM.IQuoteConnector.GetAddresses(SuperOffice.CRM.QuoteAlternativeContextInfo)
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetAddresses(SuperOffice.CRM.QuoteAlternativeContextInfo)
  id: GetAddresses(SuperOffice.CRM.QuoteAlternativeContextInfo)
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: GetAddresses(QuoteAlternativeContextInfo)
  nameWithType: IQuoteConnector.GetAddresses(QuoteAlternativeContextInfo)
  fullName: SuperOffice.CRM.IQuoteConnector.GetAddresses(SuperOffice.CRM.QuoteAlternativeContextInfo)
  type: Method
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: >-
    Gets two addresses:<p></p>

    - the invoice address - [0]. <p></p>

    - the delivery address - [1]. <p></p>
  example: []
  syntax:
    content: AddressInfo[] GetAddresses(QuoteAlternativeContextInfo context)
    parameters:
    - id: context
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
      description: ''
    return:
      type: SuperOffice.CRM.AddressInfo[]
      description: Returns null if no address was found.
    content.vb: Function GetAddresses(context As QuoteAlternativeContextInfo) As AddressInfo()
  overload: SuperOffice.CRM.IQuoteConnector.GetAddresses*
- uid: SuperOffice.CRM.IQuoteConnector.CRMConnectionId
  commentId: P:SuperOffice.CRM.IQuoteConnector.CRMConnectionId
  id: CRMConnectionId
  parent: SuperOffice.CRM.IQuoteConnector
  langs:
  - csharp
  - vb
  name: CRMConnectionId
  nameWithType: IQuoteConnector.CRMConnectionId
  fullName: SuperOffice.CRM.IQuoteConnector.CRMConnectionId
  type: Property
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: The id of this connection in the CRM system
  example: []
  syntax:
    content: int CRMConnectionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property CRMConnectionId As Integer
  overload: SuperOffice.CRM.IQuoteConnector.CRMConnectionId*
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<IQuoteConnector, To>(IQuoteConnector)
  nameWithType: EnumUtil.MapEnums<IQuoteConnector, To>(IQuoteConnector)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.IQuoteConnector, To>(SuperOffice.CRM.IQuoteConnector)
  nameWithType.vb: EnumUtil.MapEnums(Of IQuoteConnector, To)(IQuoteConnector)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.IQuoteConnector, To)(SuperOffice.CRM.IQuoteConnector)
  name.vb: MapEnums(Of IQuoteConnector, To)(IQuoteConnector)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.IQuoteConnector)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.IQuoteConnector)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<IQuoteConnector, To>(IQuoteConnector)
  nameWithType: Converters.MapEnums<IQuoteConnector, To>(IQuoteConnector)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.IQuoteConnector, To>(SuperOffice.CRM.IQuoteConnector)
  nameWithType.vb: Converters.MapEnums(Of IQuoteConnector, To)(IQuoteConnector)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.IQuoteConnector, To)(SuperOffice.CRM.IQuoteConnector)
  name.vb: MapEnums(Of IQuoteConnector, To)(IQuoteConnector)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.IQuoteConnector)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.IQuoteConnector)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.IQuoteConnector
    name: IQuoteConnector
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
  commentId: M:SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
  parent: SuperOffice.CRM.IQuoteConnector
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_InitializeConnection_SuperOffice_CRM_QuoteConnectionInfo_SuperOffice_CRM_UserInfo_System_Boolean_System_Collections_Generic_Dictionary_System_String_System_String__SuperOffice_CRM_IProductRegisterCache_
  name: InitializeConnection(QuoteConnectionInfo, UserInfo, bool, Dictionary<string, string>, IProductRegisterCache)
  nameWithType: IQuoteConnector.InitializeConnection(QuoteConnectionInfo, UserInfo, bool, Dictionary<string, string>, IProductRegisterCache)
  fullName: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo, SuperOffice.CRM.UserInfo, bool, System.Collections.Generic.Dictionary<string, string>, SuperOffice.CRM.IProductRegisterCache)
  nameWithType.vb: IQuoteConnector.InitializeConnection(QuoteConnectionInfo, UserInfo, Boolean, Dictionary(Of String, String), IProductRegisterCache)
  fullName.vb: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo, SuperOffice.CRM.UserInfo, Boolean, System.Collections.Generic.Dictionary(Of String, String), SuperOffice.CRM.IProductRegisterCache)
  name.vb: InitializeConnection(QuoteConnectionInfo, UserInfo, Boolean, Dictionary(Of String, String), IProductRegisterCache)
  spec.csharp:
  - uid: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
    name: InitializeConnection
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_InitializeConnection_SuperOffice_CRM_QuoteConnectionInfo_SuperOffice_CRM_UserInfo_System_Boolean_System_Collections_Generic_Dictionary_System_String_System_String__SuperOffice_CRM_IProductRegisterCache_
  - name: (
  - uid: SuperOffice.CRM.QuoteConnectionInfo
    name: QuoteConnectionInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteConnectionInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.UserInfo
    name: UserInfo
    isExternal: true
    href: SuperOffice.CRM.UserInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.IProductRegisterCache
    name: IProductRegisterCache
    isExternal: true
    href: SuperOffice.CRM.IProductRegisterCache.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.IQuoteConnector.InitializeConnection(SuperOffice.CRM.QuoteConnectionInfo,SuperOffice.CRM.UserInfo,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String},SuperOffice.CRM.IProductRegisterCache)
    name: InitializeConnection
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_InitializeConnection_SuperOffice_CRM_QuoteConnectionInfo_SuperOffice_CRM_UserInfo_System_Boolean_System_Collections_Generic_Dictionary_System_String_System_String__SuperOffice_CRM_IProductRegisterCache_
  - name: (
  - uid: SuperOffice.CRM.QuoteConnectionInfo
    name: QuoteConnectionInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteConnectionInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.UserInfo
    name: UserInfo
    isExternal: true
    href: SuperOffice.CRM.UserInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.IProductRegisterCache
    name: IProductRegisterCache
    isExternal: true
    href: SuperOffice.CRM.IProductRegisterCache.html
  - name: )
- uid: SuperOffice.CRM.FieldMetadataInfo.Rank
  commentId: P:SuperOffice.CRM.FieldMetadataInfo.Rank
  isExternal: true
  href: SuperOffice.CRM.FieldMetadataInfo.html#SuperOffice_CRM_FieldMetadataInfo_Rank
  name: Rank
  nameWithType: FieldMetadataInfo.Rank
  fullName: SuperOffice.CRM.FieldMetadataInfo.Rank
- uid: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetConfigurationFields
  name: GetConfigurationFields
  nameWithType: IQuoteConnector.GetConfigurationFields
  fullName: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
- uid: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.FieldMetadataInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.FieldMetadataInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, FieldMetadataInfo>
  nameWithType: Dictionary<string, FieldMetadataInfo>
  fullName: System.Collections.Generic.Dictionary<string, SuperOffice.CRM.FieldMetadataInfo>
  nameWithType.vb: Dictionary(Of String, FieldMetadataInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, SuperOffice.CRM.FieldMetadataInfo)
  name.vb: Dictionary(Of String, FieldMetadataInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.FieldMetadataInfo
    name: FieldMetadataInfo
    isExternal: true
    href: SuperOffice.CRM.FieldMetadataInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.FieldMetadataInfo
    name: FieldMetadataInfo
    isExternal: true
    href: SuperOffice.CRM.FieldMetadataInfo.html
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector
  commentId: T:SuperOffice.CRM.IQuoteConnector
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html
  name: IQuoteConnector
  nameWithType: IQuoteConnector
  fullName: SuperOffice.CRM.IQuoteConnector
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.CRM.IQuoteConnector.TestConnection*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.TestConnection
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_TestConnection_System_Collections_Generic_Dictionary_System_String_System_String__
  name: TestConnection
  nameWithType: IQuoteConnector.TestConnection
  fullName: SuperOffice.CRM.IQuoteConnector.TestConnection
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.PluginResponseInfo
  commentId: T:SuperOffice.CRM.PluginResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.PluginResponseInfo.html
  name: PluginResponseInfo
  nameWithType: PluginResponseInfo
  fullName: SuperOffice.CRM.PluginResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
  commentId: M:SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
  parent: SuperOffice.CRM.IQuoteConnector
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetConfigurationFields
  name: GetConfigurationFields()
  nameWithType: IQuoteConnector.GetConfigurationFields()
  fullName: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields()
  spec.csharp:
  - uid: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
    name: GetConfigurationFields
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetConfigurationFields
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.IQuoteConnector.GetConfigurationFields
    name: GetConfigurationFields
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetConfigurationFields
  - name: (
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.InitializeConnection*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.InitializeConnection
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_InitializeConnection_SuperOffice_CRM_QuoteConnectionInfo_SuperOffice_CRM_UserInfo_System_Boolean_System_Collections_Generic_Dictionary_System_String_System_String__SuperOffice_CRM_IProductRegisterCache_
  name: InitializeConnection
  nameWithType: IQuoteConnector.InitializeConnection
  fullName: SuperOffice.CRM.IQuoteConnector.InitializeConnection
- uid: SuperOffice.CRM.QuoteConnectionInfo
  commentId: T:SuperOffice.CRM.QuoteConnectionInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteConnectionInfo.html
  name: QuoteConnectionInfo
  nameWithType: QuoteConnectionInfo
  fullName: SuperOffice.CRM.QuoteConnectionInfo
- uid: SuperOffice.CRM.UserInfo
  commentId: T:SuperOffice.CRM.UserInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.UserInfo.html
  name: UserInfo
  nameWithType: UserInfo
  fullName: SuperOffice.CRM.UserInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.IProductRegisterCache
  commentId: T:SuperOffice.CRM.IProductRegisterCache
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.IProductRegisterCache.html
  name: IProductRegisterCache
  nameWithType: IProductRegisterCache
  fullName: SuperOffice.CRM.IProductRegisterCache
- uid: SuperOffice.CRM.IQuoteConnector.GetCapabilities*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetCapabilities
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetCapabilities
  name: GetCapabilities
  nameWithType: IQuoteConnector.GetCapabilities
  fullName: SuperOffice.CRM.IQuoteConnector.GetCapabilities
- uid: System.Collections.Generic.Dictionary{System.String,System.Boolean}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, bool>
  nameWithType: Dictionary<string, bool>
  fullName: System.Collections.Generic.Dictionary<string, bool>
  nameWithType.vb: Dictionary(Of String, Boolean)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Boolean)
  name.vb: Dictionary(Of String, Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.CRMQuoteConnectorCapabilities
  commentId: T:SuperOffice.CRM.CRMQuoteConnectorCapabilities
  isExternal: true
  href: SuperOffice.CRM.CRMQuoteConnectorCapabilities.html
  name: CRMQuoteConnectorCapabilities
  nameWithType: CRMQuoteConnectorCapabilities
  fullName: SuperOffice.CRM.CRMQuoteConnectorCapabilities
- uid: SuperOffice.CRM.IQuoteConnector.CanProvideCapability*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.CanProvideCapability
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_CanProvideCapability_System_String_
  name: CanProvideCapability
  nameWithType: IQuoteConnector.CanProvideCapability
  fullName: SuperOffice.CRM.IQuoteConnector.CanProvideCapability
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnBeforeCreateQuote_SuperOffice_CRM_QuoteAlternativeContextInfo_
  name: OnBeforeCreateQuote
  nameWithType: IQuoteConnector.OnBeforeCreateQuote
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuote
- uid: SuperOffice.CRM.QuoteAlternativeContextInfo
  commentId: T:SuperOffice.CRM.QuoteAlternativeContextInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteAlternativeContextInfo.html
  name: QuoteAlternativeContextInfo
  nameWithType: QuoteAlternativeContextInfo
  fullName: SuperOffice.CRM.QuoteAlternativeContextInfo
- uid: SuperOffice.CRM.QuoteResponseInfo
  commentId: T:SuperOffice.CRM.QuoteResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteResponseInfo.html
  name: QuoteResponseInfo
  nameWithType: QuoteResponseInfo
  fullName: SuperOffice.CRM.QuoteResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnBeforeCreateQuoteVersion_SuperOffice_CRM_QuoteVersionContextInfo_
  name: OnBeforeCreateQuoteVersion
  nameWithType: IQuoteConnector.OnBeforeCreateQuoteVersion
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteVersion
- uid: SuperOffice.CRM.QuoteVersionContextInfo
  commentId: T:SuperOffice.CRM.QuoteVersionContextInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteVersionContextInfo.html
  name: QuoteVersionContextInfo
  nameWithType: QuoteVersionContextInfo
  fullName: SuperOffice.CRM.QuoteVersionContextInfo
- uid: SuperOffice.CRM.QuoteVersionResponseInfo
  commentId: T:SuperOffice.CRM.QuoteVersionResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteVersionResponseInfo.html
  name: QuoteVersionResponseInfo
  nameWithType: QuoteVersionResponseInfo
  fullName: SuperOffice.CRM.QuoteVersionResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnBeforeCreateQuoteAlternative_SuperOffice_CRM_QuoteAlternativeContextInfo_
  name: OnBeforeCreateQuoteAlternative
  nameWithType: IQuoteConnector.OnBeforeCreateQuoteAlternative
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeCreateQuoteAlternative
- uid: SuperOffice.CRM.QuoteAlternativeResponseInfo
  commentId: T:SuperOffice.CRM.QuoteAlternativeResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteAlternativeResponseInfo.html
  name: QuoteAlternativeResponseInfo
  nameWithType: QuoteAlternativeResponseInfo
  fullName: SuperOffice.CRM.QuoteAlternativeResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnAfterSaveQuote_SuperOffice_CRM_QuoteAlternativeContextInfo_
  name: OnAfterSaveQuote
  nameWithType: IQuoteConnector.OnAfterSaveQuote
  fullName: SuperOffice.CRM.IQuoteConnector.OnAfterSaveQuote
- uid: SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnBeforeDeleteQuote_SuperOffice_CRM_QuoteInfo_SuperOffice_CRM_ISaleInfo_SuperOffice_CRM_IContactInfo_
  name: OnBeforeDeleteQuote
  nameWithType: IQuoteConnector.OnBeforeDeleteQuote
  fullName: SuperOffice.CRM.IQuoteConnector.OnBeforeDeleteQuote
- uid: SuperOffice.CRM.QuoteInfo
  commentId: T:SuperOffice.CRM.QuoteInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteInfo.html
  name: QuoteInfo
  nameWithType: QuoteInfo
  fullName: SuperOffice.CRM.QuoteInfo
- uid: SuperOffice.CRM.ISaleInfo
  commentId: T:SuperOffice.CRM.ISaleInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.ISaleInfo.html
  name: ISaleInfo
  nameWithType: ISaleInfo
  fullName: SuperOffice.CRM.ISaleInfo
- uid: SuperOffice.CRM.IContactInfo
  commentId: T:SuperOffice.CRM.IContactInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.IContactInfo.html
  name: IContactInfo
  nameWithType: IContactInfo
  fullName: SuperOffice.CRM.IContactInfo
- uid: SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnAfterSentQuoteVersion_SuperOffice_CRM_QuoteVersionContextInfo_
  name: OnAfterSentQuoteVersion
  nameWithType: IQuoteConnector.OnAfterSentQuoteVersion
  fullName: SuperOffice.CRM.IQuoteConnector.OnAfterSentQuoteVersion
- uid: SuperOffice.CRM.QuoteSentResponseInfo
  commentId: T:SuperOffice.CRM.QuoteSentResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteSentResponseInfo.html
  name: QuoteSentResponseInfo
  nameWithType: QuoteSentResponseInfo
  fullName: SuperOffice.CRM.QuoteSentResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetQuoteListAsync_System_String_System_Threading_CancellationToken_
  name: GetQuoteListAsync
  nameWithType: IQuoteConnector.GetQuoteListAsync
  fullName: SuperOffice.CRM.IQuoteConnector.GetQuoteListAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.ListItemInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.ListItemInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ListItemInfo[]>
  nameWithType: Task<ListItemInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.ListItemInfo[]>
  nameWithType.vb: Task(Of ListItemInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.ListItemInfo())
  name.vb: Task(Of ListItemInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.ListItemInfo
    name: ListItemInfo
    isExternal: true
    href: SuperOffice.CRM.ListItemInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ListItemInfo
    name: ListItemInfo
    isExternal: true
    href: SuperOffice.CRM.ListItemInfo.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetNumberOfActivePriceLists_System_String_
  name: GetNumberOfActivePriceLists
  nameWithType: IQuoteConnector.GetNumberOfActivePriceLists
  fullName: SuperOffice.CRM.IQuoteConnector.GetNumberOfActivePriceLists
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.IQuoteConnector.GetActivePriceLists*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetActivePriceLists
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetActivePriceLists_System_String_
  name: GetActivePriceLists
  nameWithType: IQuoteConnector.GetActivePriceLists
  fullName: SuperOffice.CRM.IQuoteConnector.GetActivePriceLists
- uid: SuperOffice.CRM.PriceListInfo[]
  isExternal: true
  href: SuperOffice.CRM.PriceListInfo.html
  name: PriceListInfo[]
  nameWithType: PriceListInfo[]
  fullName: SuperOffice.CRM.PriceListInfo[]
  nameWithType.vb: PriceListInfo()
  fullName.vb: SuperOffice.CRM.PriceListInfo()
  name.vb: PriceListInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.PriceListInfo
    name: PriceListInfo
    isExternal: true
    href: SuperOffice.CRM.PriceListInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.PriceListInfo
    name: PriceListInfo
    isExternal: true
    href: SuperOffice.CRM.PriceListInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.GetAllPriceLists*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetAllPriceLists
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetAllPriceLists_System_String_
  name: GetAllPriceLists
  nameWithType: IQuoteConnector.GetAllPriceLists
  fullName: SuperOffice.CRM.IQuoteConnector.GetAllPriceLists
- uid: SuperOffice.CRM.IQuoteConnector.FindProductAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.FindProductAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_FindProductAsync_SuperOffice_CRM_QuoteAlternativeContextInfo_System_String_System_String_System_String_System_Threading_CancellationToken_
  name: FindProductAsync
  nameWithType: IQuoteConnector.FindProductAsync
  fullName: SuperOffice.CRM.IQuoteConnector.FindProductAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.ProductInfo[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.ProductInfo[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ProductInfo[]>
  nameWithType: Task<ProductInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.ProductInfo[]>
  nameWithType.vb: Task(Of ProductInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.ProductInfo())
  name.vb: Task(Of ProductInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.ProductInfo
    name: ProductInfo
    isExternal: true
    href: SuperOffice.CRM.ProductInfo.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ProductInfo
    name: ProductInfo
    isExternal: true
    href: SuperOffice.CRM.ProductInfo.html
  - name: (
  - name: )
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: SuperOffice.CRM.IQuoteConnector.GetProduct*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetProduct
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetProduct_SuperOffice_CRM_QuoteAlternativeContextInfo_System_String_
  name: GetProduct
  nameWithType: IQuoteConnector.GetProduct
  fullName: SuperOffice.CRM.IQuoteConnector.GetProduct
- uid: SuperOffice.CRM.ProductInfo
  commentId: T:SuperOffice.CRM.ProductInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.ProductInfo.html
  name: ProductInfo
  nameWithType: ProductInfo
  fullName: SuperOffice.CRM.ProductInfo
- uid: SuperOffice.CRM.IQuoteConnector.GetProducts*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetProducts
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetProducts_SuperOffice_CRM_QuoteAlternativeContextInfo_System_String___
  name: GetProducts
  nameWithType: IQuoteConnector.GetProducts
  fullName: SuperOffice.CRM.IQuoteConnector.GetProducts
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.ProductInfo[]
  isExternal: true
  href: SuperOffice.CRM.ProductInfo.html
  name: ProductInfo[]
  nameWithType: ProductInfo[]
  fullName: SuperOffice.CRM.ProductInfo[]
  nameWithType.vb: ProductInfo()
  fullName.vb: SuperOffice.CRM.ProductInfo()
  name.vb: ProductInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ProductInfo
    name: ProductInfo
    isExternal: true
    href: SuperOffice.CRM.ProductInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.ProductInfo
    name: ProductInfo
    isExternal: true
    href: SuperOffice.CRM.ProductInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetQuoteLinesFromProduct_SuperOffice_CRM_QuoteAlternativeContextInfo_System_String_
  name: GetQuoteLinesFromProduct
  nameWithType: IQuoteConnector.GetQuoteLinesFromProduct
  fullName: SuperOffice.CRM.IQuoteConnector.GetQuoteLinesFromProduct
- uid: SuperOffice.CRM.QuoteLineInfo[]
  isExternal: true
  href: SuperOffice.CRM.QuoteLineInfo.html
  name: QuoteLineInfo[]
  nameWithType: QuoteLineInfo[]
  fullName: SuperOffice.CRM.QuoteLineInfo[]
  nameWithType.vb: QuoteLineInfo()
  fullName.vb: SuperOffice.CRM.QuoteLineInfo()
  name.vb: QuoteLineInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteLineInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteLineInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetNumberOfProductImages_System_String_
  name: GetNumberOfProductImages
  nameWithType: IQuoteConnector.GetNumberOfProductImages
  fullName: SuperOffice.CRM.IQuoteConnector.GetNumberOfProductImages
- uid: SuperOffice.CRM.IQuoteConnector.GetProductImage*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetProductImage
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetProductImage_System_String_System_Int32_
  name: GetProductImage
  nameWithType: IQuoteConnector.GetProductImage
  fullName: SuperOffice.CRM.IQuoteConnector.GetProductImage
- uid: SuperOffice.CRM.IQuoteConnector.GetSearchableFields*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetSearchableFields
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetSearchableFields
  name: GetSearchableFields
  nameWithType: IQuoteConnector.GetSearchableFields
  fullName: SuperOffice.CRM.IQuoteConnector.GetSearchableFields
- uid: SuperOffice.CRM.FieldMetadataInfo[]
  isExternal: true
  href: SuperOffice.CRM.FieldMetadataInfo.html
  name: FieldMetadataInfo[]
  nameWithType: FieldMetadataInfo[]
  fullName: SuperOffice.CRM.FieldMetadataInfo[]
  nameWithType.vb: FieldMetadataInfo()
  fullName.vb: SuperOffice.CRM.FieldMetadataInfo()
  name.vb: FieldMetadataInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.FieldMetadataInfo
    name: FieldMetadataInfo
    isExternal: true
    href: SuperOffice.CRM.FieldMetadataInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.FieldMetadataInfo
    name: FieldMetadataInfo
    isExternal: true
    href: SuperOffice.CRM.FieldMetadataInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.SearchRestrictionInfo
  commentId: T:SuperOffice.CRM.SearchRestrictionInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.SearchRestrictionInfo.html
  name: SearchRestrictionInfo
  nameWithType: SearchRestrictionInfo
  fullName: SuperOffice.CRM.SearchRestrictionInfo
- uid: SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetSearchResultsAsync_SuperOffice_CRM_SearchRestrictionInfo___System_Threading_CancellationToken_
  name: GetSearchResultsAsync
  nameWithType: IQuoteConnector.GetSearchResultsAsync
  fullName: SuperOffice.CRM.IQuoteConnector.GetSearchResultsAsync
- uid: SuperOffice.CRM.SearchRestrictionInfo[]
  isExternal: true
  href: SuperOffice.CRM.SearchRestrictionInfo.html
  name: SearchRestrictionInfo[]
  nameWithType: SearchRestrictionInfo[]
  fullName: SuperOffice.CRM.SearchRestrictionInfo[]
  nameWithType.vb: SearchRestrictionInfo()
  fullName.vb: SuperOffice.CRM.SearchRestrictionInfo()
  name.vb: SearchRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.SearchRestrictionInfo
    name: SearchRestrictionInfo
    isExternal: true
    href: SuperOffice.CRM.SearchRestrictionInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.SearchRestrictionInfo
    name: SearchRestrictionInfo
    isExternal: true
    href: SuperOffice.CRM.SearchRestrictionInfo.html
  - name: (
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.ProductInfo}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.ProductInfo}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: SuperOffice.CRM.ProductInfo.html
  name: IAsyncEnumerable<ProductInfo>
  nameWithType: IAsyncEnumerable<ProductInfo>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.ProductInfo>
  nameWithType.vb: IAsyncEnumerable(Of ProductInfo)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.ProductInfo)
  name.vb: IAsyncEnumerable(Of ProductInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
  - name: <
  - uid: SuperOffice.CRM.ProductInfo
    name: ProductInfo
    isExternal: true
    href: SuperOffice.CRM.ProductInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ProductInfo
    name: ProductInfo
    isExternal: true
    href: SuperOffice.CRM.ProductInfo.html
  - name: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: System.Collections.Generic.IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
  - name: <
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: ''
  - name: )
- uid: SuperOffice.CRM.QuoteLineInfo.Status
  commentId: P:SuperOffice.CRM.QuoteLineInfo.Status
  isExternal: true
  href: SuperOffice.CRM.QuoteLineInfo.html#SuperOffice_CRM_QuoteLineInfo_Status
  name: Status
  nameWithType: QuoteLineInfo.Status
  fullName: SuperOffice.CRM.QuoteLineInfo.Status
- uid: SuperOffice.CRM.QuoteLineInfo.Reason
  commentId: P:SuperOffice.CRM.QuoteLineInfo.Reason
  isExternal: true
  href: SuperOffice.CRM.QuoteLineInfo.html#SuperOffice_CRM_QuoteLineInfo_Reason
  name: Reason
  nameWithType: QuoteLineInfo.Reason
  fullName: SuperOffice.CRM.QuoteLineInfo.Reason
- uid: SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_OnQuoteLineChangedAsync_SuperOffice_CRM_QuoteAlternativeContextInfo_SuperOffice_CRM_QuoteLineInfo_System_String___System_Threading_CancellationToken_
  name: OnQuoteLineChangedAsync
  nameWithType: IQuoteConnector.OnQuoteLineChangedAsync
  fullName: SuperOffice.CRM.IQuoteConnector.OnQuoteLineChangedAsync
- uid: SuperOffice.CRM.QuoteLineInfo
  commentId: T:SuperOffice.CRM.QuoteLineInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteLineInfo.html
  name: QuoteLineInfo
  nameWithType: QuoteLineInfo
  fullName: SuperOffice.CRM.QuoteLineInfo
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteLineInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.QuoteLineInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<QuoteLineInfo>
  nameWithType: Task<QuoteLineInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.QuoteLineInfo>
  nameWithType.vb: Task(Of QuoteLineInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.QuoteLineInfo)
  name.vb: Task(Of QuoteLineInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteLineInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteLineInfo.html
  - name: )
- uid: SuperOffice.CRM.QuoteAlternativeInfo.Status
  commentId: P:SuperOffice.CRM.QuoteAlternativeInfo.Status
  isExternal: true
  href: SuperOffice.CRM.QuoteAlternativeInfo.html#SuperOffice_CRM_QuoteAlternativeInfo_Status
  name: Status
  nameWithType: QuoteAlternativeInfo.Status
  fullName: SuperOffice.CRM.QuoteAlternativeInfo.Status
- uid: SuperOffice.CRM.QuoteCalculation.CalculateQuoteAlternativeWithLines(SuperOffice.CRM.QuoteAlternativeWithLinesInfo)
  commentId: M:SuperOffice.CRM.QuoteCalculation.CalculateQuoteAlternativeWithLines(SuperOffice.CRM.QuoteAlternativeWithLinesInfo)
  isExternal: true
  href: SuperOffice.CRM.QuoteCalculation.html#SuperOffice_CRM_QuoteCalculation_CalculateQuoteAlternativeWithLines_SuperOffice_CRM_QuoteAlternativeWithLinesInfo_
  name: CalculateQuoteAlternativeWithLines(QuoteAlternativeWithLinesInfo)
  nameWithType: QuoteCalculation.CalculateQuoteAlternativeWithLines(QuoteAlternativeWithLinesInfo)
  fullName: SuperOffice.CRM.QuoteCalculation.CalculateQuoteAlternativeWithLines(SuperOffice.CRM.QuoteAlternativeWithLinesInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.QuoteCalculation.CalculateQuoteAlternativeWithLines(SuperOffice.CRM.QuoteAlternativeWithLinesInfo)
    name: CalculateQuoteAlternativeWithLines
    isExternal: true
    href: SuperOffice.CRM.QuoteCalculation.html#SuperOffice_CRM_QuoteCalculation_CalculateQuoteAlternativeWithLines_SuperOffice_CRM_QuoteAlternativeWithLinesInfo_
  - name: (
  - uid: SuperOffice.CRM.QuoteAlternativeWithLinesInfo
    name: QuoteAlternativeWithLinesInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteAlternativeWithLinesInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.QuoteCalculation.CalculateQuoteAlternativeWithLines(SuperOffice.CRM.QuoteAlternativeWithLinesInfo)
    name: CalculateQuoteAlternativeWithLines
    isExternal: true
    href: SuperOffice.CRM.QuoteCalculation.html#SuperOffice_CRM_QuoteCalculation_CalculateQuoteAlternativeWithLines_SuperOffice_CRM_QuoteAlternativeWithLinesInfo_
  - name: (
  - uid: SuperOffice.CRM.QuoteAlternativeWithLinesInfo
    name: QuoteAlternativeWithLinesInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteAlternativeWithLinesInfo.html
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_RecalculateQuoteAlternativeAsync_SuperOffice_CRM_QuoteAlternativeContextInfo_System_Threading_CancellationToken_
  name: RecalculateQuoteAlternativeAsync
  nameWithType: IQuoteConnector.RecalculateQuoteAlternativeAsync
  fullName: SuperOffice.CRM.IQuoteConnector.RecalculateQuoteAlternativeAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteAlternativeWithLinesInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.QuoteAlternativeWithLinesInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<QuoteAlternativeWithLinesInfo>
  nameWithType: Task<QuoteAlternativeWithLinesInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.QuoteAlternativeWithLinesInfo>
  nameWithType.vb: Task(Of QuoteAlternativeWithLinesInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.QuoteAlternativeWithLinesInfo)
  name.vb: Task(Of QuoteAlternativeWithLinesInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.QuoteAlternativeWithLinesInfo
    name: QuoteAlternativeWithLinesInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteAlternativeWithLinesInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.QuoteAlternativeWithLinesInfo
    name: QuoteAlternativeWithLinesInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteAlternativeWithLinesInfo.html
  - name: )
- uid: SuperOffice.CRM.QuoteCalculation.CalculateVersionWithAlternatives(SuperOffice.CRM.QuoteVersionContextInfo)
  commentId: M:SuperOffice.CRM.QuoteCalculation.CalculateVersionWithAlternatives(SuperOffice.CRM.QuoteVersionContextInfo)
  isExternal: true
  href: SuperOffice.CRM.QuoteCalculation.html#SuperOffice_CRM_QuoteCalculation_CalculateVersionWithAlternatives_SuperOffice_CRM_QuoteVersionContextInfo_
  name: CalculateVersionWithAlternatives(QuoteVersionContextInfo)
  nameWithType: QuoteCalculation.CalculateVersionWithAlternatives(QuoteVersionContextInfo)
  fullName: SuperOffice.CRM.QuoteCalculation.CalculateVersionWithAlternatives(SuperOffice.CRM.QuoteVersionContextInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.QuoteCalculation.CalculateVersionWithAlternatives(SuperOffice.CRM.QuoteVersionContextInfo)
    name: CalculateVersionWithAlternatives
    isExternal: true
    href: SuperOffice.CRM.QuoteCalculation.html#SuperOffice_CRM_QuoteCalculation_CalculateVersionWithAlternatives_SuperOffice_CRM_QuoteVersionContextInfo_
  - name: (
  - uid: SuperOffice.CRM.QuoteVersionContextInfo
    name: QuoteVersionContextInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteVersionContextInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.QuoteCalculation.CalculateVersionWithAlternatives(SuperOffice.CRM.QuoteVersionContextInfo)
    name: CalculateVersionWithAlternatives
    isExternal: true
    href: SuperOffice.CRM.QuoteCalculation.html#SuperOffice_CRM_QuoteCalculation_CalculateVersionWithAlternatives_SuperOffice_CRM_QuoteVersionContextInfo_
  - name: (
  - uid: SuperOffice.CRM.QuoteVersionContextInfo
    name: QuoteVersionContextInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteVersionContextInfo.html
  - name: )
- uid: QuoteVersionStateInfo.DraftNotCalculated
  commentId: F:QuoteVersionStateInfo.DraftNotCalculated
  isExternal: true
  href: QuoteVersionStateInfo.html#QuoteVersionStateInfo_DraftNotCalculated
  name: DraftNotCalculated
  nameWithType: QuoteVersionStateInfo.DraftNotCalculated
  fullName: QuoteVersionStateInfo.DraftNotCalculated
- uid: QuoteVersionStateInfo.DraftNeedsApproval
  commentId: F:QuoteVersionStateInfo.DraftNeedsApproval
  isExternal: true
  href: QuoteVersionStateInfo.html#QuoteVersionStateInfo_DraftNeedsApproval
  name: DraftNeedsApproval
  nameWithType: QuoteVersionStateInfo.DraftNeedsApproval
  fullName: QuoteVersionStateInfo.DraftNeedsApproval
- uid: QuoteVersionStateInfo.DraftApproved
  commentId: F:QuoteVersionStateInfo.DraftApproved
  isExternal: true
  href: QuoteVersionStateInfo.html#QuoteVersionStateInfo_DraftApproved
  name: DraftApproved
  nameWithType: QuoteVersionStateInfo.DraftApproved
  fullName: QuoteVersionStateInfo.DraftApproved
- uid: QuoteVersionStateInfo.DraftNotApproved
  commentId: F:QuoteVersionStateInfo.DraftNotApproved
  isExternal: true
  href: QuoteVersionStateInfo.html#QuoteVersionStateInfo_DraftNotApproved
  name: DraftNotApproved
  nameWithType: QuoteVersionStateInfo.DraftNotApproved
  fullName: QuoteVersionStateInfo.DraftNotApproved
- uid: SuperOffice.CRM.QuoteVersionInfo.Status
  commentId: P:SuperOffice.CRM.QuoteVersionInfo.Status
  isExternal: true
  href: SuperOffice.CRM.QuoteVersionInfo.html#SuperOffice_CRM_QuoteVersionInfo_Status
  name: Status
  nameWithType: QuoteVersionInfo.Status
  fullName: SuperOffice.CRM.QuoteVersionInfo.Status
- uid: SuperOffice.CRM.QuoteConnectorBase
  commentId: T:SuperOffice.CRM.QuoteConnectorBase
  isExternal: true
  href: SuperOffice.CRM.QuoteConnectorBase.html
  name: QuoteConnectorBase
  nameWithType: QuoteConnectorBase
  fullName: SuperOffice.CRM.QuoteConnectorBase
- uid: SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  href: SuperOffice.CRM.QuoteConnectorBase.html#SuperOffice_CRM_QuoteConnectorBase_ValidateQuoteLineAsync_SuperOffice_CRM_QuoteAlternativeContextInfo_SuperOffice_CRM_QuoteLineInfo_System_Boolean_System_Threading_CancellationToken_
  name: ValidateQuoteLineAsync(QuoteAlternativeContextInfo, QuoteLineInfo, bool, CancellationToken)
  nameWithType: QuoteConnectorBase.ValidateQuoteLineAsync(QuoteAlternativeContextInfo, QuoteLineInfo, bool, CancellationToken)
  fullName: SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, SuperOffice.CRM.QuoteLineInfo, bool, System.Threading.CancellationToken)
  nameWithType.vb: QuoteConnectorBase.ValidateQuoteLineAsync(QuoteAlternativeContextInfo, QuoteLineInfo, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, SuperOffice.CRM.QuoteLineInfo, Boolean, System.Threading.CancellationToken)
  name.vb: ValidateQuoteLineAsync(QuoteAlternativeContextInfo, QuoteLineInfo, Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.Boolean,System.Threading.CancellationToken)
    name: ValidateQuoteLineAsync
    isExternal: true
    href: SuperOffice.CRM.QuoteConnectorBase.html#SuperOffice_CRM_QuoteConnectorBase_ValidateQuoteLineAsync_SuperOffice_CRM_QuoteAlternativeContextInfo_SuperOffice_CRM_QuoteLineInfo_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.QuoteAlternativeContextInfo
    name: QuoteAlternativeContextInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteAlternativeContextInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteLineInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.QuoteConnectorBase.ValidateQuoteLineAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,SuperOffice.CRM.QuoteLineInfo,System.Boolean,System.Threading.CancellationToken)
    name: ValidateQuoteLineAsync
    isExternal: true
    href: SuperOffice.CRM.QuoteConnectorBase.html#SuperOffice_CRM_QuoteConnectorBase_ValidateQuoteLineAsync_SuperOffice_CRM_QuoteAlternativeContextInfo_SuperOffice_CRM_QuoteLineInfo_System_Boolean_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.QuoteAlternativeContextInfo
    name: QuoteAlternativeContextInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteAlternativeContextInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteLineInfo.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_ValidateQuoteVersionAsync_SuperOffice_CRM_QuoteVersionContextInfo_SuperOffice_CRM_QuoteAction_System_Threading_CancellationToken_
  name: ValidateQuoteVersionAsync
  nameWithType: IQuoteConnector.ValidateQuoteVersionAsync
  fullName: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync
- uid: SuperOffice.CRM.QuoteAction
  commentId: T:SuperOffice.CRM.QuoteAction
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.QuoteAction.html
  name: QuoteAction
  nameWithType: QuoteAction
  fullName: SuperOffice.CRM.QuoteAction
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteResponseInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.QuoteResponseInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<QuoteResponseInfo>
  nameWithType: Task<QuoteResponseInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.QuoteResponseInfo>
  nameWithType.vb: Task(Of QuoteResponseInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.QuoteResponseInfo)
  name.vb: Task(Of QuoteResponseInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.QuoteResponseInfo
    name: QuoteResponseInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteResponseInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.QuoteResponseInfo
    name: QuoteResponseInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteResponseInfo.html
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.IQuoteConnector
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_ValidateQuoteVersionAsync_SuperOffice_CRM_QuoteVersionContextInfo_SuperOffice_CRM_QuoteAction_System_Threading_CancellationToken_
  name: ValidateQuoteVersionAsync(QuoteVersionContextInfo, QuoteAction, CancellationToken)
  nameWithType: IQuoteConnector.ValidateQuoteVersionAsync(QuoteVersionContextInfo, QuoteAction, CancellationToken)
  fullName: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo, SuperOffice.CRM.QuoteAction, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
    name: ValidateQuoteVersionAsync
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_ValidateQuoteVersionAsync_SuperOffice_CRM_QuoteVersionContextInfo_SuperOffice_CRM_QuoteAction_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.QuoteVersionContextInfo
    name: QuoteVersionContextInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteVersionContextInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.QuoteAction
    name: QuoteAction
    isExternal: true
    href: SuperOffice.CRM.QuoteAction.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.IQuoteConnector.ValidateQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,SuperOffice.CRM.QuoteAction,System.Threading.CancellationToken)
    name: ValidateQuoteVersionAsync
    isExternal: true
    href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_ValidateQuoteVersionAsync_SuperOffice_CRM_QuoteVersionContextInfo_SuperOffice_CRM_QuoteAction_System_Threading_CancellationToken_
  - name: (
  - uid: SuperOffice.CRM.QuoteVersionContextInfo
    name: QuoteVersionContextInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteVersionContextInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.QuoteAction
    name: QuoteAction
    isExternal: true
    href: SuperOffice.CRM.QuoteAction.html
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_UpdateQuoteVersionPricesAsync_SuperOffice_CRM_QuoteVersionContextInfo_System_Collections_Generic_HashSet_System_String__
  name: UpdateQuoteVersionPricesAsync
  nameWithType: IQuoteConnector.UpdateQuoteVersionPricesAsync
  fullName: SuperOffice.CRM.IQuoteConnector.UpdateQuoteVersionPricesAsync
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<string>
  nameWithType: HashSet<string>
  fullName: System.Collections.Generic.HashSet<string>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteVersionResponseInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.QuoteVersionResponseInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<QuoteVersionResponseInfo>
  nameWithType: Task<QuoteVersionResponseInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.QuoteVersionResponseInfo>
  nameWithType.vb: Task(Of QuoteVersionResponseInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.QuoteVersionResponseInfo)
  name.vb: Task(Of QuoteVersionResponseInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.QuoteVersionResponseInfo
    name: QuoteVersionResponseInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteVersionResponseInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.QuoteVersionResponseInfo
    name: QuoteVersionResponseInfo
    isExternal: true
    href: SuperOffice.CRM.QuoteVersionResponseInfo.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.PlaceOrder*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.PlaceOrder
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_PlaceOrder_SuperOffice_CRM_QuoteAlternativeContextInfo_
  name: PlaceOrder
  nameWithType: IQuoteConnector.PlaceOrder
  fullName: SuperOffice.CRM.IQuoteConnector.PlaceOrder
- uid: SuperOffice.CRM.PlaceOrderResponseInfo
  commentId: T:SuperOffice.CRM.PlaceOrderResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.PlaceOrderResponseInfo.html
  name: PlaceOrderResponseInfo
  nameWithType: PlaceOrderResponseInfo
  fullName: SuperOffice.CRM.PlaceOrderResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.GetOrderState*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetOrderState
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetOrderState_SuperOffice_CRM_QuoteAlternativeContextInfo_
  name: GetOrderState
  nameWithType: IQuoteConnector.GetOrderState
  fullName: SuperOffice.CRM.IQuoteConnector.GetOrderState
- uid: SuperOffice.CRM.OrderResponseInfo
  commentId: T:SuperOffice.CRM.OrderResponseInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.OrderResponseInfo.html
  name: OrderResponseInfo
  nameWithType: OrderResponseInfo
  fullName: SuperOffice.CRM.OrderResponseInfo
- uid: SuperOffice.CRM.IQuoteConnector.GetAddresses*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.GetAddresses
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_GetAddresses_SuperOffice_CRM_QuoteAlternativeContextInfo_
  name: GetAddresses
  nameWithType: IQuoteConnector.GetAddresses
  fullName: SuperOffice.CRM.IQuoteConnector.GetAddresses
- uid: SuperOffice.CRM.AddressInfo[]
  isExternal: true
  href: SuperOffice.CRM.AddressInfo.html
  name: AddressInfo[]
  nameWithType: AddressInfo[]
  fullName: SuperOffice.CRM.AddressInfo[]
  nameWithType.vb: AddressInfo()
  fullName.vb: SuperOffice.CRM.AddressInfo()
  name.vb: AddressInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.AddressInfo
    name: AddressInfo
    isExternal: true
    href: SuperOffice.CRM.AddressInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.AddressInfo
    name: AddressInfo
    isExternal: true
    href: SuperOffice.CRM.AddressInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.IQuoteConnector.CRMConnectionId*
  commentId: Overload:SuperOffice.CRM.IQuoteConnector.CRMConnectionId
  isExternal: true
  href: SuperOffice.CRM.IQuoteConnector.html#SuperOffice_CRM_IQuoteConnector_CRMConnectionId
  name: CRMConnectionId
  nameWithType: IQuoteConnector.CRMConnectionId
  fullName: SuperOffice.CRM.IQuoteConnector.CRMConnectionId
