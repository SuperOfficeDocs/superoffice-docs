### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.SqlType
  commentId: T:SuperOffice.Data.SQL.SqlType
  id: SqlType
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.SqlType.IsDelete
  - SuperOffice.Data.SQL.SqlType.IsDifference
  - SuperOffice.Data.SQL.SqlType.IsInsert
  - SuperOffice.Data.SQL.SqlType.IsInsertFromSelect
  - SuperOffice.Data.SQL.SqlType.IsIntersect
  - SuperOffice.Data.SQL.SqlType.IsNoType
  - SuperOffice.Data.SQL.SqlType.IsRaw
  - SuperOffice.Data.SQL.SqlType.IsSelect
  - SuperOffice.Data.SQL.SqlType.IsUnion
  - SuperOffice.Data.SQL.SqlType.IsUpdate
  langs:
  - csharp
  - vb
  name: SqlType
  nameWithType: SqlType
  fullName: SuperOffice.Data.SQL.SqlType
  type: Enum
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nEnum SqlType\n"
  syntax:
    content: public enum SqlType
    content.vb: Public Enum SqlType
  extensionMethods:
  - SuperOffice.Data.SQL.SqlType.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.SQL.SqlType)
  - SuperOffice.Data.SQL.SqlType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.SQL.SqlType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.SQL.SqlType.IsInsert
  commentId: F:SuperOffice.Data.SQL.SqlType.IsInsert
  id: IsInsert
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsInsert
  nameWithType: SqlType.IsInsert
  fullName: SuperOffice.Data.SQL.SqlType.IsInsert
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsInsert = 0
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsUpdate
  commentId: F:SuperOffice.Data.SQL.SqlType.IsUpdate
  id: IsUpdate
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsUpdate
  nameWithType: SqlType.IsUpdate
  fullName: SuperOffice.Data.SQL.SqlType.IsUpdate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsUpdate = 1
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsDelete
  commentId: F:SuperOffice.Data.SQL.SqlType.IsDelete
  id: IsDelete
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsDelete
  nameWithType: SqlType.IsDelete
  fullName: SuperOffice.Data.SQL.SqlType.IsDelete
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsDelete = 2
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsSelect
  commentId: F:SuperOffice.Data.SQL.SqlType.IsSelect
  id: IsSelect
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsSelect
  nameWithType: SqlType.IsSelect
  fullName: SuperOffice.Data.SQL.SqlType.IsSelect
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsSelect = 3
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsUnion
  commentId: F:SuperOffice.Data.SQL.SqlType.IsUnion
  id: IsUnion
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsUnion
  nameWithType: SqlType.IsUnion
  fullName: SuperOffice.Data.SQL.SqlType.IsUnion
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsUnion = 4
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsIntersect
  commentId: F:SuperOffice.Data.SQL.SqlType.IsIntersect
  id: IsIntersect
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsIntersect
  nameWithType: SqlType.IsIntersect
  fullName: SuperOffice.Data.SQL.SqlType.IsIntersect
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsIntersect = 5
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsDifference
  commentId: F:SuperOffice.Data.SQL.SqlType.IsDifference
  id: IsDifference
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsDifference
  nameWithType: SqlType.IsDifference
  fullName: SuperOffice.Data.SQL.SqlType.IsDifference
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsDifference = 6
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsRaw
  commentId: F:SuperOffice.Data.SQL.SqlType.IsRaw
  id: IsRaw
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsRaw
  nameWithType: SqlType.IsRaw
  fullName: SuperOffice.Data.SQL.SqlType.IsRaw
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nIs this a raw sql command (clear text command)\n"
  syntax:
    content: IsRaw = 7
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsNoType
  commentId: F:SuperOffice.Data.SQL.SqlType.IsNoType
  id: IsNoType
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsNoType
  nameWithType: SqlType.IsNoType
  fullName: SuperOffice.Data.SQL.SqlType.IsNoType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\n\n"
  syntax:
    content: IsNoType = 8
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.SQL.SqlType.IsInsertFromSelect
  commentId: F:SuperOffice.Data.SQL.SqlType.IsInsertFromSelect
  id: IsInsertFromSelect
  parent: SuperOffice.Data.SQL.SqlType
  langs:
  - csharp
  - vb
  name: IsInsertFromSelect
  nameWithType: SqlType.IsInsertFromSelect
  fullName: SuperOffice.Data.SQL.SqlType.IsInsertFromSelect
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nINSERT INTO &lt;targetTable> SELECT ... FROM &lt;sourceTable> ...\n"
  syntax:
    content: IsInsertFromSelect = 9
    return:
      type: SuperOffice.Data.SQL.SqlType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data.SQL.SqlType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SqlType, To>()
  nameWithType: EnumUtil.MapEnums<SqlType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.SqlType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SqlType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.SqlType, To)()
  name.vb: MapEnums(Of SqlType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SqlType, To>
    nameWithType: EnumUtil.MapEnums<SqlType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.SqlType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SqlType, To)
    nameWithType: EnumUtil.MapEnums(Of SqlType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.SqlType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.SQL.SqlType)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SqlType>(SqlType)
  nameWithType: ObjectExtensions.AssignByReflection<SqlType>(SqlType)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.SQL.SqlType>(SuperOffice.Data.SQL.SqlType)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SqlType)(SqlType)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.SQL.SqlType)(SuperOffice.Data.SQL.SqlType)
  name.vb: AssignByReflection(Of SqlType)(SqlType)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SqlType>
    nameWithType: ObjectExtensions.AssignByReflection<SqlType>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.SQL.SqlType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlType
    name: SqlType
    nameWithType: SqlType
    fullName: SuperOffice.Data.SQL.SqlType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SqlType)
    nameWithType: ObjectExtensions.AssignByReflection(Of SqlType)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.SQL.SqlType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlType
    name: SqlType
    nameWithType: SqlType
    fullName: SuperOffice.Data.SQL.SqlType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SqlType>()
  nameWithType: ObjectExtensions.GraphCopy<SqlType>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.SQL.SqlType>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SqlType)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.SQL.SqlType)()
  name.vb: GraphCopy(Of SqlType)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SqlType>
    nameWithType: ObjectExtensions.GraphCopy<SqlType>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.SQL.SqlType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SqlType)
    nameWithType: ObjectExtensions.GraphCopy(Of SqlType)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.SQL.SqlType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SqlType, To>()
  nameWithType: Converters.MapEnums<SqlType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.SqlType, To>()
  nameWithType.vb: Converters.MapEnums(Of SqlType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.SqlType, To)()
  name.vb: MapEnums(Of SqlType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SqlType, To>
    nameWithType: Converters.MapEnums<SqlType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.SqlType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SqlType, To)
    nameWithType: Converters.MapEnums(Of SqlType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.SqlType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.SqlType
  commentId: T:SuperOffice.Data.SQL.SqlType
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlType
  nameWithType: SqlType
  fullName: SuperOffice.Data.SQL.SqlType
