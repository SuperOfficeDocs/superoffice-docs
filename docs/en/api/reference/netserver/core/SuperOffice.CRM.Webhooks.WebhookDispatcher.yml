### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher
  commentId: T:SuperOffice.CRM.Webhooks.WebhookDispatcher
  id: WebhookDispatcher
  parent: SuperOffice.CRM.Webhooks
  children:
  - SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue(SuperOffice.CRM.Webhooks.WebhookTaskInfo)
  - SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete
  langs:
  - csharp
  - vb
  name: WebhookDispatcher
  nameWithType: WebhookDispatcher
  fullName: SuperOffice.CRM.Webhooks.WebhookDispatcher
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Webhooks
  summary: "\nWebhook dispatcher. Manages the background thread for dispatching webhook calls.\nSelf-destructs when the queue is empty for a few seconds.\n<xref href=\"SuperOffice.Threading.ParallelConsumerQueue%601\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: >-
      [SoInject("Database")]

      public class WebhookDispatcher : Object
    content.vb: >-
      <SoInject("Database")>

      Public Class WebhookDispatcher
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Webhooks.WebhookDispatcher.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Webhooks.WebhookDispatcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete
  commentId: M:SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete
  id: WaitForWebhooksToComplete
  parent: SuperOffice.CRM.Webhooks.WebhookDispatcher
  langs:
  - csharp
  - vb
  name: WaitForWebhooksToComplete()
  nameWithType: WebhookDispatcher.WaitForWebhooksToComplete()
  fullName: SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Webhooks
  summary: "\nWait for queue to empty\n"
  syntax:
    content: public void WaitForWebhooksToComplete()
    content.vb: Public Sub WaitForWebhooksToComplete
  overload: SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue(SuperOffice.CRM.Webhooks.WebhookTaskInfo)
  commentId: M:SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue(SuperOffice.CRM.Webhooks.WebhookTaskInfo)
  id: Enqueue(SuperOffice.CRM.Webhooks.WebhookTaskInfo)
  parent: SuperOffice.CRM.Webhooks.WebhookDispatcher
  langs:
  - csharp
  - vb
  name: Enqueue(WebhookTaskInfo)
  nameWithType: WebhookDispatcher.Enqueue(WebhookTaskInfo)
  fullName: SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue(SuperOffice.CRM.Webhooks.WebhookTaskInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Webhooks
  syntax:
    content: public void Enqueue(WebhookTaskInfo info)
    parameters:
    - id: info
      type: SuperOffice.CRM.Webhooks.WebhookTaskInfo
    content.vb: Public Sub Enqueue(info As WebhookTaskInfo)
  overload: SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Webhooks
  commentId: N:SuperOffice.CRM.Webhooks
  isExternal: true
  name: SuperOffice.CRM.Webhooks
  nameWithType: SuperOffice.CRM.Webhooks
  fullName: SuperOffice.CRM.Webhooks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<WebhookDispatcher, To>()
  nameWithType: EnumUtil.MapEnums<WebhookDispatcher, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Webhooks.WebhookDispatcher, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of WebhookDispatcher, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Webhooks.WebhookDispatcher, To)()
  name.vb: MapEnums(Of WebhookDispatcher, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<WebhookDispatcher, To>
    nameWithType: EnumUtil.MapEnums<WebhookDispatcher, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Webhooks.WebhookDispatcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of WebhookDispatcher, To)
    nameWithType: EnumUtil.MapEnums(Of WebhookDispatcher, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Webhooks.WebhookDispatcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<WebhookDispatcher, To>()
  nameWithType: Converters.MapEnums<WebhookDispatcher, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Webhooks.WebhookDispatcher, To>()
  nameWithType.vb: Converters.MapEnums(Of WebhookDispatcher, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Webhooks.WebhookDispatcher, To)()
  name.vb: MapEnums(Of WebhookDispatcher, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<WebhookDispatcher, To>
    nameWithType: Converters.MapEnums<WebhookDispatcher, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Webhooks.WebhookDispatcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of WebhookDispatcher, To)
    nameWithType: Converters.MapEnums(Of WebhookDispatcher, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Webhooks.WebhookDispatcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete*
  commentId: Overload:SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete
  isExternal: true
  name: WaitForWebhooksToComplete
  nameWithType: WebhookDispatcher.WaitForWebhooksToComplete
  fullName: SuperOffice.CRM.Webhooks.WebhookDispatcher.WaitForWebhooksToComplete
- uid: SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue*
  commentId: Overload:SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue
  isExternal: true
  name: Enqueue
  nameWithType: WebhookDispatcher.Enqueue
  fullName: SuperOffice.CRM.Webhooks.WebhookDispatcher.Enqueue
- uid: SuperOffice.CRM.Webhooks.WebhookTaskInfo
  commentId: T:SuperOffice.CRM.Webhooks.WebhookTaskInfo
  parent: SuperOffice.CRM.Webhooks
  isExternal: true
  name: WebhookTaskInfo
  nameWithType: WebhookTaskInfo
  fullName: SuperOffice.CRM.Webhooks.WebhookTaskInfo
