### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.BatchData
  commentId: T:SuperOffice.CRM.BatchProcessing.BatchData
  id: BatchData
  parent: SuperOffice.CRM.BatchProcessing
  children:
  - SuperOffice.CRM.BatchProcessing.BatchData.#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory)
  - SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync(System.Int32[])
  - SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync(SuperOffice.CRM.Rows.BatchTaskRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync(System.String)
  - SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  - SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync(SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  - SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  langs:
  - csharp
  - vb
  name: BatchData
  nameWithType: BatchData
  fullName: SuperOffice.CRM.BatchProcessing.BatchData
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nBatchData handles all batch database access.\n"
  syntax:
    content: 'public class BatchData : Object, IBatchData'
    content.vb: >-
      Public Class BatchData
          Inherits Object
          Implements IBatchData
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.BatchData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.BatchData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.BatchProcessing.BatchData.#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory)
  id: '#ctor(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory)'
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: BatchData(IBatchTaskFactory)
  nameWithType: BatchData.BatchData(IBatchTaskFactory)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.BatchData(SuperOffice.CRM.BatchProcessing.IBatchTaskFactory)
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public BatchData(IBatchTaskFactory batchTaskFactory)
    parameters:
    - id: batchTaskFactory
      type: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
    content.vb: Public Sub New(batchTaskFactory As IBatchTaskFactory)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  id: GetBatchTasksAsync(System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: GetBatchTasksAsync(Int32[], BatchTaskState, DateTime, DateTime, CancellationToken)
  nameWithType: BatchData.GetBatchTasksAsync(Int32[], BatchTaskState, DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.Int32[], SuperOffice.Data.BatchTaskState, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nGet all tasks for a specified user and state in a specified time period.\n"
  syntax:
    content: public Task<BatchTaskInfo[]> GetBatchTasksAsync(int[] associateIds, BatchTaskState state, DateTime fromDate, DateTime toDate, CancellationToken cancellationToken)
    parameters:
    - id: associateIds
      type: System.Int32[]
    - id: state
      type: SuperOffice.Data.BatchTaskState
    - id: fromDate
      type: System.DateTime
      description: Do not get task created before this date. Use DateTime.MinValue for no restriction.
    - id: toDate
      type: System.DateTime
      description: Do not get task created after this date. Use DateTime.MaxValue for no restriction.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo[]}
      description: An array of BatchTaskInfo
    content.vb: Public Function GetBatchTasksAsync(associateIds As Integer(), state As BatchTaskState, fromDate As DateTime, toDate As DateTime, cancellationToken As CancellationToken) As Task(Of BatchTaskInfo())
  overload: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync*
  nameWithType.vb: BatchData.GetBatchTasksAsync(Int32(), BatchTaskState, DateTime, DateTime, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.Int32(), SuperOffice.Data.BatchTaskState, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  name.vb: GetBatchTasksAsync(Int32(), BatchTaskState, DateTime, DateTime, CancellationToken)
- uid: SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.Threading.CancellationToken)
  id: AquireTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: AquireTaskAsync(BatchTaskInfo, CancellationToken)
  nameWithType: BatchData.AquireTaskAsync(BatchTaskInfo, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nWhen a task is retrieved from the batch task system and is ready to be started, we need a mechanism \nthat will ensure a task is not started by two or more instances of a batch service. Before starting\na task, try to aquire it with this method.\n"
  syntax:
    content: public static Task<bool> AquireTaskAsync(BatchTaskInfo batchTaskInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the task was aquired, false if someone else had aquired it before we got to do it.
    content.vb: Public Shared Function AquireTaskAsync(batchTaskInfo As BatchTaskInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  id: GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: GetBatchTasksAsync(String, Int32[], BatchTaskState, DateTime, DateTime, CancellationToken)
  nameWithType: BatchData.GetBatchTasksAsync(String, Int32[], BatchTaskState, DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.String, System.Int32[], SuperOffice.Data.BatchTaskState, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  syntax:
    content: public Task<BatchTaskInfo[]> GetBatchTasksAsync(string batchDefinitionName, int[] associateIds, BatchTaskState state, DateTime fromDate, DateTime toDate, CancellationToken cancellationToken)
    parameters:
    - id: batchDefinitionName
      type: System.String
    - id: associateIds
      type: System.Int32[]
    - id: state
      type: SuperOffice.Data.BatchTaskState
    - id: fromDate
      type: System.DateTime
    - id: toDate
      type: System.DateTime
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo[]}
    content.vb: Public Function GetBatchTasksAsync(batchDefinitionName As String, associateIds As Integer(), state As BatchTaskState, fromDate As DateTime, toDate As DateTime, cancellationToken As CancellationToken) As Task(Of BatchTaskInfo())
  overload: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  nameWithType.vb: BatchData.GetBatchTasksAsync(String, Int32(), BatchTaskState, DateTime, DateTime, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync(System.String, System.Int32(), SuperOffice.Data.BatchTaskState, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  name.vb: GetBatchTasksAsync(String, Int32(), BatchTaskState, DateTime, DateTime, CancellationToken)
- uid: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  id: GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: GetBatchTaskInfoAsync(Int32, CancellationToken)
  nameWithType: BatchData.GetBatchTaskInfoAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nGet information about a specified task.\n"
  syntax:
    content: public Task<BatchTaskInfo> GetBatchTaskInfoAsync(int id, CancellationToken cancellationToken = null)
    parameters:
    - id: id
      type: System.Int32
      description: batch task id.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
    content.vb: Public Function GetBatchTaskInfoAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync(System.Int32[])
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync(System.Int32[])
  id: DeleteBatchTasksAsync(System.Int32[])
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: DeleteBatchTasksAsync(Int32[])
  nameWithType: BatchData.DeleteBatchTasksAsync(Int32[])
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync(System.Int32[])
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nDelete batch tasks from the database.\n"
  syntax:
    content: public Task<bool> DeleteBatchTasksAsync(params int[] ids)
    parameters:
    - id: ids
      type: System.Int32[]
      description: Array of ids to delete.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function DeleteBatchTasksAsync(ParamArray ids As Integer()) As Task(Of Boolean)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32[])
  nameWithType.vb: BatchData.DeleteBatchTasksAsync(Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync(System.Int32())
  name.vb: DeleteBatchTasksAsync(Int32())
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  id: SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: SaveBatchTaskInfoAsync(BatchTaskInfo)
  nameWithType: BatchData.SaveBatchTaskInfoAsync(BatchTaskInfo)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nSave a new BatchTaskInfo to the database\n"
  syntax:
    content: public Task<int> SaveBatchTaskInfoAsync(BatchTaskInfo batchTaskInfo)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function SaveBatchTaskInfoAsync(batchTaskInfo As BatchTaskInfo) As Task(Of Integer)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  id: SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: SaveBatchTaskInfoAsync(BatchTaskInfo, StringDictionary)
  nameWithType: BatchData.SaveBatchTaskInfoAsync(BatchTaskInfo, StringDictionary)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nSave a new BatchTaskInfo to the database a parameter object saved to BinaryObject table.\n"
  syntax:
    content: public Task<int> SaveBatchTaskInfoAsync(BatchTaskInfo batchTaskInfo, StringDictionary parameterObject)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    - id: parameterObject
      type: SuperOffice.CRM.Services.StringDictionary
      description: A serializable object. Will be saved to BinaryObject table. The link will be set using DetailsTable and DetailsRecord in object BatchTaskInfo.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function SaveBatchTaskInfoAsync(batchTaskInfo As BatchTaskInfo, parameterObject As StringDictionary) As Task(Of Integer)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  id: UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: UpdateBatchTaskAsync(BatchTaskInfo)
  nameWithType: BatchData.UpdateBatchTaskAsync(BatchTaskInfo)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nUpdate information about a BatchTask.\n<remarks>Only the following properties can be updated: State, Description, Response and Request</remarks>\n"
  syntax:
    content: public Task<BatchTaskInfo> UpdateBatchTaskAsync(BatchTaskInfo batchTaskInfo)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: The updated information to save.
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
      description: The updated BatchTaskInfo
    content.vb: Public Function UpdateBatchTaskAsync(batchTaskInfo As BatchTaskInfo) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync(System.String)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync(System.String)
  id: RegisterPluginAsync(System.String)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: RegisterPluginAsync(String)
  nameWithType: BatchData.RegisterPluginAsync(String)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync(System.String)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nRegister a plugin to the BatchTaskDefinition table\n"
  syntax:
    content: public Task<int> RegisterPluginAsync(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function RegisterPluginAsync(name As String) As Task(Of Integer)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  id: SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: SetBatchTaskInfoStateAsync(BatchTaskInfo, BatchTaskState)
  nameWithType: BatchData.SetBatchTaskInfoStateAsync(BatchTaskInfo, BatchTaskState)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo, SuperOffice.Data.BatchTaskState)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nUpdate state on a BatchTaskInfo row\n"
  syntax:
    content: public Task SetBatchTaskInfoStateAsync(BatchTaskInfo batchTaskInfo, BatchTaskState state)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
    - id: state
      type: SuperOffice.Data.BatchTaskState
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function SetBatchTaskInfoStateAsync(batchTaskInfo As BatchTaskInfo, state As BatchTaskState) As Task
  overload: SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync(SuperOffice.CRM.Rows.BatchTaskRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync(SuperOffice.CRM.Rows.BatchTaskRow,System.Threading.CancellationToken)
  id: PopulateBatchTaskInfoFromRowAsync(SuperOffice.CRM.Rows.BatchTaskRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: PopulateBatchTaskInfoFromRowAsync(BatchTaskRow, CancellationToken)
  nameWithType: BatchData.PopulateBatchTaskInfoFromRowAsync(BatchTaskRow, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync(SuperOffice.CRM.Rows.BatchTaskRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nTake a BatchTaskRow and return a <xref href=\"SuperOffice.CRM.Services.BatchTaskInfo\" data-throw-if-not-resolved=\"false\"></xref> object\n"
  syntax:
    content: protected Task<BatchTaskInfo> PopulateBatchTaskInfoFromRowAsync(BatchTaskRow row, CancellationToken cancellationToken = null)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.BatchTaskRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
    content.vb: Protected Function PopulateBatchTaskInfoFromRowAsync(row As BatchTaskRow, cancellationToken As CancellationToken = Nothing) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync(SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync(SuperOffice.CRM.Services.StringDictionary)
  id: SerializeParameterObjectToBinaryObjectRowAsync(SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: SerializeParameterObjectToBinaryObjectRowAsync(StringDictionary)
  nameWithType: BatchData.SerializeParameterObjectToBinaryObjectRowAsync(StringDictionary)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync(SuperOffice.CRM.Services.StringDictionary)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nSerialize a StringDictionary to a row in <xref href=\"SuperOffice.CRM.Rows.BinaryObjectRow\" data-throw-if-not-resolved=\"false\"></xref>\n"
  remarks: The object must be serializable.
  syntax:
    content: protected Task<BinaryObjectRow> SerializeParameterObjectToBinaryObjectRowAsync(StringDictionary stringDictionary)
    parameters:
    - id: stringDictionary
      type: SuperOffice.CRM.Services.StringDictionary
      description: StringDictionary to serialize
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.BinaryObjectRow}
      description: A <xref href="SuperOffice.CRM.Rows.BinaryObjectRow" data-throw-if-not-resolved="false"></xref>
    content.vb: Protected Function SerializeParameterObjectToBinaryObjectRowAsync(stringDictionary As StringDictionary) As Task(Of BinaryObjectRow)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync(System.Int32,System.Threading.CancellationToken)
  id: DeserializeFromBinaryObjectRowToParameterObjectAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.BatchData
  langs:
  - csharp
  - vb
  name: DeserializeFromBinaryObjectRowToParameterObjectAsync(Int32, CancellationToken)
  nameWithType: BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing
  summary: "\nDeserialize an entry in <xref href=\"SuperOffice.CRM.Rows.BinaryObjectRow\" data-throw-if-not-resolved=\"false\"></xref> to a object.\n"
  syntax:
    content: protected Task<StringDictionary> DeserializeFromBinaryObjectRowToParameterObjectAsync(int id, CancellationToken cancellationToken = null)
    parameters:
    - id: id
      type: System.Int32
      description: Id of the row to deserialize
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
      description: The deserialized object.
    content.vb: Protected Function DeserializeFromBinaryObjectRowToParameterObjectAsync(id As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of StringDictionary)
  overload: SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.BatchProcessing.IBatchData
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchData
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchData
  nameWithType: IBatchData
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData
- uid: SuperOffice.CRM.BatchProcessing.BatchData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<BatchData, To>()
  nameWithType: EnumUtil.MapEnums<BatchData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.BatchData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of BatchData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchData, To)()
  name.vb: MapEnums(Of BatchData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<BatchData, To>
    nameWithType: EnumUtil.MapEnums<BatchData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.BatchData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of BatchData, To)
    nameWithType: EnumUtil.MapEnums(Of BatchData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<BatchData, To>()
  nameWithType: Converters.MapEnums<BatchData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.BatchData, To>()
  nameWithType.vb: Converters.MapEnums(Of BatchData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchData, To)()
  name.vb: MapEnums(Of BatchData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<BatchData, To>
    nameWithType: Converters.MapEnums<BatchData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.BatchData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of BatchData, To)
    nameWithType: Converters.MapEnums(Of BatchData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.BatchData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.BatchProcessing.BatchData.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.#ctor
  isExternal: true
  name: BatchData
  nameWithType: BatchData.BatchData
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.BatchData
- uid: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTaskFactory
  nameWithType: IBatchTaskFactory
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTaskFactory
- uid: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync
  isExternal: true
  name: GetBatchTasksAsync
  nameWithType: BatchData.GetBatchTasksAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTasksAsync
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.BatchTaskState
  commentId: T:SuperOffice.Data.BatchTaskState
  parent: SuperOffice.Data
  isExternal: true
  name: BatchTaskState
  nameWithType: BatchTaskState
  fullName: SuperOffice.Data.BatchTaskState
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchTaskInfo[]>
  nameWithType: Task<BatchTaskInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BatchTaskInfo[]>
  nameWithType.vb: Task(Of BatchTaskInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BatchTaskInfo())
  name.vb: Task(Of BatchTaskInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync
  isExternal: true
  name: AquireTaskAsync
  nameWithType: BatchData.AquireTaskAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.AquireTaskAsync
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchData
  isExternal: true
  name: GetBatchTasksAsync(String, Int32[], BatchTaskState, DateTime, DateTime, CancellationToken)
  nameWithType: IBatchData.GetBatchTasksAsync(String, Int32[], BatchTaskState, DateTime, DateTime, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String, System.Int32[], SuperOffice.Data.BatchTaskState, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  nameWithType.vb: IBatchData.GetBatchTasksAsync(String, Int32(), BatchTaskState, DateTime, DateTime, CancellationToken)
  fullName.vb: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String, System.Int32(), SuperOffice.Data.BatchTaskState, System.DateTime, System.DateTime, System.Threading.CancellationToken)
  name.vb: GetBatchTasksAsync(String, Int32(), BatchTaskState, DateTime, DateTime, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
    name: GetBatchTasksAsync
    nameWithType: IBatchData.GetBatchTasksAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync(System.String,System.Int32[],SuperOffice.Data.BatchTaskState,System.DateTime,System.DateTime,System.Threading.CancellationToken)
    name: GetBatchTasksAsync
    nameWithType: IBatchData.GetBatchTasksAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync
  isExternal: true
  name: GetBatchTaskInfoAsync
  nameWithType: BatchData.GetBatchTaskInfoAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.GetBatchTaskInfoAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchData
  isExternal: true
  name: GetBatchTaskInfoAsync(Int32, CancellationToken)
  nameWithType: IBatchData.GetBatchTaskInfoAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync(System.Int32, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
    name: GetBatchTaskInfoAsync
    nameWithType: IBatchData.GetBatchTaskInfoAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync(System.Int32,System.Threading.CancellationToken)
    name: GetBatchTaskInfoAsync
    nameWithType: IBatchData.GetBatchTaskInfoAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.GetBatchTaskInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchTaskInfo>
  nameWithType: Task<BatchTaskInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BatchTaskInfo>
  nameWithType.vb: Task(Of BatchTaskInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BatchTaskInfo)
  name.vb: Task(Of BatchTaskInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync
  isExternal: true
  name: DeleteBatchTasksAsync
  nameWithType: BatchData.DeleteBatchTasksAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.DeleteBatchTasksAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32[])
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32[])
  parent: SuperOffice.CRM.BatchProcessing.IBatchData
  isExternal: true
  name: DeleteBatchTasksAsync(Int32[])
  nameWithType: IBatchData.DeleteBatchTasksAsync(Int32[])
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32[])
  nameWithType.vb: IBatchData.DeleteBatchTasksAsync(Int32())
  fullName.vb: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32())
  name.vb: DeleteBatchTasksAsync(Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32[])
    name: DeleteBatchTasksAsync
    nameWithType: IBatchData.DeleteBatchTasksAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync(System.Int32[])
    name: DeleteBatchTasksAsync
    nameWithType: IBatchData.DeleteBatchTasksAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.DeleteBatchTasksAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync
  isExternal: true
  name: SaveBatchTaskInfoAsync
  nameWithType: BatchData.SaveBatchTaskInfoAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SaveBatchTaskInfoAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.BatchProcessing.IBatchData
  isExternal: true
  name: SaveBatchTaskInfoAsync(BatchTaskInfo, StringDictionary)
  nameWithType: IBatchData.SaveBatchTaskInfoAsync(BatchTaskInfo, StringDictionary)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo, SuperOffice.CRM.Services.StringDictionary)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
    name: SaveBatchTaskInfoAsync
    nameWithType: IBatchData.SaveBatchTaskInfoAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.CRM.Services.StringDictionary)
    name: SaveBatchTaskInfoAsync
    nameWithType: IBatchData.SaveBatchTaskInfoAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.SaveBatchTaskInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.StringDictionary
  commentId: T:SuperOffice.CRM.Services.StringDictionary
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync
  isExternal: true
  name: UpdateBatchTaskAsync
  nameWithType: BatchData.UpdateBatchTaskAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.UpdateBatchTaskAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  parent: SuperOffice.CRM.BatchProcessing.IBatchData
  isExternal: true
  name: UpdateBatchTaskAsync(BatchTaskInfo)
  nameWithType: IBatchData.UpdateBatchTaskAsync(BatchTaskInfo)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
    name: UpdateBatchTaskAsync
    nameWithType: IBatchData.UpdateBatchTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo)
    name: UpdateBatchTaskAsync
    nameWithType: IBatchData.UpdateBatchTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.UpdateBatchTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync
  isExternal: true
  name: RegisterPluginAsync
  nameWithType: BatchData.RegisterPluginAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.RegisterPluginAsync
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync
  isExternal: true
  name: SetBatchTaskInfoStateAsync
  nameWithType: BatchData.SetBatchTaskInfoStateAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SetBatchTaskInfoStateAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
  parent: SuperOffice.CRM.BatchProcessing.IBatchData
  isExternal: true
  name: SetBatchTaskInfoStateAsync(BatchTaskInfo, BatchTaskState)
  nameWithType: IBatchData.SetBatchTaskInfoStateAsync(BatchTaskInfo, BatchTaskState)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo, SuperOffice.Data.BatchTaskState)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
    name: SetBatchTaskInfoStateAsync
    nameWithType: IBatchData.SetBatchTaskInfoStateAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync(SuperOffice.CRM.Services.BatchTaskInfo,SuperOffice.Data.BatchTaskState)
    name: SetBatchTaskInfoStateAsync
    nameWithType: IBatchData.SetBatchTaskInfoStateAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchData.SetBatchTaskInfoStateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.BatchTaskState
    name: BatchTaskState
    nameWithType: BatchTaskState
    fullName: SuperOffice.Data.BatchTaskState
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync
  isExternal: true
  name: PopulateBatchTaskInfoFromRowAsync
  nameWithType: BatchData.PopulateBatchTaskInfoFromRowAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.PopulateBatchTaskInfoFromRowAsync
- uid: SuperOffice.CRM.Rows.BatchTaskRow
  commentId: T:SuperOffice.CRM.Rows.BatchTaskRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: BatchTaskRow
  nameWithType: BatchTaskRow
  fullName: SuperOffice.CRM.Rows.BatchTaskRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync
  isExternal: true
  name: SerializeParameterObjectToBinaryObjectRowAsync
  nameWithType: BatchData.SerializeParameterObjectToBinaryObjectRowAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.SerializeParameterObjectToBinaryObjectRowAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.BinaryObjectRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.BinaryObjectRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BinaryObjectRow>
  nameWithType: Task<BinaryObjectRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.BinaryObjectRow>
  nameWithType.vb: Task(Of BinaryObjectRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.BinaryObjectRow)
  name.vb: Task(Of BinaryObjectRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.BinaryObjectRow
    name: BinaryObjectRow
    nameWithType: BinaryObjectRow
    fullName: SuperOffice.CRM.Rows.BinaryObjectRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.BinaryObjectRow
    name: BinaryObjectRow
    nameWithType: BinaryObjectRow
    fullName: SuperOffice.CRM.Rows.BinaryObjectRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync
  isExternal: true
  name: DeserializeFromBinaryObjectRowToParameterObjectAsync
  nameWithType: BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchData.DeserializeFromBinaryObjectRowToParameterObjectAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.StringDictionary}'
  definition: System.Threading.Tasks.Task`1
  name: Task<StringDictionary>
  nameWithType: Task<StringDictionary>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.StringDictionary>
  nameWithType.vb: Task(Of StringDictionary)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.StringDictionary)
  name.vb: Task(Of StringDictionary)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.StringDictionary
    name: StringDictionary
    nameWithType: StringDictionary
    fullName: SuperOffice.CRM.Services.StringDictionary
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
