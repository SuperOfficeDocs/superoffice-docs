### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.CommandAction
  commentId: T:SuperOffice.Data.CommandAction
  id: CommandAction
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.CommandAction.Implicit
  - SuperOffice.Data.CommandAction.Ok
  - SuperOffice.Data.CommandAction.OkCancel
  - SuperOffice.Data.CommandAction.YesNo
  langs:
  - csharp
  - vb
  name: CommandAction
  nameWithType: CommandAction
  fullName: SuperOffice.Data.CommandAction
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nCommand action\n"
  syntax:
    content: public enum CommandAction
    content.vb: Public Enum CommandAction
  extensionMethods:
  - SuperOffice.Data.CommandAction.EnumUtil.MapEnums``2
  - SuperOffice.Data.CommandAction.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.CommandAction)
  - SuperOffice.Data.CommandAction.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.CommandAction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.CommandAction.Implicit
  commentId: F:SuperOffice.Data.CommandAction.Implicit
  id: Implicit
  parent: SuperOffice.Data.CommandAction
  langs:
  - csharp
  - vb
  name: Implicit
  nameWithType: CommandAction.Implicit
  fullName: SuperOffice.Data.CommandAction.Implicit
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: Command should be implicitly executed.\n"
  syntax:
    content: Implicit = 0
    return:
      type: SuperOffice.Data.CommandAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.CommandAction.YesNo
  commentId: F:SuperOffice.Data.CommandAction.YesNo
  id: YesNo
  parent: SuperOffice.Data.CommandAction
  langs:
  - csharp
  - vb
  name: YesNo
  nameWithType: CommandAction.YesNo
  fullName: SuperOffice.Data.CommandAction.YesNo
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: The client must display a dialog with buttons Yes and No.\n"
  syntax:
    content: YesNo = 1
    return:
      type: SuperOffice.Data.CommandAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.CommandAction.OkCancel
  commentId: F:SuperOffice.Data.CommandAction.OkCancel
  id: OkCancel
  parent: SuperOffice.Data.CommandAction
  langs:
  - csharp
  - vb
  name: OkCancel
  nameWithType: CommandAction.OkCancel
  fullName: SuperOffice.Data.CommandAction.OkCancel
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: The client must display a dialog with buttons Ok and Cancel.\n"
  syntax:
    content: OkCancel = 2
    return:
      type: SuperOffice.Data.CommandAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.CommandAction.Ok
  commentId: F:SuperOffice.Data.CommandAction.Ok
  id: Ok
  parent: SuperOffice.Data.CommandAction
  langs:
  - csharp
  - vb
  name: Ok
  nameWithType: CommandAction.Ok
  fullName: SuperOffice.Data.CommandAction.Ok
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: The client must display a dialog with Ok-button\n"
  syntax:
    content: Ok = 3
    return:
      type: SuperOffice.Data.CommandAction
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.CommandAction.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CommandAction, To>()
  nameWithType: EnumUtil.MapEnums<CommandAction, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.CommandAction, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CommandAction, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.CommandAction, To)()
  name.vb: MapEnums(Of CommandAction, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CommandAction, To>
    nameWithType: EnumUtil.MapEnums<CommandAction, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.CommandAction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CommandAction, To)
    nameWithType: EnumUtil.MapEnums(Of CommandAction, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.CommandAction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.CommandAction.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.CommandAction)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<CommandAction>(CommandAction)
  nameWithType: ObjectExtensions.AssignByReflection<CommandAction>(CommandAction)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.CommandAction>(SuperOffice.Data.CommandAction)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of CommandAction)(CommandAction)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.CommandAction)(SuperOffice.Data.CommandAction)
  name.vb: AssignByReflection(Of CommandAction)(CommandAction)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<CommandAction>
    nameWithType: ObjectExtensions.AssignByReflection<CommandAction>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.CommandAction>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.CommandAction
    name: CommandAction
    nameWithType: CommandAction
    fullName: SuperOffice.Data.CommandAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of CommandAction)
    nameWithType: ObjectExtensions.AssignByReflection(Of CommandAction)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.CommandAction)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.CommandAction
    name: CommandAction
    nameWithType: CommandAction
    fullName: SuperOffice.Data.CommandAction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.CommandAction.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<CommandAction>()
  nameWithType: ObjectExtensions.GraphCopy<CommandAction>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.CommandAction>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of CommandAction)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.CommandAction)()
  name.vb: GraphCopy(Of CommandAction)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<CommandAction>
    nameWithType: ObjectExtensions.GraphCopy<CommandAction>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.CommandAction>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of CommandAction)
    nameWithType: ObjectExtensions.GraphCopy(Of CommandAction)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.CommandAction)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.CommandAction.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CommandAction, To>()
  nameWithType: Converters.MapEnums<CommandAction, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.CommandAction, To>()
  nameWithType.vb: Converters.MapEnums(Of CommandAction, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.CommandAction, To)()
  name.vb: MapEnums(Of CommandAction, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CommandAction, To>
    nameWithType: Converters.MapEnums<CommandAction, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.CommandAction, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CommandAction, To)
    nameWithType: Converters.MapEnums(Of CommandAction, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.CommandAction, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.CommandAction
  commentId: T:SuperOffice.Data.CommandAction
  parent: SuperOffice.Data
  isExternal: true
  name: CommandAction
  nameWithType: CommandAction
  fullName: SuperOffice.Data.CommandAction
