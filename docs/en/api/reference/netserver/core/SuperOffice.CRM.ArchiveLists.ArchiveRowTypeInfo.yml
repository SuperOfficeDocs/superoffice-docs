### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  id: ArchiveRowTypeInfo
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor(System.String,System.String,System.Boolean)
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.HideAsDefault
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Mandatory
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Optional
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetMandatory
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetOptional
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ShowAsDefault
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString
  langs:
  - csharp
  - vb
  name: ArchiveRowTypeInfo
  nameWithType: ArchiveRowTypeInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: This class carries information about one archive entity
  example: []
  syntax:
    content: 'public class ArchiveRowTypeInfo : ICloneable'
    content.vb: Public Class ArchiveRowTypeInfo Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  - SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetOptional
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetOptional
  id: SetOptional
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: SetOptional
  nameWithType: ArchiveRowTypeInfo.SetOptional
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetOptional
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Constant, for use in constructor instead of the anonymous true/false.
  example: []
  syntax:
    content: public const bool SetOptional = true
    return:
      type: System.Boolean
    content.vb: Public Const SetOptional As Boolean = True
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetMandatory
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetMandatory
  id: SetMandatory
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: SetMandatory
  nameWithType: ArchiveRowTypeInfo.SetMandatory
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SetMandatory
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Constant, for use in constructor instead of the anonymous true/false.
  example: []
  syntax:
    content: public const bool SetMandatory = false
    return:
      type: System.Boolean
    content.vb: Public Const SetMandatory As Boolean = False
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ShowAsDefault
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ShowAsDefault
  id: ShowAsDefault
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ShowAsDefault
  nameWithType: ArchiveRowTypeInfo.ShowAsDefault
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ShowAsDefault
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Constant, for use in constructor instead of the anonymous true/false.
  example: []
  syntax:
    content: public const bool ShowAsDefault = true
    return:
      type: System.Boolean
    content.vb: Public Const ShowAsDefault As Boolean = True
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.HideAsDefault
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.HideAsDefault
  id: HideAsDefault
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: HideAsDefault
  nameWithType: ArchiveRowTypeInfo.HideAsDefault
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.HideAsDefault
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Constant, for use in constructor instead of the anonymous true/false.
  example: []
  syntax:
    content: public const bool HideAsDefault = false
    return:
      type: System.Boolean
    content.vb: Public Const HideAsDefault As Boolean = False
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Mandatory
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Mandatory
  id: Mandatory
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: Mandatory
  nameWithType: ArchiveRowTypeInfo.Mandatory
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Mandatory
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Constant value intended for the isOptional parameter of the constructor
  example: []
  syntax:
    content: public const bool Mandatory = false
    return:
      type: System.Boolean
    content.vb: Public Const Mandatory As Boolean = False
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Optional
  commentId: F:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Optional
  id: Optional
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: Optional
  nameWithType: ArchiveRowTypeInfo.Optional
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Optional
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Constant value intended for the isOptional parameter of the constructor
  example: []
  syntax:
    content: public const bool Optional = true
    return:
      type: System.Boolean
    content.vb: Public Const Optional As Boolean = True
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ArchiveRowTypeInfo()
  nameWithType: ArchiveRowTypeInfo.ArchiveRowTypeInfo()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ArchiveRowTypeInfo()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Construct the object, setting nothing.
  example: []
  syntax:
    content: public ArchiveRowTypeInfo()
    content.vb: Public Sub New()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor*
  nameWithType.vb: ArchiveRowTypeInfo.New()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.New()
  name.vb: New()
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor(System.String,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor(System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.Boolean)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ArchiveRowTypeInfo(string, string, bool)
  nameWithType: ArchiveRowTypeInfo.ArchiveRowTypeInfo(string, string, bool)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ArchiveRowTypeInfo(string, string, bool)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Construct the object, setting name, display name and isOptional status
  example: []
  syntax:
    content: public ArchiveRowTypeInfo(string name, string displayName, bool isOptional)
    parameters:
    - id: name
      type: System.String
      description: Programmatic name (it is permissible for multiple providers to offer the same entity!)
    - id: displayName
      type: System.String
      description: Display name to be shown to the user, can contain resource tags
    - id: isOptional
      type: System.Boolean
      description: Is this entity optional? If yes, we expect a GUI to be shown somehow, enabling the user to select it or avoid it
    content.vb: Public Sub New(name As String, displayName As String, isOptional As Boolean)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor*
  nameWithType.vb: ArchiveRowTypeInfo.New(String, String, Boolean)
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.New(String, String, Boolean)
  name.vb: New(String, String, Boolean)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean,System.Boolean)'
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ArchiveRowTypeInfo(string, string, string, bool, bool)
  nameWithType: ArchiveRowTypeInfo.ArchiveRowTypeInfo(string, string, string, bool, bool)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ArchiveRowTypeInfo(string, string, string, bool, bool)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Construct the object, setting name, display name, isOptional status
  example: []
  syntax:
    content: public ArchiveRowTypeInfo(string name, string displayName, string displayTooltip, bool isOptional, bool isDefaultShow)
    parameters:
    - id: name
      type: System.String
      description: Programmatic name (it is permissible for multiple providers to offer the same entity!)
    - id: displayName
      type: System.String
      description: Display name to be shown to the user, can contain resource tags
    - id: displayTooltip
      type: System.String
      description: Display tooltip to be shown to the user, can contain resource tags
    - id: isOptional
      type: System.Boolean
      description: Is this entity optional? If yes, we expect a GUI to be shown somehow, enabling the user to select it or avoid it
    - id: isDefaultShow
      type: System.Boolean
      description: Should this entity be chosen by default? If yes, we expect a GUI checkbox to be checked
    content.vb: Public Sub New(name As String, displayName As String, displayTooltip As String, isOptional As Boolean, isDefaultShow As Boolean)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor*
  nameWithType.vb: ArchiveRowTypeInfo.New(String, String, String, Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.New(String, String, String, Boolean, Boolean)
  name.vb: New(String, String, String, Boolean, Boolean)
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString
  id: ToString
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ArchiveRowTypeInfo.ToString()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Return a string representation, intended for debug display purposes
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString*
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone
  id: Clone
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ArchiveRowTypeInfo.Clone()
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone() As Object
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone*
  implements:
  - System.ICloneable.Clone
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  id: ToNameArray(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(params ArchiveRowTypeInfo[])
  nameWithType: ArchiveRowTypeInfo.ToNameArray(params ArchiveRowTypeInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(params SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Utility method to convert an array of ArchiveEntityInfo into a string array containing the names only
  example: []
  syntax:
    content: public static string[] ToNameArray(params ArchiveRowTypeInfo[] entityInfos)
    parameters:
    - id: entityInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[]
      description: Column infos to extract names from
    return:
      type: System.String[]
      description: Array of names, in original order
    content.vb: Public Shared Function ToNameArray(ParamArray entityInfos As ArchiveRowTypeInfo()) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameArray(ParamArray ArchiveRowTypeInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(ParamArray SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo())
  name.vb: ToNameArray(ParamArray ArchiveRowTypeInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  id: ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(Predicate<ArchiveRowTypeInfo>, params ArchiveRowTypeInfo[])
  nameWithType: ArchiveRowTypeInfo.ToNameArray(Predicate<ArchiveRowTypeInfo>, params ArchiveRowTypeInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>, params SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: >-
    Utility method to conditionally convert an array of ArchiveEntityInfo into a string array containing

    the names only. The given predicate is applied to each ArchiveEntityInfo to determine if its name should

    be included in the result.
  example: []
  syntax:
    content: public static string[] ToNameArray(Predicate<ArchiveRowTypeInfo> condition, params ArchiveRowTypeInfo[] entityInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: >-
        Predicate that takes an ArchiveEntityInfo and returns a bool. A value of true indicates
                    that that particular ArchiveEntityInfo should be included in the result.
    - id: entityInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[]
      description: Column infos to test and extract the name from
    return:
      type: System.String[]
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToNameArray(condition As Predicate(Of ArchiveRowTypeInfo), ParamArray entityInfos As ArchiveRowTypeInfo()) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameArray(Predicate(Of ArchiveRowTypeInfo), ParamArray ArchiveRowTypeInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo), ParamArray SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo())
  name.vb: ToNameArray(Predicate(Of ArchiveRowTypeInfo), ParamArray ArchiveRowTypeInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  id: ToNameArray(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(List<ArchiveRowTypeInfo>)
  nameWithType: ArchiveRowTypeInfo.ToNameArray(List<ArchiveRowTypeInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Utility method to convert a list of ArchiveEntityInfo into a string array containing the names only
  example: []
  syntax:
    content: public static string[] ToNameArray(List<ArchiveRowTypeInfo> entityInfos)
    parameters:
    - id: entityInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Column infos to extract names from
    return:
      type: System.String[]
      description: Array of names, in original order
    content.vb: Public Shared Function ToNameArray(entityInfos As List(Of ArchiveRowTypeInfo)) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameArray(List(Of ArchiveRowTypeInfo))
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo))
  name.vb: ToNameArray(List(Of ArchiveRowTypeInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  id: ToNameArray(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameArray(Predicate<ArchiveRowTypeInfo>, List<ArchiveRowTypeInfo>)
  nameWithType: ArchiveRowTypeInfo.ToNameArray(Predicate<ArchiveRowTypeInfo>, List<ArchiveRowTypeInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>, System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: >-
    Utility method to conditionally convert a list of ArchiveEntityInfo into a string array containing

    the names only. The given predicate is applied to each ArchiveEntityInfo to determine if its name should

    be included in the result.
  example: []
  syntax:
    content: public static string[] ToNameArray(Predicate<ArchiveRowTypeInfo> condition, List<ArchiveRowTypeInfo> entityInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: >-
        Predicate that takes an ArchiveEntityInfo and returns a bool. A value of true indicates
                    that that particular ArchiveEntityInfo should be included in the result.
    - id: entityInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Column infos to test and extract the name from
    return:
      type: System.String[]
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToNameArray(condition As Predicate(Of ArchiveRowTypeInfo), entityInfos As List(Of ArchiveRowTypeInfo)) As String()
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameArray(Predicate(Of ArchiveRowTypeInfo), List(Of ArchiveRowTypeInfo))
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo), System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo))
  name.vb: ToNameArray(Predicate(Of ArchiveRowTypeInfo), List(Of ArchiveRowTypeInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  id: ToNameDictionary(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(params ArchiveRowTypeInfo[])
  nameWithType: ArchiveRowTypeInfo.ToNameDictionary(params ArchiveRowTypeInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(params SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Utility method to convert an array of ArchiveEntityInfo into a string array containing the names only
  example: []
  syntax:
    content: public static Dictionary<string, ArchiveRowTypeInfo> ToNameDictionary(params ArchiveRowTypeInfo[] entityInfos)
    parameters:
    - id: entityInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[]
      description: Column infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Array of names, in original order
    content.vb: Public Shared Function ToNameDictionary(ParamArray entityInfos As ArchiveRowTypeInfo()) As Dictionary(Of String, ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameDictionary(ParamArray ArchiveRowTypeInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(ParamArray SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo())
  name.vb: ToNameDictionary(ParamArray ArchiveRowTypeInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  id: ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(Predicate<ArchiveRowTypeInfo>, params ArchiveRowTypeInfo[])
  nameWithType: ArchiveRowTypeInfo.ToNameDictionary(Predicate<ArchiveRowTypeInfo>, params ArchiveRowTypeInfo[])
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>, params SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: >-
    Utility method to conditionally convert an array of ArchiveEntityInfo into a string array containing

    the names only. The given predicate is applied to each ArchiveEntityInfo to determine if its name should

    be included in the result.
  example: []
  syntax:
    content: public static Dictionary<string, ArchiveRowTypeInfo> ToNameDictionary(Predicate<ArchiveRowTypeInfo> condition, params ArchiveRowTypeInfo[] entityInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: >-
        Predicate that takes an ArchiveEntityInfo and returns a bool. A value of true indicates
                    that that particular ArchiveEntityInfo should be included in the result.
    - id: entityInfos
      type: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[]
      description: Column infos to test and extract the name from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToNameDictionary(condition As Predicate(Of ArchiveRowTypeInfo), ParamArray entityInfos As ArchiveRowTypeInfo()) As Dictionary(Of String, ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameDictionary(Predicate(Of ArchiveRowTypeInfo), ParamArray ArchiveRowTypeInfo())
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo), ParamArray SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo())
  name.vb: ToNameDictionary(Predicate(Of ArchiveRowTypeInfo), ParamArray ArchiveRowTypeInfo())
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  id: ToNameDictionary(System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(List<ArchiveRowTypeInfo>)
  nameWithType: ArchiveRowTypeInfo.ToNameDictionary(List<ArchiveRowTypeInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Utility method to convert a list of ArchiveEntityInfo into a string array containing the names only
  example: []
  syntax:
    content: public static Dictionary<string, ArchiveRowTypeInfo> ToNameDictionary(List<ArchiveRowTypeInfo> entityInfos)
    parameters:
    - id: entityInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Column infos to extract names from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Array of names, in original order
    content.vb: Public Shared Function ToNameDictionary(entityInfos As List(Of ArchiveRowTypeInfo)) As Dictionary(Of String, ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameDictionary(List(Of ArchiveRowTypeInfo))
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo))
  name.vb: ToNameDictionary(List(Of ArchiveRowTypeInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  commentId: M:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  id: ToNameDictionary(System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo},System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo})
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: ToNameDictionary(Predicate<ArchiveRowTypeInfo>, List<ArchiveRowTypeInfo>)
  nameWithType: ArchiveRowTypeInfo.ToNameDictionary(Predicate<ArchiveRowTypeInfo>, List<ArchiveRowTypeInfo>)
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>, System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: >-
    Utility method to conditionally convert a list of ArchiveEntityInfo into a string array containing

    the names only. The given predicate is applied to each ArchiveEntityInfo to determine if its name should

    be included in the result.
  example: []
  syntax:
    content: public static Dictionary<string, ArchiveRowTypeInfo> ToNameDictionary(Predicate<ArchiveRowTypeInfo> condition, List<ArchiveRowTypeInfo> entityInfos)
    parameters:
    - id: condition
      type: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: >-
        Predicate that takes an ArchiveEntityInfo and returns a bool. A value of true indicates
                    that that particular ArchiveEntityInfo should be included in the result.
    - id: entityInfos
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Column infos to test and extract the name from
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
      description: Array of names of column infos that were chosen, in original order
    content.vb: Public Shared Function ToNameDictionary(condition As Predicate(Of ArchiveRowTypeInfo), entityInfos As List(Of ArchiveRowTypeInfo)) As Dictionary(Of String, ArchiveRowTypeInfo)
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary*
  nameWithType.vb: ArchiveRowTypeInfo.ToNameDictionary(Predicate(Of ArchiveRowTypeInfo), List(Of ArchiveRowTypeInfo))
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary(System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo), System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo))
  name.vb: ToNameDictionary(Predicate(Of ArchiveRowTypeInfo), List(Of ArchiveRowTypeInfo))
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName
  id: DisplayName
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ArchiveRowTypeInfo.DisplayName
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: The user-friendly name of the entity, to be reflected in checkboxes in the archive
  example: []
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName*
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip
  id: DisplayTooltip
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: DisplayTooltip
  nameWithType: ArchiveRowTypeInfo.DisplayTooltip
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: User-friendly tooltip for the entity, to be reflected in the checkboxes in the archive
  example: []
  syntax:
    content: public string DisplayTooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayTooltip As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip*
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name
  id: Name
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ArchiveRowTypeInfo.Name
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: Unique entity identifier
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name*
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional
  id: IsOptional
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: IsOptional
  nameWithType: ArchiveRowTypeInfo.IsOptional
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: >-
    Can this entity be selected in the GUI (typically through a checkbox with the entity display name in the bottom of the archive).

    If not, the entity should ALWAYS be requested (this is the default behaviour).
  example: []
  syntax:
    content: public bool IsOptional { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOptional As Boolean
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional*
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow
  commentId: P:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow
  id: DefaultShow
  parent: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
  langs:
  - csharp
  - vb
  name: DefaultShow
  nameWithType: ArchiveRowTypeInfo.DefaultShow
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.ArchiveLists
  summary: >-
    Should this entity be shown as default, if it is optional (i.e., should it be selected for showing

    when an archive is first-ever presented to the user)
  example: []
  syntax:
    content: public bool DefaultShow { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DefaultShow As Boolean
  overload: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow*
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.ArchiveLists
    name: ArchiveLists
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.ArchiveLists
    name: ArchiveLists
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<ArchiveRowTypeInfo, To>(ArchiveRowTypeInfo)
  nameWithType: EnumUtil.MapEnums<ArchiveRowTypeInfo, To>(ArchiveRowTypeInfo)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo, To>(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  nameWithType.vb: EnumUtil.MapEnums(Of ArchiveRowTypeInfo, To)(ArchiveRowTypeInfo)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo, To)(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: MapEnums(Of ArchiveRowTypeInfo, To)(ArchiveRowTypeInfo)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<ArchiveRowTypeInfo, To>(ArchiveRowTypeInfo)
  nameWithType: Converters.MapEnums<ArchiveRowTypeInfo, To>(ArchiveRowTypeInfo)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo, To>(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  nameWithType.vb: Converters.MapEnums(Of ArchiveRowTypeInfo, To)(ArchiveRowTypeInfo)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo, To)(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: MapEnums(Of ArchiveRowTypeInfo, To)(ArchiveRowTypeInfo)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<ArchiveRowTypeInfo>(ArchiveRowTypeInfo, ArchiveRowTypeInfo)
  nameWithType: ObjectExtensions.AssignByReflection<ArchiveRowTypeInfo>(ArchiveRowTypeInfo, ArchiveRowTypeInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo, SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ArchiveRowTypeInfo)(ArchiveRowTypeInfo, ArchiveRowTypeInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo, SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: AssignByReflection(Of ArchiveRowTypeInfo)(ArchiveRowTypeInfo, ArchiveRowTypeInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<ArchiveRowTypeInfo>(ArchiveRowTypeInfo)
  nameWithType: ObjectExtensions.GraphCopy<ArchiveRowTypeInfo>(ArchiveRowTypeInfo)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ArchiveRowTypeInfo)(ArchiveRowTypeInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: GraphCopy(Of ArchiveRowTypeInfo)(ArchiveRowTypeInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
  - name: (
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.#ctor
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo__ctor
  name: ArchiveRowTypeInfo
  nameWithType: ArchiveRowTypeInfo.ArchiveRowTypeInfo
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ArchiveRowTypeInfo
  nameWithType.vb: ArchiveRowTypeInfo.New
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_ToString
  name: ToString
  nameWithType: ArchiveRowTypeInfo.ToString
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToString
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_Clone
  name: Clone
  nameWithType: ArchiveRowTypeInfo.Clone
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_ToNameArray_SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo___
  name: ToNameArray
  nameWithType: ArchiveRowTypeInfo.ToNameArray
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameArray
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[]
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  name: ArchiveRowTypeInfo[]
  nameWithType: ArchiveRowTypeInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo[]
  nameWithType.vb: ArchiveRowTypeInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo()
  name.vb: ArchiveRowTypeInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: (
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  commentId: T:System.Predicate{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  parent: System
  definition: System.Predicate`1
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<ArchiveRowTypeInfo>
  nameWithType: Predicate<ArchiveRowTypeInfo>
  fullName: System.Predicate<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>
  nameWithType.vb: Predicate(Of ArchiveRowTypeInfo)
  fullName.vb: System.Predicate(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: Predicate(Of ArchiveRowTypeInfo)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: System.Predicate`1
  commentId: T:System.Predicate`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
  nameWithType.vb: Predicate(Of T)
  fullName.vb: System.Predicate(Of T)
  name.vb: Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.predicate-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ArchiveRowTypeInfo>
  nameWithType: List<ArchiveRowTypeInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>
  nameWithType.vb: List(Of ArchiveRowTypeInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: List(Of ArchiveRowTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_ToNameDictionary_SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo___
  name: ToNameDictionary
  nameWithType: ArchiveRowTypeInfo.ToNameDictionary
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.ToNameDictionary
- uid: System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  commentId: T:System.Collections.Generic.Dictionary{System.String,SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, ArchiveRowTypeInfo>
  nameWithType: Dictionary<string, ArchiveRowTypeInfo>
  fullName: System.Collections.Generic.Dictionary<string, SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo>
  nameWithType.vb: Dictionary(Of String, ArchiveRowTypeInfo)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo)
  name.vb: Dictionary(Of String, ArchiveRowTypeInfo)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo
    name: ArchiveRowTypeInfo
    isExternal: true
    href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_DisplayName
  name: DisplayName
  nameWithType: ArchiveRowTypeInfo.DisplayName
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayName
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_DisplayTooltip
  name: DisplayTooltip
  nameWithType: ArchiveRowTypeInfo.DisplayTooltip
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DisplayTooltip
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_Name
  name: Name
  nameWithType: ArchiveRowTypeInfo.Name
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.Name
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_IsOptional
  name: IsOptional
  nameWithType: ArchiveRowTypeInfo.IsOptional
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.IsOptional
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow
  isExternal: true
  href: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.html#SuperOffice_CRM_ArchiveLists_ArchiveRowTypeInfo_DefaultShow
  name: DefaultShow
  nameWithType: ArchiveRowTypeInfo.DefaultShow
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRowTypeInfo.DefaultShow
