### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.UDefFieldRow
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRow
  id: UDefFieldRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.UDefFieldRow.#ctor(SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase)
  - SuperOffice.CRM.Rows.UDefFieldRow._currentColumnId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldDefault
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldHeight
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLabel
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLeft
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldTop
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldType
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFieldWidth
  - SuperOffice.CRM.Rows.UDefFieldRow._currentFormatMask
  - SuperOffice.CRM.Rows.UDefFieldRow._currentHideLabel
  - SuperOffice.CRM.Rows.UDefFieldRow._currentIndexed
  - SuperOffice.CRM.Rows.UDefFieldRow._currentJustification
  - SuperOffice.CRM.Rows.UDefFieldRow._currentLabelHeight
  - SuperOffice.CRM.Rows.UDefFieldRow._currentLabelLeft
  - SuperOffice.CRM.Rows.UDefFieldRow._currentLabelTop
  - SuperOffice.CRM.Rows.UDefFieldRow._currentLabelWidth
  - SuperOffice.CRM.Rows.UDefFieldRow._currentLastVersionId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentListTableId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentMandatory
  - SuperOffice.CRM.Rows.UDefFieldRow._currentOwnerTableId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentPage1LineNo
  - SuperOffice.CRM.Rows.UDefFieldRow._currentProgId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentReadOnly
  - SuperOffice.CRM.Rows.UDefFieldRow._currentRegistered
  - SuperOffice.CRM.Rows.UDefFieldRow._currentRegisteredAssociateId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentShortLabel
  - SuperOffice.CRM.Rows.UDefFieldRow._currentTabOrder
  - SuperOffice.CRM.Rows.UDefFieldRow._currentTextLength
  - SuperOffice.CRM.Rows.UDefFieldRow._currentTooltip
  - SuperOffice.CRM.Rows.UDefFieldRow._currentUDefFieldId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentUdefIdentity
  - SuperOffice.CRM.Rows.UDefFieldRow._currentUDListDefinitionId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentUpdated
  - SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedAssociateId
  - SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedCount
  - SuperOffice.CRM.Rows.UDefFieldRow._currentVersion
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedColumnId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldDefault
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldHeight
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLabel
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLeft
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldTop
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldType
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldWidth
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedFormatMask
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedHideLabel
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedIndexed
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedJustification
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelHeight
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelLeft
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelTop
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelWidth
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedLastVersionId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedListTableId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedMandatory
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedOwnerTableId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedPage1LineNo
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedProgId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedReadOnly
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedRegistered
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedRegisteredAssociateId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedShortLabel
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedTabOrder
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedTextLength
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedTooltip
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedUDefFieldId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedUdefIdentity
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedUDListDefinitionId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdated
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedAssociateId
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedCount
  - SuperOffice.CRM.Rows.UDefFieldRow._persistedVersion
  - SuperOffice.CRM.Rows.UDefFieldRow.ColumnId
  - SuperOffice.CRM.Rows.UDefFieldRow.CreateNew
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldTop
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldType
  - SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth
  - SuperOffice.CRM.Rows.UDefFieldRow.FormatMask
  - SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch)
  - SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.UDefFieldTableInfo)
  - SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.UDefFieldRow.HideLabel
  - SuperOffice.CRM.Rows.UDefFieldRow.Indexed
  - SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.UDefFieldRow.IsDirty
  - SuperOffice.CRM.Rows.UDefFieldRow.IsNew
  - SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.UDefFieldRow.Item(System.String)
  - SuperOffice.CRM.Rows.UDefFieldRow.Justification
  - SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight
  - SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft
  - SuperOffice.CRM.Rows.UDefFieldRow.LabelTop
  - SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth
  - SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId
  - SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  - SuperOffice.CRM.Rows.UDefFieldRow.Mandatory
  - SuperOffice.CRM.Rows.UDefFieldRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync(System.Boolean)
  - SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId
  - SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo
  - SuperOffice.CRM.Rows.UDefFieldRow.ProgId
  - SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly
  - SuperOffice.CRM.Rows.UDefFieldRow.Registered
  - SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId
  - SuperOffice.CRM.Rows.UDefFieldRow.Reset
  - SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew
  - SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel
  - SuperOffice.CRM.Rows.UDefFieldRow.TableInfo
  - SuperOffice.CRM.Rows.UDefFieldRow.TabOrder
  - SuperOffice.CRM.Rows.UDefFieldRow.TextLength
  - SuperOffice.CRM.Rows.UDefFieldRow.Tooltip
  - SuperOffice.CRM.Rows.UDefFieldRow.ToString
  - SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId
  - SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo
  - SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity
  - SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId
  - SuperOffice.CRM.Rows.UDefFieldRow.Updated
  - SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId
  - SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount
  - SuperOffice.CRM.Rows.UDefFieldRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  - SuperOffice.CRM.Rows.UDefFieldRow.Version
  langs:
  - csharp
  - vb
  name: UDefFieldRow
  nameWithType: UDefFieldRow
  fullName: SuperOffice.CRM.Rows.UDefFieldRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nDefinition table for user-defined fields; one row in this table corresponds to one generation of one field. The user defined fields that are in use, and earlier versions of user defined fields. ColumnId refers to the field type; see UDXXXSmall or UDXXXLarge for the referring ID.  Preferences prefsection=&apos;System&apos;, prefkey=&apos;CurrentUdefVersioncontact&apos;  (or CurrentUdefVersionperson, project, sale), gives you the current version of user defined fields.  prefkey=&apos;AdminUdefVersion&lt;...>&apos; gives you the current version that&apos;s being edited. If Current version = admin version, no editing has been done since the last Publish of user defined field was performed.\n<br />Row Object for table &apos;UDefField&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) UDefFieldRow <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.UDefFieldRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.UDefFieldRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.UDefFieldTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.UDefFieldTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.UDefFieldRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <see cref=\"!:SuperOffice.CRM.Rows.UDefFieldRows.GetFromReader\"></see>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table UDefField are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class UDefFieldRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable'
    content.vb: >-
      Public Class UDefFieldRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._isSaving
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Rows.TableRowBase.SaveAsync
  - SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
  - SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  - SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  - SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
  - SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  extensionMethods:
  - SuperOffice.CRM.Rows.UDefFieldRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.UDefFieldRow.SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
  - SuperOffice.CRM.Rows.UDefFieldRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedUDefFieldId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedUDefFieldId
  id: _persistedUDefFieldId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedUDefFieldId
  nameWithType: UDefFieldRow._persistedUDefFieldId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedUDefFieldId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUDefFieldId
    return:
      type: System.Int32
    content.vb: Protected _persistedUDefFieldId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedOwnerTableId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedOwnerTableId
  id: _persistedOwnerTableId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedOwnerTableId
  nameWithType: UDefFieldRow._persistedOwnerTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedOwnerTableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedOwnerTableId
    return:
      type: System.Int16
    content.vb: Protected _persistedOwnerTableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedTabOrder
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedTabOrder
  id: _persistedTabOrder
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedTabOrder
  nameWithType: UDefFieldRow._persistedTabOrder
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedTabOrder
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.TabOrder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedTabOrder
    return:
      type: System.Int16
    content.vb: Protected _persistedTabOrder As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldType
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldType
  id: _persistedFieldType
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldType
  nameWithType: UDefFieldRow._persistedFieldType
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedFieldType
    return:
      type: System.Int16
    content.vb: Protected _persistedFieldType As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedListTableId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedListTableId
  id: _persistedListTableId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedListTableId
  nameWithType: UDefFieldRow._persistedListTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedListTableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ListTableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedListTableId
    return:
      type: System.Int16
    content.vb: Protected _persistedListTableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedUDListDefinitionId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedUDListDefinitionId
  id: _persistedUDListDefinitionId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedUDListDefinitionId
  nameWithType: UDefFieldRow._persistedUDListDefinitionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedUDListDefinitionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUDListDefinitionId
    return:
      type: System.Int32
    content.vb: Protected _persistedUDListDefinitionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedColumnId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedColumnId
  id: _persistedColumnId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedColumnId
  nameWithType: UDefFieldRow._persistedColumnId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedColumnId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ColumnId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedColumnId
    return:
      type: System.Int32
    content.vb: Protected _persistedColumnId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedTextLength
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedTextLength
  id: _persistedTextLength
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedTextLength
  nameWithType: UDefFieldRow._persistedTextLength
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedTextLength
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.TextLength\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedTextLength
    return:
      type: System.Int16
    content.vb: Protected _persistedTextLength As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldDefault
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldDefault
  id: _persistedFieldDefault
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldDefault
  nameWithType: UDefFieldRow._persistedFieldDefault
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldDefault
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedFieldDefault
    return:
      type: System.String
    content.vb: Protected _persistedFieldDefault As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedIndexed
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedIndexed
  id: _persistedIndexed
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedIndexed
  nameWithType: UDefFieldRow._persistedIndexed
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedIndexed
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Indexed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedIndexed
    return:
      type: System.Int16
    content.vb: Protected _persistedIndexed As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedMandatory
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedMandatory
  id: _persistedMandatory
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedMandatory
  nameWithType: UDefFieldRow._persistedMandatory
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedMandatory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Mandatory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedMandatory
    return:
      type: System.Int16
    content.vb: Protected _persistedMandatory As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedReadOnly
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedReadOnly
  id: _persistedReadOnly
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedReadOnly
  nameWithType: UDefFieldRow._persistedReadOnly
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedReadOnly
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedReadOnly
    return:
      type: System.Int16
    content.vb: Protected _persistedReadOnly As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedTooltip
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedTooltip
  id: _persistedTooltip
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedTooltip
  nameWithType: UDefFieldRow._persistedTooltip
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedTooltip
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedTooltip
    return:
      type: System.String
    content.vb: Protected _persistedTooltip As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLabel
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLabel
  id: _persistedFieldLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldLabel
  nameWithType: UDefFieldRow._persistedFieldLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLabel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedFieldLabel
    return:
      type: System.String
    content.vb: Protected _persistedFieldLabel As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelLeft
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelLeft
  id: _persistedLabelLeft
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedLabelLeft
  nameWithType: UDefFieldRow._persistedLabelLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelLeft
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedLabelLeft
    return:
      type: System.Int16
    content.vb: Protected _persistedLabelLeft As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelTop
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelTop
  id: _persistedLabelTop
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedLabelTop
  nameWithType: UDefFieldRow._persistedLabelTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelTop
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelTop\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedLabelTop
    return:
      type: System.Int16
    content.vb: Protected _persistedLabelTop As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelWidth
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelWidth
  id: _persistedLabelWidth
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedLabelWidth
  nameWithType: UDefFieldRow._persistedLabelWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelWidth
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedLabelWidth
    return:
      type: System.Int16
    content.vb: Protected _persistedLabelWidth As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelHeight
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelHeight
  id: _persistedLabelHeight
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedLabelHeight
  nameWithType: UDefFieldRow._persistedLabelHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedLabelHeight
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedLabelHeight
    return:
      type: System.Int16
    content.vb: Protected _persistedLabelHeight As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLeft
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLeft
  id: _persistedFieldLeft
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldLeft
  nameWithType: UDefFieldRow._persistedFieldLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldLeft
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedFieldLeft
    return:
      type: System.Int16
    content.vb: Protected _persistedFieldLeft As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldTop
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldTop
  id: _persistedFieldTop
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldTop
  nameWithType: UDefFieldRow._persistedFieldTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldTop
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldTop\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedFieldTop
    return:
      type: System.Int16
    content.vb: Protected _persistedFieldTop As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldWidth
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldWidth
  id: _persistedFieldWidth
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldWidth
  nameWithType: UDefFieldRow._persistedFieldWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldWidth
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedFieldWidth
    return:
      type: System.Int16
    content.vb: Protected _persistedFieldWidth As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldHeight
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldHeight
  id: _persistedFieldHeight
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFieldHeight
  nameWithType: UDefFieldRow._persistedFieldHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFieldHeight
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedFieldHeight
    return:
      type: System.Int16
    content.vb: Protected _persistedFieldHeight As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedVersion
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedVersion
  id: _persistedVersion
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedVersion
  nameWithType: UDefFieldRow._persistedVersion
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedVersion
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Version\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedVersion
    return:
      type: System.Int16
    content.vb: Protected _persistedVersion As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedLastVersionId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedLastVersionId
  id: _persistedLastVersionId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedLastVersionId
  nameWithType: UDefFieldRow._persistedLastVersionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedLastVersionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedLastVersionId
    return:
      type: System.Int32
    content.vb: Protected _persistedLastVersionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedPage1LineNo
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedPage1LineNo
  id: _persistedPage1LineNo
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedPage1LineNo
  nameWithType: UDefFieldRow._persistedPage1LineNo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedPage1LineNo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedPage1LineNo
    return:
      type: System.Int16
    content.vb: Protected _persistedPage1LineNo As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedRegistered
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedRegistered
  id: _persistedRegistered
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedRegistered
  nameWithType: UDefFieldRow._persistedRegistered
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedRegistered
    return:
      type: System.DateTime
    content.vb: Protected _persistedRegistered As DateTime
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedRegisteredAssociateId
  id: _persistedRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedRegisteredAssociateId
  nameWithType: UDefFieldRow._persistedRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdated
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdated
  id: _persistedUpdated
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedUpdated
  nameWithType: UDefFieldRow._persistedUpdated
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedUpdated
    return:
      type: System.DateTime
    content.vb: Protected _persistedUpdated As DateTime
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedAssociateId
  id: _persistedUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedAssociateId
  nameWithType: UDefFieldRow._persistedUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedCount
  id: _persistedUpdatedCount
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedCount
  nameWithType: UDefFieldRow._persistedUpdatedCount
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _persistedUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedUdefIdentity
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedUdefIdentity
  id: _persistedUdefIdentity
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedUdefIdentity
  nameWithType: UDefFieldRow._persistedUdefIdentity
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedUdefIdentity
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUdefIdentity
    return:
      type: System.Int32
    content.vb: Protected _persistedUdefIdentity As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedHideLabel
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedHideLabel
  id: _persistedHideLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedHideLabel
  nameWithType: UDefFieldRow._persistedHideLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedHideLabel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.HideLabel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedHideLabel
    return:
      type: System.Int16
    content.vb: Protected _persistedHideLabel As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedJustification
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedJustification
  id: _persistedJustification
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedJustification
  nameWithType: UDefFieldRow._persistedJustification
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedJustification
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Justification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected UdefJustification _persistedJustification
    return:
      type: SuperOffice.Data.UdefJustification
    content.vb: Protected _persistedJustification As UdefJustification
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedProgId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedProgId
  id: _persistedProgId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedProgId
  nameWithType: UDefFieldRow._persistedProgId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedProgId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ProgId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedProgId
    return:
      type: System.String
    content.vb: Protected _persistedProgId As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedFormatMask
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedFormatMask
  id: _persistedFormatMask
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedFormatMask
  nameWithType: UDefFieldRow._persistedFormatMask
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedFormatMask
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FormatMask\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedFormatMask
    return:
      type: System.String
    content.vb: Protected _persistedFormatMask As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._persistedShortLabel
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._persistedShortLabel
  id: _persistedShortLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _persistedShortLabel
  nameWithType: UDefFieldRow._persistedShortLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._persistedShortLabel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedShortLabel
    return:
      type: System.String
    content.vb: Protected _persistedShortLabel As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentUDefFieldId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentUDefFieldId
  id: _currentUDefFieldId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentUDefFieldId
  nameWithType: UDefFieldRow._currentUDefFieldId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentUDefFieldId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUDefFieldId
    return:
      type: System.Int32
    content.vb: Protected _currentUDefFieldId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentOwnerTableId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentOwnerTableId
  id: _currentOwnerTableId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentOwnerTableId
  nameWithType: UDefFieldRow._currentOwnerTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentOwnerTableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentOwnerTableId
    return:
      type: System.Int16
    content.vb: Protected _currentOwnerTableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentTabOrder
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentTabOrder
  id: _currentTabOrder
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentTabOrder
  nameWithType: UDefFieldRow._currentTabOrder
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentTabOrder
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.TabOrder\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentTabOrder
    return:
      type: System.Int16
    content.vb: Protected _currentTabOrder As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldType
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldType
  id: _currentFieldType
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldType
  nameWithType: UDefFieldRow._currentFieldType
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentFieldType
    return:
      type: System.Int16
    content.vb: Protected _currentFieldType As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentListTableId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentListTableId
  id: _currentListTableId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentListTableId
  nameWithType: UDefFieldRow._currentListTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentListTableId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ListTableId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentListTableId
    return:
      type: System.Int16
    content.vb: Protected _currentListTableId As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentUDListDefinitionId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentUDListDefinitionId
  id: _currentUDListDefinitionId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentUDListDefinitionId
  nameWithType: UDefFieldRow._currentUDListDefinitionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentUDListDefinitionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUDListDefinitionId
    return:
      type: System.Int32
    content.vb: Protected _currentUDListDefinitionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentColumnId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentColumnId
  id: _currentColumnId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentColumnId
  nameWithType: UDefFieldRow._currentColumnId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentColumnId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ColumnId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentColumnId
    return:
      type: System.Int32
    content.vb: Protected _currentColumnId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentTextLength
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentTextLength
  id: _currentTextLength
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentTextLength
  nameWithType: UDefFieldRow._currentTextLength
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentTextLength
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.TextLength\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentTextLength
    return:
      type: System.Int16
    content.vb: Protected _currentTextLength As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldDefault
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldDefault
  id: _currentFieldDefault
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldDefault
  nameWithType: UDefFieldRow._currentFieldDefault
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldDefault
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentFieldDefault
    return:
      type: System.String
    content.vb: Protected _currentFieldDefault As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentIndexed
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentIndexed
  id: _currentIndexed
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentIndexed
  nameWithType: UDefFieldRow._currentIndexed
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentIndexed
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Indexed\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentIndexed
    return:
      type: System.Int16
    content.vb: Protected _currentIndexed As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentMandatory
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentMandatory
  id: _currentMandatory
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentMandatory
  nameWithType: UDefFieldRow._currentMandatory
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentMandatory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Mandatory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentMandatory
    return:
      type: System.Int16
    content.vb: Protected _currentMandatory As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentReadOnly
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentReadOnly
  id: _currentReadOnly
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentReadOnly
  nameWithType: UDefFieldRow._currentReadOnly
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentReadOnly
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentReadOnly
    return:
      type: System.Int16
    content.vb: Protected _currentReadOnly As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentTooltip
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentTooltip
  id: _currentTooltip
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentTooltip
  nameWithType: UDefFieldRow._currentTooltip
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentTooltip
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentTooltip
    return:
      type: System.String
    content.vb: Protected _currentTooltip As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLabel
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLabel
  id: _currentFieldLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldLabel
  nameWithType: UDefFieldRow._currentFieldLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLabel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentFieldLabel
    return:
      type: System.String
    content.vb: Protected _currentFieldLabel As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelLeft
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentLabelLeft
  id: _currentLabelLeft
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentLabelLeft
  nameWithType: UDefFieldRow._currentLabelLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelLeft
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentLabelLeft
    return:
      type: System.Int16
    content.vb: Protected _currentLabelLeft As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelTop
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentLabelTop
  id: _currentLabelTop
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentLabelTop
  nameWithType: UDefFieldRow._currentLabelTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelTop
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelTop\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentLabelTop
    return:
      type: System.Int16
    content.vb: Protected _currentLabelTop As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelWidth
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentLabelWidth
  id: _currentLabelWidth
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentLabelWidth
  nameWithType: UDefFieldRow._currentLabelWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelWidth
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentLabelWidth
    return:
      type: System.Int16
    content.vb: Protected _currentLabelWidth As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelHeight
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentLabelHeight
  id: _currentLabelHeight
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentLabelHeight
  nameWithType: UDefFieldRow._currentLabelHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentLabelHeight
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentLabelHeight
    return:
      type: System.Int16
    content.vb: Protected _currentLabelHeight As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLeft
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLeft
  id: _currentFieldLeft
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldLeft
  nameWithType: UDefFieldRow._currentFieldLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldLeft
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentFieldLeft
    return:
      type: System.Int16
    content.vb: Protected _currentFieldLeft As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldTop
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldTop
  id: _currentFieldTop
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldTop
  nameWithType: UDefFieldRow._currentFieldTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldTop
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldTop\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentFieldTop
    return:
      type: System.Int16
    content.vb: Protected _currentFieldTop As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldWidth
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldWidth
  id: _currentFieldWidth
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldWidth
  nameWithType: UDefFieldRow._currentFieldWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldWidth
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentFieldWidth
    return:
      type: System.Int16
    content.vb: Protected _currentFieldWidth As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldHeight
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFieldHeight
  id: _currentFieldHeight
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFieldHeight
  nameWithType: UDefFieldRow._currentFieldHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFieldHeight
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentFieldHeight
    return:
      type: System.Int16
    content.vb: Protected _currentFieldHeight As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentVersion
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentVersion
  id: _currentVersion
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentVersion
  nameWithType: UDefFieldRow._currentVersion
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentVersion
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Version\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentVersion
    return:
      type: System.Int16
    content.vb: Protected _currentVersion As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentLastVersionId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentLastVersionId
  id: _currentLastVersionId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentLastVersionId
  nameWithType: UDefFieldRow._currentLastVersionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentLastVersionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentLastVersionId
    return:
      type: System.Int32
    content.vb: Protected _currentLastVersionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentPage1LineNo
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentPage1LineNo
  id: _currentPage1LineNo
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentPage1LineNo
  nameWithType: UDefFieldRow._currentPage1LineNo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentPage1LineNo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentPage1LineNo
    return:
      type: System.Int16
    content.vb: Protected _currentPage1LineNo As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentRegistered
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentRegistered
  id: _currentRegistered
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentRegistered
  nameWithType: UDefFieldRow._currentRegistered
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentRegistered
    return:
      type: System.DateTime
    content.vb: Protected _currentRegistered As DateTime
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentRegisteredAssociateId
  id: _currentRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentRegisteredAssociateId
  nameWithType: UDefFieldRow._currentRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentUpdated
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentUpdated
  id: _currentUpdated
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentUpdated
  nameWithType: UDefFieldRow._currentUpdated
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentUpdated
    return:
      type: System.DateTime
    content.vb: Protected _currentUpdated As DateTime
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedAssociateId
  id: _currentUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedAssociateId
  nameWithType: UDefFieldRow._currentUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedCount
  id: _currentUpdatedCount
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedCount
  nameWithType: UDefFieldRow._currentUpdatedCount
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _currentUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentUdefIdentity
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentUdefIdentity
  id: _currentUdefIdentity
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentUdefIdentity
  nameWithType: UDefFieldRow._currentUdefIdentity
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentUdefIdentity
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUdefIdentity
    return:
      type: System.Int32
    content.vb: Protected _currentUdefIdentity As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentHideLabel
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentHideLabel
  id: _currentHideLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentHideLabel
  nameWithType: UDefFieldRow._currentHideLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentHideLabel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.HideLabel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentHideLabel
    return:
      type: System.Int16
    content.vb: Protected _currentHideLabel As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentJustification
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentJustification
  id: _currentJustification
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentJustification
  nameWithType: UDefFieldRow._currentJustification
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentJustification
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.Justification\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected UdefJustification _currentJustification
    return:
      type: SuperOffice.Data.UdefJustification
    content.vb: Protected _currentJustification As UdefJustification
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentProgId
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentProgId
  id: _currentProgId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentProgId
  nameWithType: UDefFieldRow._currentProgId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentProgId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ProgId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentProgId
    return:
      type: System.String
    content.vb: Protected _currentProgId As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentFormatMask
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentFormatMask
  id: _currentFormatMask
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentFormatMask
  nameWithType: UDefFieldRow._currentFormatMask
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentFormatMask
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.FormatMask\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentFormatMask
    return:
      type: System.String
    content.vb: Protected _currentFormatMask As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow._currentShortLabel
  commentId: F:SuperOffice.CRM.Rows.UDefFieldRow._currentShortLabel
  id: _currentShortLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: _currentShortLabel
  nameWithType: UDefFieldRow._currentShortLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow._currentShortLabel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentShortLabel
    return:
      type: System.String
    content.vb: Protected _currentShortLabel As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: UDefFieldRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: UDefFieldRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: UDefFieldRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.#ctor(SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.#ctor(SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase)'
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UDefFieldRow(UDefFieldRow.UDefFieldRowIdxBase)
  nameWithType: UDefFieldRow.UDefFieldRow(UDefFieldRow.UDefFieldRowIdxBase)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRow(SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nDefinition table for user-defined fields; one row in this table corresponds to one generation of one field. The user defined fields that are in use, and earlier versions of user defined fields. ColumnId refers to the field type; see UDXXXSmall or UDXXXLarge for the referring ID.  Preferences prefsection=&apos;System&apos;, prefkey=&apos;CurrentUdefVersioncontact&apos;  (or CurrentUdefVersionperson, project, sale), gives you the current version of user defined fields.  prefkey=&apos;AdminUdefVersion&lt;...>&apos; gives you the current version that&apos;s being edited. If Current version = admin version, no editing has been done since the last Publish of user defined field was performed.\n"
  syntax:
    content: protected UDefFieldRow(UDefFieldRow.UDefFieldRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As UDefFieldRow.UDefFieldRowIdxBase)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: UDefFieldRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the UDefFieldRow object.\nDefinition table for user-defined fields; one row in this table corresponds to one generation of one field. The user defined fields that are in use, and earlier versions of user defined fields. ColumnId refers to the field type; see UDXXXSmall or UDXXXLarge for the referring ID.  Preferences prefsection=&apos;System&apos;, prefkey=&apos;CurrentUdefVersioncontact&apos;  (or CurrentUdefVersionperson, project, sale), gives you the current version of user defined fields.  prefkey=&apos;AdminUdefVersion&lt;...>&apos; gives you the current version that&apos;s being edited. If Current version = admin version, no editing has been done since the last Publish of user defined field was performed.\n"
  syntax:
    content: public static UDefFieldRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: A new instance of the UDefFieldRow object.
    content.vb: Public Shared Function CreateNew As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.UDefFieldTableInfo)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.UDefFieldTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.UDefFieldTableInfo)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, UDefFieldTableInfo)
  nameWithType: UDefFieldRow.GetFromReader(SoDataReader, UDefFieldTableInfo)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.UDefFieldTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the UDefFieldRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nDefinition table for user-defined fields; one row in this table corresponds to one generation of one field. The user defined fields that are in use, and earlier versions of user defined fields. ColumnId refers to the field type; see UDXXXSmall or UDXXXLarge for the referring ID.  Preferences prefsection=&apos;System&apos;, prefkey=&apos;CurrentUdefVersioncontact&apos;  (or CurrentUdefVersionperson, project, sale), gives you the current version of user defined fields.  prefkey=&apos;AdminUdefVersion&lt;...>&apos; gives you the current version that&apos;s being edited. If Current version = admin version, no editing has been done since the last Publish of user defined field was performed.\n"
  syntax:
    content: public static UDefFieldRow GetFromReader(SoDataReader reader, UDefFieldTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.UDefFieldTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.UDefFieldTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: A new instance of the UDefFieldRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As UDefFieldTableInfo) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch,System.Threading.CancellationToken)
  id: GetFromCustomSearchAsync(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearchAsync(UDefFieldRow.CustomSearch, CancellationToken)
  nameWithType: UDefFieldRow.GetFromCustomSearchAsync(UDefFieldRow.CustomSearch, CancellationToken)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the UDefFieldRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public static Task<UDefFieldRow> GetFromCustomSearchAsync(UDefFieldRow.CustomSearch query, CancellationToken cancellationToken = null)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch
      description: The custom search to execute against the database
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.UDefFieldRow}
      description: A new instance of the UDefFieldRow object, reflecting the result of the query.
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Shared Function GetFromCustomSearchAsync(query As UDefFieldRow.CustomSearch, cancellationToken As CancellationToken = Nothing) As Task(Of UDefFieldRow)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync(System.Int32,System.Threading.CancellationToken)
  id: GetFromIdxUDefFieldIdAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: GetFromIdxUDefFieldIdAsync(Int32, CancellationToken)
  nameWithType: UDefFieldRow.GetFromIdxUDefFieldIdAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the UDefFieldRow object, by querying the database table via the index &apos;IDXUDefFieldId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the UDefField table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.UDefFieldRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static Task<UDefFieldRow> GetFromIdxUDefFieldIdAsync(int uDefFieldId, CancellationToken cancellationToken = null)
    parameters:
    - id: uDefFieldId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.UDefFieldRow}
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxUDefFieldIdAsync(uDefFieldId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of UDefFieldRow)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  id: SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  nameWithType: UDefFieldRow.SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override Task SetDefaultsAsync(DefaulterStrategy strategy, CancellationToken cancellationToken = null)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Overrides Function SetDefaultsAsync(strategy As DefaulterStrategy, cancellationToken As CancellationToken = Nothing) As Task
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ToString
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: UDefFieldRow.ToString()
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: UDefFieldRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Reset
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: UDefFieldRow.Reset()
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: UDefFieldRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: UDefFieldRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  id: OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: OnSaveAsync(BatchSave)
  nameWithType: UDefFieldRow.OnSaveAsync(BatchSave)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override Task OnSaveAsync(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnSaveAsync(batchSave As BatchSave) As Task
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync(System.Boolean)
  id: OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: OnSavedAsync(Boolean)
  nameWithType: UDefFieldRow.OnSavedAsync(Boolean)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override Task OnSavedAsync(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnSavedAsync(bSucceeded As Boolean) As Task
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: UDefFieldRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(UDefFieldRow.CustomSearch)
  nameWithType: UDefFieldRow.GetFromCustomSearch(UDefFieldRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch(SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the UDefFieldRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static UDefFieldRow GetFromCustomSearch(UDefFieldRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: A new instance of the UDefFieldRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As UDefFieldRow.CustomSearch) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: UDefFieldRow.Item[String]
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: UDefFieldRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.UDefFieldRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.UDefFieldRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: UDefFieldRow.TableInfo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.UDefFieldRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo
  id: UDefFieldTableInfo
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UDefFieldTableInfo
  nameWithType: UDefFieldRow.UDefFieldTableInfo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.UDefFieldTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public UDefFieldTableInfo UDefFieldTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.UDefFieldTableInfo
    content.vb: Public ReadOnly Property UDefFieldTableInfo As UDefFieldTableInfo
  overload: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: UDefFieldRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: UDefFieldRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: UDefFieldRow.IsNew
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.UDefFieldRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: UDefFieldRow.IsDirty
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.UDefFieldRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: UDefFieldRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId
  id: UDefFieldId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UDefFieldId
  nameWithType: UDefFieldRow.UDefFieldId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Primary key \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>        \n<p>Read only for code not signed by SuperOffice.</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int UDefFieldId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property UDefFieldId As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId
  id: OwnerTableId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: OwnerTableId
  nameWithType: UDefFieldRow.OwnerTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. ID of owning table (contact, person, project) - this is not the actual tableNumber, rather it&apos;s an enum \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short OwnerTableId { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property OwnerTableId As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.TabOrder
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.TabOrder
  id: TabOrder
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: TabOrder
  nameWithType: UDefFieldRow.TabOrder
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.TabOrder
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Tab order value, sets the field processing sequence \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short TabOrder { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property TabOrder As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.TabOrder*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldType
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldType
  id: FieldType
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldType
  nameWithType: UDefFieldRow.FieldType
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Field type: 0 = leadtext only, 1 = Edit, 2 = CheckBox, 3 = dropdown, 4 = listbox \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short FieldType { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property FieldType As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldType*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  id: ListTableId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: ListTableId
  nameWithType: UDefFieldRow.ListTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. The table ID of the source table for lists: kTableAssoc, kTableContInt or whatever \n"
  remarks: "\nOriginal type in dictionary:  TableNumber.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short ListTableId { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property ListTableId As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId
  id: UDListDefinitionId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UDListDefinitionId
  nameWithType: UDefFieldRow.UDListDefinitionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. List to use for populating dropdown or listbox \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int UDListDefinitionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UDListDefinitionId As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ColumnId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.ColumnId
  id: ColumnId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: ColumnId
  nameWithType: UDefFieldRow.ColumnId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ColumnId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The ID of the database column this field corresponds to \n"
  remarks: "\nOriginal type in dictionary:  FieldId.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ColumnId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ColumnId As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.ColumnId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.TextLength
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.TextLength
  id: TextLength
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: TextLength
  nameWithType: UDefFieldRow.TextLength
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.TextLength
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Length (in characters) of a text field, 0 for other types \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short TextLength { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property TextLength As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.TextLength*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault
  id: FieldDefault
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldDefault
  nameWithType: UDefFieldRow.FieldDefault
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional default value for String fields \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string FieldDefault { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FieldDefault As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Indexed
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Indexed
  id: Indexed
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Indexed
  nameWithType: UDefFieldRow.Indexed
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Indexed
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Is this field indexed? 0 if no, index no. if yes \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Indexed { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Indexed As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Indexed*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Mandatory
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Mandatory
  id: Mandatory
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Mandatory
  nameWithType: UDefFieldRow.Mandatory
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Mandatory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. 0 = no, 1 = yes (field must be filled out) \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Mandatory { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Mandatory As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Mandatory*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly
  id: ReadOnly
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: ReadOnly
  nameWithType: UDefFieldRow.ReadOnly
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. 0 = read/write, 1 = readonly (don&apos;t combine with mandatory  8-) ) \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short ReadOnly { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property ReadOnly As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Tooltip
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Tooltip
  id: Tooltip
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Tooltip
  nameWithType: UDefFieldRow.Tooltip
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Tooltip
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional tooltip text for this field \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Tooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Tooltip As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Tooltip*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel
  id: FieldLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldLabel
  nameWithType: UDefFieldRow.FieldLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The label (lead text) \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string FieldLabel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FieldLabel As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft
  id: LabelLeft
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: LabelLeft
  nameWithType: UDefFieldRow.LabelLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. X pixel coordinate of label \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short LabelLeft { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property LabelLeft As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelTop
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.LabelTop
  id: LabelTop
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: LabelTop
  nameWithType: UDefFieldRow.LabelTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelTop
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Y pixel coordinate of label \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short LabelTop { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property LabelTop As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.LabelTop*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth
  id: LabelWidth
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: LabelWidth
  nameWithType: UDefFieldRow.LabelWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. label width in pixels, 0 = &apos;enough&apos; (from font) \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short LabelWidth { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property LabelWidth As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight
  id: LabelHeight
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: LabelHeight
  nameWithType: UDefFieldRow.LabelHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. label height in pixels, 0 = &apos;enough&apos; (from font) \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short LabelHeight { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property LabelHeight As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft
  id: FieldLeft
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldLeft
  nameWithType: UDefFieldRow.FieldLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. X pixel coordinate of field \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short FieldLeft { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property FieldLeft As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldTop
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldTop
  id: FieldTop
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldTop
  nameWithType: UDefFieldRow.FieldTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldTop
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Y pixel coordinate of field \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short FieldTop { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property FieldTop As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldTop*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth
  id: FieldWidth
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldWidth
  nameWithType: UDefFieldRow.FieldWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. field width in pixels, 0 = &apos;enough&apos; (from font) \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short FieldWidth { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property FieldWidth As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight
  id: FieldHeight
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FieldHeight
  nameWithType: UDefFieldRow.FieldHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. field height in pixels, 0 = &apos;enough&apos; (from font) \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short FieldHeight { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property FieldHeight As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Version
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Version
  id: Version
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: UDefFieldRow.Version
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Version
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Definition version number; ALL fields get new version whenever layout is updated. \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Version { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Version As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Version*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId
  id: LastVersionId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: LastVersionId
  nameWithType: UDefFieldRow.LastVersionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. UDefFieldId this field had in the previous version, 0 = field is new in this version \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int LastVersionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property LastVersionId As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo
  id: Page1LineNo
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Page1LineNo
  nameWithType: UDefFieldRow.Page1LineNo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Line no on View Page 1, used if MDO flags are OFF. 0 = this field is not visible on page 1 \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short Page1LineNo { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Page1LineNo As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Registered
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: UDefFieldRow.Registered
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Registered when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Registered { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Registered As DateTime
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Registered*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: UDefFieldRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Registered by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RegisteredAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RegisteredAssociateId As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Updated
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: UDefFieldRow.Updated
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Last updated when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Updated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Updated As DateTime
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Updated*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: UDefFieldRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Last updated by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int UpdatedAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UpdatedAssociateId As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: UDefFieldRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Number of updates made to this record \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short UpdatedCount { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property UpdatedCount As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity
  id: UdefIdentity
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: UdefIdentity
  nameWithType: UDefFieldRow.UdefIdentity
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Unique number used to track field identity across layout changes \n"
  remarks: "\nOriginal type in dictionary:  Id.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int UdefIdentity { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UdefIdentity As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.HideLabel
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.HideLabel
  id: HideLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: HideLabel
  nameWithType: UDefFieldRow.HideLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.HideLabel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Hide the label if 1 \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short HideLabel { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property HideLabel As Short
  overload: SuperOffice.CRM.Rows.UDefFieldRow.HideLabel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Justification
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.Justification
  id: Justification
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: Justification
  nameWithType: UDefFieldRow.Justification
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Justification
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: UdefJustification. Justification - 0 = default, left, right, center \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual UdefJustification Justification { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.UdefJustification
    content.vb: Public Overridable Property Justification As UdefJustification
  overload: SuperOffice.CRM.Rows.UDefFieldRow.Justification*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ProgId
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.ProgId
  id: ProgId
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: ProgId
  nameWithType: UDefFieldRow.ProgId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ProgId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Programmatic ID, for use by software that needs to find a particular field. Carried over like udefIdentity across generations. Use a Company.Product.Field format to avoid naming conflicts; the Company name SuperOffice is reserved. \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ProgId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ProgId As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.ProgId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FormatMask
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.FormatMask
  id: FormatMask
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: FormatMask
  nameWithType: UDefFieldRow.FormatMask
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FormatMask
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Formatting mask, can be whatever the controls understand (currently nothing :-)) \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string FormatMask { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FormatMask As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.FormatMask*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel
  commentId: P:SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel
  id: ShortLabel
  parent: SuperOffice.CRM.Rows.UDefFieldRow
  langs:
  - csharp
  - vb
  name: ShortLabel
  nameWithType: UDefFieldRow.ShortLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Short name to be used in Archive headings and on page 1. If blank, the fieldLabel will be used everywhere. \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Read only for code not signed by SuperOffice.</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ShortLabel { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ShortLabel As String
  overload: SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._isSaving
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._isSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _isSaving
  nameWithType: TableRowBase._isSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase._isSaving
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoadAsync(ITableRowLoadHandler, CancellationToken)
  nameWithType: TableRowBase.RowLoadAsync(ITableRowLoadHandler, CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
    name: RowLoadAsync
    nameWithType: TableRowBase.RowLoadAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync(SuperOffice.CRM.Rows.ITableRowLoadHandler,System.Threading.CancellationToken)
    name: RowLoadAsync
    nameWithType: TableRowBase.RowLoadAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaultsAsync(CancellationToken)
  nameWithType: TableRowBase.SetDefaultsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaultsAsync(DashboardTileDefinitionRow, String, CancellationToken)
  nameWithType: TableRowBase.SetDefaultsAsync(DashboardTileDefinitionRow, String, CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetForeignKeyHelperAsync(CancellationToken)
  nameWithType: TableRowBase.GetForeignKeyHelperAsync(CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
    name: GetForeignKeyHelperAsync
    nameWithType: TableRowBase.GetForeignKeyHelperAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync(System.Threading.CancellationToken)
    name: GetForeignKeyHelperAsync
    nameWithType: TableRowBase.GetForeignKeyHelperAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetForeignKeyHelperAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SaveAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SaveAsync()
  nameWithType: TableRowBase.SaveAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SaveAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    name: SaveAsync
    nameWithType: TableRowBase.SaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    name: SaveAsync
    nameWithType: TableRowBase.SaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: DeleteAsync()
  nameWithType: TableRowBase.DeleteAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    name: DeleteAsync
    nameWithType: TableRowBase.DeleteAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    name: DeleteAsync
    nameWithType: TableRowBase.DeleteAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: add_OnElementSaved(OnSaved)
  nameWithType: TableRowBase.add_OnElementSaved(OnSaved)
  fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: TableRowBase.add_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved(SuperOffice.Data.OnSaved)
    name: add_OnElementSaved
    nameWithType: TableRowBase.add_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: remove_OnElementSaved(OnSaved)
  nameWithType: TableRowBase.remove_OnElementSaved(OnSaved)
  fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: TableRowBase.remove_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved(SuperOffice.Data.OnSaved)
    name: remove_OnElementSaved
    nameWithType: TableRowBase.remove_OnElementSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnSaved
    name: OnSaved
    nameWithType: OnSaved
    fullName: SuperOffice.Data.OnSaved
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: add_OnElementIdUpdate(OnIdUpdate)
  nameWithType: TableRowBase.add_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: TableRowBase.add_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: add_OnElementIdUpdate
    nameWithType: TableRowBase.add_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.add_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: remove_OnElementIdUpdate(OnIdUpdate)
  nameWithType: TableRowBase.remove_OnElementIdUpdate(OnIdUpdate)
  fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: TableRowBase.remove_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate(SuperOffice.Data.OnIdUpdate)
    name: remove_OnElementIdUpdate
    nameWithType: TableRowBase.remove_OnElementIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.remove_OnElementIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.OnIdUpdate
    name: OnIdUpdate
    nameWithType: OnIdUpdate
    fullName: SuperOffice.Data.OnIdUpdate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdateAsync()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: INestedPersist.OnPreIdUpdateAsync
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdateAsync()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: INestedPersist.OnIdUpdateAsync
    nameWithType: TableRowBase.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdateAsync
    name: SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaveAsync(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSaveAsync(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSaveAsync(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSaveAsync
    nameWithType: TableRowBase.INestedPersist.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSaveAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSavedAsync(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSavedAsync(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSavedAsync(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: INestedPersist.OnSavedAsync
    nameWithType: TableRowBase.INestedPersist.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSavedAsync(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSavedAsync
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdateAsync()
  nameWithType: TableRowBase.OnPreIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: TableRowBase.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    nameWithType: TableRowBase.OnPreIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    nameWithType: TableRowBase.OnPrimaryKeyRequestAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequestAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    nameWithType: TableRowBase.OnPrimaryKeyUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdateAsync()
  nameWithType: TableRowBase.OnIdUpdateAsync()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: TableRowBase.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    name: OnIdUpdateAsync
    nameWithType: TableRowBase.OnIdUpdateAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: add_OnUpdateField(UpdateField)
  nameWithType: PrivateSave.add_OnUpdateField(UpdateField)
  fullName: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: add_OnUpdateField
    nameWithType: PrivateSave.add_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: add_OnUpdateField
    nameWithType: PrivateSave.add_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.add_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: remove_OnUpdateField(UpdateField)
  nameWithType: PrivateSave.remove_OnUpdateField(UpdateField)
  fullName: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: remove_OnUpdateField
    nameWithType: PrivateSave.remove_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField(SuperOffice.Data.SQL.UpdateField)
    name: remove_OnUpdateField
    nameWithType: PrivateSave.remove_OnUpdateField
    fullName: SuperOffice.Data.SQL.PrivateSave.remove_OnUpdateField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.UpdateField
    name: UpdateField
    nameWithType: UpdateField
    fullName: SuperOffice.Data.SQL.UpdateField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: SetTicketLogAction(TicketLogAction, String)
  nameWithType: PrivateSave.SetTicketLogAction(TicketLogAction, String)
  fullName: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction, System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
    name: SetTicketLogAction
    nameWithType: PrivateSave.SetTicketLogAction
    fullName: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TicketLogAction
    name: TicketLogAction
    nameWithType: TicketLogAction
    fullName: SuperOffice.Data.TicketLogAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction(SuperOffice.Data.TicketLogAction,System.String)
    name: SetTicketLogAction
    nameWithType: PrivateSave.SetTicketLogAction
    fullName: SuperOffice.Data.SQL.PrivateSave.SetTicketLogAction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TicketLogAction
    name: TicketLogAction
    nameWithType: TicketLogAction
    fullName: SuperOffice.Data.TicketLogAction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
  commentId: P:SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: DoNotWriteTraveltransactionLog
  nameWithType: PrivateSave.DoNotWriteTraveltransactionLog
  fullName: SuperOffice.Data.SQL.PrivateSave.DoNotWriteTraveltransactionLog
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
  commentId: F:SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AdditionalInfo
  nameWithType: SqlCommand.AdditionalInfo
  fullName: SuperOffice.Data.SQL.SqlCommand.AdditionalInfo
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: SuperOffice.CRM.Rows.UDefFieldRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<UDefFieldRow, To>()
  nameWithType: EnumUtil.MapEnums<UDefFieldRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.UDefFieldRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of UDefFieldRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldRow, To)()
  name.vb: MapEnums(Of UDefFieldRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<UDefFieldRow, To>
    nameWithType: EnumUtil.MapEnums<UDefFieldRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.UDefFieldRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of UDefFieldRow, To)
    nameWithType: EnumUtil.MapEnums(Of UDefFieldRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  name: ExecuteReaderAsync(Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteReaderAsync(Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  name: ExecuteScalarAsync<T>(CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  name: ExecuteScalarAsync<T>(Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(Boolean, CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  name: ExecuteNonQueryAsync(CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync(CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions
  definition: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
  name: ToRecordData()
  nameWithType: UDefFieldRecordDataExtensions.ToRecordData()
  fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
    name: ToRecordData
    nameWithType: UDefFieldRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
    name: ToRecordData
    nameWithType: UDefFieldRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<UDefFieldRow, To>()
  nameWithType: Converters.MapEnums<UDefFieldRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.UDefFieldRow, To>()
  nameWithType.vb: Converters.MapEnums(Of UDefFieldRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldRow, To)()
  name.vb: MapEnums(Of UDefFieldRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<UDefFieldRow, To>
    nameWithType: Converters.MapEnums<UDefFieldRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.UDefFieldRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of UDefFieldRow, To)
    nameWithType: Converters.MapEnums(Of UDefFieldRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteReaderAsync(SqlCommand, Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteReaderAsync(SqlCommand, Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteReaderAsync
    nameWithType: QueryExectionExtensions.ExecuteReaderAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReaderAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteScalarAsync<T>(SqlCommand, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(SqlCommand, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(SuperOffice.Data.SQL.SqlCommand, System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(SqlCommand, CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(SuperOffice.Data.SQL.SqlCommand, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(SqlCommand, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteScalarAsync<T>(SqlCommand, Boolean, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>(SqlCommand, Boolean, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>(SuperOffice.Data.SQL.SqlCommand, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalarAsync(Of T)(SqlCommand, Boolean, CancellationToken)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)(SuperOffice.Data.SQL.SqlCommand, System.Boolean, System.Threading.CancellationToken)
  name.vb: ExecuteScalarAsync(Of T)(SqlCommand, Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync<T>
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync``1(SuperOffice.Data.SQL.SqlCommand,System.Boolean,System.Threading.CancellationToken)
    name: ExecuteScalarAsync(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalarAsync(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalarAsync(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
  isExternal: true
  name: ExecuteNonQueryAsync(SqlCommand, CancellationToken)
  nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync(SqlCommand, CancellationToken)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync(SuperOffice.Data.SQL.SqlCommand,System.Threading.CancellationToken)
    name: ExecuteNonQueryAsync
    nameWithType: QueryExectionExtensions.ExecuteNonQueryAsync
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQueryAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
  isExternal: true
  name: ToRecordData(UDefFieldRow)
  nameWithType: UDefFieldRecordDataExtensions.ToRecordData(UDefFieldRow)
  fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
    name: ToRecordData
    nameWithType: UDefFieldRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    nameWithType: UDefFieldRow
    fullName: SuperOffice.CRM.Rows.UDefFieldRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.UDefFieldRow)
    name: ToRecordData
    nameWithType: UDefFieldRecordDataExtensions.ToRecordData
    fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions.ToRecordData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    nameWithType: UDefFieldRow
    fullName: SuperOffice.CRM.Rows.UDefFieldRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: UDefFieldRecordDataExtensions
  nameWithType: UDefFieldRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.UDefFieldRecordDataExtensions
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Data.UdefJustification
  commentId: T:SuperOffice.Data.UdefJustification
  parent: SuperOffice.Data
  isExternal: true
  name: UdefJustification
  nameWithType: UdefJustification
  fullName: SuperOffice.Data.UdefJustification
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: UDefFieldRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InternalSetValue
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: UDefFieldRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: UDefFieldRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.UDefFieldRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.#ctor
  isExternal: true
  name: UDefFieldRow
  nameWithType: UDefFieldRow.UDefFieldRow
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRow
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: UDefFieldRow.UDefFieldRowIdxBase
  nameWithType: UDefFieldRow.UDefFieldRowIdxBase
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldRowIdxBase
- uid: SuperOffice.CRM.Rows.UDefFieldRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: UDefFieldRow.CreateNew
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.CreateNew
- uid: SuperOffice.CRM.Rows.UDefFieldRow
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: UDefFieldRow
  nameWithType: UDefFieldRow
  fullName: SuperOffice.CRM.Rows.UDefFieldRow
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: UDefFieldRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.UDefFieldTableInfo
  commentId: T:SuperOffice.CRM.Data.UDefFieldTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: UDefFieldTableInfo
  nameWithType: UDefFieldTableInfo
  fullName: SuperOffice.CRM.Data.UDefFieldTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync
  isExternal: true
  name: GetFromCustomSearchAsync
  nameWithType: UDefFieldRow.GetFromCustomSearchAsync
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearchAsync
- uid: SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: UDefFieldRow.CustomSearch
  nameWithType: UDefFieldRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.CustomSearch
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.UDefFieldRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.UDefFieldRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<UDefFieldRow>
  nameWithType: Task<UDefFieldRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.UDefFieldRow>
  nameWithType.vb: Task(Of UDefFieldRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.UDefFieldRow)
  name.vb: Task(Of UDefFieldRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    nameWithType: UDefFieldRow
    fullName: SuperOffice.CRM.Rows.UDefFieldRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.UDefFieldRow
    name: UDefFieldRow
    nameWithType: UDefFieldRow
    fullName: SuperOffice.CRM.Rows.UDefFieldRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync
  isExternal: true
  name: GetFromIdxUDefFieldIdAsync
  nameWithType: UDefFieldRow.GetFromIdxUDefFieldIdAsync
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromIdxUDefFieldIdAsync
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  nameWithType: TableRowBase.SetDefaultsAsync(DefaulterStrategy, CancellationToken)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync(SuperOffice.CRM.Rows.DefaulterStrategy,System.Threading.CancellationToken)
    name: SetDefaultsAsync
    nameWithType: TableRowBase.SetDefaultsAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaultsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync
  isExternal: true
  name: SetDefaultsAsync
  nameWithType: UDefFieldRow.SetDefaultsAsync
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.SetDefaultsAsync
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.ToString
  isExternal: true
  name: ToString
  nameWithType: UDefFieldRow.ToString
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: UDefFieldRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Reset
  isExternal: true
  name: Reset
  nameWithType: UDefFieldRow.Reset
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: UDefFieldRow.OnLoad
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: UDefFieldRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaveAsync(BatchSave)
  nameWithType: TableRowBase.OnSaveAsync(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: TableRowBase.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    nameWithType: TableRowBase.OnSaveAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaveAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync
  isExternal: true
  name: OnSaveAsync
  nameWithType: UDefFieldRow.OnSaveAsync
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OnSaveAsync
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSavedAsync(Boolean)
  nameWithType: TableRowBase.OnSavedAsync(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: TableRowBase.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    nameWithType: TableRowBase.OnSavedAsync
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSavedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync
  isExternal: true
  name: OnSavedAsync
  nameWithType: UDefFieldRow.OnSavedAsync
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OnSavedAsync
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Validate
  isExternal: true
  name: Validate
  nameWithType: UDefFieldRow.Validate
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: UDefFieldRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Item
  isExternal: true
  name: Item
  nameWithType: UDefFieldRow.Item
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.UDefFieldRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: UDefFieldRow.TableInfo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.TableInfo
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo
  isExternal: true
  name: UDefFieldTableInfo
  nameWithType: UDefFieldRow.UDefFieldTableInfo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldTableInfo
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: UDefFieldRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: UDefFieldRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.UDefFieldRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: UDefFieldRow.IsNew
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.UDefFieldRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: UDefFieldRow.IsDirty
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: UDefFieldRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId
  isExternal: true
  name: UDefFieldId
  nameWithType: UDefFieldRow.UDefFieldId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDefFieldId
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId
  isExternal: true
  name: OwnerTableId
  nameWithType: UDefFieldRow.OwnerTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.OwnerTableId
- uid: SuperOffice.Exceptions.SoSentryException
  commentId: T:SuperOffice.Exceptions.SoSentryException
  isExternal: true
  name: SoSentryException
  nameWithType: SoSentryException
  fullName: SuperOffice.Exceptions.SoSentryException
- uid: SuperOffice.CRM.Rows.UDefFieldRow.TabOrder*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.TabOrder
  isExternal: true
  name: TabOrder
  nameWithType: UDefFieldRow.TabOrder
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.TabOrder
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldType*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldType
  isExternal: true
  name: FieldType
  nameWithType: UDefFieldRow.FieldType
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldType
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
  isExternal: true
  name: ListTableId
  nameWithType: UDefFieldRow.ListTableId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ListTableId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId
  isExternal: true
  name: UDListDefinitionId
  nameWithType: UDefFieldRow.UDListDefinitionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UDListDefinitionId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ColumnId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.ColumnId
  isExternal: true
  name: ColumnId
  nameWithType: UDefFieldRow.ColumnId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ColumnId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.TextLength*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.TextLength
  isExternal: true
  name: TextLength
  nameWithType: UDefFieldRow.TextLength
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.TextLength
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault
  isExternal: true
  name: FieldDefault
  nameWithType: UDefFieldRow.FieldDefault
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldDefault
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Indexed*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Indexed
  isExternal: true
  name: Indexed
  nameWithType: UDefFieldRow.Indexed
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Indexed
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Mandatory*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Mandatory
  isExternal: true
  name: Mandatory
  nameWithType: UDefFieldRow.Mandatory
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Mandatory
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly
  isExternal: true
  name: ReadOnly
  nameWithType: UDefFieldRow.ReadOnly
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ReadOnly
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Tooltip*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Tooltip
  isExternal: true
  name: Tooltip
  nameWithType: UDefFieldRow.Tooltip
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Tooltip
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel
  isExternal: true
  name: FieldLabel
  nameWithType: UDefFieldRow.FieldLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldLabel
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft
  isExternal: true
  name: LabelLeft
  nameWithType: UDefFieldRow.LabelLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelLeft
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelTop*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.LabelTop
  isExternal: true
  name: LabelTop
  nameWithType: UDefFieldRow.LabelTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelTop
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth
  isExternal: true
  name: LabelWidth
  nameWithType: UDefFieldRow.LabelWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelWidth
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight
  isExternal: true
  name: LabelHeight
  nameWithType: UDefFieldRow.LabelHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LabelHeight
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft
  isExternal: true
  name: FieldLeft
  nameWithType: UDefFieldRow.FieldLeft
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldLeft
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldTop*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldTop
  isExternal: true
  name: FieldTop
  nameWithType: UDefFieldRow.FieldTop
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldTop
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth
  isExternal: true
  name: FieldWidth
  nameWithType: UDefFieldRow.FieldWidth
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldWidth
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight
  isExternal: true
  name: FieldHeight
  nameWithType: UDefFieldRow.FieldHeight
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FieldHeight
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Version*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Version
  isExternal: true
  name: Version
  nameWithType: UDefFieldRow.Version
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Version
- uid: SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId
  isExternal: true
  name: LastVersionId
  nameWithType: UDefFieldRow.LastVersionId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.LastVersionId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo
  isExternal: true
  name: Page1LineNo
  nameWithType: UDefFieldRow.Page1LineNo
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Page1LineNo
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Registered*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Registered
  isExternal: true
  name: Registered
  nameWithType: UDefFieldRow.Registered
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Registered
- uid: SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: UDefFieldRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.RegisteredAssociateId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Updated*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Updated
  isExternal: true
  name: Updated
  nameWithType: UDefFieldRow.Updated
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Updated
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: UDefFieldRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedAssociateId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: UDefFieldRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UpdatedCount
- uid: SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity
  isExternal: true
  name: UdefIdentity
  nameWithType: UDefFieldRow.UdefIdentity
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.UdefIdentity
- uid: SuperOffice.CRM.Rows.UDefFieldRow.HideLabel*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.HideLabel
  isExternal: true
  name: HideLabel
  nameWithType: UDefFieldRow.HideLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.HideLabel
- uid: SuperOffice.CRM.Rows.UDefFieldRow.Justification*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.Justification
  isExternal: true
  name: Justification
  nameWithType: UDefFieldRow.Justification
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.Justification
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ProgId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.ProgId
  isExternal: true
  name: ProgId
  nameWithType: UDefFieldRow.ProgId
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ProgId
- uid: SuperOffice.CRM.Rows.UDefFieldRow.FormatMask*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.FormatMask
  isExternal: true
  name: FormatMask
  nameWithType: UDefFieldRow.FormatMask
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.FormatMask
- uid: SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel
  isExternal: true
  name: ShortLabel
  nameWithType: UDefFieldRow.ShortLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldRow.ShortLabel
