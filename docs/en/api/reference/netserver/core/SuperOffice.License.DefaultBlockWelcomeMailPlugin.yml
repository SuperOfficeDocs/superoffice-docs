### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin
  commentId: T:SuperOffice.License.DefaultBlockWelcomeMailPlugin
  id: DefaultBlockWelcomeMailPlugin
  parent: SuperOffice.License
  children:
  - SuperOffice.License.DefaultBlockWelcomeMailPlugin.#ctor
  - SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose
  langs:
  - csharp
  - vb
  name: DefaultBlockWelcomeMailPlugin
  nameWithType: DefaultBlockWelcomeMailPlugin
  fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nDefault block welcome mail plugin - does nothing.\n"
  syntax:
    content: >-
      [BlockWelcomeMailPlugin("Default", 2147483646)]

      public class DefaultBlockWelcomeMailPlugin : Object, IBlockWelcomeMailPlugin, IPlugin, IDisposable
    content.vb: >-
      <BlockWelcomeMailPlugin("Default", 2147483646)>

      Public Class DefaultBlockWelcomeMailPlugin
          Inherits Object
          Implements IBlockWelcomeMailPlugin, IPlugin, IDisposable
  inheritance:
  - System.Object
  implements:
  - SuperOffice.License.IBlockWelcomeMailPlugin
  - System.IDisposable
  extensionMethods:
  - SuperOffice.License.DefaultBlockWelcomeMailPlugin.EnumUtil.MapEnums``2
  - SuperOffice.License.DefaultBlockWelcomeMailPlugin.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.DefaultBlockWelcomeMailPlugin)
  - SuperOffice.License.DefaultBlockWelcomeMailPlugin.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.License.DefaultBlockWelcomeMailPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.License.BlockWelcomeMailPluginAttribute
    ctor: SuperOffice.License.BlockWelcomeMailPluginAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Default
    - type: System.Int32
      value: 2147483646
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.#ctor
  commentId: M:SuperOffice.License.DefaultBlockWelcomeMailPlugin.#ctor
  id: '#ctor'
  parent: SuperOffice.License.DefaultBlockWelcomeMailPlugin
  langs:
  - csharp
  - vb
  name: DefaultBlockWelcomeMailPlugin()
  nameWithType: DefaultBlockWelcomeMailPlugin.DefaultBlockWelcomeMailPlugin()
  fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin.DefaultBlockWelcomeMailPlugin()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public DefaultBlockWelcomeMailPlugin()
    content.vb: Public Sub New
  overload: SuperOffice.License.DefaultBlockWelcomeMailPlugin.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose
  commentId: M:SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose
  id: Dispose
  parent: SuperOffice.License.DefaultBlockWelcomeMailPlugin
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DefaultBlockWelcomeMailPlugin.Dispose()
  fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.License.IBlockWelcomeMailPlugin
  commentId: T:SuperOffice.License.IBlockWelcomeMailPlugin
  parent: SuperOffice.License
  isExternal: true
  name: IBlockWelcomeMailPlugin
  nameWithType: IBlockWelcomeMailPlugin
  fullName: SuperOffice.License.IBlockWelcomeMailPlugin
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<DefaultBlockWelcomeMailPlugin, To>()
  nameWithType: EnumUtil.MapEnums<DefaultBlockWelcomeMailPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.License.DefaultBlockWelcomeMailPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of DefaultBlockWelcomeMailPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin, To)()
  name.vb: MapEnums(Of DefaultBlockWelcomeMailPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<DefaultBlockWelcomeMailPlugin, To>
    nameWithType: EnumUtil.MapEnums<DefaultBlockWelcomeMailPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.License.DefaultBlockWelcomeMailPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of DefaultBlockWelcomeMailPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of DefaultBlockWelcomeMailPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.DefaultBlockWelcomeMailPlugin)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<DefaultBlockWelcomeMailPlugin>(DefaultBlockWelcomeMailPlugin)
  nameWithType: ObjectExtensions.AssignByReflection<DefaultBlockWelcomeMailPlugin>(DefaultBlockWelcomeMailPlugin)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.License.DefaultBlockWelcomeMailPlugin>(SuperOffice.License.DefaultBlockWelcomeMailPlugin)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of DefaultBlockWelcomeMailPlugin)(DefaultBlockWelcomeMailPlugin)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin)(SuperOffice.License.DefaultBlockWelcomeMailPlugin)
  name.vb: AssignByReflection(Of DefaultBlockWelcomeMailPlugin)(DefaultBlockWelcomeMailPlugin)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<DefaultBlockWelcomeMailPlugin>
    nameWithType: ObjectExtensions.AssignByReflection<DefaultBlockWelcomeMailPlugin>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.License.DefaultBlockWelcomeMailPlugin>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin
    name: DefaultBlockWelcomeMailPlugin
    nameWithType: DefaultBlockWelcomeMailPlugin
    fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of DefaultBlockWelcomeMailPlugin)
    nameWithType: ObjectExtensions.AssignByReflection(Of DefaultBlockWelcomeMailPlugin)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin
    name: DefaultBlockWelcomeMailPlugin
    nameWithType: DefaultBlockWelcomeMailPlugin
    fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<DefaultBlockWelcomeMailPlugin>()
  nameWithType: ObjectExtensions.GraphCopy<DefaultBlockWelcomeMailPlugin>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.License.DefaultBlockWelcomeMailPlugin>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of DefaultBlockWelcomeMailPlugin)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin)()
  name.vb: GraphCopy(Of DefaultBlockWelcomeMailPlugin)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<DefaultBlockWelcomeMailPlugin>
    nameWithType: ObjectExtensions.GraphCopy<DefaultBlockWelcomeMailPlugin>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.License.DefaultBlockWelcomeMailPlugin>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of DefaultBlockWelcomeMailPlugin)
    nameWithType: ObjectExtensions.GraphCopy(Of DefaultBlockWelcomeMailPlugin)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<DefaultBlockWelcomeMailPlugin, To>()
  nameWithType: Converters.MapEnums<DefaultBlockWelcomeMailPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.DefaultBlockWelcomeMailPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of DefaultBlockWelcomeMailPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin, To)()
  name.vb: MapEnums(Of DefaultBlockWelcomeMailPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<DefaultBlockWelcomeMailPlugin, To>
    nameWithType: Converters.MapEnums<DefaultBlockWelcomeMailPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.DefaultBlockWelcomeMailPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of DefaultBlockWelcomeMailPlugin, To)
    nameWithType: Converters.MapEnums(Of DefaultBlockWelcomeMailPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.DefaultBlockWelcomeMailPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.#ctor*
  commentId: Overload:SuperOffice.License.DefaultBlockWelcomeMailPlugin.#ctor
  isExternal: true
  name: DefaultBlockWelcomeMailPlugin
  nameWithType: DefaultBlockWelcomeMailPlugin.DefaultBlockWelcomeMailPlugin
  fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin.DefaultBlockWelcomeMailPlugin
- uid: SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose*
  commentId: Overload:SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose
  isExternal: true
  name: Dispose
  nameWithType: DefaultBlockWelcomeMailPlugin.Dispose
  fullName: SuperOffice.License.DefaultBlockWelcomeMailPlugin.Dispose
