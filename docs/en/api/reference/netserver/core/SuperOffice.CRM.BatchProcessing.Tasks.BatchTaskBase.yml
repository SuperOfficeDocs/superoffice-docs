### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  commentId: T:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  id: BatchTaskBase
  parent: SuperOffice.CRM.BatchProcessing.Tasks
  children:
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.#ctor(SuperOffice.CRM.BatchProcessing.IBatchData,SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase})
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._batchData
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._internalCompletionSource
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._isEnding
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._statusUpdateInterval
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult(System.String)
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State
  langs:
  - csharp
  - vb
  name: BatchTaskBase
  nameWithType: BatchTaskBase
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  type: Class
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nBase class for tasks to be executed by the BatchTaskFactory.\n"
  syntax:
    content: 'public abstract class BatchTaskBase : Object, IBatchTask, IPlugin'
    content.vb: >-
      Public MustInherit Class BatchTaskBase
          Inherits Object
          Implements IBatchTask, IPlugin
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.BatchProcessing.Plugins.BulkUpdateBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.CSMailMergeBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.ErpForceResyncBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.ExportSelectionToFileBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.FreetextIndexRowsBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.FreetextRegenBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.ImportBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.ImportProductImageBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.SaintRegenBatchPlugin
  - SuperOffice.CRM.BatchProcessing.Plugins.UdefPublishBatchPlugin
  - SuperOffice.ExportArchive.TicketBatchPluginBase
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask
  extensionMethods:
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnumUtil.MapEnums``2
  - SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._isEnding
  commentId: F:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._isEnding
  id: _isEnding
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: _isEnding
  nameWithType: BatchTaskBase._isEnding
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._isEnding
  type: Field
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected bool _isEnding
    return:
      type: System.Boolean
    content.vb: Protected _isEnding As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._statusUpdateInterval
  commentId: F:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._statusUpdateInterval
  id: _statusUpdateInterval
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: _statusUpdateInterval
  nameWithType: BatchTaskBase._statusUpdateInterval
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._statusUpdateInterval
  type: Field
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected long _statusUpdateInterval
    return:
      type: System.Int64
    content.vb: Protected _statusUpdateInterval As Long
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._batchData
  commentId: F:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._batchData
  id: _batchData
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: _batchData
  nameWithType: BatchTaskBase._batchData
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._batchData
  type: Field
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected readonly IBatchData _batchData
    return:
      type: SuperOffice.CRM.BatchProcessing.IBatchData
    content.vb: Protected ReadOnly _batchData As IBatchData
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._internalCompletionSource
  commentId: F:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._internalCompletionSource
  id: _internalCompletionSource
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: _internalCompletionSource
  nameWithType: BatchTaskBase._internalCompletionSource
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase._internalCompletionSource
  type: Field
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: public readonly TaskCompletionSource<bool> _internalCompletionSource
    return:
      type: System.Threading.Tasks.TaskCompletionSource{System.Boolean}
    content.vb: Public ReadOnly _internalCompletionSource As TaskCompletionSource(Of Boolean)
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.#ctor(SuperOffice.CRM.BatchProcessing.IBatchData,SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase})
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.#ctor(SuperOffice.CRM.BatchProcessing.IBatchData,SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase})
  id: '#ctor(SuperOffice.CRM.BatchProcessing.IBatchData,SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration,Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase})'
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: BatchTaskBase(IBatchData, ConfigFile.IBatchServiceConfiguration, ILogger<BatchTaskBase>)
  nameWithType: BatchTaskBase.BatchTaskBase(IBatchData, ConfigFile.IBatchServiceConfiguration, ILogger<BatchTaskBase>)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskBase(SuperOffice.CRM.BatchProcessing.IBatchData, SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration, Microsoft.Extensions.Logging.ILogger<SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase>)
  type: Constructor
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: public BatchTaskBase(IBatchData batchData, ConfigFile.IBatchServiceConfiguration batchServiceConfiguration, ILogger<BatchTaskBase> logger)
    parameters:
    - id: batchData
      type: SuperOffice.CRM.BatchProcessing.IBatchData
    - id: batchServiceConfiguration
      type: SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase}
    content.vb: Public Sub New(batchData As IBatchData, batchServiceConfiguration As ConfigFile.IBatchServiceConfiguration, logger As ILogger(Of BatchTaskBase))
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.#ctor*
  nameWithType.vb: BatchTaskBase.BatchTaskBase(IBatchData, ConfigFile.IBatchServiceConfiguration, ILogger(Of BatchTaskBase))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskBase(SuperOffice.CRM.BatchProcessing.IBatchData, SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration, Microsoft.Extensions.Logging.ILogger(Of SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase))
  name.vb: BatchTaskBase(IBatchData, ConfigFile.IBatchServiceConfiguration, ILogger(Of BatchTaskBase))
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  id: RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: RunTaskAsync(BatchTaskInfo, String, BatchTaskStatusChangedAsync, CancellationToken)
  nameWithType: BatchTaskBase.RunTaskAsync(BatchTaskInfo, String, BatchTaskStatusChangedAsync, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo, System.String, SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nRun a batch task. Method is not completed before the task is executed.\n"
  syntax:
    content: public Task RunTaskAsync(BatchTaskInfo batchTaskInfo, string context, BatchTaskStatusChangedAsync onBatchTaskStatusChanged, CancellationToken cancellationToken = null)
    parameters:
    - id: batchTaskInfo
      type: SuperOffice.CRM.Services.BatchTaskInfo
      description: Information about the task to start.
    - id: context
      type: System.String
    - id: onBatchTaskStatusChanged
      type: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
      description: Notify about changes to the batch task state.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: 'Returns a <xref href="SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo" data-throw-if-not-resolved="false"></xref> with information about the started task '
    content.vb: Public Function RunTaskAsync(batchTaskInfo As BatchTaskInfo, context As String, onBatchTaskStatusChanged As BatchTaskStatusChangedAsync, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync(System.Threading.CancellationToken)
  id: GetTaskInfoAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: GetTaskInfoAsync(CancellationToken)
  nameWithType: BatchTaskBase.GetTaskInfoAsync(CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nGet information about the currently executing task.\n"
  syntax:
    content: public Task<BatchTaskInfo> GetTaskInfoAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
      description: Information about the currently executing task.
    content.vb: Public Function GetTaskInfoAsync(cancellationToken As CancellationToken) As Task(Of BatchTaskInfo)
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync(System.Threading.CancellationToken)
  id: EndTaskAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: EndTaskAsync(CancellationToken)
  nameWithType: BatchTaskBase.EndTaskAsync(CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: public Task EndTaskAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EndTaskAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync*
  implements:
  - SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ProgressCallbackAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: ProgressCallbackAsync(Int32, Int32, CancellationToken)
  nameWithType: BatchTaskBase.ProgressCallbackAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected Task<bool> ProgressCallbackAsync(int total, int current, CancellationToken cancellationToken = null)
    parameters:
    - id: total
      type: System.Int32
    - id: current
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Function ProgressCallbackAsync(total As Integer, current As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync(System.String,System.String,System.Threading.CancellationToken)
  id: RunAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: RunAsync(String, String, CancellationToken)
  nameWithType: BatchTaskBase.RunAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nRun the task.\n"
  remarks: Call <xref href="SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult(System.String)" data-throw-if-not-resolved="false"></xref> as needed.
  syntax:
    content: protected abstract Task<bool> RunAsync(string name, string context, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: Name of the task.
    - id: context
      type: System.String
      description: Context for the task.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: True if the task succeeded.
    content.vb: Protected MustOverride Function RunAsync(name As String, context As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult(System.String)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult(System.String)
  id: SetResult(System.String)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: SetResult(String)
  nameWithType: BatchTaskBase.SetResult(String)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult(System.String)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nSet the result of the task.\n"
  syntax:
    content: protected void SetResult(string result)
    parameters:
    - id: result
      type: System.String
      description: Result to set on the executing task.
    content.vb: Protected Sub SetResult(result As String)
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SaveStreamToBlobAsync(System.IO.Stream,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: SaveStreamToBlobAsync(Stream, String, String, String, CancellationToken)
  nameWithType: BatchTaskBase.SaveStreamToBlobAsync(Stream, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync(System.IO.Stream, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected Task<int> SaveStreamToBlobAsync(Stream stream, string description = null, string extraInfo = null, string linkComment = null, CancellationToken cancellationToken = null)
    parameters:
    - id: stream
      type: System.IO.Stream
    - id: description
      type: System.String
    - id: extraInfo
      type: System.String
    - id: linkComment
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Protected Function SaveStreamToBlobAsync(stream As Stream, description As String = Nothing, extraInfo As String = Nothing, linkComment As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync
  commentId: M:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync
  id: EnsureUdefsAsync
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: EnsureUdefsAsync()
  nameWithType: BatchTaskBase.EnsureUdefsAsync()
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync()
  type: Method
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected Task EnsureUdefsAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Function EnsureUdefsAsync As Task
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id
  commentId: P:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id
  id: Id
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: BatchTaskBase.Id
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected ReadOnly Property Id As Integer
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo
  commentId: P:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo
  id: BatchTaskInfo
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: BatchTaskInfo
  nameWithType: BatchTaskBase.BatchTaskInfo
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  syntax:
    content: protected BatchTaskInfo BatchTaskInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.BatchTaskInfo
    content.vb: Protected ReadOnly Property BatchTaskInfo As BatchTaskInfo
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name
  commentId: P:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name
  id: Name
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: BatchTaskBase.Name
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nName of the task.\n"
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context
  commentId: P:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context
  id: Context
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: BatchTaskBase.Context
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nContext of the task\n"
  syntax:
    content: public string Context { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Context As String
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result
  commentId: P:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result
  id: Result
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: BatchTaskBase.Result
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nResult of the task.\n"
  syntax:
    content: public string Result { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Result As String
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State
  commentId: P:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State
  id: State
  parent: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
  langs:
  - csharp
  - vb
  name: State
  nameWithType: BatchTaskBase.State
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State
  type: Property
  source:
    path: SoBatchProcessing
    isExternal: true
  assemblies:
  - SoBatchProcessing
  namespace: SuperOffice.CRM.BatchProcessing.Tasks
  summary: "\nState of the executing task.\n"
  syntax:
    content: public BatchTaskState State { get; }
    parameters: []
    return:
      type: SuperOffice.Data.BatchTaskState
    content.vb: Public ReadOnly Property State As BatchTaskState
  overload: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.BatchProcessing.Tasks
  commentId: N:SuperOffice.CRM.BatchProcessing.Tasks
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing.Tasks
  nameWithType: SuperOffice.CRM.BatchProcessing.Tasks
  fullName: SuperOffice.CRM.BatchProcessing.Tasks
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchTask
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchTask
  nameWithType: IBatchTask
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<BatchTaskBase, To>()
  nameWithType: EnumUtil.MapEnums<BatchTaskBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of BatchTaskBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To)()
  name.vb: MapEnums(Of BatchTaskBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<BatchTaskBase, To>
    nameWithType: EnumUtil.MapEnums<BatchTaskBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of BatchTaskBase, To)
    nameWithType: EnumUtil.MapEnums(Of BatchTaskBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<BatchTaskBase, To>()
  nameWithType: Converters.MapEnums<BatchTaskBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To>()
  nameWithType.vb: Converters.MapEnums(Of BatchTaskBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To)()
  name.vb: MapEnums(Of BatchTaskBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<BatchTaskBase, To>
    nameWithType: Converters.MapEnums<BatchTaskBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of BatchTaskBase, To)
    nameWithType: Converters.MapEnums(Of BatchTaskBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.BatchProcessing
  commentId: N:SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: SuperOffice.CRM.BatchProcessing
  nameWithType: SuperOffice.CRM.BatchProcessing
  fullName: SuperOffice.CRM.BatchProcessing
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: SuperOffice.CRM.BatchProcessing.IBatchData
  commentId: T:SuperOffice.CRM.BatchProcessing.IBatchData
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: IBatchData
  nameWithType: IBatchData
  fullName: SuperOffice.CRM.BatchProcessing.IBatchData
- uid: System.Threading.Tasks.TaskCompletionSource{System.Boolean}
  commentId: '!:System.Threading.Tasks.TaskCompletionSource{System.Boolean}'
  definition: System.Threading.Tasks.TaskCompletionSource`1
  name: TaskCompletionSource<Boolean>
  nameWithType: TaskCompletionSource<Boolean>
  fullName: System.Threading.Tasks.TaskCompletionSource<System.Boolean>
  nameWithType.vb: TaskCompletionSource(Of Boolean)
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of System.Boolean)
  name.vb: TaskCompletionSource(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.TaskCompletionSource`1
  isExternal: true
  name: TaskCompletionSource<>
  nameWithType: TaskCompletionSource<>
  fullName: System.Threading.Tasks.TaskCompletionSource<>
  nameWithType.vb: TaskCompletionSource(Of )
  fullName.vb: System.Threading.Tasks.TaskCompletionSource(Of )
  name.vb: TaskCompletionSource(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.TaskCompletionSource`1
    name: TaskCompletionSource
    nameWithType: TaskCompletionSource
    fullName: System.Threading.Tasks.TaskCompletionSource
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.#ctor*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.#ctor
  isExternal: true
  name: BatchTaskBase
  nameWithType: BatchTaskBase.BatchTaskBase
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskBase
- uid: SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration
  commentId: T:SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration
  parent: SuperOffice.Configuration
  isExternal: true
  name: ConfigFile.IBatchServiceConfiguration
  nameWithType: ConfigFile.IBatchServiceConfiguration
  fullName: SuperOffice.Configuration.ConfigFile.IBatchServiceConfiguration
- uid: Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase}
  commentId: '!:Microsoft.Extensions.Logging.ILogger{SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase}'
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<BatchTaskBase>
  nameWithType: ILogger<BatchTaskBase>
  fullName: Microsoft.Extensions.Logging.ILogger<SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase>
  nameWithType.vb: ILogger(Of BatchTaskBase)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase)
  name.vb: ILogger(Of BatchTaskBase)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
    name: BatchTaskBase
    nameWithType: BatchTaskBase
    fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
    name: BatchTaskBase
    nameWithType: BatchTaskBase
    fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Configuration
  commentId: N:SuperOffice.Configuration
  isExternal: true
  name: SuperOffice.Configuration
  nameWithType: SuperOffice.Configuration
  fullName: SuperOffice.Configuration
- uid: Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: Microsoft.Extensions.Logging.ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync
  isExternal: true
  name: RunTaskAsync
  nameWithType: BatchTaskBase.RunTaskAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunTaskAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: RunTaskAsync(BatchTaskInfo, String, BatchTaskStatusChangedAsync, CancellationToken)
  nameWithType: IBatchTask.RunTaskAsync(BatchTaskInfo, String, BatchTaskStatusChangedAsync, CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo, System.String, SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
    name: RunTaskAsync
    nameWithType: IBatchTask.RunTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
    name: BatchTaskStatusChangedAsync
    nameWithType: BatchTaskStatusChangedAsync
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync(SuperOffice.CRM.Services.BatchTaskInfo,System.String,SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync,System.Threading.CancellationToken)
    name: RunTaskAsync
    nameWithType: IBatchTask.RunTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.RunTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
    name: BatchTaskStatusChangedAsync
    nameWithType: BatchTaskStatusChangedAsync
    fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskInfo
  fullName: SuperOffice.CRM.Services.BatchTaskInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
  commentId: T:SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
  parent: SuperOffice.CRM.BatchProcessing
  isExternal: true
  name: BatchTaskStatusChangedAsync
  nameWithType: BatchTaskStatusChangedAsync
  fullName: SuperOffice.CRM.BatchProcessing.BatchTaskStatusChangedAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync
  isExternal: true
  name: GetTaskInfoAsync
  nameWithType: BatchTaskBase.GetTaskInfoAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.GetTaskInfoAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: GetTaskInfoAsync(CancellationToken)
  nameWithType: IBatchTask.GetTaskInfoAsync(CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync(System.Threading.CancellationToken)
    name: GetTaskInfoAsync
    nameWithType: IBatchTask.GetTaskInfoAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync(System.Threading.CancellationToken)
    name: GetTaskInfoAsync
    nameWithType: IBatchTask.GetTaskInfoAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.GetTaskInfoAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Services.BatchTaskInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<BatchTaskInfo>
  nameWithType: Task<BatchTaskInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Services.BatchTaskInfo>
  nameWithType.vb: Task(Of BatchTaskInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Services.BatchTaskInfo)
  name.vb: Task(Of BatchTaskInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Services.BatchTaskInfo
    name: BatchTaskInfo
    nameWithType: BatchTaskInfo
    fullName: SuperOffice.CRM.Services.BatchTaskInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync
  isExternal: true
  name: EndTaskAsync
  nameWithType: BatchTaskBase.EndTaskAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EndTaskAsync
- uid: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.BatchProcessing.IBatchTask
  isExternal: true
  name: EndTaskAsync(CancellationToken)
  nameWithType: IBatchTask.EndTaskAsync(CancellationToken)
  fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync(System.Threading.CancellationToken)
    name: EndTaskAsync
    nameWithType: IBatchTask.EndTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync(System.Threading.CancellationToken)
    name: EndTaskAsync
    nameWithType: IBatchTask.EndTaskAsync
    fullName: SuperOffice.CRM.BatchProcessing.IBatchTask.EndTaskAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync
  isExternal: true
  name: ProgressCallbackAsync
  nameWithType: BatchTaskBase.ProgressCallbackAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.ProgressCallbackAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync
  isExternal: true
  name: RunAsync
  nameWithType: BatchTaskBase.RunAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.RunAsync
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult
  isExternal: true
  name: SetResult
  nameWithType: BatchTaskBase.SetResult
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SetResult
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync
  isExternal: true
  name: SaveStreamToBlobAsync
  nameWithType: BatchTaskBase.SaveStreamToBlobAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.SaveStreamToBlobAsync
- uid: System.IO.Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync
  isExternal: true
  name: EnsureUdefsAsync
  nameWithType: BatchTaskBase.EnsureUdefsAsync
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.EnsureUdefsAsync
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id
  isExternal: true
  name: Id
  nameWithType: BatchTaskBase.Id
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Id
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo
  isExternal: true
  name: BatchTaskInfo
  nameWithType: BatchTaskBase.BatchTaskInfo
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.BatchTaskInfo
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name
  isExternal: true
  name: Name
  nameWithType: BatchTaskBase.Name
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Name
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context
  isExternal: true
  name: Context
  nameWithType: BatchTaskBase.Context
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Context
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result
  isExternal: true
  name: Result
  nameWithType: BatchTaskBase.Result
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.Result
- uid: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State*
  commentId: Overload:SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State
  isExternal: true
  name: State
  nameWithType: BatchTaskBase.State
  fullName: SuperOffice.CRM.BatchProcessing.Tasks.BatchTaskBase.State
- uid: SuperOffice.Data.BatchTaskState
  commentId: T:SuperOffice.Data.BatchTaskState
  parent: SuperOffice.Data
  isExternal: true
  name: BatchTaskState
  nameWithType: BatchTaskState
  fullName: SuperOffice.Data.BatchTaskState
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
