### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.RecurrenceManager
  commentId: T:SuperOffice.CRM.Entities.RecurrenceManager
  id: RecurrenceManager
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.RecurrenceManager.#ctor
  - SuperOffice.CRM.Entities.RecurrenceManager.#ctor(SuperOffice.CRM.Entities.Appointment,System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment})
  - SuperOffice.CRM.Entities.RecurrenceManager.#ctor(SuperOffice.CRM.Services.RecurrenceInfo)
  - SuperOffice.CRM.Entities.RecurrenceManager.#ctor(System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync(SuperOffice.CRM.Entities.EntityUdefHelper,SuperOffice.CRM.Entities.EntityUdefHelper)
  - SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday(System.DayOfWeek)
  - SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone(System.DateTime,System.Int32)
  - SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger(SuperOffice.Data.Weekday)
  - SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.RecurrenceManager.Dates
  - SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth(System.Int32,System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek,SuperOffice.Data.Weekday)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo
  - SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo(System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount
  - SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate(System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Rows.RecurrenceRuleRow,System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth(SuperOffice.Data.Weekday,System.Int32,System.DateTime)
  - SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged
  - SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Rows.TableRowBase,SuperOffice.Data.SQL.FieldInfo,System.Object,System.Object,System.Object)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync(System.Boolean,System.Boolean)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  - SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync(SuperOffice.CRM.Entities.Appointment,System.String,System.Object,System.Object,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave(System.Boolean,System.Boolean)
  - SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays
  - SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  - SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
  - SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  - SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord(SuperOffice.CRM.Services.RecurrenceInfo,SuperOffice.CRM.Rows.RecurrenceRuleRecordData,System.DateTime)
  langs:
  - csharp
  - vb
  name: RecurrenceManager
  nameWithType: RecurrenceManager
  fullName: SuperOffice.CRM.Entities.RecurrenceManager
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: >-
    The recurrence manager is used by the <xref href="SuperOffice.CRM.Entities.AppointmentMatrix" data-throw-if-not-resolved="false"></xref> to calculate 

    recurrence patterns, modify appointment records and to maintain an 

    encapsulated <xref href="SuperOffice.CRM.Rows.RecurrenceRuleRow" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class RecurrenceManager
    content.vb: Public Class RecurrenceManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Entities.RecurrenceManager.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Entities.RecurrenceManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.CRM.Entities.RecurrenceManager.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Entities.RecurrenceManager)
  - SuperOffice.CRM.Entities.RecurrenceManager.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.CRM.Entities.RecurrenceManager.#ctor(SuperOffice.CRM.Entities.Appointment,System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment})
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.#ctor(SuperOffice.CRM.Entities.Appointment,System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment})
  id: '#ctor(SuperOffice.CRM.Entities.Appointment,System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment})'
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: RecurrenceManager(Appointment, IEnumerable<Appointment>)
  nameWithType: RecurrenceManager.RecurrenceManager(Appointment, IEnumerable<Appointment>)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceManager(SuperOffice.CRM.Entities.Appointment, System.Collections.Generic.IEnumerable<SuperOffice.CRM.Entities.Appointment>)
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Instantiate the recurrence manager with an existing <xref href="SuperOffice.CRM.Rows.RecurrenceRuleRow" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public RecurrenceManager(Appointment bookingMaster, IEnumerable<Appointment> repetitions)
    parameters:
    - id: bookingMaster
      type: SuperOffice.CRM.Entities.Appointment
      description: Master appointment entity for the appointment.
    - id: repetitions
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment}
      description: Dates of recurring appointments.
    content.vb: Public Sub New(bookingMaster As Appointment, repetitions As IEnumerable(Of Appointment))
  overload: SuperOffice.CRM.Entities.RecurrenceManager.#ctor*
  nameWithType.vb: RecurrenceManager.New(Appointment, IEnumerable(Of Appointment))
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.New(SuperOffice.CRM.Entities.Appointment, System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Entities.Appointment))
  name.vb: New(Appointment, IEnumerable(Of Appointment))
- uid: SuperOffice.CRM.Entities.RecurrenceManager.#ctor(SuperOffice.CRM.Services.RecurrenceInfo)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.#ctor(SuperOffice.CRM.Services.RecurrenceInfo)
  id: '#ctor(SuperOffice.CRM.Services.RecurrenceInfo)'
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: RecurrenceManager(RecurrenceInfo)
  nameWithType: RecurrenceManager.RecurrenceManager(RecurrenceInfo)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceManager(SuperOffice.CRM.Services.RecurrenceInfo)
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Instantiate a RecurrenceManager providing a new recurrence pattern.
  example: []
  syntax:
    content: public RecurrenceManager(RecurrenceInfo recurrenceInfo)
    parameters:
    - id: recurrenceInfo
      type: SuperOffice.CRM.Services.RecurrenceInfo
      description: Information about the recurrence pattern.
    content.vb: Public Sub New(recurrenceInfo As RecurrenceInfo)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.#ctor*
  nameWithType.vb: RecurrenceManager.New(RecurrenceInfo)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.New(SuperOffice.CRM.Services.RecurrenceInfo)
  name.vb: New(RecurrenceInfo)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.#ctor
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: RecurrenceManager()
  nameWithType: RecurrenceManager.RecurrenceManager()
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceManager()
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public RecurrenceManager()
    content.vb: Public Sub New()
  overload: SuperOffice.CRM.Entities.RecurrenceManager.#ctor*
  nameWithType.vb: RecurrenceManager.New()
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.New()
  name.vb: New()
- uid: SuperOffice.CRM.Entities.RecurrenceManager.#ctor(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: RecurrenceManager(DateTime)
  nameWithType: RecurrenceManager.RecurrenceManager(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceManager(System.DateTime)
  type: Constructor
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public RecurrenceManager(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    content.vb: Public Sub New([date] As Date)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.#ctor*
  nameWithType.vb: RecurrenceManager.New(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.New(Date)
  name.vb: New(Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo
  id: GetDefaultRecurrenceInfo
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetDefaultRecurrenceInfo()
  nameWithType: RecurrenceManager.GetDefaultRecurrenceInfo()
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static RecurrenceInfo GetDefaultRecurrenceInfo()
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
    content.vb: Public Shared Function GetDefaultRecurrenceInfo() As RecurrenceInfo
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo(System.DateTime)
  id: GetDefaultRecurrenceInfo(System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetDefaultRecurrenceInfo(DateTime)
  nameWithType: RecurrenceManager.GetDefaultRecurrenceInfo(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static RecurrenceInfo GetDefaultRecurrenceInfo(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
    content.vb: Public Shared Function GetDefaultRecurrenceInfo([date] As Date) As RecurrenceInfo
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo*
  nameWithType.vb: RecurrenceManager.GetDefaultRecurrenceInfo(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo(Date)
  name.vb: GetDefaultRecurrenceInfo(Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  id: UpdateConflictsAsync(System.Int32,System.Int32,System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,SuperOffice.CRM.Services.ParticipantInfo[])
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: UpdateConflictsAsync(int, int, TimeSpan, TimeSpan, CancellationToken, params ParticipantInfo[])
  nameWithType: RecurrenceManager.UpdateConflictsAsync(int, int, TimeSpan, TimeSpan, CancellationToken, params ParticipantInfo[])
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync(int, int, System.TimeSpan, System.TimeSpan, System.Threading.CancellationToken, params SuperOffice.CRM.Services.ParticipantInfo[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Update the recurrence dates with conflict and letter day information, based on a list of participants.
  example: []
  syntax:
    content: public Task UpdateConflictsAsync(int excludedAppointmentId, int excludedRecurrenceRuleId, TimeSpan startTime, TimeSpan endTime, CancellationToken cancellationToken = default, params ParticipantInfo[] participants)
    parameters:
    - id: excludedAppointmentId
      type: System.Int32
    - id: excludedRecurrenceRuleId
      type: System.Int32
    - id: startTime
      type: System.TimeSpan
    - id: endTime
      type: System.TimeSpan
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: participants
      type: SuperOffice.CRM.Services.ParticipantInfo[]
      description: ''
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateConflictsAsync(excludedAppointmentId As Integer, excludedRecurrenceRuleId As Integer, startTime As TimeSpan, endTime As TimeSpan, cancellationToken As CancellationToken = Nothing, ParamArray participants As ParticipantInfo()) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync*
  nameWithType.vb: RecurrenceManager.UpdateConflictsAsync(Integer, Integer, TimeSpan, TimeSpan, CancellationToken, ParamArray ParticipantInfo())
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync(Integer, Integer, System.TimeSpan, System.TimeSpan, System.Threading.CancellationToken, ParamArray SuperOffice.CRM.Services.ParticipantInfo())
  name.vb: UpdateConflictsAsync(Integer, Integer, TimeSpan, TimeSpan, CancellationToken, ParamArray ParticipantInfo())
- uid: SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync(System.Threading.CancellationToken)
  id: BreakRecurrenceAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: BreakRecurrenceAsync(CancellationToken)
  nameWithType: RecurrenceManager.BreakRecurrenceAsync(CancellationToken)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task BreakRecurrenceAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function BreakRecurrenceAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays
  id: RecalculateDays
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: RecalculateDays()
  nameWithType: RecurrenceManager.RecalculateDays()
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Re-calculate the days in the containing <xref href="SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo" data-throw-if-not-resolved="false"></xref>.
  example:
  - >-
    <pre><code class="lang-csharp">// Make some modifications to the  object.

    recurrenceManager.RecalculateDays();

    RecurrenceDate[] newDates = recurrenceManager.Days;</code></pre>
  syntax:
    content: public void RecalculateDays()
    content.vb: Public Sub RecalculateDays()
  overload: SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount
  id: GetEstimatedCount
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetEstimatedCount()
  nameWithType: RecurrenceManager.GetEstimatedCount()
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount()
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public int GetEstimatedCount()
    return:
      type: System.Int32
    content.vb: Public Function GetEstimatedCount() As Integer
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  id: GetFirstDate(System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetFirstDate(DateTime)
  nameWithType: RecurrenceManager.GetFirstDate(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get the first date of a recurrence.  The first date can be the same as the date provided.
  example: []
  syntax:
    content: public DateTime GetFirstDate(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
      description: First candidate for a date in a recurrence.
    return:
      type: System.DateTime
      description: First valid date in a recurrence
    content.vb: Public Function GetFirstDate([date] As Date) As Date
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate*
  nameWithType.vb: RecurrenceManager.GetFirstDate(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(Date)
  name.vb: GetFirstDate(Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate(System.DateTime)
  id: GetNextDate(System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetNextDate(DateTime)
  nameWithType: RecurrenceManager.GetNextDate(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get the next date in a recurrence.  Use <xref href="SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)" data-throw-if-not-resolved="false"></xref> to get the initial date.
  example: []
  syntax:
    content: public DateTime GetNextDate(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
      description: The previous date in recurrence.
    return:
      type: System.DateTime
      description: The next date.  The day after the provided date is the earliest date that will be returned.
    content.vb: Public Function GetNextDate([date] As Date) As Date
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate*
  nameWithType.vb: RecurrenceManager.GetNextDate(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate(Date)
  name.vb: GetNextDate(Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DateTime)
  id: GetDaysToMatchInPattern(System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetDaysToMatchInPattern(DateTime)
  nameWithType: RecurrenceManager.GetDaysToMatchInPattern(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public int GetDaysToMatchInPattern(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: System.Int32
    content.vb: Public Function GetDaysToMatchInPattern([date] As Date) As Integer
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern*
  nameWithType.vb: RecurrenceManager.GetDaysToMatchInPattern(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(Date)
  name.vb: GetDaysToMatchInPattern(Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek)
  id: GetDaysToMatchInPattern(System.DayOfWeek)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetDaysToMatchInPattern(DayOfWeek)
  nameWithType: RecurrenceManager.GetDaysToMatchInPattern(DayOfWeek)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public int GetDaysToMatchInPattern(DayOfWeek dayOfWeek)
    parameters:
    - id: dayOfWeek
      type: System.DayOfWeek
    return:
      type: System.Int32
    content.vb: Public Function GetDaysToMatchInPattern(dayOfWeek As DayOfWeek) As Integer
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek,SuperOffice.Data.Weekday)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek,SuperOffice.Data.Weekday)
  id: GetDaysToMatchInPattern(System.DayOfWeek,SuperOffice.Data.Weekday)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetDaysToMatchInPattern(DayOfWeek, Weekday)
  nameWithType: RecurrenceManager.GetDaysToMatchInPattern(DayOfWeek, Weekday)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern(System.DayOfWeek, SuperOffice.Data.Weekday)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get Number of days until a match in the week pattern.  Matching today is '0'.
  example: []
  syntax:
    content: public static int GetDaysToMatchInPattern(DayOfWeek dayOfWeek, Weekday weekPattern)
    parameters:
    - id: dayOfWeek
      type: System.DayOfWeek
      description: Current day of week as used by <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>.
    - id: weekPattern
      type: SuperOffice.Data.Weekday
      description: <xref href="SuperOffice.Data.Weekday" data-throw-if-not-resolved="false"></xref> pattern describing days in the week for recurrence.
    return:
      type: System.Int32
      description: Number of days until Match [0-6].  Today is 0.
    content.vb: Public Shared Function GetDaysToMatchInPattern(dayOfWeek As DayOfWeek, weekPattern As Weekday) As Integer
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth(System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth(System.Int32,System.DateTime)
  id: GetDayInMonth(System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetDayInMonth(int, DateTime)
  nameWithType: RecurrenceManager.GetDayInMonth(int, DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth(int, System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get the date for a day in a month.
  example: []
  syntax:
    content: public static DateTime GetDayInMonth(int day, DateTime month)
    parameters:
    - id: day
      type: System.Int32
      description: The day in the month.
    - id: month
      type: System.DateTime
      description: Month
    return:
      type: System.DateTime
      description: Date of the day in the month.
    content.vb: Public Shared Function GetDayInMonth(day As Integer, month As Date) As Date
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth*
  nameWithType.vb: RecurrenceManager.GetDayInMonth(Integer, Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth(Integer, Date)
  name.vb: GetDayInMonth(Integer, Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth(SuperOffice.Data.Weekday,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth(SuperOffice.Data.Weekday,System.Int32,System.DateTime)
  id: GetWeekDayInMonth(SuperOffice.Data.Weekday,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetWeekDayInMonth(Weekday, int, DateTime)
  nameWithType: RecurrenceManager.GetWeekDayInMonth(Weekday, int, DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth(SuperOffice.Data.Weekday, int, System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static DateTime GetWeekDayInMonth(Weekday weekday, int week, DateTime month)
    parameters:
    - id: weekday
      type: SuperOffice.Data.Weekday
    - id: week
      type: System.Int32
    - id: month
      type: System.DateTime
    return:
      type: System.DateTime
    content.vb: Public Shared Function GetWeekDayInMonth(weekday As Weekday, week As Integer, month As Date) As Date
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth*
  nameWithType.vb: RecurrenceManager.GetWeekDayInMonth(Weekday, Integer, Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth(SuperOffice.Data.Weekday, Integer, Date)
  name.vb: GetWeekDayInMonth(Weekday, Integer, Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone(System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone(System.DateTime,System.Int32)
  id: ConvertFromTimeZone(System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: ConvertFromTimeZone(DateTime, int)
  nameWithType: RecurrenceManager.ConvertFromTimeZone(DateTime, int)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone(System.DateTime, int)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static DateTime ConvertFromTimeZone(DateTime date, int timeZoneID)
    parameters:
    - id: date
      type: System.DateTime
    - id: timeZoneID
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: Public Shared Function ConvertFromTimeZone([date] As Date, timeZoneID As Integer) As Date
  overload: SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone*
  nameWithType.vb: RecurrenceManager.ConvertFromTimeZone(Date, Integer)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone(Date, Integer)
  name.vb: ConvertFromTimeZone(Date, Integer)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate,System.Threading.CancellationToken)
  id: CreateAppointmentForDateAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: CreateAppointmentForDateAsync(Appointment, RecurrenceDate, CancellationToken)
  nameWithType: RecurrenceManager.CreateAppointmentForDateAsync(Appointment, RecurrenceDate, CancellationToken)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Services.RecurrenceDate, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: >-
    Create a new <xref href="SuperOffice.CRM.Entities.Appointment" data-throw-if-not-resolved="false"></xref> with new date information based on 

    an existing instance of an <xref href="SuperOffice.CRM.Entities.Appointment" data-throw-if-not-resolved="false"></xref>.
  remarks: The appointment is cloned and modified using the <xref href="SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment%2cSuperOffice.CRM.Services.RecurrenceDate)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public static Task<Appointment> CreateAppointmentForDateAsync(Appointment originalAppointment, RecurrenceDate date, CancellationToken cancellationToken)
    parameters:
    - id: originalAppointment
      type: SuperOffice.CRM.Entities.Appointment
      description: Original appointment to create a copy of with new date information.
    - id: date
      type: SuperOffice.CRM.Services.RecurrenceDate
      description: New date information to apply on the newly created appointment record.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.Appointment}
      description: ''
    content.vb: Public Shared Function CreateAppointmentForDateAsync(originalAppointment As Appointment, [date] As RecurrenceDate, cancellationToken As CancellationToken) As Task(Of Appointment)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync(SuperOffice.CRM.Entities.EntityUdefHelper,SuperOffice.CRM.Entities.EntityUdefHelper)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync(SuperOffice.CRM.Entities.EntityUdefHelper,SuperOffice.CRM.Entities.EntityUdefHelper)
  id: ApplyUdefValuesAsync(SuperOffice.CRM.Entities.EntityUdefHelper,SuperOffice.CRM.Entities.EntityUdefHelper)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: ApplyUdefValuesAsync(EntityUdefHelper, EntityUdefHelper)
  nameWithType: RecurrenceManager.ApplyUdefValuesAsync(EntityUdefHelper, EntityUdefHelper)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync(SuperOffice.CRM.Entities.EntityUdefHelper, SuperOffice.CRM.Entities.EntityUdefHelper)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task ApplyUdefValuesAsync(EntityUdefHelper source, EntityUdefHelper target)
    parameters:
    - id: source
      type: SuperOffice.CRM.Entities.EntityUdefHelper
    - id: target
      type: SuperOffice.CRM.Entities.EntityUdefHelper
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function ApplyUdefValuesAsync(source As EntityUdefHelper, target As EntityUdefHelper) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Rows.TableRowBase,SuperOffice.Data.SQL.FieldInfo,System.Object,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Rows.TableRowBase,SuperOffice.Data.SQL.FieldInfo,System.Object,System.Object,System.Object)
  id: OnAppointmentRowValueChanged(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Rows.TableRowBase,SuperOffice.Data.SQL.FieldInfo,System.Object,System.Object,System.Object)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnAppointmentRowValueChanged(Appointment, TableRowBase, FieldInfo, object, object, object)
  nameWithType: RecurrenceManager.OnAppointmentRowValueChanged(Appointment, TableRowBase, FieldInfo, object, object, object)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Rows.TableRowBase, SuperOffice.Data.SQL.FieldInfo, object, object, object)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void OnAppointmentRowValueChanged(Appointment app, TableRowBase fieldOwner, FieldInfo field, object persistedValue, object currentValue, object newValue)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: fieldOwner
      type: SuperOffice.CRM.Rows.TableRowBase
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
    - id: persistedValue
      type: System.Object
    - id: currentValue
      type: System.Object
    - id: newValue
      type: System.Object
    content.vb: Public Sub OnAppointmentRowValueChanged(app As Appointment, fieldOwner As TableRowBase, field As FieldInfo, persistedValue As Object, currentValue As Object, newValue As Object)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged*
  nameWithType.vb: RecurrenceManager.OnAppointmentRowValueChanged(Appointment, TableRowBase, FieldInfo, Object, Object, Object)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Rows.TableRowBase, SuperOffice.Data.SQL.FieldInfo, Object, Object, Object)
  name.vb: OnAppointmentRowValueChanged(Appointment, TableRowBase, FieldInfo, Object, Object, Object)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  id: OnTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnTextChange(Appointment, string, string, string)
  nameWithType: RecurrenceManager.OnTextChange(Appointment, string, string, string)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange(SuperOffice.CRM.Entities.Appointment, string, string, string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void OnTextChange(Appointment app, string persistedValue, string currentValue, string newValue)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: persistedValue
      type: System.String
    - id: currentValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Public Sub OnTextChange(app As Appointment, persistedValue As String, currentValue As String, newValue As String)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange*
  nameWithType.vb: RecurrenceManager.OnTextChange(Appointment, String, String, String)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange(SuperOffice.CRM.Entities.Appointment, String, String, String)
  name.vb: OnTextChange(Appointment, String, String, String)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  id: OnAgendaTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnAgendaTextChange(Appointment, string, string, string)
  nameWithType: RecurrenceManager.OnAgendaTextChange(Appointment, string, string, string)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange(SuperOffice.CRM.Entities.Appointment, string, string, string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void OnAgendaTextChange(Appointment app, string persistedValue, string currentValue, string newValue)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: persistedValue
      type: System.String
    - id: currentValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Public Sub OnAgendaTextChange(app As Appointment, persistedValue As String, currentValue As String, newValue As String)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange*
  nameWithType.vb: RecurrenceManager.OnAgendaTextChange(Appointment, String, String, String)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange(SuperOffice.CRM.Entities.Appointment, String, String, String)
  name.vb: OnAgendaTextChange(Appointment, String, String, String)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  id: OnAgendaHTMLTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnAgendaHTMLTextChange(Appointment, string, string, string)
  nameWithType: RecurrenceManager.OnAgendaHTMLTextChange(Appointment, string, string, string)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange(SuperOffice.CRM.Entities.Appointment, string, string, string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void OnAgendaHTMLTextChange(Appointment app, string persistedValue, string currentValue, string newValue)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: persistedValue
      type: System.String
    - id: currentValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Public Sub OnAgendaHTMLTextChange(app As Appointment, persistedValue As String, currentValue As String, newValue As String)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange*
  nameWithType.vb: RecurrenceManager.OnAgendaHTMLTextChange(Appointment, String, String, String)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange(SuperOffice.CRM.Entities.Appointment, String, String, String)
  name.vb: OnAgendaHTMLTextChange(Appointment, String, String, String)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  id: OnInternalNotesTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnInternalNotesTextChange(Appointment, string, string, string)
  nameWithType: RecurrenceManager.OnInternalNotesTextChange(Appointment, string, string, string)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange(SuperOffice.CRM.Entities.Appointment, string, string, string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void OnInternalNotesTextChange(Appointment app, string persistedValue, string currentValue, string newValue)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: persistedValue
      type: System.String
    - id: currentValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Public Sub OnInternalNotesTextChange(app As Appointment, persistedValue As String, currentValue As String, newValue As String)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange*
  nameWithType.vb: RecurrenceManager.OnInternalNotesTextChange(Appointment, String, String, String)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange(SuperOffice.CRM.Entities.Appointment, String, String, String)
  name.vb: OnInternalNotesTextChange(Appointment, String, String, String)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  id: OnInternalNotesHtmlTextChange(SuperOffice.CRM.Entities.Appointment,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnInternalNotesHtmlTextChange(Appointment, string, string, string)
  nameWithType: RecurrenceManager.OnInternalNotesHtmlTextChange(Appointment, string, string, string)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange(SuperOffice.CRM.Entities.Appointment, string, string, string)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void OnInternalNotesHtmlTextChange(Appointment app, string persistedValue, string currentValue, string newValue)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: persistedValue
      type: System.String
    - id: currentValue
      type: System.String
    - id: newValue
      type: System.String
    content.vb: Public Sub OnInternalNotesHtmlTextChange(app As Appointment, persistedValue As String, currentValue As String, newValue As String)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange*
  nameWithType.vb: RecurrenceManager.OnInternalNotesHtmlTextChange(Appointment, String, String, String)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange(SuperOffice.CRM.Entities.Appointment, String, String, String)
  name.vb: OnInternalNotesHtmlTextChange(Appointment, String, String, String)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync(SuperOffice.CRM.Entities.Appointment,System.String,System.Object,System.Object,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync(SuperOffice.CRM.Entities.Appointment,System.String,System.Object,System.Object,System.Threading.CancellationToken)
  id: OnUdefValueChangeAsync(SuperOffice.CRM.Entities.Appointment,System.String,System.Object,System.Object,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnUdefValueChangeAsync(Appointment, string, object, object, CancellationToken)
  nameWithType: RecurrenceManager.OnUdefValueChangeAsync(Appointment, string, object, object, CancellationToken)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync(SuperOffice.CRM.Entities.Appointment, string, object, object, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task OnUdefValueChangeAsync(Appointment app, string progId, object oldValue, object newValue, CancellationToken cancellationToken = default)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: progId
      type: System.String
    - id: oldValue
      type: System.Object
    - id: newValue
      type: System.Object
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OnUdefValueChangeAsync(app As Appointment, progId As String, oldValue As Object, newValue As Object, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync*
  nameWithType.vb: RecurrenceManager.OnUdefValueChangeAsync(Appointment, String, Object, Object, CancellationToken)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync(SuperOffice.CRM.Entities.Appointment, String, Object, Object, System.Threading.CancellationToken)
  name.vb: OnUdefValueChangeAsync(Appointment, String, Object, Object, CancellationToken)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  id: OnLinksAddedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnLinksAddedAsync(Appointment, ActivityLinksHelper, AppointmentRow, RelationsRow, CancellationToken)
  nameWithType: RecurrenceManager.OnLinksAddedAsync(Appointment, ActivityLinksHelper, AppointmentRow, RelationsRow, CancellationToken)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Entities.ActivityLinksHelper, SuperOffice.CRM.Rows.AppointmentRow, SuperOffice.CRM.Rows.RelationsRow, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task OnLinksAddedAsync(Appointment app, ActivityLinksHelper linksHelper, AppointmentRow parent, RelationsRow item, CancellationToken cancellationToken = default)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: linksHelper
      type: SuperOffice.CRM.Entities.ActivityLinksHelper
    - id: parent
      type: SuperOffice.CRM.Rows.AppointmentRow
    - id: item
      type: SuperOffice.CRM.Rows.RelationsRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OnLinksAddedAsync(app As Appointment, linksHelper As ActivityLinksHelper, parent As AppointmentRow, item As RelationsRow, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  id: OnLinksRemovedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnLinksRemovedAsync(Appointment, ActivityLinksHelper, AppointmentRow, RelationsRow, CancellationToken)
  nameWithType: RecurrenceManager.OnLinksRemovedAsync(Appointment, ActivityLinksHelper, AppointmentRow, RelationsRow, CancellationToken)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Entities.ActivityLinksHelper, SuperOffice.CRM.Rows.AppointmentRow, SuperOffice.CRM.Rows.RelationsRow, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task OnLinksRemovedAsync(Appointment app, ActivityLinksHelper linksHelper, AppointmentRow parent, RelationsRow item, CancellationToken cancellationToken = default)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: linksHelper
      type: SuperOffice.CRM.Entities.ActivityLinksHelper
    - id: parent
      type: SuperOffice.CRM.Rows.AppointmentRow
    - id: item
      type: SuperOffice.CRM.Rows.RelationsRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OnLinksRemovedAsync(app As Appointment, linksHelper As ActivityLinksHelper, parent As AppointmentRow, item As RelationsRow, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  id: OnLinksEditedAsync(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Entities.ActivityLinksHelper,SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Rows.RelationsRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnLinksEditedAsync(Appointment, ActivityLinksHelper, AppointmentRow, RelationsRow, CancellationToken)
  nameWithType: RecurrenceManager.OnLinksEditedAsync(Appointment, ActivityLinksHelper, AppointmentRow, RelationsRow, CancellationToken)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Entities.ActivityLinksHelper, SuperOffice.CRM.Rows.AppointmentRow, SuperOffice.CRM.Rows.RelationsRow, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task<RelationsRow> OnLinksEditedAsync(Appointment app, ActivityLinksHelper linksHelper, AppointmentRow parent, RelationsRow item, CancellationToken cancellationToken = default)
    parameters:
    - id: app
      type: SuperOffice.CRM.Entities.Appointment
    - id: linksHelper
      type: SuperOffice.CRM.Entities.ActivityLinksHelper
    - id: parent
      type: SuperOffice.CRM.Rows.AppointmentRow
    - id: item
      type: SuperOffice.CRM.Rows.RelationsRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.RelationsRow}
    content.vb: Public Function OnLinksEditedAsync(app As Appointment, linksHelper As ActivityLinksHelper, parent As AppointmentRow, item As RelationsRow, cancellationToken As CancellationToken = Nothing) As Task(Of RelationsRow)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
  id: UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: UpdateAppointmentWithDate(Appointment, RecurrenceDate)
  nameWithType: RecurrenceManager.UpdateAppointmentWithDate(Appointment, RecurrenceDate)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Services.RecurrenceDate)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Apply new date information on an appointment based on the provided date information.
  example: []
  syntax:
    content: public static void UpdateAppointmentWithDate(Appointment appointment, RecurrenceDate date)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: Appointment record to modify.
    - id: date
      type: SuperOffice.CRM.Services.RecurrenceDate
      description: Date information to apply on the appointment record.
    content.vb: Public Shared Sub UpdateAppointmentWithDate(appointment As Appointment, [date] As RecurrenceDate)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Entities.Appointment)
  id: GetRecurrenceDate(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetRecurrenceDate(Appointment)
  nameWithType: RecurrenceManager.GetRecurrenceDate(Appointment)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static RecurrenceDate GetRecurrenceDate(Appointment appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
    return:
      type: SuperOffice.CRM.Services.RecurrenceDate
    content.vb: Public Shared Function GetRecurrenceDate(appointment As Appointment) As RecurrenceDate
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Rows.AppointmentRow)
  id: GetRecurrenceDate(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetRecurrenceDate(AppointmentRow)
  nameWithType: RecurrenceManager.GetRecurrenceDate(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static RecurrenceDate GetRecurrenceDate(AppointmentRow appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Rows.AppointmentRow
    return:
      type: SuperOffice.CRM.Services.RecurrenceDate
    content.vb: Public Shared Function GetRecurrenceDate(appointment As AppointmentRow) As RecurrenceDate
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(System.DateTime)
  id: GetRecurrenceDate(System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetRecurrenceDate(DateTime)
  nameWithType: RecurrenceManager.GetRecurrenceDate(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static RecurrenceDate GetRecurrenceDate(DateTime date)
    parameters:
    - id: date
      type: System.DateTime
    return:
      type: SuperOffice.CRM.Services.RecurrenceDate
    content.vb: Public Shared Function GetRecurrenceDate([date] As Date) As RecurrenceDate
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate*
  nameWithType.vb: RecurrenceManager.GetRecurrenceDate(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate(Date)
  name.vb: GetRecurrenceDate(Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave(System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave(System.Boolean,System.Boolean)
  id: PrepareForSave(System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: PrepareForSave(bool, bool)
  nameWithType: RecurrenceManager.PrepareForSave(bool, bool)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave(bool, bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public void PrepareForSave(bool isRecurring, bool updateStartDate)
    parameters:
    - id: isRecurring
      type: System.Boolean
    - id: updateStartDate
      type: System.Boolean
    content.vb: Public Sub PrepareForSave(isRecurring As Boolean, updateStartDate As Boolean)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave*
  nameWithType.vb: RecurrenceManager.PrepareForSave(Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave(Boolean, Boolean)
  name.vb: PrepareForSave(Boolean, Boolean)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync(System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync(System.Boolean,System.Boolean)
  id: OnSavedAsync(System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: OnSavedAsync(bool, bool)
  nameWithType: RecurrenceManager.OnSavedAsync(bool, bool)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync(bool, bool)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task OnSavedAsync(bool bSucceeded, bool isRecurring)
    parameters:
    - id: bSucceeded
      type: System.Boolean
    - id: isRecurring
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function OnSavedAsync(bSucceeded As Boolean, isRecurring As Boolean) As Task
  overload: SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync*
  nameWithType.vb: RecurrenceManager.OnSavedAsync(Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync(Boolean, Boolean)
  name.vb: OnSavedAsync(Boolean, Boolean)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord(SuperOffice.CRM.Services.RecurrenceInfo,SuperOffice.CRM.Rows.RecurrenceRuleRecordData,System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord(SuperOffice.CRM.Services.RecurrenceInfo,SuperOffice.CRM.Rows.RecurrenceRuleRecordData,System.DateTime)
  id: UpdateFromRecord(SuperOffice.CRM.Services.RecurrenceInfo,SuperOffice.CRM.Rows.RecurrenceRuleRecordData,System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: UpdateFromRecord(RecurrenceInfo, RecurrenceRuleRecordData, DateTime)
  nameWithType: RecurrenceManager.UpdateFromRecord(RecurrenceInfo, RecurrenceRuleRecordData, DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord(SuperOffice.CRM.Services.RecurrenceInfo, SuperOffice.CRM.Rows.RecurrenceRuleRecordData, System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static void UpdateFromRecord(RecurrenceInfo recurrenceInfo, RecurrenceRuleRecordData ruleRow, DateTime doBy)
    parameters:
    - id: recurrenceInfo
      type: SuperOffice.CRM.Services.RecurrenceInfo
    - id: ruleRow
      type: SuperOffice.CRM.Rows.RecurrenceRuleRecordData
    - id: doBy
      type: System.DateTime
    content.vb: Public Shared Sub UpdateFromRecord(recurrenceInfo As RecurrenceInfo, ruleRow As RecurrenceRuleRecordData, doBy As Date)
  overload: SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord*
  nameWithType.vb: RecurrenceManager.UpdateFromRecord(RecurrenceInfo, RecurrenceRuleRecordData, Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord(SuperOffice.CRM.Services.RecurrenceInfo, SuperOffice.CRM.Rows.RecurrenceRuleRecordData, Date)
  name.vb: UpdateFromRecord(RecurrenceInfo, RecurrenceRuleRecordData, Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Entities.Appointment)
  id: GetRecurrenceInfo(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetRecurrenceInfo(Appointment)
  nameWithType: RecurrenceManager.GetRecurrenceInfo(Appointment)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get RecurrenceInfo from an appointment.
  example: []
  syntax:
    content: public static RecurrenceInfo GetRecurrenceInfo(Appointment bookingMaster)
    parameters:
    - id: bookingMaster
      type: SuperOffice.CRM.Entities.Appointment
      description: ''
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
      description: ''
    content.vb: Public Shared Function GetRecurrenceInfo(bookingMaster As Appointment) As RecurrenceInfo
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Rows.RecurrenceRuleRow,System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Rows.RecurrenceRuleRow,System.DateTime)
  id: GetRecurrenceInfo(SuperOffice.CRM.Rows.RecurrenceRuleRow,System.DateTime)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: GetRecurrenceInfo(RecurrenceRuleRow, DateTime)
  nameWithType: RecurrenceManager.GetRecurrenceInfo(RecurrenceRuleRow, DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Rows.RecurrenceRuleRow, System.DateTime)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get a recurrence info from a recurrence rule row in the database with corresponding doby
  example: []
  syntax:
    content: public static RecurrenceInfo GetRecurrenceInfo(RecurrenceRuleRow ruleRow, DateTime doBy)
    parameters:
    - id: ruleRow
      type: SuperOffice.CRM.Rows.RecurrenceRuleRow
      description: ''
    - id: doBy
      type: System.DateTime
      description: ''
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
      description: ''
    content.vb: Public Shared Function GetRecurrenceInfo(ruleRow As RecurrenceRuleRow, doBy As Date) As RecurrenceInfo
  overload: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo*
  nameWithType.vb: RecurrenceManager.GetRecurrenceInfo(RecurrenceRuleRow, Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo(SuperOffice.CRM.Rows.RecurrenceRuleRow, Date)
  name.vb: GetRecurrenceInfo(RecurrenceRuleRow, Date)
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger(SuperOffice.Data.Weekday)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger(SuperOffice.Data.Weekday)
  id: ConvertWeekdayToInteger(SuperOffice.Data.Weekday)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: ConvertWeekdayToInteger(Weekday)
  nameWithType: RecurrenceManager.ConvertWeekdayToInteger(Weekday)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger(SuperOffice.Data.Weekday)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Converts the Weekday enum to its corresponding integer representation.
  example: []
  syntax:
    content: public static int ConvertWeekdayToInteger(Weekday weekday)
    parameters:
    - id: weekday
      type: SuperOffice.Data.Weekday
      description: The Weekday enum value to convert.
    return:
      type: System.Int32
      description: >-
        Returns an integer from 1-7 representing Monday-Sunday respectively. 

        If the input does not match any known Weekday, it returns 0.
    content.vb: Public Shared Function ConvertWeekdayToInteger(weekday As Weekday) As Integer
  overload: SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday(System.DayOfWeek)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday(System.DayOfWeek)
  id: ConvertDayOfWeekToWeekday(System.DayOfWeek)
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: ConvertDayOfWeekToWeekday(DayOfWeek)
  nameWithType: RecurrenceManager.ConvertDayOfWeekToWeekday(DayOfWeek)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday(System.DayOfWeek)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Converts the given integer to the corresponding Weekday enum (bit flag).
  example: []
  syntax:
    content: public static Weekday ConvertDayOfWeekToWeekday(DayOfWeek day)
    parameters:
    - id: day
      type: System.DayOfWeek
    return:
      type: SuperOffice.Data.Weekday
      description: >-
        Returns an integer from 1-7 representing Monday-Sunday respectively. 

        If the input does not match any known Weekday, it returns 0.
    content.vb: Public Shared Function ConvertDayOfWeekToWeekday(day As DayOfWeek) As Weekday
  overload: SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  commentId: P:SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  id: RecurrenceInfo
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: RecurrenceInfo
  nameWithType: RecurrenceManager.RecurrenceInfo
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  type: Property
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get or set the current recurrence pattern.
  example: []
  syntax:
    content: public RecurrenceInfo RecurrenceInfo { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
    content.vb: Public Property RecurrenceInfo As RecurrenceInfo
  overload: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.Dates
  commentId: P:SuperOffice.CRM.Entities.RecurrenceManager.Dates
  id: Dates
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: Dates
  nameWithType: RecurrenceManager.Dates
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.Dates
  type: Property
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get or set the dates of the recurring appointments.
  example: []
  syntax:
    content: public RecurrenceDate[] Dates { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceDate[]
    content.vb: Public Property Dates As RecurrenceDate()
  overload: SuperOffice.CRM.Entities.RecurrenceManager.Dates*
- uid: SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged
  commentId: P:SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged
  id: IsRecurrencePatternChanged
  parent: SuperOffice.CRM.Entities.RecurrenceManager
  langs:
  - csharp
  - vb
  name: IsRecurrencePatternChanged
  nameWithType: RecurrenceManager.IsRecurrencePatternChanged
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged
  type: Property
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: >-
    Get if the recurrence pattern has been changed from the currently saved pattern.  

    This value will allways be false if the recurrence pattern has not yet been 

    insterted in the database.
  example: []
  syntax:
    content: public bool IsRecurrencePatternChanged { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRecurrencePatternChanged As Boolean
  overload: SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged*
references:
- uid: SuperOffice.CRM.Entities.AppointmentMatrix
  commentId: T:SuperOffice.CRM.Entities.AppointmentMatrix
  isExternal: true
  href: SuperOffice.CRM.Entities.AppointmentMatrix.html
  name: AppointmentMatrix
  nameWithType: AppointmentMatrix
  fullName: SuperOffice.CRM.Entities.AppointmentMatrix
- uid: SuperOffice.CRM.Rows.RecurrenceRuleRow
  commentId: T:SuperOffice.CRM.Rows.RecurrenceRuleRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.RecurrenceRuleRow.html
  name: RecurrenceRuleRow
  nameWithType: RecurrenceRuleRow
  fullName: SuperOffice.CRM.Rows.RecurrenceRuleRow
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<RecurrenceManager, To>(RecurrenceManager)
  nameWithType: EnumUtil.MapEnums<RecurrenceManager, To>(RecurrenceManager)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.RecurrenceManager, To>(SuperOffice.CRM.Entities.RecurrenceManager)
  nameWithType.vb: EnumUtil.MapEnums(Of RecurrenceManager, To)(RecurrenceManager)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.RecurrenceManager, To)(SuperOffice.CRM.Entities.RecurrenceManager)
  name.vb: MapEnums(Of RecurrenceManager, To)(RecurrenceManager)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Entities.RecurrenceManager)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Entities.RecurrenceManager)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<RecurrenceManager, To>(RecurrenceManager)
  nameWithType: Converters.MapEnums<RecurrenceManager, To>(RecurrenceManager)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.RecurrenceManager, To>(SuperOffice.CRM.Entities.RecurrenceManager)
  nameWithType.vb: Converters.MapEnums(Of RecurrenceManager, To)(RecurrenceManager)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.RecurrenceManager, To)(SuperOffice.CRM.Entities.RecurrenceManager)
  name.vb: MapEnums(Of RecurrenceManager, To)(RecurrenceManager)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Entities.RecurrenceManager)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Entities.RecurrenceManager)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Entities.RecurrenceManager)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<RecurrenceManager>(RecurrenceManager, RecurrenceManager)
  nameWithType: ObjectExtensions.AssignByReflection<RecurrenceManager>(RecurrenceManager, RecurrenceManager)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Entities.RecurrenceManager>(SuperOffice.CRM.Entities.RecurrenceManager, SuperOffice.CRM.Entities.RecurrenceManager)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RecurrenceManager)(RecurrenceManager, RecurrenceManager)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Entities.RecurrenceManager)(SuperOffice.CRM.Entities.RecurrenceManager, SuperOffice.CRM.Entities.RecurrenceManager)
  name.vb: AssignByReflection(Of RecurrenceManager)(RecurrenceManager, RecurrenceManager)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Entities.RecurrenceManager,SuperOffice.CRM.Entities.RecurrenceManager)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Entities.RecurrenceManager,SuperOffice.CRM.Entities.RecurrenceManager)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<RecurrenceManager>(RecurrenceManager)
  nameWithType: ObjectExtensions.GraphCopy<RecurrenceManager>(RecurrenceManager)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Entities.RecurrenceManager>(SuperOffice.CRM.Entities.RecurrenceManager)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RecurrenceManager)(RecurrenceManager)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Entities.RecurrenceManager)(SuperOffice.CRM.Entities.RecurrenceManager)
  name.vb: GraphCopy(Of RecurrenceManager)(RecurrenceManager)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.CRM.Entities.RecurrenceManager)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.CRM.Entities.RecurrenceManager)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.RecurrenceManager
    name: RecurrenceManager
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html
  - name: )
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.CRM.Entities.RecurrenceManager.#ctor*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.#ctor
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager__ctor_SuperOffice_CRM_Entities_Appointment_System_Collections_Generic_IEnumerable_SuperOffice_CRM_Entities_Appointment__
  name: RecurrenceManager
  nameWithType: RecurrenceManager.RecurrenceManager
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceManager
  nameWithType.vb: RecurrenceManager.New
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.New
  name.vb: New
- uid: SuperOffice.CRM.Entities.Appointment
  commentId: T:SuperOffice.CRM.Entities.Appointment
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.Appointment.html
  name: Appointment
  nameWithType: Appointment
  fullName: SuperOffice.CRM.Entities.Appointment
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Entities.Appointment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Appointment>
  nameWithType: IEnumerable<Appointment>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Entities.Appointment>
  nameWithType.vb: IEnumerable(Of Appointment)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Entities.Appointment)
  name.vb: IEnumerable(Of Appointment)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.CRM.Entities.Appointment
    name: Appointment
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.Appointment
    name: Appointment
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.CRM.Services.RecurrenceInfo
  commentId: T:SuperOffice.CRM.Services.RecurrenceInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html
  name: RecurrenceInfo
  nameWithType: RecurrenceInfo
  fullName: SuperOffice.CRM.Services.RecurrenceInfo
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetDefaultRecurrenceInfo
  name: GetDefaultRecurrenceInfo
  nameWithType: RecurrenceManager.GetDefaultRecurrenceInfo
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDefaultRecurrenceInfo
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_UpdateConflictsAsync_System_Int32_System_Int32_System_TimeSpan_System_TimeSpan_System_Threading_CancellationToken_SuperOffice_CRM_Services_ParticipantInfo___
  name: UpdateConflictsAsync
  nameWithType: RecurrenceManager.UpdateConflictsAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateConflictsAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: SuperOffice.CRM.Services.ParticipantInfo[]
  isExternal: true
  name: ParticipantInfo[]
  nameWithType: ParticipantInfo[]
  fullName: SuperOffice.CRM.Services.ParticipantInfo[]
  nameWithType.vb: ParticipantInfo()
  fullName.vb: SuperOffice.CRM.Services.ParticipantInfo()
  name.vb: ParticipantInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ParticipantInfo
    name: ParticipantInfo
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ParticipantInfo
    name: ParticipantInfo
    isExternal: true
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_BreakRecurrenceAsync_System_Threading_CancellationToken_
  name: BreakRecurrenceAsync
  nameWithType: RecurrenceManager.BreakRecurrenceAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.BreakRecurrenceAsync
- uid: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  commentId: P:SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_RecurrenceInfo
  name: RecurrenceInfo
  nameWithType: RecurrenceManager.RecurrenceInfo
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
- uid: SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_RecalculateDays
  name: RecalculateDays
  nameWithType: RecurrenceManager.RecalculateDays
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecalculateDays
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetEstimatedCount
  name: GetEstimatedCount
  nameWithType: RecurrenceManager.GetEstimatedCount
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetEstimatedCount
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetFirstDate_System_DateTime_
  name: GetFirstDate
  nameWithType: RecurrenceManager.GetFirstDate
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetFirstDate_System_DateTime_
  name: GetFirstDate(DateTime)
  nameWithType: RecurrenceManager.GetFirstDate(DateTime)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
  nameWithType.vb: RecurrenceManager.GetFirstDate(Date)
  fullName.vb: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(Date)
  name.vb: GetFirstDate(Date)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
    name: GetFirstDate
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetFirstDate_System_DateTime_
  - name: (
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.RecurrenceManager.GetFirstDate(System.DateTime)
    name: GetFirstDate
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetFirstDate_System_DateTime_
  - name: (
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetNextDate_System_DateTime_
  name: GetNextDate
  nameWithType: RecurrenceManager.GetNextDate
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetNextDate
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetDaysToMatchInPattern_System_DateTime_
  name: GetDaysToMatchInPattern
  nameWithType: RecurrenceManager.GetDaysToMatchInPattern
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDaysToMatchInPattern
- uid: System.DayOfWeek
  commentId: T:System.DayOfWeek
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.dayofweek
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: SuperOffice.Data.Weekday
  commentId: T:SuperOffice.Data.Weekday
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.Weekday.html
  name: Weekday
  nameWithType: Weekday
  fullName: SuperOffice.Data.Weekday
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetDayInMonth_System_Int32_System_DateTime_
  name: GetDayInMonth
  nameWithType: RecurrenceManager.GetDayInMonth
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetDayInMonth
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetWeekDayInMonth_SuperOffice_Data_Weekday_System_Int32_System_DateTime_
  name: GetWeekDayInMonth
  nameWithType: RecurrenceManager.GetWeekDayInMonth
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetWeekDayInMonth
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_ConvertFromTimeZone_System_DateTime_System_Int32_
  name: ConvertFromTimeZone
  nameWithType: RecurrenceManager.ConvertFromTimeZone
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ConvertFromTimeZone
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
  commentId: M:SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_UpdateAppointmentWithDate_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Services_RecurrenceDate_
  name: UpdateAppointmentWithDate(Appointment, RecurrenceDate)
  nameWithType: RecurrenceManager.UpdateAppointmentWithDate(Appointment, RecurrenceDate)
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment, SuperOffice.CRM.Services.RecurrenceDate)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
    name: UpdateAppointmentWithDate
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_UpdateAppointmentWithDate_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Services_RecurrenceDate_
  - name: (
  - uid: SuperOffice.CRM.Entities.Appointment
    name: Appointment
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate(SuperOffice.CRM.Entities.Appointment,SuperOffice.CRM.Services.RecurrenceDate)
    name: UpdateAppointmentWithDate
    isExternal: true
    href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_UpdateAppointmentWithDate_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Services_RecurrenceDate_
  - name: (
  - uid: SuperOffice.CRM.Entities.Appointment
    name: Appointment
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_CreateAppointmentForDateAsync_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Services_RecurrenceDate_System_Threading_CancellationToken_
  name: CreateAppointmentForDateAsync
  nameWithType: RecurrenceManager.CreateAppointmentForDateAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.CreateAppointmentForDateAsync
- uid: SuperOffice.CRM.Services.RecurrenceDate
  commentId: T:SuperOffice.CRM.Services.RecurrenceDate
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceDate.html
  name: RecurrenceDate
  nameWithType: RecurrenceDate
  fullName: SuperOffice.CRM.Services.RecurrenceDate
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.Appointment}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Entities.Appointment}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Appointment>
  nameWithType: Task<Appointment>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Entities.Appointment>
  nameWithType.vb: Task(Of Appointment)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Entities.Appointment)
  name.vb: Task(Of Appointment)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Entities.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Entities.Appointment.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Entities.Appointment.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_ApplyUdefValuesAsync_SuperOffice_CRM_Entities_EntityUdefHelper_SuperOffice_CRM_Entities_EntityUdefHelper_
  name: ApplyUdefValuesAsync
  nameWithType: RecurrenceManager.ApplyUdefValuesAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ApplyUdefValuesAsync
- uid: SuperOffice.CRM.Entities.EntityUdefHelper
  commentId: T:SuperOffice.CRM.Entities.EntityUdefHelper
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.EntityUdefHelper.html
  name: EntityUdefHelper
  nameWithType: EntityUdefHelper
  fullName: SuperOffice.CRM.Entities.EntityUdefHelper
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnAppointmentRowValueChanged_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Rows_TableRowBase_SuperOffice_Data_SQL_FieldInfo_System_Object_System_Object_System_Object_
  name: OnAppointmentRowValueChanged
  nameWithType: RecurrenceManager.OnAppointmentRowValueChanged
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnAppointmentRowValueChanged
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.TableRowBase.html
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnTextChange_SuperOffice_CRM_Entities_Appointment_System_String_System_String_System_String_
  name: OnTextChange
  nameWithType: RecurrenceManager.OnTextChange
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnTextChange
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnAgendaTextChange_SuperOffice_CRM_Entities_Appointment_System_String_System_String_System_String_
  name: OnAgendaTextChange
  nameWithType: RecurrenceManager.OnAgendaTextChange
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaTextChange
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnAgendaHTMLTextChange_SuperOffice_CRM_Entities_Appointment_System_String_System_String_System_String_
  name: OnAgendaHTMLTextChange
  nameWithType: RecurrenceManager.OnAgendaHTMLTextChange
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnAgendaHTMLTextChange
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnInternalNotesTextChange_SuperOffice_CRM_Entities_Appointment_System_String_System_String_System_String_
  name: OnInternalNotesTextChange
  nameWithType: RecurrenceManager.OnInternalNotesTextChange
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesTextChange
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnInternalNotesHtmlTextChange_SuperOffice_CRM_Entities_Appointment_System_String_System_String_System_String_
  name: OnInternalNotesHtmlTextChange
  nameWithType: RecurrenceManager.OnInternalNotesHtmlTextChange
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnInternalNotesHtmlTextChange
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnUdefValueChangeAsync_SuperOffice_CRM_Entities_Appointment_System_String_System_Object_System_Object_System_Threading_CancellationToken_
  name: OnUdefValueChangeAsync
  nameWithType: RecurrenceManager.OnUdefValueChangeAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnUdefValueChangeAsync
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnLinksAddedAsync_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Entities_ActivityLinksHelper_SuperOffice_CRM_Rows_AppointmentRow_SuperOffice_CRM_Rows_RelationsRow_System_Threading_CancellationToken_
  name: OnLinksAddedAsync
  nameWithType: RecurrenceManager.OnLinksAddedAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksAddedAsync
- uid: SuperOffice.CRM.Entities.ActivityLinksHelper
  commentId: T:SuperOffice.CRM.Entities.ActivityLinksHelper
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.ActivityLinksHelper.html
  name: ActivityLinksHelper
  nameWithType: ActivityLinksHelper
  fullName: SuperOffice.CRM.Entities.ActivityLinksHelper
- uid: SuperOffice.CRM.Rows.AppointmentRow
  commentId: T:SuperOffice.CRM.Rows.AppointmentRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.AppointmentRow.html
  name: AppointmentRow
  nameWithType: AppointmentRow
  fullName: SuperOffice.CRM.Rows.AppointmentRow
- uid: SuperOffice.CRM.Rows.RelationsRow
  commentId: T:SuperOffice.CRM.Rows.RelationsRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.RelationsRow.html
  name: RelationsRow
  nameWithType: RelationsRow
  fullName: SuperOffice.CRM.Rows.RelationsRow
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnLinksRemovedAsync_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Entities_ActivityLinksHelper_SuperOffice_CRM_Rows_AppointmentRow_SuperOffice_CRM_Rows_RelationsRow_System_Threading_CancellationToken_
  name: OnLinksRemovedAsync
  nameWithType: RecurrenceManager.OnLinksRemovedAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksRemovedAsync
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnLinksEditedAsync_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Entities_ActivityLinksHelper_SuperOffice_CRM_Rows_AppointmentRow_SuperOffice_CRM_Rows_RelationsRow_System_Threading_CancellationToken_
  name: OnLinksEditedAsync
  nameWithType: RecurrenceManager.OnLinksEditedAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnLinksEditedAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.RelationsRow}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.RelationsRow}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<RelationsRow>
  nameWithType: Task<RelationsRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.RelationsRow>
  nameWithType.vb: Task(Of RelationsRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.RelationsRow)
  name.vb: Task(Of RelationsRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Rows.RelationsRow
    name: RelationsRow
    isExternal: true
    href: SuperOffice.CRM.Rows.RelationsRow.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Rows.RelationsRow
    name: RelationsRow
    isExternal: true
    href: SuperOffice.CRM.Rows.RelationsRow.html
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_UpdateAppointmentWithDate_SuperOffice_CRM_Entities_Appointment_SuperOffice_CRM_Services_RecurrenceDate_
  name: UpdateAppointmentWithDate
  nameWithType: RecurrenceManager.UpdateAppointmentWithDate
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateAppointmentWithDate
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetRecurrenceDate_SuperOffice_CRM_Entities_Appointment_
  name: GetRecurrenceDate
  nameWithType: RecurrenceManager.GetRecurrenceDate
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceDate
- uid: SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_PrepareForSave_System_Boolean_System_Boolean_
  name: PrepareForSave
  nameWithType: RecurrenceManager.PrepareForSave
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.PrepareForSave
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_OnSavedAsync_System_Boolean_System_Boolean_
  name: OnSavedAsync
  nameWithType: RecurrenceManager.OnSavedAsync
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.OnSavedAsync
- uid: SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_UpdateFromRecord_SuperOffice_CRM_Services_RecurrenceInfo_SuperOffice_CRM_Rows_RecurrenceRuleRecordData_System_DateTime_
  name: UpdateFromRecord
  nameWithType: RecurrenceManager.UpdateFromRecord
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.UpdateFromRecord
- uid: SuperOffice.CRM.Rows.RecurrenceRuleRecordData
  commentId: T:SuperOffice.CRM.Rows.RecurrenceRuleRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.RecurrenceRuleRecordData.html
  name: RecurrenceRuleRecordData
  nameWithType: RecurrenceRuleRecordData
  fullName: SuperOffice.CRM.Rows.RecurrenceRuleRecordData
- uid: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_GetRecurrenceInfo_SuperOffice_CRM_Entities_Appointment_
  name: GetRecurrenceInfo
  nameWithType: RecurrenceManager.GetRecurrenceInfo
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.GetRecurrenceInfo
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_ConvertWeekdayToInteger_SuperOffice_Data_Weekday_
  name: ConvertWeekdayToInteger
  nameWithType: RecurrenceManager.ConvertWeekdayToInteger
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ConvertWeekdayToInteger
- uid: SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_ConvertDayOfWeekToWeekday_System_DayOfWeek_
  name: ConvertDayOfWeekToWeekday
  nameWithType: RecurrenceManager.ConvertDayOfWeekToWeekday
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.ConvertDayOfWeekToWeekday
- uid: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_RecurrenceInfo
  name: RecurrenceInfo
  nameWithType: RecurrenceManager.RecurrenceInfo
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.RecurrenceInfo
- uid: SuperOffice.CRM.Entities.RecurrenceManager.Dates*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.Dates
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_Dates
  name: Dates
  nameWithType: RecurrenceManager.Dates
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.Dates
- uid: SuperOffice.CRM.Services.RecurrenceDate[]
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceDate.html
  name: RecurrenceDate[]
  nameWithType: RecurrenceDate[]
  fullName: SuperOffice.CRM.Services.RecurrenceDate[]
  nameWithType.vb: RecurrenceDate()
  fullName.vb: SuperOffice.CRM.Services.RecurrenceDate()
  name.vb: RecurrenceDate()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceDate.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceDate.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged*
  commentId: Overload:SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged
  isExternal: true
  href: SuperOffice.CRM.Entities.RecurrenceManager.html#SuperOffice_CRM_Entities_RecurrenceManager_IsRecurrencePatternChanged
  name: IsRecurrencePatternChanged
  nameWithType: RecurrenceManager.IsRecurrencePatternChanged
  fullName: SuperOffice.CRM.Entities.RecurrenceManager.IsRecurrencePatternChanged
