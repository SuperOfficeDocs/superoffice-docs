### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  commentId: T:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  id: TicketStatusRegistryHelper
  parent: SuperOffice.CRM.Ticket
  children:
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.#ctor
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry(SuperOffice.Data.TicketBaseStatus,System.Int32)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId(SuperOffice.Data.TicketBaseStatus)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow(SuperOffice.Data.TicketBaseStatus)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault(System.Int32)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry(System.Int32)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry(System.Boolean,System.Int32)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue(System.Int32)
  langs:
  - csharp
  - vb
  name: TicketStatusRegistryHelper
  nameWithType: TicketStatusRegistryHelper
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: 'public class TicketStatusRegistryHelper : Object'
    content.vb: >-
      Public Class TicketStatusRegistryHelper
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.#ctor
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: TicketStatusRegistryHelper()
  nameWithType: TicketStatusRegistryHelper.TicketStatusRegistryHelper()
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.TicketStatusRegistryHelper()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public TicketStatusRegistryHelper()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault(System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault(System.Int32)
  id: IsDefault(System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: IsDefault(Int32)
  nameWithType: TicketStatusRegistryHelper.IsDefault(Int32)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public bool IsDefault(int ticketStatusId)
    parameters:
    - id: ticketStatusId
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsDefault(ticketStatusId As Integer) As Boolean
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue(System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue(System.Int32)
  id: UsedInQueue(System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: UsedInQueue(Int32)
  nameWithType: TicketStatusRegistryHelper.UsedInQueue(Int32)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public bool UsedInQueue(int ticketStatusId)
    parameters:
    - id: ticketStatusId
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function UsedInQueue(ticketStatusId As Integer) As Boolean
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry(System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry(System.Int32)
  id: RemoveFromUsedInQueueRegistry(System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: RemoveFromUsedInQueueRegistry(Int32)
  nameWithType: TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry(Int32)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public void RemoveFromUsedInQueueRegistry(int ticketStatusId)
    parameters:
    - id: ticketStatusId
      type: System.Int32
    content.vb: Public Sub RemoveFromUsedInQueueRegistry(ticketStatusId As Integer)
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId(SuperOffice.Data.TicketBaseStatus)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId(SuperOffice.Data.TicketBaseStatus)
  id: GetDefaultTicketStatusId(SuperOffice.Data.TicketBaseStatus)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: GetDefaultTicketStatusId(TicketBaseStatus)
  nameWithType: TicketStatusRegistryHelper.GetDefaultTicketStatusId(TicketBaseStatus)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId(SuperOffice.Data.TicketBaseStatus)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public int GetDefaultTicketStatusId(TicketBaseStatus status)
    parameters:
    - id: status
      type: SuperOffice.Data.TicketBaseStatus
    return:
      type: System.Int32
    content.vb: Public Function GetDefaultTicketStatusId(status As TicketBaseStatus) As Integer
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry(SuperOffice.Data.TicketBaseStatus,System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry(SuperOffice.Data.TicketBaseStatus,System.Int32)
  id: AddToDefaultTicketStatusRegistry(SuperOffice.Data.TicketBaseStatus,System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: AddToDefaultTicketStatusRegistry(TicketBaseStatus, Int32)
  nameWithType: TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry(TicketBaseStatus, Int32)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry(SuperOffice.Data.TicketBaseStatus, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public void AddToDefaultTicketStatusRegistry(TicketBaseStatus status, int ticketStatusId)
    parameters:
    - id: status
      type: SuperOffice.Data.TicketBaseStatus
    - id: ticketStatusId
      type: System.Int32
    content.vb: Public Sub AddToDefaultTicketStatusRegistry(status As TicketBaseStatus, ticketStatusId As Integer)
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry(System.Boolean,System.Int32)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry(System.Boolean,System.Int32)
  id: UpdateUsedInQueueRegistry(System.Boolean,System.Int32)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: UpdateUsedInQueueRegistry(Boolean, Int32)
  nameWithType: TicketStatusRegistryHelper.UpdateUsedInQueueRegistry(Boolean, Int32)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry(System.Boolean, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public void UpdateUsedInQueueRegistry(bool usedInQueue, int ticketStatusId)
    parameters:
    - id: usedInQueue
      type: System.Boolean
    - id: ticketStatusId
      type: System.Int32
    content.vb: Public Sub UpdateUsedInQueueRegistry(usedInQueue As Boolean, ticketStatusId As Integer)
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow(SuperOffice.Data.TicketBaseStatus)
  commentId: M:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow(SuperOffice.Data.TicketBaseStatus)
  id: GetDefaultTicketStatusRegistryRow(SuperOffice.Data.TicketBaseStatus)
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: GetDefaultTicketStatusRegistryRow(TicketBaseStatus)
  nameWithType: TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow(TicketBaseStatus)
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow(SuperOffice.Data.TicketBaseStatus)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public static RegistryRow GetDefaultTicketStatusRegistryRow(TicketBaseStatus ticketStatus)
    parameters:
    - id: ticketStatus
      type: SuperOffice.Data.TicketBaseStatus
    return:
      type: SuperOffice.CRM.Rows.RegistryRow
    content.vb: Public Shared Function GetDefaultTicketStatusRegistryRow(ticketStatus As TicketBaseStatus) As RegistryRow
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  commentId: P:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  id: StatusesWithUsedInQueueFlag
  parent: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
  langs:
  - csharp
  - vb
  name: StatusesWithUsedInQueueFlag
  nameWithType: TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public List<int> StatusesWithUsedInQueueFlag { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public ReadOnly Property StatusesWithUsedInQueueFlag As List(Of Integer)
  overload: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Ticket
  commentId: N:SuperOffice.CRM.Ticket
  isExternal: true
  name: SuperOffice.CRM.Ticket
  nameWithType: SuperOffice.CRM.Ticket
  fullName: SuperOffice.CRM.Ticket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketStatusRegistryHelper, To>()
  nameWithType: EnumUtil.MapEnums<TicketStatusRegistryHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketStatusRegistryHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To)()
  name.vb: MapEnums(Of TicketStatusRegistryHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketStatusRegistryHelper, To>
    nameWithType: EnumUtil.MapEnums<TicketStatusRegistryHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketStatusRegistryHelper, To)
    nameWithType: EnumUtil.MapEnums(Of TicketStatusRegistryHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TicketStatusRegistryHelper>(TicketStatusRegistryHelper)
  nameWithType: ObjectExtensions.AssignByReflection<TicketStatusRegistryHelper>(TicketStatusRegistryHelper)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper>(SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TicketStatusRegistryHelper)(TicketStatusRegistryHelper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)(SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)
  name.vb: AssignByReflection(Of TicketStatusRegistryHelper)(TicketStatusRegistryHelper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TicketStatusRegistryHelper>
    nameWithType: ObjectExtensions.AssignByReflection<TicketStatusRegistryHelper>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
    name: TicketStatusRegistryHelper
    nameWithType: TicketStatusRegistryHelper
    fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TicketStatusRegistryHelper)
    nameWithType: ObjectExtensions.AssignByReflection(Of TicketStatusRegistryHelper)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
    name: TicketStatusRegistryHelper
    nameWithType: TicketStatusRegistryHelper
    fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TicketStatusRegistryHelper>()
  nameWithType: ObjectExtensions.GraphCopy<TicketStatusRegistryHelper>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TicketStatusRegistryHelper)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)()
  name.vb: GraphCopy(Of TicketStatusRegistryHelper)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TicketStatusRegistryHelper>
    nameWithType: ObjectExtensions.GraphCopy<TicketStatusRegistryHelper>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TicketStatusRegistryHelper)
    nameWithType: ObjectExtensions.GraphCopy(Of TicketStatusRegistryHelper)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketStatusRegistryHelper, To>()
  nameWithType: Converters.MapEnums<TicketStatusRegistryHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketStatusRegistryHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To)()
  name.vb: MapEnums(Of TicketStatusRegistryHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketStatusRegistryHelper, To>
    nameWithType: Converters.MapEnums<TicketStatusRegistryHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketStatusRegistryHelper, To)
    nameWithType: Converters.MapEnums(Of TicketStatusRegistryHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.TicketStatusRegistryHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.#ctor*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.#ctor
  isExternal: true
  name: TicketStatusRegistryHelper
  nameWithType: TicketStatusRegistryHelper.TicketStatusRegistryHelper
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.TicketStatusRegistryHelper
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault
  isExternal: true
  name: IsDefault
  nameWithType: TicketStatusRegistryHelper.IsDefault
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.IsDefault
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue
  isExternal: true
  name: UsedInQueue
  nameWithType: TicketStatusRegistryHelper.UsedInQueue
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UsedInQueue
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry
  isExternal: true
  name: RemoveFromUsedInQueueRegistry
  nameWithType: TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.RemoveFromUsedInQueueRegistry
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId
  isExternal: true
  name: GetDefaultTicketStatusId
  nameWithType: TicketStatusRegistryHelper.GetDefaultTicketStatusId
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusId
- uid: SuperOffice.Data.TicketBaseStatus
  commentId: T:SuperOffice.Data.TicketBaseStatus
  parent: SuperOffice.Data
  isExternal: true
  name: TicketBaseStatus
  nameWithType: TicketBaseStatus
  fullName: SuperOffice.Data.TicketBaseStatus
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry
  isExternal: true
  name: AddToDefaultTicketStatusRegistry
  nameWithType: TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.AddToDefaultTicketStatusRegistry
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry
  isExternal: true
  name: UpdateUsedInQueueRegistry
  nameWithType: TicketStatusRegistryHelper.UpdateUsedInQueueRegistry
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.UpdateUsedInQueueRegistry
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow
  isExternal: true
  name: GetDefaultTicketStatusRegistryRow
  nameWithType: TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.GetDefaultTicketStatusRegistryRow
- uid: SuperOffice.CRM.Rows.RegistryRow
  commentId: T:SuperOffice.CRM.Rows.RegistryRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RegistryRow
  nameWithType: RegistryRow
  fullName: SuperOffice.CRM.Rows.RegistryRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  isExternal: true
  name: StatusesWithUsedInQueueFlag
  nameWithType: TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
  fullName: SuperOffice.CRM.Ticket.TicketStatusRegistryHelper.StatusesWithUsedInQueueFlag
- uid: System.Collections.Generic.List{System.Int32}
  commentId: '!:System.Collections.Generic.List{System.Int32}'
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
