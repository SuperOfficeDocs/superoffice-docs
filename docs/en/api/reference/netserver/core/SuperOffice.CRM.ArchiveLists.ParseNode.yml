### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.ParseNode
  commentId: T:SuperOffice.CRM.ArchiveLists.ParseNode
  id: ParseNode
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.ParseNode.#ctor(SuperOffice.CRM.ArchiveLists.Token,System.String)
  - SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode(SuperOffice.CRM.ArchiveLists.Token,System.String)
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  - SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32)
  - SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32@)
  - SuperOffice.CRM.ArchiveLists.ParseNode.nodes
  - SuperOffice.CRM.ArchiveLists.ParseNode.Nodes
  - SuperOffice.CRM.ArchiveLists.ParseNode.Parent
  - SuperOffice.CRM.ArchiveLists.ParseNode.text
  - SuperOffice.CRM.ArchiveLists.ParseNode.Text
  - SuperOffice.CRM.ArchiveLists.ParseNode.Token
  langs:
  - csharp
  - vb
  name: ParseNode
  nameWithType: ParseNode
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public class ParseNode
    content.vb: Public Class ParseNode
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.ArchiveLists.ParseTree
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.ParseNode.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.ParseNode.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.text
  commentId: F:SuperOffice.CRM.ArchiveLists.ParseNode.text
  id: text
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: text
  nameWithType: ParseNode.text
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.text
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected string text
    return:
      type: System.String
    content.vb: Protected text As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.nodes
  commentId: F:SuperOffice.CRM.ArchiveLists.ParseNode.nodes
  id: nodes
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: nodes
  nameWithType: ParseNode.nodes
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.nodes
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected List<ParseNode> nodes
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseNode}
    content.vb: Protected nodes As List(Of ParseNode)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.Parent
  commentId: F:SuperOffice.CRM.ArchiveLists.ParseNode.Parent
  id: Parent
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ParseNode.Parent
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.Parent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public ParseNode Parent
    return:
      type: SuperOffice.CRM.ArchiveLists.ParseNode
    content.vb: Public Parent As ParseNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.Token
  commentId: F:SuperOffice.CRM.ArchiveLists.ParseNode.Token
  id: Token
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: Token
  nameWithType: ParseNode.Token
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.Token
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public Token Token
    return:
      type: SuperOffice.CRM.ArchiveLists.Token
    content.vb: Public Token As Token
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode(SuperOffice.CRM.ArchiveLists.Token,System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode(SuperOffice.CRM.ArchiveLists.Token,System.String)
  id: CreateNode(SuperOffice.CRM.ArchiveLists.Token,System.String)
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: CreateNode(Token, String)
  nameWithType: ParseNode.CreateNode(Token, String)
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode(SuperOffice.CRM.ArchiveLists.Token, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public virtual ParseNode CreateNode(Token token, string text)
    parameters:
    - id: token
      type: SuperOffice.CRM.ArchiveLists.Token
    - id: text
      type: System.String
    return:
      type: SuperOffice.CRM.ArchiveLists.ParseNode
    content.vb: Public Overridable Function CreateNode(token As Token, text As String) As ParseNode
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.#ctor(SuperOffice.CRM.ArchiveLists.Token,System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.#ctor(SuperOffice.CRM.ArchiveLists.Token,System.String)
  id: '#ctor(SuperOffice.CRM.ArchiveLists.Token,System.String)'
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: ParseNode(Token, String)
  nameWithType: ParseNode.ParseNode(Token, String)
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.ParseNode(SuperOffice.CRM.ArchiveLists.Token, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected ParseNode(Token token, string text)
    parameters:
    - id: token
      type: SuperOffice.CRM.ArchiveLists.Token
    - id: text
      type: System.String
    content.vb: Protected Sub New(token As Token, text As String)
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32)
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32)
  id: GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32)
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: GetValue(ParseTree, TokenType, Int32)
  nameWithType: ParseNode.GetValue(ParseTree, TokenType, Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree, SuperOffice.CRM.ArchiveLists.TokenType, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected object GetValue(ParseTree tree, TokenType type, int index)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: type
      type: SuperOffice.CRM.ArchiveLists.TokenType
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: Protected Function GetValue(tree As ParseTree, type As TokenType, index As Integer) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32@)
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32@)
  id: GetValue(SuperOffice.CRM.ArchiveLists.ParseTree,SuperOffice.CRM.ArchiveLists.TokenType,System.Int32@)
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: GetValue(ParseTree, TokenType, ref Int32)
  nameWithType: ParseNode.GetValue(ParseTree, TokenType, ref Int32)
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree, SuperOffice.CRM.ArchiveLists.TokenType, ref System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected object GetValue(ParseTree tree, TokenType type, ref int index)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: type
      type: SuperOffice.CRM.ArchiveLists.TokenType
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: Protected Function GetValue(tree As ParseTree, type As TokenType, ByRef index As Integer) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue*
  nameWithType.vb: ParseNode.GetValue(ParseTree, TokenType, ByRef Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue(SuperOffice.CRM.ArchiveLists.ParseTree, SuperOffice.CRM.ArchiveLists.TokenType, ByRef System.Int32)
  name.vb: GetValue(ParseTree, TokenType, ByRef Int32)
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalBINARYOPERATOR(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalBINARYOPERATOR(ParseTree, Object[])
  nameWithType: ParseNode.EvalBINARYOPERATOR(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalBINARYOPERATOR(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalBINARYOPERATOR(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR*
  nameWithType.vb: ParseNode.EvalBINARYOPERATOR(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalBINARYOPERATOR(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalStart(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalStart(ParseTree, Object[])
  nameWithType: ParseNode.EvalStart(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalStart(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalStart(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart*
  nameWithType.vb: ParseNode.EvalStart(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalStart(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalFilterExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalFilterExpr(ParseTree, Object[])
  nameWithType: ParseNode.EvalFilterExpr(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalFilterExpr(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalFilterExpr(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr*
  nameWithType.vb: ParseNode.EvalFilterExpr(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalFilterExpr(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalBracketExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalBracketExpr(ParseTree, Object[])
  nameWithType: ParseNode.EvalBracketExpr(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalBracketExpr(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalBracketExpr(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr*
  nameWithType.vb: ParseNode.EvalBracketExpr(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalBracketExpr(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalFieldExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalFieldExpr(ParseTree, Object[])
  nameWithType: ParseNode.EvalFieldExpr(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalFieldExpr(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalFieldExpr(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr*
  nameWithType.vb: ParseNode.EvalFieldExpr(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalFieldExpr(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalSubExpr(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalSubExpr(ParseTree, Object[])
  nameWithType: ParseNode.EvalSubExpr(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalSubExpr(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalSubExpr(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr*
  nameWithType.vb: ParseNode.EvalSubExpr(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalSubExpr(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalTerms(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalTerms(ParseTree, Object[])
  nameWithType: ParseNode.EvalTerms(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalTerms(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalTerms(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms*
  nameWithType.vb: ParseNode.EvalTerms(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalTerms(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalTerm(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalTerm(ParseTree, Object[])
  nameWithType: ParseNode.EvalTerm(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalTerm(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalTerm(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm*
  nameWithType.vb: ParseNode.EvalTerm(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalTerm(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalField(ParseTree, Object[])
  nameWithType: ParseNode.EvalField(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalField(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalField(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalField(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalField*
  nameWithType.vb: ParseNode.EvalField(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalField(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalField(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalJoins(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalJoins(ParseTree, Object[])
  nameWithType: ParseNode.EvalJoins(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalJoins(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalJoins(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins*
  nameWithType.vb: ParseNode.EvalJoins(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalJoins(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalSubJoin(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalSubJoin(ParseTree, Object[])
  nameWithType: ParseNode.EvalSubJoin(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalSubJoin(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalSubJoin(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin*
  nameWithType.vb: ParseNode.EvalSubJoin(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalSubJoin(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  commentId: M:SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  id: EvalFkField(SuperOffice.CRM.ArchiveLists.ParseTree,System.Object[])
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: EvalFkField(ParseTree, Object[])
  nameWithType: ParseNode.EvalFkField(ParseTree, Object[])
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected virtual object EvalFkField(ParseTree tree, params object[] paramlist)
    parameters:
    - id: tree
      type: SuperOffice.CRM.ArchiveLists.ParseTree
    - id: paramlist
      type: System.Object[]
    return:
      type: System.Object
    content.vb: Protected Overridable Function EvalFkField(tree As ParseTree, ParamArray paramlist As Object()) As Object
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField*
  nameWithType.vb: ParseNode.EvalFkField(ParseTree, Object())
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField(SuperOffice.CRM.ArchiveLists.ParseTree, System.Object())
  name.vb: EvalFkField(ParseTree, Object())
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.Nodes
  commentId: P:SuperOffice.CRM.ArchiveLists.ParseNode.Nodes
  id: Nodes
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: Nodes
  nameWithType: ParseNode.Nodes
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.Nodes
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public List<ParseNode> Nodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseNode}
    content.vb: Public ReadOnly Property Nodes As List(Of ParseNode)
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.Nodes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.Text
  commentId: P:SuperOffice.CRM.ArchiveLists.ParseNode.Text
  id: Text
  parent: SuperOffice.CRM.ArchiveLists.ParseNode
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: ParseNode.Text
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.Text
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public string Text { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Text As String
  overload: SuperOffice.CRM.ArchiveLists.ParseNode.Text*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ParseNode, To>()
  nameWithType: EnumUtil.MapEnums<ParseNode, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ParseNode, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ParseNode, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseNode, To)()
  name.vb: MapEnums(Of ParseNode, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ParseNode, To>
    nameWithType: EnumUtil.MapEnums<ParseNode, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.ParseNode, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ParseNode, To)
    nameWithType: EnumUtil.MapEnums(Of ParseNode, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseNode, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ParseNode, To>()
  nameWithType: Converters.MapEnums<ParseNode, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ParseNode, To>()
  nameWithType.vb: Converters.MapEnums(Of ParseNode, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseNode, To)()
  name.vb: MapEnums(Of ParseNode, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ParseNode, To>
    nameWithType: Converters.MapEnums<ParseNode, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.ParseNode, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ParseNode, To)
    nameWithType: Converters.MapEnums(Of ParseNode, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.ParseNode, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseNode}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.ParseNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ParseNode>
  nameWithType: List<ParseNode>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.ParseNode>
  nameWithType.vb: List(Of ParseNode)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.ParseNode)
  name.vb: List(Of ParseNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.ParseNode
    name: ParseNode
    nameWithType: ParseNode
    fullName: SuperOffice.CRM.ArchiveLists.ParseNode
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.ParseNode
    name: ParseNode
    nameWithType: ParseNode
    fullName: SuperOffice.CRM.ArchiveLists.ParseNode
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.ArchiveLists.ParseNode
  commentId: T:SuperOffice.CRM.ArchiveLists.ParseNode
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ParseNode
  nameWithType: ParseNode
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode
- uid: SuperOffice.CRM.ArchiveLists.Token
  commentId: T:SuperOffice.CRM.ArchiveLists.Token
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: SuperOffice.CRM.ArchiveLists.Token
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode
  isExternal: true
  name: CreateNode
  nameWithType: ParseNode.CreateNode
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.CreateNode
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.#ctor
  isExternal: true
  name: ParseNode
  nameWithType: ParseNode.ParseNode
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.ParseNode
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.GetValue
  isExternal: true
  name: GetValue
  nameWithType: ParseNode.GetValue
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.GetValue
- uid: SuperOffice.CRM.ArchiveLists.ParseTree
  commentId: T:SuperOffice.CRM.ArchiveLists.ParseTree
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ParseTree
  nameWithType: ParseTree
  fullName: SuperOffice.CRM.ArchiveLists.ParseTree
- uid: SuperOffice.CRM.ArchiveLists.TokenType
  commentId: T:SuperOffice.CRM.ArchiveLists.TokenType
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: TokenType
  nameWithType: TokenType
  fullName: SuperOffice.CRM.ArchiveLists.TokenType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR
  isExternal: true
  name: EvalBINARYOPERATOR
  nameWithType: ParseNode.EvalBINARYOPERATOR
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBINARYOPERATOR
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart
  isExternal: true
  name: EvalStart
  nameWithType: ParseNode.EvalStart
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalStart
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr
  isExternal: true
  name: EvalFilterExpr
  nameWithType: ParseNode.EvalFilterExpr
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFilterExpr
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr
  isExternal: true
  name: EvalBracketExpr
  nameWithType: ParseNode.EvalBracketExpr
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalBracketExpr
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr
  isExternal: true
  name: EvalFieldExpr
  nameWithType: ParseNode.EvalFieldExpr
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFieldExpr
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr
  isExternal: true
  name: EvalSubExpr
  nameWithType: ParseNode.EvalSubExpr
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubExpr
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms
  isExternal: true
  name: EvalTerms
  nameWithType: ParseNode.EvalTerms
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerms
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm
  isExternal: true
  name: EvalTerm
  nameWithType: ParseNode.EvalTerm
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalTerm
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalField*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalField
  isExternal: true
  name: EvalField
  nameWithType: ParseNode.EvalField
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalField
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins
  isExternal: true
  name: EvalJoins
  nameWithType: ParseNode.EvalJoins
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalJoins
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin
  isExternal: true
  name: EvalSubJoin
  nameWithType: ParseNode.EvalSubJoin
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalSubJoin
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField
  isExternal: true
  name: EvalFkField
  nameWithType: ParseNode.EvalFkField
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.EvalFkField
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.Nodes*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.Nodes
  isExternal: true
  name: Nodes
  nameWithType: ParseNode.Nodes
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.Nodes
- uid: SuperOffice.CRM.ArchiveLists.ParseNode.Text*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.ParseNode.Text
  isExternal: true
  name: Text
  nameWithType: ParseNode.Text
  fullName: SuperOffice.CRM.ArchiveLists.ParseNode.Text
