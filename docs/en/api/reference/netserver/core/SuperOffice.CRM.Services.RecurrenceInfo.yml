### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.RecurrenceInfo
  commentId: T:SuperOffice.CRM.Services.RecurrenceInfo
  id: RecurrenceInfo
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.RecurrenceInfo.#ctor
  - SuperOffice.CRM.Services.RecurrenceInfo.Clone
  - SuperOffice.CRM.Services.RecurrenceInfo.Dates
  - SuperOffice.CRM.Services.RecurrenceInfo.DayPattern
  - SuperOffice.CRM.Services.RecurrenceInfo.EndDate
  - SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence
  - SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern
  - SuperOffice.CRM.Services.RecurrenceInfo.Pattern
  - SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter
  - SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType
  - SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId
  - SuperOffice.CRM.Services.RecurrenceInfo.StartDate
  - SuperOffice.CRM.Services.RecurrenceInfo.ToString(System.String)
  - SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern
  - SuperOffice.CRM.Services.RecurrenceInfo.YearPattern
  langs:
  - csharp
  - vb
  name: RecurrenceInfo
  nameWithType: RecurrenceInfo
  fullName: SuperOffice.CRM.Services.RecurrenceInfo
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: Class representing the recurrence of an appointment booking
  example: []
  syntax:
    content: >-
      [DataContract(Namespace = "http://www.superoffice.net/ws/crm/NetServer/11.2.0.0")]

      public class RecurrenceInfo : ICloneable
    content.vb: >-
      <DataContract(Namespace:="http://www.superoffice.net/ws/crm/NetServer/11.2.0.0")>

      Public Class RecurrenceInfo Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Services.RecurrenceInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Services.RecurrenceInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.CRM.Services.RecurrenceInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RecurrenceInfo)
  - SuperOffice.CRM.Services.RecurrenceInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://www.superoffice.net/ws/crm/NetServer/11.2.0.0
- uid: SuperOffice.CRM.Services.RecurrenceInfo.#ctor
  commentId: M:SuperOffice.CRM.Services.RecurrenceInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: RecurrenceInfo()
  nameWithType: RecurrenceInfo.RecurrenceInfo()
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceInfo()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public RecurrenceInfo()
    content.vb: Public Sub New()
  overload: SuperOffice.CRM.Services.RecurrenceInfo.#ctor*
  nameWithType.vb: RecurrenceInfo.New()
  fullName.vb: SuperOffice.CRM.Services.RecurrenceInfo.New()
  name.vb: New()
- uid: SuperOffice.CRM.Services.RecurrenceInfo.ToString(System.String)
  commentId: M:SuperOffice.CRM.Services.RecurrenceInfo.ToString(System.String)
  id: ToString(System.String)
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: ToString(string)
  nameWithType: RecurrenceInfo.ToString(string)
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.ToString(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public string ToString(string prefix)
    parameters:
    - id: prefix
      type: System.String
    return:
      type: System.String
    content.vb: Public Function ToString(prefix As String) As String
  overload: SuperOffice.CRM.Services.RecurrenceInfo.ToString*
  nameWithType.vb: RecurrenceInfo.ToString(String)
  fullName.vb: SuperOffice.CRM.Services.RecurrenceInfo.ToString(String)
  name.vb: ToString(String)
- uid: SuperOffice.CRM.Services.RecurrenceInfo.Clone
  commentId: M:SuperOffice.CRM.Services.RecurrenceInfo.Clone
  id: Clone
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RecurrenceInfo.Clone()
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.Clone()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
    content.vb: Public Function Clone() As Object
  overload: SuperOffice.CRM.Services.RecurrenceInfo.Clone*
  implements:
  - System.ICloneable.Clone
- uid: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId
  id: RecurrenceId
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: RecurrenceId
  nameWithType: RecurrenceInfo.RecurrenceId
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: The recurrence rule id
  example: []
  syntax:
    content: >-
      [DataMember]

      public int RecurrenceId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property RecurrenceId As Integer
  overload: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.StartDate
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.StartDate
  id: StartDate
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: RecurrenceInfo.StartDate
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.StartDate
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: Start date of the repetition pattern
  example: []
  syntax:
    content: >-
      [DataMember]

      [TimeZoneHint(TimeZoneInterpretation.SalesBaseTime, TimeZoneDiaryAdjustment.DiaryTimezone)]

      public DateTime StartDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <DataMember>

      <TimeZoneHint(TimeZoneInterpretation.SalesBaseTime, TimeZoneDiaryAdjustment.DiaryTimezone)>

      Public Property StartDate As Date
  overload: SuperOffice.CRM.Services.RecurrenceInfo.StartDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: SoCore.Shared.CRM.Services.TimeZoneHintAttribute
    ctor: SoCore.Shared.CRM.Services.TimeZoneHintAttribute.#ctor(SoCore.Shared.CRM.Services.TimeZoneInterpretation,SoCore.Shared.CRM.Services.TimeZoneDiaryAdjustment)
    arguments:
    - type: SoCore.Shared.CRM.Services.TimeZoneInterpretation
      value: 0
    - type: SoCore.Shared.CRM.Services.TimeZoneDiaryAdjustment
      value: 1
- uid: SuperOffice.CRM.Services.RecurrenceInfo.EndDate
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.EndDate
  id: EndDate
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: RecurrenceInfo.EndDate
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.EndDate
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: >-
    End date of the repetition pattern

    Only used when the end is calculated from a end date. <xref href="SuperOffice.Data.RecurrenceEndType.EndDate" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      [TimeZoneHint(TimeZoneInterpretation.SalesBaseTime, TimeZoneDiaryAdjustment.DiaryTimezone)]

      public DateTime EndDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <DataMember>

      <TimeZoneHint(TimeZoneInterpretation.SalesBaseTime, TimeZoneDiaryAdjustment.DiaryTimezone)>

      Public Property EndDate As Date
  overload: SuperOffice.CRM.Services.RecurrenceInfo.EndDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
  - type: SoCore.Shared.CRM.Services.TimeZoneHintAttribute
    ctor: SoCore.Shared.CRM.Services.TimeZoneHintAttribute.#ctor(SoCore.Shared.CRM.Services.TimeZoneInterpretation,SoCore.Shared.CRM.Services.TimeZoneDiaryAdjustment)
    arguments:
    - type: SoCore.Shared.CRM.Services.TimeZoneInterpretation
      value: 0
    - type: SoCore.Shared.CRM.Services.TimeZoneDiaryAdjustment
      value: 1
- uid: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter
  id: RecurrenceCounter
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: RecurrenceCounter
  nameWithType: RecurrenceInfo.RecurrenceCounter
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: >-
    Number of recurrences

    Only used when the end is calculated from a number of repetitions. <xref href="SuperOffice.Data.RecurrenceEndType.Counter" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      public int RecurrenceCounter { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property RecurrenceCounter As Integer
  overload: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType
  id: RecurrenceEndType
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: RecurrenceEndType
  nameWithType: RecurrenceInfo.RecurrenceEndType
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: Type defining how the end of the recurrence sequence should be calculated
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrenceEndType RecurrenceEndType { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.RecurrenceEndType
    content.vb: >-
      <DataMember>

      Public Property RecurrenceEndType As RecurrenceEndType
  overload: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.Pattern
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.Pattern
  id: Pattern
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: RecurrenceInfo.Pattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.Pattern
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: The recurrence pattern (Daily, Weekly, Monthly, Yearly, Custom)
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrencePattern Pattern { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.RecurrencePattern
    content.vb: >-
      <DataMember>

      Public Property Pattern As RecurrencePattern
  overload: SuperOffice.CRM.Services.RecurrenceInfo.Pattern*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.DayPattern
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.DayPattern
  id: DayPattern
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: DayPattern
  nameWithType: RecurrenceInfo.DayPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.DayPattern
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: >-
    Pattern describing a daily recurrence

    Only set when the recurrence pattern i daily. <xref href="SuperOffice.Data.RecurrencePattern.Daily" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrenceDayPattern DayPattern { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceDayPattern
    content.vb: >-
      <DataMember>

      Public Property DayPattern As RecurrenceDayPattern
  overload: SuperOffice.CRM.Services.RecurrenceInfo.DayPattern*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern
  id: WeekPattern
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: WeekPattern
  nameWithType: RecurrenceInfo.WeekPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: >-
    Pattern describing a daily recurrence

    Only set when the recurrence pattern i weekly. <xref href="SuperOffice.Data.RecurrencePattern.Weekly" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrenceWeekPattern WeekPattern { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceWeekPattern
    content.vb: >-
      <DataMember>

      Public Property WeekPattern As RecurrenceWeekPattern
  overload: SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern
  id: MonthPattern
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: MonthPattern
  nameWithType: RecurrenceInfo.MonthPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: >-
    Pattern describing a daily recurrence

    Only set when the recurrence pattern i monthly. <xref href="SuperOffice.Data.RecurrencePattern.Monthly" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrenceMonthPattern MonthPattern { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceMonthPattern
    content.vb: >-
      <DataMember>

      Public Property MonthPattern As RecurrenceMonthPattern
  overload: SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.YearPattern
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.YearPattern
  id: YearPattern
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: YearPattern
  nameWithType: RecurrenceInfo.YearPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.YearPattern
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: >-
    Pattern describing a daily recurrence

    Only set when the recurrence pattern i yearly. <xref href="SuperOffice.Data.RecurrencePattern.Yearly" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrenceYearPattern YearPattern { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceYearPattern
    content.vb: >-
      <DataMember>

      Public Property YearPattern As RecurrenceYearPattern
  overload: SuperOffice.CRM.Services.RecurrenceInfo.YearPattern*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.Dates
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.Dates
  id: Dates
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: Dates
  nameWithType: RecurrenceInfo.Dates
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.Dates
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: List of all dates where this recurrence occurs
  example: []
  syntax:
    content: >-
      [DataMember]

      public RecurrenceDate[] Dates { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.RecurrenceDate[]
    content.vb: >-
      <DataMember>

      Public Property Dates As RecurrenceDate()
  overload: SuperOffice.CRM.Services.RecurrenceInfo.Dates*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence
  commentId: P:SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence
  id: IsRecurrence
  parent: SuperOffice.CRM.Services.RecurrenceInfo
  langs:
  - csharp
  - vb
  name: IsRecurrence
  nameWithType: RecurrenceInfo.IsRecurrence
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: Get a or set IsRecurrence, indicating if this is a repeating appointment or not.
  example: []
  syntax:
    content: >-
      [DataMember]

      public bool IsRecurrence { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DataMember>

      Public Property IsRecurrence As Boolean
  overload: SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<RecurrenceInfo, To>(RecurrenceInfo)
  nameWithType: EnumUtil.MapEnums<RecurrenceInfo, To>(RecurrenceInfo)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.RecurrenceInfo, To>(SuperOffice.CRM.Services.RecurrenceInfo)
  nameWithType.vb: EnumUtil.MapEnums(Of RecurrenceInfo, To)(RecurrenceInfo)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.RecurrenceInfo, To)(SuperOffice.CRM.Services.RecurrenceInfo)
  name.vb: MapEnums(Of RecurrenceInfo, To)(RecurrenceInfo)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Services.RecurrenceInfo)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Services.RecurrenceInfo)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<RecurrenceInfo, To>(RecurrenceInfo)
  nameWithType: Converters.MapEnums<RecurrenceInfo, To>(RecurrenceInfo)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.RecurrenceInfo, To>(SuperOffice.CRM.Services.RecurrenceInfo)
  nameWithType.vb: Converters.MapEnums(Of RecurrenceInfo, To)(RecurrenceInfo)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.RecurrenceInfo, To)(SuperOffice.CRM.Services.RecurrenceInfo)
  name.vb: MapEnums(Of RecurrenceInfo, To)(RecurrenceInfo)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Services.RecurrenceInfo)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Services.RecurrenceInfo)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RecurrenceInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<RecurrenceInfo>(RecurrenceInfo, RecurrenceInfo)
  nameWithType: ObjectExtensions.AssignByReflection<RecurrenceInfo>(RecurrenceInfo, RecurrenceInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Services.RecurrenceInfo>(SuperOffice.CRM.Services.RecurrenceInfo, SuperOffice.CRM.Services.RecurrenceInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RecurrenceInfo)(RecurrenceInfo, RecurrenceInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Services.RecurrenceInfo)(SuperOffice.CRM.Services.RecurrenceInfo, SuperOffice.CRM.Services.RecurrenceInfo)
  name.vb: AssignByReflection(Of RecurrenceInfo)(RecurrenceInfo, RecurrenceInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RecurrenceInfo,SuperOffice.CRM.Services.RecurrenceInfo)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RecurrenceInfo,SuperOffice.CRM.Services.RecurrenceInfo)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<RecurrenceInfo>(RecurrenceInfo)
  nameWithType: ObjectExtensions.GraphCopy<RecurrenceInfo>(RecurrenceInfo)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Services.RecurrenceInfo>(SuperOffice.CRM.Services.RecurrenceInfo)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RecurrenceInfo)(RecurrenceInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Services.RecurrenceInfo)(SuperOffice.CRM.Services.RecurrenceInfo)
  name.vb: GraphCopy(Of RecurrenceInfo)(RecurrenceInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.CRM.Services.RecurrenceInfo)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.CRM.Services.RecurrenceInfo)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Services.RecurrenceInfo
    name: RecurrenceInfo
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceInfo.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.CRM.Services.RecurrenceInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.#ctor
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo__ctor
  name: RecurrenceInfo
  nameWithType: RecurrenceInfo.RecurrenceInfo
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceInfo
  nameWithType.vb: RecurrenceInfo.New
  fullName.vb: SuperOffice.CRM.Services.RecurrenceInfo.New
  name.vb: New
- uid: SuperOffice.CRM.Services.RecurrenceInfo.ToString*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.ToString
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_ToString_System_String_
  name: ToString
  nameWithType: RecurrenceInfo.ToString
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Services.RecurrenceInfo.Clone*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.Clone
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_Clone
  name: Clone
  nameWithType: RecurrenceInfo.Clone
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.icloneable.clone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_RecurrenceId
  name: RecurrenceId
  nameWithType: RecurrenceInfo.RecurrenceId
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Services.RecurrenceInfo.StartDate*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.StartDate
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_StartDate
  name: StartDate
  nameWithType: RecurrenceInfo.StartDate
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.StartDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.Data.RecurrenceEndType.EndDate
  commentId: F:SuperOffice.Data.RecurrenceEndType.EndDate
  isExternal: true
  href: SuperOffice.Data.RecurrenceEndType.html#SuperOffice_Data_RecurrenceEndType_EndDate
  name: EndDate
  nameWithType: RecurrenceEndType.EndDate
  fullName: SuperOffice.Data.RecurrenceEndType.EndDate
- uid: SuperOffice.CRM.Services.RecurrenceInfo.EndDate*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.EndDate
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_EndDate
  name: EndDate
  nameWithType: RecurrenceInfo.EndDate
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.EndDate
- uid: SuperOffice.Data.RecurrenceEndType.Counter
  commentId: F:SuperOffice.Data.RecurrenceEndType.Counter
  isExternal: true
  href: SuperOffice.Data.RecurrenceEndType.html#SuperOffice_Data_RecurrenceEndType_Counter
  name: Counter
  nameWithType: RecurrenceEndType.Counter
  fullName: SuperOffice.Data.RecurrenceEndType.Counter
- uid: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_RecurrenceCounter
  name: RecurrenceCounter
  nameWithType: RecurrenceInfo.RecurrenceCounter
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceCounter
- uid: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_RecurrenceEndType
  name: RecurrenceEndType
  nameWithType: RecurrenceInfo.RecurrenceEndType
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.RecurrenceEndType
- uid: SuperOffice.Data.RecurrenceEndType
  commentId: T:SuperOffice.Data.RecurrenceEndType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.RecurrenceEndType.html
  name: RecurrenceEndType
  nameWithType: RecurrenceEndType
  fullName: SuperOffice.Data.RecurrenceEndType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.CRM.Services.RecurrenceInfo.Pattern*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.Pattern
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_Pattern
  name: Pattern
  nameWithType: RecurrenceInfo.Pattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.Pattern
- uid: SuperOffice.Data.RecurrencePattern
  commentId: T:SuperOffice.Data.RecurrencePattern
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.RecurrencePattern.html
  name: RecurrencePattern
  nameWithType: RecurrencePattern
  fullName: SuperOffice.Data.RecurrencePattern
- uid: SuperOffice.Data.RecurrencePattern.Daily
  commentId: F:SuperOffice.Data.RecurrencePattern.Daily
  isExternal: true
  href: SuperOffice.Data.RecurrencePattern.html#SuperOffice_Data_RecurrencePattern_Daily
  name: Daily
  nameWithType: RecurrencePattern.Daily
  fullName: SuperOffice.Data.RecurrencePattern.Daily
- uid: SuperOffice.CRM.Services.RecurrenceInfo.DayPattern*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.DayPattern
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_DayPattern
  name: DayPattern
  nameWithType: RecurrenceInfo.DayPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.DayPattern
- uid: SuperOffice.CRM.Services.RecurrenceDayPattern
  commentId: T:SuperOffice.CRM.Services.RecurrenceDayPattern
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceDayPattern.html
  name: RecurrenceDayPattern
  nameWithType: RecurrenceDayPattern
  fullName: SuperOffice.CRM.Services.RecurrenceDayPattern
- uid: SuperOffice.Data.RecurrencePattern.Weekly
  commentId: F:SuperOffice.Data.RecurrencePattern.Weekly
  isExternal: true
  href: SuperOffice.Data.RecurrencePattern.html#SuperOffice_Data_RecurrencePattern_Weekly
  name: Weekly
  nameWithType: RecurrencePattern.Weekly
  fullName: SuperOffice.Data.RecurrencePattern.Weekly
- uid: SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_WeekPattern
  name: WeekPattern
  nameWithType: RecurrenceInfo.WeekPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.WeekPattern
- uid: SuperOffice.CRM.Services.RecurrenceWeekPattern
  commentId: T:SuperOffice.CRM.Services.RecurrenceWeekPattern
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceWeekPattern.html
  name: RecurrenceWeekPattern
  nameWithType: RecurrenceWeekPattern
  fullName: SuperOffice.CRM.Services.RecurrenceWeekPattern
- uid: SuperOffice.Data.RecurrencePattern.Monthly
  commentId: F:SuperOffice.Data.RecurrencePattern.Monthly
  isExternal: true
  href: SuperOffice.Data.RecurrencePattern.html#SuperOffice_Data_RecurrencePattern_Monthly
  name: Monthly
  nameWithType: RecurrencePattern.Monthly
  fullName: SuperOffice.Data.RecurrencePattern.Monthly
- uid: SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_MonthPattern
  name: MonthPattern
  nameWithType: RecurrenceInfo.MonthPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.MonthPattern
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern
  commentId: T:SuperOffice.CRM.Services.RecurrenceMonthPattern
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceMonthPattern.html
  name: RecurrenceMonthPattern
  nameWithType: RecurrenceMonthPattern
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern
- uid: SuperOffice.Data.RecurrencePattern.Yearly
  commentId: F:SuperOffice.Data.RecurrencePattern.Yearly
  isExternal: true
  href: SuperOffice.Data.RecurrencePattern.html#SuperOffice_Data_RecurrencePattern_Yearly
  name: Yearly
  nameWithType: RecurrencePattern.Yearly
  fullName: SuperOffice.Data.RecurrencePattern.Yearly
- uid: SuperOffice.CRM.Services.RecurrenceInfo.YearPattern*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.YearPattern
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_YearPattern
  name: YearPattern
  nameWithType: RecurrenceInfo.YearPattern
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.YearPattern
- uid: SuperOffice.CRM.Services.RecurrenceYearPattern
  commentId: T:SuperOffice.CRM.Services.RecurrenceYearPattern
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceYearPattern.html
  name: RecurrenceYearPattern
  nameWithType: RecurrenceYearPattern
  fullName: SuperOffice.CRM.Services.RecurrenceYearPattern
- uid: SuperOffice.CRM.Services.RecurrenceInfo.Dates*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.Dates
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_Dates
  name: Dates
  nameWithType: RecurrenceInfo.Dates
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.Dates
- uid: SuperOffice.CRM.Services.RecurrenceDate[]
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceDate.html
  name: RecurrenceDate[]
  nameWithType: RecurrenceDate[]
  fullName: SuperOffice.CRM.Services.RecurrenceDate[]
  nameWithType.vb: RecurrenceDate()
  fullName.vb: SuperOffice.CRM.Services.RecurrenceDate()
  name.vb: RecurrenceDate()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceDate.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceDate.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceInfo.html#SuperOffice_CRM_Services_RecurrenceInfo_IsRecurrence
  name: IsRecurrence
  nameWithType: RecurrenceInfo.IsRecurrence
  fullName: SuperOffice.CRM.Services.RecurrenceInfo.IsRecurrence
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
