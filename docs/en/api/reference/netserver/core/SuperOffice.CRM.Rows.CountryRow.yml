### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.CountryRow
  commentId: T:SuperOffice.CRM.Rows.CountryRow
  id: CountryRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.CountryRow.#ctor(SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase)
  - SuperOffice.CRM.Rows.CountryRow._currentAbbrev2
  - SuperOffice.CRM.Rows.CountryRow._currentAbbrev3
  - SuperOffice.CRM.Rows.CountryRow._currentAddressLayout
  - SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutDomestic
  - SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutForeign
  - SuperOffice.CRM.Rows.CountryRow._currentCountryId
  - SuperOffice.CRM.Rows.CountryRow._currentCurrencyId
  - SuperOffice.CRM.Rows.CountryRow._currentCustomPhoneDesc
  - SuperOffice.CRM.Rows.CountryRow._currentDefaultLcid
  - SuperOffice.CRM.Rows.CountryRow._currentDeleted
  - SuperOffice.CRM.Rows.CountryRow._currentDialInPrefix
  - SuperOffice.CRM.Rows.CountryRow._currentDialOutPrefix
  - SuperOffice.CRM.Rows.CountryRow._currentDomainName
  - SuperOffice.CRM.Rows.CountryRow._currentEnglishName
  - SuperOffice.CRM.Rows.CountryRow._currentFlagresId
  - SuperOffice.CRM.Rows.CountryRow._currentInterAreaPrefix
  - SuperOffice.CRM.Rows.CountryRow._currentIsBuiltIn
  - SuperOffice.CRM.Rows.CountryRow._currentIsoNumber
  - SuperOffice.CRM.Rows.CountryRow._currentName
  - SuperOffice.CRM.Rows.CountryRow._currentOrgNrText
  - SuperOffice.CRM.Rows.CountryRow._currentPhonePartOfNA
  - SuperOffice.CRM.Rows.CountryRow._currentRank
  - SuperOffice.CRM.Rows.CountryRow._currentRegistered
  - SuperOffice.CRM.Rows.CountryRow._currentRegisteredAssociateId
  - SuperOffice.CRM.Rows.CountryRow._currentTooltip
  - SuperOffice.CRM.Rows.CountryRow._currentTzLocationId
  - SuperOffice.CRM.Rows.CountryRow._currentUpdated
  - SuperOffice.CRM.Rows.CountryRow._currentUpdatedAssociateId
  - SuperOffice.CRM.Rows.CountryRow._currentUpdatedCount
  - SuperOffice.CRM.Rows.CountryRow._currentZipPrefix
  - SuperOffice.CRM.Rows.CountryRow._nodeType
  - SuperOffice.CRM.Rows.CountryRow._onAbbrev2Change
  - SuperOffice.CRM.Rows.CountryRow._onAbbrev3Change
  - SuperOffice.CRM.Rows.CountryRow._onAddressLayoutChange
  - SuperOffice.CRM.Rows.CountryRow._onAddressLayoutDomesticChange
  - SuperOffice.CRM.Rows.CountryRow._onAddressLayoutForeignChange
  - SuperOffice.CRM.Rows.CountryRow._onCurrencyIdChange
  - SuperOffice.CRM.Rows.CountryRow._onCustomPhoneDescChange
  - SuperOffice.CRM.Rows.CountryRow._onDefaultLcidChange
  - SuperOffice.CRM.Rows.CountryRow._onDeletedChange
  - SuperOffice.CRM.Rows.CountryRow._onDialInPrefixChange
  - SuperOffice.CRM.Rows.CountryRow._onDialOutPrefixChange
  - SuperOffice.CRM.Rows.CountryRow._onDomainNameChange
  - SuperOffice.CRM.Rows.CountryRow._onEnglishNameChange
  - SuperOffice.CRM.Rows.CountryRow._onFlagresIdChange
  - SuperOffice.CRM.Rows.CountryRow._onInterAreaPrefixChange
  - SuperOffice.CRM.Rows.CountryRow._onIsBuiltInChange
  - SuperOffice.CRM.Rows.CountryRow._onIsoNumberChange
  - SuperOffice.CRM.Rows.CountryRow._onNameChange
  - SuperOffice.CRM.Rows.CountryRow._onOrgNrTextChange
  - SuperOffice.CRM.Rows.CountryRow._onPhonePartOfNAChange
  - SuperOffice.CRM.Rows.CountryRow._onRankChange
  - SuperOffice.CRM.Rows.CountryRow._onRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.CountryRow._onRegisteredChange
  - SuperOffice.CRM.Rows.CountryRow._onTooltipChange
  - SuperOffice.CRM.Rows.CountryRow._onTzLocationIdChange
  - SuperOffice.CRM.Rows.CountryRow._onUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.CountryRow._onUpdatedChange
  - SuperOffice.CRM.Rows.CountryRow._onUpdatedCountChange
  - SuperOffice.CRM.Rows.CountryRow._onZipPrefixChange
  - SuperOffice.CRM.Rows.CountryRow._persistedAbbrev2
  - SuperOffice.CRM.Rows.CountryRow._persistedAbbrev3
  - SuperOffice.CRM.Rows.CountryRow._persistedAddressLayout
  - SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutDomestic
  - SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutForeign
  - SuperOffice.CRM.Rows.CountryRow._persistedCountryId
  - SuperOffice.CRM.Rows.CountryRow._persistedCurrencyId
  - SuperOffice.CRM.Rows.CountryRow._persistedCustomPhoneDesc
  - SuperOffice.CRM.Rows.CountryRow._persistedDefaultLcid
  - SuperOffice.CRM.Rows.CountryRow._persistedDeleted
  - SuperOffice.CRM.Rows.CountryRow._persistedDialInPrefix
  - SuperOffice.CRM.Rows.CountryRow._persistedDialOutPrefix
  - SuperOffice.CRM.Rows.CountryRow._persistedDomainName
  - SuperOffice.CRM.Rows.CountryRow._persistedEnglishName
  - SuperOffice.CRM.Rows.CountryRow._persistedFlagresId
  - SuperOffice.CRM.Rows.CountryRow._persistedInterAreaPrefix
  - SuperOffice.CRM.Rows.CountryRow._persistedIsBuiltIn
  - SuperOffice.CRM.Rows.CountryRow._persistedIsoNumber
  - SuperOffice.CRM.Rows.CountryRow._persistedName
  - SuperOffice.CRM.Rows.CountryRow._persistedOrgNrText
  - SuperOffice.CRM.Rows.CountryRow._persistedPhonePartOfNA
  - SuperOffice.CRM.Rows.CountryRow._persistedRank
  - SuperOffice.CRM.Rows.CountryRow._persistedRegistered
  - SuperOffice.CRM.Rows.CountryRow._persistedRegisteredAssociateId
  - SuperOffice.CRM.Rows.CountryRow._persistedTooltip
  - SuperOffice.CRM.Rows.CountryRow._persistedTzLocationId
  - SuperOffice.CRM.Rows.CountryRow._persistedUpdated
  - SuperOffice.CRM.Rows.CountryRow._persistedUpdatedAssociateId
  - SuperOffice.CRM.Rows.CountryRow._persistedUpdatedCount
  - SuperOffice.CRM.Rows.CountryRow._persistedZipPrefix
  - SuperOffice.CRM.Rows.CountryRow.Abbrev2
  - SuperOffice.CRM.Rows.CountryRow.Abbrev3
  - SuperOffice.CRM.Rows.CountryRow.AddressLayout
  - SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic
  - SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign
  - SuperOffice.CRM.Rows.CountryRow.CountryId
  - SuperOffice.CRM.Rows.CountryRow.CountryTableInfo
  - SuperOffice.CRM.Rows.CountryRow.CreateNew
  - SuperOffice.CRM.Rows.CountryRow.CurrencyId
  - SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc
  - SuperOffice.CRM.Rows.CountryRow.DefaultLcid
  - SuperOffice.CRM.Rows.CountryRow.Deleted
  - SuperOffice.CRM.Rows.CountryRow.DialInPrefix
  - SuperOffice.CRM.Rows.CountryRow.DialOutPrefix
  - SuperOffice.CRM.Rows.CountryRow.DomainName
  - SuperOffice.CRM.Rows.CountryRow.ElementType
  - SuperOffice.CRM.Rows.CountryRow.EnglishName
  - SuperOffice.CRM.Rows.CountryRow.FlagresId
  - SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch(SuperOffice.CRM.Rows.CountryRow.CustomSearch)
  - SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId(System.Int32)
  - SuperOffice.CRM.Rows.CountryRow.GetFromIdxName(System.String)
  - SuperOffice.CRM.Rows.CountryRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.CountryTableInfo)
  - SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix
  - SuperOffice.CRM.Rows.CountryRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.CountryRow.IsBuiltIn
  - SuperOffice.CRM.Rows.CountryRow.IsDirty
  - SuperOffice.CRM.Rows.CountryRow.IsNew
  - SuperOffice.CRM.Rows.CountryRow.IsoNumber
  - SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.CountryRow.Item(System.String)
  - SuperOffice.CRM.Rows.CountryRow.Key
  - SuperOffice.CRM.Rows.CountryRow.Name
  - SuperOffice.CRM.Rows.CountryRow.OnAbbrev2Change
  - SuperOffice.CRM.Rows.CountryRow.OnAbbrev3Change
  - SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutChange
  - SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutDomesticChange
  - SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutForeignChange
  - SuperOffice.CRM.Rows.CountryRow.OnCurrencyIdChange
  - SuperOffice.CRM.Rows.CountryRow.OnCustomPhoneDescChange
  - SuperOffice.CRM.Rows.CountryRow.OnDefaultLcidChange
  - SuperOffice.CRM.Rows.CountryRow.OnDeletedChange
  - SuperOffice.CRM.Rows.CountryRow.OnDialInPrefixChange
  - SuperOffice.CRM.Rows.CountryRow.OnDialOutPrefixChange
  - SuperOffice.CRM.Rows.CountryRow.OnDomainNameChange
  - SuperOffice.CRM.Rows.CountryRow.OnEnglishNameChange
  - SuperOffice.CRM.Rows.CountryRow.OnFlagresIdChange
  - SuperOffice.CRM.Rows.CountryRow.OnInterAreaPrefixChange
  - SuperOffice.CRM.Rows.CountryRow.OnIsBuiltInChange
  - SuperOffice.CRM.Rows.CountryRow.OnIsoNumberChange
  - SuperOffice.CRM.Rows.CountryRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.CountryRow.OnNameChange
  - SuperOffice.CRM.Rows.CountryRow.OnOrgNrTextChange
  - SuperOffice.CRM.Rows.CountryRow.OnPhonePartOfNAChange
  - SuperOffice.CRM.Rows.CountryRow.OnRankChange
  - SuperOffice.CRM.Rows.CountryRow.OnRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.CountryRow.OnRegisteredChange
  - SuperOffice.CRM.Rows.CountryRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.CountryRow.OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.CountryRow.OnTooltipChange
  - SuperOffice.CRM.Rows.CountryRow.OnTzLocationIdChange
  - SuperOffice.CRM.Rows.CountryRow.OnUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.CountryRow.OnUpdatedChange
  - SuperOffice.CRM.Rows.CountryRow.OnUpdatedCountChange
  - SuperOffice.CRM.Rows.CountryRow.OnZipPrefixChange
  - SuperOffice.CRM.Rows.CountryRow.OrgNrText
  - SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA
  - SuperOffice.CRM.Rows.CountryRow.Rank
  - SuperOffice.CRM.Rows.CountryRow.Registered
  - SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId
  - SuperOffice.CRM.Rows.CountryRow.Reset
  - SuperOffice.CRM.Rows.CountryRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  - SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.CountryRow.SetRowAsNew
  - SuperOffice.CRM.Rows.CountryRow.TableInfo
  - SuperOffice.CRM.Rows.CountryRow.Tooltip
  - SuperOffice.CRM.Rows.CountryRow.ToString
  - SuperOffice.CRM.Rows.CountryRow.TzLocationId
  - SuperOffice.CRM.Rows.CountryRow.Updated
  - SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId
  - SuperOffice.CRM.Rows.CountryRow.UpdatedCount
  - SuperOffice.CRM.Rows.CountryRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  - SuperOffice.CRM.Rows.CountryRow.Value
  - SuperOffice.CRM.Rows.CountryRow.ZipPrefix
  langs:
  - csharp
  - vb
  name: CountryRow
  nameWithType: CountryRow
  fullName: SuperOffice.CRM.Rows.CountryRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCountry information\n<br />Row Object for table &apos;country&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n<br />This table is an Editable MDO list; fields are writeable if you have list- or general admin rights (or superoffice code signature)\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.CountryRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) CountryRow <xref href=\"SuperOffice.CRM.Rows.CountryRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch(SuperOffice.CRM.Rows.CountryRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.CountryRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.CountryRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.CountryTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.CountryRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.CountryTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.CountryRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <xref href=\"SuperOffice.CRM.Rows.CountryRows.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.CountryTableInfo)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table Country are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class CountryRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem, IMDOListElement'
    content.vb: >-
      Public Class CountryRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem, IMDOListElement
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  - SuperOffice.Data.ISoItem
  - SuperOffice.CRM.Rows.IMDOListElement
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._onValueChange
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.Save
  - SuperOffice.CRM.Rows.TableRowBase.Delete
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.CountryRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.CountryRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.CountryRow._persistedCountryId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedCountryId
  id: _persistedCountryId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedCountryId
  nameWithType: CountryRow._persistedCountryId
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedCountryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CountryId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCountryId
    return:
      type: System.Int32
    content.vb: Protected _persistedCountryId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedName
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedName
  id: _persistedName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedName
  nameWithType: CountryRow._persistedName
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedName
    return:
      type: System.String
    content.vb: Protected _persistedName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedRank
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedRank
  id: _persistedRank
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedRank
  nameWithType: CountryRow._persistedRank
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedRank
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Rank\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedRank
    return:
      type: System.Int16
    content.vb: Protected _persistedRank As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedTooltip
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedTooltip
  id: _persistedTooltip
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedTooltip
  nameWithType: CountryRow._persistedTooltip
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedTooltip
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedTooltip
    return:
      type: System.String
    content.vb: Protected _persistedTooltip As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedDeleted
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedDeleted
  id: _persistedDeleted
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedDeleted
  nameWithType: CountryRow._persistedDeleted
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedDeleted
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Deleted\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedDeleted
    return:
      type: System.Int16
    content.vb: Protected _persistedDeleted As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedEnglishName
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedEnglishName
  id: _persistedEnglishName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedEnglishName
  nameWithType: CountryRow._persistedEnglishName
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedEnglishName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.EnglishName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedEnglishName
    return:
      type: System.String
    content.vb: Protected _persistedEnglishName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedZipPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedZipPrefix
  id: _persistedZipPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedZipPrefix
  nameWithType: CountryRow._persistedZipPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedZipPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.ZipPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedZipPrefix
    return:
      type: System.String
    content.vb: Protected _persistedZipPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedFlagresId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedFlagresId
  id: _persistedFlagresId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedFlagresId
  nameWithType: CountryRow._persistedFlagresId
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedFlagresId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.FlagresId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _persistedFlagresId
    return:
      type: System.UInt32
    content.vb: Protected _persistedFlagresId As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedAddressLayout
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedAddressLayout
  id: _persistedAddressLayout
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedAddressLayout
  nameWithType: CountryRow._persistedAddressLayout
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedAddressLayout
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayout\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedAddressLayout
    return:
      type: System.Int32
    content.vb: Protected _persistedAddressLayout As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutDomestic
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutDomestic
  id: _persistedAddressLayoutDomestic
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedAddressLayoutDomestic
  nameWithType: CountryRow._persistedAddressLayoutDomestic
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutDomestic
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedAddressLayoutDomestic
    return:
      type: System.Int32
    content.vb: Protected _persistedAddressLayoutDomestic As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutForeign
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutForeign
  id: _persistedAddressLayoutForeign
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedAddressLayoutForeign
  nameWithType: CountryRow._persistedAddressLayoutForeign
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedAddressLayoutForeign
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedAddressLayoutForeign
    return:
      type: System.Int32
    content.vb: Protected _persistedAddressLayoutForeign As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedCurrencyId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedCurrencyId
  id: _persistedCurrencyId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedCurrencyId
  nameWithType: CountryRow._persistedCurrencyId
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedCurrencyId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CurrencyId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCurrencyId
    return:
      type: System.Int32
    content.vb: Protected _persistedCurrencyId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedOrgNrText
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedOrgNrText
  id: _persistedOrgNrText
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedOrgNrText
  nameWithType: CountryRow._persistedOrgNrText
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedOrgNrText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.OrgNrText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedOrgNrText
    return:
      type: System.String
    content.vb: Protected _persistedOrgNrText As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedDomainName
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedDomainName
  id: _persistedDomainName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedDomainName
  nameWithType: CountryRow._persistedDomainName
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedDomainName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DomainName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedDomainName
    return:
      type: System.String
    content.vb: Protected _persistedDomainName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedRegistered
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedRegistered
  id: _persistedRegistered
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedRegistered
  nameWithType: CountryRow._persistedRegistered
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedRegistered
    return:
      type: System.DateTime
    content.vb: Protected _persistedRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedRegisteredAssociateId
  id: _persistedRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedRegisteredAssociateId
  nameWithType: CountryRow._persistedRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedUpdated
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedUpdated
  id: _persistedUpdated
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedUpdated
  nameWithType: CountryRow._persistedUpdated
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedUpdated
    return:
      type: System.DateTime
    content.vb: Protected _persistedUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedUpdatedAssociateId
  id: _persistedUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedAssociateId
  nameWithType: CountryRow._persistedUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedUpdatedCount
  id: _persistedUpdatedCount
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedCount
  nameWithType: CountryRow._persistedUpdatedCount
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _persistedUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedDefaultLcid
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedDefaultLcid
  id: _persistedDefaultLcid
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedDefaultLcid
  nameWithType: CountryRow._persistedDefaultLcid
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedDefaultLcid
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DefaultLcid\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _persistedDefaultLcid
    return:
      type: System.UInt32
    content.vb: Protected _persistedDefaultLcid As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedDialInPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedDialInPrefix
  id: _persistedDialInPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedDialInPrefix
  nameWithType: CountryRow._persistedDialInPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedDialInPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DialInPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedDialInPrefix
    return:
      type: System.String
    content.vb: Protected _persistedDialInPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedDialOutPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedDialOutPrefix
  id: _persistedDialOutPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedDialOutPrefix
  nameWithType: CountryRow._persistedDialOutPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedDialOutPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DialOutPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedDialOutPrefix
    return:
      type: System.String
    content.vb: Protected _persistedDialOutPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedInterAreaPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedInterAreaPrefix
  id: _persistedInterAreaPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedInterAreaPrefix
  nameWithType: CountryRow._persistedInterAreaPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedInterAreaPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedInterAreaPrefix
    return:
      type: System.String
    content.vb: Protected _persistedInterAreaPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedCustomPhoneDesc
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedCustomPhoneDesc
  id: _persistedCustomPhoneDesc
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedCustomPhoneDesc
  nameWithType: CountryRow._persistedCustomPhoneDesc
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedCustomPhoneDesc
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedCustomPhoneDesc
    return:
      type: System.String
    content.vb: Protected _persistedCustomPhoneDesc As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedPhonePartOfNA
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedPhonePartOfNA
  id: _persistedPhonePartOfNA
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedPhonePartOfNA
  nameWithType: CountryRow._persistedPhonePartOfNA
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedPhonePartOfNA
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedPhonePartOfNA
    return:
      type: System.Int16
    content.vb: Protected _persistedPhonePartOfNA As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedIsBuiltIn
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedIsBuiltIn
  id: _persistedIsBuiltIn
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedIsBuiltIn
  nameWithType: CountryRow._persistedIsBuiltIn
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedIsBuiltIn
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsBuiltIn\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedIsBuiltIn
    return:
      type: System.Int16
    content.vb: Protected _persistedIsBuiltIn As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedIsoNumber
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedIsoNumber
  id: _persistedIsoNumber
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedIsoNumber
  nameWithType: CountryRow._persistedIsoNumber
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedIsoNumber
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsoNumber\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _persistedIsoNumber
    return:
      type: System.UInt32
    content.vb: Protected _persistedIsoNumber As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedAbbrev3
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedAbbrev3
  id: _persistedAbbrev3
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedAbbrev3
  nameWithType: CountryRow._persistedAbbrev3
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedAbbrev3
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Abbrev3\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedAbbrev3
    return:
      type: System.String
    content.vb: Protected _persistedAbbrev3 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedAbbrev2
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedAbbrev2
  id: _persistedAbbrev2
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedAbbrev2
  nameWithType: CountryRow._persistedAbbrev2
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedAbbrev2
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Abbrev2\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedAbbrev2
    return:
      type: System.String
    content.vb: Protected _persistedAbbrev2 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._persistedTzLocationId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._persistedTzLocationId
  id: _persistedTzLocationId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _persistedTzLocationId
  nameWithType: CountryRow._persistedTzLocationId
  fullName: SuperOffice.CRM.Rows.CountryRow._persistedTzLocationId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.TzLocationId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTzLocationId
    return:
      type: System.Int32
    content.vb: Protected _persistedTzLocationId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentCountryId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentCountryId
  id: _currentCountryId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentCountryId
  nameWithType: CountryRow._currentCountryId
  fullName: SuperOffice.CRM.Rows.CountryRow._currentCountryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CountryId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCountryId
    return:
      type: System.Int32
    content.vb: Protected _currentCountryId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentName
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentName
  id: _currentName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentName
  nameWithType: CountryRow._currentName
  fullName: SuperOffice.CRM.Rows.CountryRow._currentName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentName
    return:
      type: System.String
    content.vb: Protected _currentName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentRank
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentRank
  id: _currentRank
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentRank
  nameWithType: CountryRow._currentRank
  fullName: SuperOffice.CRM.Rows.CountryRow._currentRank
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Rank\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentRank
    return:
      type: System.Int16
    content.vb: Protected _currentRank As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentTooltip
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentTooltip
  id: _currentTooltip
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentTooltip
  nameWithType: CountryRow._currentTooltip
  fullName: SuperOffice.CRM.Rows.CountryRow._currentTooltip
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentTooltip
    return:
      type: System.String
    content.vb: Protected _currentTooltip As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentDeleted
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentDeleted
  id: _currentDeleted
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentDeleted
  nameWithType: CountryRow._currentDeleted
  fullName: SuperOffice.CRM.Rows.CountryRow._currentDeleted
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Deleted\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentDeleted
    return:
      type: System.Int16
    content.vb: Protected _currentDeleted As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentEnglishName
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentEnglishName
  id: _currentEnglishName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentEnglishName
  nameWithType: CountryRow._currentEnglishName
  fullName: SuperOffice.CRM.Rows.CountryRow._currentEnglishName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.EnglishName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentEnglishName
    return:
      type: System.String
    content.vb: Protected _currentEnglishName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentZipPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentZipPrefix
  id: _currentZipPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentZipPrefix
  nameWithType: CountryRow._currentZipPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._currentZipPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.ZipPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentZipPrefix
    return:
      type: System.String
    content.vb: Protected _currentZipPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentFlagresId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentFlagresId
  id: _currentFlagresId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentFlagresId
  nameWithType: CountryRow._currentFlagresId
  fullName: SuperOffice.CRM.Rows.CountryRow._currentFlagresId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.FlagresId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _currentFlagresId
    return:
      type: System.UInt32
    content.vb: Protected _currentFlagresId As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentAddressLayout
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentAddressLayout
  id: _currentAddressLayout
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentAddressLayout
  nameWithType: CountryRow._currentAddressLayout
  fullName: SuperOffice.CRM.Rows.CountryRow._currentAddressLayout
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayout\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentAddressLayout
    return:
      type: System.Int32
    content.vb: Protected _currentAddressLayout As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutDomestic
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutDomestic
  id: _currentAddressLayoutDomestic
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentAddressLayoutDomestic
  nameWithType: CountryRow._currentAddressLayoutDomestic
  fullName: SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutDomestic
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentAddressLayoutDomestic
    return:
      type: System.Int32
    content.vb: Protected _currentAddressLayoutDomestic As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutForeign
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutForeign
  id: _currentAddressLayoutForeign
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentAddressLayoutForeign
  nameWithType: CountryRow._currentAddressLayoutForeign
  fullName: SuperOffice.CRM.Rows.CountryRow._currentAddressLayoutForeign
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentAddressLayoutForeign
    return:
      type: System.Int32
    content.vb: Protected _currentAddressLayoutForeign As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentCurrencyId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentCurrencyId
  id: _currentCurrencyId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentCurrencyId
  nameWithType: CountryRow._currentCurrencyId
  fullName: SuperOffice.CRM.Rows.CountryRow._currentCurrencyId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CurrencyId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCurrencyId
    return:
      type: System.Int32
    content.vb: Protected _currentCurrencyId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentOrgNrText
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentOrgNrText
  id: _currentOrgNrText
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentOrgNrText
  nameWithType: CountryRow._currentOrgNrText
  fullName: SuperOffice.CRM.Rows.CountryRow._currentOrgNrText
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.OrgNrText\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentOrgNrText
    return:
      type: System.String
    content.vb: Protected _currentOrgNrText As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentDomainName
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentDomainName
  id: _currentDomainName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentDomainName
  nameWithType: CountryRow._currentDomainName
  fullName: SuperOffice.CRM.Rows.CountryRow._currentDomainName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DomainName\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentDomainName
    return:
      type: System.String
    content.vb: Protected _currentDomainName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentRegistered
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentRegistered
  id: _currentRegistered
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentRegistered
  nameWithType: CountryRow._currentRegistered
  fullName: SuperOffice.CRM.Rows.CountryRow._currentRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentRegistered
    return:
      type: System.DateTime
    content.vb: Protected _currentRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentRegisteredAssociateId
  id: _currentRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentRegisteredAssociateId
  nameWithType: CountryRow._currentRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow._currentRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentUpdated
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentUpdated
  id: _currentUpdated
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentUpdated
  nameWithType: CountryRow._currentUpdated
  fullName: SuperOffice.CRM.Rows.CountryRow._currentUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentUpdated
    return:
      type: System.DateTime
    content.vb: Protected _currentUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentUpdatedAssociateId
  id: _currentUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedAssociateId
  nameWithType: CountryRow._currentUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow._currentUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentUpdatedCount
  id: _currentUpdatedCount
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedCount
  nameWithType: CountryRow._currentUpdatedCount
  fullName: SuperOffice.CRM.Rows.CountryRow._currentUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _currentUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentDefaultLcid
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentDefaultLcid
  id: _currentDefaultLcid
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentDefaultLcid
  nameWithType: CountryRow._currentDefaultLcid
  fullName: SuperOffice.CRM.Rows.CountryRow._currentDefaultLcid
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DefaultLcid\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _currentDefaultLcid
    return:
      type: System.UInt32
    content.vb: Protected _currentDefaultLcid As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentDialInPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentDialInPrefix
  id: _currentDialInPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentDialInPrefix
  nameWithType: CountryRow._currentDialInPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._currentDialInPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DialInPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentDialInPrefix
    return:
      type: System.String
    content.vb: Protected _currentDialInPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentDialOutPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentDialOutPrefix
  id: _currentDialOutPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentDialOutPrefix
  nameWithType: CountryRow._currentDialOutPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._currentDialOutPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DialOutPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentDialOutPrefix
    return:
      type: System.String
    content.vb: Protected _currentDialOutPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentInterAreaPrefix
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentInterAreaPrefix
  id: _currentInterAreaPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentInterAreaPrefix
  nameWithType: CountryRow._currentInterAreaPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow._currentInterAreaPrefix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentInterAreaPrefix
    return:
      type: System.String
    content.vb: Protected _currentInterAreaPrefix As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentCustomPhoneDesc
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentCustomPhoneDesc
  id: _currentCustomPhoneDesc
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentCustomPhoneDesc
  nameWithType: CountryRow._currentCustomPhoneDesc
  fullName: SuperOffice.CRM.Rows.CountryRow._currentCustomPhoneDesc
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentCustomPhoneDesc
    return:
      type: System.String
    content.vb: Protected _currentCustomPhoneDesc As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentPhonePartOfNA
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentPhonePartOfNA
  id: _currentPhonePartOfNA
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentPhonePartOfNA
  nameWithType: CountryRow._currentPhonePartOfNA
  fullName: SuperOffice.CRM.Rows.CountryRow._currentPhonePartOfNA
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentPhonePartOfNA
    return:
      type: System.Int16
    content.vb: Protected _currentPhonePartOfNA As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentIsBuiltIn
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentIsBuiltIn
  id: _currentIsBuiltIn
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentIsBuiltIn
  nameWithType: CountryRow._currentIsBuiltIn
  fullName: SuperOffice.CRM.Rows.CountryRow._currentIsBuiltIn
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsBuiltIn\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentIsBuiltIn
    return:
      type: System.Int16
    content.vb: Protected _currentIsBuiltIn As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentIsoNumber
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentIsoNumber
  id: _currentIsoNumber
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentIsoNumber
  nameWithType: CountryRow._currentIsoNumber
  fullName: SuperOffice.CRM.Rows.CountryRow._currentIsoNumber
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsoNumber\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected uint _currentIsoNumber
    return:
      type: System.UInt32
    content.vb: Protected _currentIsoNumber As UInteger
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentAbbrev3
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentAbbrev3
  id: _currentAbbrev3
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentAbbrev3
  nameWithType: CountryRow._currentAbbrev3
  fullName: SuperOffice.CRM.Rows.CountryRow._currentAbbrev3
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Abbrev3\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentAbbrev3
    return:
      type: System.String
    content.vb: Protected _currentAbbrev3 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentAbbrev2
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentAbbrev2
  id: _currentAbbrev2
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentAbbrev2
  nameWithType: CountryRow._currentAbbrev2
  fullName: SuperOffice.CRM.Rows.CountryRow._currentAbbrev2
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Abbrev2\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentAbbrev2
    return:
      type: System.String
    content.vb: Protected _currentAbbrev2 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._currentTzLocationId
  commentId: F:SuperOffice.CRM.Rows.CountryRow._currentTzLocationId
  id: _currentTzLocationId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _currentTzLocationId
  nameWithType: CountryRow._currentTzLocationId
  fullName: SuperOffice.CRM.Rows.CountryRow._currentTzLocationId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.CountryRow.TzLocationId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTzLocationId
    return:
      type: System.Int32
    content.vb: Protected _currentTzLocationId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._nodeType
  commentId: F:SuperOffice.CRM.Rows.CountryRow._nodeType
  id: _nodeType
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _nodeType
  nameWithType: CountryRow._nodeType
  fullName: SuperOffice.CRM.Rows.CountryRow._nodeType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nExplains what kind the current object is. \n<xref href=\"SuperOffice.CRM.Rows.MDOListElementType\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: protected MDOListElementType _nodeType
    return:
      type: SuperOffice.CRM.Rows.MDOListElementType
    content.vb: Protected _nodeType As MDOListElementType
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: CountryRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.CountryRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.CountryRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: CountryRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: CountryRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.#ctor(SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.#ctor(SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase)'
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: CountryRow(CountryRow.CountryRowIdxBase)
  nameWithType: CountryRow.CountryRow(CountryRow.CountryRowIdxBase)
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryRow(SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nCountry information\n"
  syntax:
    content: protected CountryRow(CountryRow.CountryRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As CountryRow.CountryRowIdxBase)
  overload: SuperOffice.CRM.Rows.CountryRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.CountryRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: CountryRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.CountryRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the CountryRow object.\nCountry information\n"
  syntax:
    content: public static CountryRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.CountryRow
      description: A new instance of the CountryRow object.
    content.vb: Public Shared Function CreateNew As CountryRow
  overload: SuperOffice.CRM.Rows.CountryRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.CountryTableInfo)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.CountryTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.CountryTableInfo)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, CountryTableInfo)
  nameWithType: CountryRow.GetFromReader(SoDataReader, CountryTableInfo)
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.CountryTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the CountryRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nCountry information\n"
  syntax:
    content: public static CountryRow GetFromReader(SoDataReader reader, CountryTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.CountryTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.CountryTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.CountryRow
      description: A new instance of the CountryRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As CountryTableInfo) As CountryRow
  overload: SuperOffice.CRM.Rows.CountryRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch(SuperOffice.CRM.Rows.CountryRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch(SuperOffice.CRM.Rows.CountryRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.CountryRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(CountryRow.CustomSearch)
  nameWithType: CountryRow.GetFromCustomSearch(CountryRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch(SuperOffice.CRM.Rows.CountryRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the CountryRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static CountryRow GetFromCustomSearch(CountryRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.CountryRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.CountryRow
      description: A new instance of the CountryRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As CountryRow.CustomSearch) As CountryRow
  overload: SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId(System.Int32)
  id: GetFromIdxCountryId(System.Int32)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: GetFromIdxCountryId(Int32)
  nameWithType: CountryRow.GetFromIdxCountryId(Int32)
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the CountryRow object, by querying the database table via the index &apos;IDXCntryId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the Country table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.CountryRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static CountryRow GetFromIdxCountryId(int countryId)
    parameters:
    - id: countryId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.CountryRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxCountryId(countryId As Integer) As CountryRow
  overload: SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromIdxName(System.String)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.GetFromIdxName(System.String)
  id: GetFromIdxName(System.String)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: GetFromIdxName(String)
  nameWithType: CountryRow.GetFromIdxName(String)
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromIdxName(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the CountryRow object, by querying the database table via the index &apos;IDXCntryName&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the Country table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.CountryRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static CountryRow GetFromIdxName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: SuperOffice.CRM.Rows.CountryRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxName(name As String) As CountryRow
  overload: SuperOffice.CRM.Rows.CountryRow.GetFromIdxName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.CountryRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  id: SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: SetDefaults(DefaulterStrategy)
  nameWithType: CountryRow.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.CountryRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override void SetDefaults(DefaulterStrategy strategy)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    content.vb: Public Overrides Sub SetDefaults(strategy As DefaulterStrategy)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  overload: SuperOffice.CRM.Rows.CountryRow.SetDefaults*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.ToString
  commentId: M:SuperOffice.CRM.Rows.CountryRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CountryRow.ToString()
  fullName: SuperOffice.CRM.Rows.CountryRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.Rows.CountryRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.CountryRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: CountryRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.CountryRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.CountryRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.Reset
  commentId: M:SuperOffice.CRM.Rows.CountryRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: CountryRow.Reset()
  fullName: SuperOffice.CRM.Rows.CountryRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.CountryRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: CountryRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.CountryRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.CountryRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: CountryRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  id: OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnSave(BatchSave)
  nameWithType: CountryRow.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.CountryRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override void OnSave(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    content.vb: Protected Overrides Sub OnSave(batchSave As BatchSave)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.CountryRow.OnSave*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.OnSaved(System.Boolean)
  id: OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnSaved(Boolean)
  nameWithType: CountryRow.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.CountryRow.OnSaved(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override void OnSaved(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    content.vb: Protected Overrides Sub OnSaved(bSucceeded As Boolean)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  overload: SuperOffice.CRM.Rows.CountryRow.OnSaved*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.CountryRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: CountryRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.CountryRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.CountryRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.CountryRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: CountryRow.Item[String]
  fullName: SuperOffice.CRM.Rows.CountryRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.CountryRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: CountryRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.CountryRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.CountryRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.CountryRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: CountryRow.TableInfo
  fullName: SuperOffice.CRM.Rows.CountryRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.CountryRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.CountryTableInfo
  commentId: P:SuperOffice.CRM.Rows.CountryRow.CountryTableInfo
  id: CountryTableInfo
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: CountryTableInfo
  nameWithType: CountryRow.CountryTableInfo
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.CountryTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public CountryTableInfo CountryTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.CountryTableInfo
    content.vb: Public ReadOnly Property CountryTableInfo As CountryTableInfo
  overload: SuperOffice.CRM.Rows.CountryRow.CountryTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.ElementType
  commentId: P:SuperOffice.CRM.Rows.CountryRow.ElementType
  id: ElementType
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: ElementType
  nameWithType: CountryRow.ElementType
  fullName: SuperOffice.CRM.Rows.CountryRow.ElementType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe type of MDO List Element\n"
  syntax:
    content: public MDOListElementType ElementType { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.MDOListElementType
    content.vb: Public Property ElementType As MDOListElementType
  overload: SuperOffice.CRM.Rows.CountryRow.ElementType*
  implements:
  - SuperOffice.CRM.Rows.IMDOListElement.ElementType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.Key
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Key
  id: Key
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: CountryRow.Key
  fullName: SuperOffice.CRM.Rows.CountryRow.Key
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nKey to the MDO List Element\n"
  syntax:
    content: public int Key { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Key As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.Key*
  implements:
  - SuperOffice.CRM.Rows.IMDOListElement.Key
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.Value
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Value
  id: Value
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CountryRow.Value
  fullName: SuperOffice.CRM.Rows.CountryRow.Value
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReturns the current MDO List Element.\n"
  syntax:
    content: public object Value { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Value As Object
  overload: SuperOffice.CRM.Rows.CountryRow.Value*
  implements:
  - SuperOffice.CRM.Rows.IMDOListElement.Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: CountryRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: CountryRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.CountryRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: CountryRow.IsNew
  fullName: SuperOffice.CRM.Rows.CountryRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.CountryRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.CountryRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: CountryRow.IsDirty
  fullName: SuperOffice.CRM.Rows.CountryRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.CountryRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: CountryRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.CountryId
  commentId: P:SuperOffice.CRM.Rows.CountryRow.CountryId
  id: CountryId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: CountryId
  nameWithType: CountryRow.CountryId
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Primary key \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>		\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int CountryId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property CountryId As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.CountryId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.CountryRow.Name
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Name
  id: Name
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: CountryRow.Name
  fullName: SuperOffice.CRM.Rows.CountryRow.Name
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Name of country in installed language \n"
  remarks: "\nOriginal type in dictionary:  String[240].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Name As String
  overload: SuperOffice.CRM.Rows.CountryRow.Name*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Rank
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Rank
  id: Rank
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: CountryRow.Rank
  fullName: SuperOffice.CRM.Rows.CountryRow.Rank
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Rank order  \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short Rank { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Rank As Short
  overload: SuperOffice.CRM.Rows.CountryRow.Rank*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Tooltip
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Tooltip
  id: Tooltip
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Tooltip
  nameWithType: CountryRow.Tooltip
  fullName: SuperOffice.CRM.Rows.CountryRow.Tooltip
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Tooltip or other description \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Tooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Tooltip As String
  overload: SuperOffice.CRM.Rows.CountryRow.Tooltip*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Deleted
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Deleted
  id: Deleted
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Deleted
  nameWithType: CountryRow.Deleted
  fullName: SuperOffice.CRM.Rows.CountryRow.Deleted
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. 0 -> record is active 1 -> record is &apos;deleted&apos; and should not be shown in lists \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short Deleted { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property Deleted As Short
  overload: SuperOffice.CRM.Rows.CountryRow.Deleted*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.EnglishName
  commentId: P:SuperOffice.CRM.Rows.CountryRow.EnglishName
  id: EnglishName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: EnglishName
  nameWithType: CountryRow.EnglishName
  fullName: SuperOffice.CRM.Rows.CountryRow.EnglishName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Name of country in english \n"
  remarks: "\nOriginal type in dictionary:  String[40].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string EnglishName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property EnglishName As String
  overload: SuperOffice.CRM.Rows.CountryRow.EnglishName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.ZipPrefix
  commentId: P:SuperOffice.CRM.Rows.CountryRow.ZipPrefix
  id: ZipPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: ZipPrefix
  nameWithType: CountryRow.ZipPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.ZipPrefix
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. N- DK- etc. \n"
  remarks: "\nOriginal type in dictionary:  String[6].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string ZipPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ZipPrefix As String
  overload: SuperOffice.CRM.Rows.CountryRow.ZipPrefix*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.FlagresId
  commentId: P:SuperOffice.CRM.Rows.CountryRow.FlagresId
  id: FlagresId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: FlagresId
  nameWithType: CountryRow.FlagresId
  fullName: SuperOffice.CRM.Rows.CountryRow.FlagresId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: uint. Resource ID of flag graphic \n"
  remarks: "\nOriginal type in dictionary:  UInt.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual uint FlagresId { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Overridable Property FlagresId As UInteger
  overload: SuperOffice.CRM.Rows.CountryRow.FlagresId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.AddressLayout
  commentId: P:SuperOffice.CRM.Rows.CountryRow.AddressLayout
  id: AddressLayout
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: AddressLayout
  nameWithType: CountryRow.AddressLayout
  fullName: SuperOffice.CRM.Rows.CountryRow.AddressLayout
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Points to address format used in the GUI \n"
  remarks: "\nOriginal type in dictionary:  Id.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int AddressLayout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property AddressLayout As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.AddressLayout*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic
  commentId: P:SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic
  id: AddressLayoutDomestic
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: AddressLayoutDomestic
  nameWithType: CountryRow.AddressLayoutDomestic
  fullName: SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Points to address format used for labels to own country \n"
  remarks: "\nOriginal type in dictionary:  Id.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int AddressLayoutDomestic { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property AddressLayoutDomestic As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign
  commentId: P:SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign
  id: AddressLayoutForeign
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: AddressLayoutForeign
  nameWithType: CountryRow.AddressLayoutForeign
  fullName: SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Points to address format used for labels to other countries than own country \n"
  remarks: "\nOriginal type in dictionary:  Id.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int AddressLayoutForeign { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property AddressLayoutForeign As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.CurrencyId
  commentId: P:SuperOffice.CRM.Rows.CountryRow.CurrencyId
  id: CurrencyId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: CurrencyId
  nameWithType: CountryRow.CurrencyId
  fullName: SuperOffice.CRM.Rows.CountryRow.CurrencyId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Default currency for this country \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int CurrencyId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property CurrencyId As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.CurrencyId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.OrgNrText
  commentId: P:SuperOffice.CRM.Rows.CountryRow.OrgNrText
  id: OrgNrText
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OrgNrText
  nameWithType: CountryRow.OrgNrText
  fullName: SuperOffice.CRM.Rows.CountryRow.OrgNrText
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Lead text for organisation field \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string OrgNrText { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property OrgNrText As String
  overload: SuperOffice.CRM.Rows.CountryRow.OrgNrText*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.DomainName
  commentId: P:SuperOffice.CRM.Rows.CountryRow.DomainName
  id: DomainName
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: DomainName
  nameWithType: CountryRow.DomainName
  fullName: SuperOffice.CRM.Rows.CountryRow.DomainName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Default Web domain identifier (.no, .uk, etc; but without the dot) \n"
  remarks: "\nOriginal type in dictionary:  String[10].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string DomainName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property DomainName As String
  overload: SuperOffice.CRM.Rows.CountryRow.DomainName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Registered
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: CountryRow.Registered
  fullName: SuperOffice.CRM.Rows.CountryRow.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Registered when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime Registered { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Registered As Date
  overload: SuperOffice.CRM.Rows.CountryRow.Registered*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: CountryRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Registered by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int RegisteredAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RegisteredAssociateId As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Updated
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: CountryRow.Updated
  fullName: SuperOffice.CRM.Rows.CountryRow.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Last updated when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime Updated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Updated As Date
  overload: SuperOffice.CRM.Rows.CountryRow.Updated*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: CountryRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Last updated by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int UpdatedAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UpdatedAssociateId As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.UpdatedCount
  commentId: P:SuperOffice.CRM.Rows.CountryRow.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: CountryRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.CountryRow.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Number of updates made to this record \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short UpdatedCount { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property UpdatedCount As Short
  overload: SuperOffice.CRM.Rows.CountryRow.UpdatedCount*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.DefaultLcid
  commentId: P:SuperOffice.CRM.Rows.CountryRow.DefaultLcid
  id: DefaultLcid
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: DefaultLcid
  nameWithType: CountryRow.DefaultLcid
  fullName: SuperOffice.CRM.Rows.CountryRow.DefaultLcid
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: uint. LCID code in .NET, this should be the defaultLcid of the language that has the isDefault flag set in the LanguageInforCountry link table \n"
  remarks: "\nOriginal type in dictionary:  UInt.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual uint DefaultLcid { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Overridable Property DefaultLcid As UInteger
  overload: SuperOffice.CRM.Rows.CountryRow.DefaultLcid*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.DialInPrefix
  commentId: P:SuperOffice.CRM.Rows.CountryRow.DialInPrefix
  id: DialInPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: DialInPrefix
  nameWithType: CountryRow.DialInPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.DialInPrefix
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Prefix for dialing into the country from outside (country code) \n"
  remarks: "\nOriginal type in dictionary:  String[32].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string DialInPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property DialInPrefix As String
  overload: SuperOffice.CRM.Rows.CountryRow.DialInPrefix*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.DialOutPrefix
  commentId: P:SuperOffice.CRM.Rows.CountryRow.DialOutPrefix
  id: DialOutPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: DialOutPrefix
  nameWithType: CountryRow.DialOutPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.DialOutPrefix
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Prefix for dialling out of the country, voice call \n"
  remarks: "\nOriginal type in dictionary:  String[32].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string DialOutPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property DialOutPrefix As String
  overload: SuperOffice.CRM.Rows.CountryRow.DialOutPrefix*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix
  commentId: P:SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix
  id: InterAreaPrefix
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: InterAreaPrefix
  nameWithType: CountryRow.InterAreaPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Prefix for inter-area dialling in the country \n"
  remarks: "\nOriginal type in dictionary:  String[32].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string InterAreaPrefix { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property InterAreaPrefix As String
  overload: SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc
  commentId: P:SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc
  id: CustomPhoneDesc
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: CustomPhoneDesc
  nameWithType: CountryRow.CustomPhoneDesc
  fullName: SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Custom phone description, if any (comes from ISO/ITU documents) \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string CustomPhoneDesc { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property CustomPhoneDesc As String
  overload: SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA
  commentId: P:SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA
  id: PhonePartOfNA
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: PhonePartOfNA
  nameWithType: CountryRow.PhonePartOfNA
  fullName: SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Is the phone system part of the North American system \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short PhonePartOfNA { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property PhonePartOfNA As Short
  overload: SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.IsBuiltIn
  commentId: P:SuperOffice.CRM.Rows.CountryRow.IsBuiltIn
  id: IsBuiltIn
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: IsBuiltIn
  nameWithType: CountryRow.IsBuiltIn
  fullName: SuperOffice.CRM.Rows.CountryRow.IsBuiltIn
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Is this record populated by SuperOffice priming data? \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual short IsBuiltIn { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property IsBuiltIn As Short
  overload: SuperOffice.CRM.Rows.CountryRow.IsBuiltIn*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.IsoNumber
  commentId: P:SuperOffice.CRM.Rows.CountryRow.IsoNumber
  id: IsoNumber
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: IsoNumber
  nameWithType: CountryRow.IsoNumber
  fullName: SuperOffice.CRM.Rows.CountryRow.IsoNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: uint. The primary key used by ISO to identify countries when they have a revolution and change their name from Upper Volta to Burkina Faso :-) \n"
  remarks: "\nOriginal type in dictionary:  UInt.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual uint IsoNumber { get; set; }
    parameters: []
    return:
      type: System.UInt32
    content.vb: Public Overridable Property IsoNumber As UInteger
  overload: SuperOffice.CRM.Rows.CountryRow.IsoNumber*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Abbrev3
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Abbrev3
  id: Abbrev3
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Abbrev3
  nameWithType: CountryRow.Abbrev3
  fullName: SuperOffice.CRM.Rows.CountryRow.Abbrev3
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. ISO 3-letter abbreviation \n"
  remarks: "\nOriginal type in dictionary:  String[4].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Abbrev3 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Abbrev3 As String
  overload: SuperOffice.CRM.Rows.CountryRow.Abbrev3*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.Abbrev2
  commentId: P:SuperOffice.CRM.Rows.CountryRow.Abbrev2
  id: Abbrev2
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: Abbrev2
  nameWithType: CountryRow.Abbrev2
  fullName: SuperOffice.CRM.Rows.CountryRow.Abbrev2
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. ISO 2-letter abbreviation \n"
  remarks: "\nOriginal type in dictionary:  String[3].\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Abbrev2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Abbrev2 As String
  overload: SuperOffice.CRM.Rows.CountryRow.Abbrev2*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow.TzLocationId
  commentId: P:SuperOffice.CRM.Rows.CountryRow.TzLocationId
  id: TzLocationId
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: TzLocationId
  nameWithType: CountryRow.TzLocationId
  fullName: SuperOffice.CRM.Rows.CountryRow.TzLocationId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Default timezone location for this country \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Writeable if you have list- or general admin functional rights, or a superoffice code signature</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int TzLocationId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TzLocationId As Integer
  overload: SuperOffice.CRM.Rows.CountryRow.TzLocationId*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: Thrown if the set method is accessed by code not signed by SuperOffice.
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.CountryRow._onNameChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onNameChange
  id: _onNameChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onNameChange
  nameWithType: CountryRow._onNameChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Name\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onRankChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onRankChange
  id: _onRankChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onRankChange
  nameWithType: CountryRow._onRankChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onRankChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Rank\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onRankChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onRankChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onTooltipChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onTooltipChange
  id: _onTooltipChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onTooltipChange
  nameWithType: CountryRow._onTooltipChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onTooltipChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Tooltip\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onTooltipChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onTooltipChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onDeletedChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onDeletedChange
  id: _onDeletedChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onDeletedChange
  nameWithType: CountryRow._onDeletedChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onDeletedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Deleted\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onDeletedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onDeletedChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onEnglishNameChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onEnglishNameChange
  id: _onEnglishNameChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onEnglishNameChange
  nameWithType: CountryRow._onEnglishNameChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onEnglishNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.EnglishName\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onEnglishNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onEnglishNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onZipPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onZipPrefixChange
  id: _onZipPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onZipPrefixChange
  nameWithType: CountryRow._onZipPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onZipPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.ZipPrefix\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onZipPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onZipPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onFlagresIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onFlagresIdChange
  id: _onFlagresIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onFlagresIdChange
  nameWithType: CountryRow._onFlagresIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onFlagresIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.FlagresId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type uint.\n"
  syntax:
    content: protected event OnFieldChange<uint> _onFlagresIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Protected Event _onFlagresIdChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onAddressLayoutChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onAddressLayoutChange
  id: _onAddressLayoutChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onAddressLayoutChange
  nameWithType: CountryRow._onAddressLayoutChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onAddressLayoutChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayout\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onAddressLayoutChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onAddressLayoutChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onAddressLayoutDomesticChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onAddressLayoutDomesticChange
  id: _onAddressLayoutDomesticChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onAddressLayoutDomesticChange
  nameWithType: CountryRow._onAddressLayoutDomesticChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onAddressLayoutDomesticChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onAddressLayoutDomesticChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onAddressLayoutDomesticChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onAddressLayoutForeignChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onAddressLayoutForeignChange
  id: _onAddressLayoutForeignChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onAddressLayoutForeignChange
  nameWithType: CountryRow._onAddressLayoutForeignChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onAddressLayoutForeignChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onAddressLayoutForeignChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onAddressLayoutForeignChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onCurrencyIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onCurrencyIdChange
  id: _onCurrencyIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onCurrencyIdChange
  nameWithType: CountryRow._onCurrencyIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onCurrencyIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CurrencyId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onCurrencyIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onCurrencyIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onOrgNrTextChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onOrgNrTextChange
  id: _onOrgNrTextChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onOrgNrTextChange
  nameWithType: CountryRow._onOrgNrTextChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onOrgNrTextChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.OrgNrText\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onOrgNrTextChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onOrgNrTextChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onDomainNameChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onDomainNameChange
  id: _onDomainNameChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onDomainNameChange
  nameWithType: CountryRow._onDomainNameChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onDomainNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DomainName\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onDomainNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onDomainNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onRegisteredChange
  id: _onRegisteredChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onRegisteredChange
  nameWithType: CountryRow._onRegisteredChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onRegisteredAssociateIdChange
  id: _onRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onRegisteredAssociateIdChange
  nameWithType: CountryRow._onRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onUpdatedChange
  id: _onUpdatedChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onUpdatedChange
  nameWithType: CountryRow._onUpdatedChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onUpdatedAssociateIdChange
  id: _onUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onUpdatedAssociateIdChange
  nameWithType: CountryRow._onUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onUpdatedCountChange
  id: _onUpdatedCountChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onUpdatedCountChange
  nameWithType: CountryRow._onUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onDefaultLcidChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onDefaultLcidChange
  id: _onDefaultLcidChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onDefaultLcidChange
  nameWithType: CountryRow._onDefaultLcidChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onDefaultLcidChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DefaultLcid\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type uint.\n"
  syntax:
    content: protected event OnFieldChange<uint> _onDefaultLcidChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Protected Event _onDefaultLcidChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onDialInPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onDialInPrefixChange
  id: _onDialInPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onDialInPrefixChange
  nameWithType: CountryRow._onDialInPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onDialInPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DialInPrefix\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onDialInPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onDialInPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onDialOutPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onDialOutPrefixChange
  id: _onDialOutPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onDialOutPrefixChange
  nameWithType: CountryRow._onDialOutPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onDialOutPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.DialOutPrefix\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onDialOutPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onDialOutPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onInterAreaPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onInterAreaPrefixChange
  id: _onInterAreaPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onInterAreaPrefixChange
  nameWithType: CountryRow._onInterAreaPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onInterAreaPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onInterAreaPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onInterAreaPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onCustomPhoneDescChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onCustomPhoneDescChange
  id: _onCustomPhoneDescChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onCustomPhoneDescChange
  nameWithType: CountryRow._onCustomPhoneDescChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onCustomPhoneDescChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onCustomPhoneDescChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onCustomPhoneDescChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onPhonePartOfNAChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onPhonePartOfNAChange
  id: _onPhonePartOfNAChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onPhonePartOfNAChange
  nameWithType: CountryRow._onPhonePartOfNAChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onPhonePartOfNAChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onPhonePartOfNAChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onPhonePartOfNAChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onIsBuiltInChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onIsBuiltInChange
  id: _onIsBuiltInChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onIsBuiltInChange
  nameWithType: CountryRow._onIsBuiltInChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onIsBuiltInChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsBuiltIn\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onIsBuiltInChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onIsBuiltInChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onIsoNumberChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onIsoNumberChange
  id: _onIsoNumberChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onIsoNumberChange
  nameWithType: CountryRow._onIsoNumberChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onIsoNumberChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.IsoNumber\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type uint.\n"
  syntax:
    content: protected event OnFieldChange<uint> _onIsoNumberChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Protected Event _onIsoNumberChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onAbbrev3Change
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onAbbrev3Change
  id: _onAbbrev3Change
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onAbbrev3Change
  nameWithType: CountryRow._onAbbrev3Change
  fullName: SuperOffice.CRM.Rows.CountryRow._onAbbrev3Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Abbrev3\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onAbbrev3Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onAbbrev3Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onAbbrev2Change
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onAbbrev2Change
  id: _onAbbrev2Change
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onAbbrev2Change
  nameWithType: CountryRow._onAbbrev2Change
  fullName: SuperOffice.CRM.Rows.CountryRow._onAbbrev2Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.Abbrev2\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onAbbrev2Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onAbbrev2Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow._onTzLocationIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow._onTzLocationIdChange
  id: _onTzLocationIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: _onTzLocationIdChange
  nameWithType: CountryRow._onTzLocationIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow._onTzLocationIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.CountryRow.TzLocationId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTzLocationIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTzLocationIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.CountryRow.OnNameChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnNameChange
  id: OnNameChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnNameChange
  nameWithType: CountryRow.OnNameChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Name is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnRankChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnRankChange
  id: OnRankChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnRankChange
  nameWithType: CountryRow.OnRankChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnRankChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Rank is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnRankChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnRankChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnTooltipChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnTooltipChange
  id: OnTooltipChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnTooltipChange
  nameWithType: CountryRow.OnTooltipChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnTooltipChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Tooltip is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnTooltipChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnTooltipChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnDeletedChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnDeletedChange
  id: OnDeletedChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnDeletedChange
  nameWithType: CountryRow.OnDeletedChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnDeletedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Deleted is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnDeletedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnDeletedChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnEnglishNameChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnEnglishNameChange
  id: OnEnglishNameChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnEnglishNameChange
  nameWithType: CountryRow.OnEnglishNameChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnEnglishNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when EnglishName is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnEnglishNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnEnglishNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnZipPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnZipPrefixChange
  id: OnZipPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnZipPrefixChange
  nameWithType: CountryRow.OnZipPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnZipPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ZipPrefix is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnZipPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnZipPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnFlagresIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnFlagresIdChange
  id: OnFlagresIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnFlagresIdChange
  nameWithType: CountryRow.OnFlagresIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnFlagresIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FlagresId is changing.\n"
  syntax:
    content: public event OnFieldChange<uint> OnFlagresIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Public Event OnFlagresIdChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutChange
  id: OnAddressLayoutChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnAddressLayoutChange
  nameWithType: CountryRow.OnAddressLayoutChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AddressLayout is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnAddressLayoutChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnAddressLayoutChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutDomesticChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutDomesticChange
  id: OnAddressLayoutDomesticChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnAddressLayoutDomesticChange
  nameWithType: CountryRow.OnAddressLayoutDomesticChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutDomesticChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AddressLayoutDomestic is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnAddressLayoutDomesticChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnAddressLayoutDomesticChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutForeignChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutForeignChange
  id: OnAddressLayoutForeignChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnAddressLayoutForeignChange
  nameWithType: CountryRow.OnAddressLayoutForeignChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnAddressLayoutForeignChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AddressLayoutForeign is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnAddressLayoutForeignChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnAddressLayoutForeignChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnCurrencyIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnCurrencyIdChange
  id: OnCurrencyIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnCurrencyIdChange
  nameWithType: CountryRow.OnCurrencyIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnCurrencyIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CurrencyId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnCurrencyIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnCurrencyIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnOrgNrTextChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnOrgNrTextChange
  id: OnOrgNrTextChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnOrgNrTextChange
  nameWithType: CountryRow.OnOrgNrTextChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnOrgNrTextChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when OrgNrText is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnOrgNrTextChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnOrgNrTextChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnDomainNameChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnDomainNameChange
  id: OnDomainNameChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnDomainNameChange
  nameWithType: CountryRow.OnDomainNameChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnDomainNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DomainName is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnDomainNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnDomainNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnRegisteredChange
  id: OnRegisteredChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnRegisteredChange
  nameWithType: CountryRow.OnRegisteredChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Registered is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnRegisteredAssociateIdChange
  id: OnRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnRegisteredAssociateIdChange
  nameWithType: CountryRow.OnRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RegisteredAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnUpdatedChange
  id: OnUpdatedChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnUpdatedChange
  nameWithType: CountryRow.OnUpdatedChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Updated is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnUpdatedAssociateIdChange
  id: OnUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnUpdatedAssociateIdChange
  nameWithType: CountryRow.OnUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnUpdatedCountChange
  id: OnUpdatedCountChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnUpdatedCountChange
  nameWithType: CountryRow.OnUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedCount is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnDefaultLcidChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnDefaultLcidChange
  id: OnDefaultLcidChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnDefaultLcidChange
  nameWithType: CountryRow.OnDefaultLcidChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnDefaultLcidChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DefaultLcid is changing.\n"
  syntax:
    content: public event OnFieldChange<uint> OnDefaultLcidChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Public Event OnDefaultLcidChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnDialInPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnDialInPrefixChange
  id: OnDialInPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnDialInPrefixChange
  nameWithType: CountryRow.OnDialInPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnDialInPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DialInPrefix is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnDialInPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnDialInPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnDialOutPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnDialOutPrefixChange
  id: OnDialOutPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnDialOutPrefixChange
  nameWithType: CountryRow.OnDialOutPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnDialOutPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DialOutPrefix is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnDialOutPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnDialOutPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnInterAreaPrefixChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnInterAreaPrefixChange
  id: OnInterAreaPrefixChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnInterAreaPrefixChange
  nameWithType: CountryRow.OnInterAreaPrefixChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnInterAreaPrefixChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when InterAreaPrefix is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnInterAreaPrefixChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnInterAreaPrefixChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnCustomPhoneDescChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnCustomPhoneDescChange
  id: OnCustomPhoneDescChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnCustomPhoneDescChange
  nameWithType: CountryRow.OnCustomPhoneDescChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnCustomPhoneDescChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CustomPhoneDesc is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnCustomPhoneDescChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnCustomPhoneDescChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnPhonePartOfNAChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnPhonePartOfNAChange
  id: OnPhonePartOfNAChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnPhonePartOfNAChange
  nameWithType: CountryRow.OnPhonePartOfNAChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnPhonePartOfNAChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when PhonePartOfNA is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnPhonePartOfNAChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnPhonePartOfNAChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnIsBuiltInChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnIsBuiltInChange
  id: OnIsBuiltInChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnIsBuiltInChange
  nameWithType: CountryRow.OnIsBuiltInChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnIsBuiltInChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when IsBuiltIn is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnIsBuiltInChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnIsBuiltInChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnIsoNumberChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnIsoNumberChange
  id: OnIsoNumberChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnIsoNumberChange
  nameWithType: CountryRow.OnIsoNumberChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnIsoNumberChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when IsoNumber is changing.\n"
  syntax:
    content: public event OnFieldChange<uint> OnIsoNumberChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
    content.vb: Public Event OnIsoNumberChange As OnFieldChange(Of UInteger)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnAbbrev3Change
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnAbbrev3Change
  id: OnAbbrev3Change
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnAbbrev3Change
  nameWithType: CountryRow.OnAbbrev3Change
  fullName: SuperOffice.CRM.Rows.CountryRow.OnAbbrev3Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Abbrev3 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnAbbrev3Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnAbbrev3Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnAbbrev2Change
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnAbbrev2Change
  id: OnAbbrev2Change
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnAbbrev2Change
  nameWithType: CountryRow.OnAbbrev2Change
  fullName: SuperOffice.CRM.Rows.CountryRow.OnAbbrev2Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Abbrev2 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnAbbrev2Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnAbbrev2Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.CountryRow.OnTzLocationIdChange
  commentId: E:SuperOffice.CRM.Rows.CountryRow.OnTzLocationIdChange
  id: OnTzLocationIdChange
  parent: SuperOffice.CRM.Rows.CountryRow
  langs:
  - csharp
  - vb
  name: OnTzLocationIdChange
  nameWithType: CountryRow.OnTzLocationIdChange
  fullName: SuperOffice.CRM.Rows.CountryRow.OnTzLocationIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TzLocationId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTzLocationIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTzLocationIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.Data.ISoItem
  commentId: T:SuperOffice.Data.ISoItem
  parent: SuperOffice.Data
  isExternal: true
  name: ISoItem
  nameWithType: ISoItem
  fullName: SuperOffice.Data.ISoItem
- uid: SuperOffice.CRM.Rows.IMDOListElement
  commentId: T:SuperOffice.CRM.Rows.IMDOListElement
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: IMDOListElement
  nameWithType: IMDOListElement
  fullName: SuperOffice.CRM.Rows.IMDOListElement
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._onValueChange
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._onValueChange
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _onValueChange
  nameWithType: TableRowBase._onValueChange
  fullName: SuperOffice.CRM.Rows.TableRowBase._onValueChange
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults()
  nameWithType: TableRowBase.SetDefaults()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DashboardTileDefinitionRow, String)
  nameWithType: TableRowBase.SetDefaults(DashboardTileDefinitionRow, String)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Save
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Save
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Save()
  nameWithType: TableRowBase.Save()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Save()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Delete
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Delete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Delete()
  nameWithType: TableRowBase.Delete()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Delete()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: SuperOffice.Data.INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSave(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSave
    nameWithType: TableRowBase.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSave
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaved(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: INestedPersist.OnSaved
    nameWithType: TableRowBase.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSaved
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdate()
  nameWithType: TableRowBase.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdate()
  nameWithType: TableRowBase.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ForeignKeyHelper
  nameWithType: TableRowBase.ForeignKeyHelper
  fullName: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnValueChanged
  nameWithType: TableRowBase.OnValueChanged
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CountryRow, To>()
  nameWithType: EnumUtil.MapEnums<CountryRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.CountryRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CountryRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.CountryRow, To)()
  name.vb: MapEnums(Of CountryRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CountryRow, To>
    nameWithType: EnumUtil.MapEnums<CountryRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.CountryRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CountryRow, To)
    nameWithType: EnumUtil.MapEnums(Of CountryRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.CountryRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CountryRow, To>()
  nameWithType: Converters.MapEnums<CountryRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.CountryRow, To>()
  nameWithType.vb: Converters.MapEnums(Of CountryRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.CountryRow, To)()
  name.vb: MapEnums(Of CountryRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CountryRow, To>
    nameWithType: Converters.MapEnums<CountryRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.CountryRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CountryRow, To)
    nameWithType: Converters.MapEnums(Of CountryRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.CountryRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Rows.MDOListElementType
  commentId: T:SuperOffice.CRM.Rows.MDOListElementType
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: MDOListElementType
  nameWithType: MDOListElementType
  fullName: SuperOffice.CRM.Rows.MDOListElementType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: CountryRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.CountryRow.InternalSetValue
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: CountryRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.CountryRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: CountryRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.CountryRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.CountryRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.#ctor
  isExternal: true
  name: CountryRow
  nameWithType: CountryRow.CountryRow
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryRow
- uid: SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: CountryRow.CountryRowIdxBase
  nameWithType: CountryRow.CountryRowIdxBase
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryRowIdxBase
- uid: SuperOffice.CRM.Rows.CountryRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: CountryRow.CreateNew
  fullName: SuperOffice.CRM.Rows.CountryRow.CreateNew
- uid: SuperOffice.CRM.Rows.CountryRow
  commentId: T:SuperOffice.CRM.Rows.CountryRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: CountryRow
  nameWithType: CountryRow
  fullName: SuperOffice.CRM.Rows.CountryRow
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: CountryRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.CountryTableInfo
  commentId: T:SuperOffice.CRM.Data.CountryTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: CountryTableInfo
  nameWithType: CountryTableInfo
  fullName: SuperOffice.CRM.Data.CountryTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: CountryRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.CountryRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.CountryRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: CountryRow.CustomSearch
  nameWithType: CountryRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.CountryRow.CustomSearch
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId
  isExternal: true
  name: GetFromIdxCountryId
  nameWithType: CountryRow.GetFromIdxCountryId
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromIdxCountryId
- uid: SuperOffice.CRM.Rows.CountryRow.GetFromIdxName*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.GetFromIdxName
  isExternal: true
  name: GetFromIdxName
  nameWithType: CountryRow.GetFromIdxName
  fullName: SuperOffice.CRM.Rows.CountryRow.GetFromIdxName
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DefaulterStrategy)
  nameWithType: TableRowBase.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.SetDefaults*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.SetDefaults
  isExternal: true
  name: SetDefaults
  nameWithType: CountryRow.SetDefaults
  fullName: SuperOffice.CRM.Rows.CountryRow.SetDefaults
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.ToString
  isExternal: true
  name: ToString
  nameWithType: CountryRow.ToString
  fullName: SuperOffice.CRM.Rows.CountryRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: CountryRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.CountryRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Reset
  isExternal: true
  name: Reset
  nameWithType: CountryRow.Reset
  fullName: SuperOffice.CRM.Rows.CountryRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: CountryRow.OnLoad
  fullName: SuperOffice.CRM.Rows.CountryRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: CountryRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.CountryRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSave(BatchSave)
  nameWithType: TableRowBase.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.OnSave*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.OnSave
  isExternal: true
  name: OnSave
  nameWithType: CountryRow.OnSave
  fullName: SuperOffice.CRM.Rows.CountryRow.OnSave
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaved(Boolean)
  nameWithType: TableRowBase.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.OnSaved*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.OnSaved
  isExternal: true
  name: OnSaved
  nameWithType: CountryRow.OnSaved
  fullName: SuperOffice.CRM.Rows.CountryRow.OnSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Validate
  isExternal: true
  name: Validate
  nameWithType: CountryRow.Validate
  fullName: SuperOffice.CRM.Rows.CountryRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.CountryRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Item
  isExternal: true
  name: Item
  nameWithType: CountryRow.Item
  fullName: SuperOffice.CRM.Rows.CountryRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.CountryRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: CountryRow.TableInfo
  fullName: SuperOffice.CRM.Rows.CountryRow.TableInfo
- uid: SuperOffice.CRM.Rows.CountryRow.CountryTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.CountryTableInfo
  isExternal: true
  name: CountryTableInfo
  nameWithType: CountryRow.CountryTableInfo
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryTableInfo
- uid: SuperOffice.CRM.Rows.CountryRow.ElementType*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.ElementType
  isExternal: true
  name: ElementType
  nameWithType: CountryRow.ElementType
  fullName: SuperOffice.CRM.Rows.CountryRow.ElementType
- uid: SuperOffice.CRM.Rows.IMDOListElement.ElementType
  commentId: P:SuperOffice.CRM.Rows.IMDOListElement.ElementType
  parent: SuperOffice.CRM.Rows.IMDOListElement
  isExternal: true
  name: ElementType
  nameWithType: IMDOListElement.ElementType
  fullName: SuperOffice.CRM.Rows.IMDOListElement.ElementType
- uid: SuperOffice.CRM.Rows.CountryRow.Key*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Key
  isExternal: true
  name: Key
  nameWithType: CountryRow.Key
  fullName: SuperOffice.CRM.Rows.CountryRow.Key
- uid: SuperOffice.CRM.Rows.IMDOListElement.Key
  commentId: P:SuperOffice.CRM.Rows.IMDOListElement.Key
  parent: SuperOffice.CRM.Rows.IMDOListElement
  isExternal: true
  name: Key
  nameWithType: IMDOListElement.Key
  fullName: SuperOffice.CRM.Rows.IMDOListElement.Key
- uid: SuperOffice.CRM.Rows.CountryRow.Value*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Value
  isExternal: true
  name: Value
  nameWithType: CountryRow.Value
  fullName: SuperOffice.CRM.Rows.CountryRow.Value
- uid: SuperOffice.CRM.Rows.IMDOListElement.Value
  commentId: P:SuperOffice.CRM.Rows.IMDOListElement.Value
  parent: SuperOffice.CRM.Rows.IMDOListElement
  isExternal: true
  name: Value
  nameWithType: IMDOListElement.Value
  fullName: SuperOffice.CRM.Rows.IMDOListElement.Value
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: CountryRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: CountryRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.CountryRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.CountryRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: CountryRow.IsNew
  fullName: SuperOffice.CRM.Rows.CountryRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.CountryRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: CountryRow.IsDirty
  fullName: SuperOffice.CRM.Rows.CountryRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: CountryRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.CountryRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.CountryRow.CountryId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.CountryId
  isExternal: true
  name: CountryId
  nameWithType: CountryRow.CountryId
  fullName: SuperOffice.CRM.Rows.CountryRow.CountryId
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
- uid: SuperOffice.CRM.Rows.CountryRow.Name*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Name
  isExternal: true
  name: Name
  nameWithType: CountryRow.Name
  fullName: SuperOffice.CRM.Rows.CountryRow.Name
- uid: SuperOffice.CRM.Rows.CountryRow.Rank*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Rank
  isExternal: true
  name: Rank
  nameWithType: CountryRow.Rank
  fullName: SuperOffice.CRM.Rows.CountryRow.Rank
- uid: SuperOffice.CRM.Rows.CountryRow.Tooltip*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Tooltip
  isExternal: true
  name: Tooltip
  nameWithType: CountryRow.Tooltip
  fullName: SuperOffice.CRM.Rows.CountryRow.Tooltip
- uid: SuperOffice.CRM.Rows.CountryRow.Deleted*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Deleted
  isExternal: true
  name: Deleted
  nameWithType: CountryRow.Deleted
  fullName: SuperOffice.CRM.Rows.CountryRow.Deleted
- uid: SuperOffice.CRM.Rows.CountryRow.EnglishName*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.EnglishName
  isExternal: true
  name: EnglishName
  nameWithType: CountryRow.EnglishName
  fullName: SuperOffice.CRM.Rows.CountryRow.EnglishName
- uid: SuperOffice.CRM.Rows.CountryRow.ZipPrefix*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.ZipPrefix
  isExternal: true
  name: ZipPrefix
  nameWithType: CountryRow.ZipPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.ZipPrefix
- uid: SuperOffice.CRM.Rows.CountryRow.FlagresId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.FlagresId
  isExternal: true
  name: FlagresId
  nameWithType: CountryRow.FlagresId
  fullName: SuperOffice.CRM.Rows.CountryRow.FlagresId
- uid: SuperOffice.CRM.Rows.CountryRow.AddressLayout*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.AddressLayout
  isExternal: true
  name: AddressLayout
  nameWithType: CountryRow.AddressLayout
  fullName: SuperOffice.CRM.Rows.CountryRow.AddressLayout
- uid: SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic
  isExternal: true
  name: AddressLayoutDomestic
  nameWithType: CountryRow.AddressLayoutDomestic
  fullName: SuperOffice.CRM.Rows.CountryRow.AddressLayoutDomestic
- uid: SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign
  isExternal: true
  name: AddressLayoutForeign
  nameWithType: CountryRow.AddressLayoutForeign
  fullName: SuperOffice.CRM.Rows.CountryRow.AddressLayoutForeign
- uid: SuperOffice.CRM.Rows.CountryRow.CurrencyId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.CurrencyId
  isExternal: true
  name: CurrencyId
  nameWithType: CountryRow.CurrencyId
  fullName: SuperOffice.CRM.Rows.CountryRow.CurrencyId
- uid: SuperOffice.CRM.Rows.CountryRow.OrgNrText*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.OrgNrText
  isExternal: true
  name: OrgNrText
  nameWithType: CountryRow.OrgNrText
  fullName: SuperOffice.CRM.Rows.CountryRow.OrgNrText
- uid: SuperOffice.CRM.Rows.CountryRow.DomainName*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.DomainName
  isExternal: true
  name: DomainName
  nameWithType: CountryRow.DomainName
  fullName: SuperOffice.CRM.Rows.CountryRow.DomainName
- uid: SuperOffice.CRM.Rows.CountryRow.Registered*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Registered
  isExternal: true
  name: Registered
  nameWithType: CountryRow.Registered
  fullName: SuperOffice.CRM.Rows.CountryRow.Registered
- uid: SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: CountryRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow.RegisteredAssociateId
- uid: SuperOffice.CRM.Rows.CountryRow.Updated*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Updated
  isExternal: true
  name: Updated
  nameWithType: CountryRow.Updated
  fullName: SuperOffice.CRM.Rows.CountryRow.Updated
- uid: SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: CountryRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.CountryRow.UpdatedAssociateId
- uid: SuperOffice.CRM.Rows.CountryRow.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: CountryRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.CountryRow.UpdatedCount
- uid: SuperOffice.CRM.Rows.CountryRow.DefaultLcid*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.DefaultLcid
  isExternal: true
  name: DefaultLcid
  nameWithType: CountryRow.DefaultLcid
  fullName: SuperOffice.CRM.Rows.CountryRow.DefaultLcid
- uid: SuperOffice.CRM.Rows.CountryRow.DialInPrefix*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.DialInPrefix
  isExternal: true
  name: DialInPrefix
  nameWithType: CountryRow.DialInPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.DialInPrefix
- uid: SuperOffice.CRM.Rows.CountryRow.DialOutPrefix*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.DialOutPrefix
  isExternal: true
  name: DialOutPrefix
  nameWithType: CountryRow.DialOutPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.DialOutPrefix
- uid: SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix
  isExternal: true
  name: InterAreaPrefix
  nameWithType: CountryRow.InterAreaPrefix
  fullName: SuperOffice.CRM.Rows.CountryRow.InterAreaPrefix
- uid: SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc
  isExternal: true
  name: CustomPhoneDesc
  nameWithType: CountryRow.CustomPhoneDesc
  fullName: SuperOffice.CRM.Rows.CountryRow.CustomPhoneDesc
- uid: SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA
  isExternal: true
  name: PhonePartOfNA
  nameWithType: CountryRow.PhonePartOfNA
  fullName: SuperOffice.CRM.Rows.CountryRow.PhonePartOfNA
- uid: SuperOffice.CRM.Rows.CountryRow.IsBuiltIn*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.IsBuiltIn
  isExternal: true
  name: IsBuiltIn
  nameWithType: CountryRow.IsBuiltIn
  fullName: SuperOffice.CRM.Rows.CountryRow.IsBuiltIn
- uid: SuperOffice.CRM.Rows.CountryRow.IsoNumber*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.IsoNumber
  isExternal: true
  name: IsoNumber
  nameWithType: CountryRow.IsoNumber
  fullName: SuperOffice.CRM.Rows.CountryRow.IsoNumber
- uid: SuperOffice.CRM.Rows.CountryRow.Abbrev3*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Abbrev3
  isExternal: true
  name: Abbrev3
  nameWithType: CountryRow.Abbrev3
  fullName: SuperOffice.CRM.Rows.CountryRow.Abbrev3
- uid: SuperOffice.CRM.Rows.CountryRow.Abbrev2*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.Abbrev2
  isExternal: true
  name: Abbrev2
  nameWithType: CountryRow.Abbrev2
  fullName: SuperOffice.CRM.Rows.CountryRow.Abbrev2
- uid: SuperOffice.CRM.Rows.CountryRow.TzLocationId*
  commentId: Overload:SuperOffice.CRM.Rows.CountryRow.TzLocationId
  isExternal: true
  name: TzLocationId
  nameWithType: CountryRow.TzLocationId
  fullName: SuperOffice.CRM.Rows.CountryRow.TzLocationId
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.String}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.String}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<String>
  nameWithType: OnFieldChange<String>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.String>
  nameWithType.vb: OnFieldChange(Of String)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.String)
  name.vb: OnFieldChange(Of String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange`1
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange`1
  isExternal: true
  name: OnFieldChange<TValue>
  nameWithType: OnFieldChange<TValue>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<TValue>
  nameWithType.vb: OnFieldChange(Of TValue)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of TValue)
  name.vb: OnFieldChange(Of TValue)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int16>
  nameWithType: OnFieldChange<Int16>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int16>
  nameWithType.vb: OnFieldChange(Of Int16)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int16)
  name.vb: OnFieldChange(Of Int16)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.UInt32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<UInt32>
  nameWithType: OnFieldChange<UInt32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.UInt32>
  nameWithType.vb: OnFieldChange(Of UInt32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.UInt32)
  name.vb: OnFieldChange(Of UInt32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    nameWithType: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int32>
  nameWithType: OnFieldChange<Int32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int32>
  nameWithType.vb: OnFieldChange(Of Int32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int32)
  name.vb: OnFieldChange(Of Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<DateTime>
  nameWithType: OnFieldChange<DateTime>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.DateTime>
  nameWithType.vb: OnFieldChange(Of DateTime)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.DateTime)
  name.vb: OnFieldChange(Of DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
