### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend
  commentId: T:SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend
  id: IArchiveProviderDynamicExtend
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin(System.String,System.String,SuperOffice.Data.ArchiveJoinType)
  langs:
  - csharp
  - vb
  name: IArchiveProviderDynamicExtend
  nameWithType: IArchiveProviderDynamicExtend
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nInterface used by extenders that can be part of a dot-syntax provider\n"
  remarks: "\nDot syntax extenders offer columns, but have their joins generated by a parser that understands\nsyntax like <em>contact.associate_id.person_id.firstname</em>. Such extenders must implement this\ninterface, and be marked with a <xref href=\"SuperOffice.CRM.ArchiveLists.DynamicExtenderAttribute\" data-throw-if-not-resolved=\"false\"></xref> that defines which table\nthe extender handles.\n<p></p>\nA dynamic extender must also implement <xref href=\"SuperOffice.CRM.ArchiveLists.IArchiveExtender\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public interface IArchiveProviderDynamicExtend
    content.vb: Public Interface IArchiveProviderDynamicExtend
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin(System.String,System.String,SuperOffice.Data.ArchiveJoinType)
  commentId: M:SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin(System.String,System.String,SuperOffice.Data.ArchiveJoinType)
  id: SetDynamicJoin(System.String,System.String,SuperOffice.Data.ArchiveJoinType)
  parent: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend
  langs:
  - csharp
  - vb
  name: SetDynamicJoin(String, String, ArchiveJoinType)
  nameWithType: IArchiveProviderDynamicExtend.SetDynamicJoin(String, String, ArchiveJoinType)
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin(System.String, System.String, SuperOffice.Data.ArchiveJoinType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nDefine the join relation between this extender and the parent.\n"
  remarks: "\nHow the parent is specified is not part of this interface, see <xref href=\"SuperOffice.CRM.ArchiveLists.IArchiveProviderDoesExtend\" data-throw-if-not-resolved=\"false\"></xref> for that. This method\nis used to specify - without referring to table/field objects, because these are not known at the time of call - how this\nextender is linked to its parent. During the ModifyQuery phase of processing, this information will be used to instantiate a concrete\njoin of some kind.\n<p></p>\nThe table and field name specified here may be either a field handled by the parent (left outer join, inner join), or a field handled by this extender\n(right outer join, inner join). Implementations must examine their own and the parents&apos; table to determine which direction is requested.\n"
  syntax:
    content: void SetDynamicJoin(string tableName, string fieldName, ArchiveJoinType joinType)
    parameters:
    - id: tableName
      type: System.String
      description: Name of the foreign key table
    - id: fieldName
      type: System.String
      description: Name of the foreign key field
    - id: joinType
      type: SuperOffice.Data.ArchiveJoinType
      description: Type of join
    content.vb: Sub SetDynamicJoin(tableName As String, fieldName As String, joinType As ArchiveJoinType)
  overload: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin*
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IArchiveProviderDynamicExtend, To>()
  nameWithType: EnumUtil.MapEnums<IArchiveProviderDynamicExtend, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IArchiveProviderDynamicExtend, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To)()
  name.vb: MapEnums(Of IArchiveProviderDynamicExtend, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IArchiveProviderDynamicExtend, To>
    nameWithType: EnumUtil.MapEnums<IArchiveProviderDynamicExtend, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IArchiveProviderDynamicExtend, To)
    nameWithType: EnumUtil.MapEnums(Of IArchiveProviderDynamicExtend, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IArchiveProviderDynamicExtend, To>()
  nameWithType: Converters.MapEnums<IArchiveProviderDynamicExtend, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To>()
  nameWithType.vb: Converters.MapEnums(Of IArchiveProviderDynamicExtend, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To)()
  name.vb: MapEnums(Of IArchiveProviderDynamicExtend, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IArchiveProviderDynamicExtend, To>
    nameWithType: Converters.MapEnums<IArchiveProviderDynamicExtend, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IArchiveProviderDynamicExtend, To)
    nameWithType: Converters.MapEnums(Of IArchiveProviderDynamicExtend, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin
  isExternal: true
  name: SetDynamicJoin
  nameWithType: IArchiveProviderDynamicExtend.SetDynamicJoin
  fullName: SuperOffice.CRM.ArchiveLists.IArchiveProviderDynamicExtend.SetDynamicJoin
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.ArchiveJoinType
  commentId: T:SuperOffice.Data.ArchiveJoinType
  parent: SuperOffice.Data
  isExternal: true
  name: ArchiveJoinType
  nameWithType: ArchiveJoinType
  fullName: SuperOffice.Data.ArchiveJoinType
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
