### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper
  commentId: T:SuperOffice.CRM.Ticket.TicketAlertHelper
  id: TicketAlertHelper
  parent: SuperOffice.CRM.Ticket
  children:
  - SuperOffice.CRM.Ticket.TicketAlertHelper.#ctor
  - SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync(SuperOffice.Data.TicketPriorityEscalateAction,SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync(System.Int32,System.Int16,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync(SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TicketAlertHelper
  nameWithType: TicketAlertHelper
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: 'public class TicketAlertHelper : Object'
    content.vb: >-
      Public Class TicketAlertHelper
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Ticket.TicketAlertHelper.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Ticket.TicketAlertHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Ticket.TicketAlertHelper)
  - SuperOffice.CRM.Ticket.TicketAlertHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Ticket.TicketAlertHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync(System.Int32,System.Int16,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync(System.Int32,System.Int16,System.Int32,System.Threading.CancellationToken)
  id: ComputeAlertTimeoutAsync(System.Int32,System.Int16,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketAlertHelper
  langs:
  - csharp
  - vb
  name: ComputeAlertTimeoutAsync(Int32, Int16, Int32, CancellationToken)
  nameWithType: TicketAlertHelper.ComputeAlertTimeoutAsync(Int32, Int16, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync(System.Int32, System.Int16, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nCalculates alert timeout based on ticket priority\n"
  syntax:
    content: public Task<DateTime> ComputeAlertTimeoutAsync(int priority, short alertLevel, int alertStop, CancellationToken cancellationToken = null)
    parameters:
    - id: priority
      type: System.Int32
      description: Ticket priority
    - id: alertLevel
      type: System.Int16
      description: Ticket alert level
    - id: alertStop
      type: System.Int32
      description: Ticket alert stop
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.DateTime}
      description: Calculated AlertTimeout
    content.vb: Public Function ComputeAlertTimeoutAsync(priority As Integer, alertLevel As Short, alertStop As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of DateTime)
  overload: SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync(SuperOffice.Data.TicketPriorityEscalateAction,SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync(SuperOffice.Data.TicketPriorityEscalateAction,SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  id: CheckEscalatingAsync(SuperOffice.Data.TicketPriorityEscalateAction,SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketAlertHelper
  langs:
  - csharp
  - vb
  name: CheckEscalatingAsync(TicketPriorityEscalateAction, TicketRow, CancellationToken)
  nameWithType: TicketAlertHelper.CheckEscalatingAsync(TicketPriorityEscalateAction, TicketRow, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync(SuperOffice.Data.TicketPriorityEscalateAction, SuperOffice.CRM.Rows.TicketRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nChecks and changes alert level, alert timeout\nThis method will check if the ticket should change its alert level based on the priority and action.\nIf it is to change, the alert level and alert timeout for the ticket will be updated.\n"
  syntax:
    content: public Task CheckEscalatingAsync(TicketPriorityEscalateAction action, TicketRow ticketRow, CancellationToken cancellationToken = null)
    parameters:
    - id: action
      type: SuperOffice.Data.TicketPriorityEscalateAction
      description: The action, which can be read, changed owner or new info
    - id: ticketRow
      type: SuperOffice.CRM.Rows.TicketRow
      description: Ticket&apos;s row object to check escalation for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CheckEscalatingAsync(action As TicketPriorityEscalateAction, ticketRow As TicketRow, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync(SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync(SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  id: StopEscalationAsync(SuperOffice.CRM.Rows.TicketRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.TicketAlertHelper
  langs:
  - csharp
  - vb
  name: StopEscalationAsync(TicketRow, CancellationToken)
  nameWithType: TicketAlertHelper.StopEscalationAsync(TicketRow, CancellationToken)
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync(SuperOffice.CRM.Rows.TicketRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  summary: "\nStops ticket escalation by reseting alert timeout\nThis method recalculates alert stop and resets alert timeout.\n"
  syntax:
    content: public Task StopEscalationAsync(TicketRow ticketRow, CancellationToken cancellationToken = null)
    parameters:
    - id: ticketRow
      type: SuperOffice.CRM.Rows.TicketRow
      description: Ticket&apos;s row object to stop escalation for
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StopEscalationAsync(ticketRow As TicketRow, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.#ctor
  commentId: M:SuperOffice.CRM.Ticket.TicketAlertHelper.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Ticket.TicketAlertHelper
  langs:
  - csharp
  - vb
  name: TicketAlertHelper()
  nameWithType: TicketAlertHelper.TicketAlertHelper()
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.TicketAlertHelper()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public TicketAlertHelper()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Ticket.TicketAlertHelper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Ticket
  commentId: N:SuperOffice.CRM.Ticket
  isExternal: true
  name: SuperOffice.CRM.Ticket
  nameWithType: SuperOffice.CRM.Ticket
  fullName: SuperOffice.CRM.Ticket
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketAlertHelper, To>()
  nameWithType: EnumUtil.MapEnums<TicketAlertHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.TicketAlertHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketAlertHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.TicketAlertHelper, To)()
  name.vb: MapEnums(Of TicketAlertHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketAlertHelper, To>
    nameWithType: EnumUtil.MapEnums<TicketAlertHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.TicketAlertHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketAlertHelper, To)
    nameWithType: EnumUtil.MapEnums(Of TicketAlertHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.TicketAlertHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Ticket.TicketAlertHelper)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TicketAlertHelper>(TicketAlertHelper)
  nameWithType: ObjectExtensions.AssignByReflection<TicketAlertHelper>(TicketAlertHelper)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Ticket.TicketAlertHelper>(SuperOffice.CRM.Ticket.TicketAlertHelper)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TicketAlertHelper)(TicketAlertHelper)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Ticket.TicketAlertHelper)(SuperOffice.CRM.Ticket.TicketAlertHelper)
  name.vb: AssignByReflection(Of TicketAlertHelper)(TicketAlertHelper)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TicketAlertHelper>
    nameWithType: ObjectExtensions.AssignByReflection<TicketAlertHelper>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Ticket.TicketAlertHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Ticket.TicketAlertHelper
    name: TicketAlertHelper
    nameWithType: TicketAlertHelper
    fullName: SuperOffice.CRM.Ticket.TicketAlertHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TicketAlertHelper)
    nameWithType: ObjectExtensions.AssignByReflection(Of TicketAlertHelper)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Ticket.TicketAlertHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Ticket.TicketAlertHelper
    name: TicketAlertHelper
    nameWithType: TicketAlertHelper
    fullName: SuperOffice.CRM.Ticket.TicketAlertHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TicketAlertHelper>()
  nameWithType: ObjectExtensions.GraphCopy<TicketAlertHelper>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Ticket.TicketAlertHelper>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TicketAlertHelper)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Ticket.TicketAlertHelper)()
  name.vb: GraphCopy(Of TicketAlertHelper)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TicketAlertHelper>
    nameWithType: ObjectExtensions.GraphCopy<TicketAlertHelper>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Ticket.TicketAlertHelper>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TicketAlertHelper)
    nameWithType: ObjectExtensions.GraphCopy(Of TicketAlertHelper)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Ticket.TicketAlertHelper)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketAlertHelper, To>()
  nameWithType: Converters.MapEnums<TicketAlertHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.TicketAlertHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketAlertHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.TicketAlertHelper, To)()
  name.vb: MapEnums(Of TicketAlertHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketAlertHelper, To>
    nameWithType: Converters.MapEnums<TicketAlertHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.TicketAlertHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketAlertHelper, To)
    nameWithType: Converters.MapEnums(Of TicketAlertHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.TicketAlertHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync
  isExternal: true
  name: ComputeAlertTimeoutAsync
  nameWithType: TicketAlertHelper.ComputeAlertTimeoutAsync
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.ComputeAlertTimeoutAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.DateTime}
  commentId: '!:System.Threading.Tasks.Task{System.DateTime}'
  definition: System.Threading.Tasks.Task`1
  name: Task<DateTime>
  nameWithType: Task<DateTime>
  fullName: System.Threading.Tasks.Task<System.DateTime>
  nameWithType.vb: Task(Of DateTime)
  fullName.vb: System.Threading.Tasks.Task(Of System.DateTime)
  name.vb: Task(Of DateTime)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync
  isExternal: true
  name: CheckEscalatingAsync
  nameWithType: TicketAlertHelper.CheckEscalatingAsync
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.CheckEscalatingAsync
- uid: SuperOffice.Data.TicketPriorityEscalateAction
  commentId: T:SuperOffice.Data.TicketPriorityEscalateAction
  parent: SuperOffice.Data
  isExternal: true
  name: TicketPriorityEscalateAction
  nameWithType: TicketPriorityEscalateAction
  fullName: SuperOffice.Data.TicketPriorityEscalateAction
- uid: SuperOffice.CRM.Rows.TicketRow
  commentId: T:SuperOffice.CRM.Rows.TicketRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketRow
  nameWithType: TicketRow
  fullName: SuperOffice.CRM.Rows.TicketRow
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync
  isExternal: true
  name: StopEscalationAsync
  nameWithType: TicketAlertHelper.StopEscalationAsync
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.StopEscalationAsync
- uid: SuperOffice.CRM.Ticket.TicketAlertHelper.#ctor*
  commentId: Overload:SuperOffice.CRM.Ticket.TicketAlertHelper.#ctor
  isExternal: true
  name: TicketAlertHelper
  nameWithType: TicketAlertHelper.TicketAlertHelper
  fullName: SuperOffice.CRM.Ticket.TicketAlertHelper.TicketAlertHelper
