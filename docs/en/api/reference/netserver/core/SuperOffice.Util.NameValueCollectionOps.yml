### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.NameValueCollectionOps
  commentId: T:SuperOffice.Util.NameValueCollectionOps
  id: NameValueCollectionOps
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection(System.String)
  - SuperOffice.Util.NameValueCollectionOps.CreateNameValueString(System.Collections.Specialized.NameValueCollection)
  langs:
  - csharp
  - vb
  name: NameValueCollectionOps
  nameWithType: NameValueCollectionOps
  fullName: SuperOffice.Util.NameValueCollectionOps
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static class NameValueCollectionOps
    content.vb: Public Module NameValueCollectionOps
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection(System.String)
  commentId: M:SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection(System.String)
  id: CreateNameValueCollection(System.String)
  parent: SuperOffice.Util.NameValueCollectionOps
  langs:
  - csharp
  - vb
  name: CreateNameValueCollection(String)
  nameWithType: NameValueCollectionOps.CreateNameValueCollection(String)
  fullName: SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nCreate a <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref> from a string in standard name/value format\n"
  remarks: "\nThe input string should be of the format key=value&amp;key2=value2 etc.  Duplicate keys are acceptable.\nAn empty or null input string will result in an empty (not null) return value.\n<p></p>\nThe System.Web.HttpUtility.ParseQueryString method is used for the parsing, so that URL-encoded \ndata values are handled correctly\n"
  syntax:
    content: public static NameValueCollection CreateNameValueCollection(string nameValueString)
    parameters:
    - id: nameValueString
      type: System.String
      description: Name/value input string
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: Equivalent collection
    content.vb: Public Shared Function CreateNameValueCollection(nameValueString As String) As NameValueCollection
  overload: SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.NameValueCollectionOps.CreateNameValueString(System.Collections.Specialized.NameValueCollection)
  commentId: M:SuperOffice.Util.NameValueCollectionOps.CreateNameValueString(System.Collections.Specialized.NameValueCollection)
  id: CreateNameValueString(System.Collections.Specialized.NameValueCollection)
  parent: SuperOffice.Util.NameValueCollectionOps
  langs:
  - csharp
  - vb
  name: CreateNameValueString(NameValueCollection)
  nameWithType: NameValueCollectionOps.CreateNameValueString(NameValueCollection)
  fullName: SuperOffice.Util.NameValueCollectionOps.CreateNameValueString(System.Collections.Specialized.NameValueCollection)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nCreate a name/value string from a <xref href=\"System.Collections.Specialized.NameValueCollection\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: "\nDuplicate keys in the incoming collection will result in duplicate keys in the output.\nAn empty or null input will return an empty (not null) string.\n<p></p>\nThe ToString() method of the NameValueCollection class CANNOT BE used to create the string. \nThe framework claims that Request.QueryString is a NameValueCollection, but at runtime, it&apos;s actually a System.Web.HttpValueCollection. \nThe difference is significant because HttpValueCollection.ToString() returns the URL-encoded raw query string, \nbut NameValueCollection.ToString() returns the default Object.ToString() result - \nin this case &quot;System.Collections.Specialized.NameValueCollection&quot;		\n<p></p>Thanks to http://dylanbeattie.blogspot.com/2008/12/mocking-querystring-collection-in.html for this\nlittle gem, which could otherwise do incredible damage. Fuck Microsoft for doing things like this.\n<p></p>\nWe urlencode the values, since they might contain ampersands that would then scupper us later on...\n"
  syntax:
    content: public static string CreateNameValueString(NameValueCollection nameValueCollection)
    parameters:
    - id: nameValueCollection
      type: System.Collections.Specialized.NameValueCollection
      description: Collection to be converted
    return:
      type: System.String
      description: Name/value string corresponding to the collection
    content.vb: Public Shared Function CreateNameValueString(nameValueCollection As NameValueCollection) As String
  overload: SuperOffice.Util.NameValueCollectionOps.CreateNameValueString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection*
  commentId: Overload:SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection
  isExternal: true
  name: CreateNameValueCollection
  nameWithType: NameValueCollectionOps.CreateNameValueCollection
  fullName: SuperOffice.Util.NameValueCollectionOps.CreateNameValueCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  isExternal: true
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: SuperOffice.Util.NameValueCollectionOps.CreateNameValueString*
  commentId: Overload:SuperOffice.Util.NameValueCollectionOps.CreateNameValueString
  isExternal: true
  name: CreateNameValueString
  nameWithType: NameValueCollectionOps.CreateNameValueString
  fullName: SuperOffice.Util.NameValueCollectionOps.CreateNameValueString
