### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  commentId: T:SuperOffice.CRM.Services.Implementation.ServiceLogContext
  id: ServiceLogContext
  parent: SuperOffice.CRM.Services.Implementation
  children:
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics(System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue(System.Object)
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion(System.Int32)
  langs:
  - csharp
  - vb
  name: ServiceLogContext
  nameWithType: ServiceLogContext
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: 'public class ServiceLogContext : Object, IDisposable'
    content.vb: >-
      Public Class ServiceLogContext
          Inherits Object
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  extensionMethods:
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Services.Implementation.ServiceLogContext.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString
  id: ToString
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ServiceLogContext.ToString()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation
  id: GetCrashInformation
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: GetCrashInformation()
  nameWithType: ServiceLogContext.GetCrashInformation()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public string GetCrashInformation()
    return:
      type: System.String
    content.vb: Public Function GetCrashInformation As String
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo
  id: GetEnvironmentInfo
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: GetEnvironmentInfo()
  nameWithType: ServiceLogContext.GetEnvironmentInfo()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public static string GetEnvironmentInfo()
    return:
      type: System.String
    content.vb: Public Shared Function GetEnvironmentInfo As String
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging
  id: GetSimplifiedParametersForLogging
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: GetSimplifiedParametersForLogging()
  nameWithType: ServiceLogContext.GetSimplifiedParametersForLogging()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public static List<ValueTuple<string, string>> GetSimplifiedParametersForLogging()
    return:
      type: System.Collections.Generic.List{System.ValueTuple{System.String,System.String}}
    content.vb: Public Shared Function GetSimplifiedParametersForLogging As List(Of ValueTuple(Of String, String))
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue(System.Object)
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue(System.Object)
  id: SetReturnValue(System.Object)
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: SetReturnValue(Object)
  nameWithType: ServiceLogContext.SetReturnValue(Object)
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue(System.Object)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public void SetReturnValue(object returnValue)
    parameters:
    - id: returnValue
      type: System.Object
    content.vb: Public Sub SetReturnValue(returnValue As Object)
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation(System.Int32,System.Int32)
  id: TrackThreadCreation(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: TrackThreadCreation(Int32, Int32)
  nameWithType: ServiceLogContext.TrackThreadCreation(Int32, Int32)
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation(System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public static void TrackThreadCreation(int parentThreadId, int childThreadId)
    parameters:
    - id: parentThreadId
      type: System.Int32
    - id: childThreadId
      type: System.Int32
    content.vb: Public Shared Sub TrackThreadCreation(parentThreadId As Integer, childThreadId As Integer)
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion(System.Int32)
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion(System.Int32)
  id: TrackThreadDeletion(System.Int32)
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: TrackThreadDeletion(Int32)
  nameWithType: ServiceLogContext.TrackThreadDeletion(Int32)
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion(System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public static void TrackThreadDeletion(int dyingThreadId)
    parameters:
    - id: dyingThreadId
      type: System.Int32
    content.vb: Public Shared Sub TrackThreadDeletion(dyingThreadId As Integer)
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo
  id: GetShorthandInfo
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: GetShorthandInfo()
  nameWithType: ServiceLogContext.GetShorthandInfo()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public static string GetShorthandInfo()
    return:
      type: System.String
    content.vb: Public Shared Function GetShorthandInfo As String
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState
  id: GetCurrentState
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: GetCurrentState()
  nameWithType: ServiceLogContext.GetCurrentState()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  summary: "\nReturn information about the currently executing services. Do not refactor to use IEnumerable/yield as we need to keep the lock time minimal.\n"
  syntax:
    content: public static ServiceLogData[] GetCurrentState()
    return:
      type: SuperOffice.CRM.Services.Implementation.ServiceLogData[]
    content.vb: Public Shared Function GetCurrentState As ServiceLogData()
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics(System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics(System.Int32,System.Int32,System.Int32)
  id: SetDbStatistics(System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: SetDbStatistics(Int32, Int32, Int32)
  nameWithType: ServiceLogContext.SetDbStatistics(Int32, Int32, Int32)
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public static void SetDbStatistics(int managedThreadId, int dbOps, int dbRows)
    parameters:
    - id: managedThreadId
      type: System.Int32
    - id: dbOps
      type: System.Int32
    - id: dbRows
      type: System.Int32
    content.vb: Public Shared Sub SetDbStatistics(managedThreadId As Integer, dbOps As Integer, dbRows As Integer)
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose
  commentId: M:SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose
  id: Dispose
  parent: SuperOffice.CRM.Services.Implementation.ServiceLogContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ServiceLogContext.Dispose()
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services.Implementation
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Services.Implementation
  commentId: N:SuperOffice.CRM.Services.Implementation
  isExternal: true
  name: SuperOffice.CRM.Services.Implementation
  nameWithType: SuperOffice.CRM.Services.Implementation
  fullName: SuperOffice.CRM.Services.Implementation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ServiceLogContext, To>()
  nameWithType: EnumUtil.MapEnums<ServiceLogContext, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.Implementation.ServiceLogContext, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ServiceLogContext, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.Implementation.ServiceLogContext, To)()
  name.vb: MapEnums(Of ServiceLogContext, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ServiceLogContext, To>
    nameWithType: EnumUtil.MapEnums<ServiceLogContext, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.Implementation.ServiceLogContext, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ServiceLogContext, To)
    nameWithType: EnumUtil.MapEnums(Of ServiceLogContext, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.Implementation.ServiceLogContext, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ServiceLogContext, To>()
  nameWithType: Converters.MapEnums<ServiceLogContext, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.Implementation.ServiceLogContext, To>()
  nameWithType.vb: Converters.MapEnums(Of ServiceLogContext, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.Implementation.ServiceLogContext, To)()
  name.vb: MapEnums(Of ServiceLogContext, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ServiceLogContext, To>
    nameWithType: Converters.MapEnums<ServiceLogContext, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.Implementation.ServiceLogContext, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ServiceLogContext, To)
    nameWithType: Converters.MapEnums(Of ServiceLogContext, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.Implementation.ServiceLogContext, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString
  isExternal: true
  name: ToString
  nameWithType: ServiceLogContext.ToString
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation
  isExternal: true
  name: GetCrashInformation
  nameWithType: ServiceLogContext.GetCrashInformation
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCrashInformation
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo
  isExternal: true
  name: GetEnvironmentInfo
  nameWithType: ServiceLogContext.GetEnvironmentInfo
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetEnvironmentInfo
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging
  isExternal: true
  name: GetSimplifiedParametersForLogging
  nameWithType: ServiceLogContext.GetSimplifiedParametersForLogging
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetSimplifiedParametersForLogging
- uid: System.Collections.Generic.List{System.ValueTuple{System.String,System.String}}
  commentId: '!:System.Collections.Generic.List{System.ValueTuple{System.String,System.String}}'
  definition: System.Collections.Generic.List`1
  name: List<ValueTuple<String, String>>
  nameWithType: List<ValueTuple<String, String>>
  fullName: System.Collections.Generic.List<System.ValueTuple<System.String, System.String>>
  nameWithType.vb: List(Of ValueTuple(Of String, String))
  fullName.vb: System.Collections.Generic.List(Of System.ValueTuple(Of System.String, System.String))
  name.vb: List(Of ValueTuple(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.ValueTuple`2
    name: ValueTuple
    nameWithType: ValueTuple
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue
  isExternal: true
  name: SetReturnValue
  nameWithType: ServiceLogContext.SetReturnValue
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetReturnValue
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation
  isExternal: true
  name: TrackThreadCreation
  nameWithType: ServiceLogContext.TrackThreadCreation
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadCreation
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion
  isExternal: true
  name: TrackThreadDeletion
  nameWithType: ServiceLogContext.TrackThreadDeletion
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.TrackThreadDeletion
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo
  isExternal: true
  name: GetShorthandInfo
  nameWithType: ServiceLogContext.GetShorthandInfo
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetShorthandInfo
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState
  isExternal: true
  name: GetCurrentState
  nameWithType: ServiceLogContext.GetCurrentState
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.GetCurrentState
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogData[]
  isExternal: true
  name: ServiceLogData[]
  nameWithType: ServiceLogData[]
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogData[]
  nameWithType.vb: ServiceLogData()
  fullName.vb: SuperOffice.CRM.Services.Implementation.ServiceLogData()
  name.vb: ServiceLogData()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Implementation.ServiceLogData
    name: ServiceLogData
    nameWithType: ServiceLogData
    fullName: SuperOffice.CRM.Services.Implementation.ServiceLogData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Implementation.ServiceLogData
    name: ServiceLogData
    nameWithType: ServiceLogData
    fullName: SuperOffice.CRM.Services.Implementation.ServiceLogData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics
  isExternal: true
  name: SetDbStatistics
  nameWithType: ServiceLogContext.SetDbStatistics
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.SetDbStatistics
- uid: SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose*
  commentId: Overload:SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose
  isExternal: true
  name: Dispose
  nameWithType: ServiceLogContext.Dispose
  fullName: SuperOffice.CRM.Services.Implementation.ServiceLogContext.Dispose
