### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Dictionary.SoRelationDetail
  commentId: T:SuperOffice.Data.Dictionary.SoRelationDetail
  id: SoRelationDetail
  parent: SuperOffice.Data.Dictionary
  children:
  - SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo(SuperOffice.Data.Dictionary.SoRelationDetail)
  - SuperOffice.Data.Dictionary.SoRelationDetail.Equals(SuperOffice.Data.Dictionary.SoRelationDetail)
  - SuperOffice.Data.Dictionary.SoRelationDetail.Equals(System.Object)
  - SuperOffice.Data.Dictionary.SoRelationDetail.Field
  - SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode
  - SuperOffice.Data.Dictionary.SoRelationDetail.op_Equality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  - SuperOffice.Data.Dictionary.SoRelationDetail.op_Inequality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  - SuperOffice.Data.Dictionary.SoRelationDetail.ToString
  - SuperOffice.Data.Dictionary.SoRelationDetail.Value
  langs:
  - csharp
  - vb
  name: SoRelationDetail
  nameWithType: SoRelationDetail
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nAdditional details about a relation containing a field and the value this field is required to have.\n"
  syntax:
    content: 'public sealed class SoRelationDetail : Object, IComparable<SoRelationDetail>, IEquatable<SoRelationDetail>'
    content.vb: >-
      Public NotInheritable Class SoRelationDetail
          Inherits Object
          Implements IComparable(Of SoRelationDetail), IEquatable(Of SoRelationDetail)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{SuperOffice.Data.Dictionary.SoRelationDetail}
  - System.IEquatable{SuperOffice.Data.Dictionary.SoRelationDetail}
  extensionMethods:
  - SuperOffice.Data.Dictionary.SoRelationDetail.EnumUtil.MapEnums``2
  - SuperOffice.Data.Dictionary.SoRelationDetail.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.op_Equality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.op_Equality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  id: op_Equality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: Equality(SoRelationDetail, SoRelationDetail)
  nameWithType: SoRelationDetail.Equality(SoRelationDetail, SoRelationDetail)
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Equality(SuperOffice.Data.Dictionary.SoRelationDetail, SuperOffice.Data.Dictionary.SoRelationDetail)
  type: Operator
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nCompare if two instances of SoRelationDetail are equal.\n"
  syntax:
    content: public static bool operator ==(SoRelationDetail v1, SoRelationDetail v2)
    parameters:
    - id: v1
      type: SuperOffice.Data.Dictionary.SoRelationDetail
      description: First instance to compare.
    - id: v2
      type: SuperOffice.Data.Dictionary.SoRelationDetail
      description: Second instance to compare.
    return:
      type: System.Boolean
      description: True if the instances are identical.
    content.vb: Public Shared Operator =(v1 As SoRelationDetail, v2 As SoRelationDetail) As Boolean
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.op_Inequality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.op_Inequality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  id: op_Inequality(SuperOffice.Data.Dictionary.SoRelationDetail,SuperOffice.Data.Dictionary.SoRelationDetail)
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: Inequality(SoRelationDetail, SoRelationDetail)
  nameWithType: SoRelationDetail.Inequality(SoRelationDetail, SoRelationDetail)
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Inequality(SuperOffice.Data.Dictionary.SoRelationDetail, SuperOffice.Data.Dictionary.SoRelationDetail)
  type: Operator
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nCompare if two instances of SoRelationDetail are different.\n"
  syntax:
    content: public static bool operator !=(SoRelationDetail v1, SoRelationDetail v2)
    parameters:
    - id: v1
      type: SuperOffice.Data.Dictionary.SoRelationDetail
      description: First instance to compare.
    - id: v2
      type: SuperOffice.Data.Dictionary.SoRelationDetail
      description: Second instance to compare.
    return:
      type: System.Boolean
      description: True if the instances are different.
    content.vb: Public Shared Operator <>(v1 As SoRelationDetail, v2 As SoRelationDetail) As Boolean
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode
  id: GetHashCode
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SoRelationDetail.GetHashCode()
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Equals(System.Object)
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.Equals(System.Object)
  id: Equals(System.Object)
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SoRelationDetail.Equals(Object)
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Equals(System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo(SuperOffice.Data.Dictionary.SoRelationDetail)
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo(SuperOffice.Data.Dictionary.SoRelationDetail)
  id: CompareTo(SuperOffice.Data.Dictionary.SoRelationDetail)
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: CompareTo(SoRelationDetail)
  nameWithType: SoRelationDetail.CompareTo(SoRelationDetail)
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo(SuperOffice.Data.Dictionary.SoRelationDetail)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nCompare used for sort.\n"
  syntax:
    content: public int CompareTo(SoRelationDetail other)
    parameters:
    - id: other
      type: SuperOffice.Data.Dictionary.SoRelationDetail
      description: Object to compare to.
    return:
      type: System.Int32
      description: 0 if the objects are the same.
    content.vb: Public Function CompareTo(other As SoRelationDetail) As Integer
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Equals(SuperOffice.Data.Dictionary.SoRelationDetail)
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.Equals(SuperOffice.Data.Dictionary.SoRelationDetail)
  id: Equals(SuperOffice.Data.Dictionary.SoRelationDetail)
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: Equals(SoRelationDetail)
  nameWithType: SoRelationDetail.Equals(SoRelationDetail)
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Equals(SuperOffice.Data.Dictionary.SoRelationDetail)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nCheck if this is the same as the other.\n"
  syntax:
    content: public bool Equals(SoRelationDetail other)
    parameters:
    - id: other
      type: SuperOffice.Data.Dictionary.SoRelationDetail
      description: Object to compare to.
    return:
      type: System.Boolean
      description: True if it is the same object.
    content.vb: Public Function Equals(other As SoRelationDetail) As Boolean
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.Equals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.ToString
  commentId: M:SuperOffice.Data.Dictionary.SoRelationDetail.ToString
  id: ToString
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoRelationDetail.ToString()
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Field
  commentId: P:SuperOffice.Data.Dictionary.SoRelationDetail.Field
  id: Field
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: SoRelationDetail.Field
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Field
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nField that is require to have a certain value.\n"
  syntax:
    content: public SoField Field { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoField
    content.vb: Public ReadOnly Property Field As SoField
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.Field*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Value
  commentId: P:SuperOffice.Data.Dictionary.SoRelationDetail.Value
  id: Value
  parent: SuperOffice.Data.Dictionary.SoRelationDetail
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SoRelationDetail.Value
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Value
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dictionary
  summary: "\nValue a field is required to have.\n"
  syntax:
    content: public int Value { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Value As Integer
  overload: SuperOffice.Data.Dictionary.SoRelationDetail.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{SuperOffice.Data.Dictionary.SoRelationDetail}
  commentId: '!:System.IComparable{SuperOffice.Data.Dictionary.SoRelationDetail}'
  definition: System.IComparable`1
  name: IComparable<SoRelationDetail>
  nameWithType: IComparable<SoRelationDetail>
  fullName: System.IComparable<SuperOffice.Data.Dictionary.SoRelationDetail>
  nameWithType.vb: IComparable(Of SoRelationDetail)
  fullName.vb: System.IComparable(Of SuperOffice.Data.Dictionary.SoRelationDetail)
  name.vb: IComparable(Of SoRelationDetail)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.Dictionary.SoRelationDetail
    name: SoRelationDetail
    nameWithType: SoRelationDetail
    fullName: SuperOffice.Data.Dictionary.SoRelationDetail
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.Dictionary.SoRelationDetail
    name: SoRelationDetail
    nameWithType: SoRelationDetail
    fullName: SuperOffice.Data.Dictionary.SoRelationDetail
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{SuperOffice.Data.Dictionary.SoRelationDetail}
  commentId: '!:System.IEquatable{SuperOffice.Data.Dictionary.SoRelationDetail}'
  definition: System.IEquatable`1
  name: IEquatable<SoRelationDetail>
  nameWithType: IEquatable<SoRelationDetail>
  fullName: System.IEquatable<SuperOffice.Data.Dictionary.SoRelationDetail>
  nameWithType.vb: IEquatable(Of SoRelationDetail)
  fullName.vb: System.IEquatable(Of SuperOffice.Data.Dictionary.SoRelationDetail)
  name.vb: IEquatable(Of SoRelationDetail)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.Dictionary.SoRelationDetail
    name: SoRelationDetail
    nameWithType: SoRelationDetail
    fullName: SuperOffice.Data.Dictionary.SoRelationDetail
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.Dictionary.SoRelationDetail
    name: SoRelationDetail
    nameWithType: SoRelationDetail
    fullName: SuperOffice.Data.Dictionary.SoRelationDetail
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoRelationDetail, To>()
  nameWithType: EnumUtil.MapEnums<SoRelationDetail, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Dictionary.SoRelationDetail, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoRelationDetail, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Dictionary.SoRelationDetail, To)()
  name.vb: MapEnums(Of SoRelationDetail, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoRelationDetail, To>
    nameWithType: EnumUtil.MapEnums<SoRelationDetail, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Dictionary.SoRelationDetail, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoRelationDetail, To)
    nameWithType: EnumUtil.MapEnums(Of SoRelationDetail, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Dictionary.SoRelationDetail, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoRelationDetail, To>()
  nameWithType: Converters.MapEnums<SoRelationDetail, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dictionary.SoRelationDetail, To>()
  nameWithType.vb: Converters.MapEnums(Of SoRelationDetail, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dictionary.SoRelationDetail, To)()
  name.vb: MapEnums(Of SoRelationDetail, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoRelationDetail, To>
    nameWithType: Converters.MapEnums<SoRelationDetail, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dictionary.SoRelationDetail, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoRelationDetail, To)
    nameWithType: Converters.MapEnums(Of SoRelationDetail, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dictionary.SoRelationDetail, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  isExternal: true
  name: IComparable<>
  nameWithType: IComparable<>
  fullName: System.IComparable<>
  nameWithType.vb: IComparable(Of )
  fullName.vb: System.IComparable(Of )
  name.vb: IComparable(Of )
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  isExternal: true
  name: IEquatable<>
  nameWithType: IEquatable<>
  fullName: System.IEquatable<>
  nameWithType.vb: IEquatable(Of )
  fullName.vb: System.IEquatable(Of )
  name.vb: IEquatable(Of )
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.op_Equality*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.op_Equality
  isExternal: true
  name: Equality
  nameWithType: SoRelationDetail.Equality
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Equality
- uid: SuperOffice.Data.Dictionary.SoRelationDetail
  commentId: T:SuperOffice.Data.Dictionary.SoRelationDetail
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoRelationDetail
  nameWithType: SoRelationDetail
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.op_Inequality*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.op_Inequality
  isExternal: true
  name: Inequality
  nameWithType: SoRelationDetail.Inequality
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Inequality
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode
  isExternal: true
  name: GetHashCode
  nameWithType: SoRelationDetail.GetHashCode
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Equals*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.Equals
  isExternal: true
  name: Equals
  nameWithType: SoRelationDetail.Equals
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Equals
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo
  isExternal: true
  name: CompareTo
  nameWithType: SoRelationDetail.CompareTo
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.CompareTo
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.ToString*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.ToString
  isExternal: true
  name: ToString
  nameWithType: SoRelationDetail.ToString
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Field*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.Field
  isExternal: true
  name: Field
  nameWithType: SoRelationDetail.Field
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Field
- uid: SuperOffice.Data.Dictionary.SoField
  commentId: T:SuperOffice.Data.Dictionary.SoField
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoField
  nameWithType: SoField
  fullName: SuperOffice.Data.Dictionary.SoField
- uid: SuperOffice.Data.Dictionary.SoRelationDetail.Value*
  commentId: Overload:SuperOffice.Data.Dictionary.SoRelationDetail.Value
  isExternal: true
  name: Value
  nameWithType: SoRelationDetail.Value
  fullName: SuperOffice.Data.Dictionary.SoRelationDetail.Value
