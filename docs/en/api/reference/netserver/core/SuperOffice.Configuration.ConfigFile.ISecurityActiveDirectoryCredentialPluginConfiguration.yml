### YamlMime:ManagedReference
items:
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  commentId: T:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  id: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  parent: SuperOffice.Configuration
  children:
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  langs:
  - csharp
  - vb
  name: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\n\nCreated in Database scope\n"
  syntax:
    content: public interface ISecurityActiveDirectoryCredentialPluginConfiguration
    content.vb: Public Interface ISecurityActiveDirectoryCredentialPluginConfiguration
  extensionMethods:
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.EnumUtil.MapEnums``2
  - SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  commentId: P:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  id: Domain
  parent: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\nName of the domain for authentication.  Default domain is used when nothing is provided.\n"
  remarks: "\nThe name of the domain or server for System.DirectoryServices.AccountManagement.ContextType.Domain context types, the machine name for System.DirectoryServices.AccountManagement.ContextType.Machine context types, or the name of the server and port hosting the System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory instance.\n"
  syntax:
    content: string Domain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Domain As String
  overload: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  commentId: P:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  id: Container
  parent: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\nThe container on the store to use as the root of the context. Default container is used when nothing is provided.\n"
  remarks: "\nAll queries are performed under this root.\n"
  syntax:
    content: string Container { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Container As String
  overload: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  commentId: P:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  id: User
  parent: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  langs:
  - csharp
  - vb
  name: User
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\nThe username used to connect to the store. If the username and password parameters are not configured, the default credentials of the current principal are used. Otherwise, both username and password must be configured, and the credentials they specify are used to connect to the store.\n"
  syntax:
    content: string User { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property User As String
  overload: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  commentId: P:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  id: Password
  parent: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\nThe password used to connect to the store.  <xref href=\"SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User\" data-throw-if-not-resolved=\"false\"></xref> for details.\n"
  syntax:
    content: string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Password As String
  overload: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  commentId: P:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  id: DisableIntegration
  parent: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  langs:
  - csharp
  - vb
  name: DisableIntegration
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\nDisable integration with Active Directory\n"
  syntax:
    content: bool DisableIntegration { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property DisableIntegration As Boolean
  overload: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  commentId: P:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  id: PriorityInternalAssociate
  parent: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration
  langs:
  - csharp
  - vb
  name: PriorityInternalAssociate
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Configuration
  summary: "\nPriority of the plugin for internal associates.\n"
  syntax:
    content: int PriorityInternalAssociate { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property PriorityInternalAssociate As Integer
  overload: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate*
  modifiers.csharp:
  - get
  - set
references:
- uid: SuperOffice.Configuration
  commentId: N:SuperOffice.Configuration
  isExternal: true
  name: SuperOffice.Configuration
  nameWithType: SuperOffice.Configuration
  fullName: SuperOffice.Configuration
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>()
  nameWithType: EnumUtil.MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)()
  name.vb: MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>
    nameWithType: EnumUtil.MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)
    nameWithType: EnumUtil.MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>()
  nameWithType: Converters.MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>()
  nameWithType.vb: Converters.MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)()
  name.vb: MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>
    nameWithType: Converters.MapEnums<ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)
    nameWithType: Converters.MapEnums(Of ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain*
  commentId: Overload:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  isExternal: true
  name: Domain
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Domain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container*
  commentId: Overload:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  isExternal: true
  name: Container
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Container
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User*
  commentId: Overload:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  isExternal: true
  name: User
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.User
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password*
  commentId: Overload:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  isExternal: true
  name: Password
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.Password
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration*
  commentId: Overload:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  isExternal: true
  name: DisableIntegration
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.DisableIntegration
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate*
  commentId: Overload:SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  isExternal: true
  name: PriorityInternalAssociate
  nameWithType: ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
  fullName: SuperOffice.Configuration.ConfigFile.ISecurityActiveDirectoryCredentialPluginConfiguration.PriorityInternalAssociate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
