### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter
  commentId: T:SuperOffice.CRM.Import.ProductToDictionaryConverter
  id: ProductToDictionaryConverter
  parent: SuperOffice.CRM.Import
  children:
  - SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  - SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(SuperOffice.CRM.Rows.ProductRow)
  - SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(System.String)
  - SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue(System.Object,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: ProductToDictionaryConverter
  nameWithType: ProductToDictionaryConverter
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nConverter methods for converting a contact entity to a dictionary\n"
  syntax:
    content: public static class ProductToDictionaryConverter
    content.vb: Public Module ProductToDictionaryConverter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: GetRelatedFieldValue(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: SuperOffice.CRM.Import.ProductToDictionaryConverter
  langs:
  - csharp
  - vb
  name: GetRelatedFieldValue(String, String, Dictionary<String, Object>)
  nameWithType: ProductToDictionaryConverter.GetRelatedFieldValue(String, String, Dictionary<String, Object>)
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue(System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nReturn the related field value in an array of dictionaries \n"
  syntax:
    content: public static object GetRelatedFieldValue(string relatedTableName, string relatedFieldName, Dictionary<string, object> entity)
    parameters:
    - id: relatedTableName
      type: System.String
    - id: relatedFieldName
      type: System.String
    - id: entity
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Object
    content.vb: Public Shared Function GetRelatedFieldValue(relatedTableName As String, relatedFieldName As String, entity As Dictionary(Of String, Object)) As Object
  overload: SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue*
  nameWithType.vb: ProductToDictionaryConverter.GetRelatedFieldValue(String, String, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue(System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: GetRelatedFieldValue(String, String, Dictionary(Of String, Object))
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue(System.Object,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue(System.Object,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  id: SetRelatedFieldValue(System.Object,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: SuperOffice.CRM.Import.ProductToDictionaryConverter
  langs:
  - csharp
  - vb
  name: SetRelatedFieldValue(Object, String, String, Dictionary<String, Object>)
  nameWithType: ProductToDictionaryConverter.SetRelatedFieldValue(Object, String, String, Dictionary<String, Object>)
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue(System.Object, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.Object>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nSets the related field value in an array of dictionarys\n"
  syntax:
    content: public static bool SetRelatedFieldValue(object value, string relatedTableName, string relatedFieldName, Dictionary<string, object> entity)
    parameters:
    - id: value
      type: System.Object
    - id: relatedTableName
      type: System.String
    - id: relatedFieldName
      type: System.String
    - id: entity
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Public Shared Function SetRelatedFieldValue(value As Object, relatedTableName As String, relatedFieldName As String, entity As Dictionary(Of String, Object)) As Boolean
  overload: SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue*
  nameWithType.vb: ProductToDictionaryConverter.SetRelatedFieldValue(Object, String, String, Dictionary(Of String, Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue(System.Object, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.Object))
  name.vb: SetRelatedFieldValue(Object, String, String, Dictionary(Of String, Object))
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(SuperOffice.CRM.Rows.ProductRow)
  commentId: M:SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(SuperOffice.CRM.Rows.ProductRow)
  id: ProductDictionary(SuperOffice.CRM.Rows.ProductRow)
  parent: SuperOffice.CRM.Import.ProductToDictionaryConverter
  langs:
  - csharp
  - vb
  name: ProductDictionary(ProductRow)
  nameWithType: ProductToDictionaryConverter.ProductDictionary(ProductRow)
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(SuperOffice.CRM.Rows.ProductRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nCreates a new product dictionary from the productRow\n"
  syntax:
    content: public static Dictionary<string, object> ProductDictionary(ProductRow product)
    parameters:
    - id: product
      type: SuperOffice.CRM.Rows.ProductRow
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: Product dictionary
    content.vb: Public Shared Function ProductDictionary(product As ProductRow) As Dictionary(Of String, Object)
  overload: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(System.String)
  commentId: M:SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(System.String)
  id: ProductDictionary(System.String)
  parent: SuperOffice.CRM.Import.ProductToDictionaryConverter
  langs:
  - csharp
  - vb
  name: ProductDictionary(String)
  nameWithType: ProductToDictionaryConverter.ProductDictionary(String)
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Import
  summary: "\nCreates a new product dictionary from the productRow\n"
  syntax:
    content: public static Dictionary<string, object> ProductDictionary(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: Product dictionary
    content.vb: Public Shared Function ProductDictionary(name As String) As Dictionary(Of String, Object)
  overload: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Import
  commentId: N:SuperOffice.CRM.Import
  isExternal: true
  name: SuperOffice.CRM.Import
  nameWithType: SuperOffice.CRM.Import
  fullName: SuperOffice.CRM.Import
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue*
  commentId: Overload:SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue
  isExternal: true
  name: GetRelatedFieldValue
  nameWithType: ProductToDictionaryConverter.GetRelatedFieldValue
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.GetRelatedFieldValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue*
  commentId: Overload:SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue
  isExternal: true
  name: SetRelatedFieldValue
  nameWithType: ProductToDictionaryConverter.SetRelatedFieldValue
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.SetRelatedFieldValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary*
  commentId: Overload:SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary
  isExternal: true
  name: ProductDictionary
  nameWithType: ProductToDictionaryConverter.ProductDictionary
  fullName: SuperOffice.CRM.Import.ProductToDictionaryConverter.ProductDictionary
- uid: SuperOffice.CRM.Rows.ProductRow
  commentId: T:SuperOffice.CRM.Rows.ProductRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ProductRow
  nameWithType: ProductRow
  fullName: SuperOffice.CRM.Rows.ProductRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
