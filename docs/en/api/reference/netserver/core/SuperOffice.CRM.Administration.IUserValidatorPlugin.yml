### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
  commentId: T:SuperOffice.CRM.Administration.IUserValidatorPlugin
  id: IUserValidatorPlugin
  parent: SuperOffice.CRM.Administration
  children:
  - SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  - SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  - SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  langs:
  - csharp
  - vb
  name: IUserValidatorPlugin
  nameWithType: IUserValidatorPlugin
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin
  type: Interface
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Plugin for validating user-names and passwords.
  remarks: These plugins are called in a chain.  If any plugin rejects a user-name or password, it is rejected.
  example: []
  syntax:
    content: public interface IUserValidatorPlugin
    content.vb: Public Interface IUserValidatorPlugin
  extensionMethods:
  - SuperOffice.CRM.Administration.IUserValidatorPlugin.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Administration.IUserValidatorPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  commentId: M:SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  id: IsAssociateNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  parent: SuperOffice.CRM.Administration.IUserValidatorPlugin
  langs:
  - csharp
  - vb
  name: IsAssociateNameLegal(int, UserType, int, string, out string)
  nameWithType: IUserValidatorPlugin.IsAssociateNameLegal(int, UserType, int, string, out string)
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal(int, SuperOffice.License.UserType, int, string, out string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Check if an associate name is valid for a given user.
  example: []
  syntax:
    content: bool IsAssociateNameLegal(int associateId, UserType type, int personId, string associateName, out string reason)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate id of the user to check if the user name is valid for.
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: personId
      type: System.Int32
      description: Person id of the user (if the user is a named user).
    - id: associateName
      type: System.String
      description: Candidate for associate name.
    - id: reason
      type: System.String
      description: The reason for denying an associate name.
    return:
      type: System.Boolean
      description: Return true if the associate name is valid.
    content.vb: Function IsAssociateNameLegal(associateId As Integer, type As UserType, personId As Integer, associateName As String, reason As String) As Boolean
  overload: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal*
  nameWithType.vb: IUserValidatorPlugin.IsAssociateNameLegal(Integer, UserType, Integer, String, String)
  fullName.vb: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal(Integer, SuperOffice.License.UserType, Integer, String, String)
  name.vb: IsAssociateNameLegal(Integer, UserType, Integer, String, String)
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  commentId: M:SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  id: IsAssociateUserNameLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  parent: SuperOffice.CRM.Administration.IUserValidatorPlugin
  langs:
  - csharp
  - vb
  name: IsAssociateUserNameLegal(int, UserType, int, string, out string)
  nameWithType: IUserValidatorPlugin.IsAssociateUserNameLegal(int, UserType, int, string, out string)
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal(int, SuperOffice.License.UserType, int, string, out string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Check if an associate username is valid for a given user.
  example: []
  syntax:
    content: bool IsAssociateUserNameLegal(int associateId, UserType type, int personId, string associateUsername, out string reason)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate id of the user to check if the user name is valid for.
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: personId
      type: System.Int32
      description: Person id of the user (if the user is a named user).
    - id: associateUsername
      type: System.String
    - id: reason
      type: System.String
      description: The reason for denying a username.
    return:
      type: System.Boolean
      description: Return true if the associate username is valid.
    content.vb: Function IsAssociateUserNameLegal(associateId As Integer, type As UserType, personId As Integer, associateUsername As String, reason As String) As Boolean
  overload: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal*
  nameWithType.vb: IUserValidatorPlugin.IsAssociateUserNameLegal(Integer, UserType, Integer, String, String)
  fullName.vb: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal(Integer, SuperOffice.License.UserType, Integer, String, String)
  name.vb: IsAssociateUserNameLegal(Integer, UserType, Integer, String, String)
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  commentId: M:SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  id: IsPasswordLegal(System.Int32,SuperOffice.License.UserType,System.Int32,System.String,System.String@)
  parent: SuperOffice.CRM.Administration.IUserValidatorPlugin
  langs:
  - csharp
  - vb
  name: IsPasswordLegal(int, UserType, int, string, out string)
  nameWithType: IUserValidatorPlugin.IsPasswordLegal(int, UserType, int, string, out string)
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal(int, SuperOffice.License.UserType, int, string, out string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Chack if the password is valid.
  example: []
  syntax:
    content: bool IsPasswordLegal(int associateId, UserType type, int personId, string password, out string reason)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate id of the user to check if the user name is valid for.
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: personId
      type: System.Int32
      description: Person id of the user (if the user is a named user).
    - id: password
      type: System.String
      description: The password candidate
    - id: reason
      type: System.String
      description: The reason for denying the password
    return:
      type: System.Boolean
      description: Return true if the password is valid
    content.vb: Function IsPasswordLegal(associateId As Integer, type As UserType, personId As Integer, password As String, reason As String) As Boolean
  overload: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal*
  nameWithType.vb: IUserValidatorPlugin.IsPasswordLegal(Integer, UserType, Integer, String, String)
  fullName.vb: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal(Integer, SuperOffice.License.UserType, Integer, String, String)
  name.vb: IsPasswordLegal(Integer, UserType, Integer, String, String)
references:
- uid: SuperOffice.CRM.Administration
  commentId: N:SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Administration
  nameWithType: SuperOffice.CRM.Administration
  fullName: SuperOffice.CRM.Administration
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<IUserValidatorPlugin, To>(IUserValidatorPlugin)
  nameWithType: EnumUtil.MapEnums<IUserValidatorPlugin, To>(IUserValidatorPlugin)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Administration.IUserValidatorPlugin, To>(SuperOffice.CRM.Administration.IUserValidatorPlugin)
  nameWithType.vb: EnumUtil.MapEnums(Of IUserValidatorPlugin, To)(IUserValidatorPlugin)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Administration.IUserValidatorPlugin, To)(SuperOffice.CRM.Administration.IUserValidatorPlugin)
  name.vb: MapEnums(Of IUserValidatorPlugin, To)(IUserValidatorPlugin)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Administration.IUserValidatorPlugin)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Administration.IUserValidatorPlugin)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: )
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<IUserValidatorPlugin, To>(IUserValidatorPlugin)
  nameWithType: Converters.MapEnums<IUserValidatorPlugin, To>(IUserValidatorPlugin)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Administration.IUserValidatorPlugin, To>(SuperOffice.CRM.Administration.IUserValidatorPlugin)
  nameWithType.vb: Converters.MapEnums(Of IUserValidatorPlugin, To)(IUserValidatorPlugin)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Administration.IUserValidatorPlugin, To)(SuperOffice.CRM.Administration.IUserValidatorPlugin)
  name.vb: MapEnums(Of IUserValidatorPlugin, To)(IUserValidatorPlugin)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Administration.IUserValidatorPlugin)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Administration.IUserValidatorPlugin)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserValidatorPlugin
    name: IUserValidatorPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal*
  commentId: Overload:SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html#SuperOffice_CRM_Administration_IUserValidatorPlugin_IsAssociateNameLegal_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_String__
  name: IsAssociateNameLegal
  nameWithType: IUserValidatorPlugin.IsAssociateNameLegal
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateNameLegal
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal*
  commentId: Overload:SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html#SuperOffice_CRM_Administration_IUserValidatorPlugin_IsAssociateUserNameLegal_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_String__
  name: IsAssociateUserNameLegal
  nameWithType: IUserValidatorPlugin.IsAssociateUserNameLegal
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsAssociateUserNameLegal
- uid: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal*
  commentId: Overload:SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserValidatorPlugin.html#SuperOffice_CRM_Administration_IUserValidatorPlugin_IsPasswordLegal_System_Int32_SuperOffice_License_UserType_System_Int32_System_String_System_String__
  name: IsPasswordLegal
  nameWithType: IUserValidatorPlugin.IsPasswordLegal
  fullName: SuperOffice.CRM.Administration.IUserValidatorPlugin.IsPasswordLegal
