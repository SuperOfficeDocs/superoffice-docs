### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.TrackEventDispatcher
  commentId: T:SuperOffice.Util.TrackEventDispatcher
  id: TrackEventDispatcher
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.TrackEventDispatcher.#ctor(SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent},Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher})
  - SuperOffice.Util.TrackEventDispatcher.GetInstance
  - SuperOffice.Util.TrackEventDispatcher.TrackEvent(System.String)
  - SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: TrackEventDispatcher
  nameWithType: TrackEventDispatcher
  fullName: SuperOffice.Util.TrackEventDispatcher
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nSends events to Amplitude on a background thread\n"
  syntax:
    content: 'public class TrackEventDispatcher : Object, ITrackEventDispatcher'
    content.vb: >-
      Public Class TrackEventDispatcher
          Inherits Object
          Implements ITrackEventDispatcher
  inheritance:
  - System.Object
  implements:
  - SuperOffice.Util.ITrackEventDispatcher
  extensionMethods:
  - SuperOffice.Util.TrackEventDispatcher.EnumUtil.MapEnums``2
  - SuperOffice.Util.TrackEventDispatcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Util.TrackEventDispatcher.#ctor(SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent},Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher})
  commentId: M:SuperOffice.Util.TrackEventDispatcher.#ctor(SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent},Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher})
  id: '#ctor(SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent},Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher})'
  parent: SuperOffice.Util.TrackEventDispatcher
  langs:
  - csharp
  - vb
  name: TrackEventDispatcher(IAsyncQueue<TrackEvent>, ILogger<TrackEventDispatcher>)
  nameWithType: TrackEventDispatcher.TrackEventDispatcher(IAsyncQueue<TrackEvent>, ILogger<TrackEventDispatcher>)
  fullName: SuperOffice.Util.TrackEventDispatcher.TrackEventDispatcher(SuperOffice.Threading.IAsyncQueue<SuperOffice.Util.TrackEvent>, Microsoft.Extensions.Logging.ILogger<SuperOffice.Util.TrackEventDispatcher>)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public TrackEventDispatcher(IAsyncQueue<TrackEvent> queue, ILogger<TrackEventDispatcher> logger)
    parameters:
    - id: queue
      type: SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent}
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher}
    content.vb: Public Sub New(queue As IAsyncQueue(Of TrackEvent), logger As ILogger(Of TrackEventDispatcher))
  overload: SuperOffice.Util.TrackEventDispatcher.#ctor*
  nameWithType.vb: TrackEventDispatcher.TrackEventDispatcher(IAsyncQueue(Of TrackEvent), ILogger(Of TrackEventDispatcher))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Util.TrackEventDispatcher.TrackEventDispatcher(SuperOffice.Threading.IAsyncQueue(Of SuperOffice.Util.TrackEvent), Microsoft.Extensions.Logging.ILogger(Of SuperOffice.Util.TrackEventDispatcher))
  name.vb: TrackEventDispatcher(IAsyncQueue(Of TrackEvent), ILogger(Of TrackEventDispatcher))
- uid: SuperOffice.Util.TrackEventDispatcher.GetInstance
  commentId: M:SuperOffice.Util.TrackEventDispatcher.GetInstance
  id: GetInstance
  parent: SuperOffice.Util.TrackEventDispatcher
  langs:
  - csharp
  - vb
  name: GetInstance()
  nameWithType: TrackEventDispatcher.GetInstance()
  fullName: SuperOffice.Util.TrackEventDispatcher.GetInstance()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nReturns a tracker instance if the feature is enabled, and we are online\n"
  syntax:
    content: public static ITrackEventDispatcher GetInstance()
    return:
      type: SuperOffice.Util.ITrackEventDispatcher
      description: NULL if not online
    content.vb: Public Shared Function GetInstance As ITrackEventDispatcher
  overload: SuperOffice.Util.TrackEventDispatcher.GetInstance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  id: WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Util.TrackEventDispatcher
  langs:
  - csharp
  - vb
  name: WaitForTrackersToCompleteAsync(CancellationToken)
  nameWithType: TrackEventDispatcher.WaitForTrackersToCompleteAsync(CancellationToken)
  fullName: SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  syntax:
    content: public Task WaitForTrackersToCompleteAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function WaitForTrackersToCompleteAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync*
  implements:
  - SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Util.TrackEventDispatcher.TrackEvent(System.String)
  commentId: M:SuperOffice.Util.TrackEventDispatcher.TrackEvent(System.String)
  id: TrackEvent(System.String)
  parent: SuperOffice.Util.TrackEventDispatcher
  langs:
  - csharp
  - vb
  name: TrackEvent(String)
  nameWithType: TrackEventDispatcher.TrackEvent(String)
  fullName: SuperOffice.Util.TrackEventDispatcher.TrackEvent(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Util
  summary: "\nPosts event to background job that sends events to Amplitude and/or Userflow\n"
  syntax:
    content: public void TrackEvent(string trackEvent)
    parameters:
    - id: trackEvent
      type: System.String
      description: '&quot;sale-completed&quot; or &quot;sale-sold&quot; etc'
    content.vb: Public Sub TrackEvent(trackEvent As String)
  overload: SuperOffice.Util.TrackEventDispatcher.TrackEvent*
  implements:
  - SuperOffice.Util.ITrackEventDispatcher.TrackEvent(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Util.ITrackEventDispatcher
  commentId: T:SuperOffice.Util.ITrackEventDispatcher
  parent: SuperOffice.Util
  isExternal: true
  name: ITrackEventDispatcher
  nameWithType: ITrackEventDispatcher
  fullName: SuperOffice.Util.ITrackEventDispatcher
- uid: SuperOffice.Util.TrackEventDispatcher.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TrackEventDispatcher, To>()
  nameWithType: EnumUtil.MapEnums<TrackEventDispatcher, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Util.TrackEventDispatcher, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TrackEventDispatcher, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.TrackEventDispatcher, To)()
  name.vb: MapEnums(Of TrackEventDispatcher, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TrackEventDispatcher, To>
    nameWithType: EnumUtil.MapEnums<TrackEventDispatcher, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Util.TrackEventDispatcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TrackEventDispatcher, To)
    nameWithType: EnumUtil.MapEnums(Of TrackEventDispatcher, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Util.TrackEventDispatcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.TrackEventDispatcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TrackEventDispatcher, To>()
  nameWithType: Converters.MapEnums<TrackEventDispatcher, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.TrackEventDispatcher, To>()
  nameWithType.vb: Converters.MapEnums(Of TrackEventDispatcher, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.TrackEventDispatcher, To)()
  name.vb: MapEnums(Of TrackEventDispatcher, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TrackEventDispatcher, To>
    nameWithType: Converters.MapEnums<TrackEventDispatcher, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.TrackEventDispatcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TrackEventDispatcher, To)
    nameWithType: Converters.MapEnums(Of TrackEventDispatcher, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.TrackEventDispatcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Util.TrackEventDispatcher.#ctor*
  commentId: Overload:SuperOffice.Util.TrackEventDispatcher.#ctor
  isExternal: true
  name: TrackEventDispatcher
  nameWithType: TrackEventDispatcher.TrackEventDispatcher
  fullName: SuperOffice.Util.TrackEventDispatcher.TrackEventDispatcher
- uid: SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent}
  commentId: T:SuperOffice.Threading.IAsyncQueue{SuperOffice.Util.TrackEvent}
  parent: SuperOffice.Threading
  definition: SuperOffice.Threading.IAsyncQueue`1
  name: IAsyncQueue<TrackEvent>
  nameWithType: IAsyncQueue<TrackEvent>
  fullName: SuperOffice.Threading.IAsyncQueue<SuperOffice.Util.TrackEvent>
  nameWithType.vb: IAsyncQueue(Of TrackEvent)
  fullName.vb: SuperOffice.Threading.IAsyncQueue(Of SuperOffice.Util.TrackEvent)
  name.vb: IAsyncQueue(Of TrackEvent)
  spec.csharp:
  - uid: SuperOffice.Threading.IAsyncQueue`1
    name: IAsyncQueue
    nameWithType: IAsyncQueue
    fullName: SuperOffice.Threading.IAsyncQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Util.TrackEvent
    name: TrackEvent
    nameWithType: TrackEvent
    fullName: SuperOffice.Util.TrackEvent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Threading.IAsyncQueue`1
    name: IAsyncQueue
    nameWithType: IAsyncQueue
    fullName: SuperOffice.Threading.IAsyncQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Util.TrackEvent
    name: TrackEvent
    nameWithType: TrackEvent
    fullName: SuperOffice.Util.TrackEvent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher}
  commentId: '!:Microsoft.Extensions.Logging.ILogger{SuperOffice.Util.TrackEventDispatcher}'
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<TrackEventDispatcher>
  nameWithType: ILogger<TrackEventDispatcher>
  fullName: Microsoft.Extensions.Logging.ILogger<SuperOffice.Util.TrackEventDispatcher>
  nameWithType.vb: ILogger(Of TrackEventDispatcher)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of SuperOffice.Util.TrackEventDispatcher)
  name.vb: ILogger(Of TrackEventDispatcher)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Util.TrackEventDispatcher
    name: TrackEventDispatcher
    nameWithType: TrackEventDispatcher
    fullName: SuperOffice.Util.TrackEventDispatcher
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Util.TrackEventDispatcher
    name: TrackEventDispatcher
    nameWithType: TrackEventDispatcher
    fullName: SuperOffice.Util.TrackEventDispatcher
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading.IAsyncQueue`1
  commentId: T:SuperOffice.Threading.IAsyncQueue`1
  isExternal: true
  name: IAsyncQueue<TItem>
  nameWithType: IAsyncQueue<TItem>
  fullName: SuperOffice.Threading.IAsyncQueue<TItem>
  nameWithType.vb: IAsyncQueue(Of TItem)
  fullName.vb: SuperOffice.Threading.IAsyncQueue(Of TItem)
  name.vb: IAsyncQueue(Of TItem)
  spec.csharp:
  - uid: SuperOffice.Threading.IAsyncQueue`1
    name: IAsyncQueue
    nameWithType: IAsyncQueue
    fullName: SuperOffice.Threading.IAsyncQueue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Threading.IAsyncQueue`1
    name: IAsyncQueue
    nameWithType: IAsyncQueue
    fullName: SuperOffice.Threading.IAsyncQueue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
- uid: Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<>
  nameWithType: ILogger<>
  fullName: Microsoft.Extensions.Logging.ILogger<>
  nameWithType.vb: ILogger(Of )
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of )
  name.vb: ILogger(Of )
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.TrackEventDispatcher.GetInstance*
  commentId: Overload:SuperOffice.Util.TrackEventDispatcher.GetInstance
  isExternal: true
  name: GetInstance
  nameWithType: TrackEventDispatcher.GetInstance
  fullName: SuperOffice.Util.TrackEventDispatcher.GetInstance
- uid: SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync*
  commentId: Overload:SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync
  isExternal: true
  name: WaitForTrackersToCompleteAsync
  nameWithType: TrackEventDispatcher.WaitForTrackersToCompleteAsync
  fullName: SuperOffice.Util.TrackEventDispatcher.WaitForTrackersToCompleteAsync
- uid: SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Util.ITrackEventDispatcher
  isExternal: true
  name: WaitForTrackersToCompleteAsync(CancellationToken)
  nameWithType: ITrackEventDispatcher.WaitForTrackersToCompleteAsync(CancellationToken)
  fullName: SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
    name: WaitForTrackersToCompleteAsync
    nameWithType: ITrackEventDispatcher.WaitForTrackersToCompleteAsync
    fullName: SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync(System.Threading.CancellationToken)
    name: WaitForTrackersToCompleteAsync
    nameWithType: ITrackEventDispatcher.WaitForTrackersToCompleteAsync
    fullName: SuperOffice.Util.ITrackEventDispatcher.WaitForTrackersToCompleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Util.TrackEventDispatcher.TrackEvent*
  commentId: Overload:SuperOffice.Util.TrackEventDispatcher.TrackEvent
  isExternal: true
  name: TrackEvent
  nameWithType: TrackEventDispatcher.TrackEvent
  fullName: SuperOffice.Util.TrackEventDispatcher.TrackEvent
- uid: SuperOffice.Util.ITrackEventDispatcher.TrackEvent(System.String)
  commentId: M:SuperOffice.Util.ITrackEventDispatcher.TrackEvent(System.String)
  parent: SuperOffice.Util.ITrackEventDispatcher
  isExternal: true
  name: TrackEvent(String)
  nameWithType: ITrackEventDispatcher.TrackEvent(String)
  fullName: SuperOffice.Util.ITrackEventDispatcher.TrackEvent(System.String)
  spec.csharp:
  - uid: SuperOffice.Util.ITrackEventDispatcher.TrackEvent(System.String)
    name: TrackEvent
    nameWithType: ITrackEventDispatcher.TrackEvent
    fullName: SuperOffice.Util.ITrackEventDispatcher.TrackEvent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ITrackEventDispatcher.TrackEvent(System.String)
    name: TrackEvent
    nameWithType: ITrackEventDispatcher.TrackEvent
    fullName: SuperOffice.Util.ITrackEventDispatcher.TrackEvent
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
