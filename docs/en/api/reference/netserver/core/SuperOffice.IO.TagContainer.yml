### YamlMime:ManagedReference
items:
- uid: SuperOffice.IO.TagContainer
  commentId: T:SuperOffice.IO.TagContainer
  id: TagContainer
  parent: SuperOffice.IO
  children:
  - SuperOffice.IO.TagContainer.#ctor
  - SuperOffice.IO.TagContainer._bInitiated
  - SuperOffice.IO.TagContainer.AddData(System.Object[])
  - SuperOffice.IO.TagContainer.ClearData
  - SuperOffice.IO.TagContainer.CurrentUiCulture
  - SuperOffice.IO.TagContainer.Data
  - SuperOffice.IO.TagContainer.GetData
  - SuperOffice.IO.TagContainer.GetValue(System.String)
  - SuperOffice.IO.TagContainer.Id
  - SuperOffice.IO.TagContainer.Init
  - SuperOffice.IO.TagContainer.IsTagInContext(System.String)
  - SuperOffice.IO.TagContainer.IsTagLegal(System.String)
  - SuperOffice.IO.TagContainer.RemoveCustomValue(System.String)
  - SuperOffice.IO.TagContainer.SetValue(System.String,System.String)
  langs:
  - csharp
  - vb
  name: TagContainer
  nameWithType: TagContainer
  fullName: SuperOffice.IO.TagContainer
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nBase class for classes exposing template tags.\n"
  syntax:
    content: public abstract class TagContainer
    content.vb: Public MustInherit Class TagContainer
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Globalization.AppointmentVariables
  - SuperOffice.CRM.Globalization.ContactTags
  - SuperOffice.CRM.Globalization.FadTags
  - SuperOffice.CRM.Globalization.FadTemplateVariables
  - SuperOffice.CRM.Globalization.PersonVariables
  - SuperOffice.CRM.Globalization.ProjectTags
  - SuperOffice.CRM.Globalization.SystemTags
  - SuperOffice.CRM.Globalization.TemplateVariables
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.IO.TagContainer.EnumUtil.MapEnums``2
  - SuperOffice.IO.TagContainer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.IO.TagContainer._bInitiated
  commentId: F:SuperOffice.IO.TagContainer._bInitiated
  id: _bInitiated
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: _bInitiated
  nameWithType: TagContainer._bInitiated
  fullName: SuperOffice.IO.TagContainer._bInitiated
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nState about the object has been initiated.  \nData (e.g. <xref href=\"SuperOffice.IO.TagContainer.AddData(System.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>) can only be added before initiation.\nCall base.Init() to set this value to true.\n"
  syntax:
    content: protected bool _bInitiated
    return:
      type: System.Boolean
    content.vb: Protected _bInitiated As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.IO.TagContainer.#ctor
  commentId: M:SuperOffice.IO.TagContainer.#ctor
  id: '#ctor'
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: TagContainer()
  nameWithType: TagContainer.TagContainer()
  fullName: SuperOffice.IO.TagContainer.TagContainer()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\n\n"
  syntax:
    content: protected TagContainer()
    content.vb: Protected Sub New
  overload: SuperOffice.IO.TagContainer.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.IO.TagContainer.AddData(System.Object[])
  commentId: M:SuperOffice.IO.TagContainer.AddData(System.Object[])
  id: AddData(System.Object[])
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: AddData(Object[])
  nameWithType: TagContainer.AddData(Object[])
  fullName: SuperOffice.IO.TagContainer.AddData(System.Object[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nAdd data to be used when retrieving template variables. Use when you have\n(possibly unsaved) Entity objects that you wish to pass in.\n"
  syntax:
    content: public virtual void AddData(params object[] data)
    parameters:
    - id: data
      type: System.Object[]
      description: >-
        Data to be used when retrieving template variables.

        For instance, Entity objects
    content.vb: Public Overridable Sub AddData(ParamArray data As Object())
  overload: SuperOffice.IO.TagContainer.AddData*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: "\nThrown if data is added after it has been used (e.g. through <xref href=\"SuperOffice.IO.TagContainer.GetValue(System.String)\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  nameWithType.vb: TagContainer.AddData(Object())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: SuperOffice.IO.TagContainer.AddData(System.Object())
  name.vb: AddData(Object())
- uid: SuperOffice.IO.TagContainer.GetData
  commentId: M:SuperOffice.IO.TagContainer.GetData
  id: GetData
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: GetData()
  nameWithType: TagContainer.GetData()
  fullName: SuperOffice.IO.TagContainer.GetData()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nGet cached data objects\n"
  syntax:
    content: public virtual object[] GetData()
    return:
      type: System.Object[]
      description: Array with all cached data objects
    content.vb: Public Overridable Function GetData As Object()
  overload: SuperOffice.IO.TagContainer.GetData*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.IO.TagContainer.ClearData
  commentId: M:SuperOffice.IO.TagContainer.ClearData
  id: ClearData
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: ClearData()
  nameWithType: TagContainer.ClearData()
  fullName: SuperOffice.IO.TagContainer.ClearData()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nClear cached data\n"
  syntax:
    content: public void ClearData()
    content.vb: Public Sub ClearData
  overload: SuperOffice.IO.TagContainer.ClearData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.IO.TagContainer.GetValue(System.String)
  commentId: M:SuperOffice.IO.TagContainer.GetValue(System.String)
  id: GetValue(System.String)
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: GetValue(String)
  nameWithType: TagContainer.GetValue(String)
  fullName: SuperOffice.IO.TagContainer.GetValue(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nGet a value for a tag.\n"
  syntax:
    content: public virtual string GetValue(string tag)
    parameters:
    - id: tag
      type: System.String
      description: Name of the tag.
    return:
      type: System.String
      description: Value of the tag.  An empty string (e.g. <xref href="System.String.Empty" data-throw-if-not-resolved="false"></xref>) is returned if there is no valid value.
    content.vb: Public Overridable Function GetValue(tag As String) As String
  overload: SuperOffice.IO.TagContainer.GetValue*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.IO.TagContainer.SetValue(System.String,System.String)
  commentId: M:SuperOffice.IO.TagContainer.SetValue(System.String,System.String)
  id: SetValue(System.String,System.String)
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: SetValue(String, String)
  nameWithType: TagContainer.SetValue(String, String)
  fullName: SuperOffice.IO.TagContainer.SetValue(System.String, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nAdd a custom tag/value pair\n"
  syntax:
    content: public void SetValue(string tag, string value)
    parameters:
    - id: tag
      type: System.String
      description: Name of the tag
    - id: value
      type: System.String
      description: Value of the tag
    content.vb: Public Sub SetValue(tag As String, value As String)
  overload: SuperOffice.IO.TagContainer.SetValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.IO.TagContainer.RemoveCustomValue(System.String)
  commentId: M:SuperOffice.IO.TagContainer.RemoveCustomValue(System.String)
  id: RemoveCustomValue(System.String)
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: RemoveCustomValue(String)
  nameWithType: TagContainer.RemoveCustomValue(String)
  fullName: SuperOffice.IO.TagContainer.RemoveCustomValue(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nRemove an existing custom tag\n"
  syntax:
    content: public void RemoveCustomValue(string tag)
    parameters:
    - id: tag
      type: System.String
    content.vb: Public Sub RemoveCustomValue(tag As String)
  overload: SuperOffice.IO.TagContainer.RemoveCustomValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.IO.TagContainer.IsTagLegal(System.String)
  commentId: M:SuperOffice.IO.TagContainer.IsTagLegal(System.String)
  id: IsTagLegal(System.String)
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: IsTagLegal(String)
  nameWithType: TagContainer.IsTagLegal(String)
  fullName: SuperOffice.IO.TagContainer.IsTagLegal(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nIs this a legal tag?\n"
  syntax:
    content: public virtual bool IsTagLegal(string tag)
    parameters:
    - id: tag
      type: System.String
      description: Name of the tag.
    return:
      type: System.Boolean
      description: True is returned if this is a legal tag.
    content.vb: Public Overridable Function IsTagLegal(tag As String) As Boolean
  overload: SuperOffice.IO.TagContainer.IsTagLegal*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.IO.TagContainer.IsTagInContext(System.String)
  commentId: M:SuperOffice.IO.TagContainer.IsTagInContext(System.String)
  id: IsTagInContext(System.String)
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: IsTagInContext(String)
  nameWithType: TagContainer.IsTagInContext(String)
  fullName: SuperOffice.IO.TagContainer.IsTagInContext(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nIs this a valid tag in the given context.  If there are no current sale, \nthere are no valid tags for sale.\n"
  syntax:
    content: public virtual bool IsTagInContext(string tag)
    parameters:
    - id: tag
      type: System.String
      description: theName of the tag.
    return:
      type: System.Boolean
      description: True if  tag is valid in hte given context.
    content.vb: Public Overridable Function IsTagInContext(tag As String) As Boolean
  overload: SuperOffice.IO.TagContainer.IsTagInContext*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.IO.TagContainer.Init
  commentId: M:SuperOffice.IO.TagContainer.Init
  id: Init
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: TagContainer.Init()
  fullName: SuperOffice.IO.TagContainer.Init()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nSet the object in an initaited state.  This means that no data can be added \n(e.g. <xref href=\"SuperOffice.IO.TagContainer.AddData(System.Object%5b%5d)\" data-throw-if-not-resolved=\"false\"></xref>) beyound this point.\n"
  syntax:
    content: protected virtual void Init()
    content.vb: Protected Overridable Sub Init
  overload: SuperOffice.IO.TagContainer.Init*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.IO.TagContainer.CurrentUiCulture
  commentId: P:SuperOffice.IO.TagContainer.CurrentUiCulture
  id: CurrentUiCulture
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: CurrentUiCulture
  nameWithType: TagContainer.CurrentUiCulture
  fullName: SuperOffice.IO.TagContainer.CurrentUiCulture
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nCurrent UI culture, this is currently the language code used in template processing\n"
  syntax:
    content: public string CurrentUiCulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CurrentUiCulture As String
  overload: SuperOffice.IO.TagContainer.CurrentUiCulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.IO.TagContainer.Id
  commentId: P:SuperOffice.IO.TagContainer.Id
  id: Id
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: TagContainer.Id
  fullName: SuperOffice.IO.TagContainer.Id
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nPrimary key of the \n"
  syntax:
    content: public abstract int Id { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property Id As Integer
  overload: SuperOffice.IO.TagContainer.Id*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: SuperOffice.IO.TagContainer.Data
  commentId: P:SuperOffice.IO.TagContainer.Data
  id: Data
  parent: SuperOffice.IO.TagContainer
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: TagContainer.Data
  fullName: SuperOffice.IO.TagContainer.Data
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: "\nRetrieve data that can be used when \n"
  syntax:
    content: protected object[] Data { get; }
    parameters: []
    return:
      type: System.Object[]
    content.vb: Protected ReadOnly Property Data As Object()
  overload: SuperOffice.IO.TagContainer.Data*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
references:
- uid: SuperOffice.IO
  commentId: N:SuperOffice.IO
  isExternal: true
  name: SuperOffice.IO
  nameWithType: SuperOffice.IO
  fullName: SuperOffice.IO
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.IO.TagContainer.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TagContainer, To>()
  nameWithType: EnumUtil.MapEnums<TagContainer, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.IO.TagContainer, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TagContainer, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.IO.TagContainer, To)()
  name.vb: MapEnums(Of TagContainer, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TagContainer, To>
    nameWithType: EnumUtil.MapEnums<TagContainer, To>
    fullName: EnumUtil.MapEnums<SuperOffice.IO.TagContainer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TagContainer, To)
    nameWithType: EnumUtil.MapEnums(Of TagContainer, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.IO.TagContainer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.IO.TagContainer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TagContainer, To>()
  nameWithType: Converters.MapEnums<TagContainer, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.IO.TagContainer, To>()
  nameWithType.vb: Converters.MapEnums(Of TagContainer, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.IO.TagContainer, To)()
  name.vb: MapEnums(Of TagContainer, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TagContainer, To>
    nameWithType: Converters.MapEnums<TagContainer, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.IO.TagContainer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TagContainer, To)
    nameWithType: Converters.MapEnums(Of TagContainer, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.IO.TagContainer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.IO.TagContainer.#ctor*
  commentId: Overload:SuperOffice.IO.TagContainer.#ctor
  isExternal: true
  name: TagContainer
  nameWithType: TagContainer.TagContainer
  fullName: SuperOffice.IO.TagContainer.TagContainer
- uid: SuperOffice.IO.TagContainer.AddData*
  commentId: Overload:SuperOffice.IO.TagContainer.AddData
  isExternal: true
  name: AddData
  nameWithType: TagContainer.AddData
  fullName: SuperOffice.IO.TagContainer.AddData
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.IO.TagContainer.GetData*
  commentId: Overload:SuperOffice.IO.TagContainer.GetData
  isExternal: true
  name: GetData
  nameWithType: TagContainer.GetData
  fullName: SuperOffice.IO.TagContainer.GetData
- uid: SuperOffice.IO.TagContainer.ClearData*
  commentId: Overload:SuperOffice.IO.TagContainer.ClearData
  isExternal: true
  name: ClearData
  nameWithType: TagContainer.ClearData
  fullName: SuperOffice.IO.TagContainer.ClearData
- uid: SuperOffice.IO.TagContainer.GetValue*
  commentId: Overload:SuperOffice.IO.TagContainer.GetValue
  isExternal: true
  name: GetValue
  nameWithType: TagContainer.GetValue
  fullName: SuperOffice.IO.TagContainer.GetValue
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.IO.TagContainer.SetValue*
  commentId: Overload:SuperOffice.IO.TagContainer.SetValue
  isExternal: true
  name: SetValue
  nameWithType: TagContainer.SetValue
  fullName: SuperOffice.IO.TagContainer.SetValue
- uid: SuperOffice.IO.TagContainer.RemoveCustomValue*
  commentId: Overload:SuperOffice.IO.TagContainer.RemoveCustomValue
  isExternal: true
  name: RemoveCustomValue
  nameWithType: TagContainer.RemoveCustomValue
  fullName: SuperOffice.IO.TagContainer.RemoveCustomValue
- uid: SuperOffice.IO.TagContainer.IsTagLegal*
  commentId: Overload:SuperOffice.IO.TagContainer.IsTagLegal
  isExternal: true
  name: IsTagLegal
  nameWithType: TagContainer.IsTagLegal
  fullName: SuperOffice.IO.TagContainer.IsTagLegal
- uid: SuperOffice.IO.TagContainer.IsTagInContext*
  commentId: Overload:SuperOffice.IO.TagContainer.IsTagInContext
  isExternal: true
  name: IsTagInContext
  nameWithType: TagContainer.IsTagInContext
  fullName: SuperOffice.IO.TagContainer.IsTagInContext
- uid: SuperOffice.IO.TagContainer.Init*
  commentId: Overload:SuperOffice.IO.TagContainer.Init
  isExternal: true
  name: Init
  nameWithType: TagContainer.Init
  fullName: SuperOffice.IO.TagContainer.Init
- uid: SuperOffice.IO.TagContainer.CurrentUiCulture*
  commentId: Overload:SuperOffice.IO.TagContainer.CurrentUiCulture
  isExternal: true
  name: CurrentUiCulture
  nameWithType: TagContainer.CurrentUiCulture
  fullName: SuperOffice.IO.TagContainer.CurrentUiCulture
- uid: SuperOffice.IO.TagContainer.Id*
  commentId: Overload:SuperOffice.IO.TagContainer.Id
  isExternal: true
  name: Id
  nameWithType: TagContainer.Id
  fullName: SuperOffice.IO.TagContainer.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.IO.TagContainer.Data*
  commentId: Overload:SuperOffice.IO.TagContainer.Data
  isExternal: true
  name: Data
  nameWithType: TagContainer.Data
  fullName: SuperOffice.IO.TagContainer.Data
