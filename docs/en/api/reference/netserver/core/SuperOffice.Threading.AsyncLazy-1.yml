### YamlMime:ManagedReference
items:
- uid: SuperOffice.Threading.AsyncLazy`1
  commentId: T:SuperOffice.Threading.AsyncLazy`1
  id: AsyncLazy`1
  parent: SuperOffice.Threading
  children:
  - SuperOffice.Threading.AsyncLazy`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}})
  - SuperOffice.Threading.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  - SuperOffice.Threading.AsyncLazy`1.GetValueAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: AsyncLazy<T>
  nameWithType: AsyncLazy<T>
  fullName: SuperOffice.Threading.AsyncLazy<T>
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Alternative to <xref href="System.Lazy%601" data-throw-if-not-resolved="false"></xref>. Simply wrapping our async tasks into a lazy value was

    not satisfactory, because 1) if it threw an exception inside the task, it would be permanently

    fixed to the lazy instance, and 2) it didn't allow us to pass a <xref href="System.Threading.CancellationToken" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public class AsyncLazy<T>
    typeParameters:
    - id: T
    content.vb: Public Class AsyncLazy(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Threading.AsyncLazy`1.EnumUtil.MapEnums``2
  - SuperOffice.Threading.AsyncLazy`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: AsyncLazy(Of T)
  fullName.vb: SuperOffice.Threading.AsyncLazy(Of T)
  name.vb: AsyncLazy(Of T)
- uid: SuperOffice.Threading.AsyncLazy`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}})
  commentId: M:SuperOffice.Threading.AsyncLazy`1.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}})
  id: '#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}})'
  parent: SuperOffice.Threading.AsyncLazy`1
  langs:
  - csharp
  - vb
  name: AsyncLazy(Func<CancellationToken, Task<T>>)
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<CancellationToken, Task<T>>)
  fullName: SuperOffice.Threading.AsyncLazy<T>.AsyncLazy(System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public AsyncLazy(Func<CancellationToken, Task<T>> valueTask)
    parameters:
    - id: valueTask
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{T}}}
    content.vb: Public Sub New(valueTask As Func(Of CancellationToken, Task(Of T)))
  overload: SuperOffice.Threading.AsyncLazy`1.#ctor*
  nameWithType.vb: AsyncLazy(Of T).New(Func(Of CancellationToken, Task(Of T)))
  fullName.vb: SuperOffice.Threading.AsyncLazy(Of T).New(System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T)))
  name.vb: New(Func(Of CancellationToken, Task(Of T)))
- uid: SuperOffice.Threading.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  commentId: M:SuperOffice.Threading.AsyncLazy`1.#ctor(System.Func{System.Threading.Tasks.Task{`0}})
  id: '#ctor(System.Func{System.Threading.Tasks.Task{`0}})'
  parent: SuperOffice.Threading.AsyncLazy`1
  langs:
  - csharp
  - vb
  name: AsyncLazy(Func<Task<T>>)
  nameWithType: AsyncLazy<T>.AsyncLazy(Func<Task<T>>)
  fullName: SuperOffice.Threading.AsyncLazy<T>.AsyncLazy(System.Func<System.Threading.Tasks.Task<T>>)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public AsyncLazy(Func<Task<T>> valueTask)
    parameters:
    - id: valueTask
      type: System.Func{System.Threading.Tasks.Task{{T}}}
    content.vb: Public Sub New(valueTask As Func(Of Task(Of T)))
  overload: SuperOffice.Threading.AsyncLazy`1.#ctor*
  nameWithType.vb: AsyncLazy(Of T).New(Func(Of Task(Of T)))
  fullName.vb: SuperOffice.Threading.AsyncLazy(Of T).New(System.Func(Of System.Threading.Tasks.Task(Of T)))
  name.vb: New(Func(Of Task(Of T)))
- uid: SuperOffice.Threading.AsyncLazy`1.GetValueAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Threading.AsyncLazy`1.GetValueAsync(System.Threading.CancellationToken)
  id: GetValueAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Threading.AsyncLazy`1
  langs:
  - csharp
  - vb
  name: GetValueAsync(CancellationToken)
  nameWithType: AsyncLazy<T>.GetValueAsync(CancellationToken)
  fullName: SuperOffice.Threading.AsyncLazy<T>.GetValueAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  syntax:
    content: public Task<T> GetValueAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{{T}}
    content.vb: Public Function GetValueAsync(cancellationToken As CancellationToken = Nothing) As Task(Of T)
  overload: SuperOffice.Threading.AsyncLazy`1.GetValueAsync*
  nameWithType.vb: AsyncLazy(Of T).GetValueAsync(CancellationToken)
  fullName.vb: SuperOffice.Threading.AsyncLazy(Of T).GetValueAsync(System.Threading.CancellationToken)
references:
- uid: System.Lazy`1
  commentId: T:System.Lazy`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  name: Lazy<T>
  nameWithType: Lazy<T>
  fullName: System.Lazy<T>
  nameWithType.vb: Lazy(Of T)
  fullName.vb: System.Lazy(Of T)
  name.vb: Lazy(Of T)
  spec.csharp:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Lazy`1
    name: Lazy
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.lazy-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Threading
    name: Threading
    isExternal: true
    href: SuperOffice.Threading.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Threading
    name: Threading
    isExternal: true
    href: SuperOffice.Threading.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Threading.AsyncLazy`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<AsyncLazy<T>, To>(AsyncLazy<T>)
  nameWithType: EnumUtil.MapEnums<AsyncLazy<T>, To>(AsyncLazy<T>)
  fullName: EnumUtil.MapEnums<SuperOffice.Threading.AsyncLazy<T>, To>(SuperOffice.Threading.AsyncLazy<T>)
  nameWithType.vb: EnumUtil.MapEnums(Of AsyncLazy(Of T), To)(AsyncLazy(Of T))
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Threading.AsyncLazy(Of T), To)(SuperOffice.Threading.AsyncLazy(Of T))
  name.vb: MapEnums(Of AsyncLazy(Of T), To)(AsyncLazy(Of T))
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Threading.AsyncLazy{`0})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Threading.AsyncLazy{`0})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: SuperOffice.Threading.AsyncLazy`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<AsyncLazy<T>, To>(AsyncLazy<T>)
  nameWithType: Converters.MapEnums<AsyncLazy<T>, To>(AsyncLazy<T>)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.AsyncLazy<T>, To>(SuperOffice.Threading.AsyncLazy<T>)
  nameWithType.vb: Converters.MapEnums(Of AsyncLazy(Of T), To)(AsyncLazy(Of T))
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.AsyncLazy(Of T), To)(SuperOffice.Threading.AsyncLazy(Of T))
  name.vb: MapEnums(Of AsyncLazy(Of T), To)(AsyncLazy(Of T))
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Threading.AsyncLazy{`0})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Threading.AsyncLazy{`0})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Threading.AsyncLazy`1
    name: AsyncLazy
    isExternal: true
    href: SuperOffice.Threading.AsyncLazy-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Threading.AsyncLazy`1.#ctor*
  commentId: Overload:SuperOffice.Threading.AsyncLazy`1.#ctor
  isExternal: true
  href: SuperOffice.Threading.AsyncLazy-1.html#SuperOffice_Threading_AsyncLazy_1__ctor_System_Func_System_Threading_CancellationToken_System_Threading_Tasks_Task__0___
  name: AsyncLazy
  nameWithType: AsyncLazy<T>.AsyncLazy
  fullName: SuperOffice.Threading.AsyncLazy<T>.AsyncLazy
  nameWithType.vb: AsyncLazy(Of T).New
  fullName.vb: SuperOffice.Threading.AsyncLazy(Of T).New
  name.vb: New
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{`0}}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<CancellationToken, Task<T>>
  nameWithType: Func<CancellationToken, Task<T>>
  fullName: System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>
  nameWithType.vb: Func(Of CancellationToken, Task(Of T))
  fullName.vb: System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T))
  name.vb: Func(Of CancellationToken, Task(Of T))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: ','
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.Func{System.Threading.Tasks.Task{{T}}}
  commentId: T:System.Func{System.Threading.Tasks.Task{`0}}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<Task<T>>
  nameWithType: Func<Task<T>>
  fullName: System.Func<System.Threading.Tasks.Task<T>>
  nameWithType.vb: Func(Of Task(Of T))
  fullName.vb: System.Func(Of System.Threading.Tasks.Task(Of T))
  name.vb: Func(Of Task(Of T))
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.Threading.AsyncLazy`1.GetValueAsync*
  commentId: Overload:SuperOffice.Threading.AsyncLazy`1.GetValueAsync
  isExternal: true
  href: SuperOffice.Threading.AsyncLazy-1.html#SuperOffice_Threading_AsyncLazy_1_GetValueAsync_System_Threading_CancellationToken_
  name: GetValueAsync
  nameWithType: AsyncLazy<T>.GetValueAsync
  fullName: SuperOffice.Threading.AsyncLazy<T>.GetValueAsync
  nameWithType.vb: AsyncLazy(Of T).GetValueAsync
  fullName.vb: SuperOffice.Threading.AsyncLazy(Of T).GetValueAsync
- uid: System.Threading.Tasks.Task{{T}}
  commentId: T:System.Threading.Tasks.Task{`0}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<T>
  nameWithType: Task<T>
  fullName: System.Threading.Tasks.Task<T>
  nameWithType.vb: Task(Of T)
  fullName.vb: System.Threading.Tasks.Task(Of T)
  name.vb: Task(Of T)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
