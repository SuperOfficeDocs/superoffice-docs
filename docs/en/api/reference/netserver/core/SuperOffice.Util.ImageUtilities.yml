### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.ImageUtilities
  commentId: T:SuperOffice.Util.ImageUtilities
  id: ImageUtilities
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.ImageUtilities.FitTo(System.Drawing.Image,System.Int32,System.Int32)
  - SuperOffice.Util.ImageUtilities.GetAspect(System.Int32,System.Int32)
  - SuperOffice.Util.ImageUtilities.GetBytes(System.Drawing.Image)
  - SuperOffice.Util.ImageUtilities.GetClearPixel(System.Drawing.Size)
  - SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String(System.String,System.String)
  - SuperOffice.Util.ImageUtilities.GetIntersectionRectangle(System.Drawing.Size,System.Drawing.Size,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  - SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.FallbackStrategy,System.Func{System.Drawing.Image},System.Boolean,System.Drawing.Color)
  - SuperOffice.Util.ImageUtilities.GetSrNoPhoto(System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.String)
  - SuperOffice.Util.ImageUtilities.GetTextImage(System.Drawing.Size,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)
  - SuperOffice.Util.ImageUtilities.GetThumbnail(System.Drawing.Image,System.Int32,System.Int32)
  - SuperOffice.Util.ImageUtilities.GetThumbnail(System.String,System.Int32,System.Int32)
  - SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.IO.Stream,System.Int32,System.Int32)
  - SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.String,System.Int32,System.Int32)
  - SuperOffice.Util.ImageUtilities.Max(System.Drawing.Size,System.Drawing.Size)
  - SuperOffice.Util.ImageUtilities.Min(System.Drawing.Size,System.Drawing.Size)
  - SuperOffice.Util.ImageUtilities.ProductImageSize
  - SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync(System.String,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction(System.String)
  - SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  - SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image,System.Double,System.Double,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  - SuperOffice.Util.ImageUtilities.ThumbnailSize
  - SuperOffice.Util.ImageUtilities.TryFitImage(System.Byte[],System.Int32,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: ImageUtilities
  nameWithType: ImageUtilities
  fullName: SuperOffice.Util.ImageUtilities
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: 'public static class ImageUtilities : Object'
    content.vb: >-
      Public Module ImageUtilities
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Util.ImageUtilities.ThumbnailSize
  commentId: F:SuperOffice.Util.ImageUtilities.ThumbnailSize
  id: ThumbnailSize
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: ThumbnailSize
  nameWithType: ImageUtilities.ThumbnailSize
  fullName: SuperOffice.Util.ImageUtilities.ThumbnailSize
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nDefault thumbnail size\n"
  syntax:
    content: public const int ThumbnailSize = 150
    return:
      type: System.Int32
    content.vb: Public Const ThumbnailSize As Integer = 150
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.ImageUtilities.ProductImageSize
  commentId: F:SuperOffice.Util.ImageUtilities.ProductImageSize
  id: ProductImageSize
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: ProductImageSize
  nameWithType: ImageUtilities.ProductImageSize
  fullName: SuperOffice.Util.ImageUtilities.ProductImageSize
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nDefault max size for product images (largest edge)\n"
  syntax:
    content: public const int ProductImageSize = 2000
    return:
      type: System.Int32
    content.vb: Public Const ProductImageSize As Integer = 2000
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Util.ImageUtilities.FitTo(System.Drawing.Image,System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.ImageUtilities.FitTo(System.Drawing.Image,System.Int32,System.Int32)
  id: FitTo(System.Drawing.Image,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: FitTo(Image, Int32, Int32)
  nameWithType: ImageUtilities.FitTo(Image, Int32, Int32)
  fullName: SuperOffice.Util.ImageUtilities.FitTo(System.Drawing.Image, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nIf needed, resize the image to make it fit the given dimensions, while keeping the aspect ratio.\n<p></p>If you are creating thumbnails, please use the <xref href=\"SuperOffice.Util.ImageUtilities.GetThumbnail(System.Drawing.Image%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, which is more efficient for\nradical scaling of that sort.\n"
  syntax:
    content: public static Image FitTo(this Image image, int width, int height)
    parameters:
    - id: image
      type: System.Drawing.Image
      description: Source image
    - id: width
      type: System.Int32
      description: Maximum width
    - id: height
      type: System.Int32
      description: Maximum height
    return:
      type: System.Drawing.Image
      description: Possibly rescaled image
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FitTo(image As Image, width As Integer, height As Integer) As Image
  overload: SuperOffice.Util.ImageUtilities.FitTo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.IO.Stream,System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.IO.Stream,System.Int32,System.Int32)
  id: GetThumbnailImage(System.IO.Stream,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetThumbnailImage(Stream, Int32, Int32)
  nameWithType: ImageUtilities.GetThumbnailImage(Stream, Int32, Int32)
  fullName: SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.IO.Stream, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static Image GetThumbnailImage(this Stream input, int width = 150, int height = 150)
    parameters:
    - id: input
      type: System.IO.Stream
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: System.Drawing.Image
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetThumbnailImage(input As Stream, width As Integer = 150, height As Integer = 150) As Image
  overload: SuperOffice.Util.ImageUtilities.GetThumbnailImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetBytes(System.Drawing.Image)
  commentId: M:SuperOffice.Util.ImageUtilities.GetBytes(System.Drawing.Image)
  id: GetBytes(System.Drawing.Image)
  isExtensionMethod: true
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetBytes(Image)
  nameWithType: ImageUtilities.GetBytes(Image)
  fullName: SuperOffice.Util.ImageUtilities.GetBytes(System.Drawing.Image)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static byte[] GetBytes(this Image input)
    parameters:
    - id: input
      type: System.Drawing.Image
    return:
      type: System.Byte[]
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetBytes(input As Image) As Byte()
  overload: SuperOffice.Util.ImageUtilities.GetBytes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetThumbnail(System.Drawing.Image,System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.ImageUtilities.GetThumbnail(System.Drawing.Image,System.Int32,System.Int32)
  id: GetThumbnail(System.Drawing.Image,System.Int32,System.Int32)
  isExtensionMethod: true
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetThumbnail(Image, Int32, Int32)
  nameWithType: ImageUtilities.GetThumbnail(Image, Int32, Int32)
  fullName: SuperOffice.Util.ImageUtilities.GetThumbnail(System.Drawing.Image, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet a thumbnail of the incoming image; the quiality of the scaling is not quite as good as for\n<xref href=\"SuperOffice.Util.ImageUtilities.FitTo(System.Drawing.Image%2cSystem.Int32%2cSystem.Int32)\" data-throw-if-not-resolved=\"false\"></xref>, but is more efficient. Aspect ratio is maintained.\n"
  syntax:
    content: public static Image GetThumbnail(this Image image, int width = 150, int height = 150)
    parameters:
    - id: image
      type: System.Drawing.Image
      description: Source image
    - id: width
      type: System.Int32
      description: Maximum width, default <xref href="SuperOffice.Util.ImageUtilities.ThumbnailSize" data-throw-if-not-resolved="false"></xref>
    - id: height
      type: System.Int32
      description: Maximum height, default <xref href="SuperOffice.Util.ImageUtilities.ThumbnailSize" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Drawing.Image
      description: Thumbnail image
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetThumbnail(image As Image, width As Integer = 150, height As Integer = 150) As Image
  overload: SuperOffice.Util.ImageUtilities.GetThumbnail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetThumbnail(System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.ImageUtilities.GetThumbnail(System.String,System.Int32,System.Int32)
  id: GetThumbnail(System.String,System.Int32,System.Int32)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetThumbnail(String, Int32, Int32)
  nameWithType: ImageUtilities.GetThumbnail(String, Int32, Int32)
  fullName: SuperOffice.Util.ImageUtilities.GetThumbnail(System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet a thumbnail from a string-encoded image; output size is not guaranteed as short input strings\nwill cause an immediate return in the interest of performance (a string of less than 1500 can&apos;t be a big image!)\n"
  syntax:
    content: public static string GetThumbnail(string input, int width = 150, int height = 150)
    parameters:
    - id: input
      type: System.String
      description: Source image as base-64 encoded string
    - id: width
      type: System.Int32
      description: Maximum width, default <xref href="SuperOffice.Util.ImageUtilities.ThumbnailSize" data-throw-if-not-resolved="false"></xref>
    - id: height
      type: System.Int32
      description: Maximum height, default <xref href="SuperOffice.Util.ImageUtilities.ThumbnailSize" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.String
    content.vb: Public Shared Function GetThumbnail(input As String, width As Integer = 150, height As Integer = 150) As String
  overload: SuperOffice.Util.ImageUtilities.GetThumbnail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.String,System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.String,System.Int32,System.Int32)
  id: GetThumbnailImage(System.String,System.Int32,System.Int32)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetThumbnailImage(String, Int32, Int32)
  nameWithType: ImageUtilities.GetThumbnailImage(String, Int32, Int32)
  fullName: SuperOffice.Util.ImageUtilities.GetThumbnailImage(System.String, System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet a thumbnail from a string-encoded image; output size is not guaranteed as short input strings\nwill cause an immediate return in the interest of performance (a string of less than 1500 can&apos;t be a big image!)\n"
  syntax:
    content: public static Image GetThumbnailImage(string input, int width = 150, int height = 150)
    parameters:
    - id: input
      type: System.String
      description: Source image as base-64 encoded string
    - id: width
      type: System.Int32
      description: Maximum width, default <xref href="SuperOffice.Util.ImageUtilities.ThumbnailSize" data-throw-if-not-resolved="false"></xref>
    - id: height
      type: System.Int32
      description: Maximum height, default <xref href="SuperOffice.Util.ImageUtilities.ThumbnailSize" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Drawing.Image
    content.vb: Public Shared Function GetThumbnailImage(input As String, width As Integer = 150, height As Integer = 150) As Image
  overload: SuperOffice.Util.ImageUtilities.GetThumbnailImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync(System.String,System.Int32,System.Threading.CancellationToken)
  id: ResolveUrlOrBase64ImageAsync(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: ResolveUrlOrBase64ImageAsync(String, Int32, CancellationToken)
  nameWithType: ImageUtilities.ResolveUrlOrBase64ImageAsync(String, Int32, CancellationToken)
  fullName: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync(System.String, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nIf the input is a well-formed absolute URI, then assume that it leads to an image, and fetch that image; otherwise just pass the input straight out again.\nImages are scaled down to 1000/1000 if needed\n"
  remarks: "\nEventually this should do some caching, have a cache-retention policy, flush etc... but in this prototype version we just fetch the data directly\n"
  syntax:
    content: public static Task<string> ResolveUrlOrBase64ImageAsync(string input, int maxPixelSize = 2000, CancellationToken cancellationToken = null)
    parameters:
    - id: input
      type: System.String
      description: The input, which may be a base64 encoded image or a URL
    - id: maxPixelSize
      type: System.Int32
      description: >-
        Maximum image size, of longest side. Images larger than this in any direction

        will be shrunk (keeping the aspect ratio intact). Stretching will never occur.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function ResolveUrlOrBase64ImageAsync(input As String, maxPixelSize As Integer = 2000, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction(System.String)
  commentId: M:SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction(System.String)
  id: ResolveUrlOrBase64ImageNoReduction(System.String)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: ResolveUrlOrBase64ImageNoReduction(String)
  nameWithType: ImageUtilities.ResolveUrlOrBase64ImageNoReduction(String)
  fullName: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nIf the input is a well-formed absolute URI, then assume that it leads to an image, and fetch that image; otherwise just pass the input straight out again.\n"
  remarks: "\nEventually this should do some caching, have a cache-retention policy, flush etc... but in this prototype version we just fetch the data directly\n"
  syntax:
    content: public static string ResolveUrlOrBase64ImageNoReduction(string input)
    parameters:
    - id: input
      type: System.String
      description: The input, which may be a base64 encoded image or a URL
    return:
      type: System.String
    content.vb: Public Shared Function ResolveUrlOrBase64ImageNoReduction(input As String) As String
  overload: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String(System.String,System.String)
  commentId: M:SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String(System.String,System.String)
  id: GetImageTypeFromBase64String(System.String,System.String)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetImageTypeFromBase64String(String, String)
  nameWithType: ImageUtilities.GetImageTypeFromBase64String(String, String)
  fullName: SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String(System.String, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static string GetImageTypeFromBase64String(string base64String, string defaultType)
    parameters:
    - id: base64String
      type: System.String
    - id: defaultType
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetImageTypeFromBase64String(base64String As String, defaultType As String) As String
  overload: SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.TryFitImage(System.Byte[],System.Int32,System.Int32,System.Boolean)
  commentId: M:SuperOffice.Util.ImageUtilities.TryFitImage(System.Byte[],System.Int32,System.Int32,System.Boolean)
  id: TryFitImage(System.Byte[],System.Int32,System.Int32,System.Boolean)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: TryFitImage(Byte[], Int32, Int32, Boolean)
  nameWithType: ImageUtilities.TryFitImage(Byte[], Int32, Int32, Boolean)
  fullName: SuperOffice.Util.ImageUtilities.TryFitImage(System.Byte[], System.Int32, System.Int32, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static byte[] TryFitImage(byte[] imageData, int maxWidth, int maxHeight, bool alwaysTryConvert = false)
    parameters:
    - id: imageData
      type: System.Byte[]
    - id: maxWidth
      type: System.Int32
    - id: maxHeight
      type: System.Int32
    - id: alwaysTryConvert
      type: System.Boolean
    return:
      type: System.Byte[]
    content.vb: Public Shared Function TryFitImage(imageData As Byte(), maxWidth As Integer, maxHeight As Integer, alwaysTryConvert As Boolean = False) As Byte()
  overload: SuperOffice.Util.ImageUtilities.TryFitImage*
  nameWithType.vb: ImageUtilities.TryFitImage(Byte(), Int32, Int32, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Util.ImageUtilities.TryFitImage(System.Byte(), System.Int32, System.Int32, System.Boolean)
  name.vb: TryFitImage(Byte(), Int32, Int32, Boolean)
- uid: SuperOffice.Util.ImageUtilities.GetClearPixel(System.Drawing.Size)
  commentId: M:SuperOffice.Util.ImageUtilities.GetClearPixel(System.Drawing.Size)
  id: GetClearPixel(System.Drawing.Size)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetClearPixel(Size)
  nameWithType: ImageUtilities.GetClearPixel(Size)
  fullName: SuperOffice.Util.ImageUtilities.GetClearPixel(System.Drawing.Size)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet an image containing a transperant background\n"
  syntax:
    content: public static Image GetClearPixel(Size size)
    parameters:
    - id: size
      type: System.Drawing.Size
    return:
      type: System.Drawing.Image
    content.vb: Public Shared Function GetClearPixel(size As Size) As Image
  overload: SuperOffice.Util.ImageUtilities.GetClearPixel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetSrNoPhoto(System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.String)
  commentId: M:SuperOffice.Util.ImageUtilities.GetSrNoPhoto(System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.String)
  id: GetSrNoPhoto(System.Drawing.Size,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.String)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetSrNoPhoto(Size, Color, Color, Boolean, String)
  nameWithType: ImageUtilities.GetSrNoPhoto(Size, Color, Color, Boolean, String)
  fullName: SuperOffice.Util.ImageUtilities.GetSrNoPhoto(System.Drawing.Size, System.Drawing.Color, System.Drawing.Color, System.Boolean, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet an image containing the string represented by the resource value of SR_NO_PHOTO.\n"
  syntax:
    content: public static Image GetSrNoPhoto(Size size, Color bgColor, Color borderColor, bool hasBorder, string text = "NO PHOTO")
    parameters:
    - id: size
      type: System.Drawing.Size
      description: Size of the image.
    - id: bgColor
      type: System.Drawing.Color
      description: Background color for the image.
    - id: borderColor
      type: System.Drawing.Color
    - id: hasBorder
      type: System.Boolean
    - id: text
      type: System.String
    return:
      type: System.Drawing.Image
      description: Image containing the text represented by the resource value of SR_NO_PHOTO.
    content.vb: Public Shared Function GetSrNoPhoto(size As Size, bgColor As Color, borderColor As Color, hasBorder As Boolean, text As String = "NO PHOTO") As Image
  overload: SuperOffice.Util.ImageUtilities.GetSrNoPhoto*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetTextImage(System.Drawing.Size,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)
  commentId: M:SuperOffice.Util.ImageUtilities.GetTextImage(System.Drawing.Size,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)
  id: GetTextImage(System.Drawing.Size,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Boolean)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetTextImage(Size, String, Font, Color, Color, Color, Boolean)
  nameWithType: ImageUtilities.GetTextImage(Size, String, Font, Color, Color, Color, Boolean)
  fullName: SuperOffice.Util.ImageUtilities.GetTextImage(System.Drawing.Size, System.String, System.Drawing.Font, System.Drawing.Color, System.Drawing.Color, System.Drawing.Color, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet an image containing a text center both horizontally and vertically.\n"
  syntax:
    content: public static Image GetTextImage(Size size, string text, Font font, Color textColor, Color bgColor, Color borderColor, bool border)
    parameters:
    - id: size
      type: System.Drawing.Size
      description: Size of the image
    - id: text
      type: System.String
      description: Text to write in the image.
    - id: font
      type: System.Drawing.Font
      description: Font to use when writing the text.
    - id: textColor
      type: System.Drawing.Color
      description: The color to use when writing the text.
    - id: bgColor
      type: System.Drawing.Color
      description: The background color of the image.
    - id: borderColor
      type: System.Drawing.Color
    - id: border
      type: System.Boolean
    return:
      type: System.Drawing.Image
      description: An image containing a text center both horizontally and vertically.
    content.vb: Public Shared Function GetTextImage(size As Size, text As String, font As Font, textColor As Color, bgColor As Color, borderColor As Color, border As Boolean) As Image
  overload: SuperOffice.Util.ImageUtilities.GetTextImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.Max(System.Drawing.Size,System.Drawing.Size)
  commentId: M:SuperOffice.Util.ImageUtilities.Max(System.Drawing.Size,System.Drawing.Size)
  id: Max(System.Drawing.Size,System.Drawing.Size)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: Max(Size, Size)
  nameWithType: ImageUtilities.Max(Size, Size)
  fullName: SuperOffice.Util.ImageUtilities.Max(System.Drawing.Size, System.Drawing.Size)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet the minimum value for height and width induvidually.  Values of 0 are considered none-values.\n"
  syntax:
    content: public static Size Max(Size s1, Size s2)
    parameters:
    - id: s1
      type: System.Drawing.Size
      description: First size element
    - id: s2
      type: System.Drawing.Size
      description: Second size element
    return:
      type: System.Drawing.Size
      description: Resulting Size
    content.vb: Public Shared Function Max(s1 As Size, s2 As Size) As Size
  overload: SuperOffice.Util.ImageUtilities.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.Min(System.Drawing.Size,System.Drawing.Size)
  commentId: M:SuperOffice.Util.ImageUtilities.Min(System.Drawing.Size,System.Drawing.Size)
  id: Min(System.Drawing.Size,System.Drawing.Size)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: Min(Size, Size)
  nameWithType: ImageUtilities.Min(Size, Size)
  fullName: SuperOffice.Util.ImageUtilities.Min(System.Drawing.Size, System.Drawing.Size)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet the minimum value for height and width induvidually.  Values of 0 are considered none-values.\n"
  syntax:
    content: public static Size Min(Size s1, Size s2)
    parameters:
    - id: s1
      type: System.Drawing.Size
      description: First size element
    - id: s2
      type: System.Drawing.Size
      description: Second size element
    return:
      type: System.Drawing.Size
      description: Resulting Size
    content.vb: Public Shared Function Min(s1 As Size, s2 As Size) As Size
  overload: SuperOffice.Util.ImageUtilities.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.FallbackStrategy,System.Func{System.Drawing.Image},System.Boolean,System.Drawing.Color)
  commentId: M:SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.FallbackStrategy,System.Func{System.Drawing.Image},System.Boolean,System.Drawing.Color)
  id: GetScaledImageOrDefaultImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.FallbackStrategy,System.Func{System.Drawing.Image},System.Boolean,System.Drawing.Color)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetScaledImageOrDefaultImage(Image, ImageUtilities.ImageSize, ImageUtilities.FallbackStrategy, Func<Image>, Boolean, Color)
  nameWithType: ImageUtilities.GetScaledImageOrDefaultImage(Image, ImageUtilities.ImageSize, ImageUtilities.FallbackStrategy, Func<Image>, Boolean, Color)
  fullName: SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage(System.Drawing.Image, SuperOffice.Util.ImageUtilities.ImageSize, SuperOffice.Util.ImageUtilities.FallbackStrategy, System.Func<System.Drawing.Image>, System.Boolean, System.Drawing.Color)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet image or default image provided by a callback function.\n"
  remarks: "\nThis function does not access the database. Does not require a session. Entirely in-memory.\n"
  syntax:
    content: public static Image GetScaledImageOrDefaultImage(Image image, ImageUtilities.ImageSize imageSize, ImageUtilities.FallbackStrategy fallbackStrategy, Func<Image> defaultImageFunc, bool borderOnSrNoPhoto, Color borderColor)
    parameters:
    - id: image
      type: System.Drawing.Image
      description: The image - which may be null.
    - id: imageSize
      type: SuperOffice.Util.ImageUtilities.ImageSize
      description: Desired returned image size. 0 = no change
    - id: fallbackStrategy
      type: SuperOffice.Util.ImageUtilities.FallbackStrategy
      description: Strategy to use if there are no pictures available. Null = return NULL value instead of a default or blank image.
    - id: defaultImageFunc
      type: System.Func{System.Drawing.Image}
      description: Returns a default image when called. NULL means no default image -- get a transparent bitmap instead.
    - id: borderOnSrNoPhoto
      type: System.Boolean
      description: Should there be a border on the image created if the SR_NO_PHOTO is used.
    - id: borderColor
      type: System.Drawing.Color
    return:
      type: System.Drawing.Image
      description: Scaled Image or scaled default/fallback image, or blank transparent image.
    content.vb: Public Shared Function GetScaledImageOrDefaultImage(image As Image, imageSize As ImageUtilities.ImageSize, fallbackStrategy As ImageUtilities.FallbackStrategy, defaultImageFunc As Func(Of Image), borderOnSrNoPhoto As Boolean, borderColor As Color) As Image
  overload: SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage*
  nameWithType.vb: ImageUtilities.GetScaledImageOrDefaultImage(Image, ImageUtilities.ImageSize, ImageUtilities.FallbackStrategy, Func(Of Image), Boolean, Color)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage(System.Drawing.Image, SuperOffice.Util.ImageUtilities.ImageSize, SuperOffice.Util.ImageUtilities.FallbackStrategy, System.Func(Of System.Drawing.Image), System.Boolean, System.Drawing.Color)
  name.vb: GetScaledImageOrDefaultImage(Image, ImageUtilities.ImageSize, ImageUtilities.FallbackStrategy, Func(Of Image), Boolean, Color)
- uid: SuperOffice.Util.ImageUtilities.GetAspect(System.Int32,System.Int32)
  commentId: M:SuperOffice.Util.ImageUtilities.GetAspect(System.Int32,System.Int32)
  id: GetAspect(System.Int32,System.Int32)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetAspect(Int32, Int32)
  nameWithType: ImageUtilities.GetAspect(Int32, Int32)
  fullName: SuperOffice.Util.ImageUtilities.GetAspect(System.Int32, System.Int32)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet the aspect of an image.\n"
  syntax:
    content: public static double GetAspect(int width, int height)
    parameters:
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    return:
      type: System.Double
      description: 'Aspect for an image (width/height). 1 is a squere. '
    content.vb: Public Shared Function GetAspect(width As Integer, height As Integer) As Double
  overload: SuperOffice.Util.ImageUtilities.GetAspect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.GetIntersectionRectangle(System.Drawing.Size,System.Drawing.Size,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  commentId: M:SuperOffice.Util.ImageUtilities.GetIntersectionRectangle(System.Drawing.Size,System.Drawing.Size,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  id: GetIntersectionRectangle(System.Drawing.Size,System.Drawing.Size,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: GetIntersectionRectangle(Size, Size, ImageUtilities.VerticalAlignment)
  nameWithType: ImageUtilities.GetIntersectionRectangle(Size, Size, ImageUtilities.VerticalAlignment)
  fullName: SuperOffice.Util.ImageUtilities.GetIntersectionRectangle(System.Drawing.Size, System.Drawing.Size, SuperOffice.Util.ImageUtilities.VerticalAlignment)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nGet the Rectangle in the destination that is covered by the source.  \nThe arguments represents the size of two rectangles that are centered on top of each other.\n"
  syntax:
    content: public static Rectangle GetIntersectionRectangle(Size destination, Size source, ImageUtilities.VerticalAlignment align)
    parameters:
    - id: destination
      type: System.Drawing.Size
      description: Size of the destination rectangle.
    - id: source
      type: System.Drawing.Size
      description: Size of the source rectangle
    - id: align
      type: SuperOffice.Util.ImageUtilities.VerticalAlignment
    return:
      type: System.Drawing.Rectangle
      description: Rectangle in the destination that is covered by the source.
    content.vb: Public Shared Function GetIntersectionRectangle(destination As Size, source As Size, align As ImageUtilities.VerticalAlignment) As Rectangle
  overload: SuperOffice.Util.ImageUtilities.GetIntersectionRectangle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image,System.Double,System.Double,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  commentId: M:SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image,System.Double,System.Double,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  id: ScaleImage(System.Drawing.Image,System.Double,System.Double,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: ScaleImage(Image, Double, Double, Size, Size, Color, ImageUtilities.VerticalAlignment)
  nameWithType: ImageUtilities.ScaleImage(Image, Double, Double, Size, Size, Color, ImageUtilities.VerticalAlignment)
  fullName: SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image, System.Double, System.Double, System.Drawing.Size, System.Drawing.Size, System.Drawing.Color, SuperOffice.Util.ImageUtilities.VerticalAlignment)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nScale an image\n"
  syntax:
    content: public static Image ScaleImage(Image image, double scaleX, double scaleY, Size minSize, Size maxSize, Color fillColor, ImageUtilities.VerticalAlignment align)
    parameters:
    - id: image
      type: System.Drawing.Image
      description: The Image to scale.
    - id: scaleX
      type: System.Double
      description: Scaling vector for the x (width) axis.  values below 1 means shrinking.
    - id: scaleY
      type: System.Double
      description: Scaling vector for the y (height) axis.  values below 1 means shrinking.
    - id: minSize
      type: System.Drawing.Size
      description: Minimum size of the picture.
    - id: maxSize
      type: System.Drawing.Size
      description: Maximum size of the picture.
    - id: fillColor
      type: System.Drawing.Color
      description: The color to be used when filling out the minimum area not covered by the image.
    - id: align
      type: SuperOffice.Util.ImageUtilities.VerticalAlignment
    return:
      type: System.Drawing.Image
      description: The scaled image.
    content.vb: Public Shared Function ScaleImage(image As Image, scaleX As Double, scaleY As Double, minSize As Size, maxSize As Size, fillColor As Color, align As ImageUtilities.VerticalAlignment) As Image
  overload: SuperOffice.Util.ImageUtilities.ScaleImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  commentId: M:SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  id: ScaleImage(System.Drawing.Image,SuperOffice.Util.ImageUtilities.ImageSize,SuperOffice.Util.ImageUtilities.VerticalAlignment)
  parent: SuperOffice.Util.ImageUtilities
  langs:
  - csharp
  - vb
  name: ScaleImage(Image, ImageUtilities.ImageSize, ImageUtilities.VerticalAlignment)
  nameWithType: ImageUtilities.ScaleImage(Image, ImageUtilities.ImageSize, ImageUtilities.VerticalAlignment)
  fullName: SuperOffice.Util.ImageUtilities.ScaleImage(System.Drawing.Image, SuperOffice.Util.ImageUtilities.ImageSize, SuperOffice.Util.ImageUtilities.VerticalAlignment)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nScale an image to comply with the <see cref=\"!:ImageDescription\"></see>\n"
  syntax:
    content: public static Image ScaleImage(Image image, ImageUtilities.ImageSize imageSize, ImageUtilities.VerticalAlignment align)
    parameters:
    - id: image
      type: System.Drawing.Image
      description: The image to scale.
    - id: imageSize
      type: SuperOffice.Util.ImageUtilities.ImageSize
      description: Description of the scaling.
    - id: align
      type: SuperOffice.Util.ImageUtilities.VerticalAlignment
    return:
      type: System.Drawing.Image
      description: The scaled image.
    content.vb: Public Shared Function ScaleImage(image As Image, imageSize As ImageUtilities.ImageSize, align As ImageUtilities.VerticalAlignment) As Image
  overload: SuperOffice.Util.ImageUtilities.ScaleImage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Util.ImageUtilities.FitTo*
  commentId: Overload:SuperOffice.Util.ImageUtilities.FitTo
  isExternal: true
  name: FitTo
  nameWithType: ImageUtilities.FitTo
  fullName: SuperOffice.Util.ImageUtilities.FitTo
- uid: System.Drawing.Image
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: SuperOffice.Util.ImageUtilities.GetThumbnailImage*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetThumbnailImage
  isExternal: true
  name: GetThumbnailImage
  nameWithType: ImageUtilities.GetThumbnailImage
  fullName: SuperOffice.Util.ImageUtilities.GetThumbnailImage
- uid: System.IO.Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: SuperOffice.Util.ImageUtilities.GetBytes*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetBytes
  isExternal: true
  name: GetBytes
  nameWithType: ImageUtilities.GetBytes
  fullName: SuperOffice.Util.ImageUtilities.GetBytes
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Util.ImageUtilities.GetThumbnail*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetThumbnail
  isExternal: true
  name: GetThumbnail
  nameWithType: ImageUtilities.GetThumbnail
  fullName: SuperOffice.Util.ImageUtilities.GetThumbnail
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync*
  commentId: Overload:SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync
  isExternal: true
  name: ResolveUrlOrBase64ImageAsync
  nameWithType: ImageUtilities.ResolveUrlOrBase64ImageAsync
  fullName: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction*
  commentId: Overload:SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction
  isExternal: true
  name: ResolveUrlOrBase64ImageNoReduction
  nameWithType: ImageUtilities.ResolveUrlOrBase64ImageNoReduction
  fullName: SuperOffice.Util.ImageUtilities.ResolveUrlOrBase64ImageNoReduction
- uid: SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String
  isExternal: true
  name: GetImageTypeFromBase64String
  nameWithType: ImageUtilities.GetImageTypeFromBase64String
  fullName: SuperOffice.Util.ImageUtilities.GetImageTypeFromBase64String
- uid: SuperOffice.Util.ImageUtilities.TryFitImage*
  commentId: Overload:SuperOffice.Util.ImageUtilities.TryFitImage
  isExternal: true
  name: TryFitImage
  nameWithType: ImageUtilities.TryFitImage
  fullName: SuperOffice.Util.ImageUtilities.TryFitImage
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Util.ImageUtilities.GetClearPixel*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetClearPixel
  isExternal: true
  name: GetClearPixel
  nameWithType: ImageUtilities.GetClearPixel
  fullName: SuperOffice.Util.ImageUtilities.GetClearPixel
- uid: System.Drawing.Size
  isExternal: true
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: SuperOffice.Util.ImageUtilities.GetSrNoPhoto*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetSrNoPhoto
  isExternal: true
  name: GetSrNoPhoto
  nameWithType: ImageUtilities.GetSrNoPhoto
  fullName: SuperOffice.Util.ImageUtilities.GetSrNoPhoto
- uid: System.Drawing.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: SuperOffice.Util.ImageUtilities.GetTextImage*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetTextImage
  isExternal: true
  name: GetTextImage
  nameWithType: ImageUtilities.GetTextImage
  fullName: SuperOffice.Util.ImageUtilities.GetTextImage
- uid: System.Drawing.Font
  commentId: '!:System.Drawing.Font'
  isExternal: true
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: SuperOffice.Util.ImageUtilities.Max*
  commentId: Overload:SuperOffice.Util.ImageUtilities.Max
  isExternal: true
  name: Max
  nameWithType: ImageUtilities.Max
  fullName: SuperOffice.Util.ImageUtilities.Max
- uid: SuperOffice.Util.ImageUtilities.Min*
  commentId: Overload:SuperOffice.Util.ImageUtilities.Min
  isExternal: true
  name: Min
  nameWithType: ImageUtilities.Min
  fullName: SuperOffice.Util.ImageUtilities.Min
- uid: SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage
  isExternal: true
  name: GetScaledImageOrDefaultImage
  nameWithType: ImageUtilities.GetScaledImageOrDefaultImage
  fullName: SuperOffice.Util.ImageUtilities.GetScaledImageOrDefaultImage
- uid: SuperOffice.Util.ImageUtilities.ImageSize
  commentId: T:SuperOffice.Util.ImageUtilities.ImageSize
  parent: SuperOffice.Util
  isExternal: true
  name: ImageUtilities.ImageSize
  nameWithType: ImageUtilities.ImageSize
  fullName: SuperOffice.Util.ImageUtilities.ImageSize
- uid: SuperOffice.Util.ImageUtilities.FallbackStrategy
  commentId: T:SuperOffice.Util.ImageUtilities.FallbackStrategy
  parent: SuperOffice.Util
  isExternal: true
  name: ImageUtilities.FallbackStrategy
  nameWithType: ImageUtilities.FallbackStrategy
  fullName: SuperOffice.Util.ImageUtilities.FallbackStrategy
- uid: System.Func{System.Drawing.Image}
  commentId: '!:System.Func{System.Drawing.Image}'
  definition: System.Func`1
  name: Func<Image>
  nameWithType: Func<Image>
  fullName: System.Func<System.Drawing.Image>
  nameWithType.vb: Func(Of Image)
  fullName.vb: System.Func(Of System.Drawing.Image)
  name.vb: Func(Of Image)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Drawing.Image
    name: Image
    nameWithType: Image
    fullName: System.Drawing.Image
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Drawing.Image
    name: Image
    nameWithType: Image
    fullName: System.Drawing.Image
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`1
  isExternal: true
  name: Func<>
  nameWithType: Func<>
  fullName: System.Func<>
  nameWithType.vb: Func(Of )
  fullName.vb: System.Func(Of )
  name.vb: Func(Of )
  spec.csharp:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ImageUtilities.GetAspect*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetAspect
  isExternal: true
  name: GetAspect
  nameWithType: ImageUtilities.GetAspect
  fullName: SuperOffice.Util.ImageUtilities.GetAspect
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SuperOffice.Util.ImageUtilities.GetIntersectionRectangle*
  commentId: Overload:SuperOffice.Util.ImageUtilities.GetIntersectionRectangle
  isExternal: true
  name: GetIntersectionRectangle
  nameWithType: ImageUtilities.GetIntersectionRectangle
  fullName: SuperOffice.Util.ImageUtilities.GetIntersectionRectangle
- uid: SuperOffice.Util.ImageUtilities.VerticalAlignment
  commentId: T:SuperOffice.Util.ImageUtilities.VerticalAlignment
  parent: SuperOffice.Util
  isExternal: true
  name: ImageUtilities.VerticalAlignment
  nameWithType: ImageUtilities.VerticalAlignment
  fullName: SuperOffice.Util.ImageUtilities.VerticalAlignment
- uid: System.Drawing.Rectangle
  commentId: '!:System.Drawing.Rectangle'
  isExternal: true
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: SuperOffice.Util.ImageUtilities.ScaleImage*
  commentId: Overload:SuperOffice.Util.ImageUtilities.ScaleImage
  isExternal: true
  name: ScaleImage
  nameWithType: ImageUtilities.ScaleImage
  fullName: SuperOffice.Util.ImageUtilities.ScaleImage
