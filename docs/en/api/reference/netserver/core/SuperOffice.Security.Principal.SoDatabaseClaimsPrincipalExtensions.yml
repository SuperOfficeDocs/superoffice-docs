### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  commentId: T:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  id: SoDatabaseClaimsPrincipalExtensions
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(System.Security.Claims.ClaimsPrincipal,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString(System.Security.Claims.ClaimsPrincipal)
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier(System.Security.Claims.ClaimsPrincipal)
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials(System.Security.Claims.ClaimsPrincipal)
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  - SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  langs:
  - csharp
  - vb
  name: SoDatabaseClaimsPrincipalExtensions
  nameWithType: SoDatabaseClaimsPrincipalExtensions
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static class SoDatabaseClaimsPrincipalExtensions
    content.vb: Public Module SoDatabaseClaimsPrincipalExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(System.Security.Claims.ClaimsPrincipal,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(System.Security.Claims.ClaimsPrincipal,System.String,System.Boolean,System.Threading.CancellationToken)
  id: GetAccessTokenAsync(System.Security.Claims.ClaimsPrincipal,System.String,System.Boolean,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: GetAccessTokenAsync(ClaimsPrincipal, string, bool, CancellationToken)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(ClaimsPrincipal, string, bool, CancellationToken)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(System.Security.Claims.ClaimsPrincipal, string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static Task<string> GetAccessTokenAsync(this ClaimsPrincipal claimsPrincipal, string applicationToken, bool includeCsSession, CancellationToken cancellationToken = default)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    - id: applicationToken
      type: System.String
    - id: includeCsSession
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetAccessTokenAsync(claimsPrincipal As ClaimsPrincipal, applicationToken As String, includeCsSession As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync*
  nameWithType.vb: SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(ClaimsPrincipal, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync(System.Security.Claims.ClaimsPrincipal, String, Boolean, System.Threading.CancellationToken)
  name.vb: GetAccessTokenAsync(ClaimsPrincipal, String, Boolean, CancellationToken)
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier(System.Security.Claims.ClaimsPrincipal)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier(System.Security.Claims.ClaimsPrincipal)
  id: GetPrincipalCarrier(System.Security.Claims.ClaimsPrincipal)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: GetPrincipalCarrier(ClaimsPrincipal)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier(ClaimsPrincipal)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier(System.Security.Claims.ClaimsPrincipal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static SoPrincipalCarrier GetPrincipalCarrier(this ClaimsPrincipal claimsPrincipal)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    return:
      type: SuperOffice.CRM.Services.SoPrincipalCarrier
    content.vb: Public Shared Function GetPrincipalCarrier(claimsPrincipal As ClaimsPrincipal) As SoPrincipalCarrier
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier*
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials(System.Security.Claims.ClaimsPrincipal)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials(System.Security.Claims.ClaimsPrincipal)
  id: GetSafeCredentials(System.Security.Claims.ClaimsPrincipal)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: GetSafeCredentials(ClaimsPrincipal)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials(ClaimsPrincipal)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials(System.Security.Claims.ClaimsPrincipal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static SoCredentials GetSafeCredentials(this ClaimsPrincipal claimsPrincipal)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    return:
      type: SuperOffice.Security.Principal.SoCredentials
    content.vb: Public Shared Function GetSafeCredentials(claimsPrincipal As ClaimsPrincipal) As SoCredentials
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials*
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  id: GetLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: GetLicense(ClaimsPrincipal, string)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetLicense(ClaimsPrincipal, string)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense(System.Security.Claims.ClaimsPrincipal, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static GrantedModuleLicense GetLicense(this ClaimsPrincipal claimsPrincipal, string fullName)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    - id: fullName
      type: System.String
    return:
      type: SuperOffice.CRM.Services.GrantedModuleLicense
    content.vb: Public Shared Function GetLicense(claimsPrincipal As ClaimsPrincipal, fullName As String) As GrantedModuleLicense
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense*
  nameWithType.vb: SoDatabaseClaimsPrincipalExtensions.GetLicense(ClaimsPrincipal, String)
  fullName.vb: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense(System.Security.Claims.ClaimsPrincipal, String)
  name.vb: GetLicense(ClaimsPrincipal, String)
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  id: HasLicense(System.Security.Claims.ClaimsPrincipal,System.String,System.String)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: HasLicense(ClaimsPrincipal, string, string)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.HasLicense(ClaimsPrincipal, string, string)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal, string, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static bool HasLicense(this ClaimsPrincipal claimsPrincipal, string moduleOwner, string licenseName)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    - id: moduleOwner
      type: System.String
    - id: licenseName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasLicense(claimsPrincipal As ClaimsPrincipal, moduleOwner As String, licenseName As String) As Boolean
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense*
  nameWithType.vb: SoDatabaseClaimsPrincipalExtensions.HasLicense(ClaimsPrincipal, String, String)
  fullName.vb: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal, String, String)
  name.vb: HasLicense(ClaimsPrincipal, String, String)
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString(System.Security.Claims.ClaimsPrincipal)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString(System.Security.Claims.ClaimsPrincipal)
  id: GetGrantedLicensesAsString(System.Security.Claims.ClaimsPrincipal)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: GetGrantedLicensesAsString(ClaimsPrincipal)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString(ClaimsPrincipal)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString(System.Security.Claims.ClaimsPrincipal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static string GetGrantedLicensesAsString(this ClaimsPrincipal claimsPrincipal)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    return:
      type: System.String
    content.vb: Public Shared Function GetGrantedLicensesAsString(claimsPrincipal As ClaimsPrincipal) As String
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString*
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  commentId: M:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  id: HasLicense(System.Security.Claims.ClaimsPrincipal,System.String)
  isExtensionMethod: true
  parent: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions
  langs:
  - csharp
  - vb
  name: HasLicense(ClaimsPrincipal, string)
  nameWithType: SoDatabaseClaimsPrincipalExtensions.HasLicense(ClaimsPrincipal, string)
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static bool HasLicense(this ClaimsPrincipal claimsPrincipal, string licenseName)
    parameters:
    - id: claimsPrincipal
      type: System.Security.Claims.ClaimsPrincipal
    - id: licenseName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasLicense(claimsPrincipal As ClaimsPrincipal, licenseName As String) As Boolean
  overload: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense*
  nameWithType.vb: SoDatabaseClaimsPrincipalExtensions.HasLicense(ClaimsPrincipal, String)
  fullName.vb: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense(System.Security.Claims.ClaimsPrincipal, String)
  name.vb: HasLicense(ClaimsPrincipal, String)
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync*
  commentId: Overload:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync
  isExternal: true
  href: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.html#SuperOffice_Security_Principal_SoDatabaseClaimsPrincipalExtensions_GetAccessTokenAsync_System_Security_Claims_ClaimsPrincipal_System_String_System_Boolean_System_Threading_CancellationToken_
  name: GetAccessTokenAsync
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetAccessTokenAsync
- uid: System.Security.Claims.ClaimsPrincipal
  commentId: T:System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.claims.claimsprincipal
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Security.Claims
  commentId: N:System.Security.Claims
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Claims
  nameWithType: System.Security.Claims
  fullName: System.Security.Claims
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Claims
    name: Claims
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Claims
    name: Claims
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier*
  commentId: Overload:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier
  isExternal: true
  href: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.html#SuperOffice_Security_Principal_SoDatabaseClaimsPrincipalExtensions_GetPrincipalCarrier_System_Security_Claims_ClaimsPrincipal_
  name: GetPrincipalCarrier
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetPrincipalCarrier
- uid: SuperOffice.CRM.Services.SoPrincipalCarrier
  commentId: T:SuperOffice.CRM.Services.SoPrincipalCarrier
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SoPrincipalCarrier.html
  name: SoPrincipalCarrier
  nameWithType: SoPrincipalCarrier
  fullName: SuperOffice.CRM.Services.SoPrincipalCarrier
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials*
  commentId: Overload:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials
  isExternal: true
  href: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.html#SuperOffice_Security_Principal_SoDatabaseClaimsPrincipalExtensions_GetSafeCredentials_System_Security_Claims_ClaimsPrincipal_
  name: GetSafeCredentials
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetSafeCredentials
- uid: SuperOffice.Security.Principal.SoCredentials
  commentId: T:SuperOffice.Security.Principal.SoCredentials
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoCredentials.html
  name: SoCredentials
  nameWithType: SoCredentials
  fullName: SuperOffice.Security.Principal.SoCredentials
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense*
  commentId: Overload:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense
  isExternal: true
  href: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.html#SuperOffice_Security_Principal_SoDatabaseClaimsPrincipalExtensions_GetLicense_System_Security_Claims_ClaimsPrincipal_System_String_
  name: GetLicense
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetLicense
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetLicense
- uid: SuperOffice.CRM.Services.GrantedModuleLicense
  commentId: T:SuperOffice.CRM.Services.GrantedModuleLicense
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.GrantedModuleLicense.html
  name: GrantedModuleLicense
  nameWithType: GrantedModuleLicense
  fullName: SuperOffice.CRM.Services.GrantedModuleLicense
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense*
  commentId: Overload:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense
  isExternal: true
  href: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.html#SuperOffice_Security_Principal_SoDatabaseClaimsPrincipalExtensions_HasLicense_System_Security_Claims_ClaimsPrincipal_System_String_System_String_
  name: HasLicense
  nameWithType: SoDatabaseClaimsPrincipalExtensions.HasLicense
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.HasLicense
- uid: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString*
  commentId: Overload:SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString
  isExternal: true
  href: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.html#SuperOffice_Security_Principal_SoDatabaseClaimsPrincipalExtensions_GetGrantedLicensesAsString_System_Security_Claims_ClaimsPrincipal_
  name: GetGrantedLicensesAsString
  nameWithType: SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString
  fullName: SuperOffice.Security.Principal.SoDatabaseClaimsPrincipalExtensions.GetGrantedLicensesAsString
