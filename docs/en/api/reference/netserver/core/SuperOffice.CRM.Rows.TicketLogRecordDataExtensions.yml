### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  commentId: T:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  id: TicketLogRecordDataExtensions
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo})
  - SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo})
  - SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TicketLogRecordData)
  - SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData})
  - SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TicketLogRow)
  langs:
  - csharp
  - vb
  name: TicketLogRecordDataExtensions
  nameWithType: TicketLogRecordDataExtensions
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nExtension methods to make it easy to fetch <xref href=\"SuperOffice.CRM.Rows.TicketLogRecordData\" data-throw-if-not-resolved=\"false\"></xref> objects from the database,\nusing the <see cref=\"!:TargetedSelect\"></see> infrastructure\n"
  syntax:
    content: 'public static class TicketLogRecordDataExtensions : Object'
    content.vb: >-
      Public Module TicketLogRecordDataExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo})
  commentId: M:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo})
  id: FromSelect(SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromSelect(TargetedSelect<TicketLogTableInfo>)
  nameWithType: TicketLogRecordDataExtensions.FromSelect(TargetedSelect<TicketLogTableInfo>)
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.TicketLogTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedSelect&lt;TicketLogTableInfo>, execute it and return an IEnumerable&lt;TicketLogRecordData> with the results\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                var result = s.FromSelect();</code></pre>
  syntax:
    content: public static IEnumerable<TicketLogRecordData> FromSelect(this TargetedSelect<TicketLogTableInfo> select)
    parameters:
    - id: select
      type: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromSelect(select As TargetedSelect(Of TicketLogTableInfo)) As IEnumerable(Of TicketLogRecordData)
  overload: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect*
  nameWithType.vb: TicketLogRecordDataExtensions.FromSelect(TargetedSelect(Of TicketLogTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect(SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.TicketLogTableInfo))
  name.vb: FromSelect(TargetedSelect(Of TicketLogTableInfo))
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo})
  commentId: M:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo})
  id: FromRecord(SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  langs:
  - csharp
  - vb
  name: FromRecord(TargetedDataRecord<TicketLogTableInfo>)
  nameWithType: TicketLogRecordDataExtensions.FromRecord(TargetedDataRecord<TicketLogTableInfo>)
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.TicketLogTableInfo>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFrom a TargetedDataRecord&lt;TicketLogTableInfo>, create and populate a <xref href=\"SuperOffice.CRM.Rows.TicketLogRecordData\" data-throw-if-not-resolved=\"false\"></xref> POCO object\n"
  example:
  - >-
    <pre><code>            var s = S.NewSelect&lt;DataRightTableInfo>( /* add meaningful restrictions here, or later */ );
                /* add joins, return fields etc. as you wish */
                s.ReturnFields.Add(s.Table.All);
                var result = s.Records().Select(r => new { TicketLogItem = r.FromRecord(), /* fetch other fields here */ });</code></pre>
  syntax:
    content: public static TicketLogRecordData FromRecord(this TargetedDataRecord<TicketLogTableInfo> record)
    parameters:
    - id: record
      type: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo}
    return:
      type: SuperOffice.CRM.Rows.TicketLogRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function FromRecord(record As TargetedDataRecord(Of TicketLogTableInfo)) As TicketLogRecordData
  overload: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord*
  nameWithType.vb: TicketLogRecordDataExtensions.FromRecord(TargetedDataRecord(Of TicketLogTableInfo))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord(SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.TicketLogTableInfo))
  name.vb: FromRecord(TargetedDataRecord(Of TicketLogTableInfo))
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TicketLogRecordData)
  commentId: M:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TicketLogRecordData)
  id: ToInsert(SuperOffice.CRM.Rows.TicketLogRecordData)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInsert(TicketLogRecordData)
  nameWithType: TicketLogRecordDataExtensions.ToInsert(TicketLogRecordData)
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert(SuperOffice.CRM.Rows.TicketLogRecordData)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static Insert ToInsert(this TicketLogRecordData record)
    parameters:
    - id: record
      type: SuperOffice.CRM.Rows.TicketLogRecordData
    return:
      type: SuperOffice.Data.SQL.Insert
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInsert(record As TicketLogRecordData) As Insert
  overload: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData})
  commentId: M:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData})
  id: ToInserts(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData})
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToInserts(IEnumerable<TicketLogRecordData>)
  nameWithType: TicketLogRecordDataExtensions.ToInserts(IEnumerable<TicketLogRecordData>)
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.TicketLogRecordData>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static IEnumerable<Insert> ToInserts(this IEnumerable<TicketLogRecordData> records)
    parameters:
    - id: records
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData}
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToInserts(records As IEnumerable(Of TicketLogRecordData)) As IEnumerable(Of Insert)
  overload: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts*
  nameWithType.vb: TicketLogRecordDataExtensions.ToInserts(IEnumerable(Of TicketLogRecordData))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.TicketLogRecordData))
  name.vb: ToInserts(IEnumerable(Of TicketLogRecordData))
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TicketLogRow)
  commentId: M:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TicketLogRow)
  id: ToRecordData(SuperOffice.CRM.Rows.TicketLogRow)
  isExtensionMethod: true
  parent: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions
  langs:
  - csharp
  - vb
  name: ToRecordData(TicketLogRow)
  nameWithType: TicketLogRecordDataExtensions.ToRecordData(TicketLogRow)
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData(SuperOffice.CRM.Rows.TicketLogRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static TicketLogRecordData ToRecordData(this TicketLogRow row)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.TicketLogRow
    return:
      type: SuperOffice.CRM.Rows.TicketLogRecordData
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToRecordData(row As TicketLogRow) As TicketLogRecordData
  overload: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect*
  commentId: Overload:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect
  isExternal: true
  name: FromSelect
  nameWithType: TicketLogRecordDataExtensions.FromSelect
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromSelect
- uid: SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedSelect{SuperOffice.CRM.Data.TicketLogTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedSelect`1
  name: TargetedSelect<TicketLogTableInfo>
  nameWithType: TargetedSelect<TicketLogTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<SuperOffice.CRM.Data.TicketLogTableInfo>
  nameWithType.vb: TargetedSelect(Of TicketLogTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of SuperOffice.CRM.Data.TicketLogTableInfo)
  name.vb: TargetedSelect(Of TicketLogTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketLogTableInfo
    name: TicketLogTableInfo
    nameWithType: TicketLogTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketLogTableInfo
    name: TicketLogTableInfo
    nameWithType: TicketLogTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.TicketLogRecordData}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TicketLogRecordData>
  nameWithType: IEnumerable<TicketLogRecordData>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.TicketLogRecordData>
  nameWithType.vb: IEnumerable(Of TicketLogRecordData)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.TicketLogRecordData)
  name.vb: IEnumerable(Of TicketLogRecordData)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.TicketLogRecordData
    name: TicketLogRecordData
    nameWithType: TicketLogRecordData
    fullName: SuperOffice.CRM.Rows.TicketLogRecordData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.TicketLogRecordData
    name: TicketLogRecordData
    nameWithType: TicketLogRecordData
    fullName: SuperOffice.CRM.Rows.TicketLogRecordData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedSelect`1
  commentId: T:SuperOffice.Data.SQL.TargetedSelect`1
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TargetedSelect<MainTableInfo>
  nameWithType: TargetedSelect<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedSelect<MainTableInfo>
  nameWithType.vb: TargetedSelect(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedSelect(Of MainTableInfo)
  name.vb: TargetedSelect(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedSelect`1
    name: TargetedSelect
    nameWithType: TargetedSelect
    fullName: SuperOffice.Data.SQL.TargetedSelect
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord*
  commentId: Overload:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord
  isExternal: true
  name: FromRecord
  nameWithType: TicketLogRecordDataExtensions.FromRecord
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.FromRecord
- uid: SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord{SuperOffice.CRM.Data.TicketLogTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedDataRecord`1
  name: TargetedDataRecord<TicketLogTableInfo>
  nameWithType: TargetedDataRecord<TicketLogTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<SuperOffice.CRM.Data.TicketLogTableInfo>
  nameWithType.vb: TargetedDataRecord(Of TicketLogTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of SuperOffice.CRM.Data.TicketLogTableInfo)
  name.vb: TargetedDataRecord(Of TicketLogTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketLogTableInfo
    name: TicketLogTableInfo
    nameWithType: TicketLogTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketLogTableInfo
    name: TicketLogTableInfo
    nameWithType: TicketLogTableInfo
    fullName: SuperOffice.CRM.Data.TicketLogTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketLogRecordData
  commentId: T:SuperOffice.CRM.Rows.TicketLogRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketLogRecordData
  nameWithType: TicketLogRecordData
  fullName: SuperOffice.CRM.Rows.TicketLogRecordData
- uid: SuperOffice.Data.SQL.TargetedDataRecord`1
  commentId: T:SuperOffice.Data.SQL.TargetedDataRecord`1
  isExternal: true
  name: TargetedDataRecord<MainTableInfo>
  nameWithType: TargetedDataRecord<MainTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedDataRecord<MainTableInfo>
  nameWithType.vb: TargetedDataRecord(Of MainTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedDataRecord(Of MainTableInfo)
  name.vb: TargetedDataRecord(Of MainTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedDataRecord`1
    name: TargetedDataRecord
    nameWithType: TargetedDataRecord
    fullName: SuperOffice.Data.SQL.TargetedDataRecord
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: MainTableInfo
    nameWithType: MainTableInfo
    fullName: MainTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert*
  commentId: Overload:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert
  isExternal: true
  name: ToInsert
  nameWithType: TicketLogRecordDataExtensions.ToInsert
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInsert
- uid: SuperOffice.Data.SQL.Insert
  commentId: T:SuperOffice.Data.SQL.Insert
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Insert
  nameWithType: Insert
  fullName: SuperOffice.Data.SQL.Insert
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts*
  commentId: Overload:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts
  isExternal: true
  name: ToInserts
  nameWithType: TicketLogRecordDataExtensions.ToInserts
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToInserts
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.Insert}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Insert>
  nameWithType: IEnumerable<Insert>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.Insert>
  nameWithType.vb: IEnumerable(Of Insert)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.Insert)
  name.vb: IEnumerable(Of Insert)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.Insert
    name: Insert
    nameWithType: Insert
    fullName: SuperOffice.Data.SQL.Insert
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData*
  commentId: Overload:SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData
  isExternal: true
  name: ToRecordData
  nameWithType: TicketLogRecordDataExtensions.ToRecordData
  fullName: SuperOffice.CRM.Rows.TicketLogRecordDataExtensions.ToRecordData
- uid: SuperOffice.CRM.Rows.TicketLogRow
  commentId: T:SuperOffice.CRM.Rows.TicketLogRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketLogRow
  nameWithType: TicketLogRow
  fullName: SuperOffice.CRM.Rows.TicketLogRow
