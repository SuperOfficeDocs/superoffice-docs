### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.AssociateResolver`1
  commentId: T:SuperOffice.Security.Principal.AssociateResolver`1
  id: AssociateResolver`1
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.AssociateResolver`1.#ctor
  - SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  - SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
  - SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  - SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  - SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  - SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
  - SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  - SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: AssociateResolver<TToken>
  nameWithType: AssociateResolver<TToken>
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: 'public abstract class AssociateResolver<TToken> : ISoIdentityResolver, IPlugin where TToken : SecurityToken'
    typeParameters:
    - id: TToken
    content.vb: >-
      Public MustInherit Class AssociateResolver(Of TToken As SecurityToken)
          Implements ISoIdentityResolver, IPlugin
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.Security.Principal.SoCredentialsIdentityResolver
  - SuperOffice.Security.Principal.SoImpersonationIdentityResolver
  - SuperOffice.Security.Principal.UserNameIdentityResolver
  - SuperOffice.Security.Principal.WindowsIdentityResolver
  implements:
  - SuperOffice.Security.ISoIdentityResolver
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.Principal.AssociateResolver`1.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.AssociateResolver`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: AssociateResolver(Of TToken)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken)
  name.vb: AssociateResolver(Of TToken)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  id: GetInfoAboutUser
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: GetInfoAboutUser()
  nameWithType: AssociateResolver<TToken>.GetInfoAboutUser()
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.GetInfoAboutUser()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static string GetInfoAboutUser()
    return:
      type: System.String
    content.vb: Public Shared Function GetInfoAboutUser As String
  overload: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser*
  nameWithType.vb: AssociateResolver(Of TToken).GetInfoAboutUser()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).GetInfoAboutUser()
- uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  id: UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo,System.Int32,SuperOffice.Data.SoConnection,System.DateTime)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  nameWithType: AssociateResolver<TToken>.UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo, System.Int32, SuperOffice.Data.SoConnection, System.DateTime)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: protected static void UpdateCredentialsLastUsed(CredentialsTableInfo cti, int credId, SoConnection dbConnection, DateTime validTo)
    parameters:
    - id: cti
      type: SuperOffice.CRM.Data.CredentialsTableInfo
    - id: credId
      type: System.Int32
    - id: dbConnection
      type: SuperOffice.Data.SoConnection
    - id: validTo
      type: System.DateTime
    content.vb: Protected Shared Sub UpdateCredentialsLastUsed(cti As CredentialsTableInfo, credId As Integer, dbConnection As SoConnection, validTo As Date)
  overload: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed*
  nameWithType.vb: AssociateResolver(Of TToken).UpdateCredentialsLastUsed(CredentialsTableInfo, Int32, SoConnection, DateTime)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateCredentialsLastUsed(SuperOffice.CRM.Data.CredentialsTableInfo, System.Int32, SuperOffice.Data.SoConnection, System.DateTime)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId(System.Int32,System.Int32)
  id: UpdateRoleId(System.Int32,System.Int32)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: UpdateRoleId(Int32, Int32)
  nameWithType: AssociateResolver<TToken>.UpdateRoleId(Int32, Int32)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateRoleId(System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nUpdate the role id (as part of authentication)\n"
  syntax:
    content: protected static void UpdateRoleId(int associateId, int roleIdx)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId being authenticated.
    - id: roleIdx
      type: System.Int32
      description: New roleId of the associate.
    content.vb: Protected Shared Sub UpdateRoleId(associateId As Integer, roleIdx As Integer)
  overload: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId*
  nameWithType.vb: AssociateResolver(Of TToken).UpdateRoleId(Int32, Int32)
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateRoleId(System.Int32, System.Int32)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  id: ResolveFromUsernamePassword(System.String@,System.String,SuperOffice.Data.SoConnection,System.String,System.Int32@)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: ResolveFromUsernamePassword(ref String, String, SoConnection, String, out Int32)
  nameWithType: AssociateResolver<TToken>.ResolveFromUsernamePassword(ref String, String, SoConnection, String, out Int32)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveFromUsernamePassword(ref System.String, System.String, SuperOffice.Data.SoConnection, System.String, out System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: protected int ResolveFromUsernamePassword(ref string associate, string password, SoConnection dbConnection, string credentialType, out int credId)
    parameters:
    - id: associate
      type: System.String
    - id: password
      type: System.String
    - id: dbConnection
      type: SuperOffice.Data.SoConnection
    - id: credentialType
      type: System.String
    - id: credId
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Function ResolveFromUsernamePassword(ByRef associate As String, password As String, dbConnection As SoConnection, credentialType As String, ByRef credId As Integer) As Integer
  overload: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword*
  nameWithType.vb: AssociateResolver(Of TToken).ResolveFromUsernamePassword(ByRef String, String, SoConnection, String, ByRef Int32)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveFromUsernamePassword(ByRef System.String, System.String, SuperOffice.Data.SoConnection, System.String, ByRef System.Int32)
  name.vb: ResolveFromUsernamePassword(ByRef String, String, SoConnection, String, ByRef Int32)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  id: ResolveAssociateFromName(System.String@,SuperOffice.Data.AssociateType@,SuperOffice.Data.SoConnection)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: ResolveAssociateFromName(ref String, out AssociateType, SoConnection)
  nameWithType: AssociateResolver<TToken>.ResolveAssociateFromName(ref String, out AssociateType, SoConnection)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveAssociateFromName(ref System.String, out SuperOffice.Data.AssociateType, SuperOffice.Data.SoConnection)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: protected int ResolveAssociateFromName(ref string associate, out AssociateType associateType, SoConnection dbConnection)
    parameters:
    - id: associate
      type: System.String
    - id: associateType
      type: SuperOffice.Data.AssociateType
    - id: dbConnection
      type: SuperOffice.Data.SoConnection
    return:
      type: System.Int32
    content.vb: Protected Function ResolveAssociateFromName(ByRef associate As String, ByRef associateType As AssociateType, dbConnection As SoConnection) As Integer
  overload: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName*
  nameWithType.vb: AssociateResolver(Of TToken).ResolveAssociateFromName(ByRef String, ByRef AssociateType, SoConnection)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveAssociateFromName(ByRef System.String, ByRef SuperOffice.Data.AssociateType, SuperOffice.Data.SoConnection)
  name.vb: ResolveAssociateFromName(ByRef String, ByRef AssociateType, SoConnection)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid(System.Int32,System.String,System.String)
  id: IsPasswordValid(System.Int32,System.String,System.String)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: IsPasswordValid(Int32, String, String)
  nameWithType: AssociateResolver<TToken>.IsPasswordValid(Int32, String, String)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.IsPasswordValid(System.Int32, System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nCheck if this is a valid password.\n"
  syntax:
    content: public static bool IsPasswordValid(int associateId, string password, string secret)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate if to check password for.
    - id: password
      type: System.String
      description: Password to check if it is valid.
    - id: secret
      type: System.String
      description: Secret holding hashed password to check if it is valid
    return:
      type: System.Boolean
      description: True of this is a valid password.
    content.vb: Public Shared Function IsPasswordValid(associateId As Integer, password As String, secret As String) As Boolean
  overload: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid*
  nameWithType.vb: AssociateResolver(Of TToken).IsPasswordValid(Int32, String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).IsPasswordValid(System.Int32, System.String, System.String)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword(System.Int32,System.String)
  id: SecretFromPassword(System.Int32,System.String)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: SecretFromPassword(Int32, String)
  nameWithType: AssociateResolver<TToken>.SecretFromPassword(Int32, String)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.SecretFromPassword(System.Int32, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: "\nConstruct the &apos;secret&apos; string as a hash of passowrd, dbtag and associate id\n"
  syntax:
    content: public static string SecretFromPassword(int associateId, string password)
    parameters:
    - id: associateId
      type: System.Int32
    - id: password
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function SecretFromPassword(associateId As Integer, password As String) As String
  overload: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword*
  nameWithType.vb: AssociateResolver(Of TToken).SecretFromPassword(Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).SecretFromPassword(System.Int32, System.String)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  id: ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: ResolveIdentity(IList<SecurityToken>, SoConnection)
  nameWithType: AssociateResolver<TToken>.ResolveIdentity(IList<SecurityToken>, SoConnection)
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveIdentity(System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>, SuperOffice.Data.SoConnection)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public abstract ISoIdentity ResolveIdentity(IList<SecurityToken> tokens, SoConnection dbConnection)
    parameters:
    - id: tokens
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
    - id: dbConnection
      type: SuperOffice.Data.SoConnection
    return:
      type: SuperOffice.Security.Principal.ISoIdentity
    content.vb: Public MustOverride Function ResolveIdentity(tokens As IList(Of SecurityToken), dbConnection As SoConnection) As ISoIdentity
  overload: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity*
  implements:
  - SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  nameWithType.vb: AssociateResolver(Of TToken).ResolveIdentity(IList(Of SecurityToken), SoConnection)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveIdentity(System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken), SuperOffice.Data.SoConnection)
  name.vb: ResolveIdentity(IList(Of SecurityToken), SoConnection)
- uid: SuperOffice.Security.Principal.AssociateResolver`1.#ctor
  commentId: M:SuperOffice.Security.Principal.AssociateResolver`1.#ctor
  id: '#ctor'
  parent: SuperOffice.Security.Principal.AssociateResolver`1
  langs:
  - csharp
  - vb
  name: AssociateResolver()
  nameWithType: AssociateResolver<TToken>.AssociateResolver()
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.AssociateResolver()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: protected AssociateResolver()
    content.vb: Protected Sub New
  overload: SuperOffice.Security.Principal.AssociateResolver`1.#ctor*
  nameWithType.vb: AssociateResolver(Of TToken).AssociateResolver()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).AssociateResolver()
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Security.ISoIdentityResolver
  commentId: T:SuperOffice.Security.ISoIdentityResolver
  parent: SuperOffice.Security
  isExternal: true
  name: ISoIdentityResolver
  nameWithType: ISoIdentityResolver
  fullName: SuperOffice.Security.ISoIdentityResolver
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AssociateResolver<TToken>, To>()
  nameWithType: EnumUtil.MapEnums<AssociateResolver<TToken>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.AssociateResolver<TToken>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AssociateResolver(Of TToken), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.AssociateResolver(Of TToken), To)()
  name.vb: MapEnums(Of AssociateResolver(Of TToken), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AssociateResolver<TToken>, To>
    nameWithType: EnumUtil.MapEnums<AssociateResolver<TToken>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.AssociateResolver<TToken>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AssociateResolver(Of TToken), To)
    nameWithType: EnumUtil.MapEnums(Of AssociateResolver(Of TToken), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.AssociateResolver(Of TToken), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.AssociateResolver`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AssociateResolver<TToken>, To>()
  nameWithType: Converters.MapEnums<AssociateResolver<TToken>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.AssociateResolver<TToken>, To>()
  nameWithType.vb: Converters.MapEnums(Of AssociateResolver(Of TToken), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.AssociateResolver(Of TToken), To)()
  name.vb: MapEnums(Of AssociateResolver(Of TToken), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AssociateResolver<TToken>, To>
    nameWithType: Converters.MapEnums<AssociateResolver<TToken>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.AssociateResolver<TToken>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AssociateResolver(Of TToken), To)
    nameWithType: Converters.MapEnums(Of AssociateResolver(Of TToken), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.AssociateResolver(Of TToken), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security
  commentId: N:SuperOffice.Security
  isExternal: true
  name: SuperOffice.Security
  nameWithType: SuperOffice.Security
  fullName: SuperOffice.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.GetInfoAboutUser
  isExternal: true
  name: GetInfoAboutUser
  nameWithType: AssociateResolver<TToken>.GetInfoAboutUser
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.GetInfoAboutUser
  nameWithType.vb: AssociateResolver(Of TToken).GetInfoAboutUser
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).GetInfoAboutUser
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.UpdateCredentialsLastUsed
  isExternal: true
  name: UpdateCredentialsLastUsed
  nameWithType: AssociateResolver<TToken>.UpdateCredentialsLastUsed
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateCredentialsLastUsed
  nameWithType.vb: AssociateResolver(Of TToken).UpdateCredentialsLastUsed
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateCredentialsLastUsed
- uid: SuperOffice.CRM.Data.CredentialsTableInfo
  commentId: T:SuperOffice.CRM.Data.CredentialsTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: CredentialsTableInfo
  nameWithType: CredentialsTableInfo
  fullName: SuperOffice.CRM.Data.CredentialsTableInfo
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.SoConnection
  commentId: T:SuperOffice.Data.SoConnection
  parent: SuperOffice.Data
  isExternal: true
  name: SoConnection
  nameWithType: SoConnection
  fullName: SuperOffice.Data.SoConnection
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.UpdateRoleId
  isExternal: true
  name: UpdateRoleId
  nameWithType: AssociateResolver<TToken>.UpdateRoleId
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.UpdateRoleId
  nameWithType.vb: AssociateResolver(Of TToken).UpdateRoleId
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).UpdateRoleId
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.ResolveFromUsernamePassword
  isExternal: true
  name: ResolveFromUsernamePassword
  nameWithType: AssociateResolver<TToken>.ResolveFromUsernamePassword
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveFromUsernamePassword
  nameWithType.vb: AssociateResolver(Of TToken).ResolveFromUsernamePassword
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveFromUsernamePassword
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.ResolveAssociateFromName
  isExternal: true
  name: ResolveAssociateFromName
  nameWithType: AssociateResolver<TToken>.ResolveAssociateFromName
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveAssociateFromName
  nameWithType.vb: AssociateResolver(Of TToken).ResolveAssociateFromName
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveAssociateFromName
- uid: SuperOffice.Data.AssociateType
  commentId: T:SuperOffice.Data.AssociateType
  parent: SuperOffice.Data
  isExternal: true
  name: AssociateType
  nameWithType: AssociateType
  fullName: SuperOffice.Data.AssociateType
- uid: SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.IsPasswordValid
  isExternal: true
  name: IsPasswordValid
  nameWithType: AssociateResolver<TToken>.IsPasswordValid
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.IsPasswordValid
  nameWithType.vb: AssociateResolver(Of TToken).IsPasswordValid
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).IsPasswordValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.SecretFromPassword
  isExternal: true
  name: SecretFromPassword
  nameWithType: AssociateResolver<TToken>.SecretFromPassword
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.SecretFromPassword
  nameWithType.vb: AssociateResolver(Of TToken).SecretFromPassword
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).SecretFromPassword
- uid: SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.ResolveIdentity
  isExternal: true
  name: ResolveIdentity
  nameWithType: AssociateResolver<TToken>.ResolveIdentity
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.ResolveIdentity
  nameWithType.vb: AssociateResolver(Of TToken).ResolveIdentity
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).ResolveIdentity
- uid: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  commentId: M:SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
  parent: SuperOffice.Security.ISoIdentityResolver
  isExternal: true
  name: ResolveIdentity(IList<SecurityToken>, SoConnection)
  nameWithType: ISoIdentityResolver.ResolveIdentity(IList<SecurityToken>, SoConnection)
  fullName: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>, SuperOffice.Data.SoConnection)
  nameWithType.vb: ISoIdentityResolver.ResolveIdentity(IList(Of SecurityToken), SoConnection)
  fullName.vb: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken), SuperOffice.Data.SoConnection)
  name.vb: ResolveIdentity(IList(Of SecurityToken), SoConnection)
  spec.csharp:
  - uid: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
    name: ResolveIdentity
    nameWithType: ISoIdentityResolver.ResolveIdentity
    fullName: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity(System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken},SuperOffice.Data.SoConnection)
    name: ResolveIdentity
    nameWithType: ISoIdentityResolver.ResolveIdentity
    fullName: SuperOffice.Security.ISoIdentityResolver.ResolveIdentity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoConnection
    name: SoConnection
    nameWithType: SoConnection
    fullName: SuperOffice.Data.SoConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
  commentId: T:System.Collections.Generic.IList{System.IdentityModel.Tokens.SecurityToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<SecurityToken>
  nameWithType: IList<SecurityToken>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SecurityToken>
  nameWithType.vb: IList(Of SecurityToken)
  fullName.vb: System.Collections.Generic.IList(Of System.IdentityModel.Tokens.SecurityToken)
  name.vb: IList(Of SecurityToken)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IdentityModel.Tokens.SecurityToken
    name: SecurityToken
    nameWithType: SecurityToken
    fullName: System.IdentityModel.Tokens.SecurityToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.ISoIdentity
  commentId: T:SuperOffice.Security.Principal.ISoIdentity
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: ISoIdentity
  nameWithType: ISoIdentity
  fullName: SuperOffice.Security.Principal.ISoIdentity
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Security.Principal.AssociateResolver`1.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.AssociateResolver`1.#ctor
  isExternal: true
  name: AssociateResolver
  nameWithType: AssociateResolver<TToken>.AssociateResolver
  fullName: SuperOffice.Security.Principal.AssociateResolver<TToken>.AssociateResolver
  nameWithType.vb: AssociateResolver(Of TToken).AssociateResolver
  fullName.vb: SuperOffice.Security.Principal.AssociateResolver(Of TToken).AssociateResolver
