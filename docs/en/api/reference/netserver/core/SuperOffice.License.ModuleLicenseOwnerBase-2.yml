### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2
  commentId: T:SuperOffice.License.ModuleLicenseOwnerBase`2
  id: ModuleLicenseOwnerBase`2
  parent: SuperOffice.License
  children:
  - SuperOffice.License.ModuleLicenseOwnerBase`2.#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)
  - SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  - SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  - SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  - SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
  - SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
  - SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  - SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  - SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
  - SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  langs:
  - csharp
  - vb
  name: ModuleLicenseOwnerBase<TLink, TLinkRow>
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: 'public abstract class ModuleLicenseOwnerBase<TLink, TLinkRow> : NestedPersistFacade, INestedPersist where TLink : ModuleLicenseLinkBase<TLinkRow> where TLinkRow : TableRowBase'
    typeParameters:
    - id: TLink
    - id: TLinkRow
    content.vb: Public MustInherit Class ModuleLicenseOwnerBase(Of TLink As ModuleLicenseLinkBase(Of TLinkRow), TLinkRow As TableRowBase) Inherits NestedPersistFacade Implements INestedPersist
  inheritance:
  - System.Object
  - SuperOffice.Data.NestedPersist
  - SuperOffice.Data.NestedPersistFacade
  derivedClasses:
  - SuperOffice.License.AssociateModuleLicenseOwner
  - SuperOffice.License.SatelliteModuleLicenseOwner
  implements:
  - SuperOffice.Data.INestedPersist
  inheritedMembers:
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  - SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersist._saveOwner
  - SuperOffice.Data.NestedPersist._isSaving
  - SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.Data.NestedPersist.SaveAsync
  - SuperOffice.Data.NestedPersist.IsSaving
  - SuperOffice.Data.NestedPersist.IsMarkedForDelete
  - SuperOffice.Data.NestedPersist.OnElementSaved
  - SuperOffice.Data.NestedPersist.OnElementIdUpdate
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.License.ModuleLicenseOwnerBase`2.EnumUtil.MapEnums``2
  - SuperOffice.License.ModuleLicenseOwnerBase`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow)
  name.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow)
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)
  id: '#ctor(SuperOffice.CRM.Rows.ModuleOwnerRow,System.Int32)'
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: ModuleLicenseOwnerBase(ModuleOwnerRow, int)
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.ModuleLicenseOwnerBase(ModuleOwnerRow, int)
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.ModuleLicenseOwnerBase(SuperOffice.CRM.Rows.ModuleOwnerRow, int)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public ModuleLicenseOwnerBase(ModuleOwnerRow owner, int parentId)
    parameters:
    - id: owner
      type: SuperOffice.CRM.Rows.ModuleOwnerRow
    - id: parentId
      type: System.Int32
    content.vb: Public Sub New(owner As ModuleOwnerRow, parentId As Integer)
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.#ctor*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).New(ModuleOwnerRow, Integer)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).New(SuperOffice.CRM.Rows.ModuleOwnerRow, Integer)
  name.vb: New(ModuleOwnerRow, Integer)
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  id: OnPreIdUpdateAsync
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: OnPreIdUpdateAsync()
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync()
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Allow for "fake id's" to be forced upon related objects.
  remarks: >-
    In order to figure out which objects taking part of the nested save operation that 

    actually needs to be saved, this method allows for "fake id's" to be 

    forced upon related objects. Upon receiving the "fake id", the 

    objects receiving such an id can determine if they needs to be persisted (e.g. 

    saved) to the database.  However, the fake id's forced upon related objects must 

    be set to correct id's in the OnIdUpdate method taking place later in the save 

    operation.
  example: []
  syntax:
    content: protected override Task OnPreIdUpdateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnPreIdUpdateAsync() As Task
  overridden: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync()
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync()
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  id: GetFacadingItems
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: GetFacadingItems()
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems()
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Enumerator over all <xref href="SuperOffice.License.SatelliteModuleLicenseLink" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: protected override IEnumerable<INestedPersist> GetFacadingItems()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
      description: ''
    content.vb: Protected Overrides Function GetFacadingItems() As IEnumerable(Of INestedPersist)
  overridden: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems()
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems()
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync(System.Boolean)
  id: OnSavedAsync(System.Boolean)
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: OnSavedAsync(bool)
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync(bool)
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync(bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: >-
    Called after the save operation has completed.  A boolean value is passed to

    notify whether or not the save operation succeeded.  The complete save operation

    is rolled back if Save operation failed.
  example: []
  syntax:
    content: protected override Task OnSavedAsync(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: True if the save operation succeeded and false if the save operation failed and rolled back.
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnSavedAsync(bSucceeded As Boolean) As Task
  overridden: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync(Boolean)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync(Boolean)
  name.vb: OnSavedAsync(Boolean)
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  id: Owner
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Owner
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Owner
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public ModuleOwnerRow Owner { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.ModuleOwnerRow
    content.vb: Public ReadOnly Property Owner As ModuleOwnerRow
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.Owner*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Owner
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Owner
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  id: Modules
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Modules
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Modules
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public IEnumerable<TLink> Modules { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TLink}}
    content.vb: Public ReadOnly Property Modules As IEnumerable(Of TLink)
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.Modules*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Modules
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Modules
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.Int32)
  id: Item(System.Int32)
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: this[int]
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.this[int]
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.this[int]
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Find a module from it's module id
  example: []
  syntax:
    content: public TLink this[int moduleId] { get; }
    parameters:
    - id: moduleId
      type: System.Int32
    return:
      type: '{TLink}'
      description: License for a module
    content.vb: Public ReadOnly Default Property this[](moduleId As Integer) As TLink
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.Item*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).this[](Integer)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).this[](Integer)
  name.vb: this[](Integer)
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: this[string]
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.this[string]
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.this[string]
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Find a module from its name.
  example: []
  syntax:
    content: public TLink this[string moduleName] { get; }
    parameters:
    - id: moduleName
      type: System.String
      description: Name of the module
    return:
      type: '{TLink}'
      description: License for a module
    content.vb: Public ReadOnly Default Property this[](moduleName As String) As TLink
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.Item*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).this[](String)
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).this[](String)
  name.vb: this[](String)
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  id: IsDirty
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDirty
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDirty
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Return true if any of the encapsulated LicenseSatLinkRows are dirty.
  example: []
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.Data.NestedPersistFacade.IsDirty
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDirty
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDirty
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  commentId: P:SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  id: IsDeleted
  parent: SuperOffice.License.ModuleLicenseOwnerBase`2
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDeleted
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDeleted
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: Allways return false.
  example: []
  syntax:
    content: public override bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDeleted As Boolean
  overridden: SuperOffice.Data.NestedPersist.IsDeleted
  overload: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted*
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDeleted
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDeleted
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Data.NestedPersist
  commentId: T:SuperOffice.Data.NestedPersist
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html
  name: NestedPersist
  nameWithType: NestedPersist
  fullName: SuperOffice.Data.NestedPersist
- uid: SuperOffice.Data.NestedPersistFacade
  commentId: T:SuperOffice.Data.NestedPersistFacade
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html
  name: NestedPersistFacade
  nameWithType: NestedPersistFacade
  fullName: SuperOffice.Data.NestedPersistFacade
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.INestedPersist.html
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPrimaryKeyRequestAsync_SuperOffice_Data_PKContainer_
  name: OnPrimaryKeyRequestAsync(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyRequestAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPrimaryKeyRequestAsync_SuperOffice_Data_PKContainer_
  - name: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    isExternal: true
    href: SuperOffice.Data.PKContainer.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequestAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequestAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPrimaryKeyRequestAsync_SuperOffice_Data_PKContainer_
  - name: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    isExternal: true
    href: SuperOffice.Data.PKContainer.html
  - name: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPrimaryKeyUpdateAsync_SuperOffice_Data_PKContainer_
  name: OnPrimaryKeyUpdateAsync(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyUpdateAsync(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPrimaryKeyUpdateAsync_SuperOffice_Data_PKContainer_
  - name: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    isExternal: true
    href: SuperOffice.Data.PKContainer.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdateAsync(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPrimaryKeyUpdateAsync_SuperOffice_Data_PKContainer_
  - name: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    isExternal: true
    href: SuperOffice.Data.PKContainer.html
  - name: )
- uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnIdUpdateAsync
  name: OnIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnIdUpdateAsync
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdateAsync
    name: OnIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnIdUpdateAsync
  - name: (
  - name: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSaveAsync_SuperOffice_Data_SQL_BatchSave_
  name: OnSaveAsync(BatchSave)
  nameWithType: NestedPersistFacade.OnSaveAsync(BatchSave)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSaveAsync_SuperOffice_Data_SQL_BatchSave_
  - name: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    isExternal: true
    href: SuperOffice.Data.SQL.BatchSave.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaveAsync(SuperOffice.Data.SQL.BatchSave)
    name: OnSaveAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSaveAsync_SuperOffice_Data_SQL_BatchSave_
  - name: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    isExternal: true
    href: SuperOffice.Data.SQL.BatchSave.html
  - name: )
- uid: SuperOffice.Data.NestedPersist._saveOwner
  commentId: F:SuperOffice.Data.NestedPersist._saveOwner
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist__saveOwner
  name: _saveOwner
  nameWithType: NestedPersist._saveOwner
  fullName: SuperOffice.Data.NestedPersist._saveOwner
- uid: SuperOffice.Data.NestedPersist._isSaving
  commentId: F:SuperOffice.Data.NestedPersist._isSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist__isSaving
  name: _isSaving
  nameWithType: NestedPersist._isSaving
  fullName: SuperOffice.Data.NestedPersist._isSaving
- uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SetSaveOwner_SuperOffice_Data_INestedPersist_
  name: SetSaveOwner(INestedPersist)
  nameWithType: NestedPersist.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SetSaveOwner_SuperOffice_Data_INestedPersist_
  - name: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SetSaveOwner_SuperOffice_Data_INestedPersist_
  - name: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: )
- uid: SuperOffice.Data.NestedPersist.SaveAsync
  commentId: M:SuperOffice.Data.NestedPersist.SaveAsync
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SaveAsync
  name: SaveAsync()
  nameWithType: NestedPersist.SaveAsync()
  fullName: SuperOffice.Data.NestedPersist.SaveAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SaveAsync
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SaveAsync
    name: SaveAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_SaveAsync
  - name: (
  - name: )
- uid: SuperOffice.Data.NestedPersist.IsSaving
  commentId: P:SuperOffice.Data.NestedPersist.IsSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_IsSaving
  name: IsSaving
  nameWithType: NestedPersist.IsSaving
  fullName: SuperOffice.Data.NestedPersist.IsSaving
- uid: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  commentId: P:SuperOffice.Data.NestedPersist.IsMarkedForDelete
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_IsMarkedForDelete
  name: IsMarkedForDelete
  nameWithType: NestedPersist.IsMarkedForDelete
  fullName: SuperOffice.Data.NestedPersist.IsMarkedForDelete
- uid: SuperOffice.Data.NestedPersist.OnElementSaved
  commentId: E:SuperOffice.Data.NestedPersist.OnElementSaved
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_OnElementSaved
  name: OnElementSaved
  nameWithType: NestedPersist.OnElementSaved
  fullName: SuperOffice.Data.NestedPersist.OnElementSaved
- uid: SuperOffice.Data.NestedPersist.OnElementIdUpdate
  commentId: E:SuperOffice.Data.NestedPersist.OnElementIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_OnElementIdUpdate
  name: OnElementIdUpdate
  nameWithType: NestedPersist.OnElementIdUpdate
  fullName: SuperOffice.Data.NestedPersist.OnElementIdUpdate
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<ModuleLicenseOwnerBase<TLink, TLinkRow>, To>(ModuleLicenseOwnerBase<TLink, TLinkRow>)
  nameWithType: EnumUtil.MapEnums<ModuleLicenseOwnerBase<TLink, TLinkRow>, To>(ModuleLicenseOwnerBase<TLink, TLinkRow>)
  fullName: EnumUtil.MapEnums<SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>, To>(SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>)
  nameWithType.vb: EnumUtil.MapEnums(Of ModuleLicenseOwnerBase(Of TLink, TLinkRow), To)(ModuleLicenseOwnerBase(Of TLink, TLinkRow))
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow), To)(SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow))
  name.vb: MapEnums(Of ModuleLicenseOwnerBase(Of TLink, TLinkRow), To)(ModuleLicenseOwnerBase(Of TLink, TLinkRow))
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.License.ModuleLicenseOwnerBase{`0,`1})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: <
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: <
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: '>'
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.License.ModuleLicenseOwnerBase{`0,`1})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: )
  - name: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<ModuleLicenseOwnerBase<TLink, TLinkRow>, To>(ModuleLicenseOwnerBase<TLink, TLinkRow>)
  nameWithType: Converters.MapEnums<ModuleLicenseOwnerBase<TLink, TLinkRow>, To>(ModuleLicenseOwnerBase<TLink, TLinkRow>)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>, To>(SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>)
  nameWithType.vb: Converters.MapEnums(Of ModuleLicenseOwnerBase(Of TLink, TLinkRow), To)(ModuleLicenseOwnerBase(Of TLink, TLinkRow))
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow), To)(SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow))
  name.vb: MapEnums(Of ModuleLicenseOwnerBase(Of TLink, TLinkRow), To)(ModuleLicenseOwnerBase(Of TLink, TLinkRow))
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.License.ModuleLicenseOwnerBase{`0,`1})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: <
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: <
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: '>'
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.License.ModuleLicenseOwnerBase{`0,`1})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.License.ModuleLicenseOwnerBase`2
    name: ModuleLicenseOwnerBase
    isExternal: true
    href: SuperOffice.License.ModuleLicenseOwnerBase-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TLink
  - name: ','
  - name: " "
  - name: TLinkRow
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.#ctor*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.#ctor
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2__ctor_SuperOffice_CRM_Rows_ModuleOwnerRow_System_Int32_
  name: ModuleLicenseOwnerBase
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.ModuleLicenseOwnerBase
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.ModuleLicenseOwnerBase
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).New
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).New
  name.vb: New
- uid: SuperOffice.CRM.Rows.ModuleOwnerRow
  commentId: T:SuperOffice.CRM.Rows.ModuleOwnerRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.ModuleOwnerRow.html
  name: ModuleOwnerRow
  nameWithType: ModuleOwnerRow
  fullName: SuperOffice.CRM.Rows.ModuleOwnerRow
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
- uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPreIdUpdateAsync
  name: OnPreIdUpdateAsync()
  nameWithType: NestedPersistFacade.OnPreIdUpdateAsync()
  fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPreIdUpdateAsync
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdateAsync
    name: OnPreIdUpdateAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnPreIdUpdateAsync
  - name: (
  - name: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.OnPreIdUpdateAsync
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_OnPreIdUpdateAsync
  name: OnPreIdUpdateAsync
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnPreIdUpdateAsync
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnPreIdUpdateAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.License.SatelliteModuleLicenseLink
  commentId: T:SuperOffice.License.SatelliteModuleLicenseLink
  isExternal: true
  href: SuperOffice.License.SatelliteModuleLicenseLink.html
  name: SatelliteModuleLicenseLink
  nameWithType: SatelliteModuleLicenseLink
  fullName: SuperOffice.License.SatelliteModuleLicenseLink
- uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  commentId: M:SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_GetFacadingItems
  name: GetFacadingItems()
  nameWithType: NestedPersistFacade.GetFacadingItems()
  fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_GetFacadingItems
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_GetFacadingItems
  - name: (
  - name: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.GetFacadingItems
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_GetFacadingItems
  name: GetFacadingItems
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.GetFacadingItems
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).GetFacadingItems
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<INestedPersist>
  nameWithType: IEnumerable<INestedPersist>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.INestedPersist>
  nameWithType.vb: IEnumerable(Of INestedPersist)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.INestedPersist)
  name.vb: IEnumerable(Of INestedPersist)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    isExternal: true
    href: SuperOffice.Data.INestedPersist.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSavedAsync_System_Boolean_
  name: OnSavedAsync(bool)
  nameWithType: NestedPersistFacade.OnSavedAsync(bool)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(bool)
  nameWithType.vb: NestedPersistFacade.OnSavedAsync(Boolean)
  fullName.vb: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(Boolean)
  name.vb: OnSavedAsync(Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSavedAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSavedAsync(System.Boolean)
    name: OnSavedAsync
    isExternal: true
    href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_OnSavedAsync_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.OnSavedAsync
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_OnSavedAsync_System_Boolean_
  name: OnSavedAsync
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.OnSavedAsync
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).OnSavedAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Owner*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.Owner
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_Owner
  name: Owner
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Owner
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Owner
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Owner
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Owner
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Modules*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.Modules
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_Modules
  name: Modules
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.Modules
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.Modules
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).Modules
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).Modules
- uid: System.Collections.Generic.IEnumerable{{TLink}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<TLink>
  nameWithType: IEnumerable<TLink>
  fullName: System.Collections.Generic.IEnumerable<TLink>
  nameWithType.vb: IEnumerable(Of TLink)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TLink)
  name.vb: IEnumerable(Of TLink)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: TLink
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: TLink
  - name: )
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.Item*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.Item
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_Item_System_Int32_
  name: this
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.this
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.this
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).this[]
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).this[]
  name.vb: this[]
- uid: '{TLink}'
  commentId: '!:TLink'
  definition: TLink
  name: TLink
  nameWithType: TLink
  fullName: TLink
- uid: TLink
  name: TLink
  nameWithType: TLink
  fullName: TLink
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.NestedPersistFacade.IsDirty
  commentId: P:SuperOffice.Data.NestedPersistFacade.IsDirty
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  href: SuperOffice.Data.NestedPersistFacade.html#SuperOffice_Data_NestedPersistFacade_IsDirty
  name: IsDirty
  nameWithType: NestedPersistFacade.IsDirty
  fullName: SuperOffice.Data.NestedPersistFacade.IsDirty
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.IsDirty
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_IsDirty
  name: IsDirty
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDirty
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDirty
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDirty
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDirty
- uid: SuperOffice.Data.NestedPersist.IsDeleted
  commentId: P:SuperOffice.Data.NestedPersist.IsDeleted
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  href: SuperOffice.Data.NestedPersist.html#SuperOffice_Data_NestedPersist_IsDeleted
  name: IsDeleted
  nameWithType: NestedPersist.IsDeleted
  fullName: SuperOffice.Data.NestedPersist.IsDeleted
- uid: SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted*
  commentId: Overload:SuperOffice.License.ModuleLicenseOwnerBase`2.IsDeleted
  isExternal: true
  href: SuperOffice.License.ModuleLicenseOwnerBase-2.html#SuperOffice_License_ModuleLicenseOwnerBase_2_IsDeleted
  name: IsDeleted
  nameWithType: ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDeleted
  fullName: SuperOffice.License.ModuleLicenseOwnerBase<TLink, TLinkRow>.IsDeleted
  nameWithType.vb: ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDeleted
  fullName.vb: SuperOffice.License.ModuleLicenseOwnerBase(Of TLink, TLinkRow).IsDeleted
