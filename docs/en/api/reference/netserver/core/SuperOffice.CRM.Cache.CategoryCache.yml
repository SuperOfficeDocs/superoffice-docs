### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Cache.CategoryCache
  commentId: T:SuperOffice.CRM.Cache.CategoryCache
  id: CategoryCache
  parent: SuperOffice.CRM.Cache
  children:
  - SuperOffice.CRM.Cache.CategoryCache.GetAllCategories(System.Boolean)
  - SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId(System.Int32)
  - SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName(System.String)
  - SuperOffice.CRM.Cache.CategoryCache.GetCurrent
  - SuperOffice.CRM.Cache.CategoryCache.GetNameFromId(System.Int32)
  - SuperOffice.CRM.Cache.CategoryCache.OnLoad
  - SuperOffice.CRM.Cache.CategoryCache.TableNames
  langs:
  - csharp
  - vb
  name: CategoryCache
  nameWithType: CategoryCache
  fullName: SuperOffice.CRM.Cache.CategoryCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nCache that holds information about category.\nIncludes deleted items.\n"
  syntax:
    content: >-
      [CacheV2("Database", 0)]

      public class CategoryCache : CacheBaseV2, IFlushableV2, IDisposable
    content.vb: >-
      <CacheV2("Database", 0)>

      Public Class CategoryCache
          Inherits CacheBaseV2
          Implements IFlushableV2, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  implements:
  - SuperOffice.Data.Cache.IFlushableV2
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Cache.CacheBaseV2.Dispose
  - SuperOffice.Data.Cache.CacheBaseV2.Flush
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Cache.CategoryCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Cache.CategoryCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Database
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId(System.Int32)
  id: GetCategoryFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: GetCategoryFromId(Int32)
  nameWithType: CategoryCache.GetCategoryFromId(Int32)
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nReturn a Category list name by id.\n"
  syntax:
    content: public CategoryRecordData GetCategoryFromId(int id)
    parameters:
    - id: id
      type: System.Int32
      description: "123"
    return:
      type: SuperOffice.CRM.Rows.CategoryRecordData
      description: Category or NULL if no match. Item may be marked deleted.
    content.vb: Public Function GetCategoryFromId(id As Integer) As CategoryRecordData
  overload: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName(System.String)
  commentId: M:SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName(System.String)
  id: GetCategoryFromName(System.String)
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: GetCategoryFromName(String)
  nameWithType: CategoryCache.GetCategoryFromName(String)
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nReturn a Category based on a name. Returns first case insensitive match.\n"
  syntax:
    content: public CategoryRecordData GetCategoryFromName(string name)
    parameters:
    - id: name
      type: System.String
      description: '&quot;Customer&quot;'
    return:
      type: SuperOffice.CRM.Rows.CategoryRecordData
      description: Category record with id, value, tooltip. NULL if not found
    content.vb: Public Function GetCategoryFromName(name As String) As CategoryRecordData
  overload: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.CategoryCache.GetAllCategories(System.Boolean)
  commentId: M:SuperOffice.CRM.Cache.CategoryCache.GetAllCategories(System.Boolean)
  id: GetAllCategories(System.Boolean)
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: GetAllCategories(Boolean)
  nameWithType: CategoryCache.GetAllCategories(Boolean)
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetAllCategories(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nReturn all Category records in cache\n"
  syntax:
    content: public CategoryRecordData[] GetAllCategories(bool inclDeleted)
    parameters:
    - id: inclDeleted
      type: System.Boolean
      description: Do we include deleted records or not?
    return:
      type: SuperOffice.CRM.Rows.CategoryRecordData[]
      description: Array of Category record with id, value, tooltip.
    content.vb: Public Function GetAllCategories(inclDeleted As Boolean) As CategoryRecordData()
  overload: SuperOffice.CRM.Cache.CategoryCache.GetAllCategories*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.CategoryCache.GetNameFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.CategoryCache.GetNameFromId(System.Int32)
  id: GetNameFromId(System.Int32)
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: GetNameFromId(Int32)
  nameWithType: CategoryCache.GetNameFromId(Int32)
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetNameFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nReturn a Category list name by id.\n"
  syntax:
    content: public string GetNameFromId(int id)
    parameters:
    - id: id
      type: System.Int32
      description: "123"
    return:
      type: System.String
      description: Category name or &quot;&quot; if no match. Item may be marked deleted.
    content.vb: Public Function GetNameFromId(id As Integer) As String
  overload: SuperOffice.CRM.Cache.CategoryCache.GetNameFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.CategoryCache.GetCurrent
  commentId: M:SuperOffice.CRM.Cache.CategoryCache.GetCurrent
  id: GetCurrent
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: CategoryCache.GetCurrent()
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetCurrent()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public static CategoryCache GetCurrent()
    return:
      type: SuperOffice.CRM.Cache.CategoryCache
    content.vb: Public Shared Function GetCurrent As CategoryCache
  overload: SuperOffice.CRM.Cache.CategoryCache.GetCurrent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Cache.CategoryCache.OnLoad
  commentId: M:SuperOffice.CRM.Cache.CategoryCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: CategoryCache.OnLoad()
  fullName: SuperOffice.CRM.Cache.CategoryCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Cache.CategoryCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.CategoryCache.TableNames
  commentId: P:SuperOffice.CRM.Cache.CategoryCache.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Cache.CategoryCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: CategoryCache.TableNames
  fullName: SuperOffice.CRM.Cache.CategoryCache.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Cache.CategoryCache.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Cache
  commentId: N:SuperOffice.CRM.Cache
  isExternal: true
  name: SuperOffice.CRM.Cache
  nameWithType: SuperOffice.CRM.Cache
  fullName: SuperOffice.CRM.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.IFlushableV2
  commentId: T:SuperOffice.Data.Cache.IFlushableV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: IFlushableV2
  nameWithType: IFlushableV2
  fullName: SuperOffice.Data.Cache.IFlushableV2
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: CacheBaseV2.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Dispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Dispose()
  nameWithType: CacheBaseV2.Dispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Flush
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Flush()
  nameWithType: CacheBaseV2.Flush()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: GetCurrent<T>()
  nameWithType: CacheBaseV2.GetCurrent<T>()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>()
  nameWithType.vb: CacheBaseV2.GetCurrent(Of T)()
  fullName.vb: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)()
  name.vb: GetCurrent(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent<T>
    nameWithType: CacheBaseV2.GetCurrent<T>
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent(Of T)
    nameWithType: CacheBaseV2.GetCurrent(Of T)
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Cache.CategoryCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CategoryCache, To>()
  nameWithType: EnumUtil.MapEnums<CategoryCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.CategoryCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CategoryCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.CategoryCache, To)()
  name.vb: MapEnums(Of CategoryCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CategoryCache, To>
    nameWithType: EnumUtil.MapEnums<CategoryCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.CategoryCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CategoryCache, To)
    nameWithType: EnumUtil.MapEnums(Of CategoryCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.CategoryCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.CategoryCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CategoryCache, To>()
  nameWithType: Converters.MapEnums<CategoryCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.CategoryCache, To>()
  nameWithType.vb: Converters.MapEnums(Of CategoryCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.CategoryCache, To)()
  name.vb: MapEnums(Of CategoryCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CategoryCache, To>
    nameWithType: Converters.MapEnums<CategoryCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.CategoryCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CategoryCache, To)
    nameWithType: Converters.MapEnums(Of CategoryCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.CategoryCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId
  isExternal: true
  name: GetCategoryFromId
  nameWithType: CategoryCache.GetCategoryFromId
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Rows.CategoryRecordData
  commentId: T:SuperOffice.CRM.Rows.CategoryRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: CategoryRecordData
  nameWithType: CategoryRecordData
  fullName: SuperOffice.CRM.Rows.CategoryRecordData
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName
  isExternal: true
  name: GetCategoryFromName
  nameWithType: CategoryCache.GetCategoryFromName
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetCategoryFromName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Cache.CategoryCache.GetAllCategories*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.GetAllCategories
  isExternal: true
  name: GetAllCategories
  nameWithType: CategoryCache.GetAllCategories
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetAllCategories
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.CategoryRecordData[]
  isExternal: true
  name: CategoryRecordData[]
  nameWithType: CategoryRecordData[]
  fullName: SuperOffice.CRM.Rows.CategoryRecordData[]
  nameWithType.vb: CategoryRecordData()
  fullName.vb: SuperOffice.CRM.Rows.CategoryRecordData()
  name.vb: CategoryRecordData()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.CategoryRecordData
    name: CategoryRecordData
    nameWithType: CategoryRecordData
    fullName: SuperOffice.CRM.Rows.CategoryRecordData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.CategoryRecordData
    name: CategoryRecordData
    nameWithType: CategoryRecordData
    fullName: SuperOffice.CRM.Rows.CategoryRecordData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Cache.CategoryCache.GetNameFromId*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.GetNameFromId
  isExternal: true
  name: GetNameFromId
  nameWithType: CategoryCache.GetNameFromId
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetNameFromId
- uid: SuperOffice.CRM.Cache.CategoryCache.GetCurrent*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: CategoryCache.GetCurrent
  fullName: SuperOffice.CRM.Cache.CategoryCache.GetCurrent
- uid: SuperOffice.CRM.Cache.CategoryCache
  commentId: T:SuperOffice.CRM.Cache.CategoryCache
  parent: SuperOffice.CRM.Cache
  isExternal: true
  name: CategoryCache
  nameWithType: CategoryCache
  fullName: SuperOffice.CRM.Cache.CategoryCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.CategoryCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: CategoryCache.OnLoad
  fullName: SuperOffice.CRM.Cache.CategoryCache.OnLoad
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Cache.CategoryCache.TableNames*
  commentId: Overload:SuperOffice.CRM.Cache.CategoryCache.TableNames
  isExternal: true
  name: TableNames
  nameWithType: CategoryCache.TableNames
  fullName: SuperOffice.CRM.Cache.CategoryCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
