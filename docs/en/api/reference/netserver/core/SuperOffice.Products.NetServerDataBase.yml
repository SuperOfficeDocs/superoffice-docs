### YamlMime:ManagedReference
items:
- uid: SuperOffice.Products.NetServerDataBase
  commentId: T:SuperOffice.Products.NetServerDataBase
  id: NetServerDataBase
  parent: SuperOffice.Products
  children:
  - SuperOffice.Products.NetServerDataBase.#ctor
  - SuperOffice.Products.NetServerDataBase.ModuleName
  langs:
  - csharp
  - vb
  name: NetServerDataBase
  nameWithType: NetServerDataBase
  fullName: SuperOffice.Products.NetServerDataBase
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Products
  syntax:
    content: 'public sealed class NetServerDataBase : Product'
    content.vb: >-
      Public NotInheritable Class NetServerDataBase
          Inherits Product
  inheritance:
  - System.Object
  - SuperOffice.License.Product
  inheritedMembers:
  - SuperOffice.License.Product.OnDepricateLicense
  - SuperOffice.License.Product.ToString
  - SuperOffice.License.Product.Expiry
  - SuperOffice.License.Product.Manufacturer
  - SuperOffice.License.Product.ProductName
  - SuperOffice.License.Product.Version
  - SuperOffice.License.Product.RequiredLicense
  - SuperOffice.License.Product.DepricatedLicense
  - SuperOffice.License.Product.IsSourceEdition
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Products.NetServerDataBase.EnumUtil.MapEnums``2
  - SuperOffice.Products.NetServerDataBase.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Products.NetServerDataBase)
  - SuperOffice.Products.NetServerDataBase.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Products.NetServerDataBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Products.NetServerDataBase.#ctor
  commentId: M:SuperOffice.Products.NetServerDataBase.#ctor
  id: '#ctor'
  parent: SuperOffice.Products.NetServerDataBase
  langs:
  - csharp
  - vb
  name: NetServerDataBase()
  nameWithType: NetServerDataBase.NetServerDataBase()
  fullName: SuperOffice.Products.NetServerDataBase.NetServerDataBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Products
  syntax:
    content: public NetServerDataBase()
    content.vb: Public Sub New
  overload: SuperOffice.Products.NetServerDataBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Products.NetServerDataBase.ModuleName
  commentId: P:SuperOffice.Products.NetServerDataBase.ModuleName
  id: ModuleName
  parent: SuperOffice.Products.NetServerDataBase
  langs:
  - csharp
  - vb
  name: ModuleName
  nameWithType: NetServerDataBase.ModuleName
  fullName: SuperOffice.Products.NetServerDataBase.ModuleName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Products
  syntax:
    content: public override string ModuleName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property ModuleName As String
  overridden: SuperOffice.License.Product.ModuleName
  overload: SuperOffice.Products.NetServerDataBase.ModuleName*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.Products
  commentId: N:SuperOffice.Products
  isExternal: true
  name: SuperOffice.Products
  nameWithType: SuperOffice.Products
  fullName: SuperOffice.Products
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.License.Product
  commentId: T:SuperOffice.License.Product
  parent: SuperOffice.License
  isExternal: true
  name: Product
  nameWithType: Product
  fullName: SuperOffice.License.Product
- uid: SuperOffice.License.Product.OnDepricateLicense
  commentId: M:SuperOffice.License.Product.OnDepricateLicense
  parent: SuperOffice.License.Product
  isExternal: true
  name: OnDepricateLicense()
  nameWithType: Product.OnDepricateLicense()
  fullName: SuperOffice.License.Product.OnDepricateLicense()
  spec.csharp:
  - uid: SuperOffice.License.Product.OnDepricateLicense
    name: OnDepricateLicense
    nameWithType: Product.OnDepricateLicense
    fullName: SuperOffice.License.Product.OnDepricateLicense
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.Product.OnDepricateLicense
    name: OnDepricateLicense
    nameWithType: Product.OnDepricateLicense
    fullName: SuperOffice.License.Product.OnDepricateLicense
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.Product.ToString
  commentId: M:SuperOffice.License.Product.ToString
  parent: SuperOffice.License.Product
  isExternal: true
  name: ToString()
  nameWithType: Product.ToString()
  fullName: SuperOffice.License.Product.ToString()
  spec.csharp:
  - uid: SuperOffice.License.Product.ToString
    name: ToString
    nameWithType: Product.ToString
    fullName: SuperOffice.License.Product.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.License.Product.ToString
    name: ToString
    nameWithType: Product.ToString
    fullName: SuperOffice.License.Product.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.Product.Expiry
  commentId: P:SuperOffice.License.Product.Expiry
  parent: SuperOffice.License.Product
  isExternal: true
  name: Expiry
  nameWithType: Product.Expiry
  fullName: SuperOffice.License.Product.Expiry
- uid: SuperOffice.License.Product.Manufacturer
  commentId: P:SuperOffice.License.Product.Manufacturer
  parent: SuperOffice.License.Product
  isExternal: true
  name: Manufacturer
  nameWithType: Product.Manufacturer
  fullName: SuperOffice.License.Product.Manufacturer
- uid: SuperOffice.License.Product.ProductName
  commentId: P:SuperOffice.License.Product.ProductName
  parent: SuperOffice.License.Product
  isExternal: true
  name: ProductName
  nameWithType: Product.ProductName
  fullName: SuperOffice.License.Product.ProductName
- uid: SuperOffice.License.Product.Version
  commentId: P:SuperOffice.License.Product.Version
  parent: SuperOffice.License.Product
  isExternal: true
  name: Version
  nameWithType: Product.Version
  fullName: SuperOffice.License.Product.Version
- uid: SuperOffice.License.Product.RequiredLicense
  commentId: P:SuperOffice.License.Product.RequiredLicense
  parent: SuperOffice.License.Product
  isExternal: true
  name: RequiredLicense
  nameWithType: Product.RequiredLicense
  fullName: SuperOffice.License.Product.RequiredLicense
- uid: SuperOffice.License.Product.DepricatedLicense
  commentId: P:SuperOffice.License.Product.DepricatedLicense
  parent: SuperOffice.License.Product
  isExternal: true
  name: DepricatedLicense
  nameWithType: Product.DepricatedLicense
  fullName: SuperOffice.License.Product.DepricatedLicense
- uid: SuperOffice.License.Product.IsSourceEdition
  commentId: P:SuperOffice.License.Product.IsSourceEdition
  parent: SuperOffice.License.Product
  isExternal: true
  name: IsSourceEdition
  nameWithType: Product.IsSourceEdition
  fullName: SuperOffice.License.Product.IsSourceEdition
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Products.NetServerDataBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NetServerDataBase, To>()
  nameWithType: EnumUtil.MapEnums<NetServerDataBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Products.NetServerDataBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NetServerDataBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Products.NetServerDataBase, To)()
  name.vb: MapEnums(Of NetServerDataBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NetServerDataBase, To>
    nameWithType: EnumUtil.MapEnums<NetServerDataBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Products.NetServerDataBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NetServerDataBase, To)
    nameWithType: EnumUtil.MapEnums(Of NetServerDataBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Products.NetServerDataBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Products.NetServerDataBase.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Products.NetServerDataBase)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<NetServerDataBase>(NetServerDataBase)
  nameWithType: ObjectExtensions.AssignByReflection<NetServerDataBase>(NetServerDataBase)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Products.NetServerDataBase>(SuperOffice.Products.NetServerDataBase)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of NetServerDataBase)(NetServerDataBase)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Products.NetServerDataBase)(SuperOffice.Products.NetServerDataBase)
  name.vb: AssignByReflection(Of NetServerDataBase)(NetServerDataBase)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<NetServerDataBase>
    nameWithType: ObjectExtensions.AssignByReflection<NetServerDataBase>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Products.NetServerDataBase>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Products.NetServerDataBase
    name: NetServerDataBase
    nameWithType: NetServerDataBase
    fullName: SuperOffice.Products.NetServerDataBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of NetServerDataBase)
    nameWithType: ObjectExtensions.AssignByReflection(Of NetServerDataBase)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Products.NetServerDataBase)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Products.NetServerDataBase
    name: NetServerDataBase
    nameWithType: NetServerDataBase
    fullName: SuperOffice.Products.NetServerDataBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Products.NetServerDataBase.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<NetServerDataBase>()
  nameWithType: ObjectExtensions.GraphCopy<NetServerDataBase>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Products.NetServerDataBase>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of NetServerDataBase)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Products.NetServerDataBase)()
  name.vb: GraphCopy(Of NetServerDataBase)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<NetServerDataBase>
    nameWithType: ObjectExtensions.GraphCopy<NetServerDataBase>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Products.NetServerDataBase>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of NetServerDataBase)
    nameWithType: ObjectExtensions.GraphCopy(Of NetServerDataBase)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Products.NetServerDataBase)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Products.NetServerDataBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NetServerDataBase, To>()
  nameWithType: Converters.MapEnums<NetServerDataBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Products.NetServerDataBase, To>()
  nameWithType.vb: Converters.MapEnums(Of NetServerDataBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Products.NetServerDataBase, To)()
  name.vb: MapEnums(Of NetServerDataBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NetServerDataBase, To>
    nameWithType: Converters.MapEnums<NetServerDataBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Products.NetServerDataBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NetServerDataBase, To)
    nameWithType: Converters.MapEnums(Of NetServerDataBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Products.NetServerDataBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Products.NetServerDataBase.#ctor*
  commentId: Overload:SuperOffice.Products.NetServerDataBase.#ctor
  isExternal: true
  name: NetServerDataBase
  nameWithType: NetServerDataBase.NetServerDataBase
  fullName: SuperOffice.Products.NetServerDataBase.NetServerDataBase
- uid: SuperOffice.License.Product.ModuleName
  commentId: P:SuperOffice.License.Product.ModuleName
  parent: SuperOffice.License.Product
  isExternal: true
  name: ModuleName
  nameWithType: Product.ModuleName
  fullName: SuperOffice.License.Product.ModuleName
- uid: SuperOffice.Products.NetServerDataBase.ModuleName*
  commentId: Overload:SuperOffice.Products.NetServerDataBase.ModuleName
  isExternal: true
  name: ModuleName
  nameWithType: NetServerDataBase.ModuleName
  fullName: SuperOffice.Products.NetServerDataBase.ModuleName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
