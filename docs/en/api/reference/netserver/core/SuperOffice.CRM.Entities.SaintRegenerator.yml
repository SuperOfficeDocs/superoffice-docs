### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.SaintRegenerator
  commentId: T:SuperOffice.CRM.Entities.SaintRegenerator
  id: SaintRegenerator
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.SaintRegenerator.#ctor(SuperOffice.CRM.Entities.ProgressCallbackAsync)
  - SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SaintRegenerator
  nameWithType: SaintRegenerator
  fullName: SuperOffice.CRM.Entities.SaintRegenerator
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: 'public class SaintRegenerator : Object'
    content.vb: >-
      Public Class SaintRegenerator
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Entities.SaintRegenerator.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Entities.SaintRegenerator.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Entities.SaintRegenerator.#ctor(SuperOffice.CRM.Entities.ProgressCallbackAsync)
  commentId: M:SuperOffice.CRM.Entities.SaintRegenerator.#ctor(SuperOffice.CRM.Entities.ProgressCallbackAsync)
  id: '#ctor(SuperOffice.CRM.Entities.ProgressCallbackAsync)'
  parent: SuperOffice.CRM.Entities.SaintRegenerator
  langs:
  - csharp
  - vb
  name: SaintRegenerator(ProgressCallbackAsync)
  nameWithType: SaintRegenerator.SaintRegenerator(ProgressCallbackAsync)
  fullName: SuperOffice.CRM.Entities.SaintRegenerator.SaintRegenerator(SuperOffice.CRM.Entities.ProgressCallbackAsync)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public SaintRegenerator(ProgressCallbackAsync progressCallbackAsync)
    parameters:
    - id: progressCallbackAsync
      type: SuperOffice.CRM.Entities.ProgressCallbackAsync
    content.vb: Public Sub New(progressCallbackAsync As ProgressCallbackAsync)
  overload: SuperOffice.CRM.Entities.SaintRegenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync(System.Threading.CancellationToken)
  id: EnsureUdefsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.SaintRegenerator
  langs:
  - csharp
  - vb
  name: EnsureUdefsAsync(CancellationToken)
  nameWithType: SaintRegenerator.EnsureUdefsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task EnsureUdefsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function EnsureUdefsAsync(cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync(System.Threading.CancellationToken)
  id: RegenerateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.SaintRegenerator
  langs:
  - csharp
  - vb
  name: RegenerateAsync(CancellationToken)
  nameWithType: SaintRegenerator.RegenerateAsync(CancellationToken)
  fullName: SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public Task<bool> RegenerateAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function RegenerateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Entities.SaintRegenerator.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SaintRegenerator, To>()
  nameWithType: EnumUtil.MapEnums<SaintRegenerator, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.SaintRegenerator, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SaintRegenerator, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.SaintRegenerator, To)()
  name.vb: MapEnums(Of SaintRegenerator, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SaintRegenerator, To>
    nameWithType: EnumUtil.MapEnums<SaintRegenerator, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.SaintRegenerator, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SaintRegenerator, To)
    nameWithType: EnumUtil.MapEnums(Of SaintRegenerator, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.SaintRegenerator, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.SaintRegenerator.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SaintRegenerator, To>()
  nameWithType: Converters.MapEnums<SaintRegenerator, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.SaintRegenerator, To>()
  nameWithType.vb: Converters.MapEnums(Of SaintRegenerator, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.SaintRegenerator, To)()
  name.vb: MapEnums(Of SaintRegenerator, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SaintRegenerator, To>
    nameWithType: Converters.MapEnums<SaintRegenerator, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.SaintRegenerator, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SaintRegenerator, To)
    nameWithType: Converters.MapEnums(Of SaintRegenerator, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.SaintRegenerator, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Entities.SaintRegenerator.#ctor*
  commentId: Overload:SuperOffice.CRM.Entities.SaintRegenerator.#ctor
  isExternal: true
  name: SaintRegenerator
  nameWithType: SaintRegenerator.SaintRegenerator
  fullName: SuperOffice.CRM.Entities.SaintRegenerator.SaintRegenerator
- uid: SuperOffice.CRM.Entities.ProgressCallbackAsync
  commentId: T:SuperOffice.CRM.Entities.ProgressCallbackAsync
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: ProgressCallbackAsync
  nameWithType: ProgressCallbackAsync
  fullName: SuperOffice.CRM.Entities.ProgressCallbackAsync
- uid: SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync
  isExternal: true
  name: EnsureUdefsAsync
  nameWithType: SaintRegenerator.EnsureUdefsAsync
  fullName: SuperOffice.CRM.Entities.SaintRegenerator.EnsureUdefsAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync*
  commentId: Overload:SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync
  isExternal: true
  name: RegenerateAsync
  nameWithType: SaintRegenerator.RegenerateAsync
  fullName: SuperOffice.CRM.Entities.SaintRegenerator.RegenerateAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
