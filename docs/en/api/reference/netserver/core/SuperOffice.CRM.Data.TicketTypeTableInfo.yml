### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo
  commentId: T:SuperOffice.CRM.Data.TicketTypeTableInfo
  id: TicketTypeTableInfo
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority
  - SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  - SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus
  - SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Definition
  - SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableName
  - SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Icon
  - SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault
  - SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal
  - SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  - SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  - SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  - SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  - SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Name
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Rank
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Registered
  - SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId
  - SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  - SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition
  - SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew
  - SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip
  - SuperOffice.CRM.Data.TicketTypeTableInfo.Updated
  - SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId
  - SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  - SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount
  - SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups
  langs:
  - csharp
  - vb
  name: TicketTypeTableInfo
  nameWithType: TicketTypeTableInfo
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable &apos;ticket_type&apos;: A ticket (request) type\n"
  remarks: "\nAn instance of this class represents one instance of this table in an SQL statement. In most\ncases each table appears only once in a SELECT, but in cases where you need to self-join, or\nthere are multiple occurrences for other reasons (typically additional restrictions in the joins),\nthen you will need multiple instances. <br />\nInstances of this class are created by calling <see cref=\"!:TablesInfo.GetTicketTypeInfo()\"></see>.\n"
  syntax:
    content: >-
      [DatabaseTable("ticket_type")]

      public class TicketTypeTableInfo : TableInfo, ICloneable
    content.vb: >-
      <DatabaseTable("ticket_type")>

      Public Class TicketTypeTableInfo
          Inherits TableInfo
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.TableInfo
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.TableInfo.ToString
  - SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.Data.SQL.TableInfo.Clone
  - SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  - SuperOffice.Data.SQL.TableInfo.ProtAll
  - SuperOffice.Data.SQL.TableInfo.HashCheckFields
  - SuperOffice.Data.SQL.TableInfo.TableName
  - SuperOffice.Data.SQL.TableInfo.DbName
  - SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  - SuperOffice.Data.SQL.TableInfo.All
  - SuperOffice.Data.SQL.TableInfo.Item(System.String)
  - SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  extensionMethods:
  - SuperOffice.CRM.Data.TicketTypeTableInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.TicketTypeTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.SQL.DatabaseTableAttribute
    ctor: SuperOffice.Data.SQL.DatabaseTableAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ticket_type
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableName
  commentId: F:SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableName
  id: DictionaryTableName
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableName
  nameWithType: TicketTypeTableInfo.DictionaryTableName
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nConceptual name of table TicketType in the database dictionary: ticket_type\n"
  syntax:
    content: public const string DictionaryTableName = "ticket_type"
    return:
      type: System.String
    content.vb: Public Const DictionaryTableName As String = "ticket_type"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber
  id: DictionaryTableNumber
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: DictionaryTableNumber
  nameWithType: TicketTypeTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nTable number for table TicketType in the database dictionary; potentially changes between databases, but\nalways the same over the lifetime of any single database\n"
  syntax:
    content: public int DictionaryTableNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DictionaryTableNumber As Integer
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition
  id: RuntimeDefinition
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: RuntimeDefinition
  nameWithType: TicketTypeTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: public static SoTable RuntimeDefinition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Shared ReadOnly Property RuntimeDefinition As SoTable
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Definition
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Definition
  id: Definition
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Definition
  nameWithType: TicketTypeTableInfo.Definition
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Definition
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDefinition of the table as described in the deployed runtime dictionary\n"
  syntax:
    content: public override SoTable Definition { get; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoTable
    content.vb: Public Overrides ReadOnly Property Definition As SoTable
  overridden: SuperOffice.Data.SQL.TableInfo.Definition
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Definition*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId
  id: TicketTypeId
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: TicketTypeId
  nameWithType: TicketTypeTableInfo.TicketTypeId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;ticket_type_id&apos; in table &apos;ticket_type&apos;: Dictionary type PK, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nPrimary key\n"
  syntax:
    content: public Int32FieldInfo TicketTypeId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property TicketTypeId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Name
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Name
  id: Name
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: TicketTypeTableInfo.Name
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Name
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;name&apos; in table &apos;ticket_type&apos;: Dictionary type String[4001], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nThe list item\n"
  syntax:
    content: public StringFieldInfo Name { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Name As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Rank
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Rank
  id: Rank
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: TicketTypeTableInfo.Rank
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Rank
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;rank&apos; in table &apos;ticket_type&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRank order\n"
  syntax:
    content: public UInt16FieldInfo Rank { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property Rank As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Rank*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip
  id: Tooltip
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Tooltip
  nameWithType: TicketTypeTableInfo.Tooltip
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;tooltip&apos; in table &apos;ticket_type&apos;: Dictionary type String[4001], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nTooltip or other description\n"
  syntax:
    content: public StringFieldInfo Tooltip { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Tooltip As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Icon
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Icon
  id: Icon
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: TicketTypeTableInfo.Icon
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Icon
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;icon&apos; in table &apos;ticket_type&apos;: Dictionary type String[33], .NET type: <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nName of the icon\n"
  syntax:
    content: public StringFieldInfo Icon { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.StringFieldInfo
    content.vb: Public ReadOnly Property Icon As StringFieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Icon*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus
  id: DefaultStatus
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: DefaultStatus
  nameWithType: TicketTypeTableInfo.DefaultStatus
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;default_status&apos; in table &apos;ticket_type&apos;: Dictionary type FK, target: TicketStatus, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDefault ticket status for new tickets\n"
  syntax:
    content: public Int32FieldInfo DefaultStatus { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property DefaultStatus As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority
  id: DefaultPriority
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: DefaultPriority
  nameWithType: TicketTypeTableInfo.DefaultPriority
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;default_priority&apos; in table &apos;ticket_type&apos;: Dictionary type FK, target: TicketPriority, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDefault ticket priority for new tickets\n"
  syntax:
    content: public Int32FieldInfo DefaultPriority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property DefaultPriority As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate
  id: ReplyTemplate
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ReplyTemplate
  nameWithType: TicketTypeTableInfo.ReplyTemplate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reply_template&apos; in table &apos;ticket_type&apos;: Dictionary type FK, target: ReplyTemplate, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nReply template to use when replying to a ticket of this type\n"
  syntax:
    content: public Int32FieldInfo ReplyTemplate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property ReplyTemplate As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal
  id: IsExternal
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: IsExternal
  nameWithType: TicketTypeTableInfo.IsExternal
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;is_external&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIs this request type visible to external people and they can submit requests of this type\n"
  syntax:
    content: public UInt16FieldInfo IsExternal { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property IsExternal As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Registered
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Registered
  id: Registered
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: TicketTypeTableInfo.Registered
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered&apos; in table &apos;ticket_type&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered when\n"
  syntax:
    content: public DateTimeFieldInfo Registered { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Registered As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Registered*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: TicketTypeTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;registered_associate_id&apos; in table &apos;ticket_type&apos;: Dictionary type FK, target: Associate, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nRegistered by whom\n"
  syntax:
    content: public Int32FieldInfo RegisteredAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property RegisteredAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Updated
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.Updated
  id: Updated
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: TicketTypeTableInfo.Updated
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated&apos; in table &apos;ticket_type&apos;: Dictionary type UtcDateTime, .NET type: <xref href=\"System.DateTime\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast updated when\n"
  syntax:
    content: public DateTimeFieldInfo Updated { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.DateTimeFieldInfo
    content.vb: Public ReadOnly Property Updated As DateTimeFieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.Updated*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: TicketTypeTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updated_associate_id&apos; in table &apos;ticket_type&apos;: Dictionary type FK, target: Associate, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nLast updated by whom\n"
  syntax:
    content: public Int32FieldInfo UpdatedAssociateId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32FieldInfo
    content.vb: Public ReadOnly Property UpdatedAssociateId As Int32FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: TicketTypeTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;updatedCount&apos; in table &apos;ticket_type&apos;: Dictionary type UShort, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nNumber of updates made to this record\n"
  syntax:
    content: public UInt16FieldInfo UpdatedCount { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property UpdatedCount As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault
  id: IsDefault
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: IsDefault
  nameWithType: TicketTypeTableInfo.IsDefault
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;is_default&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nIs this Ticket Type marked as default\n"
  syntax:
    content: public UInt16FieldInfo IsDefault { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property IsDefault As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew
  id: ShowInNew
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ShowInNew
  nameWithType: TicketTypeTableInfo.ShowInNew
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;show_in_new&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nEnables this request type to be accessible in +New in top bar\n"
  syntax:
    content: public UInt16FieldInfo ShowInNew { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ShowInNew As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature
  id: ExcludeSignature
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ExcludeSignature
  nameWithType: TicketTypeTableInfo.ExcludeSignature
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;exclude_signature&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDo not insert user signature automatically\n"
  syntax:
    content: public UInt16FieldInfo ExcludeSignature { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ExcludeSignature As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients
  id: ExcludeEmailRecipients
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ExcludeEmailRecipients
  nameWithType: TicketTypeTableInfo.ExcludeEmailRecipients
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;exclude_email_recipients&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nCreate request without initially having to send outbound e-mail\n"
  syntax:
    content: public UInt16FieldInfo ExcludeEmailRecipients { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ExcludeEmailRecipients As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault
  id: ExternalAsDefault
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ExternalAsDefault
  nameWithType: TicketTypeTableInfo.ExternalAsDefault
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;external_as_default&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nAbility to set external access level for this request type\n"
  syntax:
    content: public UInt16FieldInfo ExternalAsDefault { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ExternalAsDefault As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups
  id: VisibleForGroups
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: VisibleForGroups
  nameWithType: TicketTypeTableInfo.VisibleForGroups
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;visible_for_groups&apos; in table &apos;ticket_type&apos;: Dictionary type FKArray, .NET type: <xref href=\"System.Int32\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nArray of references to the visible for groups\n"
  syntax:
    content: public Int32ArrayFieldInfo VisibleForGroups { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Int32ArrayFieldInfo
    content.vb: Public ReadOnly Property VisibleForGroups As Int32ArrayFieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature
  id: ReplyForwardNoSignature
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ReplyForwardNoSignature
  nameWithType: TicketTypeTableInfo.ReplyForwardNoSignature
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reply_forward_no_signature&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nDo not insert user signature when replying or forwarding the message\n"
  syntax:
    content: public UInt16FieldInfo ReplyForwardNoSignature { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ReplyForwardNoSignature As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault
  id: ReplyExternalAsDefault
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ReplyExternalAsDefault
  nameWithType: TicketTypeTableInfo.ReplyExternalAsDefault
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nField &apos;reply_external_as_default&apos; in table &apos;ticket_type&apos;: Dictionary type Bool, .NET type: <xref href=\"System.Int16\" data-throw-if-not-resolved=\"false\"></xref><p></p>\nSet external access level when replying the message\n"
  syntax:
    content: public UInt16FieldInfo ReplyExternalAsDefault { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.UInt16FieldInfo
    content.vb: Public ReadOnly Property ReplyExternalAsDefault As UInt16FieldInfo
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  id: DefaultStatus_InnerJoin_TicketStatus
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: DefaultStatus_InnerJoin_TicketStatus
  nameWithType: TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key DefaultStatus in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketStatusTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketStatusTableInfo> DefaultStatus_InnerJoin_TicketStatus { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketStatusTableInfo}
    content.vb: Public ReadOnly Property DefaultStatus_InnerJoin_TicketStatus As TargetedInnerJoin(Of TicketStatusTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  id: DefaultPriority_InnerJoin_TicketPriority
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: DefaultPriority_InnerJoin_TicketPriority
  nameWithType: TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key DefaultPriority in this table, to its target table <xref href=\"SuperOffice.CRM.Data.TicketPriorityTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<TicketPriorityTableInfo> DefaultPriority_InnerJoin_TicketPriority { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
    content.vb: Public ReadOnly Property DefaultPriority_InnerJoin_TicketPriority As TargetedInnerJoin(Of TicketPriorityTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  id: ReplyTemplate_InnerJoin_ReplyTemplate
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: ReplyTemplate_InnerJoin_ReplyTemplate
  nameWithType: TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key ReplyTemplate in this table, to its target table <xref href=\"SuperOffice.CRM.Data.ReplyTemplateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<ReplyTemplateTableInfo> ReplyTemplate_InnerJoin_ReplyTemplate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReplyTemplateTableInfo}
    content.vb: Public ReadOnly Property ReplyTemplate_InnerJoin_ReplyTemplate As TargetedInnerJoin(Of ReplyTemplateTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  id: RegisteredAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key RegisteredAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> RegisteredAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property RegisteredAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  id: UpdatedAssociateId_InnerJoin_Associate
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated join from the foreign key UpdatedAssociateId in this table, to its target table <xref href=\"SuperOffice.CRM.Data.AssociateTableInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedInnerJoin<AssociateTableInfo> UpdatedAssociateId_InnerJoin_Associate { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
    content.vb: Public ReadOnly Property UpdatedAssociateId_InnerJoin_Associate As TargetedInnerJoin(Of AssociateTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  id: LeftOuterJoin_Ticket_TicketType
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_Ticket_TicketType
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketTypeId on this table, to Ticket.<xref href=\"SuperOffice.CRM.Data.TicketTableInfo.TicketType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketTableInfo> LeftOuterJoin_Ticket_TicketType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_Ticket_TicketType As TargetedLeftOuterJoin(Of TicketTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  id: LeftOuterJoin_MailInFilter_TicketType
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_MailInFilter_TicketType
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketTypeId on this table, to MailInFilter.<xref href=\"SuperOffice.CRM.Data.MailInFilterTableInfo.TicketType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<MailInFilterTableInfo> LeftOuterJoin_MailInFilter_TicketType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.MailInFilterTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_MailInFilter_TicketType As TargetedLeftOuterJoin(Of MailInFilterTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  id: LeftOuterJoin_MsFilter_NewTicketType
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_MsFilter_NewTicketType
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketTypeId on this table, to MsFilter.<xref href=\"SuperOffice.CRM.Data.MsFilterTableInfo.NewTicketType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<MsFilterTableInfo> LeftOuterJoin_MsFilter_NewTicketType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.MsFilterTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_MsFilter_NewTicketType As TargetedLeftOuterJoin(Of MsFilterTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  id: LeftOuterJoin_TicketTypePriority_TicketTypeId
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketTypePriority_TicketTypeId
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketTypeId on this table, to TicketTypePriority.<xref href=\"SuperOffice.CRM.Data.TicketTypePriorityTableInfo.TicketTypeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketTypePriorityTableInfo> LeftOuterJoin_TicketTypePriority_TicketTypeId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTypePriorityTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketTypePriority_TicketTypeId As TargetedLeftOuterJoin(Of TicketTypePriorityTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  commentId: P:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  id: LeftOuterJoin_TicketTypeStatus_TicketTypeId
  parent: SuperOffice.CRM.Data.TicketTypeTableInfo
  langs:
  - csharp
  - vb
  name: LeftOuterJoin_TicketTypeStatus_TicketTypeId
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nGenerated left outer join from the primary key TicketTypeId on this table, to TicketTypeStatus.<xref href=\"SuperOffice.CRM.Data.TicketTypeStatusTableInfo.TicketTypeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public TargetedLeftOuterJoin<TicketTypeStatusTableInfo> LeftOuterJoin_TicketTypeStatus_TicketTypeId { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTypeStatusTableInfo}
    content.vb: Public ReadOnly Property LeftOuterJoin_TicketTypeStatus_TicketTypeId As TargetedLeftOuterJoin(Of TicketTypeStatusTableInfo)
  overload: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.TableInfo.ToString
  commentId: M:SuperOffice.Data.SQL.TableInfo.ToString
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ToString()
  nameWithType: TableInfo.ToString()
  fullName: SuperOffice.Data.SQL.TableInfo.ToString()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.ToString
    name: ToString
    nameWithType: TableInfo.ToString
    fullName: SuperOffice.Data.SQL.TableInfo.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: RegisterFields(FieldInfo[])
  nameWithType: TableInfo.RegisterFields(FieldInfo[])
  fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
  nameWithType.vb: TableInfo.RegisterFields(FieldInfo())
  fullName.vb: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo())
  name.vb: RegisterFields(FieldInfo())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.RegisterFields(SuperOffice.Data.SQL.FieldInfo[])
    name: RegisterFields
    nameWithType: TableInfo.RegisterFields
    fullName: SuperOffice.Data.SQL.TableInfo.RegisterFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FieldInfoFromSoField(SoField)
  nameWithType: TableInfo.FieldInfoFromSoField(SoField)
  fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField(SuperOffice.Data.Dictionary.SoField)
    name: FieldInfoFromSoField
    nameWithType: TableInfo.FieldInfoFromSoField
    fullName: SuperOffice.Data.SQL.TableInfo.FieldInfoFromSoField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.Clone
  commentId: M:SuperOffice.Data.SQL.TableInfo.Clone
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Clone()
  nameWithType: TableInfo.Clone()
  fullName: SuperOffice.Data.SQL.TableInfo.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Clone
    name: Clone
    nameWithType: TableInfo.Clone
    fullName: SuperOffice.Data.SQL.TableInfo.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsSameTable(TableInfo)
  nameWithType: TableInfo.IsSameTable(TableInfo)
  fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.IsSameTable(SuperOffice.Data.SQL.TableInfo)
    name: IsSameTable
    nameWithType: TableInfo.IsSameTable
    fullName: SuperOffice.Data.SQL.TableInfo.IsSameTable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  commentId: M:SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: FindField(String)
  nameWithType: TableInfo.FindField(String)
  fullName: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.FindField(System.String)
    name: FindField
    nameWithType: TableInfo.FindField
    fullName: SuperOffice.Data.SQL.TableInfo.FindField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.ProtAll
  commentId: P:SuperOffice.Data.SQL.TableInfo.ProtAll
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: ProtAll
  nameWithType: TableInfo.ProtAll
  fullName: SuperOffice.Data.SQL.TableInfo.ProtAll
- uid: SuperOffice.Data.SQL.TableInfo.HashCheckFields
  commentId: P:SuperOffice.Data.SQL.TableInfo.HashCheckFields
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: HashCheckFields
  nameWithType: TableInfo.HashCheckFields
  fullName: SuperOffice.Data.SQL.TableInfo.HashCheckFields
- uid: SuperOffice.Data.SQL.TableInfo.TableName
  commentId: P:SuperOffice.Data.SQL.TableInfo.TableName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: TableName
  nameWithType: TableInfo.TableName
  fullName: SuperOffice.Data.SQL.TableInfo.TableName
- uid: SuperOffice.Data.SQL.TableInfo.DbName
  commentId: P:SuperOffice.Data.SQL.TableInfo.DbName
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: DbName
  nameWithType: TableInfo.DbName
  fullName: SuperOffice.Data.SQL.TableInfo.DbName
- uid: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  commentId: P:SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: IsDictionaryTable
  nameWithType: TableInfo.IsDictionaryTable
  fullName: SuperOffice.Data.SQL.TableInfo.IsDictionaryTable
- uid: SuperOffice.Data.SQL.TableInfo.All
  commentId: P:SuperOffice.Data.SQL.TableInfo.All
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: All
  nameWithType: TableInfo.All
  fullName: SuperOffice.Data.SQL.TableInfo.All
- uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  commentId: P:SuperOffice.Data.SQL.TableInfo.Item(System.String)
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Item[String]
  nameWithType: TableInfo.Item[String]
  fullName: SuperOffice.Data.SQL.TableInfo.Item[System.String]
  nameWithType.vb: TableInfo.Item(String)
  fullName.vb: SuperOffice.Data.SQL.TableInfo.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TableInfo.Item(System.String)
    name: Item
    nameWithType: TableInfo.Item
    fullName: SuperOffice.Data.SQL.TableInfo.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  commentId: P:SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: PrimaryKeyField
  nameWithType: TableInfo.PrimaryKeyField
  fullName: SuperOffice.Data.SQL.TableInfo.PrimaryKeyField
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketTypeTableInfo, To>()
  nameWithType: EnumUtil.MapEnums<TicketTypeTableInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.TicketTypeTableInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketTypeTableInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.TicketTypeTableInfo, To)()
  name.vb: MapEnums(Of TicketTypeTableInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketTypeTableInfo, To>
    nameWithType: EnumUtil.MapEnums<TicketTypeTableInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.TicketTypeTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketTypeTableInfo, To)
    nameWithType: EnumUtil.MapEnums(Of TicketTypeTableInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.TicketTypeTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketTypeTableInfo, To>()
  nameWithType: Converters.MapEnums<TicketTypeTableInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.TicketTypeTableInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketTypeTableInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.TicketTypeTableInfo, To)()
  name.vb: MapEnums(Of TicketTypeTableInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketTypeTableInfo, To>
    nameWithType: Converters.MapEnums<TicketTypeTableInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.TicketTypeTableInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketTypeTableInfo, To)
    nameWithType: Converters.MapEnums(Of TicketTypeTableInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.TicketTypeTableInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber
  isExternal: true
  name: DictionaryTableNumber
  nameWithType: TicketTypeTableInfo.DictionaryTableNumber
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DictionaryTableNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition
  isExternal: true
  name: RuntimeDefinition
  nameWithType: TicketTypeTableInfo.RuntimeDefinition
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.RuntimeDefinition
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.Data.SQL.TableInfo.Definition
  commentId: P:SuperOffice.Data.SQL.TableInfo.Definition
  parent: SuperOffice.Data.SQL.TableInfo
  isExternal: true
  name: Definition
  nameWithType: TableInfo.Definition
  fullName: SuperOffice.Data.SQL.TableInfo.Definition
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Definition*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Definition
  isExternal: true
  name: Definition
  nameWithType: TicketTypeTableInfo.Definition
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Definition
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId
  isExternal: true
  name: TicketTypeId
  nameWithType: TicketTypeTableInfo.TicketTypeId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.TicketTypeId
- uid: SuperOffice.Data.SQL.Int32FieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32FieldInfo
  nameWithType: Int32FieldInfo
  fullName: SuperOffice.Data.SQL.Int32FieldInfo
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Name*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Name
  isExternal: true
  name: Name
  nameWithType: TicketTypeTableInfo.Name
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Name
- uid: SuperOffice.Data.SQL.StringFieldInfo
  commentId: T:SuperOffice.Data.SQL.StringFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: StringFieldInfo
  nameWithType: StringFieldInfo
  fullName: SuperOffice.Data.SQL.StringFieldInfo
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Rank*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Rank
  isExternal: true
  name: Rank
  nameWithType: TicketTypeTableInfo.Rank
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Rank
- uid: SuperOffice.Data.SQL.UInt16FieldInfo
  commentId: T:SuperOffice.Data.SQL.UInt16FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: UInt16FieldInfo
  nameWithType: UInt16FieldInfo
  fullName: SuperOffice.Data.SQL.UInt16FieldInfo
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip
  isExternal: true
  name: Tooltip
  nameWithType: TicketTypeTableInfo.Tooltip
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Tooltip
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Icon*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Icon
  isExternal: true
  name: Icon
  nameWithType: TicketTypeTableInfo.Icon
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Icon
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus
  isExternal: true
  name: DefaultStatus
  nameWithType: TicketTypeTableInfo.DefaultStatus
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority
  isExternal: true
  name: DefaultPriority
  nameWithType: TicketTypeTableInfo.DefaultPriority
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate
  isExternal: true
  name: ReplyTemplate
  nameWithType: TicketTypeTableInfo.ReplyTemplate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal
  isExternal: true
  name: IsExternal
  nameWithType: TicketTypeTableInfo.IsExternal
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.IsExternal
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Registered*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Registered
  isExternal: true
  name: Registered
  nameWithType: TicketTypeTableInfo.Registered
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Registered
- uid: SuperOffice.Data.SQL.DateTimeFieldInfo
  commentId: T:SuperOffice.Data.SQL.DateTimeFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: DateTimeFieldInfo
  nameWithType: DateTimeFieldInfo
  fullName: SuperOffice.Data.SQL.DateTimeFieldInfo
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: TicketTypeTableInfo.RegisteredAssociateId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.Updated*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.Updated
  isExternal: true
  name: Updated
  nameWithType: TicketTypeTableInfo.Updated
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.Updated
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: TicketTypeTableInfo.UpdatedAssociateId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: TicketTypeTableInfo.UpdatedCount
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedCount
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault
  isExternal: true
  name: IsDefault
  nameWithType: TicketTypeTableInfo.IsDefault
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.IsDefault
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew
  isExternal: true
  name: ShowInNew
  nameWithType: TicketTypeTableInfo.ShowInNew
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ShowInNew
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature
  isExternal: true
  name: ExcludeSignature
  nameWithType: TicketTypeTableInfo.ExcludeSignature
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeSignature
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients
  isExternal: true
  name: ExcludeEmailRecipients
  nameWithType: TicketTypeTableInfo.ExcludeEmailRecipients
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ExcludeEmailRecipients
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault
  isExternal: true
  name: ExternalAsDefault
  nameWithType: TicketTypeTableInfo.ExternalAsDefault
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ExternalAsDefault
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups
  isExternal: true
  name: VisibleForGroups
  nameWithType: TicketTypeTableInfo.VisibleForGroups
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.VisibleForGroups
- uid: SuperOffice.Data.SQL.Int32ArrayFieldInfo
  commentId: T:SuperOffice.Data.SQL.Int32ArrayFieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Int32ArrayFieldInfo
  nameWithType: Int32ArrayFieldInfo
  fullName: SuperOffice.Data.SQL.Int32ArrayFieldInfo
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature
  isExternal: true
  name: ReplyForwardNoSignature
  nameWithType: TicketTypeTableInfo.ReplyForwardNoSignature
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyForwardNoSignature
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault
  isExternal: true
  name: ReplyExternalAsDefault
  nameWithType: TicketTypeTableInfo.ReplyExternalAsDefault
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyExternalAsDefault
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  isExternal: true
  name: DefaultStatus_InnerJoin_TicketStatus
  nameWithType: TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultStatus_InnerJoin_TicketStatus
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketStatusTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketStatusTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TicketStatusTableInfo>
  nameWithType: TargetedInnerJoin<TicketStatusTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TicketStatusTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TicketStatusTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TicketStatusTableInfo)
  name.vb: TargetedInnerJoin(Of TicketStatusTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketStatusTableInfo
    name: TicketStatusTableInfo
    nameWithType: TicketStatusTableInfo
    fullName: SuperOffice.CRM.Data.TicketStatusTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketStatusTableInfo
    name: TicketStatusTableInfo
    nameWithType: TicketStatusTableInfo
    fullName: SuperOffice.CRM.Data.TicketStatusTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin`1
  isExternal: true
  name: TargetedInnerJoin<TargetTableInfo>
  nameWithType: TargetedInnerJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<TargetTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of TargetTableInfo)
  name.vb: TargetedInnerJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  isExternal: true
  name: DefaultPriority_InnerJoin_TicketPriority
  nameWithType: TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.DefaultPriority_InnerJoin_TicketPriority
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.TicketPriorityTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<TicketPriorityTableInfo>
  nameWithType: TargetedInnerJoin<TicketPriorityTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.TicketPriorityTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of TicketPriorityTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.TicketPriorityTableInfo)
  name.vb: TargetedInnerJoin(Of TicketPriorityTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketPriorityTableInfo
    name: TicketPriorityTableInfo
    nameWithType: TicketPriorityTableInfo
    fullName: SuperOffice.CRM.Data.TicketPriorityTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketPriorityTableInfo
    name: TicketPriorityTableInfo
    nameWithType: TicketPriorityTableInfo
    fullName: SuperOffice.CRM.Data.TicketPriorityTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  isExternal: true
  name: ReplyTemplate_InnerJoin_ReplyTemplate
  nameWithType: TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.ReplyTemplate_InnerJoin_ReplyTemplate
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReplyTemplateTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.ReplyTemplateTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<ReplyTemplateTableInfo>
  nameWithType: TargetedInnerJoin<ReplyTemplateTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.ReplyTemplateTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of ReplyTemplateTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.ReplyTemplateTableInfo)
  name.vb: TargetedInnerJoin(Of ReplyTemplateTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.ReplyTemplateTableInfo
    name: ReplyTemplateTableInfo
    nameWithType: ReplyTemplateTableInfo
    fullName: SuperOffice.CRM.Data.ReplyTemplateTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.ReplyTemplateTableInfo
    name: ReplyTemplateTableInfo
    nameWithType: ReplyTemplateTableInfo
    fullName: SuperOffice.CRM.Data.ReplyTemplateTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  isExternal: true
  name: RegisteredAssociateId_InnerJoin_Associate
  nameWithType: TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.RegisteredAssociateId_InnerJoin_Associate
- uid: SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedInnerJoin{SuperOffice.CRM.Data.AssociateTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedInnerJoin`1
  name: TargetedInnerJoin<AssociateTableInfo>
  nameWithType: TargetedInnerJoin<AssociateTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedInnerJoin<SuperOffice.CRM.Data.AssociateTableInfo>
  nameWithType.vb: TargetedInnerJoin(Of AssociateTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedInnerJoin(Of SuperOffice.CRM.Data.AssociateTableInfo)
  name.vb: TargetedInnerJoin(Of AssociateTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedInnerJoin`1
    name: TargetedInnerJoin
    nameWithType: TargetedInnerJoin
    fullName: SuperOffice.Data.SQL.TargetedInnerJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.AssociateTableInfo
    name: AssociateTableInfo
    nameWithType: AssociateTableInfo
    fullName: SuperOffice.CRM.Data.AssociateTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  isExternal: true
  name: UpdatedAssociateId_InnerJoin_Associate
  nameWithType: TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.UpdatedAssociateId_InnerJoin_Associate
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  isExternal: true
  name: LeftOuterJoin_Ticket_TicketType
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_Ticket_TicketType
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketTableInfo
    name: TicketTableInfo
    nameWithType: TicketTableInfo
    fullName: SuperOffice.CRM.Data.TicketTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketTableInfo
    name: TicketTableInfo
    nameWithType: TicketTableInfo
    fullName: SuperOffice.CRM.Data.TicketTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  isExternal: true
  name: TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType: TargetedLeftOuterJoin<TargetTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<TargetTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of TargetTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TargetTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TargetTableInfo
    nameWithType: TargetTableInfo
    fullName: TargetTableInfo
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  isExternal: true
  name: LeftOuterJoin_MailInFilter_TicketType
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MailInFilter_TicketType
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.MailInFilterTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.MailInFilterTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<MailInFilterTableInfo>
  nameWithType: TargetedLeftOuterJoin<MailInFilterTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.MailInFilterTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of MailInFilterTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.MailInFilterTableInfo)
  name.vb: TargetedLeftOuterJoin(Of MailInFilterTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.MailInFilterTableInfo
    name: MailInFilterTableInfo
    nameWithType: MailInFilterTableInfo
    fullName: SuperOffice.CRM.Data.MailInFilterTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.MailInFilterTableInfo
    name: MailInFilterTableInfo
    nameWithType: MailInFilterTableInfo
    fullName: SuperOffice.CRM.Data.MailInFilterTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  isExternal: true
  name: LeftOuterJoin_MsFilter_NewTicketType
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_MsFilter_NewTicketType
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.MsFilterTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.MsFilterTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<MsFilterTableInfo>
  nameWithType: TargetedLeftOuterJoin<MsFilterTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.MsFilterTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of MsFilterTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.MsFilterTableInfo)
  name.vb: TargetedLeftOuterJoin(Of MsFilterTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.MsFilterTableInfo
    name: MsFilterTableInfo
    nameWithType: MsFilterTableInfo
    fullName: SuperOffice.CRM.Data.MsFilterTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.MsFilterTableInfo
    name: MsFilterTableInfo
    nameWithType: MsFilterTableInfo
    fullName: SuperOffice.CRM.Data.MsFilterTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  isExternal: true
  name: LeftOuterJoin_TicketTypePriority_TicketTypeId
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypePriority_TicketTypeId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTypePriorityTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTypePriorityTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketTypePriorityTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketTypePriorityTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketTypePriorityTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketTypePriorityTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketTypePriorityTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketTypePriorityTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketTypePriorityTableInfo
    name: TicketTypePriorityTableInfo
    nameWithType: TicketTypePriorityTableInfo
    fullName: SuperOffice.CRM.Data.TicketTypePriorityTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketTypePriorityTableInfo
    name: TicketTypePriorityTableInfo
    nameWithType: TicketTypePriorityTableInfo
    fullName: SuperOffice.CRM.Data.TicketTypePriorityTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId*
  commentId: Overload:SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  isExternal: true
  name: LeftOuterJoin_TicketTypeStatus_TicketTypeId
  nameWithType: TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
  fullName: SuperOffice.CRM.Data.TicketTypeTableInfo.LeftOuterJoin_TicketTypeStatus_TicketTypeId
- uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTypeStatusTableInfo}
  commentId: T:SuperOffice.Data.SQL.TargetedLeftOuterJoin{SuperOffice.CRM.Data.TicketTypeStatusTableInfo}
  parent: SuperOffice.Data.SQL
  definition: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
  name: TargetedLeftOuterJoin<TicketTypeStatusTableInfo>
  nameWithType: TargetedLeftOuterJoin<TicketTypeStatusTableInfo>
  fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin<SuperOffice.CRM.Data.TicketTypeStatusTableInfo>
  nameWithType.vb: TargetedLeftOuterJoin(Of TicketTypeStatusTableInfo)
  fullName.vb: SuperOffice.Data.SQL.TargetedLeftOuterJoin(Of SuperOffice.CRM.Data.TicketTypeStatusTableInfo)
  name.vb: TargetedLeftOuterJoin(Of TicketTypeStatusTableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Data.TicketTypeStatusTableInfo
    name: TicketTypeStatusTableInfo
    nameWithType: TicketTypeStatusTableInfo
    fullName: SuperOffice.CRM.Data.TicketTypeStatusTableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.Data.SQL.TargetedLeftOuterJoin`1
    name: TargetedLeftOuterJoin
    nameWithType: TargetedLeftOuterJoin
    fullName: SuperOffice.Data.SQL.TargetedLeftOuterJoin
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Data.TicketTypeStatusTableInfo
    name: TicketTypeStatusTableInfo
    nameWithType: TicketTypeStatusTableInfo
    fullName: SuperOffice.CRM.Data.TicketTypeStatusTableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
