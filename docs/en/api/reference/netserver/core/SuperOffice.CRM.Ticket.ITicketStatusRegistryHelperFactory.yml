### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory
  commentId: T:SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory
  id: ITicketStatusRegistryHelperFactory
  parent: SuperOffice.CRM.Ticket
  children:
  - SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ITicketStatusRegistryHelperFactory
  nameWithType: ITicketStatusRegistryHelperFactory
  fullName: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: public interface ITicketStatusRegistryHelperFactory
    content.vb: Public Interface ITicketStatusRegistryHelperFactory
  extensionMethods:
  - SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync(System.Threading.CancellationToken)
  id: CreateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory
  langs:
  - csharp
  - vb
  name: CreateAsync(CancellationToken)
  nameWithType: ITicketStatusRegistryHelperFactory.CreateAsync(CancellationToken)
  fullName: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Ticket
  syntax:
    content: Task<ITicketStatusRegistryHelper> CreateAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper}
    content.vb: Function CreateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of ITicketStatusRegistryHelper)
  overload: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync*
references:
- uid: SuperOffice.CRM.Ticket
  commentId: N:SuperOffice.CRM.Ticket
  isExternal: true
  name: SuperOffice.CRM.Ticket
  nameWithType: SuperOffice.CRM.Ticket
  fullName: SuperOffice.CRM.Ticket
- uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ITicketStatusRegistryHelperFactory, To>()
  nameWithType: EnumUtil.MapEnums<ITicketStatusRegistryHelperFactory, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ITicketStatusRegistryHelperFactory, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To)()
  name.vb: MapEnums(Of ITicketStatusRegistryHelperFactory, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ITicketStatusRegistryHelperFactory, To>
    nameWithType: EnumUtil.MapEnums<ITicketStatusRegistryHelperFactory, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ITicketStatusRegistryHelperFactory, To)
    nameWithType: EnumUtil.MapEnums(Of ITicketStatusRegistryHelperFactory, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ITicketStatusRegistryHelperFactory, To>()
  nameWithType: Converters.MapEnums<ITicketStatusRegistryHelperFactory, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To>()
  nameWithType.vb: Converters.MapEnums(Of ITicketStatusRegistryHelperFactory, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To)()
  name.vb: MapEnums(Of ITicketStatusRegistryHelperFactory, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ITicketStatusRegistryHelperFactory, To>
    nameWithType: Converters.MapEnums<ITicketStatusRegistryHelperFactory, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ITicketStatusRegistryHelperFactory, To)
    nameWithType: Converters.MapEnums(Of ITicketStatusRegistryHelperFactory, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync*
  commentId: Overload:SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync
  isExternal: true
  name: CreateAsync
  nameWithType: ITicketStatusRegistryHelperFactory.CreateAsync
  fullName: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelperFactory.CreateAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ITicketStatusRegistryHelper>
  nameWithType: Task<ITicketStatusRegistryHelper>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper>
  nameWithType.vb: Task(Of ITicketStatusRegistryHelper)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper)
  name.vb: Task(Of ITicketStatusRegistryHelper)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper
    name: ITicketStatusRegistryHelper
    nameWithType: ITicketStatusRegistryHelper
    fullName: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper
    name: ITicketStatusRegistryHelper
    nameWithType: ITicketStatusRegistryHelper
    fullName: SuperOffice.CRM.Ticket.ITicketStatusRegistryHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
