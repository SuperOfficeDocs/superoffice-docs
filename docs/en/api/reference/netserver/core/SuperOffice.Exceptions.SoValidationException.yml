### YamlMime:ManagedReference
items:
- uid: SuperOffice.Exceptions.SoValidationException
  commentId: T:SuperOffice.Exceptions.SoValidationException
  id: SoValidationException
  parent: SuperOffice.Exceptions
  children:
  - SuperOffice.Exceptions.SoValidationException.#ctor(SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.Exceptions.SoValidationException.GetMessageFor(System.String)
  - SuperOffice.Exceptions.SoValidationException.Messages
  langs:
  - csharp
  - vb
  name: SoValidationException
  nameWithType: SoValidationException
  fullName: SuperOffice.Exceptions.SoValidationException
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Exceptions
  summary: "\nValidationException is thrown by the Save() methods if validation fails on an entity.\nContains a string map that describes all fields and their errors.\nThis is returned in the error object to the caller, so that they can highlight \nmissing/bad fields to the user, with explanations.\n"
  syntax:
    content: 'public class SoValidationException : SoException'
    content.vb: >-
      Public Class SoValidationException
          Inherits SoException
  inheritance:
  - System.Object
  - SuperOffice.Exceptions.SoException
  inheritedMembers:
  - SuperOffice.Exceptions.SoException.LogAsException
  - SuperOffice.Exceptions.SoException.FriendlyText
  extensionMethods:
  - SuperOffice.Exceptions.SoValidationException.EnumUtil.MapEnums``2
  - SuperOffice.Exceptions.SoValidationException.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Exceptions.SoValidationException.#ctor(SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.Exceptions.SoValidationException.#ctor(SuperOffice.CRM.Services.StringDictionary)
  id: '#ctor(SuperOffice.CRM.Services.StringDictionary)'
  parent: SuperOffice.Exceptions.SoValidationException
  langs:
  - csharp
  - vb
  name: SoValidationException(StringDictionary)
  nameWithType: SoValidationException.SoValidationException(StringDictionary)
  fullName: SuperOffice.Exceptions.SoValidationException.SoValidationException(SuperOffice.CRM.Services.StringDictionary)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Exceptions
  summary: "\nException with many messages.\n"
  syntax:
    content: public SoValidationException(StringDictionary messages)
    parameters:
    - id: messages
      type: SuperOffice.CRM.Services.StringDictionary
    content.vb: Public Sub New(messages As StringDictionary)
  overload: SuperOffice.Exceptions.SoValidationException.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Exceptions.SoValidationException.GetMessageFor(System.String)
  commentId: M:SuperOffice.Exceptions.SoValidationException.GetMessageFor(System.String)
  id: GetMessageFor(System.String)
  parent: SuperOffice.Exceptions.SoValidationException
  langs:
  - csharp
  - vb
  name: GetMessageFor(String)
  nameWithType: SoValidationException.GetMessageFor(String)
  fullName: SuperOffice.Exceptions.SoValidationException.GetMessageFor(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Exceptions
  summary: "\nReturns any message for a given field name, or blank if no message defined.\n"
  syntax:
    content: public string GetMessageFor(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.String
      description: Error message, or &quot;&quot; blank string.
    content.vb: Public Function GetMessageFor(key As String) As String
  overload: SuperOffice.Exceptions.SoValidationException.GetMessageFor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Exceptions.SoValidationException.Messages
  commentId: P:SuperOffice.Exceptions.SoValidationException.Messages
  id: Messages
  parent: SuperOffice.Exceptions.SoValidationException
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: SoValidationException.Messages
  fullName: SuperOffice.Exceptions.SoValidationException.Messages
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Exceptions
  summary: "\nThe message collection.\n"
  syntax:
    content: public StringDictionary Messages { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Services.StringDictionary
    content.vb: Public ReadOnly Property Messages As StringDictionary
  overload: SuperOffice.Exceptions.SoValidationException.Messages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Exceptions
  commentId: N:SuperOffice.Exceptions
  isExternal: true
  name: SuperOffice.Exceptions
  nameWithType: SuperOffice.Exceptions
  fullName: SuperOffice.Exceptions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Exceptions.SoException
  commentId: T:SuperOffice.Exceptions.SoException
  parent: SuperOffice.Exceptions
  isExternal: true
  name: SoException
  nameWithType: SoException
  fullName: SuperOffice.Exceptions.SoException
- uid: SuperOffice.Exceptions.SoException.LogAsException
  commentId: P:SuperOffice.Exceptions.SoException.LogAsException
  parent: SuperOffice.Exceptions.SoException
  isExternal: true
  name: LogAsException
  nameWithType: SoException.LogAsException
  fullName: SuperOffice.Exceptions.SoException.LogAsException
- uid: SuperOffice.Exceptions.SoException.FriendlyText
  commentId: P:SuperOffice.Exceptions.SoException.FriendlyText
  parent: SuperOffice.Exceptions.SoException
  isExternal: true
  name: FriendlyText
  nameWithType: SoException.FriendlyText
  fullName: SuperOffice.Exceptions.SoException.FriendlyText
- uid: SuperOffice.Exceptions.SoValidationException.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoValidationException, To>()
  nameWithType: EnumUtil.MapEnums<SoValidationException, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Exceptions.SoValidationException, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoValidationException, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Exceptions.SoValidationException, To)()
  name.vb: MapEnums(Of SoValidationException, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoValidationException, To>
    nameWithType: EnumUtil.MapEnums<SoValidationException, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Exceptions.SoValidationException, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoValidationException, To)
    nameWithType: EnumUtil.MapEnums(Of SoValidationException, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Exceptions.SoValidationException, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Exceptions.SoValidationException.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoValidationException, To>()
  nameWithType: Converters.MapEnums<SoValidationException, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Exceptions.SoValidationException, To>()
  nameWithType.vb: Converters.MapEnums(Of SoValidationException, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Exceptions.SoValidationException, To)()
  name.vb: MapEnums(Of SoValidationException, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoValidationException, To>
    nameWithType: Converters.MapEnums<SoValidationException, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Exceptions.SoValidationException, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoValidationException, To)
    nameWithType: Converters.MapEnums(Of SoValidationException, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Exceptions.SoValidationException, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Exceptions.SoValidationException.#ctor*
  commentId: Overload:SuperOffice.Exceptions.SoValidationException.#ctor
  isExternal: true
  name: SoValidationException
  nameWithType: SoValidationException.SoValidationException
  fullName: SuperOffice.Exceptions.SoValidationException.SoValidationException
- uid: SuperOffice.CRM.Services.StringDictionary
  commentId: T:SuperOffice.CRM.Services.StringDictionary
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: SuperOffice.Exceptions.SoValidationException.GetMessageFor*
  commentId: Overload:SuperOffice.Exceptions.SoValidationException.GetMessageFor
  isExternal: true
  name: GetMessageFor
  nameWithType: SoValidationException.GetMessageFor
  fullName: SuperOffice.Exceptions.SoValidationException.GetMessageFor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Exceptions.SoValidationException.Messages*
  commentId: Overload:SuperOffice.Exceptions.SoValidationException.Messages
  isExternal: true
  name: Messages
  nameWithType: SoValidationException.Messages
  fullName: SuperOffice.Exceptions.SoValidationException.Messages
