### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.ISoListHeading
  commentId: T:SuperOffice.CRM.Lists.ISoListHeading
  id: ISoListHeading
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.ISoListHeading.Heading
  - SuperOffice.CRM.Lists.ISoListHeading.Items
  langs:
  - csharp
  - vb
  name: ISoListHeading
  nameWithType: ISoListHeading
  fullName: SuperOffice.CRM.Lists.ISoListHeading
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Lists
  summary: "\nInterface for an MDO list heading, consisting of the heading item and a list of subitems\n"
  syntax:
    content: public interface ISoListHeading
    content.vb: Public Interface ISoListHeading
  extensionMethods:
  - SuperOffice.CRM.Lists.ISoListHeading.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.ISoListHeading.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Lists.ISoListHeading.Heading
  commentId: P:SuperOffice.CRM.Lists.ISoListHeading.Heading
  id: Heading
  parent: SuperOffice.CRM.Lists.ISoListHeading
  langs:
  - csharp
  - vb
  name: Heading
  nameWithType: ISoListHeading.Heading
  fullName: SuperOffice.CRM.Lists.ISoListHeading.Heading
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Lists
  summary: "\n"
  syntax:
    content: ISoListItem Heading { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.ISoListItem
    content.vb: ReadOnly Property Heading As ISoListItem
  overload: SuperOffice.CRM.Lists.ISoListHeading.Heading*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Lists.ISoListHeading.Items
  commentId: P:SuperOffice.CRM.Lists.ISoListHeading.Items
  id: Items
  parent: SuperOffice.CRM.Lists.ISoListHeading
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: ISoListHeading.Items
  fullName: SuperOffice.CRM.Lists.ISoListHeading.Items
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Lists
  summary: "\n"
  syntax:
    content: List<ISoListItem> Items { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
    content.vb: ReadOnly Property Items As List(Of ISoListItem)
  overload: SuperOffice.CRM.Lists.ISoListHeading.Items*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: SuperOffice.CRM.Lists.ISoListHeading.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ISoListHeading, To>()
  nameWithType: EnumUtil.MapEnums<ISoListHeading, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ISoListHeading, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ISoListHeading, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ISoListHeading, To)()
  name.vb: MapEnums(Of ISoListHeading, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ISoListHeading, To>
    nameWithType: EnumUtil.MapEnums<ISoListHeading, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ISoListHeading, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ISoListHeading, To)
    nameWithType: EnumUtil.MapEnums(Of ISoListHeading, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ISoListHeading, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ISoListHeading.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ISoListHeading, To>()
  nameWithType: Converters.MapEnums<ISoListHeading, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ISoListHeading, To>()
  nameWithType.vb: Converters.MapEnums(Of ISoListHeading, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ISoListHeading, To)()
  name.vb: MapEnums(Of ISoListHeading, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ISoListHeading, To>
    nameWithType: Converters.MapEnums<ISoListHeading, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ISoListHeading, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ISoListHeading, To)
    nameWithType: Converters.MapEnums(Of ISoListHeading, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ISoListHeading, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Lists.ISoListHeading.Heading*
  commentId: Overload:SuperOffice.CRM.Lists.ISoListHeading.Heading
  isExternal: true
  name: Heading
  nameWithType: ISoListHeading.Heading
  fullName: SuperOffice.CRM.Lists.ISoListHeading.Heading
- uid: SuperOffice.CRM.Lists.ISoListItem
  commentId: T:SuperOffice.CRM.Lists.ISoListItem
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListItem
  nameWithType: ISoListItem
  fullName: SuperOffice.CRM.Lists.ISoListItem
- uid: SuperOffice.CRM.Lists.ISoListHeading.Items*
  commentId: Overload:SuperOffice.CRM.Lists.ISoListHeading.Items
  isExternal: true
  name: Items
  nameWithType: ISoListHeading.Items
  fullName: SuperOffice.CRM.Lists.ISoListHeading.Items
- uid: System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ISoListItem>
  nameWithType: List<ISoListItem>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>
  nameWithType.vb: List(Of ISoListItem)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem)
  name.vb: List(Of ISoListItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
