### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  id: RowActionItemInfo
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.#ctor
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.CanExecute
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction
  langs:
  - csharp
  - vb
  name: RowActionItemInfo
  nameWithType: RowActionItemInfo
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nDescription of one action item, destined for an archive row context menu or toolbar button\n"
  syntax:
    content: public class RowActionItemInfo
    content.vb: Public Class RowActionItemInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.RowActionItemInfo)
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.RowActionItemInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.CanExecute
  commentId: F:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.CanExecute
  id: CanExecute
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: CanExecute
  nameWithType: RowActionItemInfo.CanExecute
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.CanExecute
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nCanExecute delegate, called whenever the row-selection state changes, and before a context menu is shown. It influences the enabled/disabled/hidden state\nof a button or menu item. This value can be left uninitialized (null) if the item should always be available.\n"
  syntax:
    content: public CanExecuteDelegate CanExecute
    return:
      type: SuperOffice.CRM.ArchiveLists.CanExecuteDelegate
    content.vb: Public CanExecute As CanExecuteDelegate
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: RowActionItemInfo()
  nameWithType: RowActionItemInfo.RowActionItemInfo()
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.RowActionItemInfo()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public RowActionItemInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName
  id: DisplayName
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: RowActionItemInfo.DisplayName
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nAction item text to be shown; can contain resource and multi-language elements\n"
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip
  id: DisplayTooltip
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: DisplayTooltip
  nameWithType: RowActionItemInfo.DisplayTooltip
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nTooltip for action item; can contain resource and multi-language elements\n"
  syntax:
    content: public string DisplayTooltip { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayTooltip As String
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name
  id: Name
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RowActionItemInfo.Name
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nUnique item id, must be unique within archive; used to identify menu item chosen (also influences technical name of control in GUI)\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint
  id: EnabledIconHint
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: EnabledIconHint
  nameWithType: RowActionItemInfo.EnabledIconHint
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nOptional name/hint for icon, used in the enabled state; the <see cref=\"!:IArchiveRowEventHandler.GetImage\"></see> method will be called with this\nstring as parameter when the item is to be shown. \n"
  syntax:
    content: public string EnabledIconHint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EnabledIconHint As String
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint
  id: DisabledIconHint
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: DisabledIconHint
  nameWithType: RowActionItemInfo.DisabledIconHint
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nOptional name/hint for icon, used in the disabled state; the <see cref=\"!:IArchiveRowEventHandler.GetImage\"></see> method will be called with this\nstring as parameter when the item is to be shown. If the <xref href=\"SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint\" data-throw-if-not-resolved=\"false\"></xref> is set, then this member should also be set, unless\nthe client is sure that the action item will never be disabled (icons should generally not be the same for enabled and disabled states)\n"
  syntax:
    content: public string DisabledIconHint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisabledIconHint As String
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute
  id: Execute
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: Execute
  nameWithType: RowActionItemInfo.Execute
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nExecute delegate, see the delegate declaration for information. This delegate is relevant for <strong>windows only</strong>.\n"
  syntax:
    content: public ExecuteDelegate Execute { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.ArchiveLists.ExecuteDelegate
    content.vb: Public Property Execute As ExecuteDelegate
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction
  id: ScriptAction
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: ScriptAction
  nameWithType: RowActionItemInfo.ScriptAction
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nScript action, to be executed when this action is performed. This string will usually be a JavaScript code fragment; it\nis relevant for <strong>Web only</strong>.\n"
  syntax:
    content: public string ScriptAction { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ScriptAction As String
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems
  commentId: P:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems
  id: ChildItems
  parent: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
  langs:
  - csharp
  - vb
  name: ChildItems
  nameWithType: RowActionItemInfo.ChildItems
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nSub-items for actions. On Menu items this means a submenu; on Button items this makes the top-level control into a dropdown list, with child controls becoming items and/or sub-headings\n(no more than one level of headings supported)\n"
  syntax:
    content: public RowActionItemInfo[] ChildItems { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.ArchiveLists.RowActionItemInfo[]
    content.vb: Public Property ChildItems As RowActionItemInfo()
  overload: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RowActionItemInfo, To>()
  nameWithType: EnumUtil.MapEnums<RowActionItemInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RowActionItemInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To)()
  name.vb: MapEnums(Of RowActionItemInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RowActionItemInfo, To>
    nameWithType: EnumUtil.MapEnums<RowActionItemInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RowActionItemInfo, To)
    nameWithType: EnumUtil.MapEnums(Of RowActionItemInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.RowActionItemInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RowActionItemInfo>(RowActionItemInfo)
  nameWithType: ObjectExtensions.AssignByReflection<RowActionItemInfo>(RowActionItemInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.RowActionItemInfo>(SuperOffice.CRM.ArchiveLists.RowActionItemInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RowActionItemInfo)(RowActionItemInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo)(SuperOffice.CRM.ArchiveLists.RowActionItemInfo)
  name.vb: AssignByReflection(Of RowActionItemInfo)(RowActionItemInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RowActionItemInfo>
    nameWithType: ObjectExtensions.AssignByReflection<RowActionItemInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.RowActionItemInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    name: RowActionItemInfo
    nameWithType: RowActionItemInfo
    fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RowActionItemInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of RowActionItemInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    name: RowActionItemInfo
    nameWithType: RowActionItemInfo
    fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RowActionItemInfo>()
  nameWithType: ObjectExtensions.GraphCopy<RowActionItemInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.RowActionItemInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RowActionItemInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo)()
  name.vb: GraphCopy(Of RowActionItemInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RowActionItemInfo>
    nameWithType: ObjectExtensions.GraphCopy<RowActionItemInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.RowActionItemInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RowActionItemInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of RowActionItemInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RowActionItemInfo, To>()
  nameWithType: Converters.MapEnums<RowActionItemInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of RowActionItemInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To)()
  name.vb: MapEnums(Of RowActionItemInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RowActionItemInfo, To>
    nameWithType: Converters.MapEnums<RowActionItemInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RowActionItemInfo, To)
    nameWithType: Converters.MapEnums(Of RowActionItemInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.RowActionItemInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.CanExecuteDelegate
  commentId: T:SuperOffice.CRM.ArchiveLists.CanExecuteDelegate
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: CanExecuteDelegate
  nameWithType: CanExecuteDelegate
  fullName: SuperOffice.CRM.ArchiveLists.CanExecuteDelegate
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.#ctor
  isExternal: true
  name: RowActionItemInfo
  nameWithType: RowActionItemInfo.RowActionItemInfo
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.RowActionItemInfo
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName
  isExternal: true
  name: DisplayName
  nameWithType: RowActionItemInfo.DisplayName
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip
  isExternal: true
  name: DisplayTooltip
  nameWithType: RowActionItemInfo.DisplayTooltip
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisplayTooltip
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name
  isExternal: true
  name: Name
  nameWithType: RowActionItemInfo.Name
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Name
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint
  isExternal: true
  name: EnabledIconHint
  nameWithType: RowActionItemInfo.EnabledIconHint
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.EnabledIconHint
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint
  isExternal: true
  name: DisabledIconHint
  nameWithType: RowActionItemInfo.DisabledIconHint
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.DisabledIconHint
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute
  isExternal: true
  name: Execute
  nameWithType: RowActionItemInfo.Execute
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.Execute
- uid: SuperOffice.CRM.ArchiveLists.ExecuteDelegate
  commentId: T:SuperOffice.CRM.ArchiveLists.ExecuteDelegate
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ExecuteDelegate
  nameWithType: ExecuteDelegate
  fullName: SuperOffice.CRM.ArchiveLists.ExecuteDelegate
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction
  isExternal: true
  name: ScriptAction
  nameWithType: RowActionItemInfo.ScriptAction
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ScriptAction
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems
  isExternal: true
  name: ChildItems
  nameWithType: RowActionItemInfo.ChildItems
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo.ChildItems
- uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo[]
  isExternal: true
  name: RowActionItemInfo[]
  nameWithType: RowActionItemInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo[]
  nameWithType.vb: RowActionItemInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.RowActionItemInfo()
  name.vb: RowActionItemInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    name: RowActionItemInfo
    nameWithType: RowActionItemInfo
    fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    name: RowActionItemInfo
    nameWithType: RowActionItemInfo
    fullName: SuperOffice.CRM.ArchiveLists.RowActionItemInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
