### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin
  commentId: T:SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin
  id: IFlushCacheAndBroadcastPlugin
  parent: SuperOffice.Data.Cache
  children:
  - SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.Collections.Generic.IEnumerable{System.String})
  - SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.String[])
  langs:
  - csharp
  - vb
  name: IFlushCacheAndBroadcastPlugin
  nameWithType: IFlushCacheAndBroadcastPlugin
  fullName: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  syntax:
    content: 'public interface IFlushCacheAndBroadcastPlugin : IPlugin'
    content.vb: >-
      Public Interface IFlushCacheAndBroadcastPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.EnumUtil.MapEnums``2
  - SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.String[])
  commentId: M:SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.String[])
  id: FlushAndBroadcast(System.String[])
  parent: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin
  langs:
  - csharp
  - vb
  name: FlushAndBroadcast(String[])
  nameWithType: IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(String[])
  fullName: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nFlushes the caches and broadcast\n"
  syntax:
    content: void FlushAndBroadcast(params string[] cacheNames)
    parameters:
    - id: cacheNames
      type: System.String[]
      description: "\nCaches to flush. Input can be technical name of the cache, or it can be the table name from the database and it&apos;ll do a\nlookup to find all the caches that&apos;s associated with that table and flush.\n"
    content.vb: Sub FlushAndBroadcast(ParamArray cacheNames As String())
  overload: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast*
  nameWithType.vb: IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(String())
  fullName.vb: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.String())
  name.vb: FlushAndBroadcast(String())
- uid: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.Collections.Generic.IEnumerable{System.String})
  id: FlushAndBroadcast(System.Collections.Generic.IEnumerable{System.String})
  parent: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin
  langs:
  - csharp
  - vb
  name: FlushAndBroadcast(IEnumerable<String>)
  nameWithType: IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(IEnumerable<String>)
  fullName: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Cache
  summary: "\nFlushes the caches and broadcast\n"
  syntax:
    content: void FlushAndBroadcast(IEnumerable<string> cacheNames)
    parameters:
    - id: cacheNames
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "\nCaches to flush. Input can be technical name of the cache, or it can be the table name from the database and it&apos;ll do a\nlookup to find all the caches that&apos;s associated with that table and flush.\n"
    content.vb: Sub FlushAndBroadcast(cacheNames As IEnumerable(Of String))
  overload: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast*
  nameWithType.vb: IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(IEnumerable(Of String))
  fullName.vb: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: FlushAndBroadcast(IEnumerable(Of String))
references:
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IFlushCacheAndBroadcastPlugin, To>()
  nameWithType: EnumUtil.MapEnums<IFlushCacheAndBroadcastPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IFlushCacheAndBroadcastPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To)()
  name.vb: MapEnums(Of IFlushCacheAndBroadcastPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IFlushCacheAndBroadcastPlugin, To>
    nameWithType: EnumUtil.MapEnums<IFlushCacheAndBroadcastPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IFlushCacheAndBroadcastPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of IFlushCacheAndBroadcastPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IFlushCacheAndBroadcastPlugin, To>()
  nameWithType: Converters.MapEnums<IFlushCacheAndBroadcastPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of IFlushCacheAndBroadcastPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To)()
  name.vb: MapEnums(Of IFlushCacheAndBroadcastPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IFlushCacheAndBroadcastPlugin, To>
    nameWithType: Converters.MapEnums<IFlushCacheAndBroadcastPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IFlushCacheAndBroadcastPlugin, To)
    nameWithType: Converters.MapEnums(Of IFlushCacheAndBroadcastPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast*
  commentId: Overload:SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast
  isExternal: true
  name: FlushAndBroadcast
  nameWithType: IFlushCacheAndBroadcastPlugin.FlushAndBroadcast
  fullName: SuperOffice.Data.Cache.IFlushCacheAndBroadcastPlugin.FlushAndBroadcast
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
