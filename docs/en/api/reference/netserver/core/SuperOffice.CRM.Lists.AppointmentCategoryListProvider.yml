### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  commentId: T:SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  id: AppointmentCategoryListProvider
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.#ctor
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.ProviderName
  langs:
  - csharp
  - vb
  name: AppointmentCategoryListProvider
  nameWithType: AppointmentCategoryListProvider
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: >-
      [MDOProviderPlugin("AppointmentCategory")]

      public class AppointmentCategoryListProvider : LiteralsOnlyBase, ISoListProvider, ISoList, IPlugin
    content.vb: >-
      <MDOProviderPlugin("AppointmentCategory")>

      Public Class AppointmentCategoryListProvider
          Inherits LiteralsOnlyBase
          Implements ISoListProvider, ISoList, IPlugin
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.LiteralsOnlyBase
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider
  - SuperOffice.CRM.Lists.ISoList
  inheritedMembers:
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1({TEnum},System.String,System.Boolean)
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.ForceFlatList
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryIds
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.OnlyReadHistory
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  - SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  extensionMethods:
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Lists.AppointmentCategoryListProvider)
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Lists.AppointmentCategoryListProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.CRM.Lists.MDOProviderPluginAttribute
    ctor: SuperOffice.CRM.Lists.MDOProviderPluginAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: AppointmentCategory
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.ProviderName
  commentId: F:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.ProviderName
  id: ProviderName
  parent: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  langs:
  - csharp
  - vb
  name: ProviderName
  nameWithType: AppointmentCategoryListProvider.ProviderName
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.ProviderName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public const string ProviderName = "AppointmentCategory"
    return:
      type: System.String
    content.vb: Public Const ProviderName As String = "AppointmentCategory"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems
  commentId: M:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems
  id: AddItems
  parent: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  langs:
  - csharp
  - vb
  name: AddItems()
  nameWithType: AppointmentCategoryListProvider.AddItems()
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: protected override void AddItems()
    content.vb: Protected Overrides Sub AddItems
  overridden: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  overload: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary
  commentId: M:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary
  id: GetDictionary
  parent: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  langs:
  - csharp
  - vb
  name: GetDictionary()
  nameWithType: AppointmentCategoryListProvider.GetDictionary()
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public static Dictionary<int, Tuple<string, string>> GetDictionary()
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,System.Tuple{System.String,System.String}}
    content.vb: Public Shared Function GetDictionary As Dictionary(Of Integer, Tuple(Of String, String))
  overload: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.#ctor
  commentId: M:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
  langs:
  - csharp
  - vb
  name: AppointmentCategoryListProvider()
  nameWithType: AppointmentCategoryListProvider.AppointmentCategoryListProvider()
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AppointmentCategoryListProvider()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public AppointmentCategoryListProvider()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase
  commentId: T:SuperOffice.CRM.Lists.LiteralsOnlyBase
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: LiteralsOnlyBase
  nameWithType: LiteralsOnlyBase
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase
- uid: SuperOffice.CRM.Lists.ISoListProvider
  commentId: T:SuperOffice.CRM.Lists.ISoListProvider
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListProvider
  nameWithType: ISoListProvider
  fullName: SuperOffice.CRM.Lists.ISoListProvider
- uid: SuperOffice.CRM.Lists.ISoList
  commentId: T:SuperOffice.CRM.Lists.ISoList
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoList
  nameWithType: ISoList
  fullName: SuperOffice.CRM.Lists.ISoList
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1({TEnum},System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  definition: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
  name: AddRawRootEnum<TEnum>(TEnum, String, Boolean)
  nameWithType: LiteralsOnlyBase.AddRawRootEnum<TEnum>(TEnum, String, Boolean)
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum<TEnum>(TEnum, System.String, System.Boolean)
  nameWithType.vb: LiteralsOnlyBase.AddRawRootEnum(Of TEnum)(TEnum, String, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum(Of TEnum)(TEnum, System.String, System.Boolean)
  name.vb: AddRawRootEnum(Of TEnum)(TEnum, String, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
    name: AddRawRootEnum<TEnum>
    nameWithType: LiteralsOnlyBase.AddRawRootEnum<TEnum>
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum<TEnum>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEnum
    nameWithType: TEnum
    fullName: TEnum
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
    name: AddRawRootEnum(Of TEnum)
    nameWithType: LiteralsOnlyBase.AddRawRootEnum(Of TEnum)
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum(Of TEnum)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEnum
    nameWithType: TEnum
    fullName: TEnum
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: Construct(String, String, Int32[], Boolean, String, Boolean)
  nameWithType: LiteralsOnlyBase.Construct(String, String, Int32[], Boolean, String, Boolean)
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean)
  nameWithType.vb: LiteralsOnlyBase.Construct(String, String, Int32(), Boolean, String, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean)
  name.vb: Construct(String, String, Int32(), Boolean, String, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
    name: Construct
    nameWithType: LiteralsOnlyBase.Construct
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean)
    name: Construct
    nameWithType: LiteralsOnlyBase.Construct
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.Construct
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: ListName
  nameWithType: LiteralsOnlyBase.ListName
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ListName
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: ExtraInfo
  nameWithType: LiteralsOnlyBase.ExtraInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ExtraInfo
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: SearchValue
  nameWithType: LiteralsOnlyBase.SearchValue
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.SearchValue
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.ForceFlatList
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.ForceFlatList
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: ForceFlatList
  nameWithType: LiteralsOnlyBase.ForceFlatList
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.ForceFlatList
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RawRootItems
  nameWithType: LiteralsOnlyBase.RawRootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawRootItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RawHeadingItems
  nameWithType: LiteralsOnlyBase.RawHeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHeadingItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RawHistoryItems
  nameWithType: LiteralsOnlyBase.RawHistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RawHistoryItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryIds
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryIds
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HistoryIds
  nameWithType: LiteralsOnlyBase.HistoryIds
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryIds
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.OnlyReadHistory
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.OnlyReadHistory
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: OnlyReadHistory
  nameWithType: LiteralsOnlyBase.OnlyReadHistory
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.OnlyReadHistory
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HistoryInfo
  nameWithType: LiteralsOnlyBase.HistoryInfo
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryInfo
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HistoryItems
  nameWithType: LiteralsOnlyBase.HistoryItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HistoryItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: RootItems
  nameWithType: LiteralsOnlyBase.RootItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.RootItems
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  commentId: P:SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: HeadingItems
  nameWithType: LiteralsOnlyBase.HeadingItems
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.HeadingItems
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AppointmentCategoryListProvider, To>()
  nameWithType: EnumUtil.MapEnums<AppointmentCategoryListProvider, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AppointmentCategoryListProvider, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To)()
  name.vb: MapEnums(Of AppointmentCategoryListProvider, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AppointmentCategoryListProvider, To>
    nameWithType: EnumUtil.MapEnums<AppointmentCategoryListProvider, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AppointmentCategoryListProvider, To)
    nameWithType: EnumUtil.MapEnums(Of AppointmentCategoryListProvider, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Lists.AppointmentCategoryListProvider)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<AppointmentCategoryListProvider>(AppointmentCategoryListProvider)
  nameWithType: ObjectExtensions.AssignByReflection<AppointmentCategoryListProvider>(AppointmentCategoryListProvider)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Lists.AppointmentCategoryListProvider>(SuperOffice.CRM.Lists.AppointmentCategoryListProvider)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of AppointmentCategoryListProvider)(AppointmentCategoryListProvider)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider)(SuperOffice.CRM.Lists.AppointmentCategoryListProvider)
  name.vb: AssignByReflection(Of AppointmentCategoryListProvider)(AppointmentCategoryListProvider)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<AppointmentCategoryListProvider>
    nameWithType: ObjectExtensions.AssignByReflection<AppointmentCategoryListProvider>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Lists.AppointmentCategoryListProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
    name: AppointmentCategoryListProvider
    nameWithType: AppointmentCategoryListProvider
    fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of AppointmentCategoryListProvider)
    nameWithType: ObjectExtensions.AssignByReflection(Of AppointmentCategoryListProvider)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
    name: AppointmentCategoryListProvider
    nameWithType: AppointmentCategoryListProvider
    fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<AppointmentCategoryListProvider>()
  nameWithType: ObjectExtensions.GraphCopy<AppointmentCategoryListProvider>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Lists.AppointmentCategoryListProvider>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of AppointmentCategoryListProvider)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider)()
  name.vb: GraphCopy(Of AppointmentCategoryListProvider)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<AppointmentCategoryListProvider>
    nameWithType: ObjectExtensions.GraphCopy<AppointmentCategoryListProvider>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Lists.AppointmentCategoryListProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of AppointmentCategoryListProvider)
    nameWithType: ObjectExtensions.GraphCopy(Of AppointmentCategoryListProvider)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AppointmentCategoryListProvider, To>()
  nameWithType: Converters.MapEnums<AppointmentCategoryListProvider, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To>()
  nameWithType.vb: Converters.MapEnums(Of AppointmentCategoryListProvider, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To)()
  name.vb: MapEnums(Of AppointmentCategoryListProvider, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AppointmentCategoryListProvider, To>
    nameWithType: Converters.MapEnums<AppointmentCategoryListProvider, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AppointmentCategoryListProvider, To)
    nameWithType: Converters.MapEnums(Of AppointmentCategoryListProvider, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.AppointmentCategoryListProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
  isExternal: true
  name: AddRawRootEnum<TEnum>(TEnum, String, Boolean)
  nameWithType: LiteralsOnlyBase.AddRawRootEnum<TEnum>(TEnum, String, Boolean)
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum<TEnum>(TEnum, System.String, System.Boolean)
  nameWithType.vb: LiteralsOnlyBase.AddRawRootEnum(Of TEnum)(TEnum, String, Boolean)
  fullName.vb: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum(Of TEnum)(TEnum, System.String, System.Boolean)
  name.vb: AddRawRootEnum(Of TEnum)(TEnum, String, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
    name: AddRawRootEnum<TEnum>
    nameWithType: LiteralsOnlyBase.AddRawRootEnum<TEnum>
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum<TEnum>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEnum
    nameWithType: TEnum
    fullName: TEnum
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum``1(``0,System.String,System.Boolean)
    name: AddRawRootEnum(Of TEnum)
    nameWithType: LiteralsOnlyBase.AddRawRootEnum(Of TEnum)
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddRawRootEnum(Of TEnum)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TEnum
    nameWithType: TEnum
    fullName: TEnum
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  commentId: M:SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
  parent: SuperOffice.CRM.Lists.LiteralsOnlyBase
  isExternal: true
  name: AddItems()
  nameWithType: LiteralsOnlyBase.AddItems()
  fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    name: AddItems
    nameWithType: LiteralsOnlyBase.AddItems
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    name: AddItems
    nameWithType: LiteralsOnlyBase.AddItems
    fullName: SuperOffice.CRM.Lists.LiteralsOnlyBase.AddItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems*
  commentId: Overload:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems
  isExternal: true
  name: AddItems
  nameWithType: AppointmentCategoryListProvider.AddItems
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AddItems
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary*
  commentId: Overload:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary
  isExternal: true
  name: GetDictionary
  nameWithType: AppointmentCategoryListProvider.GetDictionary
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.GetDictionary
- uid: System.Collections.Generic.Dictionary{System.Int32,System.Tuple{System.String,System.String}}
  commentId: '!:System.Collections.Generic.Dictionary{System.Int32,System.Tuple{System.String,System.String}}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, Tuple<String, String>>
  nameWithType: Dictionary<Int32, Tuple<String, String>>
  fullName: System.Collections.Generic.Dictionary<System.Int32, System.Tuple<System.String, System.String>>
  nameWithType.vb: Dictionary(Of Int32, Tuple(Of String, String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, System.Tuple(Of System.String, System.String))
  name.vb: Dictionary(Of Int32, Tuple(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Tuple`2
    name: Tuple
    nameWithType: Tuple
    fullName: System.Tuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.AppointmentCategoryListProvider.#ctor
  isExternal: true
  name: AppointmentCategoryListProvider
  nameWithType: AppointmentCategoryListProvider.AppointmentCategoryListProvider
  fullName: SuperOffice.CRM.Lists.AppointmentCategoryListProvider.AppointmentCategoryListProvider
