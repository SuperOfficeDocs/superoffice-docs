### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.TicketCategoryFlags
  commentId: T:SuperOffice.Data.TicketCategoryFlags
  id: TicketCategoryFlags
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  - SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  - SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  - SuperOffice.Data.TicketCategoryFlags.Internal
  - SuperOffice.Data.TicketCategoryFlags.ListInMain
  - SuperOffice.Data.TicketCategoryFlags.MembersOnly
  - SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  - SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  - SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  - SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  - SuperOffice.Data.TicketCategoryFlags.Unknown
  langs:
  - csharp
  - vb
  name: TicketCategoryFlags
  nameWithType: TicketCategoryFlags
  fullName: SuperOffice.Data.TicketCategoryFlags
  type: Enum
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: >-
    Flags for the ticket category

    This Enum is used by:  ej_category.flags

    This Enum consists of flag values that can be combined.
  example: []
  syntax:
    content: >-
      [Flags]

      public enum TicketCategoryFlags
    content.vb: >-
      <Flags>

      Public Enum TicketCategoryFlags
  extensionMethods:
  - SuperOffice.Data.TicketCategoryFlags.EnumUtil.MapEnums``2
  - SuperOffice.Data.TicketCategoryFlags.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.TicketCategoryFlags)
  - SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - System.Enum.EnumUtil.GetDescription
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
- uid: SuperOffice.Data.TicketCategoryFlags.Unknown
  commentId: F:SuperOffice.Data.TicketCategoryFlags.Unknown
  id: Unknown
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: TicketCategoryFlags.Unknown
  fullName: SuperOffice.Data.TicketCategoryFlags.Unknown
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '0: No flags set'
  example: []
  syntax:
    content: Unknown = 0
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.Internal
  commentId: F:SuperOffice.Data.TicketCategoryFlags.Internal
  id: Internal
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: Internal
  nameWithType: TicketCategoryFlags.Internal
  fullName: SuperOffice.Data.TicketCategoryFlags.Internal
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '1: The category is set to internal and is not available in the Customer Centre'
  example: []
  syntax:
    content: Internal = 1
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  commentId: F:SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  id: OnlyLoggedInUsers
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: OnlyLoggedInUsers
  nameWithType: TicketCategoryFlags.OnlyLoggedInUsers
  fullName: SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '2: Only assign requests to logged in users'
  example: []
  syntax:
    content: OnlyLoggedInUsers = 2
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  commentId: F:SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  id: DefaultToCategoryMaster
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: DefaultToCategoryMaster
  nameWithType: TicketCategoryFlags.DefaultToCategoryMaster
  fullName: SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '4: Assign to category administrator if no one is available'
  example: []
  syntax:
    content: DefaultToCategoryMaster = 4
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.ListInMain
  commentId: F:SuperOffice.Data.TicketCategoryFlags.ListInMain
  id: ListInMain
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: ListInMain
  nameWithType: TicketCategoryFlags.ListInMain
  fullName: SuperOffice.Data.TicketCategoryFlags.ListInMain
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '8: Show category in status view'
  example: []
  syntax:
    content: ListInMain = 8
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  commentId: F:SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  id: RedelegateNewMsg
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: RedelegateNewMsg
  nameWithType: TicketCategoryFlags.RedelegateNewMsg
  fullName: SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '16: Reassign requests on new message if user is not present'
  example: []
  syntax:
    content: RedelegateNewMsg = 16
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  commentId: F:SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  id: DelegateToOurContact
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: DelegateToOurContact
  nameWithType: TicketCategoryFlags.DelegateToOurContact
  fullName: SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '32: Assign to our service contact if available'
  example: []
  syntax:
    content: DelegateToOurContact = 32
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  commentId: F:SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  id: PropagateReplyTemplate
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: PropagateReplyTemplate
  nameWithType: TicketCategoryFlags.PropagateReplyTemplate
  fullName: SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '64: Merge outbound e-mails for this category with reply template'
  example: []
  syntax:
    content: PropagateReplyTemplate = 64
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.MembersOnly
  commentId: F:SuperOffice.Data.TicketCategoryFlags.MembersOnly
  id: MembersOnly
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: MembersOnly
  nameWithType: TicketCategoryFlags.MembersOnly
  fullName: SuperOffice.Data.TicketCategoryFlags.MembersOnly
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '128: Only members have access to requests in this category'
  example: []
  syntax:
    content: MembersOnly = 128
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  commentId: F:SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  id: NotifyMembers
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: NotifyMembers
  nameWithType: TicketCategoryFlags.NotifyMembers
  fullName: SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '256: Send notification to members about new request'
  example: []
  syntax:
    content: NotifyMembers = 256
    return:
      type: SuperOffice.Data.TicketCategoryFlags
- uid: SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  commentId: F:SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  id: AcceptWhenReplying
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: AcceptWhenReplying
  nameWithType: TicketCategoryFlags.AcceptWhenReplying
  fullName: SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: '512: Take ownership by default when replying'
  example: []
  syntax:
    content: AcceptWhenReplying = 512
    return:
      type: SuperOffice.Data.TicketCategoryFlags
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.Data.TicketCategoryFlags.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<TicketCategoryFlags, To>(TicketCategoryFlags)
  nameWithType: EnumUtil.MapEnums<TicketCategoryFlags, To>(TicketCategoryFlags)
  fullName: EnumUtil.MapEnums<SuperOffice.Data.TicketCategoryFlags, To>(SuperOffice.Data.TicketCategoryFlags)
  nameWithType.vb: EnumUtil.MapEnums(Of TicketCategoryFlags, To)(TicketCategoryFlags)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.TicketCategoryFlags, To)(SuperOffice.Data.TicketCategoryFlags)
  name.vb: MapEnums(Of TicketCategoryFlags, To)(TicketCategoryFlags)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.TicketCategoryFlags)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.TicketCategoryFlags)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
- uid: SuperOffice.Data.TicketCategoryFlags.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<TicketCategoryFlags, To>(TicketCategoryFlags)
  nameWithType: Converters.MapEnums<TicketCategoryFlags, To>(TicketCategoryFlags)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.TicketCategoryFlags, To>(SuperOffice.Data.TicketCategoryFlags)
  nameWithType.vb: Converters.MapEnums(Of TicketCategoryFlags, To)(TicketCategoryFlags)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.TicketCategoryFlags, To)(SuperOffice.Data.TicketCategoryFlags)
  name.vb: MapEnums(Of TicketCategoryFlags, To)(TicketCategoryFlags)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.TicketCategoryFlags)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.TicketCategoryFlags)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
- uid: SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.TicketCategoryFlags)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<TicketCategoryFlags>(TicketCategoryFlags, TicketCategoryFlags)
  nameWithType: ObjectExtensions.AssignByReflection<TicketCategoryFlags>(TicketCategoryFlags, TicketCategoryFlags)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.TicketCategoryFlags>(SuperOffice.Data.TicketCategoryFlags, SuperOffice.Data.TicketCategoryFlags)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TicketCategoryFlags)(TicketCategoryFlags, TicketCategoryFlags)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.TicketCategoryFlags)(SuperOffice.Data.TicketCategoryFlags, SuperOffice.Data.TicketCategoryFlags)
  name.vb: AssignByReflection(Of TicketCategoryFlags)(TicketCategoryFlags, TicketCategoryFlags)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.TicketCategoryFlags,SuperOffice.Data.TicketCategoryFlags)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.TicketCategoryFlags,SuperOffice.Data.TicketCategoryFlags)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
- uid: SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<TicketCategoryFlags>(TicketCategoryFlags)
  nameWithType: ObjectExtensions.GraphCopy<TicketCategoryFlags>(TicketCategoryFlags)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.TicketCategoryFlags>(SuperOffice.Data.TicketCategoryFlags)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TicketCategoryFlags)(TicketCategoryFlags)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.TicketCategoryFlags)(SuperOffice.Data.TicketCategoryFlags)
  name.vb: GraphCopy(Of TicketCategoryFlags)(TicketCategoryFlags)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Data.TicketCategoryFlags)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.Data.TicketCategoryFlags)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
  - name: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    isExternal: true
    href: SuperOffice.Data.TicketCategoryFlags.html
  - name: )
- uid: System.Enum.EnumUtil.GetDescription
  commentId: M:EnumUtil.GetDescription(System.Enum)
  parent: EnumUtil
  definition: EnumUtil.GetDescription(System.Enum)
  href: EnumUtil.html#EnumUtil_GetDescription_System_Enum_
  name: GetDescription(Enum)
  nameWithType: EnumUtil.GetDescription(Enum)
  fullName: EnumUtil.GetDescription(System.Enum)
  spec.csharp:
  - uid: EnumUtil.GetDescription(System.Enum)
    name: GetDescription
    isExternal: true
    href: EnumUtil.html#EnumUtil_GetDescription_System_Enum_
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  spec.vb:
  - uid: EnumUtil.GetDescription(System.Enum)
    name: GetDescription
    isExternal: true
    href: EnumUtil.html#EnumUtil_GetDescription_System_Enum_
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: EnumUtil.GetDescription(System.Enum)
  commentId: M:EnumUtil.GetDescription(System.Enum)
  isExternal: true
  href: EnumUtil.html#EnumUtil_GetDescription_System_Enum_
  name: GetDescription(Enum)
  nameWithType: EnumUtil.GetDescription(Enum)
  fullName: EnumUtil.GetDescription(System.Enum)
  spec.csharp:
  - uid: EnumUtil.GetDescription(System.Enum)
    name: GetDescription
    isExternal: true
    href: EnumUtil.html#EnumUtil_GetDescription_System_Enum_
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
  spec.vb:
  - uid: EnumUtil.GetDescription(System.Enum)
    name: GetDescription
    isExternal: true
    href: EnumUtil.html#EnumUtil_GetDescription_System_Enum_
  - name: (
  - uid: System.Enum
    name: Enum
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.enum
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: SuperOffice.Data.TicketCategoryFlags
  commentId: T:SuperOffice.Data.TicketCategoryFlags
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.TicketCategoryFlags.html
  name: TicketCategoryFlags
  nameWithType: TicketCategoryFlags
  fullName: SuperOffice.Data.TicketCategoryFlags
