### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.TicketCategoryFlags
  commentId: T:SuperOffice.Data.TicketCategoryFlags
  id: TicketCategoryFlags
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  - SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  - SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  - SuperOffice.Data.TicketCategoryFlags.Internal
  - SuperOffice.Data.TicketCategoryFlags.ListInMain
  - SuperOffice.Data.TicketCategoryFlags.MembersOnly
  - SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  - SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  - SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  - SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  - SuperOffice.Data.TicketCategoryFlags.Unknown
  langs:
  - csharp
  - vb
  name: TicketCategoryFlags
  nameWithType: TicketCategoryFlags
  fullName: SuperOffice.Data.TicketCategoryFlags
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nFlags for the ticket category\nThis Enum is used by:  ej_category.flags\nThis Enum consists of flag values that can be combined.\n"
  syntax:
    content: >-
      [Flags]

      public enum TicketCategoryFlags
    content.vb: >-
      <Flags>

      Public Enum TicketCategoryFlags
  extensionMethods:
  - SuperOffice.Data.TicketCategoryFlags.EnumUtil.MapEnums``2
  - SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.TicketCategoryFlags)
  - SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.TicketCategoryFlags.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.TicketCategoryFlags.Unknown
  commentId: F:SuperOffice.Data.TicketCategoryFlags.Unknown
  id: Unknown
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: TicketCategoryFlags.Unknown
  fullName: SuperOffice.Data.TicketCategoryFlags.Unknown
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: No flags set\n"
  syntax:
    content: Unknown = 0
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.Internal
  commentId: F:SuperOffice.Data.TicketCategoryFlags.Internal
  id: Internal
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: Internal
  nameWithType: TicketCategoryFlags.Internal
  fullName: SuperOffice.Data.TicketCategoryFlags.Internal
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: The category is set to internal and is not available in the Customer Centre\n"
  syntax:
    content: Internal = 1
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  commentId: F:SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  id: OnlyLoggedInUsers
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: OnlyLoggedInUsers
  nameWithType: TicketCategoryFlags.OnlyLoggedInUsers
  fullName: SuperOffice.Data.TicketCategoryFlags.OnlyLoggedInUsers
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Only assign requests to logged in users\n"
  syntax:
    content: OnlyLoggedInUsers = 2
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  commentId: F:SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  id: DefaultToCategoryMaster
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: DefaultToCategoryMaster
  nameWithType: TicketCategoryFlags.DefaultToCategoryMaster
  fullName: SuperOffice.Data.TicketCategoryFlags.DefaultToCategoryMaster
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: Assign to category administrator if no one is available\n"
  syntax:
    content: DefaultToCategoryMaster = 4
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.ListInMain
  commentId: F:SuperOffice.Data.TicketCategoryFlags.ListInMain
  id: ListInMain
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: ListInMain
  nameWithType: TicketCategoryFlags.ListInMain
  fullName: SuperOffice.Data.TicketCategoryFlags.ListInMain
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n8: Show category in status view\n"
  syntax:
    content: ListInMain = 8
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  commentId: F:SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  id: RedelegateNewMsg
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: RedelegateNewMsg
  nameWithType: TicketCategoryFlags.RedelegateNewMsg
  fullName: SuperOffice.Data.TicketCategoryFlags.RedelegateNewMsg
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n16: Reassign requests on new message if user is not present\n"
  syntax:
    content: RedelegateNewMsg = 16
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  commentId: F:SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  id: DelegateToOurContact
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: DelegateToOurContact
  nameWithType: TicketCategoryFlags.DelegateToOurContact
  fullName: SuperOffice.Data.TicketCategoryFlags.DelegateToOurContact
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n32: Assign to our service contact if available\n"
  syntax:
    content: DelegateToOurContact = 32
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  commentId: F:SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  id: PropagateReplyTemplate
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: PropagateReplyTemplate
  nameWithType: TicketCategoryFlags.PropagateReplyTemplate
  fullName: SuperOffice.Data.TicketCategoryFlags.PropagateReplyTemplate
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n64: Merge outbound e-mails for this category with reply template\n"
  syntax:
    content: PropagateReplyTemplate = 64
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.MembersOnly
  commentId: F:SuperOffice.Data.TicketCategoryFlags.MembersOnly
  id: MembersOnly
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: MembersOnly
  nameWithType: TicketCategoryFlags.MembersOnly
  fullName: SuperOffice.Data.TicketCategoryFlags.MembersOnly
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n128: Only members have access to requests in this category\n"
  syntax:
    content: MembersOnly = 128
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  commentId: F:SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  id: NotifyMembers
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: NotifyMembers
  nameWithType: TicketCategoryFlags.NotifyMembers
  fullName: SuperOffice.Data.TicketCategoryFlags.NotifyMembers
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n256: Send notification to members about new request\n"
  syntax:
    content: NotifyMembers = 256
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  commentId: F:SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  id: AcceptWhenReplying
  parent: SuperOffice.Data.TicketCategoryFlags
  langs:
  - csharp
  - vb
  name: AcceptWhenReplying
  nameWithType: TicketCategoryFlags.AcceptWhenReplying
  fullName: SuperOffice.Data.TicketCategoryFlags.AcceptWhenReplying
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n512: Take ownership by default when replying\n"
  syntax:
    content: AcceptWhenReplying = 512
    return:
      type: SuperOffice.Data.TicketCategoryFlags
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.TicketCategoryFlags.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketCategoryFlags, To>()
  nameWithType: EnumUtil.MapEnums<TicketCategoryFlags, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.TicketCategoryFlags, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketCategoryFlags, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.TicketCategoryFlags, To)()
  name.vb: MapEnums(Of TicketCategoryFlags, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketCategoryFlags, To>
    nameWithType: EnumUtil.MapEnums<TicketCategoryFlags, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.TicketCategoryFlags, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketCategoryFlags, To)
    nameWithType: EnumUtil.MapEnums(Of TicketCategoryFlags, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.TicketCategoryFlags, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.TicketCategoryFlags)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TicketCategoryFlags>(TicketCategoryFlags)
  nameWithType: ObjectExtensions.AssignByReflection<TicketCategoryFlags>(TicketCategoryFlags)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.TicketCategoryFlags>(SuperOffice.Data.TicketCategoryFlags)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TicketCategoryFlags)(TicketCategoryFlags)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.TicketCategoryFlags)(SuperOffice.Data.TicketCategoryFlags)
  name.vb: AssignByReflection(Of TicketCategoryFlags)(TicketCategoryFlags)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TicketCategoryFlags>
    nameWithType: ObjectExtensions.AssignByReflection<TicketCategoryFlags>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.TicketCategoryFlags>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    nameWithType: TicketCategoryFlags
    fullName: SuperOffice.Data.TicketCategoryFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TicketCategoryFlags)
    nameWithType: ObjectExtensions.AssignByReflection(Of TicketCategoryFlags)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.TicketCategoryFlags)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.TicketCategoryFlags
    name: TicketCategoryFlags
    nameWithType: TicketCategoryFlags
    fullName: SuperOffice.Data.TicketCategoryFlags
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.TicketCategoryFlags.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TicketCategoryFlags>()
  nameWithType: ObjectExtensions.GraphCopy<TicketCategoryFlags>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.TicketCategoryFlags>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TicketCategoryFlags)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.TicketCategoryFlags)()
  name.vb: GraphCopy(Of TicketCategoryFlags)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TicketCategoryFlags>
    nameWithType: ObjectExtensions.GraphCopy<TicketCategoryFlags>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.TicketCategoryFlags>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TicketCategoryFlags)
    nameWithType: ObjectExtensions.GraphCopy(Of TicketCategoryFlags)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.TicketCategoryFlags)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.TicketCategoryFlags.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketCategoryFlags, To>()
  nameWithType: Converters.MapEnums<TicketCategoryFlags, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.TicketCategoryFlags, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketCategoryFlags, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.TicketCategoryFlags, To)()
  name.vb: MapEnums(Of TicketCategoryFlags, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketCategoryFlags, To>
    nameWithType: Converters.MapEnums<TicketCategoryFlags, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.TicketCategoryFlags, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketCategoryFlags, To)
    nameWithType: Converters.MapEnums(Of TicketCategoryFlags, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.TicketCategoryFlags, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.TicketCategoryFlags
  commentId: T:SuperOffice.Data.TicketCategoryFlags
  parent: SuperOffice.Data
  isExternal: true
  name: TicketCategoryFlags
  nameWithType: TicketCategoryFlags
  fullName: SuperOffice.Data.TicketCategoryFlags
