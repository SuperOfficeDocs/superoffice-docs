### YamlMime:ManagedReference
items:
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer
  commentId: T:SuperOffice.Messaging.Messages.SoTestMessageSerializer
  id: SoTestMessageSerializer
  parent: SuperOffice.Messaging.Messages
  children:
  - SuperOffice.Messaging.Messages.SoTestMessageSerializer.#ctor
  - SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType
  langs:
  - csharp
  - vb
  name: SoTestMessageSerializer
  nameWithType: SoTestMessageSerializer
  fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Messaging.Messages
  summary: "\nSerializer for <xref href=\"SuperOffice.Messaging.Messages.SoTestMessage\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: >-
      [SoMessageSerializer(SoMessageType.Test)]

      public class SoTestMessageSerializer : SoMessageSerializer, ISoMessageSerializer, IPlugin
    content.vb: >-
      <SoMessageSerializer(SoMessageType.Test)>

      Public Class SoTestMessageSerializer
          Inherits SoMessageSerializer
          Implements ISoMessageSerializer, IPlugin
  inheritance:
  - System.Object
  - SuperOffice.Messaging.Messages.SoMessageSerializer
  implements:
  - SuperOffice.Messaging.Messages.ISoMessageSerializer
  inheritedMembers:
  - SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Deserialize(System.Byte[])
  - SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  - SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize``1(System.Byte[])
  - SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1({TMessage})
  - SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize(System.Object)
  - SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte[],System.Int32,System.Type)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Messaging.Messages.SoTestMessageSerializer.EnumUtil.MapEnums``2
  - SuperOffice.Messaging.Messages.SoTestMessageSerializer.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Messaging.Messages.SoTestMessageSerializer)
  - SuperOffice.Messaging.Messages.SoTestMessageSerializer.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Messaging.Messages.SoTestMessageSerializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Messaging.Messages.SoMessageSerializerAttribute
    ctor: SuperOffice.Messaging.Messages.SoMessageSerializerAttribute.#ctor(SuperOffice.Messaging.Messages.SoMessageType)
    arguments:
    - type: SuperOffice.Messaging.Messages.SoMessageType
      value: "1"
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.#ctor
  commentId: M:SuperOffice.Messaging.Messages.SoTestMessageSerializer.#ctor
  id: '#ctor'
  parent: SuperOffice.Messaging.Messages.SoTestMessageSerializer
  langs:
  - csharp
  - vb
  name: SoTestMessageSerializer()
  nameWithType: SoTestMessageSerializer.SoTestMessageSerializer()
  fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer.SoTestMessageSerializer()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Messaging.Messages
  syntax:
    content: public SoTestMessageSerializer()
    content.vb: Public Sub New
  overload: SuperOffice.Messaging.Messages.SoTestMessageSerializer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType
  commentId: P:SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType
  id: MessageType
  parent: SuperOffice.Messaging.Messages.SoTestMessageSerializer
  langs:
  - csharp
  - vb
  name: MessageType
  nameWithType: SoTestMessageSerializer.MessageType
  fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Messaging.Messages
  summary: "\nMessage type to serialize.\n"
  syntax:
    content: protected override Type MessageType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Protected Overrides ReadOnly Property MessageType As Type
  overridden: SuperOffice.Messaging.Messages.SoMessageSerializer.MessageType
  overload: SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.Messaging.Messages
  commentId: N:SuperOffice.Messaging.Messages
  isExternal: true
  name: SuperOffice.Messaging.Messages
  nameWithType: SuperOffice.Messaging.Messages
  fullName: SuperOffice.Messaging.Messages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer
  commentId: T:SuperOffice.Messaging.Messages.SoMessageSerializer
  parent: SuperOffice.Messaging.Messages
  isExternal: true
  name: SoMessageSerializer
  nameWithType: SoMessageSerializer
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer
- uid: SuperOffice.Messaging.Messages.ISoMessageSerializer
  commentId: T:SuperOffice.Messaging.Messages.ISoMessageSerializer
  parent: SuperOffice.Messaging.Messages
  isExternal: true
  name: ISoMessageSerializer
  nameWithType: ISoMessageSerializer
  fullName: SuperOffice.Messaging.Messages.ISoMessageSerializer
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Deserialize(System.Byte[])
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Deserialize(System.Byte[])
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  isExternal: true
  name: ISoMessageSerializer.Deserialize(Byte[])
  nameWithType: SoMessageSerializer.ISoMessageSerializer.Deserialize(Byte[])
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte[])
  nameWithType.vb: SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(Byte())
  fullName.vb: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(System.Byte())
  name.vb: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize(Byte())
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Deserialize(System.Byte[])
    name: ISoMessageSerializer.Deserialize
    nameWithType: SoMessageSerializer.ISoMessageSerializer.Deserialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Deserialize(System.Byte[])
    name: SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize
    nameWithType: SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Deserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  isExternal: true
  name: ISoMessageSerializer.Serialize(SoMessageHeader)
  nameWithType: SoMessageSerializer.ISoMessageSerializer.Serialize(SoMessageHeader)
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
  nameWithType.vb: SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SoMessageHeader)
  name.vb: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize(SoMessageHeader)
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
    name: ISoMessageSerializer.Serialize
    nameWithType: SoMessageSerializer.ISoMessageSerializer.Serialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Messaging.Messages.SoMessageHeader
    name: SoMessageHeader
    nameWithType: SoMessageHeader
    fullName: SuperOffice.Messaging.Messages.SoMessageHeader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice#Messaging#Messages#ISoMessageSerializer#Serialize(SuperOffice.Messaging.Messages.SoMessageHeader)
    name: SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize
    nameWithType: SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.SuperOffice.Messaging.Messages.ISoMessageSerializer.Serialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Messaging.Messages.SoMessageHeader
    name: SoMessageHeader
    nameWithType: SoMessageHeader
    fullName: SuperOffice.Messaging.Messages.SoMessageHeader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize``1(System.Byte[])
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize``1(System.Byte[])
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  isExternal: true
  name: Deserialize<TMessage>(Byte[])
  nameWithType: SoMessageSerializer.Deserialize<TMessage>(Byte[])
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize<TMessage>(System.Byte[])
  nameWithType.vb: SoMessageSerializer.Deserialize(Of TMessage)(Byte())
  fullName.vb: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize(Of TMessage)(System.Byte())
  name.vb: Deserialize(Of TMessage)(Byte())
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize``1(System.Byte[])
    name: Deserialize<TMessage>
    nameWithType: SoMessageSerializer.Deserialize<TMessage>
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize<TMessage>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize``1(System.Byte[])
    name: Deserialize(Of TMessage)
    nameWithType: SoMessageSerializer.Deserialize(Of TMessage)
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Deserialize(Of TMessage)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1({TMessage})
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  definition: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
  name: Serialize<TMessage>(TMessage)
  nameWithType: SoMessageSerializer.Serialize<TMessage>(TMessage)
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize<TMessage>(TMessage)
  nameWithType.vb: SoMessageSerializer.Serialize(Of TMessage)(TMessage)
  fullName.vb: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize(Of TMessage)(TMessage)
  name.vb: Serialize(Of TMessage)(TMessage)
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
    name: Serialize<TMessage>
    nameWithType: SoMessageSerializer.Serialize<TMessage>
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize<TMessage>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
    name: Serialize(Of TMessage)
    nameWithType: SoMessageSerializer.Serialize(Of TMessage)
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize(Of TMessage)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize(System.Object)
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize(System.Object)
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  isExternal: true
  name: RawSerialize(Object)
  nameWithType: SoMessageSerializer.RawSerialize(Object)
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize(System.Object)
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize(System.Object)
    name: RawSerialize
    nameWithType: SoMessageSerializer.RawSerialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize(System.Object)
    name: RawSerialize
    nameWithType: SoMessageSerializer.RawSerialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.RawSerialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte[],System.Int32,System.Type)
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte[],System.Int32,System.Type)
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  isExternal: true
  name: RawDeserialize(Byte[], Int32, Type)
  nameWithType: SoMessageSerializer.RawDeserialize(Byte[], Int32, Type)
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte[], System.Int32, System.Type)
  nameWithType.vb: SoMessageSerializer.RawDeserialize(Byte(), Int32, Type)
  fullName.vb: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte(), System.Int32, System.Type)
  name.vb: RawDeserialize(Byte(), Int32, Type)
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte[],System.Int32,System.Type)
    name: RawDeserialize
    nameWithType: SoMessageSerializer.RawDeserialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize(System.Byte[],System.Int32,System.Type)
    name: RawDeserialize
    nameWithType: SoMessageSerializer.RawDeserialize
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.RawDeserialize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoTestMessageSerializer, To>()
  nameWithType: EnumUtil.MapEnums<SoTestMessageSerializer, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Messaging.Messages.SoTestMessageSerializer, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoTestMessageSerializer, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer, To)()
  name.vb: MapEnums(Of SoTestMessageSerializer, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoTestMessageSerializer, To>
    nameWithType: EnumUtil.MapEnums<SoTestMessageSerializer, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Messaging.Messages.SoTestMessageSerializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoTestMessageSerializer, To)
    nameWithType: EnumUtil.MapEnums(Of SoTestMessageSerializer, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Messaging.Messages.SoTestMessageSerializer)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SoTestMessageSerializer>(SoTestMessageSerializer)
  nameWithType: ObjectExtensions.AssignByReflection<SoTestMessageSerializer>(SoTestMessageSerializer)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Messaging.Messages.SoTestMessageSerializer>(SuperOffice.Messaging.Messages.SoTestMessageSerializer)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoTestMessageSerializer)(SoTestMessageSerializer)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer)(SuperOffice.Messaging.Messages.SoTestMessageSerializer)
  name.vb: AssignByReflection(Of SoTestMessageSerializer)(SoTestMessageSerializer)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SoTestMessageSerializer>
    nameWithType: ObjectExtensions.AssignByReflection<SoTestMessageSerializer>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Messaging.Messages.SoTestMessageSerializer>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer
    name: SoTestMessageSerializer
    nameWithType: SoTestMessageSerializer
    fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SoTestMessageSerializer)
    nameWithType: ObjectExtensions.AssignByReflection(Of SoTestMessageSerializer)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer
    name: SoTestMessageSerializer
    nameWithType: SoTestMessageSerializer
    fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SoTestMessageSerializer>()
  nameWithType: ObjectExtensions.GraphCopy<SoTestMessageSerializer>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Messaging.Messages.SoTestMessageSerializer>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoTestMessageSerializer)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer)()
  name.vb: GraphCopy(Of SoTestMessageSerializer)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SoTestMessageSerializer>
    nameWithType: ObjectExtensions.GraphCopy<SoTestMessageSerializer>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Messaging.Messages.SoTestMessageSerializer>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SoTestMessageSerializer)
    nameWithType: ObjectExtensions.GraphCopy(Of SoTestMessageSerializer)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoTestMessageSerializer, To>()
  nameWithType: Converters.MapEnums<SoTestMessageSerializer, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Messaging.Messages.SoTestMessageSerializer, To>()
  nameWithType.vb: Converters.MapEnums(Of SoTestMessageSerializer, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer, To)()
  name.vb: MapEnums(Of SoTestMessageSerializer, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoTestMessageSerializer, To>
    nameWithType: Converters.MapEnums<SoTestMessageSerializer, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Messaging.Messages.SoTestMessageSerializer, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoTestMessageSerializer, To)
    nameWithType: Converters.MapEnums(Of SoTestMessageSerializer, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Messaging.Messages.SoTestMessageSerializer, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
  commentId: M:SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
  isExternal: true
  name: Serialize<TMessage>(TMessage)
  nameWithType: SoMessageSerializer.Serialize<TMessage>(TMessage)
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize<TMessage>(TMessage)
  nameWithType.vb: SoMessageSerializer.Serialize(Of TMessage)(TMessage)
  fullName.vb: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize(Of TMessage)(TMessage)
  name.vb: Serialize(Of TMessage)(TMessage)
  spec.csharp:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
    name: Serialize<TMessage>
    nameWithType: SoMessageSerializer.Serialize<TMessage>
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize<TMessage>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize``1(``0)
    name: Serialize(Of TMessage)
    nameWithType: SoMessageSerializer.Serialize(Of TMessage)
    fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.Serialize(Of TMessage)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TMessage
    nameWithType: TMessage
    fullName: TMessage
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.#ctor*
  commentId: Overload:SuperOffice.Messaging.Messages.SoTestMessageSerializer.#ctor
  isExternal: true
  name: SoTestMessageSerializer
  nameWithType: SoTestMessageSerializer.SoTestMessageSerializer
  fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer.SoTestMessageSerializer
- uid: SuperOffice.Messaging.Messages.SoMessageSerializer.MessageType
  commentId: P:SuperOffice.Messaging.Messages.SoMessageSerializer.MessageType
  parent: SuperOffice.Messaging.Messages.SoMessageSerializer
  isExternal: true
  name: MessageType
  nameWithType: SoMessageSerializer.MessageType
  fullName: SuperOffice.Messaging.Messages.SoMessageSerializer.MessageType
- uid: SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType*
  commentId: Overload:SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType
  isExternal: true
  name: MessageType
  nameWithType: SoTestMessageSerializer.MessageType
  fullName: SuperOffice.Messaging.Messages.SoTestMessageSerializer.MessageType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
