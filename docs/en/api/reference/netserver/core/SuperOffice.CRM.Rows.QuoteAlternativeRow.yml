### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
  commentId: T:SuperOffice.CRM.Rows.QuoteAlternativeRow
  id: QuoteAlternativeRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.#ctor(SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDescription
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPQuoteAlternativeKey
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField1
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField2
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField3
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField4
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField5
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentName
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteAlternativeId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteVersionId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentReason
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegistered
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegisteredAssociateId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentStatus
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentTotalPrice
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdated
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedAssociateId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedCount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUserValueOverride
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVAT
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVATInfo
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onDescriptionChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountAmountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountPercentChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningAmountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningPercentChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountAmountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountPercentChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPQuoteAlternativeKeyChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField1Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField2Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField3Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField4Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField5Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onNameChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onQuoteVersionIdChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onReasonChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onStatusChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onTotalPriceChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedCountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onUserValueOverrideChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATInfoChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDescription
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPQuoteAlternativeKey
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField1
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField2
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField3
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField4
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField5
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedName
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteAlternativeId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteVersionId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedReason
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegistered
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegisteredAssociateId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedStatus
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedTotalPrice
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdated
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedAssociateId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedCount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUserValueOverride
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVAT
  - SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVATInfo
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Description
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId(System.Int32)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.QuoteAlternativeTableInfo)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Item(System.String)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Name
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDescriptionChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountAmountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountPercentChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningAmountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningPercentChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountAmountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountPercentChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPQuoteAlternativeKeyChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField1Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField2Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField3Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField4Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField5Change
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnNameChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnQuoteVersionIdChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnReasonChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredAssociateIdChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnStatusChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnTotalPriceChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedAssociateIdChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedCountChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUserValueOverrideChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATInfoChange
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Status
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo
  langs:
  - csharp
  - vb
  name: QuoteAlternativeRow
  nameWithType: QuoteAlternativeRow
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nQuote Version is made up of one or more Alternatives. One of 1..n possible alternatives in a Quote Version. The reason we have alternatives is that a quote can say to a customer, “we can solve you problem in two (or more) different ways, with different technology and sideeffects (and price)”. An Alternative may have discounts on the total amount. The Alternative tracks whether the user on the order level entered the Discount , Earning amount or the TotalPrice fields so that the discount and earning and total can be re-calculated correctly when Quote Lines are added or changed.\n<br />Row Object for table &apos;QuoteAlternative&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) QuoteAlternativeRow <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.QuoteAlternativeRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.QuoteAlternativeRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.QuoteAlternativeTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.QuoteAlternativeTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRows.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.QuoteAlternativeTableInfo)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table QuoteAlternative are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class QuoteAlternativeRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem'
    content.vb: >-
      Public Class QuoteAlternativeRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  - SuperOffice.Data.ISoItem
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._onValueChange
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.Save
  - SuperOffice.CRM.Rows.TableRowBase.Delete
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.Origin
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
  - SuperOffice.CRM.Rows.QuoteAlternativeRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteAlternativeId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteAlternativeId
  id: _persistedQuoteAlternativeId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedQuoteAlternativeId
  nameWithType: QuoteAlternativeRow._persistedQuoteAlternativeId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteAlternativeId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedQuoteAlternativeId
    return:
      type: System.Int32
    content.vb: Protected _persistedQuoteAlternativeId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPQuoteAlternativeKey
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPQuoteAlternativeKey
  id: _persistedERPQuoteAlternativeKey
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedERPQuoteAlternativeKey
  nameWithType: QuoteAlternativeRow._persistedERPQuoteAlternativeKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPQuoteAlternativeKey
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedERPQuoteAlternativeKey
    return:
      type: System.String
    content.vb: Protected _persistedERPQuoteAlternativeKey As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteVersionId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteVersionId
  id: _persistedQuoteVersionId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedQuoteVersionId
  nameWithType: QuoteAlternativeRow._persistedQuoteVersionId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedQuoteVersionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedQuoteVersionId
    return:
      type: System.Int32
    content.vb: Protected _persistedQuoteVersionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedName
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedName
  id: _persistedName
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedName
  nameWithType: QuoteAlternativeRow._persistedName
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedName
    return:
      type: System.String
    content.vb: Protected _persistedName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDescription
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDescription
  id: _persistedDescription
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedDescription
  nameWithType: QuoteAlternativeRow._persistedDescription
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDescription
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Description\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedDescription
    return:
      type: System.String
    content.vb: Protected _persistedDescription As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedStatus
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedStatus
  id: _persistedStatus
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedStatus
  nameWithType: QuoteAlternativeRow._persistedStatus
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected QuoteStatus _persistedStatus
    return:
      type: SuperOffice.Data.QuoteStatus
    content.vb: Protected _persistedStatus As QuoteStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedReason
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedReason
  id: _persistedReason
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedReason
  nameWithType: QuoteAlternativeRow._persistedReason
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedReason
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedReason
    return:
      type: System.String
    content.vb: Protected _persistedReason As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountPercent
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountPercent
  id: _persistedERPDiscountPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedERPDiscountPercent
  nameWithType: QuoteAlternativeRow._persistedERPDiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedERPDiscountPercent
    return:
      type: System.Double
    content.vb: Protected _persistedERPDiscountPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountAmount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountAmount
  id: _persistedERPDiscountAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedERPDiscountAmount
  nameWithType: QuoteAlternativeRow._persistedERPDiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedERPDiscountAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedERPDiscountAmount
    return:
      type: System.Double
    content.vb: Protected _persistedERPDiscountAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountPercent
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountPercent
  id: _persistedDiscountPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedDiscountPercent
  nameWithType: QuoteAlternativeRow._persistedDiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedDiscountPercent
    return:
      type: System.Double
    content.vb: Protected _persistedDiscountPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountAmount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountAmount
  id: _persistedDiscountAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedDiscountAmount
  nameWithType: QuoteAlternativeRow._persistedDiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedDiscountAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedDiscountAmount
    return:
      type: System.Double
    content.vb: Protected _persistedDiscountAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUserValueOverride
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUserValueOverride
  id: _persistedUserValueOverride
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedUserValueOverride
  nameWithType: QuoteAlternativeRow._persistedUserValueOverride
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUserValueOverride
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected ValueOverride _persistedUserValueOverride
    return:
      type: SuperOffice.Data.ValueOverride
    content.vb: Protected _persistedUserValueOverride As ValueOverride
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVATInfo
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVATInfo
  id: _persistedVATInfo
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedVATInfo
  nameWithType: QuoteAlternativeRow._persistedVATInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVATInfo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedVATInfo
    return:
      type: System.String
    content.vb: Protected _persistedVATInfo As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVAT
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVAT
  id: _persistedVAT
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedVAT
  nameWithType: QuoteAlternativeRow._persistedVAT
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedVAT
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedVAT
    return:
      type: System.Double
    content.vb: Protected _persistedVAT As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningPercent
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningPercent
  id: _persistedEarningPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedEarningPercent
  nameWithType: QuoteAlternativeRow._persistedEarningPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedEarningPercent
    return:
      type: System.Double
    content.vb: Protected _persistedEarningPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningAmount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningAmount
  id: _persistedEarningAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedEarningAmount
  nameWithType: QuoteAlternativeRow._persistedEarningAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedEarningAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedEarningAmount
    return:
      type: System.Double
    content.vb: Protected _persistedEarningAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedTotalPrice
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedTotalPrice
  id: _persistedTotalPrice
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedTotalPrice
  nameWithType: QuoteAlternativeRow._persistedTotalPrice
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedTotalPrice
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _persistedTotalPrice
    return:
      type: System.Double
    content.vb: Protected _persistedTotalPrice As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField1
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField1
  id: _persistedExtraField1
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedExtraField1
  nameWithType: QuoteAlternativeRow._persistedExtraField1
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField1
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedExtraField1
    return:
      type: System.String
    content.vb: Protected _persistedExtraField1 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField2
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField2
  id: _persistedExtraField2
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedExtraField2
  nameWithType: QuoteAlternativeRow._persistedExtraField2
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField2
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedExtraField2
    return:
      type: System.String
    content.vb: Protected _persistedExtraField2 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField3
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField3
  id: _persistedExtraField3
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedExtraField3
  nameWithType: QuoteAlternativeRow._persistedExtraField3
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField3
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedExtraField3
    return:
      type: System.String
    content.vb: Protected _persistedExtraField3 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField4
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField4
  id: _persistedExtraField4
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedExtraField4
  nameWithType: QuoteAlternativeRow._persistedExtraField4
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField4
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedExtraField4
    return:
      type: System.String
    content.vb: Protected _persistedExtraField4 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField5
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField5
  id: _persistedExtraField5
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedExtraField5
  nameWithType: QuoteAlternativeRow._persistedExtraField5
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedExtraField5
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedExtraField5
    return:
      type: System.String
    content.vb: Protected _persistedExtraField5 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegistered
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegistered
  id: _persistedRegistered
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedRegistered
  nameWithType: QuoteAlternativeRow._persistedRegistered
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedRegistered
    return:
      type: System.DateTime
    content.vb: Protected _persistedRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegisteredAssociateId
  id: _persistedRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedRegisteredAssociateId
  nameWithType: QuoteAlternativeRow._persistedRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdated
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdated
  id: _persistedUpdated
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedUpdated
  nameWithType: QuoteAlternativeRow._persistedUpdated
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedUpdated
    return:
      type: System.DateTime
    content.vb: Protected _persistedUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedAssociateId
  id: _persistedUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedAssociateId
  nameWithType: QuoteAlternativeRow._persistedUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _persistedUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedCount
  id: _persistedUpdatedCount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _persistedUpdatedCount
  nameWithType: QuoteAlternativeRow._persistedUpdatedCount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._persistedUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _persistedUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteAlternativeId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteAlternativeId
  id: _currentQuoteAlternativeId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentQuoteAlternativeId
  nameWithType: QuoteAlternativeRow._currentQuoteAlternativeId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteAlternativeId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentQuoteAlternativeId
    return:
      type: System.Int32
    content.vb: Protected _currentQuoteAlternativeId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPQuoteAlternativeKey
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPQuoteAlternativeKey
  id: _currentERPQuoteAlternativeKey
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentERPQuoteAlternativeKey
  nameWithType: QuoteAlternativeRow._currentERPQuoteAlternativeKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPQuoteAlternativeKey
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentERPQuoteAlternativeKey
    return:
      type: System.String
    content.vb: Protected _currentERPQuoteAlternativeKey As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteVersionId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteVersionId
  id: _currentQuoteVersionId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentQuoteVersionId
  nameWithType: QuoteAlternativeRow._currentQuoteVersionId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentQuoteVersionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentQuoteVersionId
    return:
      type: System.Int32
    content.vb: Protected _currentQuoteVersionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentName
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentName
  id: _currentName
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentName
  nameWithType: QuoteAlternativeRow._currentName
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Name\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentName
    return:
      type: System.String
    content.vb: Protected _currentName As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDescription
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDescription
  id: _currentDescription
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentDescription
  nameWithType: QuoteAlternativeRow._currentDescription
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDescription
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Description\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentDescription
    return:
      type: System.String
    content.vb: Protected _currentDescription As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentStatus
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentStatus
  id: _currentStatus
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentStatus
  nameWithType: QuoteAlternativeRow._currentStatus
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected QuoteStatus _currentStatus
    return:
      type: SuperOffice.Data.QuoteStatus
    content.vb: Protected _currentStatus As QuoteStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentReason
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentReason
  id: _currentReason
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentReason
  nameWithType: QuoteAlternativeRow._currentReason
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentReason
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentReason
    return:
      type: System.String
    content.vb: Protected _currentReason As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountPercent
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountPercent
  id: _currentERPDiscountPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentERPDiscountPercent
  nameWithType: QuoteAlternativeRow._currentERPDiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentERPDiscountPercent
    return:
      type: System.Double
    content.vb: Protected _currentERPDiscountPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountAmount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountAmount
  id: _currentERPDiscountAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentERPDiscountAmount
  nameWithType: QuoteAlternativeRow._currentERPDiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentERPDiscountAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentERPDiscountAmount
    return:
      type: System.Double
    content.vb: Protected _currentERPDiscountAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountPercent
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountPercent
  id: _currentDiscountPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentDiscountPercent
  nameWithType: QuoteAlternativeRow._currentDiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentDiscountPercent
    return:
      type: System.Double
    content.vb: Protected _currentDiscountPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountAmount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountAmount
  id: _currentDiscountAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentDiscountAmount
  nameWithType: QuoteAlternativeRow._currentDiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentDiscountAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentDiscountAmount
    return:
      type: System.Double
    content.vb: Protected _currentDiscountAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUserValueOverride
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUserValueOverride
  id: _currentUserValueOverride
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentUserValueOverride
  nameWithType: QuoteAlternativeRow._currentUserValueOverride
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUserValueOverride
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected ValueOverride _currentUserValueOverride
    return:
      type: SuperOffice.Data.ValueOverride
    content.vb: Protected _currentUserValueOverride As ValueOverride
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVATInfo
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVATInfo
  id: _currentVATInfo
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentVATInfo
  nameWithType: QuoteAlternativeRow._currentVATInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVATInfo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentVATInfo
    return:
      type: System.String
    content.vb: Protected _currentVATInfo As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVAT
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVAT
  id: _currentVAT
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentVAT
  nameWithType: QuoteAlternativeRow._currentVAT
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentVAT
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentVAT
    return:
      type: System.Double
    content.vb: Protected _currentVAT As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningPercent
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningPercent
  id: _currentEarningPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentEarningPercent
  nameWithType: QuoteAlternativeRow._currentEarningPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningPercent
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentEarningPercent
    return:
      type: System.Double
    content.vb: Protected _currentEarningPercent As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningAmount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningAmount
  id: _currentEarningAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentEarningAmount
  nameWithType: QuoteAlternativeRow._currentEarningAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentEarningAmount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentEarningAmount
    return:
      type: System.Double
    content.vb: Protected _currentEarningAmount As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentTotalPrice
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentTotalPrice
  id: _currentTotalPrice
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentTotalPrice
  nameWithType: QuoteAlternativeRow._currentTotalPrice
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentTotalPrice
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected double _currentTotalPrice
    return:
      type: System.Double
    content.vb: Protected _currentTotalPrice As Double
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField1
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField1
  id: _currentExtraField1
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentExtraField1
  nameWithType: QuoteAlternativeRow._currentExtraField1
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField1
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentExtraField1
    return:
      type: System.String
    content.vb: Protected _currentExtraField1 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField2
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField2
  id: _currentExtraField2
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentExtraField2
  nameWithType: QuoteAlternativeRow._currentExtraField2
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField2
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentExtraField2
    return:
      type: System.String
    content.vb: Protected _currentExtraField2 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField3
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField3
  id: _currentExtraField3
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentExtraField3
  nameWithType: QuoteAlternativeRow._currentExtraField3
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField3
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentExtraField3
    return:
      type: System.String
    content.vb: Protected _currentExtraField3 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField4
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField4
  id: _currentExtraField4
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentExtraField4
  nameWithType: QuoteAlternativeRow._currentExtraField4
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField4
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentExtraField4
    return:
      type: System.String
    content.vb: Protected _currentExtraField4 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField5
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField5
  id: _currentExtraField5
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentExtraField5
  nameWithType: QuoteAlternativeRow._currentExtraField5
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentExtraField5
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentExtraField5
    return:
      type: System.String
    content.vb: Protected _currentExtraField5 As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegistered
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegistered
  id: _currentRegistered
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentRegistered
  nameWithType: QuoteAlternativeRow._currentRegistered
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegistered
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentRegistered
    return:
      type: System.DateTime
    content.vb: Protected _currentRegistered As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegisteredAssociateId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegisteredAssociateId
  id: _currentRegisteredAssociateId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentRegisteredAssociateId
  nameWithType: QuoteAlternativeRow._currentRegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentRegisteredAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRegisteredAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentRegisteredAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdated
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdated
  id: _currentUpdated
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentUpdated
  nameWithType: QuoteAlternativeRow._currentUpdated
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentUpdated
    return:
      type: System.DateTime
    content.vb: Protected _currentUpdated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedAssociateId
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedAssociateId
  id: _currentUpdatedAssociateId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedAssociateId
  nameWithType: QuoteAlternativeRow._currentUpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedAssociateId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentUpdatedAssociateId
    return:
      type: System.Int32
    content.vb: Protected _currentUpdatedAssociateId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedCount
  commentId: F:SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedCount
  id: _currentUpdatedCount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _currentUpdatedCount
  nameWithType: QuoteAlternativeRow._currentUpdatedCount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._currentUpdatedCount
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentUpdatedCount
    return:
      type: System.Int16
    content.vb: Protected _currentUpdatedCount As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: QuoteAlternativeRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: QuoteAlternativeRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: QuoteAlternativeRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.#ctor(SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.#ctor(SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase)'
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: QuoteAlternativeRow(QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  nameWithType: QuoteAlternativeRow.QuoteAlternativeRow(QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nQuote Version is made up of one or more Alternatives. One of 1..n possible alternatives in a Quote Version. The reason we have alternatives is that a quote can say to a customer, “we can solve you problem in two (or more) different ways, with different technology and sideeffects (and price)”. An Alternative may have discounts on the total amount. The Alternative tracks whether the user on the order level entered the Discount , Earning amount or the TotalPrice fields so that the discount and earning and total can be re-calculated correctly when Quote Lines are added or changed.\n"
  syntax:
    content: protected QuoteAlternativeRow(QuoteAlternativeRow.QuoteAlternativeRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As QuoteAlternativeRow.QuoteAlternativeRowIdxBase)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: QuoteAlternativeRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the QuoteAlternativeRow object.\nQuote Version is made up of one or more Alternatives. One of 1..n possible alternatives in a Quote Version. The reason we have alternatives is that a quote can say to a customer, “we can solve you problem in two (or more) different ways, with different technology and sideeffects (and price)”. An Alternative may have discounts on the total amount. The Alternative tracks whether the user on the order level entered the Discount , Earning amount or the TotalPrice fields so that the discount and earning and total can be re-calculated correctly when Quote Lines are added or changed.\n"
  syntax:
    content: public static QuoteAlternativeRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
      description: A new instance of the QuoteAlternativeRow object.
    content.vb: Public Shared Function CreateNew As QuoteAlternativeRow
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.QuoteAlternativeTableInfo)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.QuoteAlternativeTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.QuoteAlternativeTableInfo)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, QuoteAlternativeTableInfo)
  nameWithType: QuoteAlternativeRow.GetFromReader(SoDataReader, QuoteAlternativeTableInfo)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.QuoteAlternativeTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the QuoteAlternativeRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nQuote Version is made up of one or more Alternatives. One of 1..n possible alternatives in a Quote Version. The reason we have alternatives is that a quote can say to a customer, “we can solve you problem in two (or more) different ways, with different technology and sideeffects (and price)”. An Alternative may have discounts on the total amount. The Alternative tracks whether the user on the order level entered the Discount , Earning amount or the TotalPrice fields so that the discount and earning and total can be re-calculated correctly when Quote Lines are added or changed.\n"
  syntax:
    content: public static QuoteAlternativeRow GetFromReader(SoDataReader reader, QuoteAlternativeTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.QuoteAlternativeTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
      description: A new instance of the QuoteAlternativeRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As QuoteAlternativeTableInfo) As QuoteAlternativeRow
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(QuoteAlternativeRow.CustomSearch)
  nameWithType: QuoteAlternativeRow.GetFromCustomSearch(QuoteAlternativeRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch(SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the QuoteAlternativeRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static QuoteAlternativeRow GetFromCustomSearch(QuoteAlternativeRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
      description: A new instance of the QuoteAlternativeRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As QuoteAlternativeRow.CustomSearch) As QuoteAlternativeRow
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId(System.Int32)
  id: GetFromIdxQuoteAlternativeId(System.Int32)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: GetFromIdxQuoteAlternativeId(Int32)
  nameWithType: QuoteAlternativeRow.GetFromIdxQuoteAlternativeId(Int32)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the QuoteAlternativeRow object, by querying the database table via the index &apos;IDXQuoteAlternativeId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the QuoteAlternative table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static QuoteAlternativeRow GetFromIdxQuoteAlternativeId(int quoteAlternativeId)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxQuoteAlternativeId(quoteAlternativeId As Integer) As QuoteAlternativeRow
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  id: SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: SetDefaults(DefaulterStrategy)
  nameWithType: QuoteAlternativeRow.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override void SetDefaults(DefaulterStrategy strategy)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    content.vb: Public Overrides Sub SetDefaults(strategy As DefaulterStrategy)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: QuoteAlternativeRow.ToString()
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: QuoteAlternativeRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: QuoteAlternativeRow.Reset()
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: QuoteAlternativeRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: QuoteAlternativeRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  id: OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnSave(BatchSave)
  nameWithType: QuoteAlternativeRow.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override void OnSave(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    content.vb: Protected Overrides Sub OnSave(batchSave As BatchSave)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved(System.Boolean)
  id: OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnSaved(Boolean)
  nameWithType: QuoteAlternativeRow.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override void OnSaved(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    content.vb: Protected Overrides Sub OnSaved(bSucceeded As Boolean)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: QuoteAlternativeRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: QuoteAlternativeRow.Item[String]
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: QuoteAlternativeRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.QuoteAlternativeRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: QuoteAlternativeRow.TableInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo
  id: QuoteAlternativeTableInfo
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: QuoteAlternativeTableInfo
  nameWithType: QuoteAlternativeRow.QuoteAlternativeTableInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.QuoteAlternativeTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public QuoteAlternativeTableInfo QuoteAlternativeTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
    content.vb: Public ReadOnly Property QuoteAlternativeTableInfo As QuoteAlternativeTableInfo
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: QuoteAlternativeRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: QuoteAlternativeRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: QuoteAlternativeRow.IsNew
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: QuoteAlternativeRow.IsDirty
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: QuoteAlternativeRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId
  id: QuoteAlternativeId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: QuoteAlternativeId
  nameWithType: QuoteAlternativeRow.QuoteAlternativeId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Primary key \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>		\n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int QuoteAlternativeId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property QuoteAlternativeId As Integer
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey
  id: ERPQuoteAlternativeKey
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ERPQuoteAlternativeKey
  nameWithType: QuoteAlternativeRow.ERPQuoteAlternativeKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Key that identifies this alternative in the ERP system, if it exists there. \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ERPQuoteAlternativeKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ERPQuoteAlternativeKey As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId
  id: QuoteVersionId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: QuoteVersionId
  nameWithType: QuoteAlternativeRow.QuoteVersionId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The version that owns this alternative (the chain is Sale 1->1 Quote 1->+ QuoteVersion 1->+ QuoteAlternative. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int QuoteVersionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property QuoteVersionId As Integer
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Name
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Name
  id: Name
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: QuoteAlternativeRow.Name
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Name
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Name of Alternative. Shown in tab in user interface, intentionally kept short \n"
  remarks: "\nOriginal type in dictionary:  String[60].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Name As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Name*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Description
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Description
  id: Description
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: QuoteAlternativeRow.Description
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Description
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The tool-tip to use in the user interface (on the tab, for instance). \n"
  remarks: "\nOriginal type in dictionary:  String[2048].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Description As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Description*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Status
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Status
  id: Status
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: QuoteAlternativeRow.Status
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: QuoteStatus. If there was a problem with for instance calculation, this field is set to warning or error. \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual QuoteStatus Status { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.QuoteStatus
    content.vb: Public Overridable Property Status As QuoteStatus
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Status*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason
  id: Reason
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: QuoteAlternativeRow.Reason
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. If there was a problem, this field contains a localized explanation of the problem and possible steps to fix it that the user can be shown. \n"
  remarks: "\nOriginal type in dictionary:  String[2048].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Reason { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Reason As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent
  id: ERPDiscountPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ERPDiscountPercent
  nameWithType: QuoteAlternativeRow.ERPDiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. The discount the system calculates based on customer /amount / whatever. Can be overridden by the sales rep in the field ‘DiscountPercent’ or ‘DiscountAmount’. Both the two ‘ERPDiscountPercent’ and ‘ERPDiscountAmount’ shall be filled out. If UserValueOverride is &apos;None&apos;, then the ERPDiscountAmount shall be copied into DiscountAmount and ERPDiscountPercent into DiscountPercent. The Percentage is given in integer form, i.e. ‘12%’ is represented as ‘12’. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double ERPDiscountPercent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property ERPDiscountPercent As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount
  id: ERPDiscountAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ERPDiscountAmount
  nameWithType: QuoteAlternativeRow.ERPDiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. The discount the system calculates based on customer /amount / whatever. Can be overridden by the user in the field ‘DiscountPercent’ or ‘DiscountAmount’. Both the two ‘ERPDiscountPercent’ and ‘ERPDiscountAmount’ shall be filled out. If UserValueOverride is &apos;None&apos;, then the ERPDiscountAmount shall be copied into DiscountAmount and ERPDiscountPercent into DiscountPercent. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double ERPDiscountAmount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property ERPDiscountAmount As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent
  id: DiscountPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: DiscountPercent
  nameWithType: QuoteAlternativeRow.DiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. The discount the sales rep specifies, in percent. Both the two ‘DiscountPercent’ and ‘DiscountAmount’ shall be filled out, but the UserValueOverride field must be set to the field the user actually changed. If this field is filled out by the user, it overrides the discount suggested by the connector. If the user has not filled any values, the system will copy the ERP discount percent value into this field. The Percentage is given in integer form, i.e. ‘12%’ is represented as ‘12’. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double DiscountPercent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property DiscountPercent As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount
  id: DiscountAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: DiscountAmount
  nameWithType: QuoteAlternativeRow.DiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. The discount the sales rep specifies, in whatever currency the sale is in. Both the two ‘DiscountPercent’ and ‘DiscountAmount’ shall be filled out, but the UserValueOverride field must be set to the field the user actually changed. If this field is filled out by the user, it overrides the discount suggested by the connector. If the user has not filled any values, the system will copy the ERP discount amount value into this field. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double DiscountAmount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property DiscountAmount As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride
  id: UserValueOverride
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: UserValueOverride
  nameWithType: QuoteAlternativeRow.UserValueOverride
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: ValueOverride. Has the pre-calculated (from ERP) price information been overridden, and how. If the user has filled out the discountpercentage field, then the UserValueOverride field is set to OverridePercent. (The DiscountAmount, EarningPercent, EarningAmount and TotalPrice fields are calculated based on the discountPercent.) \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual ValueOverride UserValueOverride { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.ValueOverride
    content.vb: Public Overridable Property UserValueOverride As ValueOverride
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo
  id: VATInfo
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: VATInfo
  nameWithType: QuoteAlternativeRow.VATInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Extra info about VAT that the connector might insert. This field has no business logic in the CRM code, but is available as a merge field in the quote documents. \n"
  remarks: "\nOriginal type in dictionary:  String[255].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string VATInfo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property VATInfo As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT
  id: VAT
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: VAT
  nameWithType: QuoteAlternativeRow.VAT
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. Tax/VAT - THIS IS AN AMOUNT, available as a merge field in the quote document. The SuperOffice quote connector will calculate this field based on the vat PERCENTAGES on the individual lines; other connectors may implement other algorithms at will. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double VAT { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property VAT As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent
  id: EarningPercent
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: EarningPercent
  nameWithType: QuoteAlternativeRow.EarningPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. The earning on this alternative, in percent of total. The Percentage is given in integer form, i.e. ‘12%’ is represented as ‘12’. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double EarningPercent { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property EarningPercent As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount
  id: EarningAmount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: EarningAmount
  nameWithType: QuoteAlternativeRow.EarningAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. Earning on this alternative, as an absolute amount \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double EarningAmount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property EarningAmount As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice
  id: TotalPrice
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: TotalPrice
  nameWithType: QuoteAlternativeRow.TotalPrice
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: double. Sum of the QuoteLines.TotalPrice - AlternativeDiscount or QuoteLines.TotalCost + Earning based on what, if anything, the user has entered last. Shall be calculated by the connector. \n"
  remarks: "\nOriginal type in dictionary:  Double.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0.0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual double TotalPrice { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Overridable Property TotalPrice As Double
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1
  id: ExtraField1
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ExtraField1
  nameWithType: QuoteAlternativeRow.ExtraField1
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional information added by Quote Connector; usable in the quote document merge process \n"
  remarks: "\nOriginal type in dictionary:  String[1024].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ExtraField1 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ExtraField1 As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2
  id: ExtraField2
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ExtraField2
  nameWithType: QuoteAlternativeRow.ExtraField2
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional information added by Quote Connector; usable in the quote document merge process \n"
  remarks: "\nOriginal type in dictionary:  String[1024].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ExtraField2 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ExtraField2 As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3
  id: ExtraField3
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ExtraField3
  nameWithType: QuoteAlternativeRow.ExtraField3
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional information added by Quote Connector; usable in the quote document merge process \n"
  remarks: "\nOriginal type in dictionary:  String[1024].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ExtraField3 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ExtraField3 As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4
  id: ExtraField4
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ExtraField4
  nameWithType: QuoteAlternativeRow.ExtraField4
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional information added by Quote Connector; usable in the quote document merge process \n"
  remarks: "\nOriginal type in dictionary:  String[1024].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ExtraField4 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ExtraField4 As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5
  id: ExtraField5
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: ExtraField5
  nameWithType: QuoteAlternativeRow.ExtraField5
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Optional information added by Quote Connector; usable in the quote document merge process \n"
  remarks: "\nOriginal type in dictionary:  String[1024].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string ExtraField5 { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property ExtraField5 As String
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered
  id: Registered
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: QuoteAlternativeRow.Registered
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Registered when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Registered { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Registered As Date
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: QuoteAlternativeRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Registered by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RegisteredAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RegisteredAssociateId As Integer
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated
  id: Updated
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: Updated
  nameWithType: QuoteAlternativeRow.Updated
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Last updated when in UTC  \n"
  remarks: "\nOriginal type in dictionary:  UtcDateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Updated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Updated As Date
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId
  id: UpdatedAssociateId
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: UpdatedAssociateId
  nameWithType: QuoteAlternativeRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Last updated by whom \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int UpdatedAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property UpdatedAssociateId As Integer
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount
  commentId: P:SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount
  id: UpdatedCount
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: UpdatedCount
  nameWithType: QuoteAlternativeRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Number of updates made to this record \n"
  remarks: "\nOriginal type in dictionary:  UShort.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short UpdatedCount { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property UpdatedCount As Short
  overload: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPQuoteAlternativeKeyChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPQuoteAlternativeKeyChange
  id: _onERPQuoteAlternativeKeyChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onERPQuoteAlternativeKeyChange
  nameWithType: QuoteAlternativeRow._onERPQuoteAlternativeKeyChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPQuoteAlternativeKeyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onERPQuoteAlternativeKeyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onERPQuoteAlternativeKeyChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onQuoteVersionIdChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onQuoteVersionIdChange
  id: _onQuoteVersionIdChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onQuoteVersionIdChange
  nameWithType: QuoteAlternativeRow._onQuoteVersionIdChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onQuoteVersionIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onQuoteVersionIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onQuoteVersionIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onNameChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onNameChange
  id: _onNameChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onNameChange
  nameWithType: QuoteAlternativeRow._onNameChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Name\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onDescriptionChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onDescriptionChange
  id: _onDescriptionChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onDescriptionChange
  nameWithType: QuoteAlternativeRow._onDescriptionChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onDescriptionChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Description\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onDescriptionChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onDescriptionChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onStatusChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onStatusChange
  id: _onStatusChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onStatusChange
  nameWithType: QuoteAlternativeRow._onStatusChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Status\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<QuoteStatus> _onStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.QuoteStatus}
    content.vb: Protected Event _onStatusChange As OnFieldChange(Of QuoteStatus)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onReasonChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onReasonChange
  id: _onReasonChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onReasonChange
  nameWithType: QuoteAlternativeRow._onReasonChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onReasonChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onReasonChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onReasonChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountPercentChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountPercentChange
  id: _onERPDiscountPercentChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onERPDiscountPercentChange
  nameWithType: QuoteAlternativeRow._onERPDiscountPercentChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onERPDiscountPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onERPDiscountPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountAmountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountAmountChange
  id: _onERPDiscountAmountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onERPDiscountAmountChange
  nameWithType: QuoteAlternativeRow._onERPDiscountAmountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onERPDiscountAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onERPDiscountAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onERPDiscountAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountPercentChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountPercentChange
  id: _onDiscountPercentChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onDiscountPercentChange
  nameWithType: QuoteAlternativeRow._onDiscountPercentChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onDiscountPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onDiscountPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountAmountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountAmountChange
  id: _onDiscountAmountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onDiscountAmountChange
  nameWithType: QuoteAlternativeRow._onDiscountAmountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onDiscountAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onDiscountAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onDiscountAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUserValueOverrideChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onUserValueOverrideChange
  id: _onUserValueOverrideChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onUserValueOverrideChange
  nameWithType: QuoteAlternativeRow._onUserValueOverrideChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUserValueOverrideChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<ValueOverride> _onUserValueOverrideChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.ValueOverride}
    content.vb: Protected Event _onUserValueOverrideChange As OnFieldChange(Of ValueOverride)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATInfoChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATInfoChange
  id: _onVATInfoChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onVATInfoChange
  nameWithType: QuoteAlternativeRow._onVATInfoChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATInfoChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onVATInfoChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onVATInfoChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATChange
  id: _onVATChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onVATChange
  nameWithType: QuoteAlternativeRow._onVATChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onVATChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onVATChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onVATChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningPercentChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningPercentChange
  id: _onEarningPercentChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onEarningPercentChange
  nameWithType: QuoteAlternativeRow._onEarningPercentChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onEarningPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onEarningPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningAmountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningAmountChange
  id: _onEarningAmountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onEarningAmountChange
  nameWithType: QuoteAlternativeRow._onEarningAmountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onEarningAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onEarningAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onEarningAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onTotalPriceChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onTotalPriceChange
  id: _onTotalPriceChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onTotalPriceChange
  nameWithType: QuoteAlternativeRow._onTotalPriceChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onTotalPriceChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type double.\n"
  syntax:
    content: protected event OnFieldChange<double> _onTotalPriceChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Protected Event _onTotalPriceChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField1Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField1Change
  id: _onExtraField1Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onExtraField1Change
  nameWithType: QuoteAlternativeRow._onExtraField1Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField1Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onExtraField1Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onExtraField1Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField2Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField2Change
  id: _onExtraField2Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onExtraField2Change
  nameWithType: QuoteAlternativeRow._onExtraField2Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField2Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onExtraField2Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onExtraField2Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField3Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField3Change
  id: _onExtraField3Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onExtraField3Change
  nameWithType: QuoteAlternativeRow._onExtraField3Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField3Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onExtraField3Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onExtraField3Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField4Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField4Change
  id: _onExtraField4Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onExtraField4Change
  nameWithType: QuoteAlternativeRow._onExtraField4Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField4Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onExtraField4Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onExtraField4Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField5Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField5Change
  id: _onExtraField5Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onExtraField5Change
  nameWithType: QuoteAlternativeRow._onExtraField5Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onExtraField5Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onExtraField5Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onExtraField5Change As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredChange
  id: _onRegisteredChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onRegisteredChange
  nameWithType: QuoteAlternativeRow._onRegisteredChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredAssociateIdChange
  id: _onRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onRegisteredAssociateIdChange
  nameWithType: QuoteAlternativeRow._onRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedChange
  id: _onUpdatedChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onUpdatedChange
  nameWithType: QuoteAlternativeRow._onUpdatedChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedAssociateIdChange
  id: _onUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onUpdatedAssociateIdChange
  nameWithType: QuoteAlternativeRow._onUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedCountChange
  id: _onUpdatedCountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: _onUpdatedCountChange
  nameWithType: QuoteAlternativeRow._onUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow._onUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPQuoteAlternativeKeyChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPQuoteAlternativeKeyChange
  id: OnERPQuoteAlternativeKeyChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnERPQuoteAlternativeKeyChange
  nameWithType: QuoteAlternativeRow.OnERPQuoteAlternativeKeyChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPQuoteAlternativeKeyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ERPQuoteAlternativeKey is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnERPQuoteAlternativeKeyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnERPQuoteAlternativeKeyChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnQuoteVersionIdChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnQuoteVersionIdChange
  id: OnQuoteVersionIdChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnQuoteVersionIdChange
  nameWithType: QuoteAlternativeRow.OnQuoteVersionIdChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnQuoteVersionIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when QuoteVersionId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnQuoteVersionIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnQuoteVersionIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnNameChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnNameChange
  id: OnNameChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnNameChange
  nameWithType: QuoteAlternativeRow.OnNameChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnNameChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Name is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnNameChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnNameChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDescriptionChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDescriptionChange
  id: OnDescriptionChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnDescriptionChange
  nameWithType: QuoteAlternativeRow.OnDescriptionChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDescriptionChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Description is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnDescriptionChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnDescriptionChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnStatusChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnStatusChange
  id: OnStatusChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnStatusChange
  nameWithType: QuoteAlternativeRow.OnStatusChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Status is changing.\n"
  syntax:
    content: public event OnFieldChange<QuoteStatus> OnStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.QuoteStatus}
    content.vb: Public Event OnStatusChange As OnFieldChange(Of QuoteStatus)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnReasonChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnReasonChange
  id: OnReasonChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnReasonChange
  nameWithType: QuoteAlternativeRow.OnReasonChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnReasonChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Reason is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnReasonChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnReasonChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountPercentChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountPercentChange
  id: OnERPDiscountPercentChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnERPDiscountPercentChange
  nameWithType: QuoteAlternativeRow.OnERPDiscountPercentChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ERPDiscountPercent is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnERPDiscountPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnERPDiscountPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountAmountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountAmountChange
  id: OnERPDiscountAmountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnERPDiscountAmountChange
  nameWithType: QuoteAlternativeRow.OnERPDiscountAmountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnERPDiscountAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ERPDiscountAmount is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnERPDiscountAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnERPDiscountAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountPercentChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountPercentChange
  id: OnDiscountPercentChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnDiscountPercentChange
  nameWithType: QuoteAlternativeRow.OnDiscountPercentChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DiscountPercent is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnDiscountPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnDiscountPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountAmountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountAmountChange
  id: OnDiscountAmountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnDiscountAmountChange
  nameWithType: QuoteAlternativeRow.OnDiscountAmountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnDiscountAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DiscountAmount is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnDiscountAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnDiscountAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUserValueOverrideChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUserValueOverrideChange
  id: OnUserValueOverrideChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnUserValueOverrideChange
  nameWithType: QuoteAlternativeRow.OnUserValueOverrideChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUserValueOverrideChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UserValueOverride is changing.\n"
  syntax:
    content: public event OnFieldChange<ValueOverride> OnUserValueOverrideChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.ValueOverride}
    content.vb: Public Event OnUserValueOverrideChange As OnFieldChange(Of ValueOverride)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATInfoChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATInfoChange
  id: OnVATInfoChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnVATInfoChange
  nameWithType: QuoteAlternativeRow.OnVATInfoChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATInfoChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when VATInfo is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnVATInfoChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnVATInfoChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATChange
  id: OnVATChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnVATChange
  nameWithType: QuoteAlternativeRow.OnVATChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnVATChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when VAT is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnVATChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnVATChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningPercentChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningPercentChange
  id: OnEarningPercentChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnEarningPercentChange
  nameWithType: QuoteAlternativeRow.OnEarningPercentChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningPercentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when EarningPercent is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnEarningPercentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnEarningPercentChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningAmountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningAmountChange
  id: OnEarningAmountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnEarningAmountChange
  nameWithType: QuoteAlternativeRow.OnEarningAmountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnEarningAmountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when EarningAmount is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnEarningAmountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnEarningAmountChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnTotalPriceChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnTotalPriceChange
  id: OnTotalPriceChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnTotalPriceChange
  nameWithType: QuoteAlternativeRow.OnTotalPriceChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnTotalPriceChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TotalPrice is changing.\n"
  syntax:
    content: public event OnFieldChange<double> OnTotalPriceChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
    content.vb: Public Event OnTotalPriceChange As OnFieldChange(Of Double)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField1Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField1Change
  id: OnExtraField1Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnExtraField1Change
  nameWithType: QuoteAlternativeRow.OnExtraField1Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField1Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ExtraField1 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnExtraField1Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnExtraField1Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField2Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField2Change
  id: OnExtraField2Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnExtraField2Change
  nameWithType: QuoteAlternativeRow.OnExtraField2Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField2Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ExtraField2 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnExtraField2Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnExtraField2Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField3Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField3Change
  id: OnExtraField3Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnExtraField3Change
  nameWithType: QuoteAlternativeRow.OnExtraField3Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField3Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ExtraField3 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnExtraField3Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnExtraField3Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField4Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField4Change
  id: OnExtraField4Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnExtraField4Change
  nameWithType: QuoteAlternativeRow.OnExtraField4Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField4Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ExtraField4 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnExtraField4Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnExtraField4Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField5Change
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField5Change
  id: OnExtraField5Change
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnExtraField5Change
  nameWithType: QuoteAlternativeRow.OnExtraField5Change
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnExtraField5Change
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ExtraField5 is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnExtraField5Change
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnExtraField5Change As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredChange
  id: OnRegisteredChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnRegisteredChange
  nameWithType: QuoteAlternativeRow.OnRegisteredChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Registered is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnRegisteredChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnRegisteredChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredAssociateIdChange
  id: OnRegisteredAssociateIdChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnRegisteredAssociateIdChange
  nameWithType: QuoteAlternativeRow.OnRegisteredAssociateIdChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnRegisteredAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RegisteredAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRegisteredAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRegisteredAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedChange
  id: OnUpdatedChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnUpdatedChange
  nameWithType: QuoteAlternativeRow.OnUpdatedChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Updated is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnUpdatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnUpdatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedAssociateIdChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedAssociateIdChange
  id: OnUpdatedAssociateIdChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnUpdatedAssociateIdChange
  nameWithType: QuoteAlternativeRow.OnUpdatedAssociateIdChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedAssociateIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedAssociateId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnUpdatedAssociateIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnUpdatedAssociateIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedCountChange
  commentId: E:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedCountChange
  id: OnUpdatedCountChange
  parent: SuperOffice.CRM.Rows.QuoteAlternativeRow
  langs:
  - csharp
  - vb
  name: OnUpdatedCountChange
  nameWithType: QuoteAlternativeRow.OnUpdatedCountChange
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnUpdatedCountChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when UpdatedCount is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnUpdatedCountChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnUpdatedCountChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.Data.ISoItem
  commentId: T:SuperOffice.Data.ISoItem
  parent: SuperOffice.Data
  isExternal: true
  name: ISoItem
  nameWithType: ISoItem
  fullName: SuperOffice.Data.ISoItem
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._onValueChange
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._onValueChange
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _onValueChange
  nameWithType: TableRowBase._onValueChange
  fullName: SuperOffice.CRM.Rows.TableRowBase._onValueChange
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults()
  nameWithType: TableRowBase.SetDefaults()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DashboardTileDefinitionRow, String)
  nameWithType: TableRowBase.SetDefaults(DashboardTileDefinitionRow, String)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Save
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Save
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Save()
  nameWithType: TableRowBase.Save()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Save()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Delete
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Delete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Delete()
  nameWithType: TableRowBase.Delete()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Delete()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: SuperOffice.Data.INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSave(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSave
    nameWithType: TableRowBase.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSave
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaved(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: INestedPersist.OnSaved
    nameWithType: TableRowBase.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSaved
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdate()
  nameWithType: TableRowBase.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdate()
  nameWithType: TableRowBase.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ForeignKeyHelper
  nameWithType: TableRowBase.ForeignKeyHelper
  fullName: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnValueChanged
  nameWithType: TableRowBase.OnValueChanged
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.Origin
  commentId: F:SuperOffice.Data.SQL.SqlCommand.Origin
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: Origin
  nameWithType: SqlCommand.Origin
  fullName: SuperOffice.Data.SQL.SqlCommand.Origin
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<QuoteAlternativeRow, To>()
  nameWithType: EnumUtil.MapEnums<QuoteAlternativeRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.QuoteAlternativeRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of QuoteAlternativeRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.QuoteAlternativeRow, To)()
  name.vb: MapEnums(Of QuoteAlternativeRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<QuoteAlternativeRow, To>
    nameWithType: EnumUtil.MapEnums<QuoteAlternativeRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.QuoteAlternativeRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of QuoteAlternativeRow, To)
    nameWithType: EnumUtil.MapEnums(Of QuoteAlternativeRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.QuoteAlternativeRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
  commentId: M:SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  parent: SuperOffice.CRM.Sale.QuoteExtensions
  definition: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  name: CloneQuoteAlternativeRow()
  nameWithType: QuoteExtensions.CloneQuoteAlternativeRow()
  fullName: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow()
  spec.csharp:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
    name: CloneQuoteAlternativeRow
    nameWithType: QuoteExtensions.CloneQuoteAlternativeRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
    name: CloneQuoteAlternativeRow
    nameWithType: QuoteExtensions.CloneQuoteAlternativeRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
  commentId: M:SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  parent: SuperOffice.CRM.Sale.QuoteExtensions
  definition: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  name: GetQuoteAlternativeInfo()
  nameWithType: QuoteExtensions.GetQuoteAlternativeInfo()
  fullName: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
    name: GetQuoteAlternativeInfo
    nameWithType: QuoteExtensions.GetQuoteAlternativeInfo
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
    name: GetQuoteAlternativeInfo
    nameWithType: QuoteExtensions.GetQuoteAlternativeInfo
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<QuoteAlternativeRow, To>()
  nameWithType: Converters.MapEnums<QuoteAlternativeRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.QuoteAlternativeRow, To>()
  nameWithType.vb: Converters.MapEnums(Of QuoteAlternativeRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.QuoteAlternativeRow, To)()
  name.vb: MapEnums(Of QuoteAlternativeRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<QuoteAlternativeRow, To>
    nameWithType: Converters.MapEnums<QuoteAlternativeRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.QuoteAlternativeRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of QuoteAlternativeRow, To)
    nameWithType: Converters.MapEnums(Of QuoteAlternativeRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.QuoteAlternativeRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  commentId: M:SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  isExternal: true
  name: CloneQuoteAlternativeRow(QuoteAlternativeRow)
  nameWithType: QuoteExtensions.CloneQuoteAlternativeRow(QuoteAlternativeRow)
  fullName: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  spec.csharp:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
    name: CloneQuoteAlternativeRow
    nameWithType: QuoteExtensions.CloneQuoteAlternativeRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow)
    name: CloneQuoteAlternativeRow
    nameWithType: QuoteExtensions.CloneQuoteAlternativeRow
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.CloneQuoteAlternativeRow
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.QuoteExtensions
  commentId: T:SuperOffice.CRM.Sale.QuoteExtensions
  parent: SuperOffice.CRM.Sale
  isExternal: true
  name: QuoteExtensions
  nameWithType: QuoteExtensions
  fullName: SuperOffice.CRM.Sale.QuoteExtensions
- uid: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  commentId: M:SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  isExternal: true
  name: GetQuoteAlternativeInfo(QuoteAlternativeRow)
  nameWithType: QuoteExtensions.GetQuoteAlternativeInfo(QuoteAlternativeRow)
  fullName: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
  spec.csharp:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
    name: GetQuoteAlternativeInfo
    nameWithType: QuoteExtensions.GetQuoteAlternativeInfo
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo(SuperOffice.CRM.Rows.QuoteAlternativeRow)
    name: GetQuoteAlternativeInfo
    nameWithType: QuoteExtensions.GetQuoteAlternativeInfo
    fullName: SuperOffice.CRM.Sale.QuoteExtensions.GetQuoteAlternativeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.CRM.Sale
  commentId: N:SuperOffice.CRM.Sale
  isExternal: true
  name: SuperOffice.CRM.Sale
  nameWithType: SuperOffice.CRM.Sale
  fullName: SuperOffice.CRM.Sale
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.QuoteStatus
  commentId: T:SuperOffice.Data.QuoteStatus
  parent: SuperOffice.Data
  isExternal: true
  name: QuoteStatus
  nameWithType: QuoteStatus
  fullName: SuperOffice.Data.QuoteStatus
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SuperOffice.Data.ValueOverride
  commentId: T:SuperOffice.Data.ValueOverride
  parent: SuperOffice.Data
  isExternal: true
  name: ValueOverride
  nameWithType: ValueOverride
  fullName: SuperOffice.Data.ValueOverride
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: QuoteAlternativeRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InternalSetValue
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: QuoteAlternativeRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: QuoteAlternativeRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.#ctor
  isExternal: true
  name: QuoteAlternativeRow
  nameWithType: QuoteAlternativeRow.QuoteAlternativeRow
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRow
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteAlternativeRow.QuoteAlternativeRowIdxBase
  nameWithType: QuoteAlternativeRow.QuoteAlternativeRowIdxBase
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeRowIdxBase
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: QuoteAlternativeRow.CreateNew
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.CreateNew
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
  commentId: T:SuperOffice.CRM.Rows.QuoteAlternativeRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteAlternativeRow
  nameWithType: QuoteAlternativeRow
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: QuoteAlternativeRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
  commentId: T:SuperOffice.CRM.Data.QuoteAlternativeTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: QuoteAlternativeTableInfo
  nameWithType: QuoteAlternativeTableInfo
  fullName: SuperOffice.CRM.Data.QuoteAlternativeTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: QuoteAlternativeRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteAlternativeRow.CustomSearch
  nameWithType: QuoteAlternativeRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.CustomSearch
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId
  isExternal: true
  name: GetFromIdxQuoteAlternativeId
  nameWithType: QuoteAlternativeRow.GetFromIdxQuoteAlternativeId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.GetFromIdxQuoteAlternativeId
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DefaulterStrategy)
  nameWithType: TableRowBase.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults
  isExternal: true
  name: SetDefaults
  nameWithType: QuoteAlternativeRow.SetDefaults
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetDefaults
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString
  isExternal: true
  name: ToString
  nameWithType: QuoteAlternativeRow.ToString
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: QuoteAlternativeRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset
  isExternal: true
  name: Reset
  nameWithType: QuoteAlternativeRow.Reset
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: QuoteAlternativeRow.OnLoad
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: QuoteAlternativeRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSave(BatchSave)
  nameWithType: TableRowBase.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave
  isExternal: true
  name: OnSave
  nameWithType: QuoteAlternativeRow.OnSave
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSave
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaved(Boolean)
  nameWithType: TableRowBase.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved
  isExternal: true
  name: OnSaved
  nameWithType: QuoteAlternativeRow.OnSaved
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.OnSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate
  isExternal: true
  name: Validate
  nameWithType: QuoteAlternativeRow.Validate
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Item
  isExternal: true
  name: Item
  nameWithType: QuoteAlternativeRow.Item
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: QuoteAlternativeRow.TableInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.TableInfo
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo
  isExternal: true
  name: QuoteAlternativeTableInfo
  nameWithType: QuoteAlternativeRow.QuoteAlternativeTableInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeTableInfo
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: QuoteAlternativeRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: QuoteAlternativeRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: QuoteAlternativeRow.IsNew
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: QuoteAlternativeRow.IsDirty
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: QuoteAlternativeRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId
  isExternal: true
  name: QuoteAlternativeId
  nameWithType: QuoteAlternativeRow.QuoteAlternativeId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteAlternativeId
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey
  isExternal: true
  name: ERPQuoteAlternativeKey
  nameWithType: QuoteAlternativeRow.ERPQuoteAlternativeKey
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPQuoteAlternativeKey
- uid: SuperOffice.Exceptions.SoSentryException
  commentId: T:SuperOffice.Exceptions.SoSentryException
  isExternal: true
  name: SoSentryException
  nameWithType: SoSentryException
  fullName: SuperOffice.Exceptions.SoSentryException
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId
  isExternal: true
  name: QuoteVersionId
  nameWithType: QuoteAlternativeRow.QuoteVersionId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.QuoteVersionId
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Name*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Name
  isExternal: true
  name: Name
  nameWithType: QuoteAlternativeRow.Name
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Name
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Description*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Description
  isExternal: true
  name: Description
  nameWithType: QuoteAlternativeRow.Description
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Description
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Status*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Status
  isExternal: true
  name: Status
  nameWithType: QuoteAlternativeRow.Status
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Status
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason
  isExternal: true
  name: Reason
  nameWithType: QuoteAlternativeRow.Reason
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Reason
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent
  isExternal: true
  name: ERPDiscountPercent
  nameWithType: QuoteAlternativeRow.ERPDiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountPercent
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount
  isExternal: true
  name: ERPDiscountAmount
  nameWithType: QuoteAlternativeRow.ERPDiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ERPDiscountAmount
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent
  isExternal: true
  name: DiscountPercent
  nameWithType: QuoteAlternativeRow.DiscountPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountPercent
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount
  isExternal: true
  name: DiscountAmount
  nameWithType: QuoteAlternativeRow.DiscountAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.DiscountAmount
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride
  isExternal: true
  name: UserValueOverride
  nameWithType: QuoteAlternativeRow.UserValueOverride
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.UserValueOverride
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo
  isExternal: true
  name: VATInfo
  nameWithType: QuoteAlternativeRow.VATInfo
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.VATInfo
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT
  isExternal: true
  name: VAT
  nameWithType: QuoteAlternativeRow.VAT
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.VAT
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent
  isExternal: true
  name: EarningPercent
  nameWithType: QuoteAlternativeRow.EarningPercent
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningPercent
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount
  isExternal: true
  name: EarningAmount
  nameWithType: QuoteAlternativeRow.EarningAmount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.EarningAmount
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice
  isExternal: true
  name: TotalPrice
  nameWithType: QuoteAlternativeRow.TotalPrice
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.TotalPrice
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1
  isExternal: true
  name: ExtraField1
  nameWithType: QuoteAlternativeRow.ExtraField1
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField1
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2
  isExternal: true
  name: ExtraField2
  nameWithType: QuoteAlternativeRow.ExtraField2
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField2
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3
  isExternal: true
  name: ExtraField3
  nameWithType: QuoteAlternativeRow.ExtraField3
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField3
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4
  isExternal: true
  name: ExtraField4
  nameWithType: QuoteAlternativeRow.ExtraField4
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField4
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5
  isExternal: true
  name: ExtraField5
  nameWithType: QuoteAlternativeRow.ExtraField5
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.ExtraField5
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered
  isExternal: true
  name: Registered
  nameWithType: QuoteAlternativeRow.Registered
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Registered
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId
  isExternal: true
  name: RegisteredAssociateId
  nameWithType: QuoteAlternativeRow.RegisteredAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.RegisteredAssociateId
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated
  isExternal: true
  name: Updated
  nameWithType: QuoteAlternativeRow.Updated
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.Updated
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId
  isExternal: true
  name: UpdatedAssociateId
  nameWithType: QuoteAlternativeRow.UpdatedAssociateId
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedAssociateId
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount*
  commentId: Overload:SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount
  isExternal: true
  name: UpdatedCount
  nameWithType: QuoteAlternativeRow.UpdatedCount
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow.UpdatedCount
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.String}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.String}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<String>
  nameWithType: OnFieldChange<String>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.String>
  nameWithType.vb: OnFieldChange(Of String)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.String)
  name.vb: OnFieldChange(Of String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange`1
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange`1
  isExternal: true
  name: OnFieldChange<TValue>
  nameWithType: OnFieldChange<TValue>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<TValue>
  nameWithType.vb: OnFieldChange(Of TValue)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of TValue)
  name.vb: OnFieldChange(Of TValue)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int32>
  nameWithType: OnFieldChange<Int32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int32>
  nameWithType.vb: OnFieldChange(Of Int32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int32)
  name.vb: OnFieldChange(Of Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.QuoteStatus}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.QuoteStatus}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<QuoteStatus>
  nameWithType: OnFieldChange<QuoteStatus>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.QuoteStatus>
  nameWithType.vb: OnFieldChange(Of QuoteStatus)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.QuoteStatus)
  name.vb: OnFieldChange(Of QuoteStatus)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.QuoteStatus
    name: QuoteStatus
    nameWithType: QuoteStatus
    fullName: SuperOffice.Data.QuoteStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.QuoteStatus
    name: QuoteStatus
    nameWithType: QuoteStatus
    fullName: SuperOffice.Data.QuoteStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Double}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Double}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Double>
  nameWithType: OnFieldChange<Double>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Double>
  nameWithType.vb: OnFieldChange(Of Double)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Double)
  name.vb: OnFieldChange(Of Double)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.ValueOverride}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.ValueOverride}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<ValueOverride>
  nameWithType: OnFieldChange<ValueOverride>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.ValueOverride>
  nameWithType.vb: OnFieldChange(Of ValueOverride)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.ValueOverride)
  name.vb: OnFieldChange(Of ValueOverride)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.ValueOverride
    name: ValueOverride
    nameWithType: ValueOverride
    fullName: SuperOffice.Data.ValueOverride
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.ValueOverride
    name: ValueOverride
    nameWithType: ValueOverride
    fullName: SuperOffice.Data.ValueOverride
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<DateTime>
  nameWithType: OnFieldChange<DateTime>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.DateTime>
  nameWithType.vb: OnFieldChange(Of DateTime)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.DateTime)
  name.vb: OnFieldChange(Of DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int16>
  nameWithType: OnFieldChange<Int16>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int16>
  nameWithType.vb: OnFieldChange(Of Int16)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int16)
  name.vb: OnFieldChange(Of Int16)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
