### YamlMime:ManagedReference
items:
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher
  commentId: T:SuperOffice.TimeZone.SoTimeConverterDataFetcher
  id: SoTimeConverterDataFetcher
  parent: SuperOffice.TimeZone
  children:
  - SuperOffice.TimeZone.SoTimeConverterDataFetcher.#ctor
  - SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  - SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SoTimeConverterDataFetcher
  nameWithType: SoTimeConverterDataFetcher
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  summary: "\nAbstarct implementation of <xref href=\"SuperOffice.TimeZone.ITimeConverterDataFetcher\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public abstract class SoTimeConverterDataFetcher : Object, ITimeConverterDataFetcher'
    content.vb: >-
      Public MustInherit Class SoTimeConverterDataFetcher
          Inherits Object
          Implements ITimeConverterDataFetcher
  inheritance:
  - System.Object
  implements:
  - SuperOffice.TimeZone.ITimeConverterDataFetcher
  extensionMethods:
  - SuperOffice.TimeZone.SoTimeConverterDataFetcher.EnumUtil.MapEnums``2
  - SuperOffice.TimeZone.SoTimeConverterDataFetcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  id: GetTimeZoneDataAsync(System.Threading.CancellationToken)
  parent: SuperOffice.TimeZone.SoTimeConverterDataFetcher
  langs:
  - csharp
  - vb
  name: GetTimeZoneDataAsync(CancellationToken)
  nameWithType: SoTimeConverterDataFetcher.GetTimeZoneDataAsync(CancellationToken)
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  syntax:
    content: public virtual Task<TimeZoneData[]> GetTimeZoneDataAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.TimeZoneData[]}
    content.vb: Public Overridable Function GetTimeZoneDataAsync(cancellationToken As CancellationToken) As Task(Of TimeZoneData())
  overload: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync*
  implements:
  - SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  id: GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  parent: SuperOffice.TimeZone.SoTimeConverterDataFetcher
  langs:
  - csharp
  - vb
  name: GetBaseTimeZoneIdAsync(CancellationToken)
  nameWithType: SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync(CancellationToken)
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  syntax:
    content: public virtual Task<int> GetBaseTimeZoneIdAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Overridable Function GetBaseTimeZoneIdAsync(cancellationToken As CancellationToken) As Task(Of Integer)
  overload: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync*
  implements:
  - SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.#ctor
  commentId: M:SuperOffice.TimeZone.SoTimeConverterDataFetcher.#ctor
  id: '#ctor'
  parent: SuperOffice.TimeZone.SoTimeConverterDataFetcher
  langs:
  - csharp
  - vb
  name: SoTimeConverterDataFetcher()
  nameWithType: SoTimeConverterDataFetcher.SoTimeConverterDataFetcher()
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher.SoTimeConverterDataFetcher()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  syntax:
    content: protected SoTimeConverterDataFetcher()
    content.vb: Protected Sub New
  overload: SuperOffice.TimeZone.SoTimeConverterDataFetcher.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
references:
- uid: SuperOffice.TimeZone
  commentId: N:SuperOffice.TimeZone
  isExternal: true
  name: SuperOffice.TimeZone
  nameWithType: SuperOffice.TimeZone
  fullName: SuperOffice.TimeZone
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher
  commentId: T:SuperOffice.TimeZone.ITimeConverterDataFetcher
  parent: SuperOffice.TimeZone
  isExternal: true
  name: ITimeConverterDataFetcher
  nameWithType: ITimeConverterDataFetcher
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoTimeConverterDataFetcher, To>()
  nameWithType: EnumUtil.MapEnums<SoTimeConverterDataFetcher, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.TimeZone.SoTimeConverterDataFetcher, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoTimeConverterDataFetcher, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.TimeZone.SoTimeConverterDataFetcher, To)()
  name.vb: MapEnums(Of SoTimeConverterDataFetcher, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoTimeConverterDataFetcher, To>
    nameWithType: EnumUtil.MapEnums<SoTimeConverterDataFetcher, To>
    fullName: EnumUtil.MapEnums<SuperOffice.TimeZone.SoTimeConverterDataFetcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoTimeConverterDataFetcher, To)
    nameWithType: EnumUtil.MapEnums(Of SoTimeConverterDataFetcher, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.TimeZone.SoTimeConverterDataFetcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoTimeConverterDataFetcher, To>()
  nameWithType: Converters.MapEnums<SoTimeConverterDataFetcher, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.TimeZone.SoTimeConverterDataFetcher, To>()
  nameWithType.vb: Converters.MapEnums(Of SoTimeConverterDataFetcher, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.TimeZone.SoTimeConverterDataFetcher, To)()
  name.vb: MapEnums(Of SoTimeConverterDataFetcher, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoTimeConverterDataFetcher, To>
    nameWithType: Converters.MapEnums<SoTimeConverterDataFetcher, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.TimeZone.SoTimeConverterDataFetcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoTimeConverterDataFetcher, To)
    nameWithType: Converters.MapEnums(Of SoTimeConverterDataFetcher, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.TimeZone.SoTimeConverterDataFetcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync*
  commentId: Overload:SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync
  isExternal: true
  name: GetTimeZoneDataAsync
  nameWithType: SoTimeConverterDataFetcher.GetTimeZoneDataAsync
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetTimeZoneDataAsync
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  parent: SuperOffice.TimeZone.ITimeConverterDataFetcher
  isExternal: true
  name: GetTimeZoneDataAsync(CancellationToken)
  nameWithType: ITimeConverterDataFetcher.GetTimeZoneDataAsync(CancellationToken)
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
    name: GetTimeZoneDataAsync
    nameWithType: ITimeConverterDataFetcher.GetTimeZoneDataAsync
    fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync(System.Threading.CancellationToken)
    name: GetTimeZoneDataAsync
    nameWithType: ITimeConverterDataFetcher.GetTimeZoneDataAsync
    fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneDataAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.TimeZoneData[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.TimeZoneData[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TimeZoneData[]>
  nameWithType: Task<TimeZoneData[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.TimeZoneData[]>
  nameWithType.vb: Task(Of TimeZoneData())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.TimeZoneData())
  name.vb: Task(Of TimeZoneData())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    nameWithType: TimeZoneData
    fullName: SuperOffice.CRM.TimeZoneData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    nameWithType: TimeZoneData
    fullName: SuperOffice.CRM.TimeZoneData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync*
  commentId: Overload:SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync
  isExternal: true
  name: GetBaseTimeZoneIdAsync
  nameWithType: SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher.GetBaseTimeZoneIdAsync
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  parent: SuperOffice.TimeZone.ITimeConverterDataFetcher
  isExternal: true
  name: GetBaseTimeZoneIdAsync(CancellationToken)
  nameWithType: ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(CancellationToken)
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
    name: GetBaseTimeZoneIdAsync
    nameWithType: ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync
    fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync(System.Threading.CancellationToken)
    name: GetBaseTimeZoneIdAsync
    nameWithType: ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync
    fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.TimeZone.SoTimeConverterDataFetcher.#ctor*
  commentId: Overload:SuperOffice.TimeZone.SoTimeConverterDataFetcher.#ctor
  isExternal: true
  name: SoTimeConverterDataFetcher
  nameWithType: SoTimeConverterDataFetcher.SoTimeConverterDataFetcher
  fullName: SuperOffice.TimeZone.SoTimeConverterDataFetcher.SoTimeConverterDataFetcher
