### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.ConflictDetector
  commentId: T:SuperOffice.CRM.Entities.ConflictDetector
  id: ConflictDetector
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  - SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  - SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  - SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  - SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,SuperOffice.CRM.Services.RecurrenceDate[],System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ConflictDetector
  nameWithType: ConflictDetector
  fullName: SuperOffice.CRM.Entities.ConflictDetector
  type: Class
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Utility class for detecting conflicts.
  example: []
  syntax:
    content: public static class ConflictDetector
    content.vb: Public Module ConflictDetector
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,SuperOffice.CRM.Services.RecurrenceDate[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,SuperOffice.CRM.Services.RecurrenceDate[],System.Threading.CancellationToken)
  id: UpdateConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,SuperOffice.CRM.Services.RecurrenceDate[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConflictDetector
  langs:
  - csharp
  - vb
  name: UpdateConflictsAsync(int, int, int[], TimeSpan, TimeSpan, RecurrenceDate[], CancellationToken)
  nameWithType: ConflictDetector.UpdateConflictsAsync(int, int, int[], TimeSpan, TimeSpan, RecurrenceDate[], CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync(int, int, int[], System.TimeSpan, System.TimeSpan, SuperOffice.CRM.Services.RecurrenceDate[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Update conflicts on an array of <xref href="SuperOffice.CRM.Services.RecurrenceDate" data-throw-if-not-resolved="false"></xref>s ojects.
  remarks: There should normally only be one provided associate.
  example: []
  syntax:
    content: public static Task UpdateConflictsAsync(int excludedAppointmentId, int excludedRecurrenceRuleId, int[] associates, TimeSpan startTime, TimeSpan endTime, RecurrenceDate[] recurrenceDates, CancellationToken cancellationToken = default)
    parameters:
    - id: excludedAppointmentId
      type: System.Int32
      description: AppointmentId not to include in list of conflicting appointments.  Appointment with this id as primary key or mother id will be excluded in the conflict check.
    - id: excludedRecurrenceRuleId
      type: System.Int32
      description: Appointment records with this id as recurrence rule id will be excluded in the conflict check.
    - id: associates
      type: System.Int32[]
      description: Associates to find conflicts for.  This should normally only be of length = 1.
    - id: startTime
      type: System.TimeSpan
      description: Start time (i.e. time of day) for the appointment.
    - id: endTime
      type: System.TimeSpan
      description: End time (i.e. time of day) for the appointment.
    - id: recurrenceDates
      type: SuperOffice.CRM.Services.RecurrenceDate[]
      description: Objects to update conflicts on.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function UpdateConflictsAsync(excludedAppointmentId As Integer, excludedRecurrenceRuleId As Integer, associates As Integer(), startTime As TimeSpan, endTime As TimeSpan, recurrenceDates As RecurrenceDate(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync*
  nameWithType.vb: ConflictDetector.UpdateConflictsAsync(Integer, Integer, Integer(), TimeSpan, TimeSpan, RecurrenceDate(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync(Integer, Integer, Integer(), System.TimeSpan, System.TimeSpan, SuperOffice.CRM.Services.RecurrenceDate(), System.Threading.CancellationToken)
  name.vb: UpdateConflictsAsync(Integer, Integer, Integer(), TimeSpan, TimeSpan, RecurrenceDate(), CancellationToken)
- uid: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  id: GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  parent: SuperOffice.CRM.Entities.ConflictDetector
  langs:
  - csharp
  - vb
  name: GetConflictsAsync(int, int, int[], TimeSpan, TimeSpan, CancellationToken, params DateTime[])
  nameWithType: ConflictDetector.GetConflictsAsync(int, int, int[], TimeSpan, TimeSpan, CancellationToken, params DateTime[])
  fullName: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(int, int, int[], System.TimeSpan, System.TimeSpan, System.Threading.CancellationToken, params System.DateTime[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get conflicts.
  remarks: Conflicts are normally calculated for only one associate or only one date.
  example: []
  syntax:
    content: public static Task<List<int>[,]> GetConflictsAsync(int excludedAppointmentId, int excludedRecurrenceRuleId, int[] associates, TimeSpan startTime, TimeSpan endTime, CancellationToken cancellationToken = default, params DateTime[] dates)
    parameters:
    - id: excludedAppointmentId
      type: System.Int32
      description: AppointmentId not to include in list of conflicting appointments.  Appointment with this id as primary key or mother id will be excluded in the conflict check.
    - id: excludedRecurrenceRuleId
      type: System.Int32
      description: Appointment records with this id as recurrence rule id will be excluded in the conflict check.
    - id: associates
      type: System.Int32[]
      description: Associates to find conflicts for.
    - id: startTime
      type: System.TimeSpan
      description: Start time (i.e. time of day) for the appointment.
    - id: endTime
      type: System.TimeSpan
      description: End time (i.e. time of day) for the appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: dates
      type: System.DateTime[]
      description: The dates the appointment occurs.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int32}[0:,0:]}
      description: >-
        Two dimensional array of list of conflicting appointment ids.  The first dimension 

        contains dates and the second contains associates.  Hence; [date, associate] yields 

        the list of conflicting appointment ids.
    content.vb: Public Shared Function GetConflictsAsync(excludedAppointmentId As Integer, excludedRecurrenceRuleId As Integer, associates As Integer(), startTime As TimeSpan, endTime As TimeSpan, cancellationToken As CancellationToken = Nothing, ParamArray dates As Date()) As Task(Of List(Of Integer)(,))
  overload: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync*
  nameWithType.vb: ConflictDetector.GetConflictsAsync(Integer, Integer, Integer(), TimeSpan, TimeSpan, CancellationToken, ParamArray Date())
  fullName.vb: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(Integer, Integer, Integer(), System.TimeSpan, System.TimeSpan, System.Threading.CancellationToken, ParamArray Date())
  name.vb: GetConflictsAsync(Integer, Integer, Integer(), TimeSpan, TimeSpan, CancellationToken, ParamArray Date())
- uid: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  id: GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.TimeSpan,System.TimeSpan,System.Threading.CancellationToken,System.DateTime[])
  parent: SuperOffice.CRM.Entities.ConflictDetector
  langs:
  - csharp
  - vb
  name: GetConflictTimesAsync(int, int, int[], TimeSpan, TimeSpan, CancellationToken, params DateTime[])
  nameWithType: ConflictDetector.GetConflictTimesAsync(int, int, int[], TimeSpan, TimeSpan, CancellationToken, params DateTime[])
  fullName: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(int, int, int[], System.TimeSpan, System.TimeSpan, System.Threading.CancellationToken, params System.DateTime[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get conflicts.
  remarks: Conflicts are normally calculated for only one associate or only one date.
  example: []
  syntax:
    content: public static Task<List<ConflictDetector.ConflictTime>[,]> GetConflictTimesAsync(int excludedAppointmentId, int excludedRecurrenceRuleId, int[] associates, TimeSpan startTime, TimeSpan endTime, CancellationToken cancellationToken = default, params DateTime[] dates)
    parameters:
    - id: excludedAppointmentId
      type: System.Int32
      description: AppointmentId not to include in list of conflicting appointments.  Appointment with this id as primary key or mother id will be excluded in the conflict check.
    - id: excludedRecurrenceRuleId
      type: System.Int32
      description: Appointment records with this id as recurrence rule id will be excluded in the conflict check.
    - id: associates
      type: System.Int32[]
      description: Associates to find conflicts for.
    - id: startTime
      type: System.TimeSpan
      description: Start time (i.e. time of day) for the appointment.
    - id: endTime
      type: System.TimeSpan
      description: End time (i.e. time of day) for the appointment.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: dates
      type: System.DateTime[]
      description: The dates the appointment occurs.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Entities.ConflictDetector.ConflictTime}[0:,0:]}
      description: >-
        Two dimensional array of list of conflicting appointment ids.  The first dimension 

        contains dates and the second contains associates.  Hence; [date, associate] yields 

        the list of conflicting appointment ids.
    content.vb: Public Shared Function GetConflictTimesAsync(excludedAppointmentId As Integer, excludedRecurrenceRuleId As Integer, associates As Integer(), startTime As TimeSpan, endTime As TimeSpan, cancellationToken As CancellationToken = Nothing, ParamArray dates As Date()) As Task(Of List(Of ConflictDetector.ConflictTime)(,))
  overload: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync*
  nameWithType.vb: ConflictDetector.GetConflictTimesAsync(Integer, Integer, Integer(), TimeSpan, TimeSpan, CancellationToken, ParamArray Date())
  fullName.vb: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(Integer, Integer, Integer(), System.TimeSpan, System.TimeSpan, System.Threading.CancellationToken, ParamArray Date())
  name.vb: GetConflictTimesAsync(Integer, Integer, Integer(), TimeSpan, TimeSpan, CancellationToken, ParamArray Date())
- uid: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  id: GetConflictsAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  parent: SuperOffice.CRM.Entities.ConflictDetector
  langs:
  - csharp
  - vb
  name: GetConflictsAsync(int, int, int[], CancellationToken, params ConflictTime[])
  nameWithType: ConflictDetector.GetConflictsAsync(int, int, int[], CancellationToken, params ConflictDetector.ConflictTime[])
  fullName: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(int, int, int[], System.Threading.CancellationToken, params SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  summary: Get Conflicts.
  remarks: >-
    Conflicts are normally calculated for only one associate or only one date. If the number of dates or

    number of associates is 0, a correspondingly empty response is immediately returned.
  example: []
  syntax:
    content: public static Task<List<int>[,]> GetConflictsAsync(int excludedAppointmentId, int excludedRecurrenceRuleId, int[] associates, CancellationToken cancellationToken = default, params ConflictDetector.ConflictTime[] conflictTimes)
    parameters:
    - id: excludedAppointmentId
      type: System.Int32
      description: AppointmentId not to include in list of conflicting appointments.  Appointment with this id as primary key or mother id will be excluded in the conflict check.
    - id: excludedRecurrenceRuleId
      type: System.Int32
      description: Appointment records with this id as recurrence rule id will be excluded in the conflict check.
    - id: associates
      type: System.Int32[]
      description: Associates to find conflicts for.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: conflictTimes
      type: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[]
      description: Appointment times to find conflicts for.
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int32}[0:,0:]}
      description: >-
        Two dimensional array of list of conflicting appointment ids.  The first dimension 

        contains dates and the second contains associates.  Hence; [date, associate] yields 

        the list of conflicting appointment ids.
    content.vb: Public Shared Function GetConflictsAsync(excludedAppointmentId As Integer, excludedRecurrenceRuleId As Integer, associates As Integer(), cancellationToken As CancellationToken = Nothing, ParamArray conflictTimes As ConflictDetector.ConflictTime()) As Task(Of List(Of Integer)(,))
  overload: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync*
  nameWithType.vb: ConflictDetector.GetConflictsAsync(Integer, Integer, Integer(), CancellationToken, ParamArray ConflictDetector.ConflictTime())
  fullName.vb: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync(Integer, Integer, Integer(), System.Threading.CancellationToken, ParamArray SuperOffice.CRM.Entities.ConflictDetector.ConflictTime())
  name.vb: GetConflictsAsync(Integer, Integer, Integer(), CancellationToken, ParamArray ConflictTime())
- uid: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  commentId: M:SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  id: GetConflictTimesAsync(System.Int32,System.Int32,System.Int32[],System.Threading.CancellationToken,SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  parent: SuperOffice.CRM.Entities.ConflictDetector
  langs:
  - csharp
  - vb
  name: GetConflictTimesAsync(int, int, int[], CancellationToken, params ConflictTime[])
  nameWithType: ConflictDetector.GetConflictTimesAsync(int, int, int[], CancellationToken, params ConflictDetector.ConflictTime[])
  fullName: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(int, int, int[], System.Threading.CancellationToken, params SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<List<ConflictDetector.ConflictTime>[,]> GetConflictTimesAsync(int excludedAppointmentId, int excludedRecurrenceRuleId, int[] associates, CancellationToken cancellationToken = default, params ConflictDetector.ConflictTime[] conflictTimes)
    parameters:
    - id: excludedAppointmentId
      type: System.Int32
    - id: excludedRecurrenceRuleId
      type: System.Int32
    - id: associates
      type: System.Int32[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: conflictTimes
      type: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[]
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Entities.ConflictDetector.ConflictTime}[0:,0:]}
    content.vb: Public Shared Function GetConflictTimesAsync(excludedAppointmentId As Integer, excludedRecurrenceRuleId As Integer, associates As Integer(), cancellationToken As CancellationToken = Nothing, ParamArray conflictTimes As ConflictDetector.ConflictTime()) As Task(Of List(Of ConflictDetector.ConflictTime)(,))
  overload: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync*
  nameWithType.vb: ConflictDetector.GetConflictTimesAsync(Integer, Integer, Integer(), CancellationToken, ParamArray ConflictDetector.ConflictTime())
  fullName.vb: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync(Integer, Integer, Integer(), System.Threading.CancellationToken, ParamArray SuperOffice.CRM.Entities.ConflictDetector.ConflictTime())
  name.vb: GetConflictTimesAsync(Integer, Integer, Integer(), CancellationToken, ParamArray ConflictTime())
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.RecurrenceDate
  commentId: T:SuperOffice.CRM.Services.RecurrenceDate
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceDate.html
  name: RecurrenceDate
  nameWithType: RecurrenceDate
  fullName: SuperOffice.CRM.Services.RecurrenceDate
- uid: SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.ConflictDetector.html#SuperOffice_CRM_Entities_ConflictDetector_UpdateConflictsAsync_System_Int32_System_Int32_System_Int32___System_TimeSpan_System_TimeSpan_SuperOffice_CRM_Services_RecurrenceDate___System_Threading_CancellationToken_
  name: UpdateConflictsAsync
  nameWithType: ConflictDetector.UpdateConflictsAsync
  fullName: SuperOffice.CRM.Entities.ConflictDetector.UpdateConflictsAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: SuperOffice.CRM.Services.RecurrenceDate[]
  isExternal: true
  href: SuperOffice.CRM.Services.RecurrenceDate.html
  name: RecurrenceDate[]
  nameWithType: RecurrenceDate[]
  fullName: SuperOffice.CRM.Services.RecurrenceDate[]
  nameWithType.vb: RecurrenceDate()
  fullName.vb: SuperOffice.CRM.Services.RecurrenceDate()
  name.vb: RecurrenceDate()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceDate.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
    href: SuperOffice.CRM.Services.RecurrenceDate.html
  - name: (
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.ConflictDetector.html#SuperOffice_CRM_Entities_ConflictDetector_GetConflictsAsync_System_Int32_System_Int32_System_Int32___System_TimeSpan_System_TimeSpan_System_Threading_CancellationToken_System_DateTime___
  name: GetConflictsAsync
  nameWithType: ConflictDetector.GetConflictsAsync
  fullName: SuperOffice.CRM.Entities.ConflictDetector.GetConflictsAsync
- uid: System.DateTime[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: Date()
  fullName.vb: Date()
  name.vb: Date()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int32}[0:,0:]}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{System.Int32}[0:,0:]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<int>[,]>
  nameWithType: Task<List<int>[,]>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<int>[,]>
  nameWithType.vb: Task(Of List(Of Integer)(,))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of Integer)(,))
  name.vb: Task(Of List(Of Integer)(,))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '['
  - name: ','
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: (
  - name: ','
  - name: )
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync
  isExternal: true
  href: SuperOffice.CRM.Entities.ConflictDetector.html#SuperOffice_CRM_Entities_ConflictDetector_GetConflictTimesAsync_System_Int32_System_Int32_System_Int32___System_TimeSpan_System_TimeSpan_System_Threading_CancellationToken_System_DateTime___
  name: GetConflictTimesAsync
  nameWithType: ConflictDetector.GetConflictTimesAsync
  fullName: SuperOffice.CRM.Entities.ConflictDetector.GetConflictTimesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Entities.ConflictDetector.ConflictTime}[0:,0:]}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Entities.ConflictDetector.ConflictTime}[0:,0:]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<List<ConflictDetector.ConflictTime>[,]>
  nameWithType: Task<List<ConflictDetector.ConflictTime>[,]>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<SuperOffice.CRM.Entities.ConflictDetector.ConflictTime>[,]>
  nameWithType.vb: Task(Of List(Of ConflictDetector.ConflictTime)(,))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of SuperOffice.CRM.Entities.ConflictDetector.ConflictTime)(,))
  name.vb: Task(Of List(Of ConflictDetector.ConflictTime)(,))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.CRM.Entities.ConflictDetector
    name: ConflictDetector
    isExternal: true
    href: SuperOffice.CRM.Entities.ConflictDetector.html
  - name: .
  - uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
    name: ConflictTime
    isExternal: true
    href: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.html
  - name: '>'
  - name: '['
  - name: ','
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.ConflictDetector
    name: ConflictDetector
    isExternal: true
    href: SuperOffice.CRM.Entities.ConflictDetector.html
  - name: .
  - uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
    name: ConflictTime
    isExternal: true
    href: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.html
  - name: )
  - name: (
  - name: ','
  - name: )
  - name: )
- uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[]
  isExternal: true
  href: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.html
  name: ConflictTime[]
  nameWithType: ConflictDetector.ConflictTime[]
  fullName: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime[]
  nameWithType.vb: ConflictDetector.ConflictTime()
  fullName.vb: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime()
  name.vb: ConflictTime()
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
    name: ConflictTime
    isExternal: true
    href: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime
    name: ConflictTime
    isExternal: true
    href: SuperOffice.CRM.Entities.ConflictDetector.ConflictTime.html
  - name: (
  - name: )
