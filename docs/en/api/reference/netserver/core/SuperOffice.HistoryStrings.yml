### YamlMime:ManagedReference
items:
- uid: SuperOffice.HistoryStrings
  commentId: T:SuperOffice.HistoryStrings
  id: HistoryStrings
  parent: SuperOffice
  children:
  - SuperOffice.HistoryStrings.#ctor
  - SuperOffice.HistoryStrings.Appointment
  - SuperOffice.HistoryStrings.Associate
  - SuperOffice.HistoryStrings.Business
  - SuperOffice.HistoryStrings.Category
  - SuperOffice.HistoryStrings.Competitor
  - SuperOffice.HistoryStrings.Contact
  - SuperOffice.HistoryStrings.ContactInterest
  - SuperOffice.HistoryStrings.Country
  - SuperOffice.HistoryStrings.Credited
  - SuperOffice.HistoryStrings.Currency
  - SuperOffice.HistoryStrings.DiaryOwner
  - SuperOffice.HistoryStrings.Document
  - SuperOffice.HistoryStrings.DocumentTemplate
  - SuperOffice.HistoryStrings.GroupView
  - SuperOffice.HistoryStrings.Intent
  - SuperOffice.HistoryStrings.MergeDocument
  - SuperOffice.HistoryStrings.MrMrs
  - SuperOffice.HistoryStrings.Person
  - SuperOffice.HistoryStrings.PersonIntererst
  - SuperOffice.HistoryStrings.PersonPosition
  - SuperOffice.HistoryStrings.Priority
  - SuperOffice.HistoryStrings.Probability
  - SuperOffice.HistoryStrings.Project
  - SuperOffice.HistoryStrings.ProjectMemberType
  - SuperOffice.HistoryStrings.ProjectStatus
  - SuperOffice.HistoryStrings.ProjectType
  - SuperOffice.HistoryStrings.Reason
  - SuperOffice.HistoryStrings.Sale
  - SuperOffice.HistoryStrings.SearchCategory
  - SuperOffice.HistoryStrings.Selection
  - SuperOffice.HistoryStrings.Source
  - SuperOffice.HistoryStrings.Task
  - SuperOffice.HistoryStrings.Ticket
  - SuperOffice.HistoryStrings.UDList
  - SuperOffice.HistoryStrings.UserGroup
  langs:
  - csharp
  - vb
  name: HistoryStrings
  nameWithType: HistoryStrings
  fullName: SuperOffice.HistoryStrings
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: >-
    Helper class that exposes history list names that are used to identify current values.

    These names either uniquely represents table_id/extra_id in the history table, or

    Preference values
  example: []
  syntax:
    content: public sealed class HistoryStrings
    content.vb: Public NotInheritable Class HistoryStrings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.HistoryStrings.EnumUtil.MapEnums``2
  - SuperOffice.HistoryStrings.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.HistoryStrings.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.HistoryStrings)
  - SuperOffice.HistoryStrings.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.HistoryStrings.Appointment
  commentId: F:SuperOffice.HistoryStrings.Appointment
  id: Appointment
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Appointment
  nameWithType: HistoryStrings.Appointment
  fullName: SuperOffice.HistoryStrings.Appointment
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Appointment = "appointment"
    return:
      type: System.String
    content.vb: Public Const Appointment As String = "appointment"
- uid: SuperOffice.HistoryStrings.Associate
  commentId: F:SuperOffice.HistoryStrings.Associate
  id: Associate
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Associate
  nameWithType: HistoryStrings.Associate
  fullName: SuperOffice.HistoryStrings.Associate
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Associate = "associate"
    return:
      type: System.String
    content.vb: Public Const Associate As String = "associate"
- uid: SuperOffice.HistoryStrings.Business
  commentId: F:SuperOffice.HistoryStrings.Business
  id: Business
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Business
  nameWithType: HistoryStrings.Business
  fullName: SuperOffice.HistoryStrings.Business
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Business = "Business"
    return:
      type: System.String
    content.vb: Public Const Business As String = "Business"
- uid: SuperOffice.HistoryStrings.Category
  commentId: F:SuperOffice.HistoryStrings.Category
  id: Category
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: HistoryStrings.Category
  fullName: SuperOffice.HistoryStrings.Category
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Category = "category"
    return:
      type: System.String
    content.vb: Public Const Category As String = "category"
- uid: SuperOffice.HistoryStrings.Competitor
  commentId: F:SuperOffice.HistoryStrings.Competitor
  id: Competitor
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Competitor
  nameWithType: HistoryStrings.Competitor
  fullName: SuperOffice.HistoryStrings.Competitor
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Competitor = "comptr"
    return:
      type: System.String
    content.vb: Public Const Competitor As String = "comptr"
- uid: SuperOffice.HistoryStrings.Contact
  commentId: F:SuperOffice.HistoryStrings.Contact
  id: Contact
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Contact
  nameWithType: HistoryStrings.Contact
  fullName: SuperOffice.HistoryStrings.Contact
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Contact = "contact"
    return:
      type: System.String
    content.vb: Public Const Contact As String = "contact"
- uid: SuperOffice.HistoryStrings.ContactInterest
  commentId: F:SuperOffice.HistoryStrings.ContactInterest
  id: ContactInterest
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: ContactInterest
  nameWithType: HistoryStrings.ContactInterest
  fullName: SuperOffice.HistoryStrings.ContactInterest
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string ContactInterest = "contint"
    return:
      type: System.String
    content.vb: Public Const ContactInterest As String = "contint"
- uid: SuperOffice.HistoryStrings.Country
  commentId: F:SuperOffice.HistoryStrings.Country
  id: Country
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Country
  nameWithType: HistoryStrings.Country
  fullName: SuperOffice.HistoryStrings.Country
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Country = "country"
    return:
      type: System.String
    content.vb: Public Const Country As String = "country"
- uid: SuperOffice.HistoryStrings.Credited
  commentId: F:SuperOffice.HistoryStrings.Credited
  id: Credited
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Credited
  nameWithType: HistoryStrings.Credited
  fullName: SuperOffice.HistoryStrings.Credited
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Credited = "credited"
    return:
      type: System.String
    content.vb: Public Const Credited As String = "credited"
- uid: SuperOffice.HistoryStrings.Currency
  commentId: F:SuperOffice.HistoryStrings.Currency
  id: Currency
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Currency
  nameWithType: HistoryStrings.Currency
  fullName: SuperOffice.HistoryStrings.Currency
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Currency = "currency"
    return:
      type: System.String
    content.vb: Public Const Currency As String = "currency"
- uid: SuperOffice.HistoryStrings.DocumentTemplate
  commentId: F:SuperOffice.HistoryStrings.DocumentTemplate
  id: DocumentTemplate
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: DocumentTemplate
  nameWithType: HistoryStrings.DocumentTemplate
  fullName: SuperOffice.HistoryStrings.DocumentTemplate
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string DocumentTemplate = "doctmpl"
    return:
      type: System.String
    content.vb: Public Const DocumentTemplate As String = "doctmpl"
- uid: SuperOffice.HistoryStrings.Document
  commentId: F:SuperOffice.HistoryStrings.Document
  id: Document
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: HistoryStrings.Document
  fullName: SuperOffice.HistoryStrings.Document
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Document = "document"
    return:
      type: System.String
    content.vb: Public Const Document As String = "document"
- uid: SuperOffice.HistoryStrings.MergeDocument
  commentId: F:SuperOffice.HistoryStrings.MergeDocument
  id: MergeDocument
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: MergeDocument
  nameWithType: HistoryStrings.MergeDocument
  fullName: SuperOffice.HistoryStrings.MergeDocument
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name used for documents used as mailmerge drafts.
  example: []
  syntax:
    content: public const string MergeDocument = "mergedocument"
    return:
      type: System.String
    content.vb: Public Const MergeDocument As String = "mergedocument"
- uid: SuperOffice.HistoryStrings.Intent
  commentId: F:SuperOffice.HistoryStrings.Intent
  id: Intent
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Intent
  nameWithType: HistoryStrings.Intent
  fullName: SuperOffice.HistoryStrings.Intent
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Intent = "intent"
    return:
      type: System.String
    content.vb: Public Const Intent As String = "intent"
- uid: SuperOffice.HistoryStrings.MrMrs
  commentId: F:SuperOffice.HistoryStrings.MrMrs
  id: MrMrs
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: MrMrs
  nameWithType: HistoryStrings.MrMrs
  fullName: SuperOffice.HistoryStrings.MrMrs
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string MrMrs = "mrmrs"
    return:
      type: System.String
    content.vb: Public Const MrMrs As String = "mrmrs"
- uid: SuperOffice.HistoryStrings.PersonIntererst
  commentId: F:SuperOffice.HistoryStrings.PersonIntererst
  id: PersonIntererst
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: PersonIntererst
  nameWithType: HistoryStrings.PersonIntererst
  fullName: SuperOffice.HistoryStrings.PersonIntererst
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string PersonIntererst = "persint"
    return:
      type: System.String
    content.vb: Public Const PersonIntererst As String = "persint"
- uid: SuperOffice.HistoryStrings.Person
  commentId: F:SuperOffice.HistoryStrings.Person
  id: Person
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Person
  nameWithType: HistoryStrings.Person
  fullName: SuperOffice.HistoryStrings.Person
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Person = "person"
    return:
      type: System.String
    content.vb: Public Const Person As String = "person"
- uid: SuperOffice.HistoryStrings.PersonPosition
  commentId: F:SuperOffice.HistoryStrings.PersonPosition
  id: PersonPosition
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: PersonPosition
  nameWithType: HistoryStrings.PersonPosition
  fullName: SuperOffice.HistoryStrings.PersonPosition
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string PersonPosition = "perspos"
    return:
      type: System.String
    content.vb: Public Const PersonPosition As String = "perspos"
- uid: SuperOffice.HistoryStrings.ProjectMemberType
  commentId: F:SuperOffice.HistoryStrings.ProjectMemberType
  id: ProjectMemberType
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: ProjectMemberType
  nameWithType: HistoryStrings.ProjectMemberType
  fullName: SuperOffice.HistoryStrings.ProjectMemberType
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string ProjectMemberType = "pmembtype"
    return:
      type: System.String
    content.vb: Public Const ProjectMemberType As String = "pmembtype"
- uid: SuperOffice.HistoryStrings.Priority
  commentId: F:SuperOffice.HistoryStrings.Priority
  id: Priority
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: HistoryStrings.Priority
  fullName: SuperOffice.HistoryStrings.Priority
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Priority = "priority"
    return:
      type: System.String
    content.vb: Public Const Priority As String = "priority"
- uid: SuperOffice.HistoryStrings.Probability
  commentId: F:SuperOffice.HistoryStrings.Probability
  id: Probability
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Probability
  nameWithType: HistoryStrings.Probability
  fullName: SuperOffice.HistoryStrings.Probability
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Probability = "prob"
    return:
      type: System.String
    content.vb: Public Const Probability As String = "prob"
- uid: SuperOffice.HistoryStrings.Project
  commentId: F:SuperOffice.HistoryStrings.Project
  id: Project
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: HistoryStrings.Project
  fullName: SuperOffice.HistoryStrings.Project
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Project = "project"
    return:
      type: System.String
    content.vb: Public Const Project As String = "project"
- uid: SuperOffice.HistoryStrings.ProjectStatus
  commentId: F:SuperOffice.HistoryStrings.ProjectStatus
  id: ProjectStatus
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: ProjectStatus
  nameWithType: HistoryStrings.ProjectStatus
  fullName: SuperOffice.HistoryStrings.ProjectStatus
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string ProjectStatus = "projstatus"
    return:
      type: System.String
    content.vb: Public Const ProjectStatus As String = "projstatus"
- uid: SuperOffice.HistoryStrings.ProjectType
  commentId: F:SuperOffice.HistoryStrings.ProjectType
  id: ProjectType
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: ProjectType
  nameWithType: HistoryStrings.ProjectType
  fullName: SuperOffice.HistoryStrings.ProjectType
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string ProjectType = "projtype"
    return:
      type: System.String
    content.vb: Public Const ProjectType As String = "projtype"
- uid: SuperOffice.HistoryStrings.Reason
  commentId: F:SuperOffice.HistoryStrings.Reason
  id: Reason
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Reason
  nameWithType: HistoryStrings.Reason
  fullName: SuperOffice.HistoryStrings.Reason
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Reason = "reason"
    return:
      type: System.String
    content.vb: Public Const Reason As String = "reason"
- uid: SuperOffice.HistoryStrings.Sale
  commentId: F:SuperOffice.HistoryStrings.Sale
  id: Sale
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Sale
  nameWithType: HistoryStrings.Sale
  fullName: SuperOffice.HistoryStrings.Sale
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Sale = "sale"
    return:
      type: System.String
    content.vb: Public Const Sale As String = "sale"
- uid: SuperOffice.HistoryStrings.SearchCategory
  commentId: F:SuperOffice.HistoryStrings.SearchCategory
  id: SearchCategory
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: SearchCategory
  nameWithType: HistoryStrings.SearchCategory
  fullName: SuperOffice.HistoryStrings.SearchCategory
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string SearchCategory = "searchcat"
    return:
      type: System.String
    content.vb: Public Const SearchCategory As String = "searchcat"
- uid: SuperOffice.HistoryStrings.Selection
  commentId: F:SuperOffice.HistoryStrings.Selection
  id: Selection
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Selection
  nameWithType: HistoryStrings.Selection
  fullName: SuperOffice.HistoryStrings.Selection
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Selection = "selection"
    return:
      type: System.String
    content.vb: Public Const Selection As String = "selection"
- uid: SuperOffice.HistoryStrings.Source
  commentId: F:SuperOffice.HistoryStrings.Source
  id: Source
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: HistoryStrings.Source
  fullName: SuperOffice.HistoryStrings.Source
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Source = "source"
    return:
      type: System.String
    content.vb: Public Const Source As String = "source"
- uid: SuperOffice.HistoryStrings.Task
  commentId: F:SuperOffice.HistoryStrings.Task
  id: Task
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Task
  nameWithType: HistoryStrings.Task
  fullName: SuperOffice.HistoryStrings.Task
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string Task = "task"
    return:
      type: System.String
    content.vb: Public Const Task As String = "task"
- uid: SuperOffice.HistoryStrings.UDList
  commentId: F:SuperOffice.HistoryStrings.UDList
  id: UDList
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: UDList
  nameWithType: HistoryStrings.UDList
  fullName: SuperOffice.HistoryStrings.UDList
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string UDList = "udlist"
    return:
      type: System.String
    content.vb: Public Const UDList As String = "udlist"
- uid: SuperOffice.HistoryStrings.UserGroup
  commentId: F:SuperOffice.HistoryStrings.UserGroup
  id: UserGroup
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: UserGroup
  nameWithType: HistoryStrings.UserGroup
  fullName: SuperOffice.HistoryStrings.UserGroup
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name
  example: []
  syntax:
    content: public const string UserGroup = "usergroup"
    return:
      type: System.String
    content.vb: Public Const UserGroup As String = "usergroup"
- uid: SuperOffice.HistoryStrings.GroupView
  commentId: F:SuperOffice.HistoryStrings.GroupView
  id: GroupView
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: GroupView
  nameWithType: HistoryStrings.GroupView
  fullName: SuperOffice.HistoryStrings.GroupView
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name used for the group view current value
  example: []
  syntax:
    content: public const string GroupView = "groupview"
    return:
      type: System.String
    content.vb: Public Const GroupView As String = "groupview"
- uid: SuperOffice.HistoryStrings.DiaryOwner
  commentId: F:SuperOffice.HistoryStrings.DiaryOwner
  id: DiaryOwner
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: DiaryOwner
  nameWithType: HistoryStrings.DiaryOwner
  fullName: SuperOffice.HistoryStrings.DiaryOwner
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: History list name used for the diary owner current value
  example: []
  syntax:
    content: public const string DiaryOwner = "diaryowner"
    return:
      type: System.String
    content.vb: Public Const DiaryOwner As String = "diaryowner"
- uid: SuperOffice.HistoryStrings.Ticket
  commentId: F:SuperOffice.HistoryStrings.Ticket
  id: Ticket
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: Ticket
  nameWithType: HistoryStrings.Ticket
  fullName: SuperOffice.HistoryStrings.Ticket
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice
  summary: Ticket main entity
  example: []
  syntax:
    content: public const string Ticket = "ticket"
    return:
      type: System.String
    content.vb: Public Const Ticket As String = "ticket"
- uid: SuperOffice.HistoryStrings.#ctor
  commentId: M:SuperOffice.HistoryStrings.#ctor
  id: '#ctor'
  parent: SuperOffice.HistoryStrings
  langs:
  - csharp
  - vb
  name: HistoryStrings()
  nameWithType: HistoryStrings.HistoryStrings()
  fullName: SuperOffice.HistoryStrings.HistoryStrings()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice
  syntax:
    content: public HistoryStrings()
    content.vb: Public Sub New()
  overload: SuperOffice.HistoryStrings.#ctor*
  nameWithType.vb: HistoryStrings.New()
  fullName.vb: SuperOffice.HistoryStrings.New()
  name.vb: New()
references:
- uid: SuperOffice
  commentId: N:SuperOffice
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice
  nameWithType: SuperOffice
  fullName: SuperOffice
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.HistoryStrings.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<HistoryStrings, To>(HistoryStrings)
  nameWithType: EnumUtil.MapEnums<HistoryStrings, To>(HistoryStrings)
  fullName: EnumUtil.MapEnums<SuperOffice.HistoryStrings, To>(SuperOffice.HistoryStrings)
  nameWithType.vb: EnumUtil.MapEnums(Of HistoryStrings, To)(HistoryStrings)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.HistoryStrings, To)(SuperOffice.HistoryStrings)
  name.vb: MapEnums(Of HistoryStrings, To)(HistoryStrings)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.HistoryStrings)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.HistoryStrings)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
- uid: SuperOffice.HistoryStrings.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<HistoryStrings, To>(HistoryStrings)
  nameWithType: Converters.MapEnums<HistoryStrings, To>(HistoryStrings)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.HistoryStrings, To>(SuperOffice.HistoryStrings)
  nameWithType.vb: Converters.MapEnums(Of HistoryStrings, To)(HistoryStrings)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.HistoryStrings, To)(SuperOffice.HistoryStrings)
  name.vb: MapEnums(Of HistoryStrings, To)(HistoryStrings)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.HistoryStrings)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.HistoryStrings)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
- uid: SuperOffice.HistoryStrings.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.HistoryStrings)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<HistoryStrings>(HistoryStrings, HistoryStrings)
  nameWithType: ObjectExtensions.AssignByReflection<HistoryStrings>(HistoryStrings, HistoryStrings)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.HistoryStrings>(SuperOffice.HistoryStrings, SuperOffice.HistoryStrings)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of HistoryStrings)(HistoryStrings, HistoryStrings)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.HistoryStrings)(SuperOffice.HistoryStrings, SuperOffice.HistoryStrings)
  name.vb: AssignByReflection(Of HistoryStrings)(HistoryStrings, HistoryStrings)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.HistoryStrings,SuperOffice.HistoryStrings)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: '>'
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: ','
  - name: " "
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.HistoryStrings,SuperOffice.HistoryStrings)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: ','
  - name: " "
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
- uid: SuperOffice.HistoryStrings.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<HistoryStrings>(HistoryStrings)
  nameWithType: ObjectExtensions.GraphCopy<HistoryStrings>(HistoryStrings)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.HistoryStrings>(SuperOffice.HistoryStrings)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of HistoryStrings)(HistoryStrings)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.HistoryStrings)(SuperOffice.HistoryStrings)
  name.vb: GraphCopy(Of HistoryStrings)(HistoryStrings)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.HistoryStrings)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: '>'
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.HistoryStrings)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
  - name: (
  - uid: SuperOffice.HistoryStrings
    name: HistoryStrings
    isExternal: true
    href: SuperOffice.HistoryStrings.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.HistoryStrings.#ctor*
  commentId: Overload:SuperOffice.HistoryStrings.#ctor
  isExternal: true
  href: SuperOffice.HistoryStrings.html#SuperOffice_HistoryStrings__ctor
  name: HistoryStrings
  nameWithType: HistoryStrings.HistoryStrings
  fullName: SuperOffice.HistoryStrings.HistoryStrings
  nameWithType.vb: HistoryStrings.New
  fullName.vb: SuperOffice.HistoryStrings.New
  name.vb: New
