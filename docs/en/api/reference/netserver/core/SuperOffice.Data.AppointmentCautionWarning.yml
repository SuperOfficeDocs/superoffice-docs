### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.AppointmentCautionWarning
  commentId: T:SuperOffice.Data.AppointmentCautionWarning
  id: AppointmentCautionWarning
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.AppointmentCautionWarning.ExternalParticipantsDateTimeMismatch
  - SuperOffice.Data.AppointmentCautionWarning.IncomingRecurrenceChangeNotSupported
  - SuperOffice.Data.AppointmentCautionWarning.NotInSync
  - SuperOffice.Data.AppointmentCautionWarning.NotNotifiedByEmail
  - SuperOffice.Data.AppointmentCautionWarning.OK
  - SuperOffice.Data.AppointmentCautionWarning.RecurrencePatternNotSupported
  langs:
  - csharp
  - vb
  name: AppointmentCautionWarning
  nameWithType: AppointmentCautionWarning
  fullName: SuperOffice.Data.AppointmentCautionWarning
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nAppointment and invitation synchronization info\nThis Enum is used by:  appointment.cautionWarning\n"
  syntax:
    content: 'public enum AppointmentCautionWarning : short'
    content.vb: Public Enum AppointmentCautionWarning As Short
  extensionMethods:
  - SuperOffice.Data.AppointmentCautionWarning.EnumUtil.MapEnums``2
  - SuperOffice.Data.AppointmentCautionWarning.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.AppointmentCautionWarning)
  - SuperOffice.Data.AppointmentCautionWarning.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.AppointmentCautionWarning.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.AppointmentCautionWarning.OK
  commentId: F:SuperOffice.Data.AppointmentCautionWarning.OK
  id: OK
  parent: SuperOffice.Data.AppointmentCautionWarning
  langs:
  - csharp
  - vb
  name: OK
  nameWithType: AppointmentCautionWarning.OK
  fullName: SuperOffice.Data.AppointmentCautionWarning.OK
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: OK - no special warnings\n"
  syntax:
    content: OK = 0
    return:
      type: SuperOffice.Data.AppointmentCautionWarning
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.AppointmentCautionWarning.NotInSync
  commentId: F:SuperOffice.Data.AppointmentCautionWarning.NotInSync
  id: NotInSync
  parent: SuperOffice.Data.AppointmentCautionWarning
  langs:
  - csharp
  - vb
  name: NotInSync
  nameWithType: AppointmentCautionWarning.NotInSync
  fullName: SuperOffice.Data.AppointmentCautionWarning.NotInSync
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Possibly not in sync with external systems\n"
  syntax:
    content: NotInSync = 1
    return:
      type: SuperOffice.Data.AppointmentCautionWarning
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.AppointmentCautionWarning.NotNotifiedByEmail
  commentId: F:SuperOffice.Data.AppointmentCautionWarning.NotNotifiedByEmail
  id: NotNotifiedByEmail
  parent: SuperOffice.Data.AppointmentCautionWarning
  langs:
  - csharp
  - vb
  name: NotNotifiedByEmail
  nameWithType: AppointmentCautionWarning.NotNotifiedByEmail
  fullName: SuperOffice.Data.AppointmentCautionWarning.NotNotifiedByEmail
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Updated without sending email notifications\n"
  syntax:
    content: NotNotifiedByEmail = 2
    return:
      type: SuperOffice.Data.AppointmentCautionWarning
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.AppointmentCautionWarning.RecurrencePatternNotSupported
  commentId: F:SuperOffice.Data.AppointmentCautionWarning.RecurrencePatternNotSupported
  id: RecurrencePatternNotSupported
  parent: SuperOffice.Data.AppointmentCautionWarning
  langs:
  - csharp
  - vb
  name: RecurrencePatternNotSupported
  nameWithType: AppointmentCautionWarning.RecurrencePatternNotSupported
  fullName: SuperOffice.Data.AppointmentCautionWarning.RecurrencePatternNotSupported
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: This recurrence pattern might not be supported in the external participants calendars\n"
  syntax:
    content: RecurrencePatternNotSupported = 3
    return:
      type: SuperOffice.Data.AppointmentCautionWarning
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.AppointmentCautionWarning.IncomingRecurrenceChangeNotSupported
  commentId: F:SuperOffice.Data.AppointmentCautionWarning.IncomingRecurrenceChangeNotSupported
  id: IncomingRecurrenceChangeNotSupported
  parent: SuperOffice.Data.AppointmentCautionWarning
  langs:
  - csharp
  - vb
  name: IncomingRecurrenceChangeNotSupported
  nameWithType: AppointmentCautionWarning.IncomingRecurrenceChangeNotSupported
  fullName: SuperOffice.Data.AppointmentCautionWarning.IncomingRecurrenceChangeNotSupported
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: A requested change to a recurrence appointment was not supported\n"
  syntax:
    content: IncomingRecurrenceChangeNotSupported = 4
    return:
      type: SuperOffice.Data.AppointmentCautionWarning
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.AppointmentCautionWarning.ExternalParticipantsDateTimeMismatch
  commentId: F:SuperOffice.Data.AppointmentCautionWarning.ExternalParticipantsDateTimeMismatch
  id: ExternalParticipantsDateTimeMismatch
  parent: SuperOffice.Data.AppointmentCautionWarning
  langs:
  - csharp
  - vb
  name: ExternalParticipantsDateTimeMismatch
  nameWithType: AppointmentCautionWarning.ExternalParticipantsDateTimeMismatch
  fullName: SuperOffice.Data.AppointmentCautionWarning.ExternalParticipantsDateTimeMismatch
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n5: Time and date may be wrong for external participants due to unsupported changes\n"
  syntax:
    content: ExternalParticipantsDateTimeMismatch = 5
    return:
      type: SuperOffice.Data.AppointmentCautionWarning
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.AppointmentCautionWarning.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AppointmentCautionWarning, To>()
  nameWithType: EnumUtil.MapEnums<AppointmentCautionWarning, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.AppointmentCautionWarning, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AppointmentCautionWarning, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.AppointmentCautionWarning, To)()
  name.vb: MapEnums(Of AppointmentCautionWarning, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AppointmentCautionWarning, To>
    nameWithType: EnumUtil.MapEnums<AppointmentCautionWarning, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.AppointmentCautionWarning, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AppointmentCautionWarning, To)
    nameWithType: EnumUtil.MapEnums(Of AppointmentCautionWarning, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.AppointmentCautionWarning, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.AppointmentCautionWarning.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.AppointmentCautionWarning)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<AppointmentCautionWarning>(AppointmentCautionWarning)
  nameWithType: ObjectExtensions.AssignByReflection<AppointmentCautionWarning>(AppointmentCautionWarning)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.AppointmentCautionWarning>(SuperOffice.Data.AppointmentCautionWarning)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of AppointmentCautionWarning)(AppointmentCautionWarning)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.AppointmentCautionWarning)(SuperOffice.Data.AppointmentCautionWarning)
  name.vb: AssignByReflection(Of AppointmentCautionWarning)(AppointmentCautionWarning)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<AppointmentCautionWarning>
    nameWithType: ObjectExtensions.AssignByReflection<AppointmentCautionWarning>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.AppointmentCautionWarning>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.AppointmentCautionWarning
    name: AppointmentCautionWarning
    nameWithType: AppointmentCautionWarning
    fullName: SuperOffice.Data.AppointmentCautionWarning
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of AppointmentCautionWarning)
    nameWithType: ObjectExtensions.AssignByReflection(Of AppointmentCautionWarning)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.AppointmentCautionWarning)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.AppointmentCautionWarning
    name: AppointmentCautionWarning
    nameWithType: AppointmentCautionWarning
    fullName: SuperOffice.Data.AppointmentCautionWarning
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.AppointmentCautionWarning.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<AppointmentCautionWarning>()
  nameWithType: ObjectExtensions.GraphCopy<AppointmentCautionWarning>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.AppointmentCautionWarning>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of AppointmentCautionWarning)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.AppointmentCautionWarning)()
  name.vb: GraphCopy(Of AppointmentCautionWarning)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<AppointmentCautionWarning>
    nameWithType: ObjectExtensions.GraphCopy<AppointmentCautionWarning>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.AppointmentCautionWarning>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of AppointmentCautionWarning)
    nameWithType: ObjectExtensions.GraphCopy(Of AppointmentCautionWarning)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.AppointmentCautionWarning)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.AppointmentCautionWarning.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AppointmentCautionWarning, To>()
  nameWithType: Converters.MapEnums<AppointmentCautionWarning, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.AppointmentCautionWarning, To>()
  nameWithType.vb: Converters.MapEnums(Of AppointmentCautionWarning, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.AppointmentCautionWarning, To)()
  name.vb: MapEnums(Of AppointmentCautionWarning, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AppointmentCautionWarning, To>
    nameWithType: Converters.MapEnums<AppointmentCautionWarning, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.AppointmentCautionWarning, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AppointmentCautionWarning, To)
    nameWithType: Converters.MapEnums(Of AppointmentCautionWarning, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.AppointmentCautionWarning, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.AppointmentCautionWarning
  commentId: T:SuperOffice.Data.AppointmentCautionWarning
  parent: SuperOffice.Data
  isExternal: true
  name: AppointmentCautionWarning
  nameWithType: AppointmentCautionWarning
  fullName: SuperOffice.Data.AppointmentCautionWarning
