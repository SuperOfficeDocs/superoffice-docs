### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Administration.IUserPlugin
  commentId: T:SuperOffice.CRM.Administration.IUserPlugin
  id: IUserPlugin
  parent: SuperOffice.CRM.Administration
  children:
  - SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  - SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  - SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  - SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  - SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  - SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  - SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  langs:
  - csharp
  - vb
  name: IUserPlugin
  nameWithType: IUserPlugin
  fullName: SuperOffice.CRM.Administration.IUserPlugin
  type: Interface
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Interface required to implement for User Plugins to provide defulat values.
  remarks: >-
    The plugin must be declared with <xref href="SuperOffice.CRM.Administration.UserPluginAttribute" data-throw-if-not-resolved="false"></xref>.  

    The default implementation <xref href="SuperOffice.CRM.Administration.UserPlugin" data-throw-if-not-resolved="false"></xref> can also be used.
  example: []
  syntax:
    content: public interface IUserPlugin
    content.vb: Public Interface IUserPlugin
  extensionMethods:
  - SuperOffice.CRM.Administration.IUserPlugin.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Administration.IUserPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  id: GetDefaultAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetDefaultAssociateNameAsync(UserType, Person, CheckIfAssociateNameIsLegal, CancellationToken)
  nameWithType: IUserPlugin.GetDefaultAssociateNameAsync(UserType, Person, CheckIfAssociateNameIsLegal, CancellationToken)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get default associate name for a user.
  example: []
  syntax:
    content: Task<string> GetDefaultAssociateNameAsync(UserType type, Person person, CheckIfAssociateNameIsLegal validator, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    - id: validator
      type: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
      description: Validator to help check if the an associate name is valid.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Default associate name validated with the provided <xref href="SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal" data-throw-if-not-resolved="false"></xref> delegate.
    content.vb: Function GetDefaultAssociateNameAsync(type As UserType, person As Person, validator As CheckIfAssociateNameIsLegal, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync*
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  id: GetDefaultAssociateUserNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetDefaultAssociateUserNameAsync(UserType, Person, CheckIfAssociateNameIsLegal, CancellationToken)
  nameWithType: IUserPlugin.GetDefaultAssociateUserNameAsync(UserType, Person, CheckIfAssociateNameIsLegal, CancellationToken)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get default associate user name for a user.
  example: []
  syntax:
    content: Task<string> GetDefaultAssociateUserNameAsync(UserType type, Person person, CheckIfAssociateNameIsLegal validator, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    - id: validator
      type: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
      description: Validator to help check if the an associate user name is valid.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Default associate user name validated with the provided <xref href="SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal" data-throw-if-not-resolved="false"></xref> delegate.
    content.vb: Function GetDefaultAssociateUserNameAsync(type As UserType, person As Person, validator As CheckIfAssociateNameIsLegal, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync*
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  id: GetValidAssociateNameAsync(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetValidAssociateNameAsync(UserType, Person, string, CheckIfAssociateNameIsLegal, CancellationToken)
  nameWithType: IUserPlugin.GetValidAssociateNameAsync(UserType, Person, string, CheckIfAssociateNameIsLegal, CancellationToken)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, string, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get valid associate name for a user.
  example: []
  syntax:
    content: Task<string> GetValidAssociateNameAsync(UserType type, Person person, string associateName, CheckIfAssociateNameIsLegal validator, CancellationToken cancellationToken = default)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    - id: associateName
      type: System.String
      description: Candidate for associate name.
    - id: validator
      type: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
      description: Validator to help check if the an associate name is valid.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Default associate name validated with the provided <xref href="SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal" data-throw-if-not-resolved="false"></xref> delegate.
    content.vb: Function GetValidAssociateNameAsync(type As UserType, person As Person, associateName As String, validator As CheckIfAssociateNameIsLegal, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync*
  nameWithType.vb: IUserPlugin.GetValidAssociateNameAsync(UserType, Person, String, CheckIfAssociateNameIsLegal, CancellationToken)
  fullName.vb: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, String, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal, System.Threading.CancellationToken)
  name.vb: GetValidAssociateNameAsync(UserType, Person, String, CheckIfAssociateNameIsLegal, CancellationToken)
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  id: GetValidAssociateUserName(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,System.String,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetValidAssociateUserName(UserType, Person, string, CheckIfAssociateNameIsLegal)
  nameWithType: IUserPlugin.GetValidAssociateUserName(UserType, Person, string, CheckIfAssociateNameIsLegal)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, string, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get valid associate user name for a user.
  example: []
  syntax:
    content: string GetValidAssociateUserName(UserType type, Person person, string associateUserName, CheckIfAssociateNameIsLegal validator)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    - id: associateUserName
      type: System.String
      description: Candidate for user name.
    - id: validator
      type: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
      description: Validator to help check if the an associate name is valid.
    return:
      type: System.String
      description: Default associate user name validated with the provided <xref href="SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal" data-throw-if-not-resolved="false"></xref> delegate.
    content.vb: Function GetValidAssociateUserName(type As UserType, person As Person, associateUserName As String, validator As CheckIfAssociateNameIsLegal) As String
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName*
  nameWithType.vb: IUserPlugin.GetValidAssociateUserName(UserType, Person, String, CheckIfAssociateNameIsLegal)
  fullName.vb: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, String, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  name.vb: GetValidAssociateUserName(UserType, Person, String, CheckIfAssociateNameIsLegal)
- uid: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  id: ProcessProvidedAssociateName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: ProcessProvidedAssociateName(string, int, UserType, Person, CheckIfAssociateNameIsLegal)
  nameWithType: IUserPlugin.ProcessProvidedAssociateName(string, int, UserType, Person, CheckIfAssociateNameIsLegal)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName(string, int, SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Process a provided associate name and allow modifications of an associate name.
  remarks: The name provided is guaranteed to meet the requirements set forth by teh provided validator.
  example: []
  syntax:
    content: string ProcessProvidedAssociateName(string providedAssociateName, int associateId, UserType type, Person person, CheckIfAssociateNameIsLegal validator)
    parameters:
    - id: providedAssociateName
      type: System.String
      description: Provided associate name
    - id: associateId
      type: System.Int32
      description: Associate id of the user.  The value 0 will be provided for new users.
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: Person this is a user for.  This value will be null (VB Noting) for System and Anonymous users.
    - id: validator
      type: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
      description: Validator to help check if the an associate name is valid.
    return:
      type: System.String
      description: Associate name validated with the provided <xref href="SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal" data-throw-if-not-resolved="false"></xref> delegate.
    content.vb: Function ProcessProvidedAssociateName(providedAssociateName As String, associateId As Integer, type As UserType, person As Person, validator As CheckIfAssociateNameIsLegal) As String
  overload: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName*
  nameWithType.vb: IUserPlugin.ProcessProvidedAssociateName(String, Integer, UserType, Person, CheckIfAssociateNameIsLegal)
  fullName.vb: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName(String, Integer, SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  name.vb: ProcessProvidedAssociateName(String, Integer, UserType, Person, CheckIfAssociateNameIsLegal)
- uid: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  id: ProcessProvidedAssociateUserName(System.String,System.Int32,SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person,SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: ProcessProvidedAssociateUserName(string, int, UserType, Person, CheckIfAssociateNameIsLegal)
  nameWithType: IUserPlugin.ProcessProvidedAssociateUserName(string, int, UserType, Person, CheckIfAssociateNameIsLegal)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName(string, int, SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Process a provided associate user name and allow modifications of an associate user name.
  remarks: The user name provided is guaranteed to meet the requirements set forth by teh provided validator.
  example: []
  syntax:
    content: string ProcessProvidedAssociateUserName(string providedAssociateUserName, int associateId, UserType type, Person person, CheckIfAssociateNameIsLegal validator)
    parameters:
    - id: providedAssociateUserName
      type: System.String
      description: Provided associate user name
    - id: associateId
      type: System.Int32
      description: Associate id of the user.  The value 0 will be provided for new users.
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: Person this is a user for.  This value will be null (VB Noting) for System and Anonymous users.
    - id: validator
      type: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
      description: Validator to help check if the an associate name is valid.
    return:
      type: System.String
      description: Associate user name validated with the provided <xref href="SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal" data-throw-if-not-resolved="false"></xref> delegate.
    content.vb: Function ProcessProvidedAssociateUserName(providedAssociateUserName As String, associateId As Integer, type As UserType, person As Person, validator As CheckIfAssociateNameIsLegal) As String
  overload: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName*
  nameWithType.vb: IUserPlugin.ProcessProvidedAssociateUserName(String, Integer, UserType, Person, CheckIfAssociateNameIsLegal)
  fullName.vb: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName(String, Integer, SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person, SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal)
  name.vb: ProcessProvidedAssociateUserName(String, Integer, UserType, Person, CheckIfAssociateNameIsLegal)
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  id: GetDefaultPrimaryGroup(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetDefaultPrimaryGroup(UserType, Person)
  nameWithType: IUserPlugin.GetDefaultPrimaryGroup(UserType, Person)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get default primary group for the user.
  example: []
  syntax:
    content: int GetDefaultPrimaryGroup(UserType type, Person person)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    return:
      type: System.Int32
      description: Default primary group id.
    content.vb: Function GetDefaultPrimaryGroup(type As UserType, person As Person) As Integer
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup*
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  id: GetDefaultSecondaryGroups(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetDefaultSecondaryGroups(UserType, Person)
  nameWithType: IUserPlugin.GetDefaultSecondaryGroups(UserType, Person)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get default secondary groups for the user
  example: []
  syntax:
    content: int[] GetDefaultSecondaryGroups(UserType type, Person person)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    return:
      type: System.Int32[]
      description: Default secoundary group ids
    content.vb: Function GetDefaultSecondaryGroups(type As UserType, person As Person) As Integer()
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups*
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  commentId: M:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  id: GetDefaultRole(SuperOffice.License.UserType,SuperOffice.CRM.Entities.Person)
  parent: SuperOffice.CRM.Administration.IUserPlugin
  langs:
  - csharp
  - vb
  name: GetDefaultRole(UserType, Person)
  nameWithType: IUserPlugin.GetDefaultRole(UserType, Person)
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole(SuperOffice.License.UserType, SuperOffice.CRM.Entities.Person)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Administration
  summary: Get default role id for the user
  example: []
  syntax:
    content: int GetDefaultRole(UserType type, Person person)
    parameters:
    - id: type
      type: SuperOffice.License.UserType
      description: Type of user.
    - id: person
      type: SuperOffice.CRM.Entities.Person
      description: >-
        Person this is a user for.  This value will be null (VB Noting) 

        for System and Anonymous users.
    return:
      type: System.Int32
      description: Default role id for the user.
    content.vb: Function GetDefaultRole(type As UserType, person As Person) As Integer
  overload: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole*
references:
- uid: SuperOffice.CRM.Administration.UserPluginAttribute
  commentId: T:SuperOffice.CRM.Administration.UserPluginAttribute
  parent: SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.CRM.Administration.UserPluginAttribute.html
  name: UserPluginAttribute
  nameWithType: UserPluginAttribute
  fullName: SuperOffice.CRM.Administration.UserPluginAttribute
- uid: SuperOffice.CRM.Administration.UserPlugin
  commentId: T:SuperOffice.CRM.Administration.UserPlugin
  isExternal: true
  href: SuperOffice.CRM.Administration.UserPlugin.html
  name: UserPlugin
  nameWithType: UserPlugin
  fullName: SuperOffice.CRM.Administration.UserPlugin
- uid: SuperOffice.CRM.Administration
  commentId: N:SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Administration
  nameWithType: SuperOffice.CRM.Administration
  fullName: SuperOffice.CRM.Administration
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Administration
    name: Administration
    isExternal: true
    href: SuperOffice.CRM.Administration.html
- uid: SuperOffice.CRM.Administration.IUserPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<IUserPlugin, To>(IUserPlugin)
  nameWithType: EnumUtil.MapEnums<IUserPlugin, To>(IUserPlugin)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Administration.IUserPlugin, To>(SuperOffice.CRM.Administration.IUserPlugin)
  nameWithType.vb: EnumUtil.MapEnums(Of IUserPlugin, To)(IUserPlugin)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Administration.IUserPlugin, To)(SuperOffice.CRM.Administration.IUserPlugin)
  name.vb: MapEnums(Of IUserPlugin, To)(IUserPlugin)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Administration.IUserPlugin)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Administration.IUserPlugin)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: )
- uid: SuperOffice.CRM.Administration.IUserPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<IUserPlugin, To>(IUserPlugin)
  nameWithType: Converters.MapEnums<IUserPlugin, To>(IUserPlugin)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Administration.IUserPlugin, To>(SuperOffice.CRM.Administration.IUserPlugin)
  nameWithType.vb: Converters.MapEnums(Of IUserPlugin, To)(IUserPlugin)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Administration.IUserPlugin, To)(SuperOffice.CRM.Administration.IUserPlugin)
  name.vb: MapEnums(Of IUserPlugin, To)(IUserPlugin)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Administration.IUserPlugin)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Administration.IUserPlugin)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Administration.IUserPlugin
    name: IUserPlugin
    isExternal: true
    href: SuperOffice.CRM.Administration.IUserPlugin.html
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
  commentId: T:SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
  parent: SuperOffice.CRM.Administration
  isExternal: true
  href: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal.html
  name: CheckIfAssociateNameIsLegal
  nameWithType: CheckIfAssociateNameIsLegal
  fullName: SuperOffice.CRM.Administration.CheckIfAssociateNameIsLegal
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetDefaultAssociateNameAsync_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_SuperOffice_CRM_Administration_CheckIfAssociateNameIsLegal_System_Threading_CancellationToken_
  name: GetDefaultAssociateNameAsync
  nameWithType: IUserPlugin.GetDefaultAssociateNameAsync
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateNameAsync
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: SuperOffice.CRM.Entities.Person
  commentId: T:SuperOffice.CRM.Entities.Person
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.Person.html
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Entities.Person
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetDefaultAssociateUserNameAsync_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_SuperOffice_CRM_Administration_CheckIfAssociateNameIsLegal_System_Threading_CancellationToken_
  name: GetDefaultAssociateUserNameAsync
  nameWithType: IUserPlugin.GetDefaultAssociateUserNameAsync
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultAssociateUserNameAsync
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetValidAssociateNameAsync_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_System_String_SuperOffice_CRM_Administration_CheckIfAssociateNameIsLegal_System_Threading_CancellationToken_
  name: GetValidAssociateNameAsync
  nameWithType: IUserPlugin.GetValidAssociateNameAsync
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateNameAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetValidAssociateUserName_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_System_String_SuperOffice_CRM_Administration_CheckIfAssociateNameIsLegal_
  name: GetValidAssociateUserName
  nameWithType: IUserPlugin.GetValidAssociateUserName
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetValidAssociateUserName
- uid: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_ProcessProvidedAssociateName_System_String_System_Int32_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_SuperOffice_CRM_Administration_CheckIfAssociateNameIsLegal_
  name: ProcessProvidedAssociateName
  nameWithType: IUserPlugin.ProcessProvidedAssociateName
  fullName: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateName
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_ProcessProvidedAssociateUserName_System_String_System_Int32_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_SuperOffice_CRM_Administration_CheckIfAssociateNameIsLegal_
  name: ProcessProvidedAssociateUserName
  nameWithType: IUserPlugin.ProcessProvidedAssociateUserName
  fullName: SuperOffice.CRM.Administration.IUserPlugin.ProcessProvidedAssociateUserName
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetDefaultPrimaryGroup_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_
  name: GetDefaultPrimaryGroup
  nameWithType: IUserPlugin.GetDefaultPrimaryGroup
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultPrimaryGroup
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetDefaultSecondaryGroups_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_
  name: GetDefaultSecondaryGroups
  nameWithType: IUserPlugin.GetDefaultSecondaryGroups
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultSecondaryGroups
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole*
  commentId: Overload:SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole
  isExternal: true
  href: SuperOffice.CRM.Administration.IUserPlugin.html#SuperOffice_CRM_Administration_IUserPlugin_GetDefaultRole_SuperOffice_License_UserType_SuperOffice_CRM_Entities_Person_
  name: GetDefaultRole
  nameWithType: IUserPlugin.GetDefaultRole
  fullName: SuperOffice.CRM.Administration.IUserPlugin.GetDefaultRole
