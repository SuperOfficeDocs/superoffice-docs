### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler
  commentId: T:SuperOffice.CRM.Rows.TableRowLoadHandler
  id: TableRowLoadHandler
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.TableRowLoadHandler.#ctor(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.CRM.Rows.TableRowLoadHandler.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  - SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded
  langs:
  - csharp
  - vb
  name: TableRowLoadHandler
  nameWithType: TableRowLoadHandler
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThis class is used for fetching extra values from a row custom query where other tables and fields are joined \ninto the query.\n"
  example:
  - "\nExample of how to use TableRowLoadHandler to get additional values from the row custom query.\n<pre><code>    TextTableInfo t1 = TablesInfo.GetTextTableInfo();\n    ExternalEventRow.CustomSearch query = new ExternalEventRow.CustomSearch();\n    query.ReturnFields.Add(t1.Text);\n    query.JoinRestriction.LeftOuterJoin(query.TableInfo.SignOffConfTextId.Equal(t1.TextId));\n    ExtRowHelper extRowHelper = new ExtRowHelper(t1.Text);\n    ExternalEventRow row = query.ToExternalEventRow(extRowHelper);\n    //Get the string for t1.text:\n    string s = (string)extRowHelper[row.ExternalEventId][t1.Text];</code></pre>\n"
  syntax:
    content: 'public class TableRowLoadHandler : ITableRowLoadHandler'
    content.vb: >-
      Public Class TableRowLoadHandler
          Implements ITableRowLoadHandler
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Rows.ITableRowLoadHandler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.TableRowLoadHandler.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.#ctor(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.CRM.Rows.TableRowLoadHandler.#ctor(SuperOffice.Data.SQL.FieldInfo[])
  id: '#ctor(SuperOffice.Data.SQL.FieldInfo[])'
  parent: SuperOffice.CRM.Rows.TableRowLoadHandler
  langs:
  - csharp
  - vb
  name: TableRowLoadHandler(FieldInfo[])
  nameWithType: TableRowLoadHandler.TableRowLoadHandler(FieldInfo[])
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.TableRowLoadHandler(SuperOffice.Data.SQL.FieldInfo[])
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor.\n"
  syntax:
    content: public TableRowLoadHandler(params FieldInfo[] extraFieldInfos)
    parameters:
    - id: extraFieldInfos
      type: SuperOffice.Data.SQL.FieldInfo[]
      description: Array of FieldInfo describing extra fields to get values for
    content.vb: Public Sub New(ParamArray extraFieldInfos As FieldInfo())
  overload: SuperOffice.CRM.Rows.TableRowLoadHandler.#ctor*
  nameWithType.vb: TableRowLoadHandler.TableRowLoadHandler(FieldInfo())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Rows.TableRowLoadHandler.TableRowLoadHandler(SuperOffice.Data.SQL.FieldInfo())
  name.vb: TableRowLoadHandler(FieldInfo())
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  id: SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  isEii: true
  parent: SuperOffice.CRM.Rows.TableRowLoadHandler
  langs:
  - csharp
  - vb
  name: ITableRowLoadHandler.OnRowLoad(SoDataReader, TableRowBase)
  nameWithType: TableRowLoadHandler.ITableRowLoadHandler.OnRowLoad(SoDataReader, TableRowBase)
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Rows.TableRowBase)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: void ITableRowLoadHandler.OnRowLoad(SoDataReader reader, TableRowBase row)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
    - id: row
      type: SuperOffice.CRM.Rows.TableRowBase
    content.vb: Sub SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(reader As SoDataReader, row As TableRowBase) Implements ITableRowLoadHandler.OnRowLoad
  overload: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad*
  implements:
  - SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  nameWithType.vb: TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SoDataReader, TableRowBase)
  name.vb: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SoDataReader, TableRowBase)
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded
  commentId: M:SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded
  id: SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded
  isEii: true
  parent: SuperOffice.CRM.Rows.TableRowLoadHandler
  langs:
  - csharp
  - vb
  name: ITableRowLoadHandler.OnRowLoaded()
  nameWithType: TableRowLoadHandler.ITableRowLoadHandler.OnRowLoaded()
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: void ITableRowLoadHandler.OnRowLoaded()
    content.vb: Sub SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded Implements ITableRowLoadHandler.OnRowLoaded
  overload: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded*
  implements:
  - SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
  nameWithType.vb: TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded()
  name.vb: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded()
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowLoadHandler.Item(System.Int32)
  id: Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowLoadHandler
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: TableRowLoadHandler.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.Item[System.Int32]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n\n"
  syntax:
    content: public Dictionary<FieldInfo, object> this[int rowId] { get; }
    parameters:
    - id: rowId
      type: System.Int32
    return:
      type: System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.FieldInfo,System.Object}
    content.vb: Public ReadOnly Property Item(rowId As Integer) As Dictionary(Of FieldInfo, Object)
  overload: SuperOffice.CRM.Rows.TableRowLoadHandler.Item*
  nameWithType.vb: TableRowLoadHandler.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.CRM.Rows.TableRowLoadHandler.Item(System.Int32)
  name.vb: Item(Int32)
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
  commentId: T:SuperOffice.CRM.Rows.ITableRowLoadHandler
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ITableRowLoadHandler
  nameWithType: ITableRowLoadHandler
  fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TableRowLoadHandler, To>()
  nameWithType: EnumUtil.MapEnums<TableRowLoadHandler, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.TableRowLoadHandler, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TableRowLoadHandler, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.TableRowLoadHandler, To)()
  name.vb: MapEnums(Of TableRowLoadHandler, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TableRowLoadHandler, To>
    nameWithType: EnumUtil.MapEnums<TableRowLoadHandler, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.TableRowLoadHandler, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TableRowLoadHandler, To)
    nameWithType: EnumUtil.MapEnums(Of TableRowLoadHandler, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.TableRowLoadHandler, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TableRowLoadHandler, To>()
  nameWithType: Converters.MapEnums<TableRowLoadHandler, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.TableRowLoadHandler, To>()
  nameWithType.vb: Converters.MapEnums(Of TableRowLoadHandler, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.TableRowLoadHandler, To)()
  name.vb: MapEnums(Of TableRowLoadHandler, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TableRowLoadHandler, To>
    nameWithType: Converters.MapEnums<TableRowLoadHandler, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.TableRowLoadHandler, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TableRowLoadHandler, To)
    nameWithType: Converters.MapEnums(Of TableRowLoadHandler, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.TableRowLoadHandler, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.TableRowLoadHandler.#ctor
  isExternal: true
  name: TableRowLoadHandler
  nameWithType: TableRowLoadHandler.TableRowLoadHandler
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.TableRowLoadHandler
- uid: SuperOffice.Data.SQL.FieldInfo[]
  isExternal: true
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: SuperOffice.Data.SQL.FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: SuperOffice.Data.SQL.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad*
  commentId: Overload:SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoad
  isExternal: true
  name: ITableRowLoadHandler.OnRowLoad
  nameWithType: TableRowLoadHandler.ITableRowLoadHandler.OnRowLoad
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad
  nameWithType.vb: TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad
  name.vb: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad
- uid: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  commentId: M:SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
  parent: SuperOffice.CRM.Rows.ITableRowLoadHandler
  isExternal: true
  name: OnRowLoad(SoDataReader, TableRowBase)
  nameWithType: ITableRowLoadHandler.OnRowLoad(SoDataReader, TableRowBase)
  fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Rows.TableRowBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
    name: OnRowLoad
    nameWithType: ITableRowLoadHandler.OnRowLoad
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.TableRowBase
    name: TableRowBase
    nameWithType: TableRowBase
    fullName: SuperOffice.CRM.Rows.TableRowBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Rows.TableRowBase)
    name: OnRowLoad
    nameWithType: ITableRowLoadHandler.OnRowLoad
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.TableRowBase
    name: TableRowBase
    nameWithType: TableRowBase
    fullName: SuperOffice.CRM.Rows.TableRowBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded*
  commentId: Overload:SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice#CRM#Rows#ITableRowLoadHandler#OnRowLoaded
  isExternal: true
  name: ITableRowLoadHandler.OnRowLoaded
  nameWithType: TableRowLoadHandler.ITableRowLoadHandler.OnRowLoaded
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
  nameWithType.vb: TableRowLoadHandler.SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
  name.vb: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
- uid: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
  commentId: M:SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
  parent: SuperOffice.CRM.Rows.ITableRowLoadHandler
  isExternal: true
  name: OnRowLoaded()
  nameWithType: ITableRowLoadHandler.OnRowLoaded()
  fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
    name: OnRowLoaded
    nameWithType: ITableRowLoadHandler.OnRowLoaded
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
    name: OnRowLoaded
    nameWithType: ITableRowLoadHandler.OnRowLoaded
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler.OnRowLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowLoadHandler.Item*
  commentId: Overload:SuperOffice.CRM.Rows.TableRowLoadHandler.Item
  isExternal: true
  name: Item
  nameWithType: TableRowLoadHandler.Item
  fullName: SuperOffice.CRM.Rows.TableRowLoadHandler.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.FieldInfo,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.FieldInfo,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<FieldInfo, Object>
  nameWithType: Dictionary<FieldInfo, Object>
  fullName: System.Collections.Generic.Dictionary<SuperOffice.Data.SQL.FieldInfo, System.Object>
  nameWithType.vb: Dictionary(Of FieldInfo, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of SuperOffice.Data.SQL.FieldInfo, System.Object)
  name.vb: Dictionary(Of FieldInfo, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
