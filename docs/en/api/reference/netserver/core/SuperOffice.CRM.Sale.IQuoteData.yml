### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Sale.IQuoteData
  commentId: T:SuperOffice.CRM.Sale.IQuoteData
  id: IQuoteData
  parent: SuperOffice.CRM.Sale
  children:
  - SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo,System.Boolean)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteVersionContextInfo)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache
  - SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync(SuperOffice.CRM.Sale.IQuoteManager,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.ContactInfo
  - SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine(System.Int32)
  - SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.DeleteQuote(System.Int32)
  - SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync(System.Int32)
  - SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync(System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.InitializeAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.IsDeleted
  - SuperOffice.CRM.Sale.IQuoteData.IsDirty
  - SuperOffice.CRM.Sale.IQuoteData.PersonInfo
  - SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.QuoteAlternativeInfo)
  - SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow(SuperOffice.CRM.Rows.QuoteLineRow,SuperOffice.CRM.QuoteLineInfo)
  - SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow(SuperOffice.CRM.Rows.QuoteRow,SuperOffice.CRM.QuoteInfo)
  - SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo)
  - SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo,System.Boolean)
  - SuperOffice.CRM.Sale.IQuoteData.ProjectInfo
  - SuperOffice.CRM.Sale.IQuoteData.QuoteRow
  - SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.SaleInfo
  - SuperOffice.CRM.Sale.IQuoteData.SaleRow
  - SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow)
  - SuperOffice.CRM.Sale.IQuoteData.SaveAsync
  - SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync(System.Int32,SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync(SuperOffice.CRM.QuoteLineInfo,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.AddressInfo,SuperOffice.Data.AddressType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(System.Int32,SuperOffice.CRM.Rows.AddressRow,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync(SuperOffice.CRM.QuoteLineInfo,SuperOffice.Data.BlobLinkType,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Sale.IQuoteData.UserInfo
  langs:
  - csharp
  - vb
  name: IQuoteData
  nameWithType: IQuoteData
  fullName: SuperOffice.CRM.Sale.IQuoteData
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: public interface IQuoteData
    content.vb: Public Interface IQuoteData
  extensionMethods:
  - SuperOffice.CRM.Sale.IQuoteData.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Sale.IQuoteData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync(System.Threading.CancellationToken)
  id: GetActiveQuoteVersionRowAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetActiveQuoteVersionRowAsync(CancellationToken)
  nameWithType: IQuoteData.GetActiveQuoteVersionRowAsync(CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> GetActiveQuoteVersionRowAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function GetActiveQuoteVersionRowAsync(cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync(System.Threading.CancellationToken)
  id: GetAllRowObjectsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetAllRowObjectsAsync(CancellationToken)
  nameWithType: IQuoteData.GetAllRowObjectsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: IAsyncEnumerable<TableRowBase> GetAllRowObjectsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.TableRowBase}
    content.vb: Function GetAllRowObjectsAsync(cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of TableRowBase)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync(System.Threading.CancellationToken)
  id: GetQuoteVersionsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetQuoteVersionsAsync(CancellationToken)
  nameWithType: IQuoteData.GetQuoteVersionsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<Dictionary<QuoteVersionRow, List<QuoteAlternativeRow>>> GetQuoteVersionsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}}
    content.vb: Function GetQuoteVersionsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Dictionary(Of QuoteVersionRow, List(Of QuoteAlternativeRow)))
  overload: SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync(System.Threading.CancellationToken)
  id: GetVersionAttachmentRowsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetVersionAttachmentRowsAsync(CancellationToken)
  nameWithType: IQuoteData.GetVersionAttachmentRowsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<Dictionary<QuoteVersionRow, QuoteVersionAttachmentRows>> GetVersionAttachmentRowsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionAttachmentRows}}
    content.vb: Function GetVersionAttachmentRowsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Dictionary(Of QuoteVersionRow, QuoteVersionAttachmentRows))
  overload: SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  id: AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: AddQuoteAlternativeAsync(QuoteVersionRow, CancellationToken)
  nameWithType: IQuoteData.AddQuoteAlternativeAsync(QuoteVersionRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> AddQuoteAlternativeAsync(QuoteVersionRow quoteVersionRow, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function AddQuoteAlternativeAsync(quoteVersionRow As QuoteVersionRow, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  id: AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: AddQuoteAlternativeAsync(QuoteVersionRow, QuoteAlternativeRow, CancellationToken)
  nameWithType: IQuoteData.AddQuoteAlternativeAsync(QuoteVersionRow, QuoteAlternativeRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.Rows.QuoteAlternativeRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> AddQuoteAlternativeAsync(QuoteVersionRow quoteVersionRow, QuoteAlternativeRow quoteAlternativeRow, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: quoteAlternativeRow
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function AddQuoteAlternativeAsync(quoteVersionRow As QuoteVersionRow, quoteAlternativeRow As QuoteAlternativeRow, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(System.Threading.CancellationToken)
  id: AddQuoteVersionAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: AddQuoteVersionAsync(CancellationToken)
  nameWithType: IQuoteData.AddQuoteVersionAsync(CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> AddQuoteVersionAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function AddQuoteVersionAsync(cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  id: AddQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: AddQuoteVersionAsync(QuoteVersionRow, CancellationToken)
  nameWithType: IQuoteData.AddQuoteVersionAsync(QuoteVersionRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> AddQuoteVersionAsync(QuoteVersionRow quoteVersionRow, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function AddQuoteVersionAsync(quoteVersionRow As QuoteVersionRow, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo)
  id: ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuote(QuoteInfo)
  nameWithType: IQuoteData.ApplyErpChangesToQuote(QuoteInfo)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: bool ApplyErpChangesToQuote(QuoteInfo quoteInfo)
    parameters:
    - id: quoteInfo
      type: SuperOffice.CRM.QuoteInfo
    return:
      type: System.Boolean
    content.vb: Function ApplyErpChangesToQuote(quoteInfo As QuoteInfo) As Boolean
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo,System.Boolean)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo,System.Boolean)
  id: ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo,System.Boolean)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuote(QuoteInfo, Boolean)
  nameWithType: IQuoteData.ApplyErpChangesToQuote(QuoteInfo, Boolean)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteInfo, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: bool ApplyErpChangesToQuote(QuoteInfo quoteInfo, bool ignoreSentry)
    parameters:
    - id: quoteInfo
      type: SuperOffice.CRM.QuoteInfo
    - id: ignoreSentry
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Function ApplyErpChangesToQuote(quoteInfo As QuoteInfo, ignoreSentry As Boolean) As Boolean
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteVersionContextInfo)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteVersionContextInfo)
  id: ApplyErpChangesToQuote(SuperOffice.CRM.QuoteVersionContextInfo)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuote(QuoteVersionContextInfo)
  nameWithType: IQuoteData.ApplyErpChangesToQuote(QuoteVersionContextInfo)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote(SuperOffice.CRM.QuoteVersionContextInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: bool ApplyErpChangesToQuote(QuoteVersionContextInfo quoteVersionContextInfo)
    parameters:
    - id: quoteVersionContextInfo
      type: SuperOffice.CRM.QuoteVersionContextInfo
    return:
      type: System.Boolean
    content.vb: Function ApplyErpChangesToQuote(quoteVersionContextInfo As QuoteVersionContextInfo) As Boolean
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeContextInfo, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeContextInfo, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeContextInfo quoteContextInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteContextInfo
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteAlternativeAsync(quoteContextInfo As QuoteAlternativeContextInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeInfo, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeInfo, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeInfo quoteAlternativeInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteAlternativeInfo
      type: SuperOffice.CRM.QuoteAlternativeInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteAlternativeAsync(quoteAlternativeInfo As QuoteAlternativeInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Boolean,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeInfo, Boolean, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeInfo, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync(SuperOffice.CRM.QuoteAlternativeInfo, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteAlternativeAsync(QuoteAlternativeInfo quoteAlternativeInfo, bool ignoreSentry, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteAlternativeInfo
      type: SuperOffice.CRM.QuoteAlternativeInfo
    - id: ignoreSentry
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteAlternativeAsync(quoteAlternativeInfo As QuoteAlternativeInfo, ignoreSentry As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteAlternativeContextInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteVersionAsync(QuoteAlternativeContextInfo, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteVersionAsync(QuoteAlternativeContextInfo, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteAlternativeContextInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteVersionAsync(QuoteAlternativeContextInfo quoteAlternativeContextInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteAlternativeContextInfo
      type: SuperOffice.CRM.QuoteAlternativeContextInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteVersionAsync(quoteAlternativeContextInfo As QuoteAlternativeContextInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteVersionAsync(QuoteVersionContextInfo, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteVersionAsync(QuoteVersionContextInfo, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionContextInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteVersionAsync(QuoteVersionContextInfo quoteContextInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteContextInfo
      type: SuperOffice.CRM.QuoteVersionContextInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteVersionAsync(quoteContextInfo As QuoteVersionContextInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteVersionAsync(QuoteVersionInfo, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteVersionAsync(QuoteVersionInfo, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteVersionAsync(QuoteVersionInfo quoteVersionInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionInfo
      type: SuperOffice.CRM.QuoteVersionInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteVersionAsync(quoteVersionInfo As QuoteVersionInfo, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Boolean,System.Threading.CancellationToken)
  id: ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ApplyErpChangesToQuoteVersionAsync(QuoteVersionInfo, Boolean, CancellationToken)
  nameWithType: IQuoteData.ApplyErpChangesToQuoteVersionAsync(QuoteVersionInfo, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync(SuperOffice.CRM.QuoteVersionInfo, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<bool> ApplyErpChangesToQuoteVersionAsync(QuoteVersionInfo quoteVersionInfo, bool ignoreSentry, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionInfo
      type: SuperOffice.CRM.QuoteVersionInfo
    - id: ignoreSentry
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function ApplyErpChangesToQuoteVersionAsync(quoteVersionInfo As QuoteVersionInfo, ignoreSentry As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache
  id: ClearQuoteLineCache
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ClearQuoteLineCache()
  nameWithType: IQuoteData.ClearQuoteLineCache()
  fullName: SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: void ClearQuoteLineCache()
    content.vb: Sub ClearQuoteLineCache
  overload: SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache*
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  id: CloneQuoteAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CloneQuoteAlternativesAsync(QuoteVersionRow, QuoteVersionRow, List<QuoteAlternativeRow>, CancellationToken)
  nameWithType: IQuoteData.CloneQuoteAlternativesAsync(QuoteVersionRow, QuoteVersionRow, List<QuoteAlternativeRow>, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.Rows.QuoteVersionRow, System.Collections.Generic.List<SuperOffice.CRM.Rows.QuoteAlternativeRow>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task CloneQuoteAlternativesAsync(QuoteVersionRow existingQuoteVersionRow, QuoteVersionRow newQuoteVersionRow, List<QuoteAlternativeRow> existingQuoteAlternativeRows, CancellationToken cancellationToken = null)
    parameters:
    - id: existingQuoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: newQuoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: existingQuoteAlternativeRows
      type: System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CloneQuoteAlternativesAsync(existingQuoteVersionRow As QuoteVersionRow, newQuoteVersionRow As QuoteVersionRow, existingQuoteAlternativeRows As List(Of QuoteAlternativeRow), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync*
  nameWithType.vb: IQuoteData.CloneQuoteAlternativesAsync(QuoteVersionRow, QuoteVersionRow, List(Of QuoteAlternativeRow), CancellationToken)
  fullName.vb: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.Rows.QuoteVersionRow, System.Collections.Generic.List(Of SuperOffice.CRM.Rows.QuoteAlternativeRow), System.Threading.CancellationToken)
  name.vb: CloneQuoteAlternativesAsync(QuoteVersionRow, QuoteVersionRow, List(Of QuoteAlternativeRow), CancellationToken)
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync(SuperOffice.CRM.Sale.IQuoteManager,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync(SuperOffice.CRM.Sale.IQuoteManager,System.Threading.CancellationToken)
  id: CloneQuoteAsync(SuperOffice.CRM.Sale.IQuoteManager,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CloneQuoteAsync(IQuoteManager, CancellationToken)
  nameWithType: IQuoteData.CloneQuoteAsync(IQuoteManager, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync(SuperOffice.CRM.Sale.IQuoteManager, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task CloneQuoteAsync(IQuoteManager copyFromQuoteManager, CancellationToken cancellationToken = null)
    parameters:
    - id: copyFromQuoteManager
      type: SuperOffice.CRM.Sale.IQuoteManager
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function CloneQuoteAsync(copyFromQuoteManager As IQuoteManager, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  id: CloneQuoteLineRowsAsync(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.Rows.QuoteAlternativeRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CloneQuoteLineRowsAsync(QuoteAlternativeRow, QuoteAlternativeRow, CancellationToken)
  nameWithType: IQuoteData.CloneQuoteLineRowsAsync(QuoteAlternativeRow, QuoteAlternativeRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync(SuperOffice.CRM.Rows.QuoteAlternativeRow, SuperOffice.CRM.Rows.QuoteAlternativeRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteLineRows> CloneQuoteLineRowsAsync(QuoteAlternativeRow existingAlternativeRow, QuoteAlternativeRow newAlternativeRow, CancellationToken cancellationToken = null)
    parameters:
    - id: existingAlternativeRow
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
    - id: newAlternativeRow
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRows}
    content.vb: Function CloneQuoteLineRowsAsync(existingAlternativeRow As QuoteAlternativeRow, newAlternativeRow As QuoteAlternativeRow, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteLineRows)
  overload: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  id: CloneQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CloneQuoteVersionAsync(QuoteVersionRow, CancellationToken)
  nameWithType: IQuoteData.CloneQuoteVersionAsync(QuoteVersionRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> CloneQuoteVersionAsync(QuoteVersionRow existingQuoteVersionRow, CancellationToken cancellationToken = null)
    parameters:
    - id: existingQuoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function CloneQuoteVersionAsync(existingQuoteVersionRow As QuoteVersionRow, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CopyQuoteAlternativeAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CopyQuoteAlternativeAsync(Int32, Int32, CancellationToken)
  nameWithType: IQuoteData.CopyQuoteAlternativeAsync(Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync(System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> CopyQuoteAlternativeAsync(int quoteVersionId, int copyFromQuoteAlternativeId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: copyFromQuoteAlternativeId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function CopyQuoteAlternativeAsync(quoteVersionId As Integer, copyFromQuoteAlternativeId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: CreateQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CreateQuoteAlternativeAsync(Int32, String, CancellationToken)
  nameWithType: IQuoteData.CreateQuoteAlternativeAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> CreateQuoteAlternativeAsync(int quoteVersionId, string alternativeName, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: alternativeName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function CreateQuoteAlternativeAsync(quoteVersionId As Integer, alternativeName As String, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.String,System.Threading.CancellationToken)
  id: CreateQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CreateQuoteAlternativeAsync(QuoteVersionRow, String, CancellationToken)
  nameWithType: IQuoteData.CreateQuoteAlternativeAsync(QuoteVersionRow, String, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> CreateQuoteAlternativeAsync(QuoteVersionRow quoteVersionRow, string alternativeName, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: alternativeName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function CreateQuoteAlternativeAsync(quoteVersionRow As QuoteVersionRow, alternativeName As String, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine(System.Int32)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine(System.Int32)
  id: CreateQuoteLine(System.Int32)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CreateQuoteLine(Int32)
  nameWithType: IQuoteData.CreateQuoteLine(Int32)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteLineRow CreateQuoteLine(int quoteAlternativeId)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.QuoteLineRow
    content.vb: Function CreateQuoteLine(quoteAlternativeId As Integer) As QuoteLineRow
  overload: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine*
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync(System.String,System.Threading.CancellationToken)
  id: CreateQuoteVersionAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CreateQuoteVersionAsync(String, CancellationToken)
  nameWithType: IQuoteData.CreateQuoteVersionAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> CreateQuoteVersionAsync(string firstAlternativeName, CancellationToken cancellationToken = null)
    parameters:
    - id: firstAlternativeName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function CreateQuoteVersionAsync(firstAlternativeName As String, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  id: CreateQuoteVersionCopyAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: CreateQuoteVersionCopyAsync(QuoteVersionRow, List<QuoteAlternativeRow>, CancellationToken)
  nameWithType: IQuoteData.CreateQuoteVersionCopyAsync(QuoteVersionRow, List<QuoteAlternativeRow>, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Collections.Generic.List<SuperOffice.CRM.Rows.QuoteAlternativeRow>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> CreateQuoteVersionCopyAsync(QuoteVersionRow existingQuoteVersionRow, List<QuoteAlternativeRow> existingQuoteAlternativeRows, CancellationToken cancellationToken = null)
    parameters:
    - id: existingQuoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: existingQuoteAlternativeRows
      type: System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function CreateQuoteVersionCopyAsync(existingQuoteVersionRow As QuoteVersionRow, existingQuoteAlternativeRows As List(Of QuoteAlternativeRow), cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync*
  nameWithType.vb: IQuoteData.CreateQuoteVersionCopyAsync(QuoteVersionRow, List(Of QuoteAlternativeRow), CancellationToken)
  fullName.vb: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Collections.Generic.List(Of SuperOffice.CRM.Rows.QuoteAlternativeRow), System.Threading.CancellationToken)
  name.vb: CreateQuoteVersionCopyAsync(QuoteVersionRow, List(Of QuoteAlternativeRow), CancellationToken)
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuote(System.Int32)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.DeleteQuote(System.Int32)
  id: DeleteQuote(System.Int32)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: DeleteQuote(Int32)
  nameWithType: IQuoteData.DeleteQuote(Int32)
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuote(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: void DeleteQuote(int quoteId)
    parameters:
    - id: quoteId
      type: System.Int32
    content.vb: Sub DeleteQuote(quoteId As Integer)
  overload: SuperOffice.CRM.Sale.IQuoteData.DeleteQuote*
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync(System.Int32)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync(System.Int32)
  id: DeleteQuoteAlternativeAsync(System.Int32)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: DeleteQuoteAlternativeAsync(Int32)
  nameWithType: IQuoteData.DeleteQuoteAlternativeAsync(Int32)
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task DeleteQuoteAlternativeAsync(int quoteAlternativeId)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteQuoteAlternativeAsync(quoteAlternativeId As Integer) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteQuoteLineAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: DeleteQuoteLineAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.DeleteQuoteLineAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task DeleteQuoteLineAsync(int quoteLineId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteLineId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteQuoteLineAsync(quoteLineId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  id: DeleteQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: DeleteQuoteLineRowAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.DeleteQuoteLineRowAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task DeleteQuoteLineRowAsync(int quoteLineId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteLineId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function DeleteQuoteLineRowAsync(quoteLineId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync(System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync(System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Threading.CancellationToken)
  id: DetectErpQuoteLineChangesAsync(System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo},System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: DetectErpQuoteLineChangesAsync(List<QuoteLineInfo>, List<QuoteLineInfo>, CancellationToken)
  nameWithType: IQuoteData.DetectErpQuoteLineChangesAsync(List<QuoteLineInfo>, List<QuoteLineInfo>, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync(System.Collections.Generic.List<SuperOffice.CRM.QuoteLineInfo>, System.Collections.Generic.List<SuperOffice.CRM.QuoteLineInfo>, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRecalculatedHelper> DetectErpQuoteLineChangesAsync(List<QuoteLineInfo> quoteLineInfosBefore, List<QuoteLineInfo> quoteLineInfosAfter, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteLineInfosBefore
      type: System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo}
    - id: quoteLineInfosAfter
      type: System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo}
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper}
    content.vb: Function DetectErpQuoteLineChangesAsync(quoteLineInfosBefore As List(Of QuoteLineInfo), quoteLineInfosAfter As List(Of QuoteLineInfo), cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRecalculatedHelper)
  overload: SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync*
  nameWithType.vb: IQuoteData.DetectErpQuoteLineChangesAsync(List(Of QuoteLineInfo), List(Of QuoteLineInfo), CancellationToken)
  fullName.vb: SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync(System.Collections.Generic.List(Of SuperOffice.CRM.QuoteLineInfo), System.Collections.Generic.List(Of SuperOffice.CRM.QuoteLineInfo), System.Threading.CancellationToken)
  name.vb: DetectErpQuoteLineChangesAsync(List(Of QuoteLineInfo), List(Of QuoteLineInfo), CancellationToken)
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAlternativeRowAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetAlternativeRowAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetAlternativeRowAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> GetAlternativeRowAsync(int alternativeId, CancellationToken cancellationToken = null)
    parameters:
    - id: alternativeId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function GetAlternativeRowAsync(alternativeId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetAlternativeRowsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetAlternativeRowsAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetAlternativeRowsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<List<QuoteAlternativeRow>> GetAlternativeRowsAsync(int quoteVersionId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}
    content.vb: Function GetAlternativeRowsAsync(quoteVersionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of QuoteAlternativeRow))
  overload: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  id: GetAlternativeRowsAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetAlternativeRowsAsync(QuoteVersionRow, CancellationToken)
  nameWithType: IQuoteData.GetAlternativeRowsAsync(QuoteVersionRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<List<QuoteAlternativeRow>> GetAlternativeRowsAsync(QuoteVersionRow quoteVersionRow, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}
    content.vb: Function GetAlternativeRowsAsync(quoteVersionRow As QuoteVersionRow, cancellationToken As CancellationToken = Nothing) As Task(Of List(Of QuoteAlternativeRow))
  overload: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync(System.Int32,System.Threading.CancellationToken)
  id: GetBillingAddressAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetBillingAddressAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetBillingAddressAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<AddressRow> GetBillingAddressAsync(int quoteVersionId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AddressRow}
    content.vb: Function GetBillingAddressAsync(quoteVersionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AddressRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  id: GetLikelyAlternativeRowAsync(SuperOffice.CRM.Rows.QuoteVersionRow,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetLikelyAlternativeRowAsync(QuoteVersionRow, CancellationToken)
  nameWithType: IQuoteData.GetLikelyAlternativeRowAsync(QuoteVersionRow, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync(SuperOffice.CRM.Rows.QuoteVersionRow, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteAlternativeRow> GetLikelyAlternativeRowAsync(QuoteVersionRow quoteVersionRow, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
    content.vb: Function GetLikelyAlternativeRowAsync(quoteVersionRow As QuoteVersionRow, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteAlternativeRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  id: GetQuoteLineRowAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetQuoteLineRowAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetQuoteLineRowAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteLineRow> GetQuoteLineRowAsync(int quoteLineId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteLineId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRow}
    content.vb: Function GetQuoteLineRowAsync(quoteLineId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteLineRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync(System.Int32,System.Threading.CancellationToken)
  id: GetQuoteLineRowsAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetQuoteLineRowsAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetQuoteLineRowsAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteLineRows> GetQuoteLineRowsAsync(int quoteAlternativeId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRows}
    content.vb: Function GetQuoteLineRowsAsync(quoteAlternativeId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteLineRows)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync(System.Int32,System.Threading.CancellationToken)
  id: GetShippingAddressAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetShippingAddressAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetShippingAddressAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<AddressRow> GetShippingAddressAsync(int quoteVersionId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AddressRow}
    content.vb: Function GetShippingAddressAsync(quoteVersionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of AddressRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync(System.Int32,System.Threading.CancellationToken)
  id: GetVersionRowAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: GetVersionRowAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.GetVersionRowAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteVersionRow> GetVersionRowAsync(int quoteVersionId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
    content.vb: Function GetVersionRowAsync(quoteVersionId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteVersionRow)
  overload: SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.QuoteAlternativeInfo)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.QuoteAlternativeInfo)
  id: PopulateQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow,SuperOffice.CRM.QuoteAlternativeInfo)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: PopulateQuoteAlternativeRow(QuoteAlternativeRow, QuoteAlternativeInfo)
  nameWithType: IQuoteData.PopulateQuoteAlternativeRow(QuoteAlternativeRow, QuoteAlternativeInfo)
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow(SuperOffice.CRM.Rows.QuoteAlternativeRow, SuperOffice.CRM.QuoteAlternativeInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteAlternativeRow PopulateQuoteAlternativeRow(QuoteAlternativeRow quoteAlternativeRow, QuoteAlternativeInfo quoteAlternative)
    parameters:
    - id: quoteAlternativeRow
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
    - id: quoteAlternative
      type: SuperOffice.CRM.QuoteAlternativeInfo
    return:
      type: SuperOffice.CRM.Rows.QuoteAlternativeRow
    content.vb: Function PopulateQuoteAlternativeRow(quoteAlternativeRow As QuoteAlternativeRow, quoteAlternative As QuoteAlternativeInfo) As QuoteAlternativeRow
  overload: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow*
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow(SuperOffice.CRM.Rows.QuoteLineRow,SuperOffice.CRM.QuoteLineInfo)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow(SuperOffice.CRM.Rows.QuoteLineRow,SuperOffice.CRM.QuoteLineInfo)
  id: PopulateQuoteLineRow(SuperOffice.CRM.Rows.QuoteLineRow,SuperOffice.CRM.QuoteLineInfo)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: PopulateQuoteLineRow(QuoteLineRow, QuoteLineInfo)
  nameWithType: IQuoteData.PopulateQuoteLineRow(QuoteLineRow, QuoteLineInfo)
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow(SuperOffice.CRM.Rows.QuoteLineRow, SuperOffice.CRM.QuoteLineInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteLineRow PopulateQuoteLineRow(QuoteLineRow quoteLineRow, QuoteLineInfo quoteLine)
    parameters:
    - id: quoteLineRow
      type: SuperOffice.CRM.Rows.QuoteLineRow
    - id: quoteLine
      type: SuperOffice.CRM.QuoteLineInfo
    return:
      type: SuperOffice.CRM.Rows.QuoteLineRow
    content.vb: Function PopulateQuoteLineRow(quoteLineRow As QuoteLineRow, quoteLine As QuoteLineInfo) As QuoteLineRow
  overload: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow*
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow(SuperOffice.CRM.Rows.QuoteRow,SuperOffice.CRM.QuoteInfo)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow(SuperOffice.CRM.Rows.QuoteRow,SuperOffice.CRM.QuoteInfo)
  id: PopulateQuoteRow(SuperOffice.CRM.Rows.QuoteRow,SuperOffice.CRM.QuoteInfo)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: PopulateQuoteRow(QuoteRow, QuoteInfo)
  nameWithType: IQuoteData.PopulateQuoteRow(QuoteRow, QuoteInfo)
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow(SuperOffice.CRM.Rows.QuoteRow, SuperOffice.CRM.QuoteInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteRow PopulateQuoteRow(QuoteRow quoteRow, QuoteInfo quoteInfo)
    parameters:
    - id: quoteRow
      type: SuperOffice.CRM.Rows.QuoteRow
    - id: quoteInfo
      type: SuperOffice.CRM.QuoteInfo
    return:
      type: SuperOffice.CRM.Rows.QuoteRow
    content.vb: Function PopulateQuoteRow(quoteRow As QuoteRow, quoteInfo As QuoteInfo) As QuoteRow
  overload: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow*
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo)
  id: PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: PopulateQuoteVersionRow(QuoteVersionRow, QuoteVersionInfo)
  nameWithType: IQuoteData.PopulateQuoteVersionRow(QuoteVersionRow, QuoteVersionInfo)
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.QuoteVersionInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteVersionRow PopulateQuoteVersionRow(QuoteVersionRow quoteVersionRow, QuoteVersionInfo quoteVersionInfo)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: quoteVersionInfo
      type: SuperOffice.CRM.QuoteVersionInfo
    return:
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    content.vb: Function PopulateQuoteVersionRow(quoteVersionRow As QuoteVersionRow, quoteVersionInfo As QuoteVersionInfo) As QuoteVersionRow
  overload: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow*
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo,System.Boolean)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo,System.Boolean)
  id: PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.QuoteVersionInfo,System.Boolean)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: PopulateQuoteVersionRow(QuoteVersionRow, QuoteVersionInfo, Boolean)
  nameWithType: IQuoteData.PopulateQuoteVersionRow(QuoteVersionRow, QuoteVersionInfo, Boolean)
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow(SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.QuoteVersionInfo, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteVersionRow PopulateQuoteVersionRow(QuoteVersionRow quoteVersionRow, QuoteVersionInfo quoteVersionInfo, bool ignorNumberField)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: quoteVersionInfo
      type: SuperOffice.CRM.QuoteVersionInfo
    - id: ignorNumberField
      type: System.Boolean
    return:
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    content.vb: Function PopulateQuoteVersionRow(quoteVersionRow As QuoteVersionRow, quoteVersionInfo As QuoteVersionInfo, ignorNumberField As Boolean) As QuoteVersionRow
  overload: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow*
- uid: SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: RenameQuoteAlternativeAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: RenameQuoteAlternativeAsync(Int32, String, CancellationToken)
  nameWithType: IQuoteData.RenameQuoteAlternativeAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task RenameQuoteAlternativeAsync(int quoteAlternativeId, string newName, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
    - id: newName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RenameQuoteAlternativeAsync(quoteAlternativeId As Integer, newName As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow)
  id: SaveAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SaveAlternativesAsync(QuoteVersionRow)
  nameWithType: IQuoteData.SaveAlternativesAsync(QuoteVersionRow)
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync(SuperOffice.CRM.Rows.QuoteVersionRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task SaveAlternativesAsync(QuoteVersionRow versionRow)
    parameters:
    - id: versionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveAlternativesAsync(versionRow As QuoteVersionRow) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveAsync
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SaveAsync
  id: SaveAsync
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SaveAsync()
  nameWithType: IQuoteData.SaveAsync()
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveAsync()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task SaveAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveAsync As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.SaveAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync(System.Int32,SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync(System.Int32,SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper,System.Threading.CancellationToken)
  id: SaveErpQuoteLineChangesAsync(System.Int32,SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SaveErpQuoteLineChangesAsync(Int32, QuoteAlternativeRecalculatedHelper, CancellationToken)
  nameWithType: IQuoteData.SaveErpQuoteLineChangesAsync(Int32, QuoteAlternativeRecalculatedHelper, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync(System.Int32, SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task SaveErpQuoteLineChangesAsync(int quoteAlternativeId, QuoteAlternativeRecalculatedHelper i_quoteAlternativeRecalculatedHelper, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteAlternativeId
      type: System.Int32
    - id: i_quoteAlternativeRecalculatedHelper
      type: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SaveErpQuoteLineChangesAsync(quoteAlternativeId As Integer, i_quoteAlternativeRecalculatedHelper As QuoteAlternativeRecalculatedHelper, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync(SuperOffice.CRM.QuoteLineInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync(SuperOffice.CRM.QuoteLineInfo,System.String,System.Threading.CancellationToken)
  id: SaveQuoteLineAsync(SuperOffice.CRM.QuoteLineInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SaveQuoteLineAsync(QuoteLineInfo, String, CancellationToken)
  nameWithType: IQuoteData.SaveQuoteLineAsync(QuoteLineInfo, String, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync(SuperOffice.CRM.QuoteLineInfo, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task<QuoteLineInfo> SaveQuoteLineAsync(QuoteLineInfo quoteLine, string strImage, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteLine
      type: SuperOffice.CRM.QuoteLineInfo
    - id: strImage
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteLineInfo}
    content.vb: Function SaveQuoteLineAsync(quoteLine As QuoteLineInfo, strImage As String, cancellationToken As CancellationToken = Nothing) As Task(Of QuoteLineInfo)
  overload: SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(System.Int32,SuperOffice.CRM.Rows.AddressRow,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(System.Int32,SuperOffice.CRM.Rows.AddressRow,System.Int32,System.Threading.CancellationToken)
  id: SetOwnAddressAsync(System.Int32,SuperOffice.CRM.Rows.AddressRow,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SetOwnAddressAsync(Int32, AddressRow, Int32, CancellationToken)
  nameWithType: IQuoteData.SetOwnAddressAsync(Int32, AddressRow, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(System.Int32, SuperOffice.CRM.Rows.AddressRow, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task SetOwnAddressAsync(int quoteVersionId, AddressRow addressRow, int countryId, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionId
      type: System.Int32
    - id: addressRow
      type: SuperOffice.CRM.Rows.AddressRow
    - id: countryId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetOwnAddressAsync(quoteVersionId As Integer, addressRow As AddressRow, countryId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.AddressInfo,SuperOffice.Data.AddressType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.AddressInfo,SuperOffice.Data.AddressType,System.Threading.CancellationToken)
  id: SetOwnAddressAsync(SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.AddressInfo,SuperOffice.Data.AddressType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SetOwnAddressAsync(QuoteVersionRow, AddressInfo, AddressType, CancellationToken)
  nameWithType: IQuoteData.SetOwnAddressAsync(QuoteVersionRow, AddressInfo, AddressType, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync(SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.AddressInfo, SuperOffice.Data.AddressType, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task SetOwnAddressAsync(QuoteVersionRow quoteVersionRow, AddressInfo addressInfo, AddressType addressType, CancellationToken cancellationToken = null)
    parameters:
    - id: quoteVersionRow
      type: SuperOffice.CRM.Rows.QuoteVersionRow
    - id: addressInfo
      type: SuperOffice.CRM.AddressInfo
    - id: addressType
      type: SuperOffice.Data.AddressType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetOwnAddressAsync(quoteVersionRow As QuoteVersionRow, addressInfo As AddressInfo, addressType As AddressType, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync(SuperOffice.CRM.QuoteLineInfo,SuperOffice.Data.BlobLinkType,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync(SuperOffice.CRM.QuoteLineInfo,SuperOffice.Data.BlobLinkType,System.String,System.String,System.Threading.CancellationToken)
  id: SetQuoteLineImageAsync(SuperOffice.CRM.QuoteLineInfo,SuperOffice.Data.BlobLinkType,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SetQuoteLineImageAsync(QuoteLineInfo, BlobLinkType, String, String, CancellationToken)
  nameWithType: IQuoteData.SetQuoteLineImageAsync(QuoteLineInfo, BlobLinkType, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync(SuperOffice.CRM.QuoteLineInfo, SuperOffice.Data.BlobLinkType, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task SetQuoteLineImageAsync(QuoteLineInfo quoteLineInfo, BlobLinkType blobLinkType, string base64String, string conceptualType, CancellationToken cancellationToken)
    parameters:
    - id: quoteLineInfo
      type: SuperOffice.CRM.QuoteLineInfo
    - id: blobLinkType
      type: SuperOffice.Data.BlobLinkType
    - id: base64String
      type: System.String
    - id: conceptualType
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetQuoteLineImageAsync(quoteLineInfo As QuoteLineInfo, blobLinkType As BlobLinkType, base64String As String, conceptualType As String, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.InitializeAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Sale.IQuoteData.InitializeAsync(System.Int32,System.Threading.CancellationToken)
  id: InitializeAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: InitializeAsync(Int32, CancellationToken)
  nameWithType: IQuoteData.InitializeAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Sale.IQuoteData.InitializeAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: Task InitializeAsync(int saleId, CancellationToken cancellationToken = null)
    parameters:
    - id: saleId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function InitializeAsync(saleId As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Sale.IQuoteData.InitializeAsync*
- uid: SuperOffice.CRM.Sale.IQuoteData.ContactInfo
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.ContactInfo
  id: ContactInfo
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ContactInfo
  nameWithType: IQuoteData.ContactInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.ContactInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: IContactInfo ContactInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.IContactInfo
    content.vb: ReadOnly Property ContactInfo As IContactInfo
  overload: SuperOffice.CRM.Sale.IQuoteData.ContactInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.IsDeleted
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.IsDeleted
  id: IsDeleted
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: IQuoteData.IsDeleted
  fullName: SuperOffice.CRM.Sale.IQuoteData.IsDeleted
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDeleted As Boolean
  overload: SuperOffice.CRM.Sale.IQuoteData.IsDeleted*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.IsDirty
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: IQuoteData.IsDirty
  fullName: SuperOffice.CRM.Sale.IQuoteData.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsDirty As Boolean
  overload: SuperOffice.CRM.Sale.IQuoteData.IsDirty*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.PersonInfo
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.PersonInfo
  id: PersonInfo
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: PersonInfo
  nameWithType: IQuoteData.PersonInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.PersonInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: IPersonInfo PersonInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.IPersonInfo
    content.vb: ReadOnly Property PersonInfo As IPersonInfo
  overload: SuperOffice.CRM.Sale.IQuoteData.PersonInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.ProjectInfo
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.ProjectInfo
  id: ProjectInfo
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: ProjectInfo
  nameWithType: IQuoteData.ProjectInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.ProjectInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: IProjectInfo ProjectInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.IProjectInfo
    content.vb: ReadOnly Property ProjectInfo As IProjectInfo
  overload: SuperOffice.CRM.Sale.IQuoteData.ProjectInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.QuoteRow
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.QuoteRow
  id: QuoteRow
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: QuoteRow
  nameWithType: IQuoteData.QuoteRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.QuoteRow
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: QuoteRow QuoteRow { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.QuoteRow
    content.vb: Property QuoteRow As QuoteRow
  overload: SuperOffice.CRM.Sale.IQuoteData.QuoteRow*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.CRM.Sale.IQuoteData.SaleInfo
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.SaleInfo
  id: SaleInfo
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SaleInfo
  nameWithType: IQuoteData.SaleInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaleInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: ISaleInfo SaleInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.ISaleInfo
    content.vb: ReadOnly Property SaleInfo As ISaleInfo
  overload: SuperOffice.CRM.Sale.IQuoteData.SaleInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.SaleRow
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.SaleRow
  id: SaleRow
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: SaleRow
  nameWithType: IQuoteData.SaleRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaleRow
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: SaleRow SaleRow { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.SaleRow
    content.vb: ReadOnly Property SaleRow As SaleRow
  overload: SuperOffice.CRM.Sale.IQuoteData.SaleRow*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.Sale.IQuoteData.UserInfo
  commentId: P:SuperOffice.CRM.Sale.IQuoteData.UserInfo
  id: UserInfo
  parent: SuperOffice.CRM.Sale.IQuoteData
  langs:
  - csharp
  - vb
  name: UserInfo
  nameWithType: IQuoteData.UserInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.UserInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Sale
  syntax:
    content: UserInfo UserInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.UserInfo
    content.vb: ReadOnly Property UserInfo As UserInfo
  overload: SuperOffice.CRM.Sale.IQuoteData.UserInfo*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.CRM.Sale
  commentId: N:SuperOffice.CRM.Sale
  isExternal: true
  name: SuperOffice.CRM.Sale
  nameWithType: SuperOffice.CRM.Sale
  fullName: SuperOffice.CRM.Sale
- uid: SuperOffice.CRM.Sale.IQuoteData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IQuoteData, To>()
  nameWithType: EnumUtil.MapEnums<IQuoteData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Sale.IQuoteData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IQuoteData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Sale.IQuoteData, To)()
  name.vb: MapEnums(Of IQuoteData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IQuoteData, To>
    nameWithType: EnumUtil.MapEnums<IQuoteData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Sale.IQuoteData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IQuoteData, To)
    nameWithType: EnumUtil.MapEnums(Of IQuoteData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Sale.IQuoteData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IQuoteData, To>()
  nameWithType: Converters.MapEnums<IQuoteData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Sale.IQuoteData, To>()
  nameWithType.vb: Converters.MapEnums(Of IQuoteData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Sale.IQuoteData, To)()
  name.vb: MapEnums(Of IQuoteData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IQuoteData, To>
    nameWithType: Converters.MapEnums<IQuoteData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Sale.IQuoteData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IQuoteData, To)
    nameWithType: Converters.MapEnums(Of IQuoteData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Sale.IQuoteData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync
  isExternal: true
  name: GetActiveQuoteVersionRowAsync
  nameWithType: IQuoteData.GetActiveQuoteVersionRowAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetActiveQuoteVersionRowAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteVersionRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuoteVersionRow>
  nameWithType: Task<QuoteVersionRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.QuoteVersionRow>
  nameWithType.vb: Task(Of QuoteVersionRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.QuoteVersionRow)
  name.vb: Task(Of QuoteVersionRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteVersionRow
    name: QuoteVersionRow
    nameWithType: QuoteVersionRow
    fullName: SuperOffice.CRM.Rows.QuoteVersionRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteVersionRow
    name: QuoteVersionRow
    nameWithType: QuoteVersionRow
    fullName: SuperOffice.CRM.Rows.QuoteVersionRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync
  isExternal: true
  name: GetAllRowObjectsAsync
  nameWithType: IQuoteData.GetAllRowObjectsAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAllRowObjectsAsync
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.TableRowBase}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.TableRowBase}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<TableRowBase>
  nameWithType: IAsyncEnumerable<TableRowBase>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.Rows.TableRowBase>
  nameWithType.vb: IAsyncEnumerable(Of TableRowBase)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.Rows.TableRowBase)
  name.vb: IAsyncEnumerable(Of TableRowBase)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.TableRowBase
    name: TableRowBase
    nameWithType: TableRowBase
    fullName: SuperOffice.CRM.Rows.TableRowBase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.TableRowBase
    name: TableRowBase
    nameWithType: TableRowBase
    fullName: SuperOffice.CRM.Rows.TableRowBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: System.Collections.Generic.IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync
  isExternal: true
  name: GetQuoteVersionsAsync
  nameWithType: IQuoteData.GetQuoteVersionsAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetQuoteVersionsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.CRM.Rows.QuoteVersionRow,System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Dictionary<QuoteVersionRow, List<QuoteAlternativeRow>>>
  nameWithType: Task<Dictionary<QuoteVersionRow, List<QuoteAlternativeRow>>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<SuperOffice.CRM.Rows.QuoteVersionRow, System.Collections.Generic.List<SuperOffice.CRM.Rows.QuoteAlternativeRow>>>
  nameWithType.vb: Task(Of Dictionary(Of QuoteVersionRow, List(Of QuoteAlternativeRow)))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of SuperOffice.CRM.Rows.QuoteVersionRow, System.Collections.Generic.List(Of SuperOffice.CRM.Rows.QuoteAlternativeRow)))
  name.vb: Task(Of Dictionary(Of QuoteVersionRow, List(Of QuoteAlternativeRow)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteVersionRow
    name: QuoteVersionRow
    nameWithType: QuoteVersionRow
    fullName: SuperOffice.CRM.Rows.QuoteVersionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteVersionRow
    name: QuoteVersionRow
    nameWithType: QuoteVersionRow
    fullName: SuperOffice.CRM.Rows.QuoteVersionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync
  isExternal: true
  name: GetVersionAttachmentRowsAsync
  nameWithType: IQuoteData.GetVersionAttachmentRowsAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetVersionAttachmentRowsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionAttachmentRows}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{SuperOffice.CRM.Rows.QuoteVersionRow,SuperOffice.CRM.Rows.QuoteVersionAttachmentRows}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Dictionary<QuoteVersionRow, QuoteVersionAttachmentRows>>
  nameWithType: Task<Dictionary<QuoteVersionRow, QuoteVersionAttachmentRows>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.Rows.QuoteVersionAttachmentRows>>
  nameWithType.vb: Task(Of Dictionary(Of QuoteVersionRow, QuoteVersionAttachmentRows))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of SuperOffice.CRM.Rows.QuoteVersionRow, SuperOffice.CRM.Rows.QuoteVersionAttachmentRows))
  name.vb: Task(Of Dictionary(Of QuoteVersionRow, QuoteVersionAttachmentRows))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteVersionRow
    name: QuoteVersionRow
    nameWithType: QuoteVersionRow
    fullName: SuperOffice.CRM.Rows.QuoteVersionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.QuoteVersionAttachmentRows
    name: QuoteVersionAttachmentRows
    nameWithType: QuoteVersionAttachmentRows
    fullName: SuperOffice.CRM.Rows.QuoteVersionAttachmentRows
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteVersionRow
    name: QuoteVersionRow
    nameWithType: QuoteVersionRow
    fullName: SuperOffice.CRM.Rows.QuoteVersionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.QuoteVersionAttachmentRows
    name: QuoteVersionAttachmentRows
    nameWithType: QuoteVersionAttachmentRows
    fullName: SuperOffice.CRM.Rows.QuoteVersionAttachmentRows
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync
  isExternal: true
  name: AddQuoteAlternativeAsync
  nameWithType: IQuoteData.AddQuoteAlternativeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.AddQuoteAlternativeAsync
- uid: SuperOffice.CRM.Rows.QuoteVersionRow
  commentId: T:SuperOffice.CRM.Rows.QuoteVersionRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteVersionRow
  nameWithType: QuoteVersionRow
  fullName: SuperOffice.CRM.Rows.QuoteVersionRow
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteAlternativeRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuoteAlternativeRow>
  nameWithType: Task<QuoteAlternativeRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.QuoteAlternativeRow>
  nameWithType.vb: Task(Of QuoteAlternativeRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.QuoteAlternativeRow)
  name.vb: Task(Of QuoteAlternativeRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
  commentId: T:SuperOffice.CRM.Rows.QuoteAlternativeRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteAlternativeRow
  nameWithType: QuoteAlternativeRow
  fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
- uid: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync
  isExternal: true
  name: AddQuoteVersionAsync
  nameWithType: IQuoteData.AddQuoteVersionAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.AddQuoteVersionAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote
  isExternal: true
  name: ApplyErpChangesToQuote
  nameWithType: IQuoteData.ApplyErpChangesToQuote
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuote
- uid: SuperOffice.CRM.QuoteInfo
  commentId: T:SuperOffice.CRM.QuoteInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: QuoteInfo
  nameWithType: QuoteInfo
  fullName: SuperOffice.CRM.QuoteInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.QuoteVersionContextInfo
  commentId: T:SuperOffice.CRM.QuoteVersionContextInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: QuoteVersionContextInfo
  nameWithType: QuoteVersionContextInfo
  fullName: SuperOffice.CRM.QuoteVersionContextInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync
  isExternal: true
  name: ApplyErpChangesToQuoteAlternativeAsync
  nameWithType: IQuoteData.ApplyErpChangesToQuoteAlternativeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteAlternativeAsync
- uid: SuperOffice.CRM.QuoteAlternativeContextInfo
  commentId: T:SuperOffice.CRM.QuoteAlternativeContextInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: QuoteAlternativeContextInfo
  nameWithType: QuoteAlternativeContextInfo
  fullName: SuperOffice.CRM.QuoteAlternativeContextInfo
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.QuoteAlternativeInfo
  commentId: T:SuperOffice.CRM.QuoteAlternativeInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: QuoteAlternativeInfo
  nameWithType: QuoteAlternativeInfo
  fullName: SuperOffice.CRM.QuoteAlternativeInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync
  isExternal: true
  name: ApplyErpChangesToQuoteVersionAsync
  nameWithType: IQuoteData.ApplyErpChangesToQuoteVersionAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.ApplyErpChangesToQuoteVersionAsync
- uid: SuperOffice.CRM.QuoteVersionInfo
  commentId: T:SuperOffice.CRM.QuoteVersionInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: QuoteVersionInfo
  nameWithType: QuoteVersionInfo
  fullName: SuperOffice.CRM.QuoteVersionInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache
  isExternal: true
  name: ClearQuoteLineCache
  nameWithType: IQuoteData.ClearQuoteLineCache
  fullName: SuperOffice.CRM.Sale.IQuoteData.ClearQuoteLineCache
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync
  isExternal: true
  name: CloneQuoteAlternativesAsync
  nameWithType: IQuoteData.CloneQuoteAlternativesAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAlternativesAsync
- uid: System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}
  commentId: '!:System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}'
  definition: System.Collections.Generic.List`1
  name: List<QuoteAlternativeRow>
  nameWithType: List<QuoteAlternativeRow>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Rows.QuoteAlternativeRow>
  nameWithType.vb: List(Of QuoteAlternativeRow)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Rows.QuoteAlternativeRow)
  name.vb: List(Of QuoteAlternativeRow)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync
  isExternal: true
  name: CloneQuoteAsync
  nameWithType: IQuoteData.CloneQuoteAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteAsync
- uid: SuperOffice.CRM.Sale.IQuoteManager
  commentId: T:SuperOffice.CRM.Sale.IQuoteManager
  parent: SuperOffice.CRM.Sale
  isExternal: true
  name: IQuoteManager
  nameWithType: IQuoteManager
  fullName: SuperOffice.CRM.Sale.IQuoteManager
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync
  isExternal: true
  name: CloneQuoteLineRowsAsync
  nameWithType: IQuoteData.CloneQuoteLineRowsAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteLineRowsAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRows}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRows}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuoteLineRows>
  nameWithType: Task<QuoteLineRows>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.QuoteLineRows>
  nameWithType.vb: Task(Of QuoteLineRows)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.QuoteLineRows)
  name.vb: Task(Of QuoteLineRows)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteLineRows
    name: QuoteLineRows
    nameWithType: QuoteLineRows
    fullName: SuperOffice.CRM.Rows.QuoteLineRows
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteLineRows
    name: QuoteLineRows
    nameWithType: QuoteLineRows
    fullName: SuperOffice.CRM.Rows.QuoteLineRows
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync
  isExternal: true
  name: CloneQuoteVersionAsync
  nameWithType: IQuoteData.CloneQuoteVersionAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CloneQuoteVersionAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync
  isExternal: true
  name: CopyQuoteAlternativeAsync
  nameWithType: IQuoteData.CopyQuoteAlternativeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CopyQuoteAlternativeAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync
  isExternal: true
  name: CreateQuoteAlternativeAsync
  nameWithType: IQuoteData.CreateQuoteAlternativeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteAlternativeAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine
  isExternal: true
  name: CreateQuoteLine
  nameWithType: IQuoteData.CreateQuoteLine
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteLine
- uid: SuperOffice.CRM.Rows.QuoteLineRow
  commentId: T:SuperOffice.CRM.Rows.QuoteLineRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteLineRow
  nameWithType: QuoteLineRow
  fullName: SuperOffice.CRM.Rows.QuoteLineRow
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync
  isExternal: true
  name: CreateQuoteVersionAsync
  nameWithType: IQuoteData.CreateQuoteVersionAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync
  isExternal: true
  name: CreateQuoteVersionCopyAsync
  nameWithType: IQuoteData.CreateQuoteVersionCopyAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.CreateQuoteVersionCopyAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuote*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.DeleteQuote
  isExternal: true
  name: DeleteQuote
  nameWithType: IQuoteData.DeleteQuote
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuote
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync
  isExternal: true
  name: DeleteQuoteAlternativeAsync
  nameWithType: IQuoteData.DeleteQuoteAlternativeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteAlternativeAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync
  isExternal: true
  name: DeleteQuoteLineAsync
  nameWithType: IQuoteData.DeleteQuoteLineAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync
  isExternal: true
  name: DeleteQuoteLineRowAsync
  nameWithType: IQuoteData.DeleteQuoteLineRowAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.DeleteQuoteLineRowAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync
  isExternal: true
  name: DetectErpQuoteLineChangesAsync
  nameWithType: IQuoteData.DetectErpQuoteLineChangesAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.DetectErpQuoteLineChangesAsync
- uid: System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo}
  commentId: '!:System.Collections.Generic.List{SuperOffice.CRM.QuoteLineInfo}'
  definition: System.Collections.Generic.List`1
  name: List<QuoteLineInfo>
  nameWithType: List<QuoteLineInfo>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.QuoteLineInfo>
  nameWithType.vb: List(Of QuoteLineInfo)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.QuoteLineInfo)
  name.vb: List(Of QuoteLineInfo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    nameWithType: QuoteLineInfo
    fullName: SuperOffice.CRM.QuoteLineInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    nameWithType: QuoteLineInfo
    fullName: SuperOffice.CRM.QuoteLineInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuoteAlternativeRecalculatedHelper>
  nameWithType: Task<QuoteAlternativeRecalculatedHelper>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper>
  nameWithType.vb: Task(Of QuoteAlternativeRecalculatedHelper)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper)
  name.vb: Task(Of QuoteAlternativeRecalculatedHelper)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
    name: QuoteAlternativeRecalculatedHelper
    nameWithType: QuoteAlternativeRecalculatedHelper
    fullName: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
    name: QuoteAlternativeRecalculatedHelper
    nameWithType: QuoteAlternativeRecalculatedHelper
    fullName: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync
  isExternal: true
  name: GetAlternativeRowAsync
  nameWithType: IQuoteData.GetAlternativeRowAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync
  isExternal: true
  name: GetAlternativeRowsAsync
  nameWithType: IQuoteData.GetAlternativeRowsAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetAlternativeRowsAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Rows.QuoteAlternativeRow}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<List<QuoteAlternativeRow>>
  nameWithType: Task<List<QuoteAlternativeRow>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<SuperOffice.CRM.Rows.QuoteAlternativeRow>>
  nameWithType.vb: Task(Of List(Of QuoteAlternativeRow))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of SuperOffice.CRM.Rows.QuoteAlternativeRow))
  name.vb: Task(Of List(Of QuoteAlternativeRow))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteAlternativeRow
    name: QuoteAlternativeRow
    nameWithType: QuoteAlternativeRow
    fullName: SuperOffice.CRM.Rows.QuoteAlternativeRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync
  isExternal: true
  name: GetBillingAddressAsync
  nameWithType: IQuoteData.GetBillingAddressAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetBillingAddressAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AddressRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.AddressRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<AddressRow>
  nameWithType: Task<AddressRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.AddressRow>
  nameWithType.vb: Task(Of AddressRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.AddressRow)
  name.vb: Task(Of AddressRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.AddressRow
    name: AddressRow
    nameWithType: AddressRow
    fullName: SuperOffice.CRM.Rows.AddressRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.AddressRow
    name: AddressRow
    nameWithType: AddressRow
    fullName: SuperOffice.CRM.Rows.AddressRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync
  isExternal: true
  name: GetLikelyAlternativeRowAsync
  nameWithType: IQuoteData.GetLikelyAlternativeRowAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetLikelyAlternativeRowAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync
  isExternal: true
  name: GetQuoteLineRowAsync
  nameWithType: IQuoteData.GetQuoteLineRowAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.QuoteLineRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuoteLineRow>
  nameWithType: Task<QuoteLineRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.QuoteLineRow>
  nameWithType.vb: Task(Of QuoteLineRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.QuoteLineRow)
  name.vb: Task(Of QuoteLineRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.QuoteLineRow
    name: QuoteLineRow
    nameWithType: QuoteLineRow
    fullName: SuperOffice.CRM.Rows.QuoteLineRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.QuoteLineRow
    name: QuoteLineRow
    nameWithType: QuoteLineRow
    fullName: SuperOffice.CRM.Rows.QuoteLineRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync
  isExternal: true
  name: GetQuoteLineRowsAsync
  nameWithType: IQuoteData.GetQuoteLineRowsAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetQuoteLineRowsAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync
  isExternal: true
  name: GetShippingAddressAsync
  nameWithType: IQuoteData.GetShippingAddressAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetShippingAddressAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync
  isExternal: true
  name: GetVersionRowAsync
  nameWithType: IQuoteData.GetVersionRowAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.GetVersionRowAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow
  isExternal: true
  name: PopulateQuoteAlternativeRow
  nameWithType: IQuoteData.PopulateQuoteAlternativeRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteAlternativeRow
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow
  isExternal: true
  name: PopulateQuoteLineRow
  nameWithType: IQuoteData.PopulateQuoteLineRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteLineRow
- uid: SuperOffice.CRM.QuoteLineInfo
  commentId: T:SuperOffice.CRM.QuoteLineInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: QuoteLineInfo
  nameWithType: QuoteLineInfo
  fullName: SuperOffice.CRM.QuoteLineInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow
  isExternal: true
  name: PopulateQuoteRow
  nameWithType: IQuoteData.PopulateQuoteRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteRow
- uid: SuperOffice.CRM.Rows.QuoteRow
  commentId: T:SuperOffice.CRM.Rows.QuoteRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: QuoteRow
  nameWithType: QuoteRow
  fullName: SuperOffice.CRM.Rows.QuoteRow
- uid: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow
  isExternal: true
  name: PopulateQuoteVersionRow
  nameWithType: IQuoteData.PopulateQuoteVersionRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.PopulateQuoteVersionRow
- uid: SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync
  isExternal: true
  name: RenameQuoteAlternativeAsync
  nameWithType: IQuoteData.RenameQuoteAlternativeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.RenameQuoteAlternativeAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync
  isExternal: true
  name: SaveAlternativesAsync
  nameWithType: IQuoteData.SaveAlternativesAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveAlternativesAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SaveAsync
  isExternal: true
  name: SaveAsync
  nameWithType: IQuoteData.SaveAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync
  isExternal: true
  name: SaveErpQuoteLineChangesAsync
  nameWithType: IQuoteData.SaveErpQuoteLineChangesAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveErpQuoteLineChangesAsync
- uid: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
  commentId: T:SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
  parent: SuperOffice.CRM.Sale
  isExternal: true
  name: QuoteAlternativeRecalculatedHelper
  nameWithType: QuoteAlternativeRecalculatedHelper
  fullName: SuperOffice.CRM.Sale.QuoteAlternativeRecalculatedHelper
- uid: SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync
  isExternal: true
  name: SaveQuoteLineAsync
  nameWithType: IQuoteData.SaveQuoteLineAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaveQuoteLineAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.QuoteLineInfo}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.QuoteLineInfo}'
  definition: System.Threading.Tasks.Task`1
  name: Task<QuoteLineInfo>
  nameWithType: Task<QuoteLineInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.QuoteLineInfo>
  nameWithType.vb: Task(Of QuoteLineInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.QuoteLineInfo)
  name.vb: Task(Of QuoteLineInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    nameWithType: QuoteLineInfo
    fullName: SuperOffice.CRM.QuoteLineInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.QuoteLineInfo
    name: QuoteLineInfo
    nameWithType: QuoteLineInfo
    fullName: SuperOffice.CRM.QuoteLineInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync
  isExternal: true
  name: SetOwnAddressAsync
  nameWithType: IQuoteData.SetOwnAddressAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.SetOwnAddressAsync
- uid: SuperOffice.CRM.Rows.AddressRow
  commentId: T:SuperOffice.CRM.Rows.AddressRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: AddressRow
  nameWithType: AddressRow
  fullName: SuperOffice.CRM.Rows.AddressRow
- uid: SuperOffice.CRM.AddressInfo
  commentId: T:SuperOffice.CRM.AddressInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: AddressInfo
  nameWithType: AddressInfo
  fullName: SuperOffice.CRM.AddressInfo
- uid: SuperOffice.Data.AddressType
  commentId: T:SuperOffice.Data.AddressType
  parent: SuperOffice.Data
  isExternal: true
  name: AddressType
  nameWithType: AddressType
  fullName: SuperOffice.Data.AddressType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync
  isExternal: true
  name: SetQuoteLineImageAsync
  nameWithType: IQuoteData.SetQuoteLineImageAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.SetQuoteLineImageAsync
- uid: SuperOffice.Data.BlobLinkType
  commentId: T:SuperOffice.Data.BlobLinkType
  parent: SuperOffice.Data
  isExternal: true
  name: BlobLinkType
  nameWithType: BlobLinkType
  fullName: SuperOffice.Data.BlobLinkType
- uid: SuperOffice.CRM.Sale.IQuoteData.InitializeAsync*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.InitializeAsync
  isExternal: true
  name: InitializeAsync
  nameWithType: IQuoteData.InitializeAsync
  fullName: SuperOffice.CRM.Sale.IQuoteData.InitializeAsync
- uid: SuperOffice.CRM.Sale.IQuoteData.ContactInfo*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.ContactInfo
  isExternal: true
  name: ContactInfo
  nameWithType: IQuoteData.ContactInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.ContactInfo
- uid: SuperOffice.CRM.IContactInfo
  commentId: T:SuperOffice.CRM.IContactInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: IContactInfo
  nameWithType: IContactInfo
  fullName: SuperOffice.CRM.IContactInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.IsDeleted*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.IsDeleted
  isExternal: true
  name: IsDeleted
  nameWithType: IQuoteData.IsDeleted
  fullName: SuperOffice.CRM.Sale.IQuoteData.IsDeleted
- uid: SuperOffice.CRM.Sale.IQuoteData.IsDirty*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: IQuoteData.IsDirty
  fullName: SuperOffice.CRM.Sale.IQuoteData.IsDirty
- uid: SuperOffice.CRM.Sale.IQuoteData.PersonInfo*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.PersonInfo
  isExternal: true
  name: PersonInfo
  nameWithType: IQuoteData.PersonInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.PersonInfo
- uid: SuperOffice.CRM.IPersonInfo
  commentId: T:SuperOffice.CRM.IPersonInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: IPersonInfo
  nameWithType: IPersonInfo
  fullName: SuperOffice.CRM.IPersonInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.ProjectInfo*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.ProjectInfo
  isExternal: true
  name: ProjectInfo
  nameWithType: IQuoteData.ProjectInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.ProjectInfo
- uid: SuperOffice.CRM.IProjectInfo
  commentId: T:SuperOffice.CRM.IProjectInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: IProjectInfo
  nameWithType: IProjectInfo
  fullName: SuperOffice.CRM.IProjectInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.QuoteRow*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.QuoteRow
  isExternal: true
  name: QuoteRow
  nameWithType: IQuoteData.QuoteRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.QuoteRow
- uid: SuperOffice.CRM.Sale.IQuoteData.SaleInfo*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SaleInfo
  isExternal: true
  name: SaleInfo
  nameWithType: IQuoteData.SaleInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaleInfo
- uid: SuperOffice.CRM.ISaleInfo
  commentId: T:SuperOffice.CRM.ISaleInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: ISaleInfo
  nameWithType: ISaleInfo
  fullName: SuperOffice.CRM.ISaleInfo
- uid: SuperOffice.CRM.Sale.IQuoteData.SaleRow*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.SaleRow
  isExternal: true
  name: SaleRow
  nameWithType: IQuoteData.SaleRow
  fullName: SuperOffice.CRM.Sale.IQuoteData.SaleRow
- uid: SuperOffice.CRM.Rows.SaleRow
  commentId: T:SuperOffice.CRM.Rows.SaleRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: SaleRow
  nameWithType: SaleRow
  fullName: SuperOffice.CRM.Rows.SaleRow
- uid: SuperOffice.CRM.Sale.IQuoteData.UserInfo*
  commentId: Overload:SuperOffice.CRM.Sale.IQuoteData.UserInfo
  isExternal: true
  name: UserInfo
  nameWithType: IQuoteData.UserInfo
  fullName: SuperOffice.CRM.Sale.IQuoteData.UserInfo
- uid: SuperOffice.CRM.UserInfo
  commentId: T:SuperOffice.CRM.UserInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: UserInfo
  nameWithType: UserInfo
  fullName: SuperOffice.CRM.UserInfo
