### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.MailMerge.MailMergeTask
  commentId: T:SuperOffice.CRM.MailMerge.MailMergeTask
  id: MailMergeTask
  parent: SuperOffice.CRM.MailMerge
  children:
  - SuperOffice.CRM.MailMerge.MailMergeTask.#ctor
  - SuperOffice.CRM.MailMerge.MailMergeTask.Completed
  - SuperOffice.CRM.MailMerge.MailMergeTask.Description
  - SuperOffice.CRM.MailMerge.MailMergeTask.Duration
  - SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId
  - SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId
  - SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId
  - SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany
  - SuperOffice.CRM.MailMerge.MailMergeTask.StartDate
  - SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow
  - SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow
  - SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow
  - SuperOffice.CRM.MailMerge.MailMergeTask.TypeId
  - SuperOffice.CRM.MailMerge.MailMergeTask.Visibility
  - SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId
  langs:
  - csharp
  - vb
  name: MailMergeTask
  nameWithType: MailMergeTask
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nProperties describing a task to create on recipients of a mail merge\n"
  syntax:
    content: public class MailMergeTask
    content.vb: Public Class MailMergeTask
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.MailMerge.MailMergeTask.EnumUtil.MapEnums``2
  - SuperOffice.CRM.MailMerge.MailMergeTask.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.MailMerge.MailMergeTask)
  - SuperOffice.CRM.MailMerge.MailMergeTask.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.MailMerge.MailMergeTask.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.#ctor
  commentId: M:SuperOffice.CRM.MailMerge.MailMergeTask.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: MailMergeTask()
  nameWithType: MailMergeTask.MailMergeTask()
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.MailMergeTask()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nConstructor\n"
  syntax:
    content: public MailMergeTask()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow
  commentId: M:SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow
  id: ToTextRow
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: ToTextRow()
  nameWithType: MailMergeTask.ToTextRow()
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nCreate a new TextRow based on the current instance data\n"
  syntax:
    content: public TextRow ToTextRow()
    return:
      type: SuperOffice.CRM.Rows.TextRow
      description: New TextRow with values populated from this task instance
    content.vb: Public Function ToTextRow As TextRow
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow
  commentId: M:SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow
  id: ToVisibleForRow
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: ToVisibleForRow()
  nameWithType: MailMergeTask.ToVisibleForRow()
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nCreate a new VisibleForRow based on the current instance data\n"
  syntax:
    content: public VisibleForRow ToVisibleForRow()
    return:
      type: SuperOffice.CRM.Rows.VisibleForRow
      description: New VisibleForRow with values populated from this task instance
    content.vb: Public Function ToVisibleForRow As VisibleForRow
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow
  commentId: M:SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow
  id: ToAppointmentRow
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: ToAppointmentRow()
  nameWithType: MailMergeTask.ToAppointmentRow()
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nCreate a new AppointmentRow based on the current instance data\n"
  syntax:
    content: public AppointmentRow ToAppointmentRow()
    return:
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: New AppointmentRow with values populated from this task instance
    content.vb: Public Function ToAppointmentRow As AppointmentRow
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId
  id: ProjectId
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: ProjectId
  nameWithType: MailMergeTask.ProjectId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nProject identity to set on task\n"
  syntax:
    content: public int ProjectId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProjectId As Integer
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.TypeId
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.TypeId
  id: TypeId
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: MailMergeTask.TypeId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.TypeId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nType identity to set on task\n"
  syntax:
    content: public int TypeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TypeId As Integer
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.TypeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.StartDate
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.StartDate
  id: StartDate
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: MailMergeTask.StartDate
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.StartDate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nWhen the task should start\n"
  syntax:
    content: public DateTime StartDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property StartDate As Date
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.StartDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Duration
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.Duration
  id: Duration
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: MailMergeTask.Duration
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Duration
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nDuration of task\n"
  syntax:
    content: public int Duration { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Duration As Integer
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Description
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.Description
  id: Description
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MailMergeTask.Description
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Description
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nText describing task\n"
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId
  id: PriorityId
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: PriorityId
  nameWithType: MailMergeTask.PriorityId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nPriority of task\n"
  syntax:
    content: public int PriorityId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PriorityId As Integer
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Visibility
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.Visibility
  id: Visibility
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: Visibility
  nameWithType: MailMergeTask.Visibility
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Visibility
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nWho the task should be visible for\n"
  syntax:
    content: public Visibility Visibility { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.Visibility
    content.vb: Public Property Visibility As Visibility
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.Visibility*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId
  id: VisibilityId
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: VisibilityId
  nameWithType: MailMergeTask.VisibilityId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nIdentity of group/user which the record should be visible for\n"
  syntax:
    content: public int VisibilityId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property VisibilityId As Integer
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Completed
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.Completed
  id: Completed
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: Completed
  nameWithType: MailMergeTask.Completed
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Completed
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nCompleted status for task\n"
  syntax:
    content: public ActivityStatus Completed { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.ActivityStatus
    content.vb: Public Property Completed As ActivityStatus
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.Completed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId
  id: OwnerAssociateId
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: OwnerAssociateId
  nameWithType: MailMergeTask.OwnerAssociateId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nAssociate identity of who should be set as owner of the task.  If value is 0, the recipient owner(our contact) will be used.\n"
  syntax:
    content: public int OwnerAssociateId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property OwnerAssociateId As Integer
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany
  commentId: P:SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany
  id: SingleEntryOnEachCompany
  parent: SuperOffice.CRM.MailMerge.MailMergeTask
  langs:
  - csharp
  - vb
  name: SingleEntryOnEachCompany
  nameWithType: MailMergeTask.SingleEntryOnEachCompany
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.MailMerge
  summary: "\nShould we only create one task on each company? If false, separate tasks will be created for all persons from the same company.\n"
  syntax:
    content: public bool SingleEntryOnEachCompany { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SingleEntryOnEachCompany As Boolean
  overload: SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.MailMerge
  commentId: N:SuperOffice.CRM.MailMerge
  isExternal: true
  name: SuperOffice.CRM.MailMerge
  nameWithType: SuperOffice.CRM.MailMerge
  fullName: SuperOffice.CRM.MailMerge
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<MailMergeTask, To>()
  nameWithType: EnumUtil.MapEnums<MailMergeTask, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.MailMerge.MailMergeTask, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of MailMergeTask, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.MailMerge.MailMergeTask, To)()
  name.vb: MapEnums(Of MailMergeTask, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<MailMergeTask, To>
    nameWithType: EnumUtil.MapEnums<MailMergeTask, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.MailMerge.MailMergeTask, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of MailMergeTask, To)
    nameWithType: EnumUtil.MapEnums(Of MailMergeTask, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.MailMerge.MailMergeTask, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.MailMerge.MailMergeTask)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<MailMergeTask>(MailMergeTask)
  nameWithType: ObjectExtensions.AssignByReflection<MailMergeTask>(MailMergeTask)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.MailMerge.MailMergeTask>(SuperOffice.CRM.MailMerge.MailMergeTask)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of MailMergeTask)(MailMergeTask)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.MailMerge.MailMergeTask)(SuperOffice.CRM.MailMerge.MailMergeTask)
  name.vb: AssignByReflection(Of MailMergeTask)(MailMergeTask)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<MailMergeTask>
    nameWithType: ObjectExtensions.AssignByReflection<MailMergeTask>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.MailMerge.MailMergeTask>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.MailMerge.MailMergeTask
    name: MailMergeTask
    nameWithType: MailMergeTask
    fullName: SuperOffice.CRM.MailMerge.MailMergeTask
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of MailMergeTask)
    nameWithType: ObjectExtensions.AssignByReflection(Of MailMergeTask)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.MailMerge.MailMergeTask)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.MailMerge.MailMergeTask
    name: MailMergeTask
    nameWithType: MailMergeTask
    fullName: SuperOffice.CRM.MailMerge.MailMergeTask
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<MailMergeTask>()
  nameWithType: ObjectExtensions.GraphCopy<MailMergeTask>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.MailMerge.MailMergeTask>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of MailMergeTask)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.MailMerge.MailMergeTask)()
  name.vb: GraphCopy(Of MailMergeTask)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<MailMergeTask>
    nameWithType: ObjectExtensions.GraphCopy<MailMergeTask>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.MailMerge.MailMergeTask>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of MailMergeTask)
    nameWithType: ObjectExtensions.GraphCopy(Of MailMergeTask)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.MailMerge.MailMergeTask)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<MailMergeTask, To>()
  nameWithType: Converters.MapEnums<MailMergeTask, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.MailMerge.MailMergeTask, To>()
  nameWithType.vb: Converters.MapEnums(Of MailMergeTask, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.MailMerge.MailMergeTask, To)()
  name.vb: MapEnums(Of MailMergeTask, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<MailMergeTask, To>
    nameWithType: Converters.MapEnums<MailMergeTask, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.MailMerge.MailMergeTask, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of MailMergeTask, To)
    nameWithType: Converters.MapEnums(Of MailMergeTask, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.MailMerge.MailMergeTask, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.#ctor*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.#ctor
  isExternal: true
  name: MailMergeTask
  nameWithType: MailMergeTask.MailMergeTask
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.MailMergeTask
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow
  isExternal: true
  name: ToTextRow
  nameWithType: MailMergeTask.ToTextRow
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ToTextRow
- uid: SuperOffice.CRM.Rows.TextRow
  commentId: T:SuperOffice.CRM.Rows.TextRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TextRow
  nameWithType: TextRow
  fullName: SuperOffice.CRM.Rows.TextRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow
  isExternal: true
  name: ToVisibleForRow
  nameWithType: MailMergeTask.ToVisibleForRow
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ToVisibleForRow
- uid: SuperOffice.CRM.Rows.VisibleForRow
  commentId: T:SuperOffice.CRM.Rows.VisibleForRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: VisibleForRow
  nameWithType: VisibleForRow
  fullName: SuperOffice.CRM.Rows.VisibleForRow
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow
  isExternal: true
  name: ToAppointmentRow
  nameWithType: MailMergeTask.ToAppointmentRow
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ToAppointmentRow
- uid: SuperOffice.CRM.Rows.AppointmentRow
  commentId: T:SuperOffice.CRM.Rows.AppointmentRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: AppointmentRow
  nameWithType: AppointmentRow
  fullName: SuperOffice.CRM.Rows.AppointmentRow
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId
  isExternal: true
  name: ProjectId
  nameWithType: MailMergeTask.ProjectId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.ProjectId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.TypeId*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.TypeId
  isExternal: true
  name: TypeId
  nameWithType: MailMergeTask.TypeId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.TypeId
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.StartDate*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.StartDate
  isExternal: true
  name: StartDate
  nameWithType: MailMergeTask.StartDate
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.StartDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Duration*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.Duration
  isExternal: true
  name: Duration
  nameWithType: MailMergeTask.Duration
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Duration
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Description*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.Description
  isExternal: true
  name: Description
  nameWithType: MailMergeTask.Description
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId
  isExternal: true
  name: PriorityId
  nameWithType: MailMergeTask.PriorityId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.PriorityId
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Visibility*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.Visibility
  isExternal: true
  name: Visibility
  nameWithType: MailMergeTask.Visibility
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Visibility
- uid: SuperOffice.Data.Visibility
  commentId: T:SuperOffice.Data.Visibility
  parent: SuperOffice.Data
  isExternal: true
  name: Visibility
  nameWithType: Visibility
  fullName: SuperOffice.Data.Visibility
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId
  isExternal: true
  name: VisibilityId
  nameWithType: MailMergeTask.VisibilityId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.VisibilityId
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.Completed*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.Completed
  isExternal: true
  name: Completed
  nameWithType: MailMergeTask.Completed
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.Completed
- uid: SuperOffice.Data.ActivityStatus
  commentId: T:SuperOffice.Data.ActivityStatus
  parent: SuperOffice.Data
  isExternal: true
  name: ActivityStatus
  nameWithType: ActivityStatus
  fullName: SuperOffice.Data.ActivityStatus
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId
  isExternal: true
  name: OwnerAssociateId
  nameWithType: MailMergeTask.OwnerAssociateId
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.OwnerAssociateId
- uid: SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany*
  commentId: Overload:SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany
  isExternal: true
  name: SingleEntryOnEachCompany
  nameWithType: MailMergeTask.SingleEntryOnEachCompany
  fullName: SuperOffice.CRM.MailMerge.MailMergeTask.SingleEntryOnEachCompany
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
