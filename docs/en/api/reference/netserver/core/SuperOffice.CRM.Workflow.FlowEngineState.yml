### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Workflow.FlowEngineState
  commentId: T:SuperOffice.CRM.Workflow.FlowEngineState
  id: FlowEngineState
  parent: SuperOffice.CRM.Workflow
  children:
  - SuperOffice.CRM.Workflow.FlowEngineState.#ctor
  - SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted
  langs:
  - csharp
  - vb
  name: FlowEngineState
  nameWithType: FlowEngineState
  fullName: SuperOffice.CRM.Workflow.FlowEngineState
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: >-
      [SoInject("Database")]

      public class FlowEngineState : Object
    content.vb: >-
      <SoInject("Database")>

      Public Class FlowEngineState
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.Workflow.FlowEngineState.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Workflow.FlowEngineState.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Database
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Workflow.FlowEngineState.#ctor
  commentId: M:SuperOffice.CRM.Workflow.FlowEngineState.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Workflow.FlowEngineState
  langs:
  - csharp
  - vb
  name: FlowEngineState()
  nameWithType: FlowEngineState.FlowEngineState()
  fullName: SuperOffice.CRM.Workflow.FlowEngineState.FlowEngineState()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: >-
      [SoInjectConstructor]

      protected FlowEngineState()
    content.vb: >-
      <SoInjectConstructor>

      Protected Sub New
  overload: SuperOffice.CRM.Workflow.FlowEngineState.#ctor*
  attributes:
  - type: SuperOffice.Factory.SoInjectConstructorAttribute
    ctor: SuperOffice.Factory.SoInjectConstructorAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted
  commentId: P:SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted
  id: EngineStarted
  parent: SuperOffice.CRM.Workflow.FlowEngineState
  langs:
  - csharp
  - vb
  name: EngineStarted
  nameWithType: FlowEngineState.EngineStarted
  fullName: SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Workflow
  syntax:
    content: public DateTime EngineStarted { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property EngineStarted As DateTime
  overload: SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Workflow
  commentId: N:SuperOffice.CRM.Workflow
  isExternal: true
  name: SuperOffice.CRM.Workflow
  nameWithType: SuperOffice.CRM.Workflow
  fullName: SuperOffice.CRM.Workflow
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Workflow.FlowEngineState.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<FlowEngineState, To>()
  nameWithType: EnumUtil.MapEnums<FlowEngineState, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Workflow.FlowEngineState, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of FlowEngineState, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Workflow.FlowEngineState, To)()
  name.vb: MapEnums(Of FlowEngineState, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<FlowEngineState, To>
    nameWithType: EnumUtil.MapEnums<FlowEngineState, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Workflow.FlowEngineState, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of FlowEngineState, To)
    nameWithType: EnumUtil.MapEnums(Of FlowEngineState, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Workflow.FlowEngineState, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Workflow.FlowEngineState.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<FlowEngineState, To>()
  nameWithType: Converters.MapEnums<FlowEngineState, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Workflow.FlowEngineState, To>()
  nameWithType.vb: Converters.MapEnums(Of FlowEngineState, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Workflow.FlowEngineState, To)()
  name.vb: MapEnums(Of FlowEngineState, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<FlowEngineState, To>
    nameWithType: Converters.MapEnums<FlowEngineState, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Workflow.FlowEngineState, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of FlowEngineState, To)
    nameWithType: Converters.MapEnums(Of FlowEngineState, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Workflow.FlowEngineState, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Workflow.FlowEngineState.#ctor*
  commentId: Overload:SuperOffice.CRM.Workflow.FlowEngineState.#ctor
  isExternal: true
  name: FlowEngineState
  nameWithType: FlowEngineState.FlowEngineState
  fullName: SuperOffice.CRM.Workflow.FlowEngineState.FlowEngineState
- uid: SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted*
  commentId: Overload:SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted
  isExternal: true
  name: EngineStarted
  nameWithType: FlowEngineState.EngineStarted
  fullName: SuperOffice.CRM.Workflow.FlowEngineState.EngineStarted
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
