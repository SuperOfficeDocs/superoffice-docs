### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.ModuleLicenseLinkBase`1
  commentId: T:SuperOffice.License.ModuleLicenseLinkBase`1
  id: ModuleLicenseLinkBase`1
  parent: SuperOffice.License
  children:
  - SuperOffice.License.ModuleLicenseLinkBase`1.#ctor(SuperOffice.CRM.Rows.ModuleLicenseRow)
  - SuperOffice.License.ModuleLicenseLinkBase`1.Assigned
  - SuperOffice.License.ModuleLicenseLinkBase`1.CanAssign
  - SuperOffice.License.ModuleLicenseLinkBase`1.GetFacadingItems
  - SuperOffice.License.ModuleLicenseLinkBase`1.InUse
  - SuperOffice.License.ModuleLicenseLinkBase`1.IsDeleted
  - SuperOffice.License.ModuleLicenseLinkBase`1.IsDirty
  - SuperOffice.License.ModuleLicenseLinkBase`1.IsMarkedForDelete
  - SuperOffice.License.ModuleLicenseLinkBase`1.License
  - SuperOffice.License.ModuleLicenseLinkBase`1.Link
  - SuperOffice.License.ModuleLicenseLinkBase`1.PrerequisiteModuleName
  - SuperOffice.License.ModuleLicenseLinkBase`1.SetParentId(System.Int32)
  - SuperOffice.License.ModuleLicenseLinkBase`1.SortOrder
  - SuperOffice.License.ModuleLicenseLinkBase`1.ToString
  langs:
  - csharp
  - vb
  name: ModuleLicenseLinkBase<TLinkRow>
  nameWithType: ModuleLicenseLinkBase<TLinkRow>
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nWrapper for <see cref=\"!:LicenseSatLinkRow\"></see> supporting to assign and un-assign module licenses to satellites\n"
  syntax:
    content: 'public abstract class ModuleLicenseLinkBase<TLinkRow> : NestedPersistFacade, INestedPersist where TLinkRow : TableRowBase'
    typeParameters:
    - id: TLinkRow
    content.vb: >-
      Public MustInherit Class ModuleLicenseLinkBase(Of TLinkRow As TableRowBase)
          Inherits NestedPersistFacade
          Implements INestedPersist
  inheritance:
  - System.Object
  - SuperOffice.Data.NestedPersist
  - SuperOffice.Data.NestedPersistFacade
  derivedClasses:
  - SuperOffice.License.AssociateModuleLicenseLink
  - SuperOffice.License.SatelliteModuleLicenseLink
  implements:
  - SuperOffice.Data.INestedPersist
  inheritedMembers:
  - SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersistFacade.OnIdUpdate
  - SuperOffice.Data.NestedPersistFacade.OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersistFacade.OnSaved(System.Boolean)
  - SuperOffice.Data.NestedPersist._saveOwner
  - SuperOffice.Data.NestedPersist._isSaving
  - SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.Data.NestedPersist.Save
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdate
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  - SuperOffice.Data.NestedPersist.IsSaving
  - SuperOffice.Data.NestedPersist.OnElementSaved
  - SuperOffice.Data.NestedPersist.OnElementIdUpdate
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.License.ModuleLicenseLinkBase`1.EnumUtil.MapEnums``2
  - SuperOffice.License.ModuleLicenseLinkBase`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow)
  name.vb: ModuleLicenseLinkBase(Of TLinkRow)
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.#ctor(SuperOffice.CRM.Rows.ModuleLicenseRow)
  commentId: M:SuperOffice.License.ModuleLicenseLinkBase`1.#ctor(SuperOffice.CRM.Rows.ModuleLicenseRow)
  id: '#ctor(SuperOffice.CRM.Rows.ModuleLicenseRow)'
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: ModuleLicenseLinkBase(ModuleLicenseRow)
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.ModuleLicenseLinkBase(ModuleLicenseRow)
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.ModuleLicenseLinkBase(SuperOffice.CRM.Rows.ModuleLicenseRow)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nDefault constructor.\n"
  syntax:
    content: public ModuleLicenseLinkBase(ModuleLicenseRow license)
    parameters:
    - id: license
      type: SuperOffice.CRM.Rows.ModuleLicenseRow
      description: Module that can be linked (i.e. assigned) to a satellite.
    content.vb: Public Sub New(license As ModuleLicenseRow)
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.#ctor*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).ModuleLicenseLinkBase(ModuleLicenseRow)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).ModuleLicenseLinkBase(SuperOffice.CRM.Rows.ModuleLicenseRow)
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.SetParentId(System.Int32)
  commentId: M:SuperOffice.License.ModuleLicenseLinkBase`1.SetParentId(System.Int32)
  id: SetParentId(System.Int32)
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: SetParentId(Int32)
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.SetParentId(Int32)
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.SetParentId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nSet the parent id.  This can be either an associate or a satellite, depending on the implementation\n"
  syntax:
    content: protected abstract void SetParentId(int parentId)
    parameters:
    - id: parentId
      type: System.Int32
      description: Primary key of the parent (i.e. associate or satellite)
    content.vb: Protected MustOverride Sub SetParentId(parentId As Integer)
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.SetParentId*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).SetParentId(Int32)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).SetParentId(System.Int32)
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.ToString
  commentId: M:SuperOffice.License.ModuleLicenseLinkBase`1.ToString
  id: ToString
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.ToString()
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.ToString*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).ToString()
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.GetFacadingItems
  commentId: M:SuperOffice.License.ModuleLicenseLinkBase`1.GetFacadingItems
  id: GetFacadingItems
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: GetFacadingItems()
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.GetFacadingItems()
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.GetFacadingItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: protected override IEnumerable<INestedPersist> GetFacadingItems()
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
    content.vb: Protected Overrides Function GetFacadingItems As IEnumerable(Of INestedPersist)
  overridden: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.GetFacadingItems*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).GetFacadingItems()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).GetFacadingItems()
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.InUse
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.InUse
  id: InUse
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: InUse
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.InUse
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.InUse
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nHow many licenses are in use.\n"
  syntax:
    content: public int InUse { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property InUse As Integer
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.InUse*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).InUse
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).InUse
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.License
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.License
  id: License
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: License
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.License
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.License
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nGet the module license itself\n"
  syntax:
    content: public ModuleLicenseRow License { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Rows.ModuleLicenseRow
    content.vb: Public ReadOnly Property License As ModuleLicenseRow
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.License*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).License
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).License
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.Link
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.Link
  id: Link
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: Link
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.Link
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.Link
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nGet the Module license link row\n"
  syntax:
    content: public TLinkRow Link { get; }
    parameters: []
    return:
      type: '{TLinkRow}'
    content.vb: Public ReadOnly Property Link As TLinkRow
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.Link*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).Link
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).Link
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.PrerequisiteModuleName
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.PrerequisiteModuleName
  id: PrerequisiteModuleName
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: PrerequisiteModuleName
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.PrerequisiteModuleName
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.PrerequisiteModuleName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nToDo: remove this field when it is in the database row.\n"
  syntax:
    content: public string PrerequisiteModuleName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PrerequisiteModuleName As String
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.PrerequisiteModuleName*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).PrerequisiteModuleName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).PrerequisiteModuleName
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.CanAssign
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.CanAssign
  id: CanAssign
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: CanAssign
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.CanAssign
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.CanAssign
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nCan the license be assigned\n"
  syntax:
    content: public bool CanAssign { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanAssign As Boolean
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.CanAssign*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).CanAssign
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).CanAssign
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.SortOrder
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.SortOrder
  id: SortOrder
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: SortOrder
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.SortOrder
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.SortOrder
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nThe sort order for the license\n"
  syntax:
    content: public int SortOrder { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SortOrder As Integer
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.SortOrder*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).SortOrder
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).SortOrder
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.Assigned
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.Assigned
  id: Assigned
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: Assigned
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.Assigned
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.Assigned
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  summary: "\nAssign a module license to a satellite.\n"
  syntax:
    content: public abstract bool Assigned { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride Property Assigned As Boolean
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.Assigned*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).Assigned
  modifiers.csharp:
  - public
  - abstract
  - get
  - set
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).Assigned
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.IsDirty
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.IsDirty
  id: IsDirty
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.IsDirty
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.Data.NestedPersistFacade.IsDirty
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.IsDirty*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).IsDirty
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).IsDirty
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.IsDeleted
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.IsDeleted
  id: IsDeleted
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.IsDeleted
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.IsDeleted
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public override bool IsDeleted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDeleted As Boolean
  overridden: SuperOffice.Data.NestedPersist.IsDeleted
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.IsDeleted*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).IsDeleted
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).IsDeleted
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.IsMarkedForDelete
  commentId: P:SuperOffice.License.ModuleLicenseLinkBase`1.IsMarkedForDelete
  id: IsMarkedForDelete
  parent: SuperOffice.License.ModuleLicenseLinkBase`1
  langs:
  - csharp
  - vb
  name: IsMarkedForDelete
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.IsMarkedForDelete
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.IsMarkedForDelete
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.License
  syntax:
    content: public override bool IsMarkedForDelete { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides Property IsMarkedForDelete As Boolean
  overridden: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  overload: SuperOffice.License.ModuleLicenseLinkBase`1.IsMarkedForDelete*
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).IsMarkedForDelete
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).IsMarkedForDelete
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.NestedPersist
  commentId: T:SuperOffice.Data.NestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: NestedPersist
  nameWithType: NestedPersist
  fullName: SuperOffice.Data.NestedPersist
- uid: SuperOffice.Data.NestedPersistFacade
  commentId: T:SuperOffice.Data.NestedPersistFacade
  parent: SuperOffice.Data
  isExternal: true
  name: NestedPersistFacade
  nameWithType: NestedPersistFacade
  fullName: SuperOffice.Data.NestedPersistFacade
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPreIdUpdate()
  nameWithType: NestedPersistFacade.OnPreIdUpdate()
  fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: NestedPersistFacade.OnPreIdUpdate
    fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: NestedPersistFacade.OnPreIdUpdate
    fullName: SuperOffice.Data.NestedPersistFacade.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPrimaryKeyRequest(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: NestedPersistFacade.OnPrimaryKeyRequest
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: NestedPersistFacade.OnPrimaryKeyRequest
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnPrimaryKeyUpdate(PKContainer)
  nameWithType: NestedPersistFacade.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: NestedPersistFacade.OnPrimaryKeyUpdate
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: NestedPersistFacade.OnPrimaryKeyUpdate
    fullName: SuperOffice.Data.NestedPersistFacade.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdate
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnIdUpdate
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnIdUpdate()
  nameWithType: NestedPersistFacade.OnIdUpdate()
  fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdate
    name: OnIdUpdate
    nameWithType: NestedPersistFacade.OnIdUpdate
    fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnIdUpdate
    name: OnIdUpdate
    nameWithType: NestedPersistFacade.OnIdUpdate
    fullName: SuperOffice.Data.NestedPersistFacade.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnSave(BatchSave)
  nameWithType: NestedPersistFacade.OnSave(BatchSave)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSave(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: NestedPersistFacade.OnSave
    fullName: SuperOffice.Data.NestedPersistFacade.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: NestedPersistFacade.OnSave
    fullName: SuperOffice.Data.NestedPersistFacade.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersistFacade.OnSaved(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersistFacade.OnSaved(System.Boolean)
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: OnSaved(Boolean)
  nameWithType: NestedPersistFacade.OnSaved(Boolean)
  fullName: SuperOffice.Data.NestedPersistFacade.OnSaved(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: NestedPersistFacade.OnSaved
    fullName: SuperOffice.Data.NestedPersistFacade.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: NestedPersistFacade.OnSaved
    fullName: SuperOffice.Data.NestedPersistFacade.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist._saveOwner
  commentId: F:SuperOffice.Data.NestedPersist._saveOwner
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: _saveOwner
  nameWithType: NestedPersist._saveOwner
  fullName: SuperOffice.Data.NestedPersist._saveOwner
- uid: SuperOffice.Data.NestedPersist._isSaving
  commentId: F:SuperOffice.Data.NestedPersist._isSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: _isSaving
  nameWithType: NestedPersist._isSaving
  fullName: SuperOffice.Data.NestedPersist._isSaving
- uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: NestedPersist.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: NestedPersist.SetSaveOwner
    fullName: SuperOffice.Data.NestedPersist.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: NestedPersist.SetSaveOwner
    fullName: SuperOffice.Data.NestedPersist.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.Save
  commentId: M:SuperOffice.Data.NestedPersist.Save
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: Save()
  nameWithType: NestedPersist.Save()
  fullName: SuperOffice.Data.NestedPersist.Save()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.Save
    name: Save
    nameWithType: NestedPersist.Save
    fullName: SuperOffice.Data.NestedPersist.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.Save
    name: Save
    nameWithType: NestedPersist.Save
    fullName: SuperOffice.Data.NestedPersist.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPreIdUpdate()
  nameWithType: NestedPersist.INestedPersist.OnPreIdUpdate()
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: INestedPersist.OnPreIdUpdate
    nameWithType: NestedPersist.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdate
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequest(PKContainer)
  nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequest
    nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdate
    nameWithType: NestedPersist.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdate
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnIdUpdate()
  nameWithType: NestedPersist.INestedPersist.OnIdUpdate()
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdate()
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: INestedPersist.OnIdUpdate
    nameWithType: NestedPersist.INestedPersist.OnIdUpdate
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: SuperOffice.Data.INestedPersist.OnIdUpdate
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdate
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnSave(BatchSave)
  nameWithType: NestedPersist.INestedPersist.OnSave(BatchSave)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSave(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSave
    nameWithType: NestedPersist.INestedPersist.OnSave
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSave
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnSave
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  commentId: M:SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: INestedPersist.OnSaved(Boolean)
  nameWithType: NestedPersist.INestedPersist.OnSaved(Boolean)
  fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaved(System.Boolean)
  nameWithType.vb: NestedPersist.SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: INestedPersist.OnSaved
    nameWithType: NestedPersist.INestedPersist.OnSaved
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersist.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSaved
    nameWithType: NestedPersist.SuperOffice.Data.INestedPersist.OnSaved
    fullName: SuperOffice.Data.NestedPersist.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.NestedPersist.IsSaving
  commentId: P:SuperOffice.Data.NestedPersist.IsSaving
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsSaving
  nameWithType: NestedPersist.IsSaving
  fullName: SuperOffice.Data.NestedPersist.IsSaving
- uid: SuperOffice.Data.NestedPersist.OnElementSaved
  commentId: E:SuperOffice.Data.NestedPersist.OnElementSaved
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: OnElementSaved
  nameWithType: NestedPersist.OnElementSaved
  fullName: SuperOffice.Data.NestedPersist.OnElementSaved
- uid: SuperOffice.Data.NestedPersist.OnElementIdUpdate
  commentId: E:SuperOffice.Data.NestedPersist.OnElementIdUpdate
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: NestedPersist.OnElementIdUpdate
  fullName: SuperOffice.Data.NestedPersist.OnElementIdUpdate
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>()
  nameWithType: EnumUtil.MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow), To)()
  name.vb: MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>
    nameWithType: EnumUtil.MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>
    fullName: EnumUtil.MapEnums<SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)
    nameWithType: EnumUtil.MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>()
  nameWithType: Converters.MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>, To>()
  nameWithType.vb: Converters.MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow), To)()
  name.vb: MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>
    nameWithType: Converters.MapEnums<ModuleLicenseLinkBase<TLinkRow>, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)
    nameWithType: Converters.MapEnums(Of ModuleLicenseLinkBase(Of TLinkRow), To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow), To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.#ctor*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.#ctor
  isExternal: true
  name: ModuleLicenseLinkBase
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.ModuleLicenseLinkBase
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.ModuleLicenseLinkBase
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).ModuleLicenseLinkBase
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).ModuleLicenseLinkBase
- uid: SuperOffice.CRM.Rows.ModuleLicenseRow
  commentId: T:SuperOffice.CRM.Rows.ModuleLicenseRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ModuleLicenseRow
  nameWithType: ModuleLicenseRow
  fullName: SuperOffice.CRM.Rows.ModuleLicenseRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.SetParentId*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.SetParentId
  isExternal: true
  name: SetParentId
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.SetParentId
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.SetParentId
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).SetParentId
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).SetParentId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.ToString*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.ToString
  isExternal: true
  name: ToString
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.ToString
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.ToString
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).ToString
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  commentId: M:SuperOffice.Data.NestedPersistFacade.GetFacadingItems
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: GetFacadingItems()
  nameWithType: NestedPersistFacade.GetFacadingItems()
  fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems()
  spec.csharp:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    nameWithType: NestedPersistFacade.GetFacadingItems
    fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    name: GetFacadingItems
    nameWithType: NestedPersistFacade.GetFacadingItems
    fullName: SuperOffice.Data.NestedPersistFacade.GetFacadingItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.GetFacadingItems*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.GetFacadingItems
  isExternal: true
  name: GetFacadingItems
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.GetFacadingItems
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.GetFacadingItems
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).GetFacadingItems
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).GetFacadingItems
- uid: System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.Data.INestedPersist}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INestedPersist>
  nameWithType: IEnumerable<INestedPersist>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.Data.INestedPersist>
  nameWithType.vb: IEnumerable(Of INestedPersist)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.Data.INestedPersist)
  name.vb: IEnumerable(Of INestedPersist)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.InUse*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.InUse
  isExternal: true
  name: InUse
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.InUse
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.InUse
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).InUse
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).InUse
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.License*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.License
  isExternal: true
  name: License
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.License
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.License
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).License
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).License
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.Link*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.Link
  isExternal: true
  name: Link
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.Link
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.Link
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).Link
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).Link
- uid: '{TLinkRow}'
  commentId: '!:TLinkRow'
  definition: TLinkRow
  name: TLinkRow
  nameWithType: TLinkRow
  fullName: TLinkRow
- uid: TLinkRow
  commentId: '!:TLinkRow'
  name: TLinkRow
  nameWithType: TLinkRow
  fullName: TLinkRow
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.PrerequisiteModuleName*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.PrerequisiteModuleName
  isExternal: true
  name: PrerequisiteModuleName
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.PrerequisiteModuleName
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.PrerequisiteModuleName
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).PrerequisiteModuleName
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).PrerequisiteModuleName
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.CanAssign*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.CanAssign
  isExternal: true
  name: CanAssign
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.CanAssign
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.CanAssign
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).CanAssign
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).CanAssign
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.SortOrder*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.SortOrder
  isExternal: true
  name: SortOrder
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.SortOrder
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.SortOrder
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).SortOrder
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).SortOrder
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.Assigned*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.Assigned
  isExternal: true
  name: Assigned
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.Assigned
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.Assigned
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).Assigned
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).Assigned
- uid: SuperOffice.Data.NestedPersistFacade.IsDirty
  commentId: P:SuperOffice.Data.NestedPersistFacade.IsDirty
  parent: SuperOffice.Data.NestedPersistFacade
  isExternal: true
  name: IsDirty
  nameWithType: NestedPersistFacade.IsDirty
  fullName: SuperOffice.Data.NestedPersistFacade.IsDirty
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.IsDirty*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.IsDirty
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.IsDirty
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).IsDirty
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).IsDirty
- uid: SuperOffice.Data.NestedPersist.IsDeleted
  commentId: P:SuperOffice.Data.NestedPersist.IsDeleted
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsDeleted
  nameWithType: NestedPersist.IsDeleted
  fullName: SuperOffice.Data.NestedPersist.IsDeleted
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.IsDeleted*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.IsDeleted
  isExternal: true
  name: IsDeleted
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.IsDeleted
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.IsDeleted
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).IsDeleted
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).IsDeleted
- uid: SuperOffice.Data.NestedPersist.IsMarkedForDelete
  commentId: P:SuperOffice.Data.NestedPersist.IsMarkedForDelete
  parent: SuperOffice.Data.NestedPersist
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: NestedPersist.IsMarkedForDelete
  fullName: SuperOffice.Data.NestedPersist.IsMarkedForDelete
- uid: SuperOffice.License.ModuleLicenseLinkBase`1.IsMarkedForDelete*
  commentId: Overload:SuperOffice.License.ModuleLicenseLinkBase`1.IsMarkedForDelete
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: ModuleLicenseLinkBase<TLinkRow>.IsMarkedForDelete
  fullName: SuperOffice.License.ModuleLicenseLinkBase<TLinkRow>.IsMarkedForDelete
  nameWithType.vb: ModuleLicenseLinkBase(Of TLinkRow).IsMarkedForDelete
  fullName.vb: SuperOffice.License.ModuleLicenseLinkBase(Of TLinkRow).IsMarkedForDelete
