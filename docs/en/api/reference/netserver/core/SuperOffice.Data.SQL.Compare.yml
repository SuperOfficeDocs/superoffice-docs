### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.Compare
  commentId: T:SuperOffice.Data.SQL.Compare
  id: Compare
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.Compare.#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Compare.AreAllTablesInvolved(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable[])
  - SuperOffice.Data.SQL.Compare.GetInvolvedTables(System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}@)
  - SuperOffice.Data.SQL.Compare.GetSubElements
  - SuperOffice.Data.SQL.Compare.GetTypedSubElement``1
  - SuperOffice.Data.SQL.Compare.IsRelationDescription
  - SuperOffice.Data.SQL.Compare.IsTableInvolved(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.Compare.Left
  - SuperOffice.Data.SQL.Compare.Right
  langs:
  - csharp
  - vb
  name: Compare
  nameWithType: Compare
  fullName: SuperOffice.Data.SQL.Compare
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nThe Compare class\n"
  syntax:
    content: 'public abstract class Compare : Restriction, ICloneable'
    content.vb: >-
      Public MustInherit Class Compare
          Inherits Restriction
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.QueryElement
  - SuperOffice.Data.SQL.Restriction
  derivedClasses:
  - SuperOffice.Data.SQL.ArrayCompare
  - SuperOffice.Data.SQL.Equal
  - SuperOffice.Data.SQL.GreaterThan
  - SuperOffice.Data.SQL.GreaterThanOrEqual
  - SuperOffice.Data.SQL.LessThan
  - SuperOffice.Data.SQL.LessThanOrEqual
  - SuperOffice.Data.SQL.Like
  - SuperOffice.Data.SQL.NotLike
  - SuperOffice.Data.SQL.UnEqual
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.QueryElement.Clone
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SQL.Compare.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.Compare.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.Data.SQL.Compare.#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Compare.#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: '#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)'
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: Compare(Argument, Argument)
  nameWithType: Compare.Compare(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Compare.Compare(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  remarks: "\nThe most important function performed here is the <strong>patching and transfer of DataType</strong> on the\nleft and right elements. The incoming argument generally has a type derived from the .NET type;\nthis is fine but sometimes not fine-grained enough (does the DateTime actually just represent a Time?).\nTo handle that, we look at the FieldInfo, and transfer its type onto the argument; possibly with some \nlast-minute patching to handle Oracle CLOB storage of what are normal VARCHAR&apos;s on all the other databases.\n"
  syntax:
    content: protected Compare(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
      description: left side of the compare
    - id: right
      type: SuperOffice.Data.SQL.Argument
      description: right side of the compare
    content.vb: Protected Sub New(left As Argument, right As Argument)
  overload: SuperOffice.Data.SQL.Compare.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Data.SQL.Compare.GetSubElements
  commentId: M:SuperOffice.Data.SQL.Compare.GetSubElements
  id: GetSubElements
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: GetSubElements()
  nameWithType: Compare.GetSubElements()
  fullName: SuperOffice.Data.SQL.Compare.GetSubElements()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nPart of visitor pattern defined in abstract class QueryElement\n"
  syntax:
    content: protected override QueryElement[] GetSubElements()
    return:
      type: SuperOffice.Data.SQL.QueryElement[]
    content.vb: Protected Overrides Function GetSubElements As QueryElement()
  overridden: SuperOffice.Data.SQL.QueryElement.GetSubElements
  overload: SuperOffice.Data.SQL.Compare.GetSubElements*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Data.SQL.Compare.IsTableInvolved(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.Compare.IsTableInvolved(SuperOffice.Data.SQL.TableInfo)
  id: IsTableInvolved(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: IsTableInvolved(TableInfo)
  nameWithType: Compare.IsTableInvolved(TableInfo)
  fullName: SuperOffice.Data.SQL.Compare.IsTableInvolved(SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nIs the given table involved in the compare operation?\n"
  syntax:
    content: public bool IsTableInvolved(TableInfo tableInfo)
    parameters:
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: Table to check if it is involved in the operation.
    return:
      type: System.Boolean
      description: True if the table is involved in the operation.
    content.vb: Public Function IsTableInvolved(tableInfo As TableInfo) As Boolean
  overload: SuperOffice.Data.SQL.Compare.IsTableInvolved*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Compare.AreAllTablesInvolved(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable[])
  commentId: M:SuperOffice.Data.SQL.Compare.AreAllTablesInvolved(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable[])
  id: AreAllTablesInvolved(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.Dictionary.SoTable[])
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: AreAllTablesInvolved(TableInfo, SoTable[])
  nameWithType: Compare.AreAllTablesInvolved(TableInfo, SoTable[])
  fullName: SuperOffice.Data.SQL.Compare.AreAllTablesInvolved(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.Dictionary.SoTable[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public bool AreAllTablesInvolved(TableInfo mainTable, params SoTable[] tables)
    parameters:
    - id: mainTable
      type: SuperOffice.Data.SQL.TableInfo
    - id: tables
      type: SuperOffice.Data.Dictionary.SoTable[]
    return:
      type: System.Boolean
    content.vb: Public Function AreAllTablesInvolved(mainTable As TableInfo, ParamArray tables As SoTable()) As Boolean
  overload: SuperOffice.Data.SQL.Compare.AreAllTablesInvolved*
  nameWithType.vb: Compare.AreAllTablesInvolved(TableInfo, SoTable())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Data.SQL.Compare.AreAllTablesInvolved(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.Dictionary.SoTable())
  name.vb: AreAllTablesInvolved(TableInfo, SoTable())
- uid: SuperOffice.Data.SQL.Compare.GetInvolvedTables(System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}@)
  commentId: M:SuperOffice.Data.SQL.Compare.GetInvolvedTables(System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}@)
  id: GetInvolvedTables(System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}@)
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: GetInvolvedTables(ref Dictionary<TableInfo, Object>)
  nameWithType: Compare.GetInvolvedTables(ref Dictionary<TableInfo, Object>)
  fullName: SuperOffice.Data.SQL.Compare.GetInvolvedTables(ref System.Collections.Generic.Dictionary<SuperOffice.Data.SQL.TableInfo, System.Object>)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public void GetInvolvedTables(ref Dictionary<TableInfo, object> tables)
    parameters:
    - id: tables
      type: System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}
    content.vb: Public Sub GetInvolvedTables(ByRef tables As Dictionary(Of TableInfo, Object))
  overload: SuperOffice.Data.SQL.Compare.GetInvolvedTables*
  nameWithType.vb: Compare.GetInvolvedTables(ByRef Dictionary(Of TableInfo, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Data.SQL.Compare.GetInvolvedTables(ByRef System.Collections.Generic.Dictionary(Of SuperOffice.Data.SQL.TableInfo, System.Object))
  name.vb: GetInvolvedTables(ByRef Dictionary(Of TableInfo, Object))
- uid: SuperOffice.Data.SQL.Compare.GetTypedSubElement``1
  commentId: M:SuperOffice.Data.SQL.Compare.GetTypedSubElement``1
  id: GetTypedSubElement``1
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: GetTypedSubElement<T>()
  nameWithType: Compare.GetTypedSubElement<T>()
  fullName: SuperOffice.Data.SQL.Compare.GetTypedSubElement<T>()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nReturn either the Left or Right subelement as a given type, if possible\n"
  syntax:
    content: >-
      public T GetTypedSubElement<T>()
          where T : class
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetTypedSubElement(Of T As Class) As T
  overload: SuperOffice.Data.SQL.Compare.GetTypedSubElement*
  nameWithType.vb: Compare.GetTypedSubElement(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Data.SQL.Compare.GetTypedSubElement(Of T)()
  name.vb: GetTypedSubElement(Of T)()
- uid: SuperOffice.Data.SQL.Compare.Left
  commentId: P:SuperOffice.Data.SQL.Compare.Left
  id: Left
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: Compare.Left
  fullName: SuperOffice.Data.SQL.Compare.Left
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nGet/Set value for left side of the Compare\n"
  syntax:
    content: public Argument Left { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Argument
    content.vb: Public ReadOnly Property Left As Argument
  overload: SuperOffice.Data.SQL.Compare.Left*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Data.SQL.Compare.Right
  commentId: P:SuperOffice.Data.SQL.Compare.Right
  id: Right
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: Compare.Right
  fullName: SuperOffice.Data.SQL.Compare.Right
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nGet/Set value for right side of the Compare\n"
  syntax:
    content: public Argument Right { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Argument
    content.vb: Public ReadOnly Property Right As Argument
  overload: SuperOffice.Data.SQL.Compare.Right*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.Data.SQL.Compare.IsRelationDescription
  commentId: P:SuperOffice.Data.SQL.Compare.IsRelationDescription
  id: IsRelationDescription
  parent: SuperOffice.Data.SQL.Compare
  langs:
  - csharp
  - vb
  name: IsRelationDescription
  nameWithType: Compare.IsRelationDescription
  fullName: SuperOffice.Data.SQL.Compare.IsRelationDescription
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nDoes this Equal operation describe a relation where there is a <xref href=\"SuperOffice.Data.SQL.FieldInfo\" data-throw-if-not-resolved=\"false\"></xref> on both sides and one of the sides include a primary key.\n"
  syntax:
    content: public bool IsRelationDescription { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRelationDescription As Boolean
  overload: SuperOffice.Data.SQL.Compare.IsRelationDescription*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  isExternal: true
  name: And(Restriction)
  nameWithType: Restriction.And(Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
    name: And
    nameWithType: Restriction.And
    fullName: SuperOffice.Data.SQL.Restriction.And
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Restriction.And(SuperOffice.Data.SQL.Restriction)
    name: And
    nameWithType: Restriction.And
    fullName: SuperOffice.Data.SQL.Restriction.And
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  isExternal: true
  name: Or(Restriction)
  nameWithType: Restriction.Or(Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
    name: Or
    nameWithType: Restriction.Or
    fullName: SuperOffice.Data.SQL.Restriction.Or
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Restriction.Or(SuperOffice.Data.SQL.Restriction)
    name: Or
    nameWithType: Restriction.Or
    fullName: SuperOffice.Data.SQL.Restriction.Or
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  isExternal: true
  name: RestrictionAnd(Restriction, Restriction)
  nameWithType: Restriction.RestrictionAnd(Restriction, Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction, SuperOffice.Data.SQL.Restriction)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
    name: RestrictionAnd
    nameWithType: Restriction.RestrictionAnd
    fullName: SuperOffice.Data.SQL.Restriction.RestrictionAnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Restriction.RestrictionAnd(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
    name: RestrictionAnd
    nameWithType: Restriction.RestrictionAnd
    fullName: SuperOffice.Data.SQL.Restriction.RestrictionAnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.Restriction
  isExternal: true
  name: RestrictionOr(Restriction, Restriction)
  nameWithType: Restriction.RestrictionOr(Restriction, Restriction)
  fullName: SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction, SuperOffice.Data.SQL.Restriction)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
    name: RestrictionOr
    nameWithType: Restriction.RestrictionOr
    fullName: SuperOffice.Data.SQL.Restriction.RestrictionOr
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Restriction.RestrictionOr(SuperOffice.Data.SQL.Restriction,SuperOffice.Data.SQL.Restriction)
    name: RestrictionOr
    nameWithType: Restriction.RestrictionOr
    fullName: SuperOffice.Data.SQL.Restriction.RestrictionOr
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Restriction
    name: Restriction
    nameWithType: Restriction
    fullName: SuperOffice.Data.SQL.Restriction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Compare.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<Compare, To>()
  nameWithType: EnumUtil.MapEnums<Compare, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Compare, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of Compare, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Compare, To)()
  name.vb: MapEnums(Of Compare, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<Compare, To>
    nameWithType: EnumUtil.MapEnums<Compare, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Compare, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of Compare, To)
    nameWithType: EnumUtil.MapEnums(Of Compare, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Compare, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Compare.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<Compare, To>()
  nameWithType: Converters.MapEnums<Compare, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Compare, To>()
  nameWithType.vb: Converters.MapEnums(Of Compare, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Compare, To)()
  name.vb: MapEnums(Of Compare, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<Compare, To>
    nameWithType: Converters.MapEnums<Compare, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Compare, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of Compare, To)
    nameWithType: Converters.MapEnums(Of Compare, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Compare, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.Compare.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.Compare.#ctor
  isExternal: true
  name: Compare
  nameWithType: Compare.Compare
  fullName: SuperOffice.Data.SQL.Compare.Compare
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
  commentId: M:SuperOffice.Data.SQL.QueryElement.GetSubElements
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  name: GetSubElements()
  nameWithType: QueryElement.GetSubElements()
  fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
    name: GetSubElements
    nameWithType: QueryElement.GetSubElements
    fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.GetSubElements
    name: GetSubElements
    nameWithType: QueryElement.GetSubElements
    fullName: SuperOffice.Data.SQL.QueryElement.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Compare.GetSubElements*
  commentId: Overload:SuperOffice.Data.SQL.Compare.GetSubElements
  isExternal: true
  name: GetSubElements
  nameWithType: Compare.GetSubElements
  fullName: SuperOffice.Data.SQL.Compare.GetSubElements
- uid: SuperOffice.Data.SQL.QueryElement[]
  isExternal: true
  name: QueryElement[]
  nameWithType: QueryElement[]
  fullName: SuperOffice.Data.SQL.QueryElement[]
  nameWithType.vb: QueryElement()
  fullName.vb: SuperOffice.Data.SQL.QueryElement()
  name.vb: QueryElement()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement
    name: QueryElement
    nameWithType: QueryElement
    fullName: SuperOffice.Data.SQL.QueryElement
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement
    name: QueryElement
    nameWithType: QueryElement
    fullName: SuperOffice.Data.SQL.QueryElement
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.SQL.Compare.IsTableInvolved*
  commentId: Overload:SuperOffice.Data.SQL.Compare.IsTableInvolved
  isExternal: true
  name: IsTableInvolved
  nameWithType: Compare.IsTableInvolved
  fullName: SuperOffice.Data.SQL.Compare.IsTableInvolved
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.SQL.Compare.AreAllTablesInvolved*
  commentId: Overload:SuperOffice.Data.SQL.Compare.AreAllTablesInvolved
  isExternal: true
  name: AreAllTablesInvolved
  nameWithType: Compare.AreAllTablesInvolved
  fullName: SuperOffice.Data.SQL.Compare.AreAllTablesInvolved
- uid: SuperOffice.Data.Dictionary.SoTable[]
  isExternal: true
  name: SoTable[]
  nameWithType: SoTable[]
  fullName: SuperOffice.Data.Dictionary.SoTable[]
  nameWithType.vb: SoTable()
  fullName.vb: SuperOffice.Data.Dictionary.SoTable()
  name.vb: SoTable()
  spec.csharp:
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.Data.Dictionary.SoTable
    name: SoTable
    nameWithType: SoTable
    fullName: SuperOffice.Data.Dictionary.SoTable
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Data.SQL.Compare.GetInvolvedTables*
  commentId: Overload:SuperOffice.Data.SQL.Compare.GetInvolvedTables
  isExternal: true
  name: GetInvolvedTables
  nameWithType: Compare.GetInvolvedTables
  fullName: SuperOffice.Data.SQL.Compare.GetInvolvedTables
- uid: System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{SuperOffice.Data.SQL.TableInfo,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TableInfo, Object>
  nameWithType: Dictionary<TableInfo, Object>
  fullName: System.Collections.Generic.Dictionary<SuperOffice.Data.SQL.TableInfo, System.Object>
  nameWithType.vb: Dictionary(Of TableInfo, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of SuperOffice.Data.SQL.TableInfo, System.Object)
  name.vb: Dictionary(Of TableInfo, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: SuperOffice.Data.SQL.Compare.GetTypedSubElement*
  commentId: Overload:SuperOffice.Data.SQL.Compare.GetTypedSubElement
  isExternal: true
  name: GetTypedSubElement
  nameWithType: Compare.GetTypedSubElement
  fullName: SuperOffice.Data.SQL.Compare.GetTypedSubElement
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SuperOffice.Data.SQL.Compare.Left*
  commentId: Overload:SuperOffice.Data.SQL.Compare.Left
  isExternal: true
  name: Left
  nameWithType: Compare.Left
  fullName: SuperOffice.Data.SQL.Compare.Left
- uid: SuperOffice.Data.SQL.Compare.Right*
  commentId: Overload:SuperOffice.Data.SQL.Compare.Right
  isExternal: true
  name: Right
  nameWithType: Compare.Right
  fullName: SuperOffice.Data.SQL.Compare.Right
- uid: SuperOffice.Data.SQL.Compare.IsRelationDescription*
  commentId: Overload:SuperOffice.Data.SQL.Compare.IsRelationDescription
  isExternal: true
  name: IsRelationDescription
  nameWithType: Compare.IsRelationDescription
  fullName: SuperOffice.Data.SQL.Compare.IsRelationDescription
