### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  commentId: T:SuperOffice.Security.Principal.NSPrincipalAccessorBase
  id: NSPrincipalAccessorBase
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.#ctor
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.User
  langs:
  - csharp
  - vb
  name: NSPrincipalAccessorBase
  nameWithType: NSPrincipalAccessorBase
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nAccessor for NetServer&apos;s current user.\n"
  syntax:
    content: 'public abstract class NSPrincipalAccessorBase : Object, INSPrincipalAccessor'
    content.vb: >-
      Public MustInherit Class NSPrincipalAccessorBase
          Inherits Object
          Implements INSPrincipalAccessor
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.Security.Principal.AsyncLocalPrincipalAccessor
  - SuperOffice.Security.Principal.ProcessPrincipalAccessor
  implements:
  - SuperOffice.Security.Principal.INSPrincipalAccessor
  extensionMethods:
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.NSPrincipalAccessorBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  commentId: M:SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  id: SignIn(System.Security.Claims.ClaimsPrincipal)
  parent: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  langs:
  - csharp
  - vb
  name: SignIn(ClaimsPrincipal)
  nameWithType: NSPrincipalAccessorBase.SignIn(ClaimsPrincipal)
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn(System.Security.Claims.ClaimsPrincipal)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public abstract void SignIn(ClaimsPrincipal user)
    parameters:
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Public MustOverride Sub SignIn(user As ClaimsPrincipal)
  overload: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn*
  implements:
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut
  commentId: M:SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut
  id: SignOut
  parent: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  langs:
  - csharp
  - vb
  name: SignOut()
  nameWithType: NSPrincipalAccessorBase.SignOut()
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public abstract void SignOut()
    content.vb: Public MustOverride Sub SignOut
  overload: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut*
  implements:
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  commentId: M:SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  id: SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  parent: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  langs:
  - csharp
  - vb
  name: SignInWithTemporaryUser(ClaimsPrincipal, Boolean)
  nameWithType: NSPrincipalAccessorBase.SignInWithTemporaryUser(ClaimsPrincipal, Boolean)
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public IDisposable SignInWithTemporaryUser(ClaimsPrincipal user, bool forceCleanStack = false)
    parameters:
    - id: user
      type: System.Security.Claims.ClaimsPrincipal
    - id: forceCleanStack
      type: System.Boolean
    return:
      type: System.IDisposable
    content.vb: Public Function SignInWithTemporaryUser(user As ClaimsPrincipal, forceCleanStack As Boolean = False) As IDisposable
  overload: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser*
  implements:
  - SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.#ctor
  commentId: M:SuperOffice.Security.Principal.NSPrincipalAccessorBase.#ctor
  id: '#ctor'
  parent: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  langs:
  - csharp
  - vb
  name: NSPrincipalAccessorBase()
  nameWithType: NSPrincipalAccessorBase.NSPrincipalAccessorBase()
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.NSPrincipalAccessorBase()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: protected NSPrincipalAccessorBase()
    content.vb: Protected Sub New
  overload: SuperOffice.Security.Principal.NSPrincipalAccessorBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.User
  commentId: P:SuperOffice.Security.Principal.NSPrincipalAccessorBase.User
  id: User
  parent: SuperOffice.Security.Principal.NSPrincipalAccessorBase
  langs:
  - csharp
  - vb
  name: User
  nameWithType: NSPrincipalAccessorBase.User
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.User
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public virtual ClaimsPrincipal User { get; }
    parameters: []
    return:
      type: System.Security.Claims.ClaimsPrincipal
    content.vb: Public Overridable ReadOnly Property User As ClaimsPrincipal
  overload: SuperOffice.Security.Principal.NSPrincipalAccessorBase.User*
  implements:
  - SuperOffice.Security.Principal.INSPrincipalAccessor.User
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor
  commentId: T:SuperOffice.Security.Principal.INSPrincipalAccessor
  parent: SuperOffice.Security.Principal
  isExternal: true
  name: INSPrincipalAccessor
  nameWithType: INSPrincipalAccessor
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<NSPrincipalAccessorBase, To>()
  nameWithType: EnumUtil.MapEnums<NSPrincipalAccessorBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.NSPrincipalAccessorBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of NSPrincipalAccessorBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.NSPrincipalAccessorBase, To)()
  name.vb: MapEnums(Of NSPrincipalAccessorBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<NSPrincipalAccessorBase, To>
    nameWithType: EnumUtil.MapEnums<NSPrincipalAccessorBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.NSPrincipalAccessorBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of NSPrincipalAccessorBase, To)
    nameWithType: EnumUtil.MapEnums(Of NSPrincipalAccessorBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.NSPrincipalAccessorBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<NSPrincipalAccessorBase, To>()
  nameWithType: Converters.MapEnums<NSPrincipalAccessorBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.NSPrincipalAccessorBase, To>()
  nameWithType.vb: Converters.MapEnums(Of NSPrincipalAccessorBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.NSPrincipalAccessorBase, To)()
  name.vb: MapEnums(Of NSPrincipalAccessorBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<NSPrincipalAccessorBase, To>
    nameWithType: Converters.MapEnums<NSPrincipalAccessorBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.NSPrincipalAccessorBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of NSPrincipalAccessorBase, To)
    nameWithType: Converters.MapEnums(Of NSPrincipalAccessorBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.NSPrincipalAccessorBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn*
  commentId: Overload:SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn
  isExternal: true
  name: SignIn
  nameWithType: NSPrincipalAccessorBase.SignIn
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignIn
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  commentId: M:SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  isExternal: true
  name: SignIn(ClaimsPrincipal)
  nameWithType: INSPrincipalAccessor.SignIn(ClaimsPrincipal)
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
    name: SignIn
    nameWithType: INSPrincipalAccessor.SignIn
    fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn(System.Security.Claims.ClaimsPrincipal)
    name: SignIn
    nameWithType: INSPrincipalAccessor.SignIn
    fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Security.Claims.ClaimsPrincipal
  isExternal: true
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut*
  commentId: Overload:SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut
  isExternal: true
  name: SignOut
  nameWithType: NSPrincipalAccessorBase.SignOut
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignOut
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  commentId: M:SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  isExternal: true
  name: SignOut()
  nameWithType: INSPrincipalAccessor.SignOut()
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
    name: SignOut
    nameWithType: INSPrincipalAccessor.SignOut
    fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
    name: SignOut
    nameWithType: INSPrincipalAccessor.SignOut
    fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignOut
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser*
  commentId: Overload:SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser
  isExternal: true
  name: SignInWithTemporaryUser
  nameWithType: NSPrincipalAccessorBase.SignInWithTemporaryUser
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.SignInWithTemporaryUser
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  commentId: M:SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  isExternal: true
  name: SignInWithTemporaryUser(ClaimsPrincipal, Boolean)
  nameWithType: INSPrincipalAccessor.SignInWithTemporaryUser(ClaimsPrincipal, Boolean)
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
    name: SignInWithTemporaryUser
    nameWithType: INSPrincipalAccessor.SignInWithTemporaryUser
    fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser(System.Security.Claims.ClaimsPrincipal,System.Boolean)
    name: SignInWithTemporaryUser
    nameWithType: INSPrincipalAccessor.SignInWithTemporaryUser
    fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.SignInWithTemporaryUser
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.ClaimsPrincipal
    name: ClaimsPrincipal
    nameWithType: ClaimsPrincipal
    fullName: System.Security.Claims.ClaimsPrincipal
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.NSPrincipalAccessorBase.#ctor
  isExternal: true
  name: NSPrincipalAccessorBase
  nameWithType: NSPrincipalAccessorBase.NSPrincipalAccessorBase
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.NSPrincipalAccessorBase
- uid: SuperOffice.Security.Principal.NSPrincipalAccessorBase.User*
  commentId: Overload:SuperOffice.Security.Principal.NSPrincipalAccessorBase.User
  isExternal: true
  name: User
  nameWithType: NSPrincipalAccessorBase.User
  fullName: SuperOffice.Security.Principal.NSPrincipalAccessorBase.User
- uid: SuperOffice.Security.Principal.INSPrincipalAccessor.User
  commentId: P:SuperOffice.Security.Principal.INSPrincipalAccessor.User
  parent: SuperOffice.Security.Principal.INSPrincipalAccessor
  isExternal: true
  name: User
  nameWithType: INSPrincipalAccessor.User
  fullName: SuperOffice.Security.Principal.INSPrincipalAccessor.User
