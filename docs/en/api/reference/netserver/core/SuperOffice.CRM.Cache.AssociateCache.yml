### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Cache.AssociateCache
  commentId: T:SuperOffice.CRM.Cache.AssociateCache
  id: AssociateCache
  parent: SuperOffice.CRM.Cache
  children:
  - SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames(System.Boolean)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociate(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateId(System.String)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateName(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetAssociateType(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetCurrent
  - SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate(System.Int32,System.Boolean)
  - SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32,System.Int32)
  - SuperOffice.CRM.Cache.AssociateCache.OnLoad
  - SuperOffice.CRM.Cache.AssociateCache.TableNames
  - SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate(System.Int32)
  langs:
  - csharp
  - vb
  name: AssociateCache
  nameWithType: AssociateCache
  fullName: SuperOffice.CRM.Cache.AssociateCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: >-
      [CacheV2("Database", 0)]

      public class AssociateCache : CacheBaseV2, IFlushableV2, IDisposable
    content.vb: >-
      <CacheV2("Database", 0)>

      Public Class AssociateCache
          Inherits CacheBaseV2
          Implements IFlushableV2, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  implements:
  - SuperOffice.Data.Cache.IFlushableV2
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.Dispose
  - SuperOffice.Data.Cache.CacheBaseV2.Flush
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Cache.AssociateCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Cache.AssociateCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: Database
    - type: System.Int32
      value: 0
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  id: IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: AssociateCache.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine if cache actually needs to be flushed. The answer is <strong>no</strong> for changes to non-person associates\n"
  syntax:
    content: protected override bool IsCacheInvalidated(string tableName, int primaryKey, PrivateSave save)
    parameters:
    - id: tableName
      type: System.String
    - id: primaryKey
      type: System.Int32
    - id: save
      type: SuperOffice.Data.SQL.PrivateSave
    return:
      type: System.Boolean
    content.vb: Protected Overrides Function IsCacheInvalidated(tableName As String, primaryKey As Integer, save As PrivateSave) As Boolean
  overridden: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  overload: SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds
  id: GetAssociateIds
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateIds()
  nameWithType: AssociateCache.GetAssociateIds()
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet all associate id&apos;s\n"
  syntax:
    content: public IEnumerable<int> GetAssociateIds()
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
    content.vb: Public Function GetAssociateIds As IEnumerable(Of Integer)
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateId(System.String)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateId(System.String)
  id: GetAssociateId(System.String)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateId(String)
  nameWithType: AssociateCache.GetAssociateId(String)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateId(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the associate id from a associate name\n"
  syntax:
    content: public int GetAssociateId(string name)
    parameters:
    - id: name
      type: System.String
      description: name of the associate (e.g. user id)
    return:
      type: System.Int32
      description: Associate Id.  -1 is returned if the the provided name is not a valid associate.
    content.vb: Public Function GetAssociateId(name As String) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociate(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociate(System.Int32)
  id: GetAssociate(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociate(Int32)
  nameWithType: AssociateCache.GetAssociate(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociate(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet an Associate based on it&apos;s associate Id\n"
  syntax:
    content: public AssociateRecordData GetAssociate(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Primary key for the Associate.
    return:
      type: SuperOffice.CRM.Rows.AssociateRecordData
      description: Associate entity.
    content.vb: Public Function GetAssociate(associateId As Integer) As AssociateRecordData
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateName(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateName(System.Int32)
  id: GetAssociateName(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateName(Int32)
  nameWithType: AssociateCache.GetAssociateName(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateName(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public string GetAssociateName(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Function GetAssociateName(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames(System.Boolean)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames(System.Boolean)
  id: GetAllAssociateFullNames(System.Boolean)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAllAssociateFullNames(Boolean)
  nameWithType: AssociateCache.GetAllAssociateFullNames(Boolean)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet all employees/users - the associate tooltip is set to the person&apos;s full name\n"
  syntax:
    content: public Dictionary<int, string> GetAllAssociateFullNames(bool includeRetired)
    parameters:
    - id: includeRetired
      type: System.Boolean
      description: true if you want retired associates included
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,System.String}
      description: Array of associate info
    content.vb: Public Function GetAllAssociateFullNames(includeRetired As Boolean) As Dictionary(Of Integer, String)
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateType(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateType(System.Int32)
  id: GetAssociateType(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateType(Int32)
  nameWithType: AssociateCache.GetAssociateType(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateType(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the <xref href=\"SuperOffice.Data.AssociateType\" data-throw-if-not-resolved=\"false\"></xref> for a user.\n"
  syntax:
    content: public AssociateType GetAssociateType(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId for the user to check the <xref href="SuperOffice.Data.AssociateType" data-throw-if-not-resolved="false"></xref> for.
    return:
      type: SuperOffice.Data.AssociateType
      description: Type of user.
    content.vb: Public Function GetAssociateType(associateId As Integer) As AssociateType
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner(System.Int32)
  id: IsAssociateTypeDiaryOwner(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsAssociateTypeDiaryOwner(Int32)
  nameWithType: AssociateCache.IsAssociateTypeDiaryOwner(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine whether this associate has a diary, based on the <xref href=\"SuperOffice.Data.AssociateType.NoCalenderBit\" data-throw-if-not-resolved=\"false\"></xref> flag bits of the associate type.\n"
  syntax:
    content: public bool IsAssociateTypeDiaryOwner(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to check
    return:
      type: System.Boolean
      description: true if the associate has a diary (AssociateType.NoCalenderBit = 0)
    content.vb: Public Function IsAssociateTypeDiaryOwner(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson(System.Int32)
  id: IsAssociateTypeSomeKindOfPerson(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsAssociateTypeSomeKindOfPerson(Int32)
  nameWithType: AssociateCache.IsAssociateTypeSomeKindOfPerson(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine whether this associate is some kind of person (resource, for instance, are not),\nbased on the <xref href=\"SuperOffice.Data.AssociateType\" data-throw-if-not-resolved=\"false\"></xref> flag bits of the associate type.\n"
  syntax:
    content: public bool IsAssociateTypeSomeKindOfPerson(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to check
    return:
      type: System.Boolean
      description: true if the associate is some kind of person
    content.vb: Public Function IsAssociateTypeSomeKindOfPerson(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous(System.Int32)
  id: IsAssociateTypeAnonymous(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsAssociateTypeAnonymous(Int32)
  nameWithType: AssociateCache.IsAssociateTypeAnonymous(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine whether this associate is anonymous, \nbased on the <xref href=\"SuperOffice.Data.AssociateType\" data-throw-if-not-resolved=\"false\"></xref> flag bits of the associate type.\n"
  syntax:
    content: public bool IsAssociateTypeAnonymous(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to check
    return:
      type: System.Boolean
      description: true if the associate is anonymous
    content.vb: Public Function IsAssociateTypeAnonymous(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry(System.Int32)
  id: IsAssociateTypeNoSentry(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsAssociateTypeNoSentry(Int32)
  nameWithType: AssociateCache.IsAssociateTypeNoSentry(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine whether this associate is exempt from Sentry checks,\nbased on the <xref href=\"SuperOffice.Data.AssociateType\" data-throw-if-not-resolved=\"false\"></xref> flag bits of the associate type.\n"
  syntax:
    content: public bool IsAssociateTypeNoSentry(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to check
    return:
      type: System.Boolean
      description: true if the associate ignores the sentry system (a rare privilege)
    content.vb: Public Function IsAssociateTypeNoSentry(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource(System.Int32)
  id: IsAssociateTypeResource(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsAssociateTypeResource(Int32)
  nameWithType: AssociateCache.IsAssociateTypeResource(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine whether this associate is a resource\nbased on the <xref href=\"SuperOffice.Data.AssociateType\" data-throw-if-not-resolved=\"false\"></xref> flag bits of the associate type.\n"
  syntax:
    content: public bool IsAssociateTypeResource(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to check
    return:
      type: System.Boolean
      description: true if the associate actually is a resource
    content.vb: Public Function IsAssociateTypeResource(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId(System.Int32)
  id: GetAssociatePersonId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociatePersonId(Int32)
  nameWithType: AssociateCache.GetAssociatePersonId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the PersonId for an associate. 0 is returned if there is no valid associate with that id (or if the associate.PersonId actually is 0, \nwhich is the case for resources and some other special kinds of associates).\n"
  syntax:
    content: public int GetAssociatePersonId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associate id of the user to get the PersonId for.
    return:
      type: System.Int32
      description: PersonId for the user.
    content.vb: Public Function GetAssociatePersonId(associateId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry(System.Int32)
  id: GetAssociateCountry(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateCountry(Int32)
  nameWithType: AssociateCache.GetAssociateCountry(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet country id for the associate.\n"
  syntax:
    content: public int GetAssociateCountry(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId to get countryId for
    return:
      type: System.Int32
      description: Country id for the associate.
    content.vb: Public Function GetAssociateCountry(associateId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId(System.Int32)
  id: GetAssociateOwnerId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateOwnerId(Int32)
  nameWithType: AssociateCache.GetAssociateOwnerId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the associate id for the owner of the contact that the person representing the associate belongs to. (associate.person.contact.associate)\n"
  syntax:
    content: public int GetAssociateOwnerId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the person the get owner for.
    return:
      type: System.Int32
      description: AssociateId of the owner.
    content.vb: Public Function GetAssociateOwnerId(associateId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName(System.Int32)
  id: GetAssociateFirstName(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateFirstName(Int32)
  nameWithType: AssociateCache.GetAssociateFirstName(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the first name of the associate (from person record that the associate belongs to)\n"
  syntax:
    content: public string GetAssociateFirstName(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.String
      description: First name of the associate&apos;s person
    content.vb: Public Function GetAssociateFirstName(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName(System.Int32)
  id: GetAssociateLastName(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateLastName(Int32)
  nameWithType: AssociateCache.GetAssociateLastName(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the last name of the associate (from person record that the associate belongs to)\n"
  syntax:
    content: public string GetAssociateLastName(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.String
      description: Last name of the associate&apos;s person
    content.vb: Public Function GetAssociateLastName(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName(System.Int32)
  id: GetAssociateMiddleName(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateMiddleName(Int32)
  nameWithType: AssociateCache.GetAssociateMiddleName(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the middle name of the associate (from person record that the associate belongs to)\n"
  syntax:
    content: public string GetAssociateMiddleName(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.String
      description: Middle name of the associate&apos;s person
    content.vb: Public Function GetAssociateMiddleName(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs(System.Int32)
  id: GetAssociateMrMrs(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateMrMrs(Int32)
  nameWithType: AssociateCache.GetAssociateMrMrs(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the MrMrs field of the associate (from person record that the associate belongs to)\n"
  syntax:
    content: public string GetAssociateMrMrs(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.String
      description: MrMrs field of the associate&apos;s person
    content.vb: Public Function GetAssociateMrMrs(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle(System.Int32)
  id: GetAssociateTitle(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateTitle(Int32)
  nameWithType: AssociateCache.GetAssociateTitle(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the title field of the associate (from person record that the associate belongs to)\n"
  syntax:
    content: public string GetAssociateTitle(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.String
      description: Title field of the associate&apos;s person
    content.vb: Public Function GetAssociateTitle(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName(System.Int32)
  id: GetAssociateFullName(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateFullName(Int32)
  nameWithType: AssociateCache.GetAssociateFullName(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the full name of an associate according to <xref href=\"SuperOffice.CRM.Globalization.PersonNameFormatter.GetFullName(System.String%2cSystem.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public string GetAssociateFullName(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the person to get the full name for.
    return:
      type: System.String
      description: Full name according to <xref href="SuperOffice.CRM.Globalization.PersonNameFormatter.GetFullName(System.String%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function GetAssociateFullName(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName(System.Int32)
  id: GetAssociateFormalName(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateFormalName(Int32)
  nameWithType: AssociateCache.GetAssociateFormalName(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the formal name of an associate based on <xref href=\"SuperOffice.CRM.Globalization.PersonNameFormatter.GetFormalName(System.String%2cSystem.String%2cSystem.String%2cSystem.Int32%2cSystem.String%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public string GetAssociateFormalName(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the person
    return:
      type: System.String
      description: 'Formal name according to <xref href="SuperOffice.CRM.Globalization.PersonNameFormatter.GetFormalName(System.String%2cSystem.String%2cSystem.String%2cSystem.Int32%2cSystem.String%2cSystem.String)" data-throw-if-not-resolved="false"></xref>. '
    content.vb: Public Function GetAssociateFormalName(associateId As Integer) As String
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId(System.Int32)
  id: GetAssociateEmailId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateEmailId(Int32)
  nameWithType: AssociateCache.GetAssociateEmailId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the email-id, of rank 1, if it exists for an associate\n"
  syntax:
    content: public int GetAssociateEmailId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.Int32
      description: email_id of rank 0 linked to associates&apos; person; 0 is returned in any other case
    content.vb: Public Function GetAssociateEmailId(associateId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth(System.Int32)
  id: GetAssociateDateOfBirth(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateDateOfBirth(Int32)
  nameWithType: AssociateCache.GetAssociateDateOfBirth(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the date of birth of the associate (from person record that the associate belongs to)\n"
  syntax:
    content: public DateTime GetAssociateDateOfBirth(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate to look up
    return:
      type: System.DateTime
      description: Date of birth of the associate&apos;s person
    content.vb: Public Function GetAssociateDateOfBirth(associateId As Integer) As DateTime
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32)
  id: IsUserInSameContact(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsUserInSameContact(Int32)
  nameWithType: AssociateCache.IsUserInSameContact(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nIs the logged on user belonging to the same contact?\n"
  syntax:
    content: public bool IsUserInSameContact(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId for the user to check if belongs to same contact
    return:
      type: System.Boolean
      description: true if they belong to the same contact.
    content.vb: Public Function IsUserInSameContact(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32,System.Int32)
  id: IsUserInSameContact(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsUserInSameContact(Int32, Int32)
  nameWithType: AssociateCache.IsUserInSameContact(Int32, Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact(System.Int32, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nIs the two users belonging to the same contact?\n"
  syntax:
    content: public bool IsUserInSameContact(int associateId1, int associateId2)
    parameters:
    - id: associateId1
      type: System.Int32
      description: AssociateId for the 1st user to check if belongs to same contac.
    - id: associateId2
      type: System.Int32
      description: AssociateId for the 2nd user to check if belongs to same contact.
    return:
      type: System.Boolean
      description: true if they belong to the same contact.
    content.vb: Public Function IsUserInSameContact(associateId1 As Integer, associateId2 As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate(System.Int32,System.Boolean)
  id: IsPersonAssociate(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsPersonAssociate(Int32, Boolean)
  nameWithType: AssociateCache.IsPersonAssociate(Int32, Boolean)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate(System.Int32, System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nIs a given person an associate (e.g. user).\n"
  syntax:
    content: public bool IsPersonAssociate(int personId, bool useFailSafeValidation = false)
    parameters:
    - id: personId
      type: System.Int32
      description: PersonId of the person to check if it is an associate.
    - id: useFailSafeValidation
      type: System.Boolean
      description: "If you have to be 100% sure that your database is consistent with\nthe cache, this value should be true. Otherwise, use false or just omit the parameter all together. \nSetting this value true might refresh the cache and subsequently limits performance. Should only be used \nif consistency is vital"
    return:
      type: System.Boolean
      description: True if the person is an associate.
    content.vb: Public Function IsPersonAssociate(personId As Integer, useFailSafeValidation As Boolean = False) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId(System.Int32)
  id: GetPersonAssociateId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetPersonAssociateId(Int32)
  nameWithType: AssociateCache.GetPersonAssociateId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet a AssociateId for a person, 0 is returned if the person is not an associate.\n"
  syntax:
    content: public int GetPersonAssociateId(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person&apos;s id to get the AssociateId for.
    return:
      type: System.Int32
      description: The AssociateId of the user.  If the person is not a user, &apos;0&apos; is returned.
    content.vb: Public Function GetPersonAssociateId(personId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId(System.Int32)
  id: GetEjUserAssociateId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetEjUserAssociateId(Int32)
  nameWithType: AssociateCache.GetEjUserAssociateId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the AssociateId for a given EjUser\n"
  syntax:
    content: public int GetEjUserAssociateId(int ejUserId)
    parameters:
    - id: ejUserId
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function GetEjUserAssociateId(ejUserId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId(System.Int32)
  id: GetAssociateEjUserId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateEjUserId(Int32)
  nameWithType: AssociateCache.GetAssociateEjUserId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the EjUserId for a given associate\n"
  syntax:
    content: public int GetAssociateEjUserId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Function GetAssociateEjUserId(associateId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId(System.Int32)
  id: GetAssociateContactId(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateContactId(Int32)
  nameWithType: AssociateCache.GetAssociateContactId(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the ContactId for an associate.\n"
  syntax:
    content: public int GetAssociateContactId(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associate id of the user to get the ContactId for.
    return:
      type: System.Int32
      description: ContactId for the user.
    content.vb: Public Function GetAssociateContactId(associateId As Integer) As Integer
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired(System.Int32)
  id: IsAssociateRetired(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: IsAssociateRetired(Int32)
  nameWithType: AssociateCache.IsAssociateRetired(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public bool IsAssociateRetired(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
    return:
      type: System.Boolean
    content.vb: Public Function IsAssociateRetired(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact(System.Int32)
  id: GetAssociateContact(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetAssociateContact(Int32)
  nameWithType: AssociateCache.GetAssociateContact(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the (cached) contact for an associate\n"
  syntax:
    content: public ContactRecordData GetAssociateContact(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: The associate id of the user to get the contact for
    return:
      type: SuperOffice.CRM.Rows.ContactRecordData
      description: ContactRow, or null if the associate does not have an owning contact (is a resource, for instance)
    content.vb: Public Function GetAssociateContact(associateId As Integer) As ContactRecordData
  overload: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate(System.Int32)
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate(System.Int32)
  id: ValidateAndTestAssociate(System.Int32)
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: ValidateAndTestAssociate(Int32)
  nameWithType: AssociateCache.ValidateAndTestAssociate(Int32)
  fullName: SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nValidate that an associate exists. Refresh the cache if we&apos;re asking about the current logged-in\nuser, since he may be freshly created and not in the cache. Keep a zombie list of known non-existent ones.\n"
  syntax:
    content: public bool ValidateAndTestAssociate(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Id of the associate to validate.
    return:
      type: System.Boolean
    content.vb: Public Function ValidateAndTestAssociate(associateId As Integer) As Boolean
  overload: SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.AssociateCache.GetCurrent
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.GetCurrent
  id: GetCurrent
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: GetCurrent()
  nameWithType: AssociateCache.GetCurrent()
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetCurrent()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public static AssociateCache GetCurrent()
    return:
      type: SuperOffice.CRM.Cache.AssociateCache
    content.vb: Public Shared Function GetCurrent As AssociateCache
  overload: SuperOffice.CRM.Cache.AssociateCache.GetCurrent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Cache.AssociateCache.OnLoad
  commentId: M:SuperOffice.CRM.Cache.AssociateCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: AssociateCache.OnLoad()
  fullName: SuperOffice.CRM.Cache.AssociateCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Cache.AssociateCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.AssociateCache.TableNames
  commentId: P:SuperOffice.CRM.Cache.AssociateCache.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Cache.AssociateCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: AssociateCache.TableNames
  fullName: SuperOffice.CRM.Cache.AssociateCache.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Cache.AssociateCache.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Cache
  commentId: N:SuperOffice.CRM.Cache
  isExternal: true
  name: SuperOffice.CRM.Cache
  nameWithType: SuperOffice.CRM.Cache
  fullName: SuperOffice.CRM.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.IFlushableV2
  commentId: T:SuperOffice.Data.Cache.IFlushableV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: IFlushableV2
  nameWithType: IFlushableV2
  fullName: SuperOffice.Data.Cache.IFlushableV2
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Dispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Dispose()
  nameWithType: CacheBaseV2.Dispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Flush
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Flush()
  nameWithType: CacheBaseV2.Flush()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: GetCurrent<T>()
  nameWithType: CacheBaseV2.GetCurrent<T>()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>()
  nameWithType.vb: CacheBaseV2.GetCurrent(Of T)()
  fullName.vb: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)()
  name.vb: GetCurrent(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent<T>
    nameWithType: CacheBaseV2.GetCurrent<T>
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent(Of T)
    nameWithType: CacheBaseV2.GetCurrent(Of T)
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Cache.AssociateCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<AssociateCache, To>()
  nameWithType: EnumUtil.MapEnums<AssociateCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.AssociateCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of AssociateCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.AssociateCache, To)()
  name.vb: MapEnums(Of AssociateCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<AssociateCache, To>
    nameWithType: EnumUtil.MapEnums<AssociateCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.AssociateCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of AssociateCache, To)
    nameWithType: EnumUtil.MapEnums(Of AssociateCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.AssociateCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.AssociateCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<AssociateCache, To>()
  nameWithType: Converters.MapEnums<AssociateCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.AssociateCache, To>()
  nameWithType.vb: Converters.MapEnums(Of AssociateCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.AssociateCache, To)()
  name.vb: MapEnums(Of AssociateCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<AssociateCache, To>
    nameWithType: Converters.MapEnums<AssociateCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.AssociateCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of AssociateCache, To)
    nameWithType: Converters.MapEnums(Of AssociateCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.AssociateCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: CacheBaseV2.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated
  isExternal: true
  name: IsCacheInvalidated
  nameWithType: AssociateCache.IsCacheInvalidated
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsCacheInvalidated
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds
  isExternal: true
  name: GetAssociateIds
  nameWithType: AssociateCache.GetAssociateIds
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateIds
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Int32}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateId
  isExternal: true
  name: GetAssociateId
  nameWithType: AssociateCache.GetAssociateId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociate*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociate
  isExternal: true
  name: GetAssociate
  nameWithType: AssociateCache.GetAssociate
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociate
- uid: SuperOffice.CRM.Rows.AssociateRecordData
  commentId: T:SuperOffice.CRM.Rows.AssociateRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: AssociateRecordData
  nameWithType: AssociateRecordData
  fullName: SuperOffice.CRM.Rows.AssociateRecordData
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateName*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateName
  isExternal: true
  name: GetAssociateName
  nameWithType: AssociateCache.GetAssociateName
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateName
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames
  isExternal: true
  name: GetAllAssociateFullNames
  nameWithType: AssociateCache.GetAllAssociateFullNames
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAllAssociateFullNames
- uid: System.Collections.Generic.Dictionary{System.Int32,System.String}
  commentId: '!:System.Collections.Generic.Dictionary{System.Int32,System.String}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Int32, String>
  nameWithType: Dictionary<Int32, String>
  fullName: System.Collections.Generic.Dictionary<System.Int32, System.String>
  nameWithType.vb: Dictionary(Of Int32, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Int32, System.String)
  name.vb: Dictionary(Of Int32, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateType*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateType
  isExternal: true
  name: GetAssociateType
  nameWithType: AssociateCache.GetAssociateType
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateType
- uid: SuperOffice.Data.AssociateType
  commentId: T:SuperOffice.Data.AssociateType
  parent: SuperOffice.Data
  isExternal: true
  name: AssociateType
  nameWithType: AssociateType
  fullName: SuperOffice.Data.AssociateType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner
  isExternal: true
  name: IsAssociateTypeDiaryOwner
  nameWithType: AssociateCache.IsAssociateTypeDiaryOwner
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeDiaryOwner
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson
  isExternal: true
  name: IsAssociateTypeSomeKindOfPerson
  nameWithType: AssociateCache.IsAssociateTypeSomeKindOfPerson
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeSomeKindOfPerson
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous
  isExternal: true
  name: IsAssociateTypeAnonymous
  nameWithType: AssociateCache.IsAssociateTypeAnonymous
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeAnonymous
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry
  isExternal: true
  name: IsAssociateTypeNoSentry
  nameWithType: AssociateCache.IsAssociateTypeNoSentry
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeNoSentry
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource
  isExternal: true
  name: IsAssociateTypeResource
  nameWithType: AssociateCache.IsAssociateTypeResource
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateTypeResource
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId
  isExternal: true
  name: GetAssociatePersonId
  nameWithType: AssociateCache.GetAssociatePersonId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociatePersonId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry
  isExternal: true
  name: GetAssociateCountry
  nameWithType: AssociateCache.GetAssociateCountry
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateCountry
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId
  isExternal: true
  name: GetAssociateOwnerId
  nameWithType: AssociateCache.GetAssociateOwnerId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateOwnerId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName
  isExternal: true
  name: GetAssociateFirstName
  nameWithType: AssociateCache.GetAssociateFirstName
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFirstName
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName
  isExternal: true
  name: GetAssociateLastName
  nameWithType: AssociateCache.GetAssociateLastName
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateLastName
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName
  isExternal: true
  name: GetAssociateMiddleName
  nameWithType: AssociateCache.GetAssociateMiddleName
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMiddleName
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs
  isExternal: true
  name: GetAssociateMrMrs
  nameWithType: AssociateCache.GetAssociateMrMrs
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateMrMrs
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle
  isExternal: true
  name: GetAssociateTitle
  nameWithType: AssociateCache.GetAssociateTitle
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateTitle
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName
  isExternal: true
  name: GetAssociateFullName
  nameWithType: AssociateCache.GetAssociateFullName
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFullName
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName
  isExternal: true
  name: GetAssociateFormalName
  nameWithType: AssociateCache.GetAssociateFormalName
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateFormalName
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId
  isExternal: true
  name: GetAssociateEmailId
  nameWithType: AssociateCache.GetAssociateEmailId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEmailId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth
  isExternal: true
  name: GetAssociateDateOfBirth
  nameWithType: AssociateCache.GetAssociateDateOfBirth
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateDateOfBirth
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact
  isExternal: true
  name: IsUserInSameContact
  nameWithType: AssociateCache.IsUserInSameContact
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsUserInSameContact
- uid: SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate
  isExternal: true
  name: IsPersonAssociate
  nameWithType: AssociateCache.IsPersonAssociate
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsPersonAssociate
- uid: SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId
  isExternal: true
  name: GetPersonAssociateId
  nameWithType: AssociateCache.GetPersonAssociateId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetPersonAssociateId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId
  isExternal: true
  name: GetEjUserAssociateId
  nameWithType: AssociateCache.GetEjUserAssociateId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetEjUserAssociateId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId
  isExternal: true
  name: GetAssociateEjUserId
  nameWithType: AssociateCache.GetAssociateEjUserId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateEjUserId
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId
  isExternal: true
  name: GetAssociateContactId
  nameWithType: AssociateCache.GetAssociateContactId
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContactId
- uid: SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired
  isExternal: true
  name: IsAssociateRetired
  nameWithType: AssociateCache.IsAssociateRetired
  fullName: SuperOffice.CRM.Cache.AssociateCache.IsAssociateRetired
- uid: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact
  isExternal: true
  name: GetAssociateContact
  nameWithType: AssociateCache.GetAssociateContact
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetAssociateContact
- uid: SuperOffice.CRM.Rows.ContactRecordData
  commentId: T:SuperOffice.CRM.Rows.ContactRecordData
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ContactRecordData
  nameWithType: ContactRecordData
  fullName: SuperOffice.CRM.Rows.ContactRecordData
- uid: SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate
  isExternal: true
  name: ValidateAndTestAssociate
  nameWithType: AssociateCache.ValidateAndTestAssociate
  fullName: SuperOffice.CRM.Cache.AssociateCache.ValidateAndTestAssociate
- uid: SuperOffice.CRM.Cache.AssociateCache.GetCurrent*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.GetCurrent
  isExternal: true
  name: GetCurrent
  nameWithType: AssociateCache.GetCurrent
  fullName: SuperOffice.CRM.Cache.AssociateCache.GetCurrent
- uid: SuperOffice.CRM.Cache.AssociateCache
  commentId: T:SuperOffice.CRM.Cache.AssociateCache
  parent: SuperOffice.CRM.Cache
  isExternal: true
  name: AssociateCache
  nameWithType: AssociateCache
  fullName: SuperOffice.CRM.Cache.AssociateCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.AssociateCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: AssociateCache.OnLoad
  fullName: SuperOffice.CRM.Cache.AssociateCache.OnLoad
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Cache.AssociateCache.TableNames*
  commentId: Overload:SuperOffice.CRM.Cache.AssociateCache.TableNames
  isExternal: true
  name: TableNames
  nameWithType: AssociateCache.TableNames
  fullName: SuperOffice.CRM.Cache.AssociateCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
