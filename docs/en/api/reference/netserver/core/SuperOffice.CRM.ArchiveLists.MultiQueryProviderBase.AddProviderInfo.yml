### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  id: MultiQueryProviderBase.AddProviderInfo
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.#ctor(System.Type,System.Object,System.Type)
  - SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgument
  - SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgumentType
  - SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._providerType
  langs:
  - csharp
  - vb
  name: MultiQueryProviderBase.AddProviderInfo
  nameWithType: MultiQueryProviderBase.AddProviderInfo
  fullName: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: protected class AddProviderInfo
    content.vb: Protected Class AddProviderInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._providerType
  commentId: F:SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._providerType
  id: _providerType
  parent: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  langs:
  - csharp
  - vb
  name: _providerType
  nameWithType: MultiQueryProviderBase.AddProviderInfo._providerType
  fullName: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._providerType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public Type _providerType
    return:
      type: System.Type
    content.vb: Public _providerType As Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgument
  commentId: F:SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgument
  id: _constructorArgument
  parent: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  langs:
  - csharp
  - vb
  name: _constructorArgument
  nameWithType: MultiQueryProviderBase.AddProviderInfo._constructorArgument
  fullName: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgument
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public object _constructorArgument
    return:
      type: System.Object
    content.vb: Public _constructorArgument As Object
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgumentType
  commentId: F:SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgumentType
  id: _constructorArgumentType
  parent: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  langs:
  - csharp
  - vb
  name: _constructorArgumentType
  nameWithType: MultiQueryProviderBase.AddProviderInfo._constructorArgumentType
  fullName: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo._constructorArgumentType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public Type _constructorArgumentType
    return:
      type: System.Type
    content.vb: Public _constructorArgumentType As Type
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.#ctor(System.Type,System.Object,System.Type)
  commentId: M:SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.#ctor(System.Type,System.Object,System.Type)
  id: '#ctor(System.Type,System.Object,System.Type)'
  parent: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo
  langs:
  - csharp
  - vb
  name: AddProviderInfo(Type, Object, Type)
  nameWithType: MultiQueryProviderBase.AddProviderInfo.AddProviderInfo(Type, Object, Type)
  fullName: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.AddProviderInfo(System.Type, System.Object, System.Type)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public AddProviderInfo(Type providerType, object constructorArgument, Type constructorArgumentType)
    parameters:
    - id: providerType
      type: System.Type
    - id: constructorArgument
      type: System.Object
    - id: constructorArgumentType
      type: System.Type
    content.vb: Public Sub New(providerType As Type, constructorArgument As Object, constructorArgumentType As Type)
  overload: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<MultiQueryProviderBase.AddProviderInfo, To>()
  nameWithType: EnumUtil.MapEnums<MultiQueryProviderBase.AddProviderInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To)()
  name.vb: MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<MultiQueryProviderBase.AddProviderInfo, To>
    nameWithType: EnumUtil.MapEnums<MultiQueryProviderBase.AddProviderInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)
    nameWithType: EnumUtil.MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<MultiQueryProviderBase.AddProviderInfo, To>()
  nameWithType: Converters.MapEnums<MultiQueryProviderBase.AddProviderInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To)()
  name.vb: MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<MultiQueryProviderBase.AddProviderInfo, To>
    nameWithType: Converters.MapEnums<MultiQueryProviderBase.AddProviderInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)
    nameWithType: Converters.MapEnums(Of MultiQueryProviderBase.AddProviderInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.#ctor
  isExternal: true
  name: AddProviderInfo
  nameWithType: MultiQueryProviderBase.AddProviderInfo.AddProviderInfo
  fullName: SuperOffice.CRM.ArchiveLists.MultiQueryProviderBase.AddProviderInfo.AddProviderInfo
