### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
  commentId: T:SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
  id: SoCredentialsSecurityTokenProvider
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.#ctor
  - SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  langs:
  - csharp
  - vb
  name: SoCredentialsSecurityTokenProvider
  nameWithType: SoCredentialsSecurityTokenProvider
  fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: 'public sealed class SoCredentialsSecurityTokenProvider : SecurityTokenProvider'
    content.vb: >-
      Public NotInheritable Class SoCredentialsSecurityTokenProvider
          Inherits SecurityTokenProvider
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)
  - SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  commentId: M:SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
  langs:
  - csharp
  - vb
  name: GetTokenCore(TimeSpan)
  nameWithType: SoCredentialsSecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore(System.TimeSpan)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: protected override SecurityToken GetTokenCore(TimeSpan timeout)
    parameters:
    - id: timeout
      type: System.TimeSpan
    return:
      type: System.IdentityModel.Tokens.SecurityToken
    content.vb: Protected Overrides Function GetTokenCore(timeout As TimeSpan) As SecurityToken
  overload: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.#ctor
  commentId: M:SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.#ctor
  id: '#ctor'
  parent: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
  langs:
  - csharp
  - vb
  name: SoCredentialsSecurityTokenProvider()
  nameWithType: SoCredentialsSecurityTokenProvider.SoCredentialsSecurityTokenProvider()
  fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SoCredentialsSecurityTokenProvider()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public SoCredentialsSecurityTokenProvider()
    content.vb: Public Sub New
  overload: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoCredentialsSecurityTokenProvider, To>()
  nameWithType: EnumUtil.MapEnums<SoCredentialsSecurityTokenProvider, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoCredentialsSecurityTokenProvider, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To)()
  name.vb: MapEnums(Of SoCredentialsSecurityTokenProvider, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoCredentialsSecurityTokenProvider, To>
    nameWithType: EnumUtil.MapEnums<SoCredentialsSecurityTokenProvider, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoCredentialsSecurityTokenProvider, To)
    nameWithType: EnumUtil.MapEnums(Of SoCredentialsSecurityTokenProvider, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SoCredentialsSecurityTokenProvider>(SoCredentialsSecurityTokenProvider)
  nameWithType: ObjectExtensions.AssignByReflection<SoCredentialsSecurityTokenProvider>(SoCredentialsSecurityTokenProvider)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider>(SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoCredentialsSecurityTokenProvider)(SoCredentialsSecurityTokenProvider)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)(SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)
  name.vb: AssignByReflection(Of SoCredentialsSecurityTokenProvider)(SoCredentialsSecurityTokenProvider)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SoCredentialsSecurityTokenProvider>
    nameWithType: ObjectExtensions.AssignByReflection<SoCredentialsSecurityTokenProvider>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
    name: SoCredentialsSecurityTokenProvider
    nameWithType: SoCredentialsSecurityTokenProvider
    fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SoCredentialsSecurityTokenProvider)
    nameWithType: ObjectExtensions.AssignByReflection(Of SoCredentialsSecurityTokenProvider)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
    name: SoCredentialsSecurityTokenProvider
    nameWithType: SoCredentialsSecurityTokenProvider
    fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SoCredentialsSecurityTokenProvider>()
  nameWithType: ObjectExtensions.GraphCopy<SoCredentialsSecurityTokenProvider>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoCredentialsSecurityTokenProvider)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)()
  name.vb: GraphCopy(Of SoCredentialsSecurityTokenProvider)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SoCredentialsSecurityTokenProvider>
    nameWithType: ObjectExtensions.GraphCopy<SoCredentialsSecurityTokenProvider>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SoCredentialsSecurityTokenProvider)
    nameWithType: ObjectExtensions.GraphCopy(Of SoCredentialsSecurityTokenProvider)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoCredentialsSecurityTokenProvider, To>()
  nameWithType: Converters.MapEnums<SoCredentialsSecurityTokenProvider, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To>()
  nameWithType.vb: Converters.MapEnums(Of SoCredentialsSecurityTokenProvider, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To)()
  name.vb: MapEnums(Of SoCredentialsSecurityTokenProvider, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoCredentialsSecurityTokenProvider, To>
    nameWithType: Converters.MapEnums<SoCredentialsSecurityTokenProvider, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoCredentialsSecurityTokenProvider, To)
    nameWithType: Converters.MapEnums(Of SoCredentialsSecurityTokenProvider, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore
  isExternal: true
  name: GetTokenCore
  nameWithType: SoCredentialsSecurityTokenProvider.GetTokenCore
  fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.GetTokenCore
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SecurityToken
  isExternal: true
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.#ctor
  isExternal: true
  name: SoCredentialsSecurityTokenProvider
  nameWithType: SoCredentialsSecurityTokenProvider.SoCredentialsSecurityTokenProvider
  fullName: SuperOffice.Security.Principal.SoCredentialsSecurityTokenProvider.SoCredentialsSecurityTokenProvider
