### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.TicketRow
  commentId: T:SuperOffice.CRM.Rows.TicketRow
  id: TicketRow
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.TicketRow.#ctor(SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase)
  - SuperOffice.CRM.Rows.TicketRow._currentActivate
  - SuperOffice.CRM.Rows.TicketRow._currentAlertLevel
  - SuperOffice.CRM.Rows.TicketRow._currentAlertStop
  - SuperOffice.CRM.Rows.TicketRow._currentAlertTimeout
  - SuperOffice.CRM.Rows.TicketRow._currentAuthor
  - SuperOffice.CRM.Rows.TicketRow._currentCategory
  - SuperOffice.CRM.Rows.TicketRow._currentClosedAt
  - SuperOffice.CRM.Rows.TicketRow._currentConnectId
  - SuperOffice.CRM.Rows.TicketRow._currentContactId
  - SuperOffice.CRM.Rows.TicketRow._currentCreatedAt
  - SuperOffice.CRM.Rows.TicketRow._currentCreatedBy
  - SuperOffice.CRM.Rows.TicketRow._currentCustId
  - SuperOffice.CRM.Rows.TicketRow._currentDbiAgentId
  - SuperOffice.CRM.Rows.TicketRow._currentDbiKey
  - SuperOffice.CRM.Rows.TicketRow._currentDbiLastModified
  - SuperOffice.CRM.Rows.TicketRow._currentDbiLastSyncronized
  - SuperOffice.CRM.Rows.TicketRow._currentDeadline
  - SuperOffice.CRM.Rows.TicketRow._currentDisplayFilter
  - SuperOffice.CRM.Rows.TicketRow._currentFilterAddress
  - SuperOffice.CRM.Rows.TicketRow._currentFilterId
  - SuperOffice.CRM.Rows.TicketRow._currentFirstReadByOwner
  - SuperOffice.CRM.Rows.TicketRow._currentFirstReadByUser
  - SuperOffice.CRM.Rows.TicketRow._currentFormSubmissionId
  - SuperOffice.CRM.Rows.TicketRow._currentFromAddress
  - SuperOffice.CRM.Rows.TicketRow._currentHasAttachment
  - SuperOffice.CRM.Rows.TicketRow._currentLanguage
  - SuperOffice.CRM.Rows.TicketRow._currentLastChanged
  - SuperOffice.CRM.Rows.TicketRow._currentNumMessages
  - SuperOffice.CRM.Rows.TicketRow._currentNumReplies
  - SuperOffice.CRM.Rows.TicketRow._currentOrigCategory
  - SuperOffice.CRM.Rows.TicketRow._currentOrigHumanCategoryId
  - SuperOffice.CRM.Rows.TicketRow._currentOrigin
  - SuperOffice.CRM.Rows.TicketRow._currentOrigPriority
  - SuperOffice.CRM.Rows.TicketRow._currentOwnedBy
  - SuperOffice.CRM.Rows.TicketRow._currentPriority
  - SuperOffice.CRM.Rows.TicketRow._currentReadByCustomer
  - SuperOffice.CRM.Rows.TicketRow._currentReadByOwner
  - SuperOffice.CRM.Rows.TicketRow._currentReadStatus
  - SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentExternally
  - SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentInternally
  - SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentQueue
  - SuperOffice.CRM.Rows.TicketRow._currentRealTimeToClose
  - SuperOffice.CRM.Rows.TicketRow._currentRealTimeToReply
  - SuperOffice.CRM.Rows.TicketRow._currentRepliedAt
  - SuperOffice.CRM.Rows.TicketRow._currentSentiment
  - SuperOffice.CRM.Rows.TicketRow._currentSentimentConfidence
  - SuperOffice.CRM.Rows.TicketRow._currentSlevel
  - SuperOffice.CRM.Rows.TicketRow._currentStatus
  - SuperOffice.CRM.Rows.TicketRow._currentSuggestedCategoryId
  - SuperOffice.CRM.Rows.TicketRow._currentTags
  - SuperOffice.CRM.Rows.TicketRow._currentTicketId
  - SuperOffice.CRM.Rows.TicketRow._currentTicketStatus
  - SuperOffice.CRM.Rows.TicketRow._currentTicketType
  - SuperOffice.CRM.Rows.TicketRow._currentTimeSpentCalculated
  - SuperOffice.CRM.Rows.TicketRow._currentTimeSpentExternally
  - SuperOffice.CRM.Rows.TicketRow._currentTimeSpentInternally
  - SuperOffice.CRM.Rows.TicketRow._currentTimeSpentQueue
  - SuperOffice.CRM.Rows.TicketRow._currentTimeToClose
  - SuperOffice.CRM.Rows.TicketRow._currentTimeToReply
  - SuperOffice.CRM.Rows.TicketRow._currentTitle
  - SuperOffice.CRM.Rows.TicketRow._onActivateChange
  - SuperOffice.CRM.Rows.TicketRow._onAlertLevelChange
  - SuperOffice.CRM.Rows.TicketRow._onAlertStopChange
  - SuperOffice.CRM.Rows.TicketRow._onAlertTimeoutChange
  - SuperOffice.CRM.Rows.TicketRow._onAuthorChange
  - SuperOffice.CRM.Rows.TicketRow._onCategoryChange
  - SuperOffice.CRM.Rows.TicketRow._onClosedAtChange
  - SuperOffice.CRM.Rows.TicketRow._onConnectIdChange
  - SuperOffice.CRM.Rows.TicketRow._onContactIdChange
  - SuperOffice.CRM.Rows.TicketRow._onCreatedAtChange
  - SuperOffice.CRM.Rows.TicketRow._onCreatedByChange
  - SuperOffice.CRM.Rows.TicketRow._onCustIdChange
  - SuperOffice.CRM.Rows.TicketRow._onDbiAgentIdChange
  - SuperOffice.CRM.Rows.TicketRow._onDbiKeyChange
  - SuperOffice.CRM.Rows.TicketRow._onDbiLastModifiedChange
  - SuperOffice.CRM.Rows.TicketRow._onDbiLastSyncronizedChange
  - SuperOffice.CRM.Rows.TicketRow._onDeadlineChange
  - SuperOffice.CRM.Rows.TicketRow._onDisplayFilterChange
  - SuperOffice.CRM.Rows.TicketRow._onFilterAddressChange
  - SuperOffice.CRM.Rows.TicketRow._onFilterIdChange
  - SuperOffice.CRM.Rows.TicketRow._onFirstReadByOwnerChange
  - SuperOffice.CRM.Rows.TicketRow._onFirstReadByUserChange
  - SuperOffice.CRM.Rows.TicketRow._onFormSubmissionIdChange
  - SuperOffice.CRM.Rows.TicketRow._onFromAddressChange
  - SuperOffice.CRM.Rows.TicketRow._onHasAttachmentChange
  - SuperOffice.CRM.Rows.TicketRow._onLanguageChange
  - SuperOffice.CRM.Rows.TicketRow._onLastChangedChange
  - SuperOffice.CRM.Rows.TicketRow._onNumMessagesChange
  - SuperOffice.CRM.Rows.TicketRow._onNumRepliesChange
  - SuperOffice.CRM.Rows.TicketRow._onOrigCategoryChange
  - SuperOffice.CRM.Rows.TicketRow._onOrigHumanCategoryIdChange
  - SuperOffice.CRM.Rows.TicketRow._onOriginChange
  - SuperOffice.CRM.Rows.TicketRow._onOrigPriorityChange
  - SuperOffice.CRM.Rows.TicketRow._onOwnedByChange
  - SuperOffice.CRM.Rows.TicketRow._onPriorityChange
  - SuperOffice.CRM.Rows.TicketRow._onReadByCustomerChange
  - SuperOffice.CRM.Rows.TicketRow._onReadByOwnerChange
  - SuperOffice.CRM.Rows.TicketRow._onReadStatusChange
  - SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentExternallyChange
  - SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentInternallyChange
  - SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentQueueChange
  - SuperOffice.CRM.Rows.TicketRow._onRealTimeToCloseChange
  - SuperOffice.CRM.Rows.TicketRow._onRealTimeToReplyChange
  - SuperOffice.CRM.Rows.TicketRow._onRepliedAtChange
  - SuperOffice.CRM.Rows.TicketRow._onSentimentChange
  - SuperOffice.CRM.Rows.TicketRow._onSentimentConfidenceChange
  - SuperOffice.CRM.Rows.TicketRow._onSlevelChange
  - SuperOffice.CRM.Rows.TicketRow._onStatusChange
  - SuperOffice.CRM.Rows.TicketRow._onSuggestedCategoryIdChange
  - SuperOffice.CRM.Rows.TicketRow._onTagsChange
  - SuperOffice.CRM.Rows.TicketRow._onTicketStatusChange
  - SuperOffice.CRM.Rows.TicketRow._onTicketTypeChange
  - SuperOffice.CRM.Rows.TicketRow._onTimeSpentCalculatedChange
  - SuperOffice.CRM.Rows.TicketRow._onTimeSpentExternallyChange
  - SuperOffice.CRM.Rows.TicketRow._onTimeSpentInternallyChange
  - SuperOffice.CRM.Rows.TicketRow._onTimeSpentQueueChange
  - SuperOffice.CRM.Rows.TicketRow._onTimeToCloseChange
  - SuperOffice.CRM.Rows.TicketRow._onTimeToReplyChange
  - SuperOffice.CRM.Rows.TicketRow._onTitleChange
  - SuperOffice.CRM.Rows.TicketRow._persistedActivate
  - SuperOffice.CRM.Rows.TicketRow._persistedAlertLevel
  - SuperOffice.CRM.Rows.TicketRow._persistedAlertStop
  - SuperOffice.CRM.Rows.TicketRow._persistedAlertTimeout
  - SuperOffice.CRM.Rows.TicketRow._persistedAuthor
  - SuperOffice.CRM.Rows.TicketRow._persistedCategory
  - SuperOffice.CRM.Rows.TicketRow._persistedClosedAt
  - SuperOffice.CRM.Rows.TicketRow._persistedConnectId
  - SuperOffice.CRM.Rows.TicketRow._persistedContactId
  - SuperOffice.CRM.Rows.TicketRow._persistedCreatedAt
  - SuperOffice.CRM.Rows.TicketRow._persistedCreatedBy
  - SuperOffice.CRM.Rows.TicketRow._persistedCustId
  - SuperOffice.CRM.Rows.TicketRow._persistedDbiAgentId
  - SuperOffice.CRM.Rows.TicketRow._persistedDbiKey
  - SuperOffice.CRM.Rows.TicketRow._persistedDbiLastModified
  - SuperOffice.CRM.Rows.TicketRow._persistedDbiLastSyncronized
  - SuperOffice.CRM.Rows.TicketRow._persistedDeadline
  - SuperOffice.CRM.Rows.TicketRow._persistedDisplayFilter
  - SuperOffice.CRM.Rows.TicketRow._persistedFilterAddress
  - SuperOffice.CRM.Rows.TicketRow._persistedFilterId
  - SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByOwner
  - SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByUser
  - SuperOffice.CRM.Rows.TicketRow._persistedFormSubmissionId
  - SuperOffice.CRM.Rows.TicketRow._persistedFromAddress
  - SuperOffice.CRM.Rows.TicketRow._persistedHasAttachment
  - SuperOffice.CRM.Rows.TicketRow._persistedLanguage
  - SuperOffice.CRM.Rows.TicketRow._persistedLastChanged
  - SuperOffice.CRM.Rows.TicketRow._persistedNumMessages
  - SuperOffice.CRM.Rows.TicketRow._persistedNumReplies
  - SuperOffice.CRM.Rows.TicketRow._persistedOrigCategory
  - SuperOffice.CRM.Rows.TicketRow._persistedOrigHumanCategoryId
  - SuperOffice.CRM.Rows.TicketRow._persistedOrigin
  - SuperOffice.CRM.Rows.TicketRow._persistedOrigPriority
  - SuperOffice.CRM.Rows.TicketRow._persistedOwnedBy
  - SuperOffice.CRM.Rows.TicketRow._persistedPriority
  - SuperOffice.CRM.Rows.TicketRow._persistedReadByCustomer
  - SuperOffice.CRM.Rows.TicketRow._persistedReadByOwner
  - SuperOffice.CRM.Rows.TicketRow._persistedReadStatus
  - SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentExternally
  - SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentInternally
  - SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentQueue
  - SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToClose
  - SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToReply
  - SuperOffice.CRM.Rows.TicketRow._persistedRepliedAt
  - SuperOffice.CRM.Rows.TicketRow._persistedSentiment
  - SuperOffice.CRM.Rows.TicketRow._persistedSentimentConfidence
  - SuperOffice.CRM.Rows.TicketRow._persistedSlevel
  - SuperOffice.CRM.Rows.TicketRow._persistedStatus
  - SuperOffice.CRM.Rows.TicketRow._persistedSuggestedCategoryId
  - SuperOffice.CRM.Rows.TicketRow._persistedTags
  - SuperOffice.CRM.Rows.TicketRow._persistedTicketId
  - SuperOffice.CRM.Rows.TicketRow._persistedTicketStatus
  - SuperOffice.CRM.Rows.TicketRow._persistedTicketType
  - SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentCalculated
  - SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentExternally
  - SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentInternally
  - SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentQueue
  - SuperOffice.CRM.Rows.TicketRow._persistedTimeToClose
  - SuperOffice.CRM.Rows.TicketRow._persistedTimeToReply
  - SuperOffice.CRM.Rows.TicketRow._persistedTitle
  - SuperOffice.CRM.Rows.TicketRow.Activate
  - SuperOffice.CRM.Rows.TicketRow.AlertLevel
  - SuperOffice.CRM.Rows.TicketRow.AlertStop
  - SuperOffice.CRM.Rows.TicketRow.AlertTimeout
  - SuperOffice.CRM.Rows.TicketRow.Author
  - SuperOffice.CRM.Rows.TicketRow.Category
  - SuperOffice.CRM.Rows.TicketRow.ClosedAt
  - SuperOffice.CRM.Rows.TicketRow.ConnectId
  - SuperOffice.CRM.Rows.TicketRow.ContactId
  - SuperOffice.CRM.Rows.TicketRow.CreatedAt
  - SuperOffice.CRM.Rows.TicketRow.CreatedBy
  - SuperOffice.CRM.Rows.TicketRow.CreateNew
  - SuperOffice.CRM.Rows.TicketRow.CustId
  - SuperOffice.CRM.Rows.TicketRow.DbiAgentId
  - SuperOffice.CRM.Rows.TicketRow.DbiKey
  - SuperOffice.CRM.Rows.TicketRow.DbiLastModified
  - SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized
  - SuperOffice.CRM.Rows.TicketRow.Deadline
  - SuperOffice.CRM.Rows.TicketRow.DisplayFilter
  - SuperOffice.CRM.Rows.TicketRow.FilterAddress
  - SuperOffice.CRM.Rows.TicketRow.FilterId
  - SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner
  - SuperOffice.CRM.Rows.TicketRow.FirstReadByUser
  - SuperOffice.CRM.Rows.TicketRow.FormSubmissionId
  - SuperOffice.CRM.Rows.TicketRow.FromAddress
  - SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper
  - SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch(SuperOffice.CRM.Rows.TicketRow.CustomSearch)
  - SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId(System.Int32)
  - SuperOffice.CRM.Rows.TicketRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.TicketTableInfo)
  - SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TicketRow.HasAttachment
  - SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs
  - SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey
  - SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue
  - SuperOffice.CRM.Rows.TicketRow.InternalSetValue(System.String,System.Object)
  - SuperOffice.CRM.Rows.TicketRow.IsDirty
  - SuperOffice.CRM.Rows.TicketRow.IsNew
  - SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TicketRow.Item(System.String)
  - SuperOffice.CRM.Rows.TicketRow.Language
  - SuperOffice.CRM.Rows.TicketRow.LastChanged
  - SuperOffice.CRM.Rows.TicketRow.NumMessages
  - SuperOffice.CRM.Rows.TicketRow.NumReplies
  - SuperOffice.CRM.Rows.TicketRow.OnActivateChange
  - SuperOffice.CRM.Rows.TicketRow.OnAlertLevelChange
  - SuperOffice.CRM.Rows.TicketRow.OnAlertStopChange
  - SuperOffice.CRM.Rows.TicketRow.OnAlertTimeoutChange
  - SuperOffice.CRM.Rows.TicketRow.OnAuthorChange
  - SuperOffice.CRM.Rows.TicketRow.OnCategoryChange
  - SuperOffice.CRM.Rows.TicketRow.OnClosedAtChange
  - SuperOffice.CRM.Rows.TicketRow.OnConnectIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnContactIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnCreatedAtChange
  - SuperOffice.CRM.Rows.TicketRow.OnCreatedByChange
  - SuperOffice.CRM.Rows.TicketRow.OnCustIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnDbiAgentIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnDbiKeyChange
  - SuperOffice.CRM.Rows.TicketRow.OnDbiLastModifiedChange
  - SuperOffice.CRM.Rows.TicketRow.OnDbiLastSyncronizedChange
  - SuperOffice.CRM.Rows.TicketRow.OnDeadlineChange
  - SuperOffice.CRM.Rows.TicketRow.OnDisplayFilterChange
  - SuperOffice.CRM.Rows.TicketRow.OnFilterAddressChange
  - SuperOffice.CRM.Rows.TicketRow.OnFilterIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnFirstReadByOwnerChange
  - SuperOffice.CRM.Rows.TicketRow.OnFirstReadByUserChange
  - SuperOffice.CRM.Rows.TicketRow.OnFormSubmissionIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnFromAddressChange
  - SuperOffice.CRM.Rows.TicketRow.OnHasAttachmentChange
  - SuperOffice.CRM.Rows.TicketRow.OnLanguageChange
  - SuperOffice.CRM.Rows.TicketRow.OnLastChangedChange
  - SuperOffice.CRM.Rows.TicketRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TicketRow.OnNumMessagesChange
  - SuperOffice.CRM.Rows.TicketRow.OnNumRepliesChange
  - SuperOffice.CRM.Rows.TicketRow.OnOrigCategoryChange
  - SuperOffice.CRM.Rows.TicketRow.OnOrigHumanCategoryIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnOriginChange
  - SuperOffice.CRM.Rows.TicketRow.OnOrigPriorityChange
  - SuperOffice.CRM.Rows.TicketRow.OnOwnedByChange
  - SuperOffice.CRM.Rows.TicketRow.OnPriorityChange
  - SuperOffice.CRM.Rows.TicketRow.OnReadByCustomerChange
  - SuperOffice.CRM.Rows.TicketRow.OnReadByOwnerChange
  - SuperOffice.CRM.Rows.TicketRow.OnReadStatusChange
  - SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentExternallyChange
  - SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentInternallyChange
  - SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentQueueChange
  - SuperOffice.CRM.Rows.TicketRow.OnRealTimeToCloseChange
  - SuperOffice.CRM.Rows.TicketRow.OnRealTimeToReplyChange
  - SuperOffice.CRM.Rows.TicketRow.OnRepliedAtChange
  - SuperOffice.CRM.Rows.TicketRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TicketRow.OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.TicketRow.OnSentimentChange
  - SuperOffice.CRM.Rows.TicketRow.OnSentimentConfidenceChange
  - SuperOffice.CRM.Rows.TicketRow.OnSlevelChange
  - SuperOffice.CRM.Rows.TicketRow.OnStatusChange
  - SuperOffice.CRM.Rows.TicketRow.OnSuggestedCategoryIdChange
  - SuperOffice.CRM.Rows.TicketRow.OnTagsChange
  - SuperOffice.CRM.Rows.TicketRow.OnTicketStatusChange
  - SuperOffice.CRM.Rows.TicketRow.OnTicketTypeChange
  - SuperOffice.CRM.Rows.TicketRow.OnTimeSpentCalculatedChange
  - SuperOffice.CRM.Rows.TicketRow.OnTimeSpentExternallyChange
  - SuperOffice.CRM.Rows.TicketRow.OnTimeSpentInternallyChange
  - SuperOffice.CRM.Rows.TicketRow.OnTimeSpentQueueChange
  - SuperOffice.CRM.Rows.TicketRow.OnTimeToCloseChange
  - SuperOffice.CRM.Rows.TicketRow.OnTimeToReplyChange
  - SuperOffice.CRM.Rows.TicketRow.OnTitleChange
  - SuperOffice.CRM.Rows.TicketRow.OrigCategory
  - SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId
  - SuperOffice.CRM.Rows.TicketRow.Origin
  - SuperOffice.CRM.Rows.TicketRow.OrigPriority
  - SuperOffice.CRM.Rows.TicketRow.OwnedBy
  - SuperOffice.CRM.Rows.TicketRow.Priority
  - SuperOffice.CRM.Rows.TicketRow.ReadByCustomer
  - SuperOffice.CRM.Rows.TicketRow.ReadByOwner
  - SuperOffice.CRM.Rows.TicketRow.ReadStatus
  - SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally
  - SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally
  - SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue
  - SuperOffice.CRM.Rows.TicketRow.RealTimeToClose
  - SuperOffice.CRM.Rows.TicketRow.RealTimeToReply
  - SuperOffice.CRM.Rows.TicketRow.RepliedAt
  - SuperOffice.CRM.Rows.TicketRow.Reset
  - SuperOffice.CRM.Rows.TicketRow.Sentiment
  - SuperOffice.CRM.Rows.TicketRow.SentimentConfidence
  - SuperOffice.CRM.Rows.TicketRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  - SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey(System.Int32)
  - SuperOffice.CRM.Rows.TicketRow.SetRowAsNew
  - SuperOffice.CRM.Rows.TicketRow.Slevel
  - SuperOffice.CRM.Rows.TicketRow.Status
  - SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId
  - SuperOffice.CRM.Rows.TicketRow.TableInfo
  - SuperOffice.CRM.Rows.TicketRow.Tags
  - SuperOffice.CRM.Rows.TicketRow.TicketId
  - SuperOffice.CRM.Rows.TicketRow.TicketStatus
  - SuperOffice.CRM.Rows.TicketRow.TicketTableInfo
  - SuperOffice.CRM.Rows.TicketRow.TicketType
  - SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated
  - SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally
  - SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally
  - SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue
  - SuperOffice.CRM.Rows.TicketRow.TimeToClose
  - SuperOffice.CRM.Rows.TicketRow.TimeToReply
  - SuperOffice.CRM.Rows.TicketRow.Title
  - SuperOffice.CRM.Rows.TicketRow.ToString
  - SuperOffice.CRM.Rows.TicketRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  langs:
  - csharp
  - vb
  name: TicketRow
  nameWithType: TicketRow
  fullName: SuperOffice.CRM.Rows.TicketRow
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThis table contains the tickets (requests) of the system. Its purpose should be evident.\n<br />Row Object for table &apos;ticket&apos;. Row objects correspond directly to database tables, and one\ninstance of a row object represents one row in the corresponding table in the database.\n"
  remarks: "\nRow objects can be created in several ways. \n<ul><li>Use the static <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreateNew\" data-throw-if-not-resolved=\"false\"></xref> method to create a new, empty object. After populating it with values,\nyou call the <see cref=\"!:SuperOffice.CRM.Data.TableRowBase.Save\"></see> method and a corresponding row in the database is created, and the objects&apos; primary key field updated.\nThis is the preferred way to <strong>insert new rows</strong> into the database.</li><li>You can create a (nested) TicketRow <xref href=\"SuperOffice.CRM.Rows.TicketRow.CustomSearch\" data-throw-if-not-resolved=\"false\"></xref> object to obtain a query pre-populated with\nthe correct tableinfo and return fields. This query can be modified with restrictions, etc. Then, use the static <xref href=\"SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch(SuperOffice.CRM.Rows.TicketRow.CustomSearch)\" data-throw-if-not-resolved=\"false\"></xref> method\nto apply the query to the database and obtain the result as a Row object. This is how you <strong>select existing rows</strong> from the database when\nyou have a query that does not correspond to any of the existing database indexes.</li><li>For each unique index defined for the table, there is a corresponding GetFromIdx method to make retrieving data via the indexes easy. \nNote that if you try to fetch a row that does not exist (for instance, by using the primary key index and specifying a primary key that does\nnot exist in the database), you will get a Row object with the <see cref=\"!:SuperOffice.CRM.Data.TicketRow.IsNew\"></see> and \n<see cref=\"!:SuperOffice.CRM.Data.TicketRow.IsDirty\"></see> properties set to true. Such a Row object is called a &apos;ghost&apos; and\ncannot be updated, saved or deleted. You can also get a ghost if the row does exist in the database, but the Sentry system denies Select\nrights to the row.</li><li>Finally, if you have an <xref href=\"SuperOffice.Data.SoDataReader\" data-throw-if-not-resolved=\"false\"></xref> that contains ALL the fields of the table, and you\nhave the <xref href=\"SuperOffice.CRM.Data.TicketTableInfo\" data-throw-if-not-resolved=\"false\"></xref> instance used in the query behind the reader, you can use the\nstatic <xref href=\"SuperOffice.CRM.Rows.TicketRow.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.TicketTableInfo)\" data-throw-if-not-resolved=\"false\"></xref> method to create a new row object from the reader and the table info.\nThis is useful when you have a <strong>larger, more complex query</strong>, for instance one that joins a number of tables, and you wish to use\nRow objects to process the result set. If your result set corresponds to an entity, consider using the corresponding Entity layer object\ninstead, since entities automatically handle ID allocation and mapping, rights, and other higher-level aspects.</li></ul>\nNon-unique indexes are handled through the <xref href=\"SuperOffice.CRM.Rows.TicketRows\" data-throw-if-not-resolved=\"false\"></xref> collection,\nwhich has nested classes and GetFromIdx methods for each non-unique index. Similarly, there is a <xref href=\"SuperOffice.CRM.Rows.TicketRows.GetFromReader(SuperOffice.Data.SoDataReader%2cSuperOffice.CRM.Data.TicketTableInfo)\" data-throw-if-not-resolved=\"false\"></xref>\nmethod to retrieve the results of queries that return more than one row.\n<p></p>Unique indexes on table Ticket are: <table><thead><tr><th>Index fields</th><th>Nested index class name</th></tr></thead><tbody></tbody></table>\n<p></p>\n"
  syntax:
    content: 'public class TicketRow : TableRowBase, INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem, IExtraFieldsHelper'
    content.vb: >-
      Public Class TicketRow
          Inherits TableRowBase
          Implements INestedPersist, ISoDataLookup, ISentryIgnorable, ISoItem, IExtraFieldsHelper
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.SqlCommand
  - SuperOffice.Data.SQL.PrivateSave
  - SuperOffice.CRM.Rows.TableRowBase
  implements:
  - SuperOffice.Data.INestedPersist
  - SuperOffice.CRM.Security.ISoDataLookup
  - SuperOffice.CRM.Security.ISentryIgnorable
  - SuperOffice.Data.ISoItem
  inheritedMembers:
  - SuperOffice.CRM.Rows.TableRowBase._saveOwner
  - SuperOffice.CRM.Rows.TableRowBase._sentries
  - SuperOffice.CRM.Rows.TableRowBase._onValueChange
  - SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  - SuperOffice.CRM.Rows.TableRowBase._sqlType
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad
  - SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  - SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  - SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  - SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  - SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  - SuperOffice.CRM.Rows.TableRowBase.Save
  - SuperOffice.CRM.Rows.TableRowBase.Delete
  - SuperOffice.CRM.Rows.TableRowBase.Validate
  - SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  - SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  - SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  - SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  - SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  - SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  - SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  - SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.TableRowBase.Sentries
  - SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  - SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  - SuperOffice.CRM.Rows.TableRowBase.IsSaving
  - SuperOffice.CRM.Rows.TableRowBase.SqlType
  - SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  - SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  - SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  - SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  - SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  - SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  - SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  - SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  - SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  - SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  - SuperOffice.Data.SQL.SqlCommand.GetInserts
  - SuperOffice.Data.SQL.SqlCommand.GetUpdates
  - SuperOffice.Data.SQL.SqlCommand.GetDeletes
  - SuperOffice.Data.SQL.SqlCommand.GetSelect
  - SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.TicketRow.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  - SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  - SuperOffice.CRM.Rows.TicketRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTicketId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTicketId
  id: _persistedTicketId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTicketId
  nameWithType: TicketRow._persistedTicketId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTicketId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTicketId
    return:
      type: System.Int32
    content.vb: Protected _persistedTicketId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedConnectId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedConnectId
  id: _persistedConnectId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedConnectId
  nameWithType: TicketRow._persistedConnectId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedConnectId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ConnectId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedConnectId
    return:
      type: System.Int32
    content.vb: Protected _persistedConnectId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTitle
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTitle
  id: _persistedTitle
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTitle
  nameWithType: TicketRow._persistedTitle
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTitle
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Title\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedTitle
    return:
      type: System.String
    content.vb: Protected _persistedTitle As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedCreatedAt
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedCreatedAt
  id: _persistedCreatedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedCreatedAt
  nameWithType: TicketRow._persistedCreatedAt
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedCreatedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreatedAt\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedCreatedAt
    return:
      type: System.DateTime
    content.vb: Protected _persistedCreatedAt As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedLastChanged
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedLastChanged
  id: _persistedLastChanged
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedLastChanged
  nameWithType: TicketRow._persistedLastChanged
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedLastChanged
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.LastChanged\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedLastChanged
    return:
      type: System.DateTime
    content.vb: Protected _persistedLastChanged As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedActivate
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedActivate
  id: _persistedActivate
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedActivate
  nameWithType: TicketRow._persistedActivate
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedActivate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Activate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedActivate
    return:
      type: System.DateTime
    content.vb: Protected _persistedActivate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedClosedAt
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedClosedAt
  id: _persistedClosedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedClosedAt
  nameWithType: TicketRow._persistedClosedAt
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedClosedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ClosedAt\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedClosedAt
    return:
      type: System.DateTime
    content.vb: Protected _persistedClosedAt As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedCreatedBy
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedCreatedBy
  id: _persistedCreatedBy
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedCreatedBy
  nameWithType: TicketRow._persistedCreatedBy
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedCreatedBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreatedBy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCreatedBy
    return:
      type: System.Int32
    content.vb: Protected _persistedCreatedBy As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedAuthor
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedAuthor
  id: _persistedAuthor
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedAuthor
  nameWithType: TicketRow._persistedAuthor
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedAuthor
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Author\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedAuthor
    return:
      type: System.String
    content.vb: Protected _persistedAuthor As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedOwnedBy
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedOwnedBy
  id: _persistedOwnedBy
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedOwnedBy
  nameWithType: TicketRow._persistedOwnedBy
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedOwnedBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OwnedBy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedOwnedBy
    return:
      type: System.Int32
    content.vb: Protected _persistedOwnedBy As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedCategory
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedCategory
  id: _persistedCategory
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedCategory
  nameWithType: TicketRow._persistedCategory
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedCategory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Category\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCategory
    return:
      type: System.Int32
    content.vb: Protected _persistedCategory As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedOrigCategory
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedOrigCategory
  id: _persistedOrigCategory
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedOrigCategory
  nameWithType: TicketRow._persistedOrigCategory
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedOrigCategory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigCategory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedOrigCategory
    return:
      type: System.Int32
    content.vb: Protected _persistedOrigCategory As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedSlevel
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedSlevel
  id: _persistedSlevel
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedSlevel
  nameWithType: TicketRow._persistedSlevel
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedSlevel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Slevel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketSecurityLevel _persistedSlevel
    return:
      type: SuperOffice.Data.TicketSecurityLevel
    content.vb: Protected _persistedSlevel As TicketSecurityLevel
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedStatus
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedStatus
  id: _persistedStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedStatus
  nameWithType: TicketRow._persistedStatus
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketBaseStatus _persistedStatus
    return:
      type: SuperOffice.Data.TicketBaseStatus
    content.vb: Protected _persistedStatus As TicketBaseStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTicketStatus
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTicketStatus
  id: _persistedTicketStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTicketStatus
  nameWithType: TicketRow._persistedTicketStatus
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTicketStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketStatus\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTicketStatus
    return:
      type: System.Int32
    content.vb: Protected _persistedTicketStatus As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedCustId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedCustId
  id: _persistedCustId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedCustId
  nameWithType: TicketRow._persistedCustId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedCustId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CustId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedCustId
    return:
      type: System.Int32
    content.vb: Protected _persistedCustId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedPriority
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedPriority
  id: _persistedPriority
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedPriority
  nameWithType: TicketRow._persistedPriority
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedPriority
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Priority\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedPriority
    return:
      type: System.Int32
    content.vb: Protected _persistedPriority As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedOrigPriority
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedOrigPriority
  id: _persistedOrigPriority
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedOrigPriority
  nameWithType: TicketRow._persistedOrigPriority
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedOrigPriority
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigPriority\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedOrigPriority
    return:
      type: System.Int32
    content.vb: Protected _persistedOrigPriority As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedAlertLevel
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedAlertLevel
  id: _persistedAlertLevel
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedAlertLevel
  nameWithType: TicketRow._persistedAlertLevel
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedAlertLevel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertLevel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedAlertLevel
    return:
      type: System.Int16
    content.vb: Protected _persistedAlertLevel As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedAlertTimeout
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedAlertTimeout
  id: _persistedAlertTimeout
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedAlertTimeout
  nameWithType: TicketRow._persistedAlertTimeout
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedAlertTimeout
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertTimeout\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedAlertTimeout
    return:
      type: System.DateTime
    content.vb: Protected _persistedAlertTimeout As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedAlertStop
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedAlertStop
  id: _persistedAlertStop
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedAlertStop
  nameWithType: TicketRow._persistedAlertStop
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedAlertStop
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertStop\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedAlertStop
    return:
      type: System.Int32
    content.vb: Protected _persistedAlertStop As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedReadByOwner
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedReadByOwner
  id: _persistedReadByOwner
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedReadByOwner
  nameWithType: TicketRow._persistedReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedReadByOwner
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadByOwner\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedReadByOwner
    return:
      type: System.DateTime
    content.vb: Protected _persistedReadByOwner As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByOwner
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByOwner
  id: _persistedFirstReadByOwner
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedFirstReadByOwner
  nameWithType: TicketRow._persistedFirstReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByOwner
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedFirstReadByOwner
    return:
      type: System.DateTime
    content.vb: Protected _persistedFirstReadByOwner As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByUser
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByUser
  id: _persistedFirstReadByUser
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedFirstReadByUser
  nameWithType: TicketRow._persistedFirstReadByUser
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedFirstReadByUser
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FirstReadByUser\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedFirstReadByUser
    return:
      type: System.DateTime
    content.vb: Protected _persistedFirstReadByUser As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedReadByCustomer
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedReadByCustomer
  id: _persistedReadByCustomer
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedReadByCustomer
  nameWithType: TicketRow._persistedReadByCustomer
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedReadByCustomer
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadByCustomer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedReadByCustomer
    return:
      type: System.DateTime
    content.vb: Protected _persistedReadByCustomer As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedFilterId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedFilterId
  id: _persistedFilterId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedFilterId
  nameWithType: TicketRow._persistedFilterId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedFilterId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FilterId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedFilterId
    return:
      type: System.Int32
    content.vb: Protected _persistedFilterId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedDisplayFilter
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedDisplayFilter
  id: _persistedDisplayFilter
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedDisplayFilter
  nameWithType: TicketRow._persistedDisplayFilter
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedDisplayFilter
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DisplayFilter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedDisplayFilter
    return:
      type: System.String
    content.vb: Protected _persistedDisplayFilter As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedRepliedAt
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedRepliedAt
  id: _persistedRepliedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedRepliedAt
  nameWithType: TicketRow._persistedRepliedAt
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedRepliedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RepliedAt\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedRepliedAt
    return:
      type: System.DateTime
    content.vb: Protected _persistedRepliedAt As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTimeToReply
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTimeToReply
  id: _persistedTimeToReply
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTimeToReply
  nameWithType: TicketRow._persistedTimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTimeToReply
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeToReply\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTimeToReply
    return:
      type: System.Int32
    content.vb: Protected _persistedTimeToReply As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTimeToClose
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTimeToClose
  id: _persistedTimeToClose
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTimeToClose
  nameWithType: TicketRow._persistedTimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTimeToClose
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeToClose\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTimeToClose
    return:
      type: System.Int32
    content.vb: Protected _persistedTimeToClose As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToReply
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToReply
  id: _persistedRealTimeToReply
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedRealTimeToReply
  nameWithType: TicketRow._persistedRealTimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToReply
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeToReply\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRealTimeToReply
    return:
      type: System.Int32
    content.vb: Protected _persistedRealTimeToReply As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToClose
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToClose
  id: _persistedRealTimeToClose
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedRealTimeToClose
  nameWithType: TicketRow._persistedRealTimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeToClose
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeToClose\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRealTimeToClose
    return:
      type: System.Int32
    content.vb: Protected _persistedRealTimeToClose As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedReadStatus
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedReadStatus
  id: _persistedReadStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedReadStatus
  nameWithType: TicketRow._persistedReadStatus
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedReadStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadStatus\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketReadStatus _persistedReadStatus
    return:
      type: SuperOffice.Data.TicketReadStatus
    content.vb: Protected _persistedReadStatus As TicketReadStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedHasAttachment
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedHasAttachment
  id: _persistedHasAttachment
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedHasAttachment
  nameWithType: TicketRow._persistedHasAttachment
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedHasAttachment
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.HasAttachment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _persistedHasAttachment
    return:
      type: System.Int16
    content.vb: Protected _persistedHasAttachment As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedDeadline
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedDeadline
  id: _persistedDeadline
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedDeadline
  nameWithType: TicketRow._persistedDeadline
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedDeadline
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Deadline\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedDeadline
    return:
      type: System.DateTime
    content.vb: Protected _persistedDeadline As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedFilterAddress
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedFilterAddress
  id: _persistedFilterAddress
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedFilterAddress
  nameWithType: TicketRow._persistedFilterAddress
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedFilterAddress
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FilterAddress\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedFilterAddress
    return:
      type: System.String
    content.vb: Protected _persistedFilterAddress As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedDbiAgentId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedDbiAgentId
  id: _persistedDbiAgentId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedDbiAgentId
  nameWithType: TicketRow._persistedDbiAgentId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedDbiAgentId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiAgentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedDbiAgentId
    return:
      type: System.Int32
    content.vb: Protected _persistedDbiAgentId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedDbiKey
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedDbiKey
  id: _persistedDbiKey
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedDbiKey
  nameWithType: TicketRow._persistedDbiKey
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedDbiKey
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiKey\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedDbiKey
    return:
      type: System.String
    content.vb: Protected _persistedDbiKey As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedDbiLastSyncronized
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedDbiLastSyncronized
  id: _persistedDbiLastSyncronized
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedDbiLastSyncronized
  nameWithType: TicketRow._persistedDbiLastSyncronized
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedDbiLastSyncronized
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedDbiLastSyncronized
    return:
      type: System.DateTime
    content.vb: Protected _persistedDbiLastSyncronized As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedDbiLastModified
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedDbiLastModified
  id: _persistedDbiLastModified
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedDbiLastModified
  nameWithType: TicketRow._persistedDbiLastModified
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedDbiLastModified
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiLastModified\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedDbiLastModified
    return:
      type: System.DateTime
    content.vb: Protected _persistedDbiLastModified As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedOrigin
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedOrigin
  id: _persistedOrigin
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedOrigin
  nameWithType: TicketRow._persistedOrigin
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedOrigin
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Origin\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketOrigin _persistedOrigin
    return:
      type: SuperOffice.Data.TicketOrigin
    content.vb: Protected _persistedOrigin As TicketOrigin
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentInternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentInternally
  id: _persistedTimeSpentInternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTimeSpentInternally
  nameWithType: TicketRow._persistedTimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentInternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTimeSpentInternally
    return:
      type: System.Int32
    content.vb: Protected _persistedTimeSpentInternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentExternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentExternally
  id: _persistedTimeSpentExternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTimeSpentExternally
  nameWithType: TicketRow._persistedTimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentExternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTimeSpentExternally
    return:
      type: System.Int32
    content.vb: Protected _persistedTimeSpentExternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentQueue
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentQueue
  id: _persistedTimeSpentQueue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTimeSpentQueue
  nameWithType: TicketRow._persistedTimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentQueue
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTimeSpentQueue
    return:
      type: System.Int32
    content.vb: Protected _persistedTimeSpentQueue As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentInternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentInternally
  id: _persistedRealTimeSpentInternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedRealTimeSpentInternally
  nameWithType: TicketRow._persistedRealTimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentInternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRealTimeSpentInternally
    return:
      type: System.Int32
    content.vb: Protected _persistedRealTimeSpentInternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentExternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentExternally
  id: _persistedRealTimeSpentExternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedRealTimeSpentExternally
  nameWithType: TicketRow._persistedRealTimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentExternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRealTimeSpentExternally
    return:
      type: System.Int32
    content.vb: Protected _persistedRealTimeSpentExternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentQueue
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentQueue
  id: _persistedRealTimeSpentQueue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedRealTimeSpentQueue
  nameWithType: TicketRow._persistedRealTimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedRealTimeSpentQueue
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedRealTimeSpentQueue
    return:
      type: System.Int32
    content.vb: Protected _persistedRealTimeSpentQueue As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentCalculated
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentCalculated
  id: _persistedTimeSpentCalculated
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTimeSpentCalculated
  nameWithType: TicketRow._persistedTimeSpentCalculated
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTimeSpentCalculated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _persistedTimeSpentCalculated
    return:
      type: System.DateTime
    content.vb: Protected _persistedTimeSpentCalculated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedNumReplies
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedNumReplies
  id: _persistedNumReplies
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedNumReplies
  nameWithType: TicketRow._persistedNumReplies
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedNumReplies
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.NumReplies\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedNumReplies
    return:
      type: System.Int32
    content.vb: Protected _persistedNumReplies As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedNumMessages
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedNumMessages
  id: _persistedNumMessages
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedNumMessages
  nameWithType: TicketRow._persistedNumMessages
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedNumMessages
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.NumMessages\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedNumMessages
    return:
      type: System.Int32
    content.vb: Protected _persistedNumMessages As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTicketType
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTicketType
  id: _persistedTicketType
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTicketType
  nameWithType: TicketRow._persistedTicketType
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTicketType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedTicketType
    return:
      type: System.Int32
    content.vb: Protected _persistedTicketType As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedFromAddress
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedFromAddress
  id: _persistedFromAddress
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedFromAddress
  nameWithType: TicketRow._persistedFromAddress
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedFromAddress
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FromAddress\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedFromAddress
    return:
      type: System.String
    content.vb: Protected _persistedFromAddress As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedTags
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedTags
  id: _persistedTags
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedTags
  nameWithType: TicketRow._persistedTags
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedTags
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Tags\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int[] _persistedTags
    return:
      type: System.Int32[]
    content.vb: Protected _persistedTags As Integer()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedContactId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedContactId
  id: _persistedContactId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedContactId
  nameWithType: TicketRow._persistedContactId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedContactId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedContactId
    return:
      type: System.Int32
    content.vb: Protected _persistedContactId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedLanguage
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedLanguage
  id: _persistedLanguage
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedLanguage
  nameWithType: TicketRow._persistedLanguage
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedLanguage
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Language\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _persistedLanguage
    return:
      type: System.String
    content.vb: Protected _persistedLanguage As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedSentiment
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedSentiment
  id: _persistedSentiment
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedSentiment
  nameWithType: TicketRow._persistedSentiment
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedSentiment
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Sentiment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSentiment
    return:
      type: System.Int32
    content.vb: Protected _persistedSentiment As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedSentimentConfidence
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedSentimentConfidence
  id: _persistedSentimentConfidence
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedSentimentConfidence
  nameWithType: TicketRow._persistedSentimentConfidence
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedSentimentConfidence
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.SentimentConfidence\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSentimentConfidence
    return:
      type: System.Int32
    content.vb: Protected _persistedSentimentConfidence As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedFormSubmissionId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedFormSubmissionId
  id: _persistedFormSubmissionId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedFormSubmissionId
  nameWithType: TicketRow._persistedFormSubmissionId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedFormSubmissionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FormSubmissionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedFormSubmissionId
    return:
      type: System.Int32
    content.vb: Protected _persistedFormSubmissionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedSuggestedCategoryId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedSuggestedCategoryId
  id: _persistedSuggestedCategoryId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedSuggestedCategoryId
  nameWithType: TicketRow._persistedSuggestedCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedSuggestedCategoryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedSuggestedCategoryId
    return:
      type: System.Int32
    content.vb: Protected _persistedSuggestedCategoryId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._persistedOrigHumanCategoryId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._persistedOrigHumanCategoryId
  id: _persistedOrigHumanCategoryId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _persistedOrigHumanCategoryId
  nameWithType: TicketRow._persistedOrigHumanCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow._persistedOrigHumanCategoryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPersisted value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _persistedOrigHumanCategoryId
    return:
      type: System.Int32
    content.vb: Protected _persistedOrigHumanCategoryId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTicketId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTicketId
  id: _currentTicketId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTicketId
  nameWithType: TicketRow._currentTicketId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTicketId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTicketId
    return:
      type: System.Int32
    content.vb: Protected _currentTicketId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentConnectId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentConnectId
  id: _currentConnectId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentConnectId
  nameWithType: TicketRow._currentConnectId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentConnectId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ConnectId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentConnectId
    return:
      type: System.Int32
    content.vb: Protected _currentConnectId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTitle
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTitle
  id: _currentTitle
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTitle
  nameWithType: TicketRow._currentTitle
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTitle
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Title\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentTitle
    return:
      type: System.String
    content.vb: Protected _currentTitle As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentCreatedAt
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentCreatedAt
  id: _currentCreatedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentCreatedAt
  nameWithType: TicketRow._currentCreatedAt
  fullName: SuperOffice.CRM.Rows.TicketRow._currentCreatedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreatedAt\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentCreatedAt
    return:
      type: System.DateTime
    content.vb: Protected _currentCreatedAt As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentLastChanged
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentLastChanged
  id: _currentLastChanged
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentLastChanged
  nameWithType: TicketRow._currentLastChanged
  fullName: SuperOffice.CRM.Rows.TicketRow._currentLastChanged
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.LastChanged\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentLastChanged
    return:
      type: System.DateTime
    content.vb: Protected _currentLastChanged As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentActivate
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentActivate
  id: _currentActivate
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentActivate
  nameWithType: TicketRow._currentActivate
  fullName: SuperOffice.CRM.Rows.TicketRow._currentActivate
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Activate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentActivate
    return:
      type: System.DateTime
    content.vb: Protected _currentActivate As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentClosedAt
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentClosedAt
  id: _currentClosedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentClosedAt
  nameWithType: TicketRow._currentClosedAt
  fullName: SuperOffice.CRM.Rows.TicketRow._currentClosedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ClosedAt\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentClosedAt
    return:
      type: System.DateTime
    content.vb: Protected _currentClosedAt As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentCreatedBy
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentCreatedBy
  id: _currentCreatedBy
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentCreatedBy
  nameWithType: TicketRow._currentCreatedBy
  fullName: SuperOffice.CRM.Rows.TicketRow._currentCreatedBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreatedBy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCreatedBy
    return:
      type: System.Int32
    content.vb: Protected _currentCreatedBy As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentAuthor
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentAuthor
  id: _currentAuthor
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentAuthor
  nameWithType: TicketRow._currentAuthor
  fullName: SuperOffice.CRM.Rows.TicketRow._currentAuthor
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Author\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentAuthor
    return:
      type: System.String
    content.vb: Protected _currentAuthor As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentOwnedBy
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentOwnedBy
  id: _currentOwnedBy
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentOwnedBy
  nameWithType: TicketRow._currentOwnedBy
  fullName: SuperOffice.CRM.Rows.TicketRow._currentOwnedBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OwnedBy\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentOwnedBy
    return:
      type: System.Int32
    content.vb: Protected _currentOwnedBy As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentCategory
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentCategory
  id: _currentCategory
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentCategory
  nameWithType: TicketRow._currentCategory
  fullName: SuperOffice.CRM.Rows.TicketRow._currentCategory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Category\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCategory
    return:
      type: System.Int32
    content.vb: Protected _currentCategory As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentOrigCategory
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentOrigCategory
  id: _currentOrigCategory
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentOrigCategory
  nameWithType: TicketRow._currentOrigCategory
  fullName: SuperOffice.CRM.Rows.TicketRow._currentOrigCategory
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigCategory\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentOrigCategory
    return:
      type: System.Int32
    content.vb: Protected _currentOrigCategory As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentSlevel
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentSlevel
  id: _currentSlevel
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentSlevel
  nameWithType: TicketRow._currentSlevel
  fullName: SuperOffice.CRM.Rows.TicketRow._currentSlevel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Slevel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketSecurityLevel _currentSlevel
    return:
      type: SuperOffice.Data.TicketSecurityLevel
    content.vb: Protected _currentSlevel As TicketSecurityLevel
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentStatus
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentStatus
  id: _currentStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentStatus
  nameWithType: TicketRow._currentStatus
  fullName: SuperOffice.CRM.Rows.TicketRow._currentStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Status\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketBaseStatus _currentStatus
    return:
      type: SuperOffice.Data.TicketBaseStatus
    content.vb: Protected _currentStatus As TicketBaseStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTicketStatus
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTicketStatus
  id: _currentTicketStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTicketStatus
  nameWithType: TicketRow._currentTicketStatus
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTicketStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketStatus\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTicketStatus
    return:
      type: System.Int32
    content.vb: Protected _currentTicketStatus As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentCustId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentCustId
  id: _currentCustId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentCustId
  nameWithType: TicketRow._currentCustId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentCustId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CustId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentCustId
    return:
      type: System.Int32
    content.vb: Protected _currentCustId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentPriority
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentPriority
  id: _currentPriority
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentPriority
  nameWithType: TicketRow._currentPriority
  fullName: SuperOffice.CRM.Rows.TicketRow._currentPriority
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Priority\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentPriority
    return:
      type: System.Int32
    content.vb: Protected _currentPriority As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentOrigPriority
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentOrigPriority
  id: _currentOrigPriority
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentOrigPriority
  nameWithType: TicketRow._currentOrigPriority
  fullName: SuperOffice.CRM.Rows.TicketRow._currentOrigPriority
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigPriority\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentOrigPriority
    return:
      type: System.Int32
    content.vb: Protected _currentOrigPriority As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentAlertLevel
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentAlertLevel
  id: _currentAlertLevel
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentAlertLevel
  nameWithType: TicketRow._currentAlertLevel
  fullName: SuperOffice.CRM.Rows.TicketRow._currentAlertLevel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertLevel\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentAlertLevel
    return:
      type: System.Int16
    content.vb: Protected _currentAlertLevel As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentAlertTimeout
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentAlertTimeout
  id: _currentAlertTimeout
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentAlertTimeout
  nameWithType: TicketRow._currentAlertTimeout
  fullName: SuperOffice.CRM.Rows.TicketRow._currentAlertTimeout
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertTimeout\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentAlertTimeout
    return:
      type: System.DateTime
    content.vb: Protected _currentAlertTimeout As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentAlertStop
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentAlertStop
  id: _currentAlertStop
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentAlertStop
  nameWithType: TicketRow._currentAlertStop
  fullName: SuperOffice.CRM.Rows.TicketRow._currentAlertStop
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertStop\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentAlertStop
    return:
      type: System.Int32
    content.vb: Protected _currentAlertStop As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentReadByOwner
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentReadByOwner
  id: _currentReadByOwner
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentReadByOwner
  nameWithType: TicketRow._currentReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow._currentReadByOwner
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadByOwner\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentReadByOwner
    return:
      type: System.DateTime
    content.vb: Protected _currentReadByOwner As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentFirstReadByOwner
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentFirstReadByOwner
  id: _currentFirstReadByOwner
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentFirstReadByOwner
  nameWithType: TicketRow._currentFirstReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow._currentFirstReadByOwner
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentFirstReadByOwner
    return:
      type: System.DateTime
    content.vb: Protected _currentFirstReadByOwner As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentFirstReadByUser
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentFirstReadByUser
  id: _currentFirstReadByUser
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentFirstReadByUser
  nameWithType: TicketRow._currentFirstReadByUser
  fullName: SuperOffice.CRM.Rows.TicketRow._currentFirstReadByUser
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FirstReadByUser\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentFirstReadByUser
    return:
      type: System.DateTime
    content.vb: Protected _currentFirstReadByUser As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentReadByCustomer
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentReadByCustomer
  id: _currentReadByCustomer
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentReadByCustomer
  nameWithType: TicketRow._currentReadByCustomer
  fullName: SuperOffice.CRM.Rows.TicketRow._currentReadByCustomer
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadByCustomer\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentReadByCustomer
    return:
      type: System.DateTime
    content.vb: Protected _currentReadByCustomer As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentFilterId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentFilterId
  id: _currentFilterId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentFilterId
  nameWithType: TicketRow._currentFilterId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentFilterId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FilterId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentFilterId
    return:
      type: System.Int32
    content.vb: Protected _currentFilterId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentDisplayFilter
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentDisplayFilter
  id: _currentDisplayFilter
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentDisplayFilter
  nameWithType: TicketRow._currentDisplayFilter
  fullName: SuperOffice.CRM.Rows.TicketRow._currentDisplayFilter
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DisplayFilter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentDisplayFilter
    return:
      type: System.String
    content.vb: Protected _currentDisplayFilter As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentRepliedAt
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentRepliedAt
  id: _currentRepliedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentRepliedAt
  nameWithType: TicketRow._currentRepliedAt
  fullName: SuperOffice.CRM.Rows.TicketRow._currentRepliedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RepliedAt\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentRepliedAt
    return:
      type: System.DateTime
    content.vb: Protected _currentRepliedAt As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTimeToReply
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTimeToReply
  id: _currentTimeToReply
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTimeToReply
  nameWithType: TicketRow._currentTimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTimeToReply
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeToReply\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTimeToReply
    return:
      type: System.Int32
    content.vb: Protected _currentTimeToReply As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTimeToClose
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTimeToClose
  id: _currentTimeToClose
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTimeToClose
  nameWithType: TicketRow._currentTimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTimeToClose
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeToClose\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTimeToClose
    return:
      type: System.Int32
    content.vb: Protected _currentTimeToClose As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentRealTimeToReply
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentRealTimeToReply
  id: _currentRealTimeToReply
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentRealTimeToReply
  nameWithType: TicketRow._currentRealTimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow._currentRealTimeToReply
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeToReply\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRealTimeToReply
    return:
      type: System.Int32
    content.vb: Protected _currentRealTimeToReply As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentRealTimeToClose
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentRealTimeToClose
  id: _currentRealTimeToClose
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentRealTimeToClose
  nameWithType: TicketRow._currentRealTimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow._currentRealTimeToClose
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeToClose\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRealTimeToClose
    return:
      type: System.Int32
    content.vb: Protected _currentRealTimeToClose As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentReadStatus
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentReadStatus
  id: _currentReadStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentReadStatus
  nameWithType: TicketRow._currentReadStatus
  fullName: SuperOffice.CRM.Rows.TicketRow._currentReadStatus
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadStatus\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketReadStatus _currentReadStatus
    return:
      type: SuperOffice.Data.TicketReadStatus
    content.vb: Protected _currentReadStatus As TicketReadStatus
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentHasAttachment
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentHasAttachment
  id: _currentHasAttachment
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentHasAttachment
  nameWithType: TicketRow._currentHasAttachment
  fullName: SuperOffice.CRM.Rows.TicketRow._currentHasAttachment
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.HasAttachment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected short _currentHasAttachment
    return:
      type: System.Int16
    content.vb: Protected _currentHasAttachment As Short
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentDeadline
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentDeadline
  id: _currentDeadline
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentDeadline
  nameWithType: TicketRow._currentDeadline
  fullName: SuperOffice.CRM.Rows.TicketRow._currentDeadline
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Deadline\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentDeadline
    return:
      type: System.DateTime
    content.vb: Protected _currentDeadline As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentFilterAddress
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentFilterAddress
  id: _currentFilterAddress
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentFilterAddress
  nameWithType: TicketRow._currentFilterAddress
  fullName: SuperOffice.CRM.Rows.TicketRow._currentFilterAddress
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FilterAddress\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentFilterAddress
    return:
      type: System.String
    content.vb: Protected _currentFilterAddress As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentDbiAgentId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentDbiAgentId
  id: _currentDbiAgentId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentDbiAgentId
  nameWithType: TicketRow._currentDbiAgentId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentDbiAgentId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiAgentId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentDbiAgentId
    return:
      type: System.Int32
    content.vb: Protected _currentDbiAgentId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentDbiKey
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentDbiKey
  id: _currentDbiKey
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentDbiKey
  nameWithType: TicketRow._currentDbiKey
  fullName: SuperOffice.CRM.Rows.TicketRow._currentDbiKey
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiKey\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentDbiKey
    return:
      type: System.String
    content.vb: Protected _currentDbiKey As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentDbiLastSyncronized
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentDbiLastSyncronized
  id: _currentDbiLastSyncronized
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentDbiLastSyncronized
  nameWithType: TicketRow._currentDbiLastSyncronized
  fullName: SuperOffice.CRM.Rows.TicketRow._currentDbiLastSyncronized
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentDbiLastSyncronized
    return:
      type: System.DateTime
    content.vb: Protected _currentDbiLastSyncronized As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentDbiLastModified
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentDbiLastModified
  id: _currentDbiLastModified
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentDbiLastModified
  nameWithType: TicketRow._currentDbiLastModified
  fullName: SuperOffice.CRM.Rows.TicketRow._currentDbiLastModified
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiLastModified\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentDbiLastModified
    return:
      type: System.DateTime
    content.vb: Protected _currentDbiLastModified As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentOrigin
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentOrigin
  id: _currentOrigin
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentOrigin
  nameWithType: TicketRow._currentOrigin
  fullName: SuperOffice.CRM.Rows.TicketRow._currentOrigin
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Origin\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected TicketOrigin _currentOrigin
    return:
      type: SuperOffice.Data.TicketOrigin
    content.vb: Protected _currentOrigin As TicketOrigin
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentInternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTimeSpentInternally
  id: _currentTimeSpentInternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTimeSpentInternally
  nameWithType: TicketRow._currentTimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentInternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTimeSpentInternally
    return:
      type: System.Int32
    content.vb: Protected _currentTimeSpentInternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentExternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTimeSpentExternally
  id: _currentTimeSpentExternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTimeSpentExternally
  nameWithType: TicketRow._currentTimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentExternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTimeSpentExternally
    return:
      type: System.Int32
    content.vb: Protected _currentTimeSpentExternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentQueue
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTimeSpentQueue
  id: _currentTimeSpentQueue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTimeSpentQueue
  nameWithType: TicketRow._currentTimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentQueue
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTimeSpentQueue
    return:
      type: System.Int32
    content.vb: Protected _currentTimeSpentQueue As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentInternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentInternally
  id: _currentRealTimeSpentInternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentRealTimeSpentInternally
  nameWithType: TicketRow._currentRealTimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentInternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRealTimeSpentInternally
    return:
      type: System.Int32
    content.vb: Protected _currentRealTimeSpentInternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentExternally
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentExternally
  id: _currentRealTimeSpentExternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentRealTimeSpentExternally
  nameWithType: TicketRow._currentRealTimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentExternally
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRealTimeSpentExternally
    return:
      type: System.Int32
    content.vb: Protected _currentRealTimeSpentExternally As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentQueue
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentQueue
  id: _currentRealTimeSpentQueue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentRealTimeSpentQueue
  nameWithType: TicketRow._currentRealTimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow._currentRealTimeSpentQueue
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentRealTimeSpentQueue
    return:
      type: System.Int32
    content.vb: Protected _currentRealTimeSpentQueue As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentCalculated
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTimeSpentCalculated
  id: _currentTimeSpentCalculated
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTimeSpentCalculated
  nameWithType: TicketRow._currentTimeSpentCalculated
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTimeSpentCalculated
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected DateTime _currentTimeSpentCalculated
    return:
      type: System.DateTime
    content.vb: Protected _currentTimeSpentCalculated As Date
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentNumReplies
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentNumReplies
  id: _currentNumReplies
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentNumReplies
  nameWithType: TicketRow._currentNumReplies
  fullName: SuperOffice.CRM.Rows.TicketRow._currentNumReplies
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.NumReplies\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentNumReplies
    return:
      type: System.Int32
    content.vb: Protected _currentNumReplies As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentNumMessages
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentNumMessages
  id: _currentNumMessages
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentNumMessages
  nameWithType: TicketRow._currentNumMessages
  fullName: SuperOffice.CRM.Rows.TicketRow._currentNumMessages
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.NumMessages\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentNumMessages
    return:
      type: System.Int32
    content.vb: Protected _currentNumMessages As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTicketType
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTicketType
  id: _currentTicketType
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTicketType
  nameWithType: TicketRow._currentTicketType
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTicketType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketType\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentTicketType
    return:
      type: System.Int32
    content.vb: Protected _currentTicketType As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentFromAddress
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentFromAddress
  id: _currentFromAddress
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentFromAddress
  nameWithType: TicketRow._currentFromAddress
  fullName: SuperOffice.CRM.Rows.TicketRow._currentFromAddress
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FromAddress\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentFromAddress
    return:
      type: System.String
    content.vb: Protected _currentFromAddress As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentTags
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentTags
  id: _currentTags
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentTags
  nameWithType: TicketRow._currentTags
  fullName: SuperOffice.CRM.Rows.TicketRow._currentTags
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Tags\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int[] _currentTags
    return:
      type: System.Int32[]
    content.vb: Protected _currentTags As Integer()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentContactId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentContactId
  id: _currentContactId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentContactId
  nameWithType: TicketRow._currentContactId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentContactId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentContactId
    return:
      type: System.Int32
    content.vb: Protected _currentContactId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentLanguage
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentLanguage
  id: _currentLanguage
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentLanguage
  nameWithType: TicketRow._currentLanguage
  fullName: SuperOffice.CRM.Rows.TicketRow._currentLanguage
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Language\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected string _currentLanguage
    return:
      type: System.String
    content.vb: Protected _currentLanguage As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentSentiment
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentSentiment
  id: _currentSentiment
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentSentiment
  nameWithType: TicketRow._currentSentiment
  fullName: SuperOffice.CRM.Rows.TicketRow._currentSentiment
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Sentiment\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSentiment
    return:
      type: System.Int32
    content.vb: Protected _currentSentiment As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentSentimentConfidence
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentSentimentConfidence
  id: _currentSentimentConfidence
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentSentimentConfidence
  nameWithType: TicketRow._currentSentimentConfidence
  fullName: SuperOffice.CRM.Rows.TicketRow._currentSentimentConfidence
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.SentimentConfidence\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSentimentConfidence
    return:
      type: System.Int32
    content.vb: Protected _currentSentimentConfidence As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentFormSubmissionId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentFormSubmissionId
  id: _currentFormSubmissionId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentFormSubmissionId
  nameWithType: TicketRow._currentFormSubmissionId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentFormSubmissionId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FormSubmissionId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentFormSubmissionId
    return:
      type: System.Int32
    content.vb: Protected _currentFormSubmissionId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentSuggestedCategoryId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentSuggestedCategoryId
  id: _currentSuggestedCategoryId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentSuggestedCategoryId
  nameWithType: TicketRow._currentSuggestedCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentSuggestedCategoryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentSuggestedCategoryId
    return:
      type: System.Int32
    content.vb: Protected _currentSuggestedCategoryId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._currentOrigHumanCategoryId
  commentId: F:SuperOffice.CRM.Rows.TicketRow._currentOrigHumanCategoryId
  id: _currentOrigHumanCategoryId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _currentOrigHumanCategoryId
  nameWithType: TicketRow._currentOrigHumanCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow._currentOrigHumanCategoryId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCurrent value, see property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: protected int _currentOrigHumanCategoryId
    return:
      type: System.Int32
    content.vb: Protected _currentOrigHumanCategoryId As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper
  commentId: M:SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper
  id: GetExtraFieldsHelper
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: GetExtraFieldsHelper()
  nameWithType: TicketRow.GetExtraFieldsHelper()
  fullName: SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public ExtraFieldsHelper GetExtraFieldsHelper()
    return:
      type: SuperOffice.CRM.Rows.ExtraFieldsHelper
    content.vb: Public Function GetExtraFieldsHelper As ExtraFieldsHelper
  overload: SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.InternalSetValue(System.String,System.Object)
  id: InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: InternalSetValue(String, Object)
  nameWithType: TicketRow.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TicketRow.InternalSetValue(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void InternalSetValue(string fieldName, object value)
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.Object
    content.vb: Protected Overrides Sub InternalSetValue(fieldName As String, value As Object)
  overridden: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  overload: SuperOffice.CRM.Rows.TicketRow.InternalSetValue*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  id: GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: TicketRow.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the persisted value of a field.  \n"
  syntax:
    content: public override object GetPersistedFieldValue(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Object
      description: Field value, such as an int, DateTime, string ...  Null can be returned if the value is not known.
    content.vb: Public Overrides Function GetPersistedFieldValue(field As FieldInfo) As Object
  overridden: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  id: IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TicketRow.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCheck if the persisted value for a field is known.\n"
  syntax:
    content: public override bool IsPersistedFieldValueKnown(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Specification of a field
    return:
      type: System.Boolean
      description: True if the value is known and sentry permits read.
    content.vb: Public Overrides Function IsPersistedFieldValueKnown(field As FieldInfo) As Boolean
  overridden: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  overload: SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.#ctor(SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.#ctor(SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase)
  id: '#ctor(SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase)'
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TicketRow(TicketRow.TicketRowIdxBase)
  nameWithType: TicketRow.TicketRow(TicketRow.TicketRowIdxBase)
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketRow(SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nConstructor for the class taking an index as argument.\nThis table contains the tickets (requests) of the system. Its purpose should be evident.\n"
  syntax:
    content: protected TicketRow(TicketRow.TicketRowIdxBase idx)
    parameters:
    - id: idx
      type: SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase
      description: The index representing a SELECT command to the database.
    content.vb: Protected Sub New(idx As TicketRow.TicketRowIdxBase)
  overload: SuperOffice.CRM.Rows.TicketRow.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow.CreateNew
  commentId: M:SuperOffice.CRM.Rows.TicketRow.CreateNew
  id: CreateNew
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: CreateNew()
  nameWithType: TicketRow.CreateNew()
  fullName: SuperOffice.CRM.Rows.TicketRow.CreateNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the TicketRow object.\nThis table contains the tickets (requests) of the system. Its purpose should be evident.\n"
  syntax:
    content: public static TicketRow CreateNew()
    return:
      type: SuperOffice.CRM.Rows.TicketRow
      description: A new instance of the TicketRow object.
    content.vb: Public Shared Function CreateNew As TicketRow
  overload: SuperOffice.CRM.Rows.TicketRow.CreateNew*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.TicketRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.TicketTableInfo)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.TicketTableInfo)
  id: GetFromReader(SuperOffice.Data.SoDataReader,SuperOffice.CRM.Data.TicketTableInfo)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: GetFromReader(SoDataReader, TicketTableInfo)
  nameWithType: TicketRow.GetFromReader(SoDataReader, TicketTableInfo)
  fullName: SuperOffice.CRM.Rows.TicketRow.GetFromReader(SuperOffice.Data.SoDataReader, SuperOffice.CRM.Data.TicketTableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the TicketRow object, and populate it with data from a reader/tableinfo. \nIf the reader has DBNull as the current value of the primary key field, an unpopulated object with <xref href=\"SuperOffice.CRM.Rows.TicketRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> == true\nwill be returned. If any fields are missing or one of the non-primary key fields is DBNull, an exception will be thrown.\nThis table contains the tickets (requests) of the system. Its purpose should be evident.\n"
  syntax:
    content: public static TicketRow GetFromReader(SoDataReader reader, TicketTableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> positioned to a valid database row.
    - id: tableInfo
      type: SuperOffice.CRM.Data.TicketTableInfo
      description: >-
        <xref href="SuperOffice.CRM.Data.TicketTableInfo" data-throw-if-not-resolved="false"></xref> instance used in the query that is the source of the reader.
                    The fields used from the reader will be those owned by this tableinfo object.
    return:
      type: SuperOffice.CRM.Rows.TicketRow
      description: A new instance of the TicketRow object.
    content.vb: Public Shared Function GetFromReader(reader As SoDataReader, tableInfo As TicketTableInfo) As TicketRow
  overload: SuperOffice.CRM.Rows.TicketRow.GetFromReader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch(SuperOffice.CRM.Rows.TicketRow.CustomSearch)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch(SuperOffice.CRM.Rows.TicketRow.CustomSearch)
  id: GetFromCustomSearch(SuperOffice.CRM.Rows.TicketRow.CustomSearch)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: GetFromCustomSearch(TicketRow.CustomSearch)
  nameWithType: TicketRow.GetFromCustomSearch(TicketRow.CustomSearch)
  fullName: SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch(SuperOffice.CRM.Rows.TicketRow.CustomSearch)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the TicketRow object, and populate it with data from a custom search.\nIf the search returns no results, an object with <xref href=\"SuperOffice.CRM.Rows.TicketRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be returned; if the result contains\none row, an object representing that row will be returned. If the result contains more than one row, the first\nrow will be used and the rest discarded (there is no way of detecting this situation).\n"
  syntax:
    content: public static TicketRow GetFromCustomSearch(TicketRow.CustomSearch query)
    parameters:
    - id: query
      type: SuperOffice.CRM.Rows.TicketRow.CustomSearch
      description: The custom search to execute against the database
    return:
      type: SuperOffice.CRM.Rows.TicketRow
      description: A new instance of the TicketRow object, reflecting the result of the query.
    content.vb: Public Shared Function GetFromCustomSearch(query As TicketRow.CustomSearch) As TicketRow
  overload: SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId(System.Int32)
  id: GetFromIdxTicketId(System.Int32)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: GetFromIdxTicketId(Int32)
  nameWithType: TicketRow.GetFromIdxTicketId(Int32)
  fullName: SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nCreate a new instance of the TicketRow object, by querying the database table via the index &apos;IDXTicketId&apos;.\nThis method is intended to make it easy to use efficient queries that match a database index.\n"
  remarks: "\nThis method represents one of the unique indexes on the Ticket table. Non-unique indexes have corresponding inner classes\nand methods in the <xref href=\"SuperOffice.CRM.Rows.TicketRows\" data-throw-if-not-resolved=\"false\"></xref> collection, since they may return more than one row.\n"
  syntax:
    content: public static TicketRow GetFromIdxTicketId(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.TicketRow
      description: "Row object that represents the result of the search. <xref href=\"SuperOffice.CRM.Rows.TicketRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> will be true if \nthe query did not match any row in the table"
    content.vb: Public Shared Function GetFromIdxTicketId(ticketId As Integer) As TicketRow
  overload: SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.TicketRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  id: SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: SetDefaults(DefaulterStrategy)
  nameWithType: TicketRow.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.TicketRow.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet default values for the row.\n"
  syntax:
    content: public override void SetDefaults(DefaulterStrategy strategy)
    parameters:
    - id: strategy
      type: SuperOffice.CRM.Rows.DefaulterStrategy
      description: Strategy used when applying default values; values depend on where we are in the Create/Fetch/Populate/Save cycle
    content.vb: Public Overrides Sub SetDefaults(strategy As DefaulterStrategy)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  overload: SuperOffice.CRM.Rows.TicketRow.SetDefaults*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.ToString
  commentId: M:SuperOffice.CRM.Rows.TicketRow.ToString
  id: ToString
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TicketRow.ToString()
  fullName: SuperOffice.CRM.Rows.TicketRow.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nToString method intended for debugging, returns a string\nthat displays the object type, new/dirty status, primary key\nand the string fields\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.CRM.Rows.TicketRow.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TicketRow.SetRowAsNew
  id: SetRowAsNew
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: SetRowAsNew()
  nameWithType: TicketRow.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TicketRow.SetRowAsNew()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public override void SetRowAsNew()
    content.vb: Public Overrides Sub SetRowAsNew
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  overload: SuperOffice.CRM.Rows.TicketRow.SetRowAsNew*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.Reset
  commentId: M:SuperOffice.CRM.Rows.TicketRow.Reset
  id: Reset
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: TicketRow.Reset()
  fullName: SuperOffice.CRM.Rows.TicketRow.Reset()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nReset the changes made on the object.\n"
  remarks: "\nIf the row is not persisted to the database (e.g. <xref href=\"SuperOffice.CRM.Rows.TicketRow.IsNew\" data-throw-if-not-resolved=\"false\"></xref> is true),\nall the values will be reset.  If the row has been persisted to or loaded from the database,\nthe properties will be set to those of the last persisted or loaded values.\n"
  syntax:
    content: protected override void Reset()
    content.vb: Protected Overrides Sub Reset
  overridden: SuperOffice.CRM.Rows.TableRowBase.Reset
  overload: SuperOffice.CRM.Rows.TicketRow.Reset*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  id: OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TicketRow.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TicketRow.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nFill the object with data returned from the database.\n"
  syntax:
    content: protected override void OnLoad(SoDataReader reader, TableInfo tableInfo)
    parameters:
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: Object holding the data returned from the database.
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo used for the SELECT statement.
    content.vb: Protected Overrides Sub OnLoad(reader As SoDataReader, tableInfo As TableInfo)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  overload: SuperOffice.CRM.Rows.TicketRow.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey(System.Int32)
  id: SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: SetPrimaryKey(Int32)
  nameWithType: TicketRow.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSet the primary key for the row.\n"
  syntax:
    content: protected override void SetPrimaryKey(int primaryKey)
    parameters:
    - id: primaryKey
      type: System.Int32
      description: The new primary key for the row.
    content.vb: Protected Overrides Sub SetPrimaryKey(primaryKey As Integer)
  overridden: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  overload: SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  id: OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnSave(BatchSave)
  nameWithType: TicketRow.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSave(SuperOffice.Data.SQL.BatchSave)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nAdd the object to the BatchSave list if it needs saving.\n"
  remarks: Classes overriding this method should call it.
  syntax:
    content: protected override void OnSave(BatchSave batchSave)
    parameters:
    - id: batchSave
      type: SuperOffice.Data.SQL.BatchSave
      description: Collection of objects to be saved within the transaction.
    content.vb: Protected Overrides Sub OnSave(batchSave As BatchSave)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  overload: SuperOffice.CRM.Rows.TicketRow.OnSave*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.OnSaved(System.Boolean)
  id: OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnSaved(Boolean)
  nameWithType: TicketRow.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSaved(System.Boolean)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nMethod called after the save operation has been performed.\n"
  syntax:
    content: protected override void OnSaved(bool bSucceeded)
    parameters:
    - id: bSucceeded
      type: System.Boolean
      description: "\nTrue if the save operation succeeded (e.g. transaction committed), \nor false if the save operation failed (e.g. transaction rolled back)\n"
    content.vb: Protected Overrides Sub OnSaved(bSucceeded As Boolean)
  overridden: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  overload: SuperOffice.CRM.Rows.TicketRow.OnSaved*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TicketRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  id: Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Validate(RowValidator)
  nameWithType: TicketRow.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TicketRow.Validate(SuperOffice.CRM.Rows.RowValidator)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nValidate this row.\n"
  syntax:
    content: public override void Validate(RowValidator rowValidator)
    parameters:
    - id: rowValidator
      type: SuperOffice.CRM.Rows.RowValidator
      description: RowValidator for inserting the result of the validation
    content.vb: Public Overrides Sub Validate(rowValidator As RowValidator)
  overridden: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  overload: SuperOffice.CRM.Rows.TicketRow.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Rows.TicketRow.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Item(System.String)
  id: Item(System.String)
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: TicketRow.Item[String]
  fullName: SuperOffice.CRM.Rows.TicketRow.Item[System.String]
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet or set a value based on the name of the field.\n"
  syntax:
    content: public override object this[string fieldName] { get; set; }
    parameters:
    - id: fieldName
      type: System.String
      description: Name of the field in the database
    return:
      type: System.Object
      description: Value of the field.
    content.vb: Public Overrides Property Item(fieldName As String) As Object
  overridden: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  overload: SuperOffice.CRM.Rows.TicketRow.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\nThrown if the field is not known.\n"
  nameWithType.vb: TicketRow.Item(String)
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: SuperOffice.CRM.Rows.TicketRow.Item(System.String)
  name.vb: Item(String)
- uid: SuperOffice.CRM.Rows.TicketRow.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TableInfo
  id: TableInfo
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TableInfo
  nameWithType: TicketRow.TableInfo
  fullName: SuperOffice.CRM.Rows.TicketRow.TableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the TableInfo for the table.\n"
  syntax:
    content: public override TableInfo TableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
      description: The TableInfo for the table.
    content.vb: Public Overrides ReadOnly Property TableInfo As TableInfo
  overridden: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  overload: SuperOffice.CRM.Rows.TicketRow.TableInfo*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.TicketTableInfo
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TicketTableInfo
  id: TicketTableInfo
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TicketTableInfo
  nameWithType: TicketRow.TicketTableInfo
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketTableInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the <xref href=\"SuperOffice.CRM.Data.TicketTableInfo\" data-throw-if-not-resolved=\"false\"></xref> object associated with the row.\n"
  syntax:
    content: public TicketTableInfo TicketTableInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Data.TicketTableInfo
    content.vb: Public ReadOnly Property TicketTableInfo As TicketTableInfo
  overload: SuperOffice.CRM.Rows.TicketRow.TicketTableInfo*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue
  commentId: P:SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue
  id: InnerPrimaryKeyValue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKeyValue
  nameWithType: TicketRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe actual value the primary key must have.\n"
  syntax:
    content: protected override Parameter InnerPrimaryKeyValue { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Parameter
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKeyValue As Parameter
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  overload: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey
  commentId: P:SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey
  id: InnerPrimaryKey
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: InnerPrimaryKey
  nameWithType: TicketRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe primary key needed to decide which specific row to alter with the current sql-command. \n"
  syntax:
    content: protected override FieldInfo InnerPrimaryKey { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Protected Overrides ReadOnly Property InnerPrimaryKey As FieldInfo
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  overload: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.IsNew
  commentId: P:SuperOffice.CRM.Rows.TicketRow.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: TicketRow.IsNew
  fullName: SuperOffice.CRM.Rows.TicketRow.IsNew
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs this object new, meaning that it does not exist in the database.\n"
  syntax:
    content: public override bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsNew As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsNew
  overload: SuperOffice.CRM.Rows.TicketRow.IsNew*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TicketRow.IsDirty
  id: IsDirty
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: IsDirty
  nameWithType: TicketRow.IsDirty
  fullName: SuperOffice.CRM.Rows.TicketRow.IsDirty
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIs the row dirty, e.g. been modified since the last time it was saved to the database.\n"
  syntax:
    content: public override bool IsDirty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsDirty As Boolean
  overridden: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  overload: SuperOffice.CRM.Rows.TicketRow.IsDirty*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs
  commentId: P:SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs
  id: InnerFieldValuePairs
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: InnerFieldValuePairs
  nameWithType: TicketRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nThe values of all the fields in the row.  \nThe first field is the primary key.  \nThe index of the value corresponds to the name \nof the field returned from the Fields property.\n"
  syntax:
    content: protected override ArgumentParameterCollection InnerFieldValuePairs { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ArgumentParameterCollection
    content.vb: Protected Overrides ReadOnly Property InnerFieldValuePairs As ArgumentParameterCollection
  overridden: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  overload: SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.TicketId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TicketId
  id: TicketId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TicketId
  nameWithType: TicketRow.TicketId
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The primary key (auto-incremented) \n"
  remarks: "\nOriginal type in dictionary:  PK.\n<p>This field is the primary key and can only be read, never written.</p>		\n<p>This field is not protected by the Sentry system, and can always be read</p>\n"
  syntax:
    content: public virtual int TicketId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property TicketId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TicketId*
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: SuperOffice.CRM.Rows.TicketRow.ConnectId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.ConnectId
  id: ConnectId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ConnectId
  nameWithType: TicketRow.ConnectId
  fullName: SuperOffice.CRM.Rows.TicketRow.ConnectId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. If a ticket is connected to another ticket, this field is set to the id of the &apos;master&apos; ticket. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int ConnectId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ConnectId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.ConnectId*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Title
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Title
  id: Title
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: TicketRow.Title
  fullName: SuperOffice.CRM.Rows.TicketRow.Title
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The title of the ticket. \n"
  remarks: "\nOriginal type in dictionary:  String[256].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Title As String
  overload: SuperOffice.CRM.Rows.TicketRow.Title*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.CreatedAt
  commentId: P:SuperOffice.CRM.Rows.TicketRow.CreatedAt
  id: CreatedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: TicketRow.CreatedAt
  fullName: SuperOffice.CRM.Rows.TicketRow.CreatedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. When the ticket was created. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime CreatedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property CreatedAt As Date
  overload: SuperOffice.CRM.Rows.TicketRow.CreatedAt*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.LastChanged
  commentId: P:SuperOffice.CRM.Rows.TicketRow.LastChanged
  id: LastChanged
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: LastChanged
  nameWithType: TicketRow.LastChanged
  fullName: SuperOffice.CRM.Rows.TicketRow.LastChanged
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The last time the ticket was modified. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime LastChanged { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property LastChanged As Date
  overload: SuperOffice.CRM.Rows.TicketRow.LastChanged*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Activate
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Activate
  id: Activate
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Activate
  nameWithType: TicketRow.Activate
  fullName: SuperOffice.CRM.Rows.TicketRow.Activate
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. When the ticket should be activated, if it is postponed. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Activate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Activate As Date
  overload: SuperOffice.CRM.Rows.TicketRow.Activate*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.ClosedAt
  commentId: P:SuperOffice.CRM.Rows.TicketRow.ClosedAt
  id: ClosedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ClosedAt
  nameWithType: TicketRow.ClosedAt
  fullName: SuperOffice.CRM.Rows.TicketRow.ClosedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. When the ticket was closed. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime ClosedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property ClosedAt As Date
  overload: SuperOffice.CRM.Rows.TicketRow.ClosedAt*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.CreatedBy
  commentId: P:SuperOffice.CRM.Rows.TicketRow.CreatedBy
  id: CreatedBy
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: TicketRow.CreatedBy
  fullName: SuperOffice.CRM.Rows.TicketRow.CreatedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The id of the user who created the ticket. 1 (system user) if the ticket was created externally \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int CreatedBy { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property CreatedBy As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.CreatedBy*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Author
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Author
  id: Author
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: TicketRow.Author
  fullName: SuperOffice.CRM.Rows.TicketRow.Author
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. A string representing the author of the ticket (same as author of first message). \n"
  remarks: "\nOriginal type in dictionary:  String[256].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string Author { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Author As String
  overload: SuperOffice.CRM.Rows.TicketRow.Author*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.OwnedBy
  commentId: P:SuperOffice.CRM.Rows.TicketRow.OwnedBy
  id: OwnedBy
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OwnedBy
  nameWithType: TicketRow.OwnedBy
  fullName: SuperOffice.CRM.Rows.TicketRow.OwnedBy
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The id of the user who owns the ticket. 1 (system user) if the ticket is unassigned. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will reset the Sentry and recalculate your rights based on the new value</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n"
  syntax:
    content: public virtual int OwnedBy { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property OwnedBy As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.OwnedBy*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Category
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Category
  id: Category
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Category
  nameWithType: TicketRow.Category
  fullName: SuperOffice.CRM.Rows.TicketRow.Category
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The id of the category a ticket is in. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will reset the Sentry and recalculate your rights based on the new value</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n"
  syntax:
    content: public virtual int Category { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Category As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.Category*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.OrigCategory
  commentId: P:SuperOffice.CRM.Rows.TicketRow.OrigCategory
  id: OrigCategory
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OrigCategory
  nameWithType: TicketRow.OrigCategory
  fullName: SuperOffice.CRM.Rows.TicketRow.OrigCategory
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The id of the category the ticket was posted to. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will reset the Sentry and recalculate your rights based on the new value</p>\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n"
  syntax:
    content: public virtual int OrigCategory { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property OrigCategory As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.OrigCategory*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Slevel
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Slevel
  id: Slevel
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Slevel
  nameWithType: TicketRow.Slevel
  fullName: SuperOffice.CRM.Rows.TicketRow.Slevel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: TicketSecurityLevel. The securitylevel of the ticket. \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual TicketSecurityLevel Slevel { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.TicketSecurityLevel
    content.vb: Public Overridable Property Slevel As TicketSecurityLevel
  overload: SuperOffice.CRM.Rows.TicketRow.Slevel*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Status
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Status
  id: Status
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: TicketRow.Status
  fullName: SuperOffice.CRM.Rows.TicketRow.Status
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: TicketBaseStatus. The status of the ticket. I.e. active/closed/postponed/deleted \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual TicketBaseStatus Status { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.TicketBaseStatus
    content.vb: Public Overridable Property Status As TicketBaseStatus
  overload: SuperOffice.CRM.Rows.TicketRow.Status*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TicketStatus
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TicketStatus
  id: TicketStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TicketStatus
  nameWithType: TicketRow.TicketStatus
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. User defined ticket status \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TicketStatus { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TicketStatus As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TicketStatus*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.CustId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.CustId
  id: CustId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: CustId
  nameWithType: TicketRow.CustId
  fullName: SuperOffice.CRM.Rows.TicketRow.CustId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The reference to the customer. NULL or -1 if ticket is not connected to customer. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int CustId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property CustId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.CustId*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Priority
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Priority
  id: Priority
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: TicketRow.Priority
  fullName: SuperOffice.CRM.Rows.TicketRow.Priority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The reference to the ticket_priority table. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Priority As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.Priority*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.OrigPriority
  commentId: P:SuperOffice.CRM.Rows.TicketRow.OrigPriority
  id: OrigPriority
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OrigPriority
  nameWithType: TicketRow.OrigPriority
  fullName: SuperOffice.CRM.Rows.TicketRow.OrigPriority
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The reference to the initial priority for the ticket. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int OrigPriority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property OrigPriority As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.OrigPriority*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.AlertLevel
  commentId: P:SuperOffice.CRM.Rows.TicketRow.AlertLevel
  id: AlertLevel
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: AlertLevel
  nameWithType: TicketRow.AlertLevel
  fullName: SuperOffice.CRM.Rows.TicketRow.AlertLevel
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. The alert level for the ticket. Matches the level value of the ticket_alert table. \n"
  remarks: "\nOriginal type in dictionary:  Short.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short AlertLevel { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property AlertLevel As Short
  overload: SuperOffice.CRM.Rows.TicketRow.AlertLevel*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.AlertTimeout
  commentId: P:SuperOffice.CRM.Rows.TicketRow.AlertTimeout
  id: AlertTimeout
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: AlertTimeout
  nameWithType: TicketRow.AlertTimeout
  fullName: SuperOffice.CRM.Rows.TicketRow.AlertTimeout
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The datetime for when the ticket should jump to the next alert_level. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime AlertTimeout { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property AlertTimeout As Date
  overload: SuperOffice.CRM.Rows.TicketRow.AlertTimeout*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.AlertStop
  commentId: P:SuperOffice.CRM.Rows.TicketRow.AlertStop
  id: AlertStop
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: AlertStop
  nameWithType: TicketRow.AlertStop
  fullName: SuperOffice.CRM.Rows.TicketRow.AlertStop
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. If the esclatation was stopped, this fields indicates how many seconds left before the next escalation level. -1 if escalation is running. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int AlertStop { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property AlertStop As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.AlertStop*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.ReadByOwner
  commentId: P:SuperOffice.CRM.Rows.TicketRow.ReadByOwner
  id: ReadByOwner
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ReadByOwner
  nameWithType: TicketRow.ReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow.ReadByOwner
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The datetime for when the ticket last was read by the owner. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime ReadByOwner { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property ReadByOwner As Date
  overload: SuperOffice.CRM.Rows.TicketRow.ReadByOwner*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner
  commentId: P:SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner
  id: FirstReadByOwner
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: FirstReadByOwner
  nameWithType: TicketRow.FirstReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The datetime for when the ticket first was read by the current owner. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime FirstReadByOwner { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property FirstReadByOwner As Date
  overload: SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.FirstReadByUser
  commentId: P:SuperOffice.CRM.Rows.TicketRow.FirstReadByUser
  id: FirstReadByUser
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: FirstReadByUser
  nameWithType: TicketRow.FirstReadByUser
  fullName: SuperOffice.CRM.Rows.TicketRow.FirstReadByUser
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The datetime for when the ticket first was read by a user. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime FirstReadByUser { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property FirstReadByUser As Date
  overload: SuperOffice.CRM.Rows.TicketRow.FirstReadByUser*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.ReadByCustomer
  commentId: P:SuperOffice.CRM.Rows.TicketRow.ReadByCustomer
  id: ReadByCustomer
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ReadByCustomer
  nameWithType: TicketRow.ReadByCustomer
  fullName: SuperOffice.CRM.Rows.TicketRow.ReadByCustomer
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The datetime for when the ticket was read by the customer. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime ReadByCustomer { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property ReadByCustomer As Date
  overload: SuperOffice.CRM.Rows.TicketRow.ReadByCustomer*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.FilterId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.FilterId
  id: FilterId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: FilterId
  nameWithType: TicketRow.FilterId
  fullName: SuperOffice.CRM.Rows.TicketRow.FilterId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The reference to the mailbox from which the ticket was created. NULL or -1 if the ticket was not created by a mailbox. \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int FilterId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property FilterId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.FilterId*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.DisplayFilter
  commentId: P:SuperOffice.CRM.Rows.TicketRow.DisplayFilter
  id: DisplayFilter
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: DisplayFilter
  nameWithType: TicketRow.DisplayFilter
  fullName: SuperOffice.CRM.Rows.TicketRow.DisplayFilter
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The name of the mailbox from which the ticket was created. Only for displaypurposes \n"
  remarks: "\nOriginal type in dictionary:  String[256].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string DisplayFilter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property DisplayFilter As String
  overload: SuperOffice.CRM.Rows.TicketRow.DisplayFilter*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.RepliedAt
  commentId: P:SuperOffice.CRM.Rows.TicketRow.RepliedAt
  id: RepliedAt
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: RepliedAt
  nameWithType: TicketRow.RepliedAt
  fullName: SuperOffice.CRM.Rows.TicketRow.RepliedAt
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. The datetime for when the ticket was replied to. I.e. the first external message added to the ticket. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime RepliedAt { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property RepliedAt As Date
  overload: SuperOffice.CRM.Rows.TicketRow.RepliedAt*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TimeToReply
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TimeToReply
  id: TimeToReply
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TimeToReply
  nameWithType: TicketRow.TimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeToReply
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The time (minutes) between when the ticket was created and when it was replied to. Calculated based on priority&apos;s timeframe. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TimeToReply { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TimeToReply As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TimeToReply*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TimeToClose
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TimeToClose
  id: TimeToClose
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TimeToClose
  nameWithType: TicketRow.TimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeToClose
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The time (minutes) between when the ticket was created and when it was closed. Calculated based on priority&apos;s timeframe. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TimeToClose { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TimeToClose As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TimeToClose*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeToReply
  commentId: P:SuperOffice.CRM.Rows.TicketRow.RealTimeToReply
  id: RealTimeToReply
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: RealTimeToReply
  nameWithType: TicketRow.RealTimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeToReply
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Same as time_to_reply, but not calculated based on priority. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RealTimeToReply { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RealTimeToReply As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.RealTimeToReply*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeToClose
  commentId: P:SuperOffice.CRM.Rows.TicketRow.RealTimeToClose
  id: RealTimeToClose
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: RealTimeToClose
  nameWithType: TicketRow.RealTimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeToClose
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Same as time_to_close, but not calculated based on priority. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RealTimeToClose { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RealTimeToClose As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.RealTimeToClose*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.ReadStatus
  commentId: P:SuperOffice.CRM.Rows.TicketRow.ReadStatus
  id: ReadStatus
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ReadStatus
  nameWithType: TicketRow.ReadStatus
  fullName: SuperOffice.CRM.Rows.TicketRow.ReadStatus
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: TicketReadStatus. Whether the owner has read the ticket or not (red, yellow, green). \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((short)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual TicketReadStatus ReadStatus { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.TicketReadStatus
    content.vb: Public Overridable Property ReadStatus As TicketReadStatus
  overload: SuperOffice.CRM.Rows.TicketRow.ReadStatus*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.HasAttachment
  commentId: P:SuperOffice.CRM.Rows.TicketRow.HasAttachment
  id: HasAttachment
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: HasAttachment
  nameWithType: TicketRow.HasAttachment
  fullName: SuperOffice.CRM.Rows.TicketRow.HasAttachment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: short. Boolean indicating if this ticket has one or more attachments. \n"
  remarks: "\nOriginal type in dictionary:  Bool.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value ((Int16)0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual short HasAttachment { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: Public Overridable Property HasAttachment As Short
  overload: SuperOffice.CRM.Rows.TicketRow.HasAttachment*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Deadline
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Deadline
  id: Deadline
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Deadline
  nameWithType: TicketRow.Deadline
  fullName: SuperOffice.CRM.Rows.TicketRow.Deadline
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Deadline for ticket. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime Deadline { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property Deadline As Date
  overload: SuperOffice.CRM.Rows.TicketRow.Deadline*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.FilterAddress
  commentId: P:SuperOffice.CRM.Rows.TicketRow.FilterAddress
  id: FilterAddress
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: FilterAddress
  nameWithType: TicketRow.FilterAddress
  fullName: SuperOffice.CRM.Rows.TicketRow.FilterAddress
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. Address of receiving filter (mail box) \n"
  remarks: "\nOriginal type in dictionary:  String[256].\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (string.Empty)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual string FilterAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FilterAddress As String
  overload: SuperOffice.CRM.Rows.TicketRow.FilterAddress*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.DbiAgentId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.DbiAgentId
  id: DbiAgentId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: DbiAgentId
  nameWithType: TicketRow.DbiAgentId
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiAgentId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Integration agent (eJournal) \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int DbiAgentId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property DbiAgentId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.DbiAgentId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.DbiKey
  commentId: P:SuperOffice.CRM.Rows.TicketRow.DbiKey
  id: DbiKey
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: DbiKey
  nameWithType: TicketRow.DbiKey
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiKey
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The primary key for the integrated entry in the external datasource. \n"
  remarks: "\nOriginal type in dictionary:  String[256].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string DbiKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property DbiKey As String
  overload: SuperOffice.CRM.Rows.TicketRow.DbiKey*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized
  commentId: P:SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized
  id: DbiLastSyncronized
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: DbiLastSyncronized
  nameWithType: TicketRow.DbiLastSyncronized
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. Last external synchronization. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime DbiLastSyncronized { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property DbiLastSyncronized As Date
  overload: SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.DbiLastModified
  commentId: P:SuperOffice.CRM.Rows.TicketRow.DbiLastModified
  id: DbiLastModified
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: DbiLastModified
  nameWithType: TicketRow.DbiLastModified
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiLastModified
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. When the entry was last modified. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual DateTime DbiLastModified { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property DbiLastModified As Date
  overload: SuperOffice.CRM.Rows.TicketRow.DbiLastModified*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Origin
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Origin
  id: Origin
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Origin
  nameWithType: TicketRow.Origin
  fullName: SuperOffice.CRM.Rows.TicketRow.Origin
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: TicketOrigin. What is the origin of this ticket \n"
  remarks: "\nOriginal type in dictionary:  Enum.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public TicketOrigin Origin { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.TicketOrigin
    content.vb: Public Property Origin As TicketOrigin
  overload: SuperOffice.CRM.Rows.TicketRow.Origin*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally
  id: TimeSpentInternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TimeSpentInternally
  nameWithType: TicketRow.TimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total time (seconds) within the priority&apos;s office hours the ticket has been in an open status (configurable), not including current state \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TimeSpentInternally { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TimeSpentInternally As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally
  id: TimeSpentExternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TimeSpentExternally
  nameWithType: TicketRow.TimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total time (seconds) within the priority&apos;s office hours the ticket has been in a external waiting status (configurable), not including current state \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TimeSpentExternally { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TimeSpentExternally As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue
  id: TimeSpentQueue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TimeSpentQueue
  nameWithType: TicketRow.TimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total time (seconds) within the priority&apos;s office hours the ticket has been in a queue status, not including current state \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TimeSpentQueue { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TimeSpentQueue As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally
  commentId: P:SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally
  id: RealTimeSpentInternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: RealTimeSpentInternally
  nameWithType: TicketRow.RealTimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total time (seconds) within 24x7 the ticket has been in an open status (configurable), not including current state \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RealTimeSpentInternally { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RealTimeSpentInternally As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally
  commentId: P:SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally
  id: RealTimeSpentExternally
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: RealTimeSpentExternally
  nameWithType: TicketRow.RealTimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total time (seconds) within 24x7 the ticket has been in a external waiting status (configurable), not including current state \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RealTimeSpentExternally { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RealTimeSpentExternally As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue
  commentId: P:SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue
  id: RealTimeSpentQueue
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: RealTimeSpentQueue
  nameWithType: TicketRow.RealTimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total time (seconds) within 24x7 hours the ticket has been in a queue status, not including current state \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int RealTimeSpentQueue { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property RealTimeSpentQueue As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated
  id: TimeSpentCalculated
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TimeSpentCalculated
  nameWithType: TicketRow.TimeSpentCalculated
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: DateTime. When the time_spent value was last calculated. \n"
  remarks: "\nOriginal type in dictionary:  DateTime.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (DateTime.MinValue)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual DateTime TimeSpentCalculated { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable Property TimeSpentCalculated As Date
  overload: SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.NumReplies
  commentId: P:SuperOffice.CRM.Rows.TicketRow.NumReplies
  id: NumReplies
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: NumReplies
  nameWithType: TicketRow.NumReplies
  fullName: SuperOffice.CRM.Rows.TicketRow.NumReplies
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The number of replies (messages) to the customer for this request. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int NumReplies { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property NumReplies As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.NumReplies*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.NumMessages
  commentId: P:SuperOffice.CRM.Rows.TicketRow.NumMessages
  id: NumMessages
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: NumMessages
  nameWithType: TicketRow.NumMessages
  fullName: SuperOffice.CRM.Rows.TicketRow.NumMessages
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The total number of messages for this request. \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int NumMessages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property NumMessages As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.NumMessages*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.TicketType
  commentId: P:SuperOffice.CRM.Rows.TicketRow.TicketType
  id: TicketType
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: TicketType
  nameWithType: TicketRow.TicketType
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketType
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Ticket type \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>You need to have Read access to get the value of this field. If you do not have access, you will get a blank value (0)</p>\n<p>You need to have Write access to set this field to a new value (Sentry will throw exception otherwise)</p>\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n"
  syntax:
    content: public virtual int TicketType { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property TicketType As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.TicketType*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if the set method is accessed without having the Write access right to the field
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.FromAddress
  commentId: P:SuperOffice.CRM.Rows.TicketRow.FromAddress
  id: FromAddress
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: FromAddress
  nameWithType: TicketRow.FromAddress
  fullName: SuperOffice.CRM.Rows.TicketRow.FromAddress
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The from-address used when this ticket got created, e.g. by email \n"
  remarks: "\nOriginal type in dictionary:  String[4001].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string FromAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property FromAddress As String
  overload: SuperOffice.CRM.Rows.TicketRow.FromAddress*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Tags
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Tags
  id: Tags
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: TicketRow.Tags
  fullName: SuperOffice.CRM.Rows.TicketRow.Tags
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: Int32[]. Array of references to the Tags records \n"
  remarks: "\nOriginal type in dictionary:  FKArray.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int[] Tags { get; set; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public Overridable Property Tags As Integer()
  overload: SuperOffice.CRM.Rows.TicketRow.Tags*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.ContactId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.ContactId
  id: ContactId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: TicketRow.ContactId
  fullName: SuperOffice.CRM.Rows.TicketRow.ContactId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The company of the person in the cust_id field, if that person belongs to a company \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int ContactId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property ContactId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.ContactId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Language
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Language
  id: Language
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: TicketRow.Language
  fullName: SuperOffice.CRM.Rows.TicketRow.Language
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: string. The language of the first external message \n"
  remarks: "\nOriginal type in dictionary:  String[11].\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual string Language { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Language As String
  overload: SuperOffice.CRM.Rows.TicketRow.Language*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.Sentiment
  commentId: P:SuperOffice.CRM.Rows.TicketRow.Sentiment
  id: Sentiment
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: Sentiment
  nameWithType: TicketRow.Sentiment
  fullName: SuperOffice.CRM.Rows.TicketRow.Sentiment
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The sentiment index of the last external message \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int Sentiment { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property Sentiment As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.Sentiment*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.SentimentConfidence
  commentId: P:SuperOffice.CRM.Rows.TicketRow.SentimentConfidence
  id: SentimentConfidence
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: SentimentConfidence
  nameWithType: TicketRow.SentimentConfidence
  fullName: SuperOffice.CRM.Rows.TicketRow.SentimentConfidence
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. The sentiment confidence of the last external message \n"
  remarks: "\nOriginal type in dictionary:  Int.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int SentimentConfidence { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SentimentConfidence As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.SentimentConfidence*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.FormSubmissionId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.FormSubmissionId
  id: FormSubmissionId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: FormSubmissionId
  nameWithType: TicketRow.FormSubmissionId
  fullName: SuperOffice.CRM.Rows.TicketRow.FormSubmissionId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. If this ticket was created from a form submission, this field will point to that record \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int FormSubmissionId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property FormSubmissionId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.FormSubmissionId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId
  id: SuggestedCategoryId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: SuggestedCategoryId
  nameWithType: TicketRow.SuggestedCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Suggestion for categorization, based on the text of the message (AI) \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int SuggestedCategoryId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property SuggestedCategoryId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId
  commentId: P:SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId
  id: OrigHumanCategoryId
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OrigHumanCategoryId
  nameWithType: TicketRow.OrigHumanCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\n.NET type: int. Will contain the category id selected by the user, when having the choice of using the suggested category or manually selecting a category \n"
  remarks: "\nOriginal type in dictionary:  FK.\n<p>Setting this field to a new value will not affect the Sentry calculations and your rights</p>\n<p>This field is not protected by the Sentry system, and can always be read</p>\n<p>This field is not protected by the Sentry system, and can be written to unless other restrictions prevent it</p>\n"
  syntax:
    content: public virtual int OrigHumanCategoryId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable Property OrigHumanCategoryId As Integer
  overload: SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: SuperOffice.CRM.Rows.TicketRow._onConnectIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onConnectIdChange
  id: _onConnectIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onConnectIdChange
  nameWithType: TicketRow._onConnectIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onConnectIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ConnectId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onConnectIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onConnectIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTitleChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTitleChange
  id: _onTitleChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTitleChange
  nameWithType: TicketRow._onTitleChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTitleChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Title\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onTitleChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onTitleChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onCreatedAtChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onCreatedAtChange
  id: _onCreatedAtChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onCreatedAtChange
  nameWithType: TicketRow._onCreatedAtChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onCreatedAtChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreatedAt\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onCreatedAtChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onCreatedAtChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onLastChangedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onLastChangedChange
  id: _onLastChangedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onLastChangedChange
  nameWithType: TicketRow._onLastChangedChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onLastChangedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.LastChanged\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onLastChangedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onLastChangedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onActivateChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onActivateChange
  id: _onActivateChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onActivateChange
  nameWithType: TicketRow._onActivateChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onActivateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Activate\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onActivateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onActivateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onClosedAtChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onClosedAtChange
  id: _onClosedAtChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onClosedAtChange
  nameWithType: TicketRow._onClosedAtChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onClosedAtChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ClosedAt\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onClosedAtChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onClosedAtChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onCreatedByChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onCreatedByChange
  id: _onCreatedByChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onCreatedByChange
  nameWithType: TicketRow._onCreatedByChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onCreatedByChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CreatedBy\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onCreatedByChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onCreatedByChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onAuthorChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onAuthorChange
  id: _onAuthorChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onAuthorChange
  nameWithType: TicketRow._onAuthorChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onAuthorChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Author\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onAuthorChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onAuthorChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onOwnedByChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onOwnedByChange
  id: _onOwnedByChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onOwnedByChange
  nameWithType: TicketRow._onOwnedByChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onOwnedByChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OwnedBy\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onOwnedByChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onOwnedByChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onCategoryChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onCategoryChange
  id: _onCategoryChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onCategoryChange
  nameWithType: TicketRow._onCategoryChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onCategoryChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Category\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onCategoryChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onCategoryChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onOrigCategoryChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onOrigCategoryChange
  id: _onOrigCategoryChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onOrigCategoryChange
  nameWithType: TicketRow._onOrigCategoryChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onOrigCategoryChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigCategory\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onOrigCategoryChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onOrigCategoryChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onSlevelChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onSlevelChange
  id: _onSlevelChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onSlevelChange
  nameWithType: TicketRow._onSlevelChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onSlevelChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Slevel\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<TicketSecurityLevel> _onSlevelChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketSecurityLevel}
    content.vb: Protected Event _onSlevelChange As OnFieldChange(Of TicketSecurityLevel)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onStatusChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onStatusChange
  id: _onStatusChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onStatusChange
  nameWithType: TicketRow._onStatusChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Status\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<TicketBaseStatus> _onStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketBaseStatus}
    content.vb: Protected Event _onStatusChange As OnFieldChange(Of TicketBaseStatus)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTicketStatusChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTicketStatusChange
  id: _onTicketStatusChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTicketStatusChange
  nameWithType: TicketRow._onTicketStatusChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTicketStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketStatus\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTicketStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTicketStatusChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onCustIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onCustIdChange
  id: _onCustIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onCustIdChange
  nameWithType: TicketRow._onCustIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onCustIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.CustId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onCustIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onCustIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onPriorityChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onPriorityChange
  id: _onPriorityChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onPriorityChange
  nameWithType: TicketRow._onPriorityChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onPriorityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Priority\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onPriorityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onPriorityChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onOrigPriorityChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onOrigPriorityChange
  id: _onOrigPriorityChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onOrigPriorityChange
  nameWithType: TicketRow._onOrigPriorityChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onOrigPriorityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigPriority\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onOrigPriorityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onOrigPriorityChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onAlertLevelChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onAlertLevelChange
  id: _onAlertLevelChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onAlertLevelChange
  nameWithType: TicketRow._onAlertLevelChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onAlertLevelChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertLevel\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onAlertLevelChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onAlertLevelChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onAlertTimeoutChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onAlertTimeoutChange
  id: _onAlertTimeoutChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onAlertTimeoutChange
  nameWithType: TicketRow._onAlertTimeoutChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onAlertTimeoutChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertTimeout\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onAlertTimeoutChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onAlertTimeoutChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onAlertStopChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onAlertStopChange
  id: _onAlertStopChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onAlertStopChange
  nameWithType: TicketRow._onAlertStopChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onAlertStopChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.AlertStop\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onAlertStopChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onAlertStopChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onReadByOwnerChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onReadByOwnerChange
  id: _onReadByOwnerChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onReadByOwnerChange
  nameWithType: TicketRow._onReadByOwnerChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onReadByOwnerChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadByOwner\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onReadByOwnerChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onReadByOwnerChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onFirstReadByOwnerChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onFirstReadByOwnerChange
  id: _onFirstReadByOwnerChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onFirstReadByOwnerChange
  nameWithType: TicketRow._onFirstReadByOwnerChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onFirstReadByOwnerChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onFirstReadByOwnerChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onFirstReadByOwnerChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onFirstReadByUserChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onFirstReadByUserChange
  id: _onFirstReadByUserChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onFirstReadByUserChange
  nameWithType: TicketRow._onFirstReadByUserChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onFirstReadByUserChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FirstReadByUser\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onFirstReadByUserChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onFirstReadByUserChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onReadByCustomerChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onReadByCustomerChange
  id: _onReadByCustomerChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onReadByCustomerChange
  nameWithType: TicketRow._onReadByCustomerChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onReadByCustomerChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadByCustomer\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onReadByCustomerChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onReadByCustomerChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onFilterIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onFilterIdChange
  id: _onFilterIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onFilterIdChange
  nameWithType: TicketRow._onFilterIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onFilterIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FilterId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onFilterIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onFilterIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onDisplayFilterChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onDisplayFilterChange
  id: _onDisplayFilterChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onDisplayFilterChange
  nameWithType: TicketRow._onDisplayFilterChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onDisplayFilterChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DisplayFilter\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onDisplayFilterChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onDisplayFilterChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onRepliedAtChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onRepliedAtChange
  id: _onRepliedAtChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onRepliedAtChange
  nameWithType: TicketRow._onRepliedAtChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onRepliedAtChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RepliedAt\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onRepliedAtChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onRepliedAtChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTimeToReplyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTimeToReplyChange
  id: _onTimeToReplyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTimeToReplyChange
  nameWithType: TicketRow._onTimeToReplyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTimeToReplyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeToReply\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTimeToReplyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTimeToReplyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTimeToCloseChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTimeToCloseChange
  id: _onTimeToCloseChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTimeToCloseChange
  nameWithType: TicketRow._onTimeToCloseChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTimeToCloseChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeToClose\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTimeToCloseChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTimeToCloseChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onRealTimeToReplyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onRealTimeToReplyChange
  id: _onRealTimeToReplyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onRealTimeToReplyChange
  nameWithType: TicketRow._onRealTimeToReplyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onRealTimeToReplyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeToReply\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRealTimeToReplyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRealTimeToReplyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onRealTimeToCloseChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onRealTimeToCloseChange
  id: _onRealTimeToCloseChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onRealTimeToCloseChange
  nameWithType: TicketRow._onRealTimeToCloseChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onRealTimeToCloseChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeToClose\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRealTimeToCloseChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRealTimeToCloseChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onReadStatusChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onReadStatusChange
  id: _onReadStatusChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onReadStatusChange
  nameWithType: TicketRow._onReadStatusChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onReadStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ReadStatus\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<TicketReadStatus> _onReadStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketReadStatus}
    content.vb: Protected Event _onReadStatusChange As OnFieldChange(Of TicketReadStatus)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onHasAttachmentChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onHasAttachmentChange
  id: _onHasAttachmentChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onHasAttachmentChange
  nameWithType: TicketRow._onHasAttachmentChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onHasAttachmentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.HasAttachment\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<short> _onHasAttachmentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Protected Event _onHasAttachmentChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onDeadlineChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onDeadlineChange
  id: _onDeadlineChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onDeadlineChange
  nameWithType: TicketRow._onDeadlineChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onDeadlineChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Deadline\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onDeadlineChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onDeadlineChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onFilterAddressChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onFilterAddressChange
  id: _onFilterAddressChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onFilterAddressChange
  nameWithType: TicketRow._onFilterAddressChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onFilterAddressChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FilterAddress\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onFilterAddressChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onFilterAddressChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onDbiAgentIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onDbiAgentIdChange
  id: _onDbiAgentIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onDbiAgentIdChange
  nameWithType: TicketRow._onDbiAgentIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onDbiAgentIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiAgentId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onDbiAgentIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onDbiAgentIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onDbiKeyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onDbiKeyChange
  id: _onDbiKeyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onDbiKeyChange
  nameWithType: TicketRow._onDbiKeyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onDbiKeyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiKey\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onDbiKeyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onDbiKeyChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onDbiLastSyncronizedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onDbiLastSyncronizedChange
  id: _onDbiLastSyncronizedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onDbiLastSyncronizedChange
  nameWithType: TicketRow._onDbiLastSyncronizedChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onDbiLastSyncronizedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onDbiLastSyncronizedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onDbiLastSyncronizedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onDbiLastModifiedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onDbiLastModifiedChange
  id: _onDbiLastModifiedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onDbiLastModifiedChange
  nameWithType: TicketRow._onDbiLastModifiedChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onDbiLastModifiedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.DbiLastModified\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onDbiLastModifiedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onDbiLastModifiedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onOriginChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onOriginChange
  id: _onOriginChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onOriginChange
  nameWithType: TicketRow._onOriginChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onOriginChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Origin\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type short.\n"
  syntax:
    content: protected event OnFieldChange<TicketOrigin> _onOriginChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketOrigin}
    content.vb: Protected Event _onOriginChange As OnFieldChange(Of TicketOrigin)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTimeSpentInternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTimeSpentInternallyChange
  id: _onTimeSpentInternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTimeSpentInternallyChange
  nameWithType: TicketRow._onTimeSpentInternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTimeSpentInternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTimeSpentInternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTimeSpentInternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTimeSpentExternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTimeSpentExternallyChange
  id: _onTimeSpentExternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTimeSpentExternallyChange
  nameWithType: TicketRow._onTimeSpentExternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTimeSpentExternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTimeSpentExternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTimeSpentExternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTimeSpentQueueChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTimeSpentQueueChange
  id: _onTimeSpentQueueChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTimeSpentQueueChange
  nameWithType: TicketRow._onTimeSpentQueueChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTimeSpentQueueChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTimeSpentQueueChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTimeSpentQueueChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentInternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentInternallyChange
  id: _onRealTimeSpentInternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onRealTimeSpentInternallyChange
  nameWithType: TicketRow._onRealTimeSpentInternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentInternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRealTimeSpentInternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRealTimeSpentInternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentExternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentExternallyChange
  id: _onRealTimeSpentExternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onRealTimeSpentExternallyChange
  nameWithType: TicketRow._onRealTimeSpentExternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentExternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRealTimeSpentExternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRealTimeSpentExternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentQueueChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentQueueChange
  id: _onRealTimeSpentQueueChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onRealTimeSpentQueueChange
  nameWithType: TicketRow._onRealTimeSpentQueueChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onRealTimeSpentQueueChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onRealTimeSpentQueueChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onRealTimeSpentQueueChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTimeSpentCalculatedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTimeSpentCalculatedChange
  id: _onTimeSpentCalculatedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTimeSpentCalculatedChange
  nameWithType: TicketRow._onTimeSpentCalculatedChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTimeSpentCalculatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type DateTime.\n"
  syntax:
    content: protected event OnFieldChange<DateTime> _onTimeSpentCalculatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Protected Event _onTimeSpentCalculatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onNumRepliesChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onNumRepliesChange
  id: _onNumRepliesChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onNumRepliesChange
  nameWithType: TicketRow._onNumRepliesChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onNumRepliesChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.NumReplies\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onNumRepliesChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onNumRepliesChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onNumMessagesChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onNumMessagesChange
  id: _onNumMessagesChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onNumMessagesChange
  nameWithType: TicketRow._onNumMessagesChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onNumMessagesChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.NumMessages\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onNumMessagesChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onNumMessagesChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTicketTypeChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTicketTypeChange
  id: _onTicketTypeChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTicketTypeChange
  nameWithType: TicketRow._onTicketTypeChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTicketTypeChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.TicketType\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onTicketTypeChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onTicketTypeChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onFromAddressChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onFromAddressChange
  id: _onFromAddressChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onFromAddressChange
  nameWithType: TicketRow._onFromAddressChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onFromAddressChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FromAddress\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onFromAddressChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onFromAddressChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onTagsChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onTagsChange
  id: _onTagsChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onTagsChange
  nameWithType: TicketRow._onTagsChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onTagsChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Tags\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type Int32[].\n"
  syntax:
    content: protected event OnFieldChange<int[]> _onTagsChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32[]}
    content.vb: Protected Event _onTagsChange As OnFieldChange(Of Integer())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onContactIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onContactIdChange
  id: _onContactIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onContactIdChange
  nameWithType: TicketRow._onContactIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onContactIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.ContactId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onContactIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onContactIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onLanguageChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onLanguageChange
  id: _onLanguageChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onLanguageChange
  nameWithType: TicketRow._onLanguageChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onLanguageChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Language\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type string.\n"
  syntax:
    content: protected event OnFieldChange<string> _onLanguageChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Protected Event _onLanguageChange As OnFieldChange(Of String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onSentimentChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onSentimentChange
  id: _onSentimentChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onSentimentChange
  nameWithType: TicketRow._onSentimentChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onSentimentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.Sentiment\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSentimentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSentimentChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onSentimentConfidenceChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onSentimentConfidenceChange
  id: _onSentimentConfidenceChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onSentimentConfidenceChange
  nameWithType: TicketRow._onSentimentConfidenceChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onSentimentConfidenceChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.SentimentConfidence\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSentimentConfidenceChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSentimentConfidenceChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onFormSubmissionIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onFormSubmissionIdChange
  id: _onFormSubmissionIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onFormSubmissionIdChange
  nameWithType: TicketRow._onFormSubmissionIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onFormSubmissionIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.FormSubmissionId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onFormSubmissionIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onFormSubmissionIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onSuggestedCategoryIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onSuggestedCategoryIdChange
  id: _onSuggestedCategoryIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onSuggestedCategoryIdChange
  nameWithType: TicketRow._onSuggestedCategoryIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onSuggestedCategoryIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onSuggestedCategoryIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onSuggestedCategoryIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow._onOrigHumanCategoryIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow._onOrigHumanCategoryIdChange
  id: _onOrigHumanCategoryIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: _onOrigHumanCategoryIdChange
  nameWithType: TicketRow._onOrigHumanCategoryIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow._onOrigHumanCategoryIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nChange envent for property <xref href=\"SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId\" data-throw-if-not-resolved=\"false\"></xref>; field is of .NET type int.\n"
  syntax:
    content: protected event OnFieldChange<int> _onOrigHumanCategoryIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Protected Event _onOrigHumanCategoryIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.TicketRow.OnConnectIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnConnectIdChange
  id: OnConnectIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnConnectIdChange
  nameWithType: TicketRow.OnConnectIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnConnectIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ConnectId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnConnectIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnConnectIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTitleChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTitleChange
  id: OnTitleChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTitleChange
  nameWithType: TicketRow.OnTitleChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTitleChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Title is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnTitleChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnTitleChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnCreatedAtChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnCreatedAtChange
  id: OnCreatedAtChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnCreatedAtChange
  nameWithType: TicketRow.OnCreatedAtChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnCreatedAtChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CreatedAt is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnCreatedAtChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnCreatedAtChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnLastChangedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnLastChangedChange
  id: OnLastChangedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnLastChangedChange
  nameWithType: TicketRow.OnLastChangedChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnLastChangedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when LastChanged is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnLastChangedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnLastChangedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnActivateChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnActivateChange
  id: OnActivateChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnActivateChange
  nameWithType: TicketRow.OnActivateChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnActivateChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Activate is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnActivateChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnActivateChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnClosedAtChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnClosedAtChange
  id: OnClosedAtChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnClosedAtChange
  nameWithType: TicketRow.OnClosedAtChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnClosedAtChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ClosedAt is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnClosedAtChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnClosedAtChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnCreatedByChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnCreatedByChange
  id: OnCreatedByChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnCreatedByChange
  nameWithType: TicketRow.OnCreatedByChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnCreatedByChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CreatedBy is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnCreatedByChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnCreatedByChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnAuthorChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnAuthorChange
  id: OnAuthorChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnAuthorChange
  nameWithType: TicketRow.OnAuthorChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnAuthorChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Author is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnAuthorChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnAuthorChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnOwnedByChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnOwnedByChange
  id: OnOwnedByChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnOwnedByChange
  nameWithType: TicketRow.OnOwnedByChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnOwnedByChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when OwnedBy is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnOwnedByChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnOwnedByChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnCategoryChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnCategoryChange
  id: OnCategoryChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnCategoryChange
  nameWithType: TicketRow.OnCategoryChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnCategoryChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Category is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnCategoryChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnCategoryChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnOrigCategoryChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnOrigCategoryChange
  id: OnOrigCategoryChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnOrigCategoryChange
  nameWithType: TicketRow.OnOrigCategoryChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnOrigCategoryChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when OrigCategory is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnOrigCategoryChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnOrigCategoryChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnSlevelChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnSlevelChange
  id: OnSlevelChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnSlevelChange
  nameWithType: TicketRow.OnSlevelChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSlevelChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Slevel is changing.\n"
  syntax:
    content: public event OnFieldChange<TicketSecurityLevel> OnSlevelChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketSecurityLevel}
    content.vb: Public Event OnSlevelChange As OnFieldChange(Of TicketSecurityLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnStatusChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnStatusChange
  id: OnStatusChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnStatusChange
  nameWithType: TicketRow.OnStatusChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Status is changing.\n"
  syntax:
    content: public event OnFieldChange<TicketBaseStatus> OnStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketBaseStatus}
    content.vb: Public Event OnStatusChange As OnFieldChange(Of TicketBaseStatus)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTicketStatusChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTicketStatusChange
  id: OnTicketStatusChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTicketStatusChange
  nameWithType: TicketRow.OnTicketStatusChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTicketStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TicketStatus is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTicketStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTicketStatusChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnCustIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnCustIdChange
  id: OnCustIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnCustIdChange
  nameWithType: TicketRow.OnCustIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnCustIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when CustId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnCustIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnCustIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnPriorityChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnPriorityChange
  id: OnPriorityChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnPriorityChange
  nameWithType: TicketRow.OnPriorityChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnPriorityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Priority is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnPriorityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnPriorityChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnOrigPriorityChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnOrigPriorityChange
  id: OnOrigPriorityChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnOrigPriorityChange
  nameWithType: TicketRow.OnOrigPriorityChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnOrigPriorityChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when OrigPriority is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnOrigPriorityChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnOrigPriorityChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnAlertLevelChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnAlertLevelChange
  id: OnAlertLevelChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnAlertLevelChange
  nameWithType: TicketRow.OnAlertLevelChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnAlertLevelChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AlertLevel is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnAlertLevelChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnAlertLevelChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnAlertTimeoutChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnAlertTimeoutChange
  id: OnAlertTimeoutChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnAlertTimeoutChange
  nameWithType: TicketRow.OnAlertTimeoutChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnAlertTimeoutChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AlertTimeout is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnAlertTimeoutChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnAlertTimeoutChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnAlertStopChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnAlertStopChange
  id: OnAlertStopChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnAlertStopChange
  nameWithType: TicketRow.OnAlertStopChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnAlertStopChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when AlertStop is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnAlertStopChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnAlertStopChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnReadByOwnerChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnReadByOwnerChange
  id: OnReadByOwnerChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnReadByOwnerChange
  nameWithType: TicketRow.OnReadByOwnerChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnReadByOwnerChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReadByOwner is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnReadByOwnerChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnReadByOwnerChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnFirstReadByOwnerChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnFirstReadByOwnerChange
  id: OnFirstReadByOwnerChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnFirstReadByOwnerChange
  nameWithType: TicketRow.OnFirstReadByOwnerChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnFirstReadByOwnerChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FirstReadByOwner is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnFirstReadByOwnerChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnFirstReadByOwnerChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnFirstReadByUserChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnFirstReadByUserChange
  id: OnFirstReadByUserChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnFirstReadByUserChange
  nameWithType: TicketRow.OnFirstReadByUserChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnFirstReadByUserChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FirstReadByUser is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnFirstReadByUserChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnFirstReadByUserChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnReadByCustomerChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnReadByCustomerChange
  id: OnReadByCustomerChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnReadByCustomerChange
  nameWithType: TicketRow.OnReadByCustomerChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnReadByCustomerChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReadByCustomer is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnReadByCustomerChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnReadByCustomerChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnFilterIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnFilterIdChange
  id: OnFilterIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnFilterIdChange
  nameWithType: TicketRow.OnFilterIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnFilterIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FilterId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnFilterIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnFilterIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnDisplayFilterChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnDisplayFilterChange
  id: OnDisplayFilterChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnDisplayFilterChange
  nameWithType: TicketRow.OnDisplayFilterChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnDisplayFilterChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DisplayFilter is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnDisplayFilterChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnDisplayFilterChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnRepliedAtChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnRepliedAtChange
  id: OnRepliedAtChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnRepliedAtChange
  nameWithType: TicketRow.OnRepliedAtChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnRepliedAtChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RepliedAt is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnRepliedAtChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnRepliedAtChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTimeToReplyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTimeToReplyChange
  id: OnTimeToReplyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTimeToReplyChange
  nameWithType: TicketRow.OnTimeToReplyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTimeToReplyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TimeToReply is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTimeToReplyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTimeToReplyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTimeToCloseChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTimeToCloseChange
  id: OnTimeToCloseChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTimeToCloseChange
  nameWithType: TicketRow.OnTimeToCloseChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTimeToCloseChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TimeToClose is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTimeToCloseChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTimeToCloseChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnRealTimeToReplyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnRealTimeToReplyChange
  id: OnRealTimeToReplyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnRealTimeToReplyChange
  nameWithType: TicketRow.OnRealTimeToReplyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnRealTimeToReplyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RealTimeToReply is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRealTimeToReplyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRealTimeToReplyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnRealTimeToCloseChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnRealTimeToCloseChange
  id: OnRealTimeToCloseChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnRealTimeToCloseChange
  nameWithType: TicketRow.OnRealTimeToCloseChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnRealTimeToCloseChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RealTimeToClose is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRealTimeToCloseChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRealTimeToCloseChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnReadStatusChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnReadStatusChange
  id: OnReadStatusChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnReadStatusChange
  nameWithType: TicketRow.OnReadStatusChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnReadStatusChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ReadStatus is changing.\n"
  syntax:
    content: public event OnFieldChange<TicketReadStatus> OnReadStatusChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketReadStatus}
    content.vb: Public Event OnReadStatusChange As OnFieldChange(Of TicketReadStatus)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnHasAttachmentChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnHasAttachmentChange
  id: OnHasAttachmentChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnHasAttachmentChange
  nameWithType: TicketRow.OnHasAttachmentChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnHasAttachmentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when HasAttachment is changing.\n"
  syntax:
    content: public event OnFieldChange<short> OnHasAttachmentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
    content.vb: Public Event OnHasAttachmentChange As OnFieldChange(Of Short)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnDeadlineChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnDeadlineChange
  id: OnDeadlineChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnDeadlineChange
  nameWithType: TicketRow.OnDeadlineChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnDeadlineChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Deadline is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnDeadlineChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnDeadlineChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnFilterAddressChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnFilterAddressChange
  id: OnFilterAddressChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnFilterAddressChange
  nameWithType: TicketRow.OnFilterAddressChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnFilterAddressChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FilterAddress is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnFilterAddressChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnFilterAddressChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnDbiAgentIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnDbiAgentIdChange
  id: OnDbiAgentIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnDbiAgentIdChange
  nameWithType: TicketRow.OnDbiAgentIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnDbiAgentIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DbiAgentId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnDbiAgentIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnDbiAgentIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnDbiKeyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnDbiKeyChange
  id: OnDbiKeyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnDbiKeyChange
  nameWithType: TicketRow.OnDbiKeyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnDbiKeyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DbiKey is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnDbiKeyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnDbiKeyChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnDbiLastSyncronizedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnDbiLastSyncronizedChange
  id: OnDbiLastSyncronizedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnDbiLastSyncronizedChange
  nameWithType: TicketRow.OnDbiLastSyncronizedChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnDbiLastSyncronizedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DbiLastSyncronized is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnDbiLastSyncronizedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnDbiLastSyncronizedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnDbiLastModifiedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnDbiLastModifiedChange
  id: OnDbiLastModifiedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnDbiLastModifiedChange
  nameWithType: TicketRow.OnDbiLastModifiedChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnDbiLastModifiedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when DbiLastModified is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnDbiLastModifiedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnDbiLastModifiedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnOriginChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnOriginChange
  id: OnOriginChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnOriginChange
  nameWithType: TicketRow.OnOriginChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnOriginChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Origin is changing.\n"
  syntax:
    content: public event OnFieldChange<TicketOrigin> OnOriginChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketOrigin}
    content.vb: Public Event OnOriginChange As OnFieldChange(Of TicketOrigin)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentInternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTimeSpentInternallyChange
  id: OnTimeSpentInternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTimeSpentInternallyChange
  nameWithType: TicketRow.OnTimeSpentInternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentInternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TimeSpentInternally is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTimeSpentInternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTimeSpentInternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentExternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTimeSpentExternallyChange
  id: OnTimeSpentExternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTimeSpentExternallyChange
  nameWithType: TicketRow.OnTimeSpentExternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentExternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TimeSpentExternally is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTimeSpentExternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTimeSpentExternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentQueueChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTimeSpentQueueChange
  id: OnTimeSpentQueueChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTimeSpentQueueChange
  nameWithType: TicketRow.OnTimeSpentQueueChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentQueueChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TimeSpentQueue is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTimeSpentQueueChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTimeSpentQueueChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentInternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentInternallyChange
  id: OnRealTimeSpentInternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnRealTimeSpentInternallyChange
  nameWithType: TicketRow.OnRealTimeSpentInternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentInternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RealTimeSpentInternally is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRealTimeSpentInternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRealTimeSpentInternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentExternallyChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentExternallyChange
  id: OnRealTimeSpentExternallyChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnRealTimeSpentExternallyChange
  nameWithType: TicketRow.OnRealTimeSpentExternallyChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentExternallyChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RealTimeSpentExternally is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRealTimeSpentExternallyChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRealTimeSpentExternallyChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentQueueChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentQueueChange
  id: OnRealTimeSpentQueueChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnRealTimeSpentQueueChange
  nameWithType: TicketRow.OnRealTimeSpentQueueChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnRealTimeSpentQueueChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when RealTimeSpentQueue is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnRealTimeSpentQueueChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnRealTimeSpentQueueChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentCalculatedChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTimeSpentCalculatedChange
  id: OnTimeSpentCalculatedChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTimeSpentCalculatedChange
  nameWithType: TicketRow.OnTimeSpentCalculatedChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTimeSpentCalculatedChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TimeSpentCalculated is changing.\n"
  syntax:
    content: public event OnFieldChange<DateTime> OnTimeSpentCalculatedChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
    content.vb: Public Event OnTimeSpentCalculatedChange As OnFieldChange(Of Date)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnNumRepliesChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnNumRepliesChange
  id: OnNumRepliesChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnNumRepliesChange
  nameWithType: TicketRow.OnNumRepliesChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnNumRepliesChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when NumReplies is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnNumRepliesChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnNumRepliesChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnNumMessagesChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnNumMessagesChange
  id: OnNumMessagesChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnNumMessagesChange
  nameWithType: TicketRow.OnNumMessagesChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnNumMessagesChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when NumMessages is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnNumMessagesChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnNumMessagesChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTicketTypeChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTicketTypeChange
  id: OnTicketTypeChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTicketTypeChange
  nameWithType: TicketRow.OnTicketTypeChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTicketTypeChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when TicketType is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnTicketTypeChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnTicketTypeChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnFromAddressChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnFromAddressChange
  id: OnFromAddressChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnFromAddressChange
  nameWithType: TicketRow.OnFromAddressChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnFromAddressChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FromAddress is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnFromAddressChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnFromAddressChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnTagsChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnTagsChange
  id: OnTagsChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnTagsChange
  nameWithType: TicketRow.OnTagsChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnTagsChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Tags is changing.\n"
  syntax:
    content: public event OnFieldChange<int[]> OnTagsChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32[]}
    content.vb: Public Event OnTagsChange As OnFieldChange(Of Integer())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnContactIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnContactIdChange
  id: OnContactIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnContactIdChange
  nameWithType: TicketRow.OnContactIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnContactIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when ContactId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnContactIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnContactIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnLanguageChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnLanguageChange
  id: OnLanguageChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnLanguageChange
  nameWithType: TicketRow.OnLanguageChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnLanguageChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Language is changing.\n"
  syntax:
    content: public event OnFieldChange<string> OnLanguageChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.String}
    content.vb: Public Event OnLanguageChange As OnFieldChange(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnSentimentChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnSentimentChange
  id: OnSentimentChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnSentimentChange
  nameWithType: TicketRow.OnSentimentChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSentimentChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when Sentiment is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSentimentChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSentimentChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnSentimentConfidenceChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnSentimentConfidenceChange
  id: OnSentimentConfidenceChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnSentimentConfidenceChange
  nameWithType: TicketRow.OnSentimentConfidenceChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSentimentConfidenceChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when SentimentConfidence is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSentimentConfidenceChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSentimentConfidenceChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnFormSubmissionIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnFormSubmissionIdChange
  id: OnFormSubmissionIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnFormSubmissionIdChange
  nameWithType: TicketRow.OnFormSubmissionIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnFormSubmissionIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when FormSubmissionId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnFormSubmissionIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnFormSubmissionIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnSuggestedCategoryIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnSuggestedCategoryIdChange
  id: OnSuggestedCategoryIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnSuggestedCategoryIdChange
  nameWithType: TicketRow.OnSuggestedCategoryIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSuggestedCategoryIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when SuggestedCategoryId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnSuggestedCategoryIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnSuggestedCategoryIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.TicketRow.OnOrigHumanCategoryIdChange
  commentId: E:SuperOffice.CRM.Rows.TicketRow.OnOrigHumanCategoryIdChange
  id: OnOrigHumanCategoryIdChange
  parent: SuperOffice.CRM.Rows.TicketRow
  langs:
  - csharp
  - vb
  name: OnOrigHumanCategoryIdChange
  nameWithType: TicketRow.OnOrigHumanCategoryIdChange
  fullName: SuperOffice.CRM.Rows.TicketRow.OnOrigHumanCategoryIdChange
  type: Event
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nEvent raised when OrigHumanCategoryId is changing.\n"
  syntax:
    content: public event OnFieldChange<int> OnOrigHumanCategoryIdChange
    return:
      type: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
    content.vb: Public Event OnOrigHumanCategoryIdChange As OnFieldChange(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.CRM.Rows.TableRowBase
  commentId: T:SuperOffice.CRM.Rows.TableRowBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TableRowBase
  nameWithType: TableRowBase
  fullName: SuperOffice.CRM.Rows.TableRowBase
- uid: SuperOffice.Data.INestedPersist
  commentId: T:SuperOffice.Data.INestedPersist
  parent: SuperOffice.Data
  isExternal: true
  name: INestedPersist
  nameWithType: INestedPersist
  fullName: SuperOffice.Data.INestedPersist
- uid: SuperOffice.CRM.Security.ISoDataLookup
  commentId: T:SuperOffice.CRM.Security.ISoDataLookup
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISoDataLookup
  nameWithType: ISoDataLookup
  fullName: SuperOffice.CRM.Security.ISoDataLookup
- uid: SuperOffice.CRM.Security.ISentryIgnorable
  commentId: T:SuperOffice.CRM.Security.ISentryIgnorable
  parent: SuperOffice.CRM.Security
  isExternal: true
  name: ISentryIgnorable
  nameWithType: ISentryIgnorable
  fullName: SuperOffice.CRM.Security.ISentryIgnorable
- uid: SuperOffice.Data.ISoItem
  commentId: T:SuperOffice.Data.ISoItem
  parent: SuperOffice.Data
  isExternal: true
  name: ISoItem
  nameWithType: ISoItem
  fullName: SuperOffice.Data.ISoItem
- uid: SuperOffice.CRM.Rows.TableRowBase._saveOwner
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._saveOwner
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _saveOwner
  nameWithType: TableRowBase._saveOwner
  fullName: SuperOffice.CRM.Rows.TableRowBase._saveOwner
- uid: SuperOffice.CRM.Rows.TableRowBase._sentries
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sentries
  nameWithType: TableRowBase._sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase._sentries
- uid: SuperOffice.CRM.Rows.TableRowBase._onValueChange
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._onValueChange
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _onValueChange
  nameWithType: TableRowBase._onValueChange
  fullName: SuperOffice.CRM.Rows.TableRowBase._onValueChange
- uid: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _relatedNestedPersistMembers
  nameWithType: TableRowBase._relatedNestedPersistMembers
  fullName: SuperOffice.CRM.Rows.TableRowBase._relatedNestedPersistMembers
- uid: SuperOffice.CRM.Rows.TableRowBase._sqlType
  commentId: F:SuperOffice.CRM.Rows.TableRowBase._sqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: _sqlType
  nameWithType: TableRowBase._sqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase._sqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(Int32, Object)
  nameWithType: TableRowBase.InternalSetValue(Int32, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.Int32,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(SoField, Object)
  nameWithType: TableRowBase.InternalSetValue(SoField, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(SuperOffice.Data.Dictionary.SoField,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetFieldValue(FieldInfo)
  nameWithType: TableRowBase.GetFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetFieldValue
    nameWithType: TableRowBase.GetFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetKnownFields()
  nameWithType: TableRowBase.GetKnownFields()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    name: GetKnownFields
    nameWithType: TableRowBase.GetKnownFields
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetKnownFields
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  nameWithType.vb: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  name.vb: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown(FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#CRM#Security#ISoDataLookup#IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    nameWithType: TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.CRM.Security.ISoDataLookup.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsGhostField(FieldInfo)
  nameWithType: TableRowBase.IsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.IsGhostField(SuperOffice.Data.SQL.FieldInfo)
    name: IsGhostField
    nameWithType: TableRowBase.IsGhostField
    fullName: SuperOffice.CRM.Rows.TableRowBase.IsGhostField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad()
  nameWithType: TableRowBase.RowLoad()
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: RowLoad(ITableRowLoadHandler)
  nameWithType: TableRowBase.RowLoad(ITableRowLoadHandler)
  fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.RowLoad(SuperOffice.CRM.Rows.ITableRowLoadHandler)
    name: RowLoad
    nameWithType: TableRowBase.RowLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.RowLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.ITableRowLoadHandler
    name: ITableRowLoadHandler
    nameWithType: ITableRowLoadHandler
    fullName: SuperOffice.CRM.Rows.ITableRowLoadHandler
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoaded(IdxBase)
  nameWithType: TableRowBase.OnLoaded(IdxBase)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoaded(SuperOffice.CRM.Rows.IdxBase)
    name: OnLoaded
    nameWithType: TableRowBase.OnLoaded
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoaded
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(IdxBase, SoDataReader)
  nameWithType: TableRowBase.Load(IdxBase, SoDataReader)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase, SuperOffice.Data.SoDataReader)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.CRM.Rows.IdxBase,SuperOffice.Data.SoDataReader)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.IdxBase
    name: IdxBase
    nameWithType: IdxBase
    fullName: SuperOffice.CRM.Rows.IdxBase
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Load(SoDataReader, TableInfo)
  nameWithType: TableRowBase.Load(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Load(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: Load
    nameWithType: TableRowBase.Load
    fullName: SuperOffice.CRM.Rows.TableRowBase.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults()
  nameWithType: TableRowBase.SetDefaults()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DashboardTileDefinitionRow, String)
  nameWithType: TableRowBase.SetDefaults(DashboardTileDefinitionRow, String)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow, System.String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DashboardTileDefinitionRow,System.String)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    name: DashboardTileDefinitionRow
    nameWithType: DashboardTileDefinitionRow
    fullName: SuperOffice.CRM.Rows.DashboardTileDefinitionRow
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetSaveOwner(INestedPersist)
  nameWithType: TableRowBase.SetSaveOwner(INestedPersist)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner(SuperOffice.Data.INestedPersist)
    name: SetSaveOwner
    nameWithType: TableRowBase.SetSaveOwner
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetSaveOwner
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.INestedPersist
    name: INestedPersist
    nameWithType: INestedPersist
    fullName: SuperOffice.Data.INestedPersist
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Save
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Save
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Save()
  nameWithType: TableRowBase.Save()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Save()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Save
    name: Save
    nameWithType: TableRowBase.Save
    fullName: SuperOffice.CRM.Rows.TableRowBase.Save
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Delete
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Delete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Delete()
  nameWithType: TableRowBase.Delete()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Delete()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Delete
    name: Delete
    nameWithType: TableRowBase.Delete
    fullName: SuperOffice.CRM.Rows.TableRowBase.Delete
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate()
  nameWithType: TableRowBase.Validate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDirty(Int32, Object, Object)
  nameWithType: TableRowBase.SetDirty(Int32, Object, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32, System.Object, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDirty(System.Int32,System.Object,System.Object)
    name: SetDirty
    nameWithType: TableRowBase.SetDirty
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDirty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPreIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPreIdUpdate
    name: SuperOffice.Data.INestedPersist.OnPreIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  name.vb: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate(PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnIdUpdate()
  nameWithType: TableRowBase.INestedPersist.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate()
  name.vb: SuperOffice.Data.INestedPersist.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnIdUpdate
    name: SuperOffice.Data.INestedPersist.OnIdUpdate
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSave(BatchSave)
  nameWithType: TableRowBase.INestedPersist.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave(SuperOffice.Data.SQL.BatchSave)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  name.vb: SuperOffice.Data.INestedPersist.OnSave(BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: INestedPersist.OnSave
    nameWithType: TableRowBase.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSave(SuperOffice.Data.SQL.BatchSave)
    name: SuperOffice.Data.INestedPersist.OnSave
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: INestedPersist.OnSaved(Boolean)
  nameWithType: TableRowBase.INestedPersist.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(System.Boolean)
  nameWithType.vb: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  name.vb: SuperOffice.Data.INestedPersist.OnSaved(Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: INestedPersist.OnSaved
    nameWithType: TableRowBase.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SuperOffice#Data#INestedPersist#OnSaved(System.Boolean)
    name: SuperOffice.Data.INestedPersist.OnSaved
    nameWithType: TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.SuperOffice.Data.INestedPersist.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPreIdUpdate()
  nameWithType: TableRowBase.OnPreIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    name: OnPreIdUpdate
    nameWithType: TableRowBase.OnPreIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPreIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyRequest(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyRequest(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyRequest
    nameWithType: TableRowBase.OnPrimaryKeyRequest
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyRequest
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnPrimaryKeyUpdate(PKContainer)
  nameWithType: TableRowBase.OnPrimaryKeyUpdate(PKContainer)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate(SuperOffice.Data.PKContainer)
    name: OnPrimaryKeyUpdate
    nameWithType: TableRowBase.OnPrimaryKeyUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnPrimaryKeyUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.PKContainer
    name: PKContainer
    nameWithType: PKContainer
    fullName: SuperOffice.Data.PKContainer
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnIdUpdate()
  nameWithType: TableRowBase.OnIdUpdate()
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    name: OnIdUpdate
    nameWithType: TableRowBase.OnIdUpdate
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnIdUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: BeginIgnoreSentryCheck()
  nameWithType: TableRowBase.BeginIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    name: BeginIgnoreSentryCheck
    nameWithType: TableRowBase.BeginIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.BeginIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: EndIgnoreSentryCheck()
  nameWithType: TableRowBase.EndIgnoreSentryCheck()
  fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    name: EndIgnoreSentryCheck
    nameWithType: TableRowBase.EndIgnoreSentryCheck
    fullName: SuperOffice.CRM.Rows.TableRowBase.EndIgnoreSentryCheck
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: GetRelatedNestedPersist()
  nameWithType: TableRowBase.GetRelatedNestedPersist()
  fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    name: GetRelatedNestedPersist
    nameWithType: TableRowBase.GetRelatedNestedPersist
    fullName: SuperOffice.CRM.Rows.TableRowBase.GetRelatedNestedPersist
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[Int32]
  nameWithType: TableRowBase.Item[Int32]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.Int32]
  nameWithType.vb: TableRowBase.Item(Int32)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.Int32)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[SoField]
  nameWithType: TableRowBase.Item[SoField]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[SuperOffice.Data.Dictionary.SoField]
  nameWithType.vb: TableRowBase.Item(SoField)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
  name.vb: Item(SoField)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(SuperOffice.Data.Dictionary.SoField)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Dictionary.SoField
    name: SoField
    nameWithType: SoField
    fullName: SuperOffice.Data.Dictionary.SoField
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TableRowBase.Sentries
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Sentries
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Sentries
  nameWithType: TableRowBase.Sentries
  fullName: SuperOffice.CRM.Rows.TableRowBase.Sentries
- uid: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: ForeignKeyHelper
  nameWithType: TableRowBase.ForeignKeyHelper
  fullName: SuperOffice.CRM.Rows.TableRowBase.ForeignKeyHelper
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDeleted
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDeleted
  nameWithType: TableRowBase.IsDeleted
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDeleted
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSaving
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSaving
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSaving
  nameWithType: TableRowBase.IsSaving
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSaving
- uid: SuperOffice.CRM.Rows.TableRowBase.SqlType
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.SqlType
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SqlType
  nameWithType: TableRowBase.SqlType
  fullName: SuperOffice.CRM.Rows.TableRowBase.SqlType
- uid: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsSentryIgnored
  nameWithType: TableRowBase.IsSentryIgnored
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsSentryIgnored
- uid: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsMarkedForDelete
  nameWithType: TableRowBase.IsMarkedForDelete
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsMarkedForDelete
- uid: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnValueChanged
  nameWithType: TableRowBase.OnValueChanged
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnValueChanged
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementSaved
  nameWithType: TableRowBase.OnElementSaved
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  commentId: E:SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnElementIdUpdate
  nameWithType: TableRowBase.OnElementIdUpdate
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnElementIdUpdate
- uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetTableInfos
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetTableInfos()
  nameWithType: PrivateSave.GetTableInfos()
  fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    name: GetTableInfos
    nameWithType: PrivateSave.GetTableInfos
    fullName: SuperOffice.Data.SQL.PrivateSave.GetTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  commentId: M:SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: CloneToBasicUpdatingQuery()
  nameWithType: PrivateSave.CloneToBasicUpdatingQuery()
  fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    name: CloneToBasicUpdatingQuery
    nameWithType: PrivateSave.CloneToBasicUpdatingQuery
    fullName: SuperOffice.Data.SQL.PrivateSave.CloneToBasicUpdatingQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  commentId: E:SuperOffice.Data.SQL.PrivateSave.OnUpdateField
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: OnUpdateField
  nameWithType: PrivateSave.OnUpdateField
  fullName: SuperOffice.Data.SQL.PrivateSave.OnUpdateField
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  commentId: M:SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable<TableInfo>)
  fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable<SuperOffice.Data.SQL.TableInfo>)
  nameWithType.vb: SqlCommand.AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  fullName.vb: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable(Of SuperOffice.Data.SQL.TableInfo))
  name.vb: AddIgnoreAutoSentryTableInfo(IEnumerable(Of TableInfo))
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo(System.Collections.Generic.IEnumerable{SuperOffice.Data.SQL.TableInfo})
    name: AddIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.AddIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.AddIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: RemoveIgnoreAutoSentryTableInfo(TableInfo)
  nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: RemoveIgnoreAutoSentryTableInfo
    nameWithType: SqlCommand.RemoveIgnoreAutoSentryTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.RemoveIgnoreAutoSentryTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  commentId: M:SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: ClearIgnoreAutoSentryTableInfos()
  nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos()
  fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    name: ClearIgnoreAutoSentryTableInfos
    nameWithType: SqlCommand.ClearIgnoreAutoSentryTableInfos
    fullName: SuperOffice.Data.SQL.SqlCommand.ClearIgnoreAutoSentryTableInfos
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: IsAutoSentryIgnoredOnTableInfo(TableInfo)
  nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo(TableInfo)
  fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo(SuperOffice.Data.SQL.TableInfo)
    name: IsAutoSentryIgnoredOnTableInfo
    nameWithType: SqlCommand.IsAutoSentryIgnoredOnTableInfo
    fullName: SuperOffice.Data.SQL.SqlCommand.IsAutoSentryIgnoredOnTableInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetPrivateSaves()
  nameWithType: SqlCommand.GetPrivateSaves()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    name: GetPrivateSaves
    nameWithType: SqlCommand.GetPrivateSaves
    fullName: SuperOffice.Data.SQL.SqlCommand.GetPrivateSaves
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetInserts
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetInserts()
  nameWithType: SqlCommand.GetInserts()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetInserts
    name: GetInserts
    nameWithType: SqlCommand.GetInserts
    fullName: SuperOffice.Data.SQL.SqlCommand.GetInserts
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetUpdates
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetUpdates()
  nameWithType: SqlCommand.GetUpdates()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    name: GetUpdates
    nameWithType: SqlCommand.GetUpdates
    fullName: SuperOffice.Data.SQL.SqlCommand.GetUpdates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetDeletes
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetDeletes()
  nameWithType: SqlCommand.GetDeletes()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    name: GetDeletes
    nameWithType: SqlCommand.GetDeletes
    fullName: SuperOffice.Data.SQL.SqlCommand.GetDeletes
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
  commentId: M:SuperOffice.Data.SQL.SqlCommand.GetSelect
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: GetSelect()
  nameWithType: SqlCommand.GetSelect()
  fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.SqlCommand.GetSelect
    name: GetSelect
    nameWithType: SqlCommand.GetSelect
    fullName: SuperOffice.Data.SQL.SqlCommand.GetSelect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  commentId: P:SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
  parent: SuperOffice.Data.SQL.SqlCommand
  isExternal: true
  name: AutoSentryIgnoredTables
  nameWithType: SqlCommand.AutoSentryIgnoredTables
  fullName: SuperOffice.Data.SQL.SqlCommand.AutoSentryIgnoredTables
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketRow, To>()
  nameWithType: EnumUtil.MapEnums<TicketRow, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.TicketRow, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketRow, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.TicketRow, To)()
  name.vb: MapEnums(Of TicketRow, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketRow, To>
    nameWithType: EnumUtil.MapEnums<TicketRow, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.TicketRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketRow, To)
    nameWithType: EnumUtil.MapEnums(Of TicketRow, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.TicketRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  name: ExecuteReader(Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteScalar<T>()
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>()
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)()
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)()
  name.vb: ExecuteScalar(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.SqlCommand.SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.QueryExectionExtensions
  definition: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  name: ExecuteNonQuery()
  nameWithType: QueryExectionExtensions.ExecuteNonQuery()
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery()
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketRow, To>()
  nameWithType: Converters.MapEnums<TicketRow, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.TicketRow, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketRow, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.TicketRow, To)()
  name.vb: MapEnums(Of TicketRow, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketRow, To>
    nameWithType: Converters.MapEnums<TicketRow, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.TicketRow, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketRow, To)
    nameWithType: Converters.MapEnums(Of TicketRow, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.TicketRow, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
  isExternal: true
  name: ExecuteReader(SqlCommand, Boolean)
  nameWithType: QueryExectionExtensions.ExecuteReader(SqlCommand, Boolean)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand, System.Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteReader(SuperOffice.Data.SQL.SqlCommand,System.Boolean)
    name: ExecuteReader
    nameWithType: QueryExectionExtensions.ExecuteReader
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteReader
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions
  commentId: T:SuperOffice.Data.QueryExectionExtensions
  parent: SuperOffice.Data
  isExternal: true
  name: QueryExectionExtensions
  nameWithType: QueryExectionExtensions
  fullName: SuperOffice.Data.QueryExectionExtensions
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteScalar<T>(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteScalar<T>(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>(SuperOffice.Data.SQL.SqlCommand)
  nameWithType.vb: QueryExectionExtensions.ExecuteScalar(Of T)(SqlCommand)
  fullName.vb: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)(SuperOffice.Data.SQL.SqlCommand)
  name.vb: ExecuteScalar(Of T)(SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar<T>
    nameWithType: QueryExectionExtensions.ExecuteScalar<T>
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar``1(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteScalar(Of T)
    nameWithType: QueryExectionExtensions.ExecuteScalar(Of T)
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteScalar(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  isExternal: true
  name: ExecuteNonQuery(SqlCommand)
  nameWithType: QueryExectionExtensions.ExecuteNonQuery(SqlCommand)
  fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
  spec.csharp:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery(SuperOffice.Data.SQL.SqlCommand)
    name: ExecuteNonQuery
    nameWithType: QueryExectionExtensions.ExecuteNonQuery
    fullName: SuperOffice.Data.QueryExectionExtensions.ExecuteNonQuery
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.SqlCommand
    name: SqlCommand
    nameWithType: SqlCommand
    fullName: SuperOffice.Data.SQL.SqlCommand
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Data.TicketSecurityLevel
  commentId: T:SuperOffice.Data.TicketSecurityLevel
  parent: SuperOffice.Data
  isExternal: true
  name: TicketSecurityLevel
  nameWithType: TicketSecurityLevel
  fullName: SuperOffice.Data.TicketSecurityLevel
- uid: SuperOffice.Data.TicketBaseStatus
  commentId: T:SuperOffice.Data.TicketBaseStatus
  parent: SuperOffice.Data
  isExternal: true
  name: TicketBaseStatus
  nameWithType: TicketBaseStatus
  fullName: SuperOffice.Data.TicketBaseStatus
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: SuperOffice.Data.TicketReadStatus
  commentId: T:SuperOffice.Data.TicketReadStatus
  parent: SuperOffice.Data
  isExternal: true
  name: TicketReadStatus
  nameWithType: TicketReadStatus
  fullName: SuperOffice.Data.TicketReadStatus
- uid: SuperOffice.Data.TicketOrigin
  commentId: T:SuperOffice.Data.TicketOrigin
  parent: SuperOffice.Data
  isExternal: true
  name: TicketOrigin
  nameWithType: TicketOrigin
  fullName: SuperOffice.Data.TicketOrigin
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper
  isExternal: true
  name: GetExtraFieldsHelper
  nameWithType: TicketRow.GetExtraFieldsHelper
  fullName: SuperOffice.CRM.Rows.TicketRow.GetExtraFieldsHelper
- uid: SuperOffice.CRM.Rows.ExtraFieldsHelper
  commentId: T:SuperOffice.CRM.Rows.ExtraFieldsHelper
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: ExtraFieldsHelper
  nameWithType: ExtraFieldsHelper
  fullName: SuperOffice.CRM.Rows.ExtraFieldsHelper
- uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: InternalSetValue(String, Object)
  nameWithType: TableRowBase.InternalSetValue(String, Object)
  fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String, System.Object)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue(System.String,System.Object)
    name: InternalSetValue
    nameWithType: TableRowBase.InternalSetValue
    fullName: SuperOffice.CRM.Rows.TableRowBase.InternalSetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.InternalSetValue*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.InternalSetValue
  isExternal: true
  name: InternalSetValue
  nameWithType: TicketRow.InternalSetValue
  fullName: SuperOffice.CRM.Rows.TicketRow.InternalSetValue
- uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: GetPersistedFieldValue(FieldInfo)
  nameWithType: PrivateSave.GetPersistedFieldValue(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue(SuperOffice.Data.SQL.FieldInfo)
    name: GetPersistedFieldValue
    nameWithType: PrivateSave.GetPersistedFieldValue
    fullName: SuperOffice.Data.SQL.PrivateSave.GetPersistedFieldValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue
  isExternal: true
  name: GetPersistedFieldValue
  nameWithType: TicketRow.GetPersistedFieldValue
  fullName: SuperOffice.CRM.Rows.TicketRow.GetPersistedFieldValue
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: IsPersistedFieldValueKnown(FieldInfo)
  nameWithType: PrivateSave.IsPersistedFieldValueKnown(FieldInfo)
  fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown(SuperOffice.Data.SQL.FieldInfo)
    name: IsPersistedFieldValueKnown
    nameWithType: PrivateSave.IsPersistedFieldValueKnown
    fullName: SuperOffice.Data.SQL.PrivateSave.IsPersistedFieldValueKnown
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: SuperOffice.Data.SQL.FieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown
  isExternal: true
  name: IsPersistedFieldValueKnown
  nameWithType: TicketRow.IsPersistedFieldValueKnown
  fullName: SuperOffice.CRM.Rows.TicketRow.IsPersistedFieldValueKnown
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.TicketRow.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.#ctor
  isExternal: true
  name: TicketRow
  nameWithType: TicketRow.TicketRow
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketRow
- uid: SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase
  commentId: T:SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketRow.TicketRowIdxBase
  nameWithType: TicketRow.TicketRowIdxBase
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketRowIdxBase
- uid: SuperOffice.CRM.Rows.TicketRow.CreateNew*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.CreateNew
  isExternal: true
  name: CreateNew
  nameWithType: TicketRow.CreateNew
  fullName: SuperOffice.CRM.Rows.TicketRow.CreateNew
- uid: SuperOffice.CRM.Rows.TicketRow
  commentId: T:SuperOffice.CRM.Rows.TicketRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketRow
  nameWithType: TicketRow
  fullName: SuperOffice.CRM.Rows.TicketRow
- uid: SuperOffice.CRM.Rows.TicketRow.GetFromReader*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.GetFromReader
  isExternal: true
  name: GetFromReader
  nameWithType: TicketRow.GetFromReader
  fullName: SuperOffice.CRM.Rows.TicketRow.GetFromReader
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Data.TicketTableInfo
  commentId: T:SuperOffice.CRM.Data.TicketTableInfo
  parent: SuperOffice.CRM.Data
  isExternal: true
  name: TicketTableInfo
  nameWithType: TicketTableInfo
  fullName: SuperOffice.CRM.Data.TicketTableInfo
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch
  isExternal: true
  name: GetFromCustomSearch
  nameWithType: TicketRow.GetFromCustomSearch
  fullName: SuperOffice.CRM.Rows.TicketRow.GetFromCustomSearch
- uid: SuperOffice.CRM.Rows.TicketRow.CustomSearch
  commentId: T:SuperOffice.CRM.Rows.TicketRow.CustomSearch
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: TicketRow.CustomSearch
  nameWithType: TicketRow.CustomSearch
  fullName: SuperOffice.CRM.Rows.TicketRow.CustomSearch
- uid: SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId
  isExternal: true
  name: GetFromIdxTicketId
  nameWithType: TicketRow.GetFromIdxTicketId
  fullName: SuperOffice.CRM.Rows.TicketRow.GetFromIdxTicketId
- uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetDefaults(DefaulterStrategy)
  nameWithType: TableRowBase.SetDefaults(DefaulterStrategy)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetDefaults(SuperOffice.CRM.Rows.DefaulterStrategy)
    name: SetDefaults
    nameWithType: TableRowBase.SetDefaults
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetDefaults
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.DefaulterStrategy
    name: DefaulterStrategy
    nameWithType: DefaulterStrategy
    fullName: SuperOffice.CRM.Rows.DefaulterStrategy
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.SetDefaults*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.SetDefaults
  isExternal: true
  name: SetDefaults
  nameWithType: TicketRow.SetDefaults
  fullName: SuperOffice.CRM.Rows.TicketRow.SetDefaults
- uid: SuperOffice.CRM.Rows.DefaulterStrategy
  commentId: T:SuperOffice.CRM.Rows.DefaulterStrategy
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: DefaulterStrategy
  nameWithType: DefaulterStrategy
  fullName: SuperOffice.CRM.Rows.DefaulterStrategy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.ToString*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ToString
  isExternal: true
  name: ToString
  nameWithType: TicketRow.ToString
  fullName: SuperOffice.CRM.Rows.TicketRow.ToString
- uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetRowAsNew()
  nameWithType: TableRowBase.SetRowAsNew()
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    name: SetRowAsNew
    nameWithType: TableRowBase.SetRowAsNew
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetRowAsNew
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.SetRowAsNew*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.SetRowAsNew
  isExternal: true
  name: SetRowAsNew
  nameWithType: TicketRow.SetRowAsNew
  fullName: SuperOffice.CRM.Rows.TicketRow.SetRowAsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.Reset
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Reset
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Reset()
  nameWithType: TableRowBase.Reset()
  fullName: SuperOffice.CRM.Rows.TableRowBase.Reset()
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Reset
    name: Reset
    nameWithType: TableRowBase.Reset
    fullName: SuperOffice.CRM.Rows.TableRowBase.Reset
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.Reset*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Reset
  isExternal: true
  name: Reset
  nameWithType: TicketRow.Reset
  fullName: SuperOffice.CRM.Rows.TicketRow.Reset
- uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnLoad(SoDataReader, TableInfo)
  nameWithType: TableRowBase.OnLoad(SoDataReader, TableInfo)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader, SuperOffice.Data.SQL.TableInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnLoad(SuperOffice.Data.SoDataReader,SuperOffice.Data.SQL.TableInfo)
    name: OnLoad
    nameWithType: TableRowBase.OnLoad
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.TableInfo
    name: TableInfo
    nameWithType: TableInfo
    fullName: SuperOffice.Data.SQL.TableInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: TicketRow.OnLoad
  fullName: SuperOffice.CRM.Rows.TicketRow.OnLoad
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: SetPrimaryKey(Int32)
  nameWithType: TableRowBase.SetPrimaryKey(Int32)
  fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey(System.Int32)
    name: SetPrimaryKey
    nameWithType: TableRowBase.SetPrimaryKey
    fullName: SuperOffice.CRM.Rows.TableRowBase.SetPrimaryKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey
  isExternal: true
  name: SetPrimaryKey
  nameWithType: TicketRow.SetPrimaryKey
  fullName: SuperOffice.CRM.Rows.TicketRow.SetPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSave(BatchSave)
  nameWithType: TableRowBase.OnSave(BatchSave)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSave(SuperOffice.Data.SQL.BatchSave)
    name: OnSave
    nameWithType: TableRowBase.OnSave
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSave
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.BatchSave
    name: BatchSave
    nameWithType: BatchSave
    fullName: SuperOffice.Data.SQL.BatchSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.OnSave*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OnSave
  isExternal: true
  name: OnSave
  nameWithType: TicketRow.OnSave
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSave
- uid: SuperOffice.Data.SQL.BatchSave
  commentId: T:SuperOffice.Data.SQL.BatchSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: BatchSave
  nameWithType: BatchSave
  fullName: SuperOffice.Data.SQL.BatchSave
- uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: OnSaved(Boolean)
  nameWithType: TableRowBase.OnSaved(Boolean)
  fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.OnSaved(System.Boolean)
    name: OnSaved
    nameWithType: TableRowBase.OnSaved
    fullName: SuperOffice.CRM.Rows.TableRowBase.OnSaved
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.OnSaved*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OnSaved
  isExternal: true
  name: OnSaved
  nameWithType: TicketRow.OnSaved
  fullName: SuperOffice.CRM.Rows.TicketRow.OnSaved
- uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  commentId: M:SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Validate(RowValidator)
  nameWithType: TableRowBase.Validate(RowValidator)
  fullName: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Validate(SuperOffice.CRM.Rows.RowValidator)
    name: Validate
    nameWithType: TableRowBase.Validate
    fullName: SuperOffice.CRM.Rows.TableRowBase.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.RowValidator
    name: RowValidator
    nameWithType: RowValidator
    fullName: SuperOffice.CRM.Rows.RowValidator
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.Validate*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Validate
  isExternal: true
  name: Validate
  nameWithType: TicketRow.Validate
  fullName: SuperOffice.CRM.Rows.TicketRow.Validate
- uid: SuperOffice.CRM.Rows.RowValidator
  commentId: T:SuperOffice.CRM.Rows.RowValidator
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: RowValidator
  nameWithType: RowValidator
  fullName: SuperOffice.CRM.Rows.RowValidator
- uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: Item[String]
  nameWithType: TableRowBase.Item[String]
  fullName: SuperOffice.CRM.Rows.TableRowBase.Item[System.String]
  nameWithType.vb: TableRowBase.Item(String)
  fullName.vb: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.TableRowBase.Item(System.String)
    name: Item
    nameWithType: TableRowBase.Item
    fullName: SuperOffice.CRM.Rows.TableRowBase.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.TicketRow.Item*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Item
  isExternal: true
  name: Item
  nameWithType: TicketRow.Item
  fullName: SuperOffice.CRM.Rows.TicketRow.Item
- uid: SuperOffice.CRM.Rows.TableRowBase.TableInfo
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.TableInfo
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: TableInfo
  nameWithType: TableRowBase.TableInfo
  fullName: SuperOffice.CRM.Rows.TableRowBase.TableInfo
- uid: SuperOffice.CRM.Rows.TicketRow.TableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TableInfo
  isExternal: true
  name: TableInfo
  nameWithType: TicketRow.TableInfo
  fullName: SuperOffice.CRM.Rows.TicketRow.TableInfo
- uid: SuperOffice.CRM.Rows.TicketRow.TicketTableInfo*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TicketTableInfo
  isExternal: true
  name: TicketTableInfo
  nameWithType: TicketRow.TicketTableInfo
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketTableInfo
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: PrivateSave.InnerPrimaryKeyValue
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKeyValue
- uid: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue
  isExternal: true
  name: InnerPrimaryKeyValue
  nameWithType: TicketRow.InnerPrimaryKeyValue
  fullName: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKeyValue
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: PrivateSave.InnerPrimaryKey
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey
  isExternal: true
  name: InnerPrimaryKey
  nameWithType: TicketRow.InnerPrimaryKey
  fullName: SuperOffice.CRM.Rows.TicketRow.InnerPrimaryKey
- uid: SuperOffice.CRM.Rows.TableRowBase.IsNew
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsNew
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsNew
  nameWithType: TableRowBase.IsNew
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsNew
- uid: SuperOffice.CRM.Rows.TicketRow.IsNew*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.IsNew
  isExternal: true
  name: IsNew
  nameWithType: TicketRow.IsNew
  fullName: SuperOffice.CRM.Rows.TicketRow.IsNew
- uid: SuperOffice.CRM.Rows.TableRowBase.IsDirty
  commentId: P:SuperOffice.CRM.Rows.TableRowBase.IsDirty
  parent: SuperOffice.CRM.Rows.TableRowBase
  isExternal: true
  name: IsDirty
  nameWithType: TableRowBase.IsDirty
  fullName: SuperOffice.CRM.Rows.TableRowBase.IsDirty
- uid: SuperOffice.CRM.Rows.TicketRow.IsDirty*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.IsDirty
  isExternal: true
  name: IsDirty
  nameWithType: TicketRow.IsDirty
  fullName: SuperOffice.CRM.Rows.TicketRow.IsDirty
- uid: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  commentId: P:SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
  parent: SuperOffice.Data.SQL.PrivateSave
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: PrivateSave.InnerFieldValuePairs
  fullName: SuperOffice.Data.SQL.PrivateSave.InnerFieldValuePairs
- uid: SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs
  isExternal: true
  name: InnerFieldValuePairs
  nameWithType: TicketRow.InnerFieldValuePairs
  fullName: SuperOffice.CRM.Rows.TicketRow.InnerFieldValuePairs
- uid: SuperOffice.Data.SQL.ArgumentParameterCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentParameterCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: ArgumentParameterCollection
  nameWithType: ArgumentParameterCollection
  fullName: SuperOffice.Data.SQL.ArgumentParameterCollection
- uid: SuperOffice.CRM.Rows.TicketRow.TicketId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TicketId
  isExternal: true
  name: TicketId
  nameWithType: TicketRow.TicketId
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketId
- uid: SuperOffice.CRM.Rows.TicketRow.ConnectId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ConnectId
  isExternal: true
  name: ConnectId
  nameWithType: TicketRow.ConnectId
  fullName: SuperOffice.CRM.Rows.TicketRow.ConnectId
- uid: SuperOffice.Exceptions.SoSentryException
  commentId: T:SuperOffice.Exceptions.SoSentryException
  isExternal: true
  name: SoSentryException
  nameWithType: SoSentryException
  fullName: SuperOffice.Exceptions.SoSentryException
- uid: SuperOffice.CRM.Rows.TicketRow.Title*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Title
  isExternal: true
  name: Title
  nameWithType: TicketRow.Title
  fullName: SuperOffice.CRM.Rows.TicketRow.Title
- uid: SuperOffice.CRM.Rows.TicketRow.CreatedAt*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.CreatedAt
  isExternal: true
  name: CreatedAt
  nameWithType: TicketRow.CreatedAt
  fullName: SuperOffice.CRM.Rows.TicketRow.CreatedAt
- uid: SuperOffice.CRM.Rows.TicketRow.LastChanged*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.LastChanged
  isExternal: true
  name: LastChanged
  nameWithType: TicketRow.LastChanged
  fullName: SuperOffice.CRM.Rows.TicketRow.LastChanged
- uid: SuperOffice.CRM.Rows.TicketRow.Activate*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Activate
  isExternal: true
  name: Activate
  nameWithType: TicketRow.Activate
  fullName: SuperOffice.CRM.Rows.TicketRow.Activate
- uid: SuperOffice.CRM.Rows.TicketRow.ClosedAt*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ClosedAt
  isExternal: true
  name: ClosedAt
  nameWithType: TicketRow.ClosedAt
  fullName: SuperOffice.CRM.Rows.TicketRow.ClosedAt
- uid: SuperOffice.CRM.Rows.TicketRow.CreatedBy*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.CreatedBy
  isExternal: true
  name: CreatedBy
  nameWithType: TicketRow.CreatedBy
  fullName: SuperOffice.CRM.Rows.TicketRow.CreatedBy
- uid: SuperOffice.CRM.Rows.TicketRow.Author*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Author
  isExternal: true
  name: Author
  nameWithType: TicketRow.Author
  fullName: SuperOffice.CRM.Rows.TicketRow.Author
- uid: SuperOffice.CRM.Rows.TicketRow.OwnedBy*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OwnedBy
  isExternal: true
  name: OwnedBy
  nameWithType: TicketRow.OwnedBy
  fullName: SuperOffice.CRM.Rows.TicketRow.OwnedBy
- uid: SuperOffice.CRM.Rows.TicketRow.Category*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Category
  isExternal: true
  name: Category
  nameWithType: TicketRow.Category
  fullName: SuperOffice.CRM.Rows.TicketRow.Category
- uid: SuperOffice.CRM.Rows.TicketRow.OrigCategory*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OrigCategory
  isExternal: true
  name: OrigCategory
  nameWithType: TicketRow.OrigCategory
  fullName: SuperOffice.CRM.Rows.TicketRow.OrigCategory
- uid: SuperOffice.CRM.Rows.TicketRow.Slevel*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Slevel
  isExternal: true
  name: Slevel
  nameWithType: TicketRow.Slevel
  fullName: SuperOffice.CRM.Rows.TicketRow.Slevel
- uid: SuperOffice.CRM.Rows.TicketRow.Status*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Status
  isExternal: true
  name: Status
  nameWithType: TicketRow.Status
  fullName: SuperOffice.CRM.Rows.TicketRow.Status
- uid: SuperOffice.CRM.Rows.TicketRow.TicketStatus*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TicketStatus
  isExternal: true
  name: TicketStatus
  nameWithType: TicketRow.TicketStatus
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketStatus
- uid: SuperOffice.CRM.Rows.TicketRow.CustId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.CustId
  isExternal: true
  name: CustId
  nameWithType: TicketRow.CustId
  fullName: SuperOffice.CRM.Rows.TicketRow.CustId
- uid: SuperOffice.CRM.Rows.TicketRow.Priority*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Priority
  isExternal: true
  name: Priority
  nameWithType: TicketRow.Priority
  fullName: SuperOffice.CRM.Rows.TicketRow.Priority
- uid: SuperOffice.CRM.Rows.TicketRow.OrigPriority*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OrigPriority
  isExternal: true
  name: OrigPriority
  nameWithType: TicketRow.OrigPriority
  fullName: SuperOffice.CRM.Rows.TicketRow.OrigPriority
- uid: SuperOffice.CRM.Rows.TicketRow.AlertLevel*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.AlertLevel
  isExternal: true
  name: AlertLevel
  nameWithType: TicketRow.AlertLevel
  fullName: SuperOffice.CRM.Rows.TicketRow.AlertLevel
- uid: SuperOffice.CRM.Rows.TicketRow.AlertTimeout*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.AlertTimeout
  isExternal: true
  name: AlertTimeout
  nameWithType: TicketRow.AlertTimeout
  fullName: SuperOffice.CRM.Rows.TicketRow.AlertTimeout
- uid: SuperOffice.CRM.Rows.TicketRow.AlertStop*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.AlertStop
  isExternal: true
  name: AlertStop
  nameWithType: TicketRow.AlertStop
  fullName: SuperOffice.CRM.Rows.TicketRow.AlertStop
- uid: SuperOffice.CRM.Rows.TicketRow.ReadByOwner*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ReadByOwner
  isExternal: true
  name: ReadByOwner
  nameWithType: TicketRow.ReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow.ReadByOwner
- uid: SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner
  isExternal: true
  name: FirstReadByOwner
  nameWithType: TicketRow.FirstReadByOwner
  fullName: SuperOffice.CRM.Rows.TicketRow.FirstReadByOwner
- uid: SuperOffice.CRM.Rows.TicketRow.FirstReadByUser*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.FirstReadByUser
  isExternal: true
  name: FirstReadByUser
  nameWithType: TicketRow.FirstReadByUser
  fullName: SuperOffice.CRM.Rows.TicketRow.FirstReadByUser
- uid: SuperOffice.CRM.Rows.TicketRow.ReadByCustomer*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ReadByCustomer
  isExternal: true
  name: ReadByCustomer
  nameWithType: TicketRow.ReadByCustomer
  fullName: SuperOffice.CRM.Rows.TicketRow.ReadByCustomer
- uid: SuperOffice.CRM.Rows.TicketRow.FilterId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.FilterId
  isExternal: true
  name: FilterId
  nameWithType: TicketRow.FilterId
  fullName: SuperOffice.CRM.Rows.TicketRow.FilterId
- uid: SuperOffice.CRM.Rows.TicketRow.DisplayFilter*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.DisplayFilter
  isExternal: true
  name: DisplayFilter
  nameWithType: TicketRow.DisplayFilter
  fullName: SuperOffice.CRM.Rows.TicketRow.DisplayFilter
- uid: SuperOffice.CRM.Rows.TicketRow.RepliedAt*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.RepliedAt
  isExternal: true
  name: RepliedAt
  nameWithType: TicketRow.RepliedAt
  fullName: SuperOffice.CRM.Rows.TicketRow.RepliedAt
- uid: SuperOffice.CRM.Rows.TicketRow.TimeToReply*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TimeToReply
  isExternal: true
  name: TimeToReply
  nameWithType: TicketRow.TimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeToReply
- uid: SuperOffice.CRM.Rows.TicketRow.TimeToClose*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TimeToClose
  isExternal: true
  name: TimeToClose
  nameWithType: TicketRow.TimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeToClose
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeToReply*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.RealTimeToReply
  isExternal: true
  name: RealTimeToReply
  nameWithType: TicketRow.RealTimeToReply
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeToReply
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeToClose*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.RealTimeToClose
  isExternal: true
  name: RealTimeToClose
  nameWithType: TicketRow.RealTimeToClose
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeToClose
- uid: SuperOffice.CRM.Rows.TicketRow.ReadStatus*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ReadStatus
  isExternal: true
  name: ReadStatus
  nameWithType: TicketRow.ReadStatus
  fullName: SuperOffice.CRM.Rows.TicketRow.ReadStatus
- uid: SuperOffice.CRM.Rows.TicketRow.HasAttachment*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.HasAttachment
  isExternal: true
  name: HasAttachment
  nameWithType: TicketRow.HasAttachment
  fullName: SuperOffice.CRM.Rows.TicketRow.HasAttachment
- uid: SuperOffice.CRM.Rows.TicketRow.Deadline*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Deadline
  isExternal: true
  name: Deadline
  nameWithType: TicketRow.Deadline
  fullName: SuperOffice.CRM.Rows.TicketRow.Deadline
- uid: SuperOffice.CRM.Rows.TicketRow.FilterAddress*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.FilterAddress
  isExternal: true
  name: FilterAddress
  nameWithType: TicketRow.FilterAddress
  fullName: SuperOffice.CRM.Rows.TicketRow.FilterAddress
- uid: SuperOffice.CRM.Rows.TicketRow.DbiAgentId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.DbiAgentId
  isExternal: true
  name: DbiAgentId
  nameWithType: TicketRow.DbiAgentId
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiAgentId
- uid: SuperOffice.CRM.Rows.TicketRow.DbiKey*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.DbiKey
  isExternal: true
  name: DbiKey
  nameWithType: TicketRow.DbiKey
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiKey
- uid: SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized
  isExternal: true
  name: DbiLastSyncronized
  nameWithType: TicketRow.DbiLastSyncronized
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiLastSyncronized
- uid: SuperOffice.CRM.Rows.TicketRow.DbiLastModified*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.DbiLastModified
  isExternal: true
  name: DbiLastModified
  nameWithType: TicketRow.DbiLastModified
  fullName: SuperOffice.CRM.Rows.TicketRow.DbiLastModified
- uid: SuperOffice.CRM.Rows.TicketRow.Origin*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Origin
  isExternal: true
  name: Origin
  nameWithType: TicketRow.Origin
  fullName: SuperOffice.CRM.Rows.TicketRow.Origin
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally
  isExternal: true
  name: TimeSpentInternally
  nameWithType: TicketRow.TimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentInternally
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally
  isExternal: true
  name: TimeSpentExternally
  nameWithType: TicketRow.TimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentExternally
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue
  isExternal: true
  name: TimeSpentQueue
  nameWithType: TicketRow.TimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentQueue
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally
  isExternal: true
  name: RealTimeSpentInternally
  nameWithType: TicketRow.RealTimeSpentInternally
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentInternally
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally
  isExternal: true
  name: RealTimeSpentExternally
  nameWithType: TicketRow.RealTimeSpentExternally
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentExternally
- uid: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue
  isExternal: true
  name: RealTimeSpentQueue
  nameWithType: TicketRow.RealTimeSpentQueue
  fullName: SuperOffice.CRM.Rows.TicketRow.RealTimeSpentQueue
- uid: SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated
  isExternal: true
  name: TimeSpentCalculated
  nameWithType: TicketRow.TimeSpentCalculated
  fullName: SuperOffice.CRM.Rows.TicketRow.TimeSpentCalculated
- uid: SuperOffice.CRM.Rows.TicketRow.NumReplies*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.NumReplies
  isExternal: true
  name: NumReplies
  nameWithType: TicketRow.NumReplies
  fullName: SuperOffice.CRM.Rows.TicketRow.NumReplies
- uid: SuperOffice.CRM.Rows.TicketRow.NumMessages*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.NumMessages
  isExternal: true
  name: NumMessages
  nameWithType: TicketRow.NumMessages
  fullName: SuperOffice.CRM.Rows.TicketRow.NumMessages
- uid: SuperOffice.CRM.Rows.TicketRow.TicketType*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.TicketType
  isExternal: true
  name: TicketType
  nameWithType: TicketRow.TicketType
  fullName: SuperOffice.CRM.Rows.TicketRow.TicketType
- uid: SuperOffice.CRM.Rows.TicketRow.FromAddress*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.FromAddress
  isExternal: true
  name: FromAddress
  nameWithType: TicketRow.FromAddress
  fullName: SuperOffice.CRM.Rows.TicketRow.FromAddress
- uid: SuperOffice.CRM.Rows.TicketRow.Tags*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Tags
  isExternal: true
  name: Tags
  nameWithType: TicketRow.Tags
  fullName: SuperOffice.CRM.Rows.TicketRow.Tags
- uid: SuperOffice.CRM.Rows.TicketRow.ContactId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.ContactId
  isExternal: true
  name: ContactId
  nameWithType: TicketRow.ContactId
  fullName: SuperOffice.CRM.Rows.TicketRow.ContactId
- uid: SuperOffice.CRM.Rows.TicketRow.Language*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Language
  isExternal: true
  name: Language
  nameWithType: TicketRow.Language
  fullName: SuperOffice.CRM.Rows.TicketRow.Language
- uid: SuperOffice.CRM.Rows.TicketRow.Sentiment*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.Sentiment
  isExternal: true
  name: Sentiment
  nameWithType: TicketRow.Sentiment
  fullName: SuperOffice.CRM.Rows.TicketRow.Sentiment
- uid: SuperOffice.CRM.Rows.TicketRow.SentimentConfidence*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.SentimentConfidence
  isExternal: true
  name: SentimentConfidence
  nameWithType: TicketRow.SentimentConfidence
  fullName: SuperOffice.CRM.Rows.TicketRow.SentimentConfidence
- uid: SuperOffice.CRM.Rows.TicketRow.FormSubmissionId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.FormSubmissionId
  isExternal: true
  name: FormSubmissionId
  nameWithType: TicketRow.FormSubmissionId
  fullName: SuperOffice.CRM.Rows.TicketRow.FormSubmissionId
- uid: SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId
  isExternal: true
  name: SuggestedCategoryId
  nameWithType: TicketRow.SuggestedCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow.SuggestedCategoryId
- uid: SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId*
  commentId: Overload:SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId
  isExternal: true
  name: OrigHumanCategoryId
  nameWithType: TicketRow.OrigHumanCategoryId
  fullName: SuperOffice.CRM.Rows.TicketRow.OrigHumanCategoryId
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int32}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int32>
  nameWithType: OnFieldChange<Int32>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int32>
  nameWithType.vb: OnFieldChange(Of Int32)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int32)
  name.vb: OnFieldChange(Of Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange`1
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange`1
  isExternal: true
  name: OnFieldChange<TValue>
  nameWithType: OnFieldChange<TValue>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<TValue>
  nameWithType.vb: OnFieldChange(Of TValue)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of TValue)
  name.vb: OnFieldChange(Of TValue)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.String}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.String}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<String>
  nameWithType: OnFieldChange<String>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.String>
  nameWithType.vb: OnFieldChange(Of String)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.String)
  name.vb: OnFieldChange(Of String)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.DateTime}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<DateTime>
  nameWithType: OnFieldChange<DateTime>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.DateTime>
  nameWithType.vb: OnFieldChange(Of DateTime)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.DateTime)
  name.vb: OnFieldChange(Of DateTime)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketSecurityLevel}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketSecurityLevel}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<TicketSecurityLevel>
  nameWithType: OnFieldChange<TicketSecurityLevel>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.TicketSecurityLevel>
  nameWithType.vb: OnFieldChange(Of TicketSecurityLevel)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.TicketSecurityLevel)
  name.vb: OnFieldChange(Of TicketSecurityLevel)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.TicketSecurityLevel
    name: TicketSecurityLevel
    nameWithType: TicketSecurityLevel
    fullName: SuperOffice.Data.TicketSecurityLevel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.TicketSecurityLevel
    name: TicketSecurityLevel
    nameWithType: TicketSecurityLevel
    fullName: SuperOffice.Data.TicketSecurityLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketBaseStatus}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketBaseStatus}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<TicketBaseStatus>
  nameWithType: OnFieldChange<TicketBaseStatus>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.TicketBaseStatus>
  nameWithType.vb: OnFieldChange(Of TicketBaseStatus)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.TicketBaseStatus)
  name.vb: OnFieldChange(Of TicketBaseStatus)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.TicketBaseStatus
    name: TicketBaseStatus
    nameWithType: TicketBaseStatus
    fullName: SuperOffice.Data.TicketBaseStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.TicketBaseStatus
    name: TicketBaseStatus
    nameWithType: TicketBaseStatus
    fullName: SuperOffice.Data.TicketBaseStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int16}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int16>
  nameWithType: OnFieldChange<Int16>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int16>
  nameWithType.vb: OnFieldChange(Of Int16)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int16)
  name.vb: OnFieldChange(Of Int16)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    nameWithType: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketReadStatus}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketReadStatus}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<TicketReadStatus>
  nameWithType: OnFieldChange<TicketReadStatus>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.TicketReadStatus>
  nameWithType.vb: OnFieldChange(Of TicketReadStatus)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.TicketReadStatus)
  name.vb: OnFieldChange(Of TicketReadStatus)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.TicketReadStatus
    name: TicketReadStatus
    nameWithType: TicketReadStatus
    fullName: SuperOffice.Data.TicketReadStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketOrigin}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{SuperOffice.Data.TicketOrigin}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<TicketOrigin>
  nameWithType: OnFieldChange<TicketOrigin>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<SuperOffice.Data.TicketOrigin>
  nameWithType.vb: OnFieldChange(Of TicketOrigin)
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of SuperOffice.Data.TicketOrigin)
  name.vb: OnFieldChange(Of TicketOrigin)
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.TicketOrigin
    name: TicketOrigin
    nameWithType: TicketOrigin
    fullName: SuperOffice.Data.TicketOrigin
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.TicketOrigin
    name: TicketOrigin
    nameWithType: TicketOrigin
    fullName: SuperOffice.Data.TicketOrigin
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.OnFieldChange{System.Int32[]}
  commentId: T:SuperOffice.CRM.Rows.OnFieldChange{System.Int32[]}
  parent: SuperOffice.CRM.Rows
  definition: SuperOffice.CRM.Rows.OnFieldChange`1
  name: OnFieldChange<Int32[]>
  nameWithType: OnFieldChange<Int32[]>
  fullName: SuperOffice.CRM.Rows.OnFieldChange<System.Int32[]>
  nameWithType.vb: OnFieldChange(Of Int32())
  fullName.vb: SuperOffice.CRM.Rows.OnFieldChange(Of System.Int32())
  name.vb: OnFieldChange(Of Int32())
  spec.csharp:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Rows.OnFieldChange`1
    name: OnFieldChange
    nameWithType: OnFieldChange
    fullName: SuperOffice.CRM.Rows.OnFieldChange
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
