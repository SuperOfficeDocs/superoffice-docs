### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.Scanner
  commentId: T:SuperOffice.CRM.ArchiveLists.Scanner
  id: Scanner
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.Scanner.#ctor
  - SuperOffice.CRM.ArchiveLists.Scanner.CurrentColumn
  - SuperOffice.CRM.ArchiveLists.Scanner.CurrentFile
  - SuperOffice.CRM.ArchiveLists.Scanner.CurrentLine
  - SuperOffice.CRM.ArchiveLists.Scanner.CurrentPosition
  - SuperOffice.CRM.ArchiveLists.Scanner.EndPos
  - SuperOffice.CRM.ArchiveLists.Scanner.GetToken(SuperOffice.CRM.ArchiveLists.TokenType)
  - SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String)
  - SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String,System.String)
  - SuperOffice.CRM.ArchiveLists.Scanner.Input
  - SuperOffice.CRM.ArchiveLists.Scanner.LookAhead(SuperOffice.CRM.ArchiveLists.TokenType[])
  - SuperOffice.CRM.ArchiveLists.Scanner.Patterns
  - SuperOffice.CRM.ArchiveLists.Scanner.Scan(SuperOffice.CRM.ArchiveLists.TokenType[])
  - SuperOffice.CRM.ArchiveLists.Scanner.Skipped
  - SuperOffice.CRM.ArchiveLists.Scanner.StartPos
  langs:
  - csharp
  - vb
  name: Scanner
  nameWithType: Scanner
  fullName: SuperOffice.CRM.ArchiveLists.Scanner
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public class Scanner
    content.vb: Public Class Scanner
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.Scanner.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.Scanner.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.Scanner)
  - SuperOffice.CRM.ArchiveLists.Scanner.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.Scanner.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Input
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.Input
  id: Input
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: Scanner.Input
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Input
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public string Input
    return:
      type: System.String
    content.vb: Public Input As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.StartPos
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.StartPos
  id: StartPos
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: StartPos
  nameWithType: Scanner.StartPos
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.StartPos
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int StartPos
    return:
      type: System.Int32
    content.vb: Public StartPos As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.EndPos
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.EndPos
  id: EndPos
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: EndPos
  nameWithType: Scanner.EndPos
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.EndPos
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int EndPos
    return:
      type: System.Int32
    content.vb: Public EndPos As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.CurrentFile
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.CurrentFile
  id: CurrentFile
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: CurrentFile
  nameWithType: Scanner.CurrentFile
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.CurrentFile
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public string CurrentFile
    return:
      type: System.String
    content.vb: Public CurrentFile As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.CurrentLine
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.CurrentLine
  id: CurrentLine
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: CurrentLine
  nameWithType: Scanner.CurrentLine
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.CurrentLine
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int CurrentLine
    return:
      type: System.Int32
    content.vb: Public CurrentLine As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.CurrentColumn
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.CurrentColumn
  id: CurrentColumn
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: CurrentColumn
  nameWithType: Scanner.CurrentColumn
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.CurrentColumn
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int CurrentColumn
    return:
      type: System.Int32
    content.vb: Public CurrentColumn As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.CurrentPosition
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.CurrentPosition
  id: CurrentPosition
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: CurrentPosition
  nameWithType: Scanner.CurrentPosition
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.CurrentPosition
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int CurrentPosition
    return:
      type: System.Int32
    content.vb: Public CurrentPosition As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Skipped
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.Skipped
  id: Skipped
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Skipped
  nameWithType: Scanner.Skipped
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Skipped
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public List<Token> Skipped
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.Token}
    content.vb: Public Skipped As List(Of Token)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Patterns
  commentId: F:SuperOffice.CRM.ArchiveLists.Scanner.Patterns
  id: Patterns
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Patterns
  nameWithType: Scanner.Patterns
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Patterns
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public Dictionary<TokenType, Regex> Patterns
    return:
      type: System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.TokenType,System.Text.RegularExpressions.Regex}
    content.vb: Public Patterns As Dictionary(Of TokenType, Regex)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.Scanner.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Scanner()
  nameWithType: Scanner.Scanner()
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Scanner()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public Scanner()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.Scanner.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String)
  id: Init(System.String)
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Init(String)
  nameWithType: Scanner.Init(String)
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public void Init(string input)
    parameters:
    - id: input
      type: System.String
    content.vb: Public Sub Init(input As String)
  overload: SuperOffice.CRM.ArchiveLists.Scanner.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String,System.String)
  commentId: M:SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String,System.String)
  id: Init(System.String,System.String)
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Init(String, String)
  nameWithType: Scanner.Init(String, String)
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Init(System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public void Init(string input, string fileName)
    parameters:
    - id: input
      type: System.String
    - id: fileName
      type: System.String
    content.vb: Public Sub Init(input As String, fileName As String)
  overload: SuperOffice.CRM.ArchiveLists.Scanner.Init*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.GetToken(SuperOffice.CRM.ArchiveLists.TokenType)
  commentId: M:SuperOffice.CRM.ArchiveLists.Scanner.GetToken(SuperOffice.CRM.ArchiveLists.TokenType)
  id: GetToken(SuperOffice.CRM.ArchiveLists.TokenType)
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: GetToken(TokenType)
  nameWithType: Scanner.GetToken(TokenType)
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.GetToken(SuperOffice.CRM.ArchiveLists.TokenType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public Token GetToken(TokenType type)
    parameters:
    - id: type
      type: SuperOffice.CRM.ArchiveLists.TokenType
    return:
      type: SuperOffice.CRM.ArchiveLists.Token
    content.vb: Public Function GetToken(type As TokenType) As Token
  overload: SuperOffice.CRM.ArchiveLists.Scanner.GetToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Scan(SuperOffice.CRM.ArchiveLists.TokenType[])
  commentId: M:SuperOffice.CRM.ArchiveLists.Scanner.Scan(SuperOffice.CRM.ArchiveLists.TokenType[])
  id: Scan(SuperOffice.CRM.ArchiveLists.TokenType[])
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: Scan(TokenType[])
  nameWithType: Scanner.Scan(TokenType[])
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Scan(SuperOffice.CRM.ArchiveLists.TokenType[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nexecutes a lookahead of the next token\nand will advance the scan on the input string\n"
  syntax:
    content: public Token Scan(params TokenType[] expectedtokens)
    parameters:
    - id: expectedtokens
      type: SuperOffice.CRM.ArchiveLists.TokenType[]
    return:
      type: SuperOffice.CRM.ArchiveLists.Token
    content.vb: Public Function Scan(ParamArray expectedtokens As TokenType()) As Token
  overload: SuperOffice.CRM.ArchiveLists.Scanner.Scan*
  nameWithType.vb: Scanner.Scan(TokenType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.Scanner.Scan(SuperOffice.CRM.ArchiveLists.TokenType())
  name.vb: Scan(TokenType())
- uid: SuperOffice.CRM.ArchiveLists.Scanner.LookAhead(SuperOffice.CRM.ArchiveLists.TokenType[])
  commentId: M:SuperOffice.CRM.ArchiveLists.Scanner.LookAhead(SuperOffice.CRM.ArchiveLists.TokenType[])
  id: LookAhead(SuperOffice.CRM.ArchiveLists.TokenType[])
  parent: SuperOffice.CRM.ArchiveLists.Scanner
  langs:
  - csharp
  - vb
  name: LookAhead(TokenType[])
  nameWithType: Scanner.LookAhead(TokenType[])
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.LookAhead(SuperOffice.CRM.ArchiveLists.TokenType[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  summary: "\nreturns token with longest best match\n"
  syntax:
    content: public Token LookAhead(params TokenType[] expectedtokens)
    parameters:
    - id: expectedtokens
      type: SuperOffice.CRM.ArchiveLists.TokenType[]
    return:
      type: SuperOffice.CRM.ArchiveLists.Token
    content.vb: Public Function LookAhead(ParamArray expectedtokens As TokenType()) As Token
  overload: SuperOffice.CRM.ArchiveLists.Scanner.LookAhead*
  nameWithType.vb: Scanner.LookAhead(TokenType())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.ArchiveLists.Scanner.LookAhead(SuperOffice.CRM.ArchiveLists.TokenType())
  name.vb: LookAhead(TokenType())
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Scanner.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<Scanner, To>()
  nameWithType: EnumUtil.MapEnums<Scanner, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.Scanner, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of Scanner, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.Scanner, To)()
  name.vb: MapEnums(Of Scanner, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<Scanner, To>
    nameWithType: EnumUtil.MapEnums<Scanner, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.Scanner, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of Scanner, To)
    nameWithType: EnumUtil.MapEnums(Of Scanner, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.Scanner, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Scanner.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.Scanner)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<Scanner>(Scanner)
  nameWithType: ObjectExtensions.AssignByReflection<Scanner>(Scanner)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.Scanner>(SuperOffice.CRM.ArchiveLists.Scanner)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of Scanner)(Scanner)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.Scanner)(SuperOffice.CRM.ArchiveLists.Scanner)
  name.vb: AssignByReflection(Of Scanner)(Scanner)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<Scanner>
    nameWithType: ObjectExtensions.AssignByReflection<Scanner>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.Scanner>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.Scanner
    name: Scanner
    nameWithType: Scanner
    fullName: SuperOffice.CRM.ArchiveLists.Scanner
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of Scanner)
    nameWithType: ObjectExtensions.AssignByReflection(Of Scanner)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.Scanner)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.Scanner
    name: Scanner
    nameWithType: Scanner
    fullName: SuperOffice.CRM.ArchiveLists.Scanner
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Scanner.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<Scanner>()
  nameWithType: ObjectExtensions.GraphCopy<Scanner>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.Scanner>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of Scanner)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.Scanner)()
  name.vb: GraphCopy(Of Scanner)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<Scanner>
    nameWithType: ObjectExtensions.GraphCopy<Scanner>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.Scanner>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of Scanner)
    nameWithType: ObjectExtensions.GraphCopy(Of Scanner)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.Scanner)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Scanner.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<Scanner, To>()
  nameWithType: Converters.MapEnums<Scanner, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.Scanner, To>()
  nameWithType.vb: Converters.MapEnums(Of Scanner, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.Scanner, To)()
  name.vb: MapEnums(Of Scanner, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<Scanner, To>
    nameWithType: Converters.MapEnums<Scanner, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.Scanner, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of Scanner, To)
    nameWithType: Converters.MapEnums(Of Scanner, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.Scanner, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.Token}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.ArchiveLists.Token}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Token>
  nameWithType: List<Token>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.ArchiveLists.Token>
  nameWithType.vb: List(Of Token)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.ArchiveLists.Token)
  name.vb: List(Of Token)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.Token
    name: Token
    nameWithType: Token
    fullName: SuperOffice.CRM.ArchiveLists.Token
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.Token
    name: Token
    nameWithType: Token
    fullName: SuperOffice.CRM.ArchiveLists.Token
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.TokenType,System.Text.RegularExpressions.Regex}
  commentId: T:System.Collections.Generic.Dictionary{SuperOffice.CRM.ArchiveLists.TokenType,System.Text.RegularExpressions.Regex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TokenType, Regex>
  nameWithType: Dictionary<TokenType, Regex>
  fullName: System.Collections.Generic.Dictionary<SuperOffice.CRM.ArchiveLists.TokenType, System.Text.RegularExpressions.Regex>
  nameWithType.vb: Dictionary(Of TokenType, Regex)
  fullName.vb: System.Collections.Generic.Dictionary(Of SuperOffice.CRM.ArchiveLists.TokenType, System.Text.RegularExpressions.Regex)
  name.vb: Dictionary(Of TokenType, Regex)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.ArchiveLists.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: SuperOffice.CRM.ArchiveLists.TokenType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    nameWithType: Regex
    fullName: System.Text.RegularExpressions.Regex
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.ArchiveLists.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: SuperOffice.CRM.ArchiveLists.TokenType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Text.RegularExpressions.Regex
    name: Regex
    nameWithType: Regex
    fullName: System.Text.RegularExpressions.Regex
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Scanner.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Scanner.#ctor
  isExternal: true
  name: Scanner
  nameWithType: Scanner.Scanner
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Scanner
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Init*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Scanner.Init
  isExternal: true
  name: Init
  nameWithType: Scanner.Init
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Init
- uid: SuperOffice.CRM.ArchiveLists.Scanner.GetToken*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Scanner.GetToken
  isExternal: true
  name: GetToken
  nameWithType: Scanner.GetToken
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.GetToken
- uid: SuperOffice.CRM.ArchiveLists.TokenType
  commentId: T:SuperOffice.CRM.ArchiveLists.TokenType
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: TokenType
  nameWithType: TokenType
  fullName: SuperOffice.CRM.ArchiveLists.TokenType
- uid: SuperOffice.CRM.ArchiveLists.Token
  commentId: T:SuperOffice.CRM.ArchiveLists.Token
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: Token
  nameWithType: Token
  fullName: SuperOffice.CRM.ArchiveLists.Token
- uid: SuperOffice.CRM.ArchiveLists.Scanner.Scan*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Scanner.Scan
  isExternal: true
  name: Scan
  nameWithType: Scanner.Scan
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.Scan
- uid: SuperOffice.CRM.ArchiveLists.TokenType[]
  isExternal: true
  name: TokenType[]
  nameWithType: TokenType[]
  fullName: SuperOffice.CRM.ArchiveLists.TokenType[]
  nameWithType.vb: TokenType()
  fullName.vb: SuperOffice.CRM.ArchiveLists.TokenType()
  name.vb: TokenType()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: SuperOffice.CRM.ArchiveLists.TokenType
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.TokenType
    name: TokenType
    nameWithType: TokenType
    fullName: SuperOffice.CRM.ArchiveLists.TokenType
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.Scanner.LookAhead*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Scanner.LookAhead
  isExternal: true
  name: LookAhead
  nameWithType: Scanner.LookAhead
  fullName: SuperOffice.CRM.ArchiveLists.Scanner.LookAhead
