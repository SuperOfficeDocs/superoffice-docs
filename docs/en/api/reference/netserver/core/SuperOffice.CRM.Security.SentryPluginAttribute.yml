### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.SentryPluginAttribute
  commentId: T:SuperOffice.CRM.Security.SentryPluginAttribute
  id: SentryPluginAttribute
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.SentryPluginAttribute.#ctor(System.String)
  - SuperOffice.CRM.Security.SentryPluginAttribute.#ctor(System.String,System.String)
  - SuperOffice.CRM.Security.SentryPluginAttribute.ProgId
  langs:
  - csharp
  - vb
  name: SentryPluginAttribute
  nameWithType: SentryPluginAttribute
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nAttribute used to declare a sentry plug-in.  Objects declared with this attribute also needs \nto implement the interface <xref href=\"SuperOffice.CRM.Security.ISentryPlugin\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: 'public sealed class SentryPluginAttribute : PluginAttribute'
    content.vb: >-
      Public NotInheritable Class SentryPluginAttribute
          Inherits PluginAttribute
  inheritance:
  - System.Object
  - SuperOffice.Factory.PluginAttribute
  extensionMethods:
  - SuperOffice.CRM.Security.SentryPluginAttribute.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Security.SentryPluginAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.#ctor(System.String)
  commentId: M:SuperOffice.CRM.Security.SentryPluginAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.CRM.Security.SentryPluginAttribute
  langs:
  - csharp
  - vb
  name: SentryPluginAttribute(String)
  nameWithType: SentryPluginAttribute.SentryPluginAttribute(String)
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute.SentryPluginAttribute(System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nDeclare a class to be a sentry plug-in for one of the sentries.\n"
  syntax:
    content: public SentryPluginAttribute(string entityName)
    parameters:
    - id: entityName
      type: System.String
      description: "\nName of sentry: appointment, contact (e.g. company), person, project, relation, sale or selection.\n"
    content.vb: Public Sub New(entityName As String)
  overload: SuperOffice.CRM.Security.SentryPluginAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.#ctor(System.String,System.String)
  commentId: M:SuperOffice.CRM.Security.SentryPluginAttribute.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: SuperOffice.CRM.Security.SentryPluginAttribute
  langs:
  - csharp
  - vb
  name: SentryPluginAttribute(String, String)
  nameWithType: SentryPluginAttribute.SentryPluginAttribute(String, String)
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute.SentryPluginAttribute(System.String, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nDeclare a class to be a sentry plug-in for one of the sentries.\n"
  syntax:
    content: public SentryPluginAttribute(string entityName, string progId)
    parameters:
    - id: entityName
      type: System.String
      description: "\nName of sentry: appointment, contact (e.g. company), person, project, relation, sale or selection.\n"
    - id: progId
      type: System.String
      description: "\nProgId of the sentry plugin.  This name is used to verify presence of Sentry Plugins \nrequired by preference section [SentryAddonNames].\n"
    content.vb: Public Sub New(entityName As String, progId As String)
  overload: SuperOffice.CRM.Security.SentryPluginAttribute.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.ProgId
  commentId: P:SuperOffice.CRM.Security.SentryPluginAttribute.ProgId
  id: ProgId
  parent: SuperOffice.CRM.Security.SentryPluginAttribute
  langs:
  - csharp
  - vb
  name: ProgId
  nameWithType: SentryPluginAttribute.ProgId
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute.ProgId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: "\nProgId of the sentry plugin.  This name is used to verify presence of Sentry Plugins \nrequired by preference section [SentryAddonNames].\n"
  syntax:
    content: public string ProgId { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ProgId As String
  overload: SuperOffice.CRM.Security.SentryPluginAttribute.ProgId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Factory.PluginAttribute
  commentId: T:SuperOffice.Factory.PluginAttribute
  parent: SuperOffice.Factory
  isExternal: true
  name: PluginAttribute
  nameWithType: PluginAttribute
  fullName: SuperOffice.Factory.PluginAttribute
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SentryPluginAttribute, To>()
  nameWithType: EnumUtil.MapEnums<SentryPluginAttribute, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryPluginAttribute, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SentryPluginAttribute, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryPluginAttribute, To)()
  name.vb: MapEnums(Of SentryPluginAttribute, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SentryPluginAttribute, To>
    nameWithType: EnumUtil.MapEnums<SentryPluginAttribute, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.SentryPluginAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SentryPluginAttribute, To)
    nameWithType: EnumUtil.MapEnums(Of SentryPluginAttribute, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.SentryPluginAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SentryPluginAttribute, To>()
  nameWithType: Converters.MapEnums<SentryPluginAttribute, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryPluginAttribute, To>()
  nameWithType.vb: Converters.MapEnums(Of SentryPluginAttribute, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryPluginAttribute, To)()
  name.vb: MapEnums(Of SentryPluginAttribute, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SentryPluginAttribute, To>
    nameWithType: Converters.MapEnums<SentryPluginAttribute, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.SentryPluginAttribute, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SentryPluginAttribute, To)
    nameWithType: Converters.MapEnums(Of SentryPluginAttribute, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.SentryPluginAttribute, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Factory
  commentId: N:SuperOffice.Factory
  isExternal: true
  name: SuperOffice.Factory
  nameWithType: SuperOffice.Factory
  fullName: SuperOffice.Factory
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.SentryPluginAttribute.#ctor
  isExternal: true
  name: SentryPluginAttribute
  nameWithType: SentryPluginAttribute.SentryPluginAttribute
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute.SentryPluginAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Security.SentryPluginAttribute.ProgId*
  commentId: Overload:SuperOffice.CRM.Security.SentryPluginAttribute.ProgId
  isExternal: true
  name: ProgId
  nameWithType: SentryPluginAttribute.ProgId
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute.ProgId
