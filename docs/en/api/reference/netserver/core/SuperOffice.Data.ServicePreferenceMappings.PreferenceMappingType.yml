### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  commentId: T:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  id: ServicePreferenceMappings.PreferenceMappingType
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Config
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.ConfigFlag
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUser
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUserFlag
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.None
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.PasswordRules
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Registry
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.RegistryConcat
  langs:
  - csharp
  - vb
  name: ServicePreferenceMappings.PreferenceMappingType
  nameWithType: ServicePreferenceMappings.PreferenceMappingType
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  type: Enum
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: public enum PreferenceMappingType
    content.vb: Public Enum PreferenceMappingType
  extensionMethods:
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EnumUtil.MapEnums``2
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.None
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.None
  id: None
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.None
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.None
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: None = 0
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Registry
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Registry
  id: Registry
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: Registry
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.Registry
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Registry
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nValue is mapped to single registry row, given in <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.RegId\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: Registry = 1
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Config
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Config
  id: Config
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: Config
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.Config
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.Config
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nValue is mapped to single column in config, given in <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.ColumnName\" data-throw-if-not-resolved=\"false\"></xref>\n"
  syntax:
    content: Config = 2
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.PasswordRules
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.PasswordRules
  id: PasswordRules
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: PasswordRules
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.PasswordRules
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.PasswordRules
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nValue is mapped to password_rules\n"
  syntax:
    content: PasswordRules = 3
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.RegistryConcat
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.RegistryConcat
  id: RegistryConcat
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: RegistryConcat
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.RegistryConcat
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.RegistryConcat
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nMultiple values are mapped to a concatenated registry row. <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.RegId\" data-throw-if-not-resolved=\"false\"></xref> identifies the row, \nand <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.ColumnName\" data-throw-if-not-resolved=\"false\"></xref> is a number that sets the position; separator is a single space\n"
  syntax:
    content: RegistryConcat = 4
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.ConfigFlag
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.ConfigFlag
  id: ConfigFlag
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: ConfigFlag
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.ConfigFlag
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.ConfigFlag
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nMultiple boolean values are mapped to bits in the config.flag field. <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.ColumnName\" data-throw-if-not-resolved=\"false\"></xref> is the flag field name,\nand <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.FlagBitNo\" data-throw-if-not-resolved=\"false\"></xref> is the flag bit number\n"
  syntax:
    content: ConfigFlag = 5
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUser
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUser
  id: EjUser
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: EjUser
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.EjUser
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUser
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nValue is mapped to a single column in ejuser\n"
  syntax:
    content: EjUser = 6
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUserFlag
  commentId: F:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUserFlag
  id: EjUserFlag
  parent: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  langs:
  - csharp
  - vb
  name: EjUserFlag
  nameWithType: ServicePreferenceMappings.PreferenceMappingType.EjUserFlag
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EjUserFlag
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nMultiple boolean values are mapped to bits in an ejuser flagfield. <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.ColumnName\" data-throw-if-not-resolved=\"false\"></xref> is the flag field name,\nand <xref href=\"SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingInfo.FlagBitNo\" data-throw-if-not-resolved=\"false\"></xref> is the flag bit number\n"
  syntax:
    content: EjUserFlag = 7
    return:
      type: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>()
  nameWithType: EnumUtil.MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To)()
  name.vb: MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>
    nameWithType: EnumUtil.MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)
    nameWithType: EnumUtil.MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ServicePreferenceMappings.PreferenceMappingType>(ServicePreferenceMappings.PreferenceMappingType)
  nameWithType: ObjectExtensions.AssignByReflection<ServicePreferenceMappings.PreferenceMappingType>(ServicePreferenceMappings.PreferenceMappingType)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType>(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ServicePreferenceMappings.PreferenceMappingType)(ServicePreferenceMappings.PreferenceMappingType)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)(SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
  name.vb: AssignByReflection(Of ServicePreferenceMappings.PreferenceMappingType)(ServicePreferenceMappings.PreferenceMappingType)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ServicePreferenceMappings.PreferenceMappingType>
    nameWithType: ObjectExtensions.AssignByReflection<ServicePreferenceMappings.PreferenceMappingType>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
    name: ServicePreferenceMappings.PreferenceMappingType
    nameWithType: ServicePreferenceMappings.PreferenceMappingType
    fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ServicePreferenceMappings.PreferenceMappingType)
    nameWithType: ObjectExtensions.AssignByReflection(Of ServicePreferenceMappings.PreferenceMappingType)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
    name: ServicePreferenceMappings.PreferenceMappingType
    nameWithType: ServicePreferenceMappings.PreferenceMappingType
    fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ServicePreferenceMappings.PreferenceMappingType>()
  nameWithType: ObjectExtensions.GraphCopy<ServicePreferenceMappings.PreferenceMappingType>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ServicePreferenceMappings.PreferenceMappingType)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)()
  name.vb: GraphCopy(Of ServicePreferenceMappings.PreferenceMappingType)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ServicePreferenceMappings.PreferenceMappingType>
    nameWithType: ObjectExtensions.GraphCopy<ServicePreferenceMappings.PreferenceMappingType>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ServicePreferenceMappings.PreferenceMappingType)
    nameWithType: ObjectExtensions.GraphCopy(Of ServicePreferenceMappings.PreferenceMappingType)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>()
  nameWithType: Converters.MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To>()
  nameWithType.vb: Converters.MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To)()
  name.vb: MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>
    nameWithType: Converters.MapEnums<ServicePreferenceMappings.PreferenceMappingType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)
    nameWithType: Converters.MapEnums(Of ServicePreferenceMappings.PreferenceMappingType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  commentId: T:SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
  parent: SuperOffice.Data
  isExternal: true
  name: ServicePreferenceMappings.PreferenceMappingType
  nameWithType: ServicePreferenceMappings.PreferenceMappingType
  fullName: SuperOffice.Data.ServicePreferenceMappings.PreferenceMappingType
