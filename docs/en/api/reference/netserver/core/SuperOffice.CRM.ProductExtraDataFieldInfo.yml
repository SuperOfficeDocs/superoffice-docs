### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo
  commentId: T:SuperOffice.CRM.ProductExtraDataFieldInfo
  id: ProductExtraDataFieldInfo
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.ProductExtraDataFieldInfo.#ctor
  - SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation(SuperOffice.CRM.ProductExtraDataFieldInfo[])
  - SuperOffice.CRM.ProductExtraDataFieldInfo.Name
  - SuperOffice.CRM.ProductExtraDataFieldInfo.Type
  - SuperOffice.CRM.ProductExtraDataFieldInfo.Value
  langs:
  - csharp
  - vb
  name: ProductExtraDataFieldInfo
  nameWithType: ProductExtraDataFieldInfo
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo
  type: Class
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nA way to show some simple extra data on a product, typically to hep the user to identify the correct product. \nBasically a bucket of additional info that the ERP system would like to store and show in the user interface. \nInformation placed here is shown in the GUI if the “provide-extra-data” capability is true.\n"
  syntax:
    content: public class ProductExtraDataFieldInfo
    content.vb: Public Class ProductExtraDataFieldInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.ProductExtraDataFieldInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ProductExtraDataFieldInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ProductExtraDataFieldInfo)
  - SuperOffice.CRM.ProductExtraDataFieldInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ProductExtraDataFieldInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation(SuperOffice.CRM.ProductExtraDataFieldInfo[])
  commentId: M:SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation(SuperOffice.CRM.ProductExtraDataFieldInfo[])
  id: GetXMLRepresentation(SuperOffice.CRM.ProductExtraDataFieldInfo[])
  parent: SuperOffice.CRM.ProductExtraDataFieldInfo
  langs:
  - csharp
  - vb
  name: GetXMLRepresentation(ProductExtraDataFieldInfo[])
  nameWithType: ProductExtraDataFieldInfo.GetXMLRepresentation(ProductExtraDataFieldInfo[])
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation(SuperOffice.CRM.ProductExtraDataFieldInfo[])
  type: Method
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nCreates a XML representation of an array of ProductExtraDataFieldInfo\n"
  syntax:
    content: public static string GetXMLRepresentation(ProductExtraDataFieldInfo[] productExtraInfos)
    parameters:
    - id: productExtraInfos
      type: SuperOffice.CRM.ProductExtraDataFieldInfo[]
      description: Extra information structures
    return:
      type: System.String
    content.vb: Public Shared Function GetXMLRepresentation(productExtraInfos As ProductExtraDataFieldInfo()) As String
  overload: SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation*
  nameWithType.vb: ProductExtraDataFieldInfo.GetXMLRepresentation(ProductExtraDataFieldInfo())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation(SuperOffice.CRM.ProductExtraDataFieldInfo())
  name.vb: GetXMLRepresentation(ProductExtraDataFieldInfo())
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.#ctor
  commentId: M:SuperOffice.CRM.ProductExtraDataFieldInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ProductExtraDataFieldInfo
  langs:
  - csharp
  - vb
  name: ProductExtraDataFieldInfo()
  nameWithType: ProductExtraDataFieldInfo.ProductExtraDataFieldInfo()
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.ProductExtraDataFieldInfo()
  type: Constructor
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  syntax:
    content: public ProductExtraDataFieldInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ProductExtraDataFieldInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.Name
  commentId: P:SuperOffice.CRM.ProductExtraDataFieldInfo.Name
  id: Name
  parent: SuperOffice.CRM.ProductExtraDataFieldInfo
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ProductExtraDataFieldInfo.Name
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.Name
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nLabel for the field\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: SuperOffice.CRM.ProductExtraDataFieldInfo.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.Value
  commentId: P:SuperOffice.CRM.ProductExtraDataFieldInfo.Value
  id: Value
  parent: SuperOffice.CRM.ProductExtraDataFieldInfo
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ProductExtraDataFieldInfo.Value
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.Value
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nValue for the field. If type is string, it can contain formatspecifiers (use this for displaying numbers correctly as the users computer is set up).\n"
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: SuperOffice.CRM.ProductExtraDataFieldInfo.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.Type
  commentId: P:SuperOffice.CRM.ProductExtraDataFieldInfo.Type
  id: Type
  parent: SuperOffice.CRM.ProductExtraDataFieldInfo
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ProductExtraDataFieldInfo.Type
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.Type
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nString, image, url,. \nHow the value should be interpreted.\n"
  syntax:
    content: public ExtraDataFieldTypeInfo Type { get; set; }
    parameters: []
    return:
      type: SuperOffice.CRM.ExtraDataFieldTypeInfo
    content.vb: Public Property Type As ExtraDataFieldTypeInfo
  overload: SuperOffice.CRM.ProductExtraDataFieldInfo.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ProductExtraDataFieldInfo, To>()
  nameWithType: EnumUtil.MapEnums<ProductExtraDataFieldInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ProductExtraDataFieldInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ProductExtraDataFieldInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ProductExtraDataFieldInfo, To)()
  name.vb: MapEnums(Of ProductExtraDataFieldInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ProductExtraDataFieldInfo, To>
    nameWithType: EnumUtil.MapEnums<ProductExtraDataFieldInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ProductExtraDataFieldInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ProductExtraDataFieldInfo, To)
    nameWithType: EnumUtil.MapEnums(Of ProductExtraDataFieldInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ProductExtraDataFieldInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ProductExtraDataFieldInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ProductExtraDataFieldInfo>(ProductExtraDataFieldInfo)
  nameWithType: ObjectExtensions.AssignByReflection<ProductExtraDataFieldInfo>(ProductExtraDataFieldInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ProductExtraDataFieldInfo>(SuperOffice.CRM.ProductExtraDataFieldInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ProductExtraDataFieldInfo)(ProductExtraDataFieldInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ProductExtraDataFieldInfo)(SuperOffice.CRM.ProductExtraDataFieldInfo)
  name.vb: AssignByReflection(Of ProductExtraDataFieldInfo)(ProductExtraDataFieldInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ProductExtraDataFieldInfo>
    nameWithType: ObjectExtensions.AssignByReflection<ProductExtraDataFieldInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ProductExtraDataFieldInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ProductExtraDataFieldInfo
    name: ProductExtraDataFieldInfo
    nameWithType: ProductExtraDataFieldInfo
    fullName: SuperOffice.CRM.ProductExtraDataFieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ProductExtraDataFieldInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of ProductExtraDataFieldInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ProductExtraDataFieldInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ProductExtraDataFieldInfo
    name: ProductExtraDataFieldInfo
    nameWithType: ProductExtraDataFieldInfo
    fullName: SuperOffice.CRM.ProductExtraDataFieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ProductExtraDataFieldInfo>()
  nameWithType: ObjectExtensions.GraphCopy<ProductExtraDataFieldInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ProductExtraDataFieldInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ProductExtraDataFieldInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ProductExtraDataFieldInfo)()
  name.vb: GraphCopy(Of ProductExtraDataFieldInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ProductExtraDataFieldInfo>
    nameWithType: ObjectExtensions.GraphCopy<ProductExtraDataFieldInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ProductExtraDataFieldInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ProductExtraDataFieldInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of ProductExtraDataFieldInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ProductExtraDataFieldInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ProductExtraDataFieldInfo, To>()
  nameWithType: Converters.MapEnums<ProductExtraDataFieldInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ProductExtraDataFieldInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of ProductExtraDataFieldInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ProductExtraDataFieldInfo, To)()
  name.vb: MapEnums(Of ProductExtraDataFieldInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ProductExtraDataFieldInfo, To>
    nameWithType: Converters.MapEnums<ProductExtraDataFieldInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ProductExtraDataFieldInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ProductExtraDataFieldInfo, To)
    nameWithType: Converters.MapEnums(Of ProductExtraDataFieldInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ProductExtraDataFieldInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation*
  commentId: Overload:SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation
  isExternal: true
  name: GetXMLRepresentation
  nameWithType: ProductExtraDataFieldInfo.GetXMLRepresentation
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.GetXMLRepresentation
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo[]
  isExternal: true
  name: ProductExtraDataFieldInfo[]
  nameWithType: ProductExtraDataFieldInfo[]
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo[]
  nameWithType.vb: ProductExtraDataFieldInfo()
  fullName.vb: SuperOffice.CRM.ProductExtraDataFieldInfo()
  name.vb: ProductExtraDataFieldInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ProductExtraDataFieldInfo
    name: ProductExtraDataFieldInfo
    nameWithType: ProductExtraDataFieldInfo
    fullName: SuperOffice.CRM.ProductExtraDataFieldInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ProductExtraDataFieldInfo
    name: ProductExtraDataFieldInfo
    nameWithType: ProductExtraDataFieldInfo
    fullName: SuperOffice.CRM.ProductExtraDataFieldInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ProductExtraDataFieldInfo.#ctor
  isExternal: true
  name: ProductExtraDataFieldInfo
  nameWithType: ProductExtraDataFieldInfo.ProductExtraDataFieldInfo
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.ProductExtraDataFieldInfo
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.Name*
  commentId: Overload:SuperOffice.CRM.ProductExtraDataFieldInfo.Name
  isExternal: true
  name: Name
  nameWithType: ProductExtraDataFieldInfo.Name
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.Name
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.Value*
  commentId: Overload:SuperOffice.CRM.ProductExtraDataFieldInfo.Value
  isExternal: true
  name: Value
  nameWithType: ProductExtraDataFieldInfo.Value
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.Value
- uid: SuperOffice.CRM.ProductExtraDataFieldInfo.Type*
  commentId: Overload:SuperOffice.CRM.ProductExtraDataFieldInfo.Type
  isExternal: true
  name: Type
  nameWithType: ProductExtraDataFieldInfo.Type
  fullName: SuperOffice.CRM.ProductExtraDataFieldInfo.Type
- uid: SuperOffice.CRM.ExtraDataFieldTypeInfo
  commentId: T:SuperOffice.CRM.ExtraDataFieldTypeInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: ExtraDataFieldTypeInfo
  nameWithType: ExtraDataFieldTypeInfo
  fullName: SuperOffice.CRM.ExtraDataFieldTypeInfo
