### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  commentId: T:SuperOffice.CRM.Documents.ArchiveTempFileProvider
  id: ArchiveTempFileProvider
  parent: SuperOffice.CRM.Documents
  children:
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.#ctor
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ArchiveTempFileProvider
  nameWithType: ArchiveTempFileProvider
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nThis class implements the <xref href=\"SuperOffice.IO.ITempFileProvider\" data-throw-if-not-resolved=\"false\"></xref> interface and makes\navailable temp file services. It uses the Document section in the config file\nto determine impersonation options and file path.\n"
  syntax:
    content: >-
      [SoInject]

      public class ArchiveTempFileProvider : Object, ITempFileProvider
    content.vb: >-
      <SoInject>

      Public Class ArchiveTempFileProvider
          Inherits Object
          Implements ITempFileProvider
  inheritance:
  - System.Object
  implements:
  - SuperOffice.IO.ITempFileProvider
  extensionMethods:
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Documents.ArchiveTempFileProvider)
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Documents.ArchiveTempFileProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Factory.SoInjectAttribute
    ctor: SuperOffice.Factory.SoInjectAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
  id: CreateFileAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: CreateFileAsync(String, CancellationToken)
  nameWithType: ArchiveTempFileProvider.CreateFileAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<string> CreateFileAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function CreateFileAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  id: CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: CreateFileForAppendingAsync(String, CancellationToken)
  nameWithType: ArchiveTempFileProvider.CreateFileForAppendingAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<string> CreateFileForAppendingAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function CreateFileForAppendingAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  id: CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: CheckIfFileExistsAsync(String, CancellationToken)
  nameWithType: ArchiveTempFileProvider.CheckIfFileExistsAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<bool> CheckIfFileExistsAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function CheckIfFileExistsAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  id: ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: ReadFileCompleteAsync(String, CancellationToken)
  nameWithType: ArchiveTempFileProvider.ReadFileCompleteAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<Stream> ReadFileCompleteAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Function ReadFileCompleteAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  id: ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: ReadFileChunkAsync(String, Int64, Byte[], CancellationToken)
  nameWithType: ArchiveTempFileProvider.ReadFileChunkAsync(String, Int64, Byte[], CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync(System.String, System.Int64, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<int> ReadFileChunkAsync(string name, long filePosition, byte[] bufferToUpdate, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: filePosition
      type: System.Int64
    - id: bufferToUpdate
      type: System.Byte[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Function ReadFileChunkAsync(name As String, filePosition As Long, bufferToUpdate As Byte(), cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  nameWithType.vb: ArchiveTempFileProvider.ReadFileChunkAsync(String, Int64, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync(System.String, System.Int64, System.Byte(), System.Threading.CancellationToken)
  name.vb: ReadFileChunkAsync(String, Int64, Byte(), CancellationToken)
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  id: WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: WriteFileCompleteAsync(String, Stream, CancellationToken)
  nameWithType: ArchiveTempFileProvider.WriteFileCompleteAsync(String, Stream, CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync(System.String, System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: "\nCopy all information from DATA stream into the temp file represented by NAME, and close the stream when done.\n"
  syntax:
    content: public Task WriteFileCompleteAsync(string name, Stream data, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
      description: Temp file name
    - id: data
      type: System.IO.Stream
      description: Stream to read to the end. This stream is CLOSED after it has been read.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function WriteFileCompleteAsync(name As String, data As Stream, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  id: WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: WriteFileChunkAsync(String, Int64, Byte[], CancellationToken)
  nameWithType: ArchiveTempFileProvider.WriteFileChunkAsync(String, Int64, Byte[], CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync(System.String, System.Int64, System.Byte[], System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task WriteFileChunkAsync(string name, long filePosition, byte[] bufferToWriteFrom, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: filePosition
      type: System.Int64
    - id: bufferToWriteFrom
      type: System.Byte[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function WriteFileChunkAsync(name As String, filePosition As Long, bufferToWriteFrom As Byte(), cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  nameWithType.vb: ArchiveTempFileProvider.WriteFileChunkAsync(String, Int64, Byte(), CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync(System.String, System.Int64, System.Byte(), System.Threading.CancellationToken)
  name.vb: WriteFileChunkAsync(String, Int64, Byte(), CancellationToken)
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
  id: DeleteFileAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: DeleteFileAsync(String, CancellationToken)
  nameWithType: ArchiveTempFileProvider.DeleteFileAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task DeleteFileAsync(string name, CancellationToken cancellationToken = null)
    parameters:
    - id: name
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function DeleteFileAsync(name As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync*
  implements:
  - SuperOffice.IO.ITempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.#ctor
  commentId: M:SuperOffice.CRM.Documents.ArchiveTempFileProvider.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Documents.ArchiveTempFileProvider
  langs:
  - csharp
  - vb
  name: ArchiveTempFileProvider()
  nameWithType: ArchiveTempFileProvider.ArchiveTempFileProvider()
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ArchiveTempFileProvider()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public ArchiveTempFileProvider()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Documents.ArchiveTempFileProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Documents
  commentId: N:SuperOffice.CRM.Documents
  isExternal: true
  name: SuperOffice.CRM.Documents
  nameWithType: SuperOffice.CRM.Documents
  fullName: SuperOffice.CRM.Documents
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.IO.ITempFileProvider
  commentId: T:SuperOffice.IO.ITempFileProvider
  parent: SuperOffice.IO
  isExternal: true
  name: ITempFileProvider
  nameWithType: ITempFileProvider
  fullName: SuperOffice.IO.ITempFileProvider
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ArchiveTempFileProvider, To>()
  nameWithType: EnumUtil.MapEnums<ArchiveTempFileProvider, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Documents.ArchiveTempFileProvider, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ArchiveTempFileProvider, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider, To)()
  name.vb: MapEnums(Of ArchiveTempFileProvider, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ArchiveTempFileProvider, To>
    nameWithType: EnumUtil.MapEnums<ArchiveTempFileProvider, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Documents.ArchiveTempFileProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ArchiveTempFileProvider, To)
    nameWithType: EnumUtil.MapEnums(Of ArchiveTempFileProvider, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Documents.ArchiveTempFileProvider)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ArchiveTempFileProvider>(ArchiveTempFileProvider)
  nameWithType: ObjectExtensions.AssignByReflection<ArchiveTempFileProvider>(ArchiveTempFileProvider)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Documents.ArchiveTempFileProvider>(SuperOffice.CRM.Documents.ArchiveTempFileProvider)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ArchiveTempFileProvider)(ArchiveTempFileProvider)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider)(SuperOffice.CRM.Documents.ArchiveTempFileProvider)
  name.vb: AssignByReflection(Of ArchiveTempFileProvider)(ArchiveTempFileProvider)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ArchiveTempFileProvider>
    nameWithType: ObjectExtensions.AssignByReflection<ArchiveTempFileProvider>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Documents.ArchiveTempFileProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider
    name: ArchiveTempFileProvider
    nameWithType: ArchiveTempFileProvider
    fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ArchiveTempFileProvider)
    nameWithType: ObjectExtensions.AssignByReflection(Of ArchiveTempFileProvider)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider
    name: ArchiveTempFileProvider
    nameWithType: ArchiveTempFileProvider
    fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ArchiveTempFileProvider>()
  nameWithType: ObjectExtensions.GraphCopy<ArchiveTempFileProvider>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Documents.ArchiveTempFileProvider>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ArchiveTempFileProvider)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider)()
  name.vb: GraphCopy(Of ArchiveTempFileProvider)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ArchiveTempFileProvider>
    nameWithType: ObjectExtensions.GraphCopy<ArchiveTempFileProvider>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Documents.ArchiveTempFileProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ArchiveTempFileProvider)
    nameWithType: ObjectExtensions.GraphCopy(Of ArchiveTempFileProvider)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ArchiveTempFileProvider, To>()
  nameWithType: Converters.MapEnums<ArchiveTempFileProvider, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Documents.ArchiveTempFileProvider, To>()
  nameWithType.vb: Converters.MapEnums(Of ArchiveTempFileProvider, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider, To)()
  name.vb: MapEnums(Of ArchiveTempFileProvider, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ArchiveTempFileProvider, To>
    nameWithType: Converters.MapEnums<ArchiveTempFileProvider, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Documents.ArchiveTempFileProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ArchiveTempFileProvider, To)
    nameWithType: Converters.MapEnums(Of ArchiveTempFileProvider, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Documents.ArchiveTempFileProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.IO
  commentId: N:SuperOffice.IO
  isExternal: true
  name: SuperOffice.IO
  nameWithType: SuperOffice.IO
  fullName: SuperOffice.IO
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync
  isExternal: true
  name: CreateFileAsync
  nameWithType: ArchiveTempFileProvider.CreateFileAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileAsync
- uid: SuperOffice.IO.ITempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: CreateFileAsync(String, CancellationToken)
  nameWithType: ITempFileProvider.CreateFileAsync(String, CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.CreateFileAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
    name: CreateFileAsync
    nameWithType: ITempFileProvider.CreateFileAsync
    fullName: SuperOffice.IO.ITempFileProvider.CreateFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.CreateFileAsync(System.String,System.Threading.CancellationToken)
    name: CreateFileAsync
    nameWithType: ITempFileProvider.CreateFileAsync
    fullName: SuperOffice.IO.ITempFileProvider.CreateFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync
  isExternal: true
  name: CreateFileForAppendingAsync
  nameWithType: ArchiveTempFileProvider.CreateFileForAppendingAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CreateFileForAppendingAsync
- uid: SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: CreateFileForAppendingAsync(String, CancellationToken)
  nameWithType: ITempFileProvider.CreateFileForAppendingAsync(String, CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
    name: CreateFileForAppendingAsync
    nameWithType: ITempFileProvider.CreateFileForAppendingAsync
    fullName: SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync(System.String,System.Threading.CancellationToken)
    name: CreateFileForAppendingAsync
    nameWithType: ITempFileProvider.CreateFileForAppendingAsync
    fullName: SuperOffice.IO.ITempFileProvider.CreateFileForAppendingAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync
  isExternal: true
  name: CheckIfFileExistsAsync
  nameWithType: ArchiveTempFileProvider.CheckIfFileExistsAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.CheckIfFileExistsAsync
- uid: SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: CheckIfFileExistsAsync(String, CancellationToken)
  nameWithType: ITempFileProvider.CheckIfFileExistsAsync(String, CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
    name: CheckIfFileExistsAsync
    nameWithType: ITempFileProvider.CheckIfFileExistsAsync
    fullName: SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync(System.String,System.Threading.CancellationToken)
    name: CheckIfFileExistsAsync
    nameWithType: ITempFileProvider.CheckIfFileExistsAsync
    fullName: SuperOffice.IO.ITempFileProvider.CheckIfFileExistsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync
  isExternal: true
  name: ReadFileCompleteAsync
  nameWithType: ArchiveTempFileProvider.ReadFileCompleteAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileCompleteAsync
- uid: SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: ReadFileCompleteAsync(String, CancellationToken)
  nameWithType: ITempFileProvider.ReadFileCompleteAsync(String, CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
    name: ReadFileCompleteAsync
    nameWithType: ITempFileProvider.ReadFileCompleteAsync
    fullName: SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync(System.String,System.Threading.CancellationToken)
    name: ReadFileCompleteAsync
    nameWithType: ITempFileProvider.ReadFileCompleteAsync
    fullName: SuperOffice.IO.ITempFileProvider.ReadFileCompleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: '!:System.Threading.Tasks.Task{System.IO.Stream}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync
  isExternal: true
  name: ReadFileChunkAsync
  nameWithType: ArchiveTempFileProvider.ReadFileChunkAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ReadFileChunkAsync
- uid: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: ReadFileChunkAsync(String, Int64, Byte[], CancellationToken)
  nameWithType: ITempFileProvider.ReadFileChunkAsync(String, Int64, Byte[], CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String, System.Int64, System.Byte[], System.Threading.CancellationToken)
  nameWithType.vb: ITempFileProvider.ReadFileChunkAsync(String, Int64, Byte(), CancellationToken)
  fullName.vb: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String, System.Int64, System.Byte(), System.Threading.CancellationToken)
  name.vb: ReadFileChunkAsync(String, Int64, Byte(), CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
    name: ReadFileChunkAsync
    nameWithType: ITempFileProvider.ReadFileChunkAsync
    fullName: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
    name: ReadFileChunkAsync
    nameWithType: ITempFileProvider.ReadFileChunkAsync
    fullName: SuperOffice.IO.ITempFileProvider.ReadFileChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync
  isExternal: true
  name: WriteFileCompleteAsync
  nameWithType: ArchiveTempFileProvider.WriteFileCompleteAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileCompleteAsync
- uid: SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: WriteFileCompleteAsync(String, Stream, CancellationToken)
  nameWithType: ITempFileProvider.WriteFileCompleteAsync(String, Stream, CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync(System.String, System.IO.Stream, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
    name: WriteFileCompleteAsync
    nameWithType: ITempFileProvider.WriteFileCompleteAsync
    fullName: SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)
    name: WriteFileCompleteAsync
    nameWithType: ITempFileProvider.WriteFileCompleteAsync
    fullName: SuperOffice.IO.ITempFileProvider.WriteFileCompleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.Stream
    name: Stream
    nameWithType: Stream
    fullName: System.IO.Stream
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.Stream
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync
  isExternal: true
  name: WriteFileChunkAsync
  nameWithType: ArchiveTempFileProvider.WriteFileChunkAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.WriteFileChunkAsync
- uid: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: WriteFileChunkAsync(String, Int64, Byte[], CancellationToken)
  nameWithType: ITempFileProvider.WriteFileChunkAsync(String, Int64, Byte[], CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String, System.Int64, System.Byte[], System.Threading.CancellationToken)
  nameWithType.vb: ITempFileProvider.WriteFileChunkAsync(String, Int64, Byte(), CancellationToken)
  fullName.vb: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String, System.Int64, System.Byte(), System.Threading.CancellationToken)
  name.vb: WriteFileChunkAsync(String, Int64, Byte(), CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
    name: WriteFileChunkAsync
    nameWithType: ITempFileProvider.WriteFileChunkAsync
    fullName: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync(System.String,System.Int64,System.Byte[],System.Threading.CancellationToken)
    name: WriteFileChunkAsync
    nameWithType: ITempFileProvider.WriteFileChunkAsync
    fullName: SuperOffice.IO.ITempFileProvider.WriteFileChunkAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync
  isExternal: true
  name: DeleteFileAsync
  nameWithType: ArchiveTempFileProvider.DeleteFileAsync
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.DeleteFileAsync
- uid: SuperOffice.IO.ITempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.ITempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  name: DeleteFileAsync(String, CancellationToken)
  nameWithType: ITempFileProvider.DeleteFileAsync(String, CancellationToken)
  fullName: SuperOffice.IO.ITempFileProvider.DeleteFileAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
    name: DeleteFileAsync
    nameWithType: ITempFileProvider.DeleteFileAsync
    fullName: SuperOffice.IO.ITempFileProvider.DeleteFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.DeleteFileAsync(System.String,System.Threading.CancellationToken)
    name: DeleteFileAsync
    nameWithType: ITempFileProvider.DeleteFileAsync
    fullName: SuperOffice.IO.ITempFileProvider.DeleteFileAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Documents.ArchiveTempFileProvider.#ctor*
  commentId: Overload:SuperOffice.CRM.Documents.ArchiveTempFileProvider.#ctor
  isExternal: true
  name: ArchiveTempFileProvider
  nameWithType: ArchiveTempFileProvider.ArchiveTempFileProvider
  fullName: SuperOffice.CRM.Documents.ArchiveTempFileProvider.ArchiveTempFileProvider
