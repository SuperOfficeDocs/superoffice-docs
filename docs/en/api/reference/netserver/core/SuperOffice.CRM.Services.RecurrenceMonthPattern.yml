### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern
  commentId: T:SuperOffice.CRM.Services.RecurrenceMonthPattern
  id: RecurrenceMonthPattern
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.#ctor
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern
  langs:
  - csharp
  - vb
  name: RecurrenceMonthPattern
  nameWithType: RecurrenceMonthPattern
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: "\nClass representing a pattern for monthly recurrence\n"
  syntax:
    content: 'public class RecurrenceMonthPattern : RecurrenceWeekOfMonthPattern, ICloneable'
    content.vb: >-
      Public Class RecurrenceMonthPattern
          Inherits RecurrenceWeekOfMonthPattern
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.CRM.Services.RecurrencePatternBase
  - SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo(SuperOffice.CRM.Services.RecurrencePatternBase)
  - SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Day
  - SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Weekday
  - SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.WeekOfMonth
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RecurrenceMonthPattern)
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Services.RecurrenceMonthPattern.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone
  commentId: M:SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone
  id: Clone
  parent: SuperOffice.CRM.Services.RecurrenceMonthPattern
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: RecurrenceMonthPattern.Clone()
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
    content.vb: Public Overrides Function Clone As Object
  overridden: SuperOffice.CRM.Services.RecurrencePatternBase.Clone
  overload: SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.#ctor
  commentId: M:SuperOffice.CRM.Services.RecurrenceMonthPattern.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.RecurrenceMonthPattern
  langs:
  - csharp
  - vb
  name: RecurrenceMonthPattern()
  nameWithType: RecurrenceMonthPattern.RecurrenceMonthPattern()
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.RecurrenceMonthPattern()
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public RecurrenceMonthPattern()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Services.RecurrenceMonthPattern.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern
  commentId: P:SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern
  id: Pattern
  parent: SuperOffice.CRM.Services.RecurrenceMonthPattern
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: RecurrenceMonthPattern.Pattern
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: "\nThe type of monthly recurrence pattern\n"
  syntax:
    content: public RecurrenceMonthlyPattern Pattern { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.RecurrenceMonthlyPattern
    content.vb: Public Property Pattern As RecurrenceMonthlyPattern
  overload: SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle
  commentId: P:SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle
  id: Cycle
  parent: SuperOffice.CRM.Services.RecurrenceMonthPattern
  langs:
  - csharp
  - vb
  name: Cycle
  nameWithType: RecurrenceMonthPattern.Cycle
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle
  type: Property
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.CRM.Services
  summary: "\nThe number of months between each repetition\n"
  syntax:
    content: public override int Cycle { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides Property Cycle As Integer
  overridden: SuperOffice.CRM.Services.RecurrencePatternBase.Cycle
  overload: SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle*
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Services.RecurrencePatternBase
  commentId: T:SuperOffice.CRM.Services.RecurrencePatternBase
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: RecurrencePatternBase
  nameWithType: RecurrencePatternBase
  fullName: SuperOffice.CRM.Services.RecurrencePatternBase
- uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  commentId: T:SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  parent: SuperOffice.CRM.Services
  isExternal: true
  name: RecurrenceWeekOfMonthPattern
  nameWithType: RecurrenceWeekOfMonthPattern
  fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo(SuperOffice.CRM.Services.RecurrencePatternBase)
  commentId: M:SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo(SuperOffice.CRM.Services.RecurrencePatternBase)
  parent: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  isExternal: true
  name: CopyTo(RecurrencePatternBase)
  nameWithType: RecurrenceWeekOfMonthPattern.CopyTo(RecurrencePatternBase)
  fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo(SuperOffice.CRM.Services.RecurrencePatternBase)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo(SuperOffice.CRM.Services.RecurrencePatternBase)
    name: CopyTo
    nameWithType: RecurrenceWeekOfMonthPattern.CopyTo
    fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.RecurrencePatternBase
    name: RecurrencePatternBase
    nameWithType: RecurrencePatternBase
    fullName: SuperOffice.CRM.Services.RecurrencePatternBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo(SuperOffice.CRM.Services.RecurrencePatternBase)
    name: CopyTo
    nameWithType: RecurrenceWeekOfMonthPattern.CopyTo
    fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.RecurrencePatternBase
    name: RecurrencePatternBase
    nameWithType: RecurrencePatternBase
    fullName: SuperOffice.CRM.Services.RecurrencePatternBase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Day
  commentId: P:SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Day
  parent: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  isExternal: true
  name: Day
  nameWithType: RecurrenceWeekOfMonthPattern.Day
  fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Day
- uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Weekday
  commentId: P:SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Weekday
  parent: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  isExternal: true
  name: Weekday
  nameWithType: RecurrenceWeekOfMonthPattern.Weekday
  fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.Weekday
- uid: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.WeekOfMonth
  commentId: P:SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.WeekOfMonth
  parent: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern
  isExternal: true
  name: WeekOfMonth
  nameWithType: RecurrenceWeekOfMonthPattern.WeekOfMonth
  fullName: SuperOffice.CRM.Services.RecurrenceWeekOfMonthPattern.WeekOfMonth
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RecurrenceMonthPattern, To>()
  nameWithType: EnumUtil.MapEnums<RecurrenceMonthPattern, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.RecurrenceMonthPattern, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RecurrenceMonthPattern, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.RecurrenceMonthPattern, To)()
  name.vb: MapEnums(Of RecurrenceMonthPattern, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RecurrenceMonthPattern, To>
    nameWithType: EnumUtil.MapEnums<RecurrenceMonthPattern, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Services.RecurrenceMonthPattern, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RecurrenceMonthPattern, To)
    nameWithType: EnumUtil.MapEnums(Of RecurrenceMonthPattern, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Services.RecurrenceMonthPattern, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Services.RecurrenceMonthPattern)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RecurrenceMonthPattern>(RecurrenceMonthPattern)
  nameWithType: ObjectExtensions.AssignByReflection<RecurrenceMonthPattern>(RecurrenceMonthPattern)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Services.RecurrenceMonthPattern>(SuperOffice.CRM.Services.RecurrenceMonthPattern)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RecurrenceMonthPattern)(RecurrenceMonthPattern)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Services.RecurrenceMonthPattern)(SuperOffice.CRM.Services.RecurrenceMonthPattern)
  name.vb: AssignByReflection(Of RecurrenceMonthPattern)(RecurrenceMonthPattern)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RecurrenceMonthPattern>
    nameWithType: ObjectExtensions.AssignByReflection<RecurrenceMonthPattern>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Services.RecurrenceMonthPattern>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.RecurrenceMonthPattern
    name: RecurrenceMonthPattern
    nameWithType: RecurrenceMonthPattern
    fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RecurrenceMonthPattern)
    nameWithType: ObjectExtensions.AssignByReflection(Of RecurrenceMonthPattern)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Services.RecurrenceMonthPattern)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Services.RecurrenceMonthPattern
    name: RecurrenceMonthPattern
    nameWithType: RecurrenceMonthPattern
    fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RecurrenceMonthPattern>()
  nameWithType: ObjectExtensions.GraphCopy<RecurrenceMonthPattern>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Services.RecurrenceMonthPattern>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RecurrenceMonthPattern)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Services.RecurrenceMonthPattern)()
  name.vb: GraphCopy(Of RecurrenceMonthPattern)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RecurrenceMonthPattern>
    nameWithType: ObjectExtensions.GraphCopy<RecurrenceMonthPattern>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Services.RecurrenceMonthPattern>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RecurrenceMonthPattern)
    nameWithType: ObjectExtensions.GraphCopy(Of RecurrenceMonthPattern)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Services.RecurrenceMonthPattern)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RecurrenceMonthPattern, To>()
  nameWithType: Converters.MapEnums<RecurrenceMonthPattern, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.RecurrenceMonthPattern, To>()
  nameWithType.vb: Converters.MapEnums(Of RecurrenceMonthPattern, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.RecurrenceMonthPattern, To)()
  name.vb: MapEnums(Of RecurrenceMonthPattern, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RecurrenceMonthPattern, To>
    nameWithType: Converters.MapEnums<RecurrenceMonthPattern, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Services.RecurrenceMonthPattern, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RecurrenceMonthPattern, To)
    nameWithType: Converters.MapEnums(Of RecurrenceMonthPattern, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Services.RecurrenceMonthPattern, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Services.RecurrencePatternBase.Clone
  commentId: M:SuperOffice.CRM.Services.RecurrencePatternBase.Clone
  parent: SuperOffice.CRM.Services.RecurrencePatternBase
  isExternal: true
  name: Clone()
  nameWithType: RecurrencePatternBase.Clone()
  fullName: SuperOffice.CRM.Services.RecurrencePatternBase.Clone()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RecurrencePatternBase.Clone
    name: Clone
    nameWithType: RecurrencePatternBase.Clone
    fullName: SuperOffice.CRM.Services.RecurrencePatternBase.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.RecurrencePatternBase.Clone
    name: Clone
    nameWithType: RecurrencePatternBase.Clone
    fullName: SuperOffice.CRM.Services.RecurrencePatternBase.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone
  isExternal: true
  name: Clone
  nameWithType: RecurrenceMonthPattern.Clone
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.Clone
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceMonthPattern.#ctor
  isExternal: true
  name: RecurrenceMonthPattern
  nameWithType: RecurrenceMonthPattern.RecurrenceMonthPattern
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.RecurrenceMonthPattern
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern
  isExternal: true
  name: Pattern
  nameWithType: RecurrenceMonthPattern.Pattern
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.Pattern
- uid: SuperOffice.Data.RecurrenceMonthlyPattern
  commentId: T:SuperOffice.Data.RecurrenceMonthlyPattern
  parent: SuperOffice.Data
  isExternal: true
  name: RecurrenceMonthlyPattern
  nameWithType: RecurrenceMonthlyPattern
  fullName: SuperOffice.Data.RecurrenceMonthlyPattern
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Services.RecurrencePatternBase.Cycle
  commentId: P:SuperOffice.CRM.Services.RecurrencePatternBase.Cycle
  parent: SuperOffice.CRM.Services.RecurrencePatternBase
  isExternal: true
  name: Cycle
  nameWithType: RecurrencePatternBase.Cycle
  fullName: SuperOffice.CRM.Services.RecurrencePatternBase.Cycle
- uid: SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle*
  commentId: Overload:SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle
  isExternal: true
  name: Cycle
  nameWithType: RecurrenceMonthPattern.Cycle
  fullName: SuperOffice.CRM.Services.RecurrenceMonthPattern.Cycle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
