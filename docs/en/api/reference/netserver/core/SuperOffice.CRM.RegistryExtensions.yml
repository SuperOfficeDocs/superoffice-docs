### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.RegistryExtensions
  commentId: T:SuperOffice.CRM.RegistryExtensions
  id: RegistryExtensions
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync(System.Enum,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: RegistryExtensions
  nameWithType: RegistryExtensions
  fullName: SuperOffice.CRM.RegistryExtensions
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: 'public static class RegistryExtensions : Object'
    content.vb: >-
      Public Module RegistryExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync(System.Enum,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync(System.Enum,System.String,System.Threading.CancellationToken)
  id: GetRegistryRowAsync(System.Enum,System.String,System.Threading.CancellationToken)
  isExtensionMethod: true
  parent: SuperOffice.CRM.RegistryExtensions
  langs:
  - csharp
  - vb
  name: GetRegistryRowAsync(Enum, String, CancellationToken)
  nameWithType: RegistryExtensions.GetRegistryRowAsync(Enum, String, CancellationToken)
  fullName: SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync(System.Enum, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public static Task<RegistryRow> GetRegistryRowAsync(this Enum regId, string defaultValue = null, CancellationToken cancellationToken = null)
    parameters:
    - id: regId
      type: System.Enum
    - id: defaultValue
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.RegistryRow}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetRegistryRowAsync(regId As  Enum, defaultValue As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of RegistryRow)
  overload: SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync*
  commentId: Overload:SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync
  isExternal: true
  name: GetRegistryRowAsync
  nameWithType: RegistryExtensions.GetRegistryRowAsync
  fullName: SuperOffice.CRM.RegistryExtensions.GetRegistryRowAsync
- uid: System.Enum
  commentId: '!:System.Enum'
  isExternal: true
  name: Enum
  nameWithType: Enum
  fullName: System.Enum
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.RegistryRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.RegistryRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<RegistryRow>
  nameWithType: Task<RegistryRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.RegistryRow>
  nameWithType.vb: Task(Of RegistryRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.RegistryRow)
  name.vb: Task(Of RegistryRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.RegistryRow
    name: RegistryRow
    nameWithType: RegistryRow
    fullName: SuperOffice.CRM.Rows.RegistryRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.RegistryRow
    name: RegistryRow
    nameWithType: RegistryRow
    fullName: SuperOffice.CRM.Rows.RegistryRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
