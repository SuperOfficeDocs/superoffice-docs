### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  commentId: T:SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  id: ListWithNoSelectionProvider
  parent: SuperOffice.CRM.Lists
  children:
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.#ctor
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.NoSelectionResource
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.Suffix
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists
  langs:
  - csharp
  - vb
  name: ListWithNoSelectionProvider
  nameWithType: ListWithNoSelectionProvider
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  summary: "\nDynamic list provider that &apos;wraps around&apos; all existing lists, adding a (No selection) item \nwith ID 0 in front of the first &apos;real&apos; item in the inner list. The generated list name is the inner\nname plus the WithNoSelection suffix.  \n"
  remarks: "\nThis list provider has priority int.MaxValue; it will always come last, so its name suffix will always be the\nlast in the actual list name.\n"
  syntax:
    content: >-
      [DynamicMDOProviderPlugin("NoSelectionWrapper", 2147483647)]

      public class ListWithNoSelectionProvider : Object, IDynamicMDOProvider, ISoListProvider, ISoList, IPlugin
    content.vb: >-
      <DynamicMDOProviderPlugin("NoSelectionWrapper", 2147483647)>

      Public Class ListWithNoSelectionProvider
          Inherits Object
          Implements IDynamicMDOProvider, ISoListProvider, ISoList, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Lists.IDynamicMDOProvider
  - SuperOffice.CRM.Lists.ISoListProvider
  - SuperOffice.CRM.Lists.ISoList
  extensionMethods:
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Lists.ListWithNoSelectionProvider)
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.CRM.Lists.DynamicMDOProviderPluginAttribute
    ctor: SuperOffice.CRM.Lists.DynamicMDOProviderPluginAttribute.#ctor(System.String,System.Int32)
    arguments:
    - type: System.String
      value: NoSelectionWrapper
    - type: System.Int32
      value: 2147483647
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.NoSelectionResource
  commentId: F:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.NoSelectionResource
  id: NoSelectionResource
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: NoSelectionResource
  nameWithType: ListWithNoSelectionProvider.NoSelectionResource
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.NoSelectionResource
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public const string NoSelectionResource = "[SR_NO_SELECTION]"
    return:
      type: System.String
    content.vb: Public Const NoSelectionResource As String = "[SR_NO_SELECTION]"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.Suffix
  commentId: F:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.Suffix
  id: Suffix
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: Suffix
  nameWithType: ListWithNoSelectionProvider.Suffix
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.Suffix
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public const string Suffix = "WithNoSelection"
    return:
      type: System.String
    content.vb: Public Const Suffix As String = "WithNoSelection"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  id: ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  nameWithType: ListWithNoSelectionProvider.ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public Task ConstructAsync(string listName, string additionalInfo, int[] historyIDs, bool onlyReadHistory, string searchValue, bool forceFlatList, CancellationToken cancellationToken = null)
    parameters:
    - id: listName
      type: System.String
    - id: additionalInfo
      type: System.String
    - id: historyIDs
      type: System.Int32[]
    - id: onlyReadHistory
      type: System.Boolean
    - id: searchValue
      type: System.String
    - id: forceFlatList
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function ConstructAsync(listName As String, additionalInfo As String, historyIDs As Integer(), onlyReadHistory As Boolean, searchValue As String, forceFlatList As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  nameWithType.vb: ListWithNoSelectionProvider.ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  name.vb: ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync(System.Threading.CancellationToken)
  id: GetHistoryItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: GetHistoryItemsAsync(CancellationToken)
  nameWithType: ListWithNoSelectionProvider.GetHistoryItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public Task<List<ISoListItem>> GetHistoryItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}
    content.vb: Public Function GetHistoryItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of ISoListItem))
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems
  commentId: M:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems
  id: ClearHistoryItems
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: ClearHistoryItems()
  nameWithType: ListWithNoSelectionProvider.ClearHistoryItems()
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public void ClearHistoryItems()
    content.vb: Public Sub ClearHistoryItems
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems*
  implements:
  - SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync(System.Threading.CancellationToken)
  id: GetRootItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: GetRootItemsAsync(CancellationToken)
  nameWithType: ListWithNoSelectionProvider.GetRootItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public Task<List<ISoListItem>> GetRootItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}
    content.vb: Public Function GetRootItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of ISoListItem))
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync(System.Threading.CancellationToken)
  id: GetHeadingItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: GetHeadingItemsAsync(CancellationToken)
  nameWithType: ListWithNoSelectionProvider.GetHeadingItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public Task<List<ISoListHeading>> GetHeadingItemsAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}}
    content.vb: Public Function GetHeadingItemsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of List(Of ISoListHeading))
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync*
  implements:
  - SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.#ctor
  commentId: M:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: ListWithNoSelectionProvider()
  nameWithType: ListWithNoSelectionProvider.ListWithNoSelectionProvider()
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ListWithNoSelectionProvider()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public ListWithNoSelectionProvider()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo
  id: HistoryInfo
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: HistoryInfo
  nameWithType: ListWithNoSelectionProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public HistoryInfo HistoryInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.HistoryInfo
    content.vb: Public ReadOnly Property HistoryInfo As HistoryInfo
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo*
  implements:
  - SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists
  commentId: P:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists
  id: SupportedLists
  parent: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
  langs:
  - csharp
  - vb
  name: SupportedLists
  nameWithType: ListWithNoSelectionProvider.SupportedLists
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Lists
  syntax:
    content: public HistoryInfo[] SupportedLists { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Lists.HistoryInfo[]
    content.vb: Public ReadOnly Property SupportedLists As HistoryInfo()
  overload: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists*
  implements:
  - SuperOffice.CRM.Lists.IDynamicMDOProvider.SupportedLists
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.IDynamicMDOProvider
  commentId: T:SuperOffice.CRM.Lists.IDynamicMDOProvider
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: IDynamicMDOProvider
  nameWithType: IDynamicMDOProvider
  fullName: SuperOffice.CRM.Lists.IDynamicMDOProvider
- uid: SuperOffice.CRM.Lists.ISoListProvider
  commentId: T:SuperOffice.CRM.Lists.ISoListProvider
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoListProvider
  nameWithType: ISoListProvider
  fullName: SuperOffice.CRM.Lists.ISoListProvider
- uid: SuperOffice.CRM.Lists.ISoList
  commentId: T:SuperOffice.CRM.Lists.ISoList
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: ISoList
  nameWithType: ISoList
  fullName: SuperOffice.CRM.Lists.ISoList
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ListWithNoSelectionProvider, To>()
  nameWithType: EnumUtil.MapEnums<ListWithNoSelectionProvider, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ListWithNoSelectionProvider, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To)()
  name.vb: MapEnums(Of ListWithNoSelectionProvider, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ListWithNoSelectionProvider, To>
    nameWithType: EnumUtil.MapEnums<ListWithNoSelectionProvider, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ListWithNoSelectionProvider, To)
    nameWithType: EnumUtil.MapEnums(Of ListWithNoSelectionProvider, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Lists.ListWithNoSelectionProvider)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ListWithNoSelectionProvider>(ListWithNoSelectionProvider)
  nameWithType: ObjectExtensions.AssignByReflection<ListWithNoSelectionProvider>(ListWithNoSelectionProvider)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Lists.ListWithNoSelectionProvider>(SuperOffice.CRM.Lists.ListWithNoSelectionProvider)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ListWithNoSelectionProvider)(ListWithNoSelectionProvider)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider)(SuperOffice.CRM.Lists.ListWithNoSelectionProvider)
  name.vb: AssignByReflection(Of ListWithNoSelectionProvider)(ListWithNoSelectionProvider)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ListWithNoSelectionProvider>
    nameWithType: ObjectExtensions.AssignByReflection<ListWithNoSelectionProvider>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Lists.ListWithNoSelectionProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
    name: ListWithNoSelectionProvider
    nameWithType: ListWithNoSelectionProvider
    fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ListWithNoSelectionProvider)
    nameWithType: ObjectExtensions.AssignByReflection(Of ListWithNoSelectionProvider)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
    name: ListWithNoSelectionProvider
    nameWithType: ListWithNoSelectionProvider
    fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ListWithNoSelectionProvider>()
  nameWithType: ObjectExtensions.GraphCopy<ListWithNoSelectionProvider>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Lists.ListWithNoSelectionProvider>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ListWithNoSelectionProvider)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider)()
  name.vb: GraphCopy(Of ListWithNoSelectionProvider)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ListWithNoSelectionProvider>
    nameWithType: ObjectExtensions.GraphCopy<ListWithNoSelectionProvider>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Lists.ListWithNoSelectionProvider>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ListWithNoSelectionProvider)
    nameWithType: ObjectExtensions.GraphCopy(Of ListWithNoSelectionProvider)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ListWithNoSelectionProvider, To>()
  nameWithType: Converters.MapEnums<ListWithNoSelectionProvider, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To>()
  nameWithType.vb: Converters.MapEnums(Of ListWithNoSelectionProvider, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To)()
  name.vb: MapEnums(Of ListWithNoSelectionProvider, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ListWithNoSelectionProvider, To>
    nameWithType: Converters.MapEnums<ListWithNoSelectionProvider, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ListWithNoSelectionProvider, To)
    nameWithType: Converters.MapEnums(Of ListWithNoSelectionProvider, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Lists.ListWithNoSelectionProvider, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync
  isExternal: true
  name: ConstructAsync
  nameWithType: ListWithNoSelectionProvider.ConstructAsync
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ConstructAsync
- uid: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoListProvider
  isExternal: true
  name: ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  nameWithType: ISoListProvider.ConstructAsync(String, String, Int32[], Boolean, String, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String, System.String, System.Int32[], System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: ISoListProvider.ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String, System.String, System.Int32(), System.Boolean, System.String, System.Boolean, System.Threading.CancellationToken)
  name.vb: ConstructAsync(String, String, Int32(), Boolean, String, Boolean, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
    name: ConstructAsync
    nameWithType: ISoListProvider.ConstructAsync
    fullName: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync(System.String,System.String,System.Int32[],System.Boolean,System.String,System.Boolean,System.Threading.CancellationToken)
    name: ConstructAsync
    nameWithType: ISoListProvider.ConstructAsync
    fullName: SuperOffice.CRM.Lists.ISoListProvider.ConstructAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync
  isExternal: true
  name: GetHistoryItemsAsync
  nameWithType: ListWithNoSelectionProvider.GetHistoryItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHistoryItemsAsync
- uid: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: GetHistoryItemsAsync(CancellationToken)
  nameWithType: ISoList.GetHistoryItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
    name: GetHistoryItemsAsync
    nameWithType: ISoList.GetHistoryItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync(System.Threading.CancellationToken)
    name: GetHistoryItemsAsync
    nameWithType: ISoList.GetHistoryItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHistoryItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListItem}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ISoListItem>>
  nameWithType: Task<List<ISoListItem>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListItem>>
  nameWithType.vb: Task(Of List(Of ISoListItem))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListItem))
  name.vb: Task(Of List(Of ISoListItem))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListItem
    name: ISoListItem
    nameWithType: ISoListItem
    fullName: SuperOffice.CRM.Lists.ISoListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems
  isExternal: true
  name: ClearHistoryItems
  nameWithType: ListWithNoSelectionProvider.ClearHistoryItems
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ClearHistoryItems
- uid: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
  commentId: M:SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: ClearHistoryItems()
  nameWithType: ISoList.ClearHistoryItems()
  fullName: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    name: ClearHistoryItems
    nameWithType: ISoList.ClearHistoryItems
    fullName: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    name: ClearHistoryItems
    nameWithType: ISoList.ClearHistoryItems
    fullName: SuperOffice.CRM.Lists.ISoList.ClearHistoryItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync
  isExternal: true
  name: GetRootItemsAsync
  nameWithType: ListWithNoSelectionProvider.GetRootItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetRootItemsAsync
- uid: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: GetRootItemsAsync(CancellationToken)
  nameWithType: ISoList.GetRootItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
    name: GetRootItemsAsync
    nameWithType: ISoList.GetRootItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync(System.Threading.CancellationToken)
    name: GetRootItemsAsync
    nameWithType: ISoList.GetRootItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetRootItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync
  isExternal: true
  name: GetHeadingItemsAsync
  nameWithType: ListWithNoSelectionProvider.GetHeadingItemsAsync
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.GetHeadingItemsAsync
- uid: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ISoList
  isExternal: true
  name: GetHeadingItemsAsync(CancellationToken)
  nameWithType: ISoList.GetHeadingItemsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
    name: GetHeadingItemsAsync
    nameWithType: ISoList.GetHeadingItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync(System.Threading.CancellationToken)
    name: GetHeadingItemsAsync
    nameWithType: ISoList.GetHeadingItemsAsync
    fullName: SuperOffice.CRM.Lists.ISoList.GetHeadingItemsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.List{SuperOffice.CRM.Lists.ISoListHeading}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<List<ISoListHeading>>
  nameWithType: Task<List<ISoListHeading>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.List<SuperOffice.CRM.Lists.ISoListHeading>>
  nameWithType.vb: Task(Of List(Of ISoListHeading))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.List(Of SuperOffice.CRM.Lists.ISoListHeading))
  name.vb: Task(Of List(Of ISoListHeading))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Lists.ISoListHeading
    name: ISoListHeading
    nameWithType: ISoListHeading
    fullName: SuperOffice.CRM.Lists.ISoListHeading
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Lists.ISoListHeading
    name: ISoListHeading
    nameWithType: ISoListHeading
    fullName: SuperOffice.CRM.Lists.ISoListHeading
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.#ctor*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.#ctor
  isExternal: true
  name: ListWithNoSelectionProvider
  nameWithType: ListWithNoSelectionProvider.ListWithNoSelectionProvider
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.ListWithNoSelectionProvider
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo
  isExternal: true
  name: HistoryInfo
  nameWithType: ListWithNoSelectionProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.HistoryInfo
- uid: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  commentId: P:SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
  parent: SuperOffice.CRM.Lists.ISoListProvider
  isExternal: true
  name: HistoryInfo
  nameWithType: ISoListProvider.HistoryInfo
  fullName: SuperOffice.CRM.Lists.ISoListProvider.HistoryInfo
- uid: SuperOffice.CRM.Lists.HistoryInfo
  commentId: T:SuperOffice.CRM.Lists.HistoryInfo
  parent: SuperOffice.CRM.Lists
  isExternal: true
  name: HistoryInfo
  nameWithType: HistoryInfo
  fullName: SuperOffice.CRM.Lists.HistoryInfo
- uid: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists*
  commentId: Overload:SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists
  isExternal: true
  name: SupportedLists
  nameWithType: ListWithNoSelectionProvider.SupportedLists
  fullName: SuperOffice.CRM.Lists.ListWithNoSelectionProvider.SupportedLists
- uid: SuperOffice.CRM.Lists.IDynamicMDOProvider.SupportedLists
  commentId: P:SuperOffice.CRM.Lists.IDynamicMDOProvider.SupportedLists
  parent: SuperOffice.CRM.Lists.IDynamicMDOProvider
  isExternal: true
  name: SupportedLists
  nameWithType: IDynamicMDOProvider.SupportedLists
  fullName: SuperOffice.CRM.Lists.IDynamicMDOProvider.SupportedLists
- uid: SuperOffice.CRM.Lists.HistoryInfo[]
  isExternal: true
  name: HistoryInfo[]
  nameWithType: HistoryInfo[]
  fullName: SuperOffice.CRM.Lists.HistoryInfo[]
  nameWithType.vb: HistoryInfo()
  fullName.vb: SuperOffice.CRM.Lists.HistoryInfo()
  name.vb: HistoryInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.HistoryInfo
    name: HistoryInfo
    nameWithType: HistoryInfo
    fullName: SuperOffice.CRM.Lists.HistoryInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.HistoryInfo
    name: HistoryInfo
    nameWithType: HistoryInfo
    fullName: SuperOffice.CRM.Lists.HistoryInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
