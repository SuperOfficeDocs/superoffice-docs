### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Mail.SoMailCredentials
  commentId: T:SuperOffice.CRM.Mail.SoMailCredentials
  id: SoMailCredentials
  parent: SuperOffice.CRM.Mail
  children:
  - SuperOffice.CRM.Mail.SoMailCredentials.#ctor
  - SuperOffice.CRM.Mail.SoMailCredentials.#ctor(System.String,System.String,System.String)
  - SuperOffice.CRM.Mail.SoMailCredentials.#ctor(System.String,System.String,System.String,System.Boolean)
  - SuperOffice.CRM.Mail.SoMailCredentials.Password
  - SuperOffice.CRM.Mail.SoMailCredentials.Server
  - SuperOffice.CRM.Mail.SoMailCredentials.Username
  - SuperOffice.CRM.Mail.SoMailCredentials.UseSSL
  langs:
  - csharp
  - vb
  name: SoMailCredentials
  nameWithType: SoMailCredentials
  fullName: SuperOffice.CRM.Mail.SoMailCredentials
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nInfo about server, username and password for e-mail authentication\n"
  syntax:
    content: public class SoMailCredentials
    content.vb: Public Class SoMailCredentials
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Mail.SoMailCredentials.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Mail.SoMailCredentials.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Mail.SoMailCredentials)
  - SuperOffice.CRM.Mail.SoMailCredentials.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Mail.SoMailCredentials.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Mail.SoMailCredentials.#ctor
  commentId: M:SuperOffice.CRM.Mail.SoMailCredentials.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: SoMailCredentials()
  nameWithType: SoMailCredentials.SoMailCredentials()
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.SoMailCredentials()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nDefault constructor\n"
  syntax:
    content: public SoMailCredentials()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Mail.SoMailCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Mail.SoMailCredentials.#ctor(System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Mail.SoMailCredentials.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: SoMailCredentials(String, String, String)
  nameWithType: SoMailCredentials.SoMailCredentials(String, String, String)
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.SoMailCredentials(System.String, System.String, System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nConstructor with default values\n"
  syntax:
    content: public SoMailCredentials(string server, string username, string password)
    parameters:
    - id: server
      type: System.String
      description: Mail server to connect to.  Port may be specified by adding &apos;:[port]&apos; to the server string.
    - id: username
      type: System.String
      description: Name to authenticate with
    - id: password
      type: System.String
      description: Password for username
    content.vb: Public Sub New(server As String, username As String, password As String)
  overload: SuperOffice.CRM.Mail.SoMailCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Mail.SoMailCredentials.#ctor(System.String,System.String,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Mail.SoMailCredentials.#ctor(System.String,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Boolean)'
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: SoMailCredentials(String, String, String, Boolean)
  nameWithType: SoMailCredentials.SoMailCredentials(String, String, String, Boolean)
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.SoMailCredentials(System.String, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nConstructor with default values\n"
  syntax:
    content: public SoMailCredentials(string server, string username, string password, bool useSSL)
    parameters:
    - id: server
      type: System.String
      description: '>Mail server to connect to.  Port may be specified by adding &apos;:[port]&apos; to the server string.'
    - id: username
      type: System.String
      description: Name to authenticate with
    - id: password
      type: System.String
      description: Password for username
    - id: useSSL
      type: System.Boolean
      description: Should we use ssl
    content.vb: Public Sub New(server As String, username As String, password As String, useSSL As Boolean)
  overload: SuperOffice.CRM.Mail.SoMailCredentials.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Mail.SoMailCredentials.Server
  commentId: P:SuperOffice.CRM.Mail.SoMailCredentials.Server
  id: Server
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: Server
  nameWithType: SoMailCredentials.Server
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.Server
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nMail server to connect to.  Port may be specified by adding &apos;:[port]&apos; to the server string.\n"
  syntax:
    content: public string Server { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Server As String
  overload: SuperOffice.CRM.Mail.SoMailCredentials.Server*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Mail.SoMailCredentials.Username
  commentId: P:SuperOffice.CRM.Mail.SoMailCredentials.Username
  id: Username
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: SoMailCredentials.Username
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.Username
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nName to authenticate with\n"
  syntax:
    content: public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Username As String
  overload: SuperOffice.CRM.Mail.SoMailCredentials.Username*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Mail.SoMailCredentials.Password
  commentId: P:SuperOffice.CRM.Mail.SoMailCredentials.Password
  id: Password
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: SoMailCredentials.Password
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.Password
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nPassword for Username\n"
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: SuperOffice.CRM.Mail.SoMailCredentials.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Mail.SoMailCredentials.UseSSL
  commentId: P:SuperOffice.CRM.Mail.SoMailCredentials.UseSSL
  id: UseSSL
  parent: SuperOffice.CRM.Mail.SoMailCredentials
  langs:
  - csharp
  - vb
  name: UseSSL
  nameWithType: SoMailCredentials.UseSSL
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.UseSSL
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Mail
  summary: "\nSecure connection\n"
  syntax:
    content: public bool UseSSL { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSSL As Boolean
  overload: SuperOffice.CRM.Mail.SoMailCredentials.UseSSL*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Mail
  commentId: N:SuperOffice.CRM.Mail
  isExternal: true
  name: SuperOffice.CRM.Mail
  nameWithType: SuperOffice.CRM.Mail
  fullName: SuperOffice.CRM.Mail
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Mail.SoMailCredentials.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoMailCredentials, To>()
  nameWithType: EnumUtil.MapEnums<SoMailCredentials, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Mail.SoMailCredentials, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoMailCredentials, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Mail.SoMailCredentials, To)()
  name.vb: MapEnums(Of SoMailCredentials, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoMailCredentials, To>
    nameWithType: EnumUtil.MapEnums<SoMailCredentials, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Mail.SoMailCredentials, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoMailCredentials, To)
    nameWithType: EnumUtil.MapEnums(Of SoMailCredentials, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Mail.SoMailCredentials, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Mail.SoMailCredentials.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Mail.SoMailCredentials)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<SoMailCredentials>(SoMailCredentials)
  nameWithType: ObjectExtensions.AssignByReflection<SoMailCredentials>(SoMailCredentials)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Mail.SoMailCredentials>(SuperOffice.CRM.Mail.SoMailCredentials)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SoMailCredentials)(SoMailCredentials)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Mail.SoMailCredentials)(SuperOffice.CRM.Mail.SoMailCredentials)
  name.vb: AssignByReflection(Of SoMailCredentials)(SoMailCredentials)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<SoMailCredentials>
    nameWithType: ObjectExtensions.AssignByReflection<SoMailCredentials>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Mail.SoMailCredentials>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Mail.SoMailCredentials
    name: SoMailCredentials
    nameWithType: SoMailCredentials
    fullName: SuperOffice.CRM.Mail.SoMailCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of SoMailCredentials)
    nameWithType: ObjectExtensions.AssignByReflection(Of SoMailCredentials)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Mail.SoMailCredentials)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Mail.SoMailCredentials
    name: SoMailCredentials
    nameWithType: SoMailCredentials
    fullName: SuperOffice.CRM.Mail.SoMailCredentials
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Mail.SoMailCredentials.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<SoMailCredentials>()
  nameWithType: ObjectExtensions.GraphCopy<SoMailCredentials>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Mail.SoMailCredentials>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SoMailCredentials)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Mail.SoMailCredentials)()
  name.vb: GraphCopy(Of SoMailCredentials)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<SoMailCredentials>
    nameWithType: ObjectExtensions.GraphCopy<SoMailCredentials>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Mail.SoMailCredentials>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of SoMailCredentials)
    nameWithType: ObjectExtensions.GraphCopy(Of SoMailCredentials)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Mail.SoMailCredentials)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Mail.SoMailCredentials.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoMailCredentials, To>()
  nameWithType: Converters.MapEnums<SoMailCredentials, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Mail.SoMailCredentials, To>()
  nameWithType.vb: Converters.MapEnums(Of SoMailCredentials, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Mail.SoMailCredentials, To)()
  name.vb: MapEnums(Of SoMailCredentials, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoMailCredentials, To>
    nameWithType: Converters.MapEnums<SoMailCredentials, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Mail.SoMailCredentials, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoMailCredentials, To)
    nameWithType: Converters.MapEnums(Of SoMailCredentials, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Mail.SoMailCredentials, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Mail.SoMailCredentials.#ctor*
  commentId: Overload:SuperOffice.CRM.Mail.SoMailCredentials.#ctor
  isExternal: true
  name: SoMailCredentials
  nameWithType: SoMailCredentials.SoMailCredentials
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.SoMailCredentials
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Mail.SoMailCredentials.Server*
  commentId: Overload:SuperOffice.CRM.Mail.SoMailCredentials.Server
  isExternal: true
  name: Server
  nameWithType: SoMailCredentials.Server
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.Server
- uid: SuperOffice.CRM.Mail.SoMailCredentials.Username*
  commentId: Overload:SuperOffice.CRM.Mail.SoMailCredentials.Username
  isExternal: true
  name: Username
  nameWithType: SoMailCredentials.Username
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.Username
- uid: SuperOffice.CRM.Mail.SoMailCredentials.Password*
  commentId: Overload:SuperOffice.CRM.Mail.SoMailCredentials.Password
  isExternal: true
  name: Password
  nameWithType: SoMailCredentials.Password
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.Password
- uid: SuperOffice.CRM.Mail.SoMailCredentials.UseSSL*
  commentId: Overload:SuperOffice.CRM.Mail.SoMailCredentials.UseSSL
  isExternal: true
  name: UseSSL
  nameWithType: SoMailCredentials.UseSSL
  fullName: SuperOffice.CRM.Mail.SoMailCredentials.UseSSL
