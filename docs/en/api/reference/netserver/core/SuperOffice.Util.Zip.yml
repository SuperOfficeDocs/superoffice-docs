### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.Zip
  commentId: T:SuperOffice.Util.Zip
  id: Zip
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.Zip.#ctor(System.IO.Stream)
  - SuperOffice.Util.Zip.#ctor(System.IO.Stream,SuperOffice.Util.ZipType)
  - SuperOffice.Util.Zip.GetCompressedStream
  - SuperOffice.Util.Zip.GetDecompressedStream
  - SuperOffice.Util.Zip.IsValidZip
  - SuperOffice.Util.Zip.ZipType
  langs:
  - csharp
  - vb
  name: Zip
  nameWithType: Zip
  fullName: SuperOffice.Util.Zip
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Class to encrypt/decrypt data
  example: []
  syntax:
    content: public class Zip
    content.vb: Public Class Zip
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Util.Zip.EnumUtil.MapEnums``2
  - SuperOffice.Util.Zip.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Util.Zip.#ctor(System.IO.Stream)
  commentId: M:SuperOffice.Util.Zip.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: SuperOffice.Util.Zip
  langs:
  - csharp
  - vb
  name: Zip(Stream)
  nameWithType: Zip.Zip(Stream)
  fullName: SuperOffice.Util.Zip.Zip(System.IO.Stream)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Constructor with a stream to compress/decompress.

    The type of zip algorithm will be attempted detected. If none is detected, default will be GZip
  example: []
  syntax:
    content: public Zip(Stream inputStream)
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: ''
    content.vb: Public Sub New(inputStream As Stream)
  overload: SuperOffice.Util.Zip.#ctor*
  nameWithType.vb: Zip.New(Stream)
  fullName.vb: SuperOffice.Util.Zip.New(System.IO.Stream)
  name.vb: New(Stream)
- uid: SuperOffice.Util.Zip.#ctor(System.IO.Stream,SuperOffice.Util.ZipType)
  commentId: M:SuperOffice.Util.Zip.#ctor(System.IO.Stream,SuperOffice.Util.ZipType)
  id: '#ctor(System.IO.Stream,SuperOffice.Util.ZipType)'
  parent: SuperOffice.Util.Zip
  langs:
  - csharp
  - vb
  name: Zip(Stream, ZipType)
  nameWithType: Zip.Zip(Stream, ZipType)
  fullName: SuperOffice.Util.Zip.Zip(System.IO.Stream, SuperOffice.Util.ZipType)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Constructor with a stream to compress/decompress, and a compression type
  example: []
  syntax:
    content: public Zip(Stream inputStream, ZipType type)
    parameters:
    - id: inputStream
      type: System.IO.Stream
      description: ''
    - id: type
      type: SuperOffice.Util.ZipType
      description: ''
    content.vb: Public Sub New(inputStream As Stream, type As ZipType)
  overload: SuperOffice.Util.Zip.#ctor*
  nameWithType.vb: Zip.New(Stream, ZipType)
  fullName.vb: SuperOffice.Util.Zip.New(System.IO.Stream, SuperOffice.Util.ZipType)
  name.vb: New(Stream, ZipType)
- uid: SuperOffice.Util.Zip.GetDecompressedStream
  commentId: M:SuperOffice.Util.Zip.GetDecompressedStream
  id: GetDecompressedStream
  parent: SuperOffice.Util.Zip
  langs:
  - csharp
  - vb
  name: GetDecompressedStream()
  nameWithType: Zip.GetDecompressedStream()
  fullName: SuperOffice.Util.Zip.GetDecompressedStream()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Return content of input uncompressed
  example: []
  syntax:
    content: public Stream GetDecompressedStream()
    return:
      type: System.IO.Stream
      description: ''
    content.vb: Public Function GetDecompressedStream() As Stream
  overload: SuperOffice.Util.Zip.GetDecompressedStream*
- uid: SuperOffice.Util.Zip.GetCompressedStream
  commentId: M:SuperOffice.Util.Zip.GetCompressedStream
  id: GetCompressedStream
  parent: SuperOffice.Util.Zip
  langs:
  - csharp
  - vb
  name: GetCompressedStream()
  nameWithType: Zip.GetCompressedStream()
  fullName: SuperOffice.Util.Zip.GetCompressedStream()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Return content of input compressed
  example: []
  syntax:
    content: public Stream GetCompressedStream()
    return:
      type: System.IO.Stream
      description: ''
    content.vb: Public Function GetCompressedStream() As Stream
  overload: SuperOffice.Util.Zip.GetCompressedStream*
- uid: SuperOffice.Util.Zip.ZipType
  commentId: P:SuperOffice.Util.Zip.ZipType
  id: ZipType
  parent: SuperOffice.Util.Zip
  langs:
  - csharp
  - vb
  name: ZipType
  nameWithType: Zip.ZipType
  fullName: SuperOffice.Util.Zip.ZipType
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Type of zip compression to use
  example: []
  syntax:
    content: public ZipType ZipType { get; set; }
    parameters: []
    return:
      type: SuperOffice.Util.ZipType
    content.vb: Public Property ZipType As ZipType
  overload: SuperOffice.Util.Zip.ZipType*
- uid: SuperOffice.Util.Zip.IsValidZip
  commentId: P:SuperOffice.Util.Zip.IsValidZip
  id: IsValidZip
  parent: SuperOffice.Util.Zip
  langs:
  - csharp
  - vb
  name: IsValidZip
  nameWithType: Zip.IsValidZip
  fullName: SuperOffice.Util.Zip.IsValidZip
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Verify if input stream is a valid zip entry
  example: []
  syntax:
    content: public bool IsValidZip { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValidZip As Boolean
  overload: SuperOffice.Util.Zip.IsValidZip*
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Util.Zip.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<Zip, To>(Zip)
  nameWithType: EnumUtil.MapEnums<Zip, To>(Zip)
  fullName: EnumUtil.MapEnums<SuperOffice.Util.Zip, To>(SuperOffice.Util.Zip)
  nameWithType.vb: EnumUtil.MapEnums(Of Zip, To)(Zip)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Util.Zip, To)(SuperOffice.Util.Zip)
  name.vb: MapEnums(Of Zip, To)(Zip)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Util.Zip)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Util.Zip)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: )
- uid: SuperOffice.Util.Zip.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<Zip, To>(Zip)
  nameWithType: Converters.MapEnums<Zip, To>(Zip)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Util.Zip, To>(SuperOffice.Util.Zip)
  nameWithType.vb: Converters.MapEnums(Of Zip, To)(Zip)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Util.Zip, To)(SuperOffice.Util.Zip)
  name.vb: MapEnums(Of Zip, To)(Zip)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Util.Zip)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Util.Zip)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Util.Zip
    name: Zip
    isExternal: true
    href: SuperOffice.Util.Zip.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util.Zip.#ctor*
  commentId: Overload:SuperOffice.Util.Zip.#ctor
  isExternal: true
  href: SuperOffice.Util.Zip.html#SuperOffice_Util_Zip__ctor_System_IO_Stream_
  name: Zip
  nameWithType: Zip.Zip
  fullName: SuperOffice.Util.Zip.Zip
  nameWithType.vb: Zip.New
  fullName.vb: SuperOffice.Util.Zip.New
  name.vb: New
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.Util.ZipType
  commentId: T:SuperOffice.Util.ZipType
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ZipType.html
  name: ZipType
  nameWithType: ZipType
  fullName: SuperOffice.Util.ZipType
- uid: SuperOffice.Util.Zip.GetDecompressedStream*
  commentId: Overload:SuperOffice.Util.Zip.GetDecompressedStream
  isExternal: true
  href: SuperOffice.Util.Zip.html#SuperOffice_Util_Zip_GetDecompressedStream
  name: GetDecompressedStream
  nameWithType: Zip.GetDecompressedStream
  fullName: SuperOffice.Util.Zip.GetDecompressedStream
- uid: SuperOffice.Util.Zip.GetCompressedStream*
  commentId: Overload:SuperOffice.Util.Zip.GetCompressedStream
  isExternal: true
  href: SuperOffice.Util.Zip.html#SuperOffice_Util_Zip_GetCompressedStream
  name: GetCompressedStream
  nameWithType: Zip.GetCompressedStream
  fullName: SuperOffice.Util.Zip.GetCompressedStream
- uid: SuperOffice.Util.Zip.ZipType*
  commentId: Overload:SuperOffice.Util.Zip.ZipType
  isExternal: true
  href: SuperOffice.Util.Zip.html#SuperOffice_Util_Zip_ZipType
  name: ZipType
  nameWithType: Zip.ZipType
  fullName: SuperOffice.Util.Zip.ZipType
- uid: SuperOffice.Util.Zip.IsValidZip*
  commentId: Overload:SuperOffice.Util.Zip.IsValidZip
  isExternal: true
  href: SuperOffice.Util.Zip.html#SuperOffice_Util_Zip_IsValidZip
  name: IsValidZip
  nameWithType: Zip.IsValidZip
  fullName: SuperOffice.Util.Zip.IsValidZip
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
