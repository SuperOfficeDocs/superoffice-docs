### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.TemporaryDbLock
  commentId: T:SuperOffice.CRM.TemporaryDbLock
  id: TemporaryDbLock
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.TemporaryDbLock.#ctor(System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.TemporaryDbLock.Dispose
  - SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks
  - SuperOffice.CRM.TemporaryDbLock.IsLocked
  - SuperOffice.CRM.TemporaryDbLock.TryUpdate
  - SuperOffice.CRM.TemporaryDbLock.Update
  langs:
  - csharp
  - vb
  name: TemporaryDbLock
  nameWithType: TemporaryDbLock
  fullName: SuperOffice.CRM.TemporaryDbLock
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: "\nLocking class for implementing concurrency of relatively quick (within one request) run time operations.\nusing (var lock = new TemporaryDbLock(tableNumber, key)\n{\nif (!lock.IsValid)\nreturn; // You didn&apos;t get the lock, so return or continue. You _must_ check if you actually got the lock.\n\n// you have the lock, do stuff...\nlock.Update() // Will keep the lock alive, not timing out, while you work.\n....\n}\n"
  syntax:
    content: 'public sealed class TemporaryDbLock : Object, IDisposable'
    content.vb: >-
      Public NotInheritable Class TemporaryDbLock
          Inherits Object
          Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  extensionMethods:
  - SuperOffice.CRM.TemporaryDbLock.EnumUtil.MapEnums``2
  - SuperOffice.CRM.TemporaryDbLock.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.TemporaryDbLock.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.TemporaryDbLock.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: TemporaryDbLock(Int32, Int32, Int32)
  nameWithType: TemporaryDbLock.TemporaryDbLock(Int32, Int32, Int32)
  fullName: SuperOffice.CRM.TemporaryDbLock.TemporaryDbLock(System.Int32, System.Int32, System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: "\nDefault constructor.\n"
  syntax:
    content: public TemporaryDbLock(int tableNumber, int key, int seconds = 600)
    parameters:
    - id: tableNumber
      type: System.Int32
    - id: key
      type: System.Int32
    - id: seconds
      type: System.Int32
    content.vb: Public Sub New(tableNumber As Integer, key As Integer, seconds As Integer = 600)
  overload: SuperOffice.CRM.TemporaryDbLock.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.Update
  commentId: M:SuperOffice.CRM.TemporaryDbLock.Update
  id: Update
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: TemporaryDbLock.Update()
  fullName: SuperOffice.CRM.TemporaryDbLock.Update()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public void Update()
    content.vb: Public Sub Update
  overload: SuperOffice.CRM.TemporaryDbLock.Update*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.TryUpdate
  commentId: M:SuperOffice.CRM.TemporaryDbLock.TryUpdate
  id: TryUpdate
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: TryUpdate()
  nameWithType: TemporaryDbLock.TryUpdate()
  fullName: SuperOffice.CRM.TemporaryDbLock.TryUpdate()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public bool TryUpdate()
    return:
      type: System.Boolean
    content.vb: Public Function TryUpdate As Boolean
  overload: SuperOffice.CRM.TemporaryDbLock.TryUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.Dispose
  commentId: M:SuperOffice.CRM.TemporaryDbLock.Dispose
  id: Dispose
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TemporaryDbLock.Dispose()
  fullName: SuperOffice.CRM.TemporaryDbLock.Dispose()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: SuperOffice.CRM.TemporaryDbLock.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks
  commentId: M:SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks
  id: FlushAllTempDbLocks
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: FlushAllTempDbLocks()
  nameWithType: TemporaryDbLock.FlushAllTempDbLocks()
  fullName: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public static int FlushAllTempDbLocks()
    return:
      type: System.Int32
    content.vb: Public Shared Function FlushAllTempDbLocks As Integer
  overload: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TemporaryDbLock.IsLocked
  commentId: P:SuperOffice.CRM.TemporaryDbLock.IsLocked
  id: IsLocked
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: TemporaryDbLock.IsLocked
  fullName: SuperOffice.CRM.TemporaryDbLock.IsLocked
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: SuperOffice.CRM.TemporaryDbLock.IsLocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.TemporaryDbLock.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TemporaryDbLock, To>()
  nameWithType: EnumUtil.MapEnums<TemporaryDbLock, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TemporaryDbLock, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)()
  name.vb: MapEnums(Of TemporaryDbLock, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TemporaryDbLock, To>
    nameWithType: EnumUtil.MapEnums<TemporaryDbLock, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TemporaryDbLock, To)
    nameWithType: EnumUtil.MapEnums(Of TemporaryDbLock, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TemporaryDbLock.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TemporaryDbLock, To>()
  nameWithType: Converters.MapEnums<TemporaryDbLock, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>()
  nameWithType.vb: Converters.MapEnums(Of TemporaryDbLock, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)()
  name.vb: MapEnums(Of TemporaryDbLock, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TemporaryDbLock, To>
    nameWithType: Converters.MapEnums<TemporaryDbLock, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TemporaryDbLock, To)
    nameWithType: Converters.MapEnums(Of TemporaryDbLock, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.TemporaryDbLock.#ctor*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.#ctor
  isExternal: true
  name: TemporaryDbLock
  nameWithType: TemporaryDbLock.TemporaryDbLock
  fullName: SuperOffice.CRM.TemporaryDbLock.TemporaryDbLock
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.TemporaryDbLock.Update*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.Update
  isExternal: true
  name: Update
  nameWithType: TemporaryDbLock.Update
  fullName: SuperOffice.CRM.TemporaryDbLock.Update
- uid: SuperOffice.CRM.TemporaryDbLock.TryUpdate*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.TryUpdate
  isExternal: true
  name: TryUpdate
  nameWithType: TemporaryDbLock.TryUpdate
  fullName: SuperOffice.CRM.TemporaryDbLock.TryUpdate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.TemporaryDbLock.Dispose*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.Dispose
  isExternal: true
  name: Dispose
  nameWithType: TemporaryDbLock.Dispose
  fullName: SuperOffice.CRM.TemporaryDbLock.Dispose
- uid: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks
  isExternal: true
  name: FlushAllTempDbLocks
  nameWithType: TemporaryDbLock.FlushAllTempDbLocks
  fullName: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocks
- uid: SuperOffice.CRM.TemporaryDbLock.IsLocked*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.IsLocked
  isExternal: true
  name: IsLocked
  nameWithType: TemporaryDbLock.IsLocked
  fullName: SuperOffice.CRM.TemporaryDbLock.IsLocked
