### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.TemporaryDbLock
  commentId: T:SuperOffice.CRM.TemporaryDbLock
  id: TemporaryDbLock
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.TemporaryDbLock.CreateAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.TemporaryDbLock.DisposeAsync
  - SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.TemporaryDbLock.IsLocked
  - SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync
  - SuperOffice.CRM.TemporaryDbLock.UpdateAsync
  langs:
  - csharp
  - vb
  name: TemporaryDbLock
  nameWithType: TemporaryDbLock
  fullName: SuperOffice.CRM.TemporaryDbLock
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: "\nLocking class for implementing concurrency of relatively quick (within one request) run time operations.\nusing (var lock = new TemporaryDbLock(tableNumber, key)\n{\nif (!lock.IsValid)\nreturn; // You didn&apos;t get the lock, so return or continue. You _must_ check if you actually got the lock.\n\n// you have the lock, do stuff...\nlock.Update() // Will keep the lock alive, not timing out, while you work.\n....\n}\n"
  syntax:
    content: 'public sealed class TemporaryDbLock : Object, IAsyncDisposable'
    content.vb: >-
      Public NotInheritable Class TemporaryDbLock
          Inherits Object
          Implements IAsyncDisposable
  inheritance:
  - System.Object
  implements:
  - System.IAsyncDisposable
  extensionMethods:
  - SuperOffice.CRM.TemporaryDbLock.EnumUtil.MapEnums``2
  - SuperOffice.CRM.TemporaryDbLock.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.TemporaryDbLock.CreateAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TemporaryDbLock.CreateAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CreateAsync(System.Int32,System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: CreateAsync(Int32, Int32, Int32, CancellationToken)
  nameWithType: TemporaryDbLock.CreateAsync(Int32, Int32, Int32, CancellationToken)
  fullName: SuperOffice.CRM.TemporaryDbLock.CreateAsync(System.Int32, System.Int32, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public static Task<TemporaryDbLock> CreateAsync(int tableNumber, int key, int seconds = 600, CancellationToken cancellationToken = null)
    parameters:
    - id: tableNumber
      type: System.Int32
    - id: key
      type: System.Int32
    - id: seconds
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.TemporaryDbLock}
    content.vb: Public Shared Function CreateAsync(tableNumber As Integer, key As Integer, seconds As Integer = 600, cancellationToken As CancellationToken = Nothing) As Task(Of TemporaryDbLock)
  overload: SuperOffice.CRM.TemporaryDbLock.CreateAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TemporaryDbLock.UpdateAsync
  commentId: M:SuperOffice.CRM.TemporaryDbLock.UpdateAsync
  id: UpdateAsync
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: UpdateAsync()
  nameWithType: TemporaryDbLock.UpdateAsync()
  fullName: SuperOffice.CRM.TemporaryDbLock.UpdateAsync()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public Task UpdateAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function UpdateAsync As Task
  overload: SuperOffice.CRM.TemporaryDbLock.UpdateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync
  commentId: M:SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync
  id: TryUpdateAsync
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: TryUpdateAsync()
  nameWithType: TemporaryDbLock.TryUpdateAsync()
  fullName: SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public Task<bool> TryUpdateAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function TryUpdateAsync As Task(Of Boolean)
  overload: SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.DisposeAsync
  commentId: M:SuperOffice.CRM.TemporaryDbLock.DisposeAsync
  id: DisposeAsync
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: DisposeAsync()
  nameWithType: TemporaryDbLock.DisposeAsync()
  fullName: SuperOffice.CRM.TemporaryDbLock.DisposeAsync()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public ValueTask DisposeAsync()
    return:
      type: System.Threading.Tasks.ValueTask
    content.vb: Public Function DisposeAsync As ValueTask
  overload: SuperOffice.CRM.TemporaryDbLock.DisposeAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync(System.Threading.CancellationToken)
  id: FlushAllTempDbLocksAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: FlushAllTempDbLocksAsync(CancellationToken)
  nameWithType: TemporaryDbLock.FlushAllTempDbLocksAsync(CancellationToken)
  fullName: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public static Task<int> FlushAllTempDbLocksAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Shared Function FlushAllTempDbLocksAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.TemporaryDbLock.IsLocked
  commentId: P:SuperOffice.CRM.TemporaryDbLock.IsLocked
  id: IsLocked
  parent: SuperOffice.CRM.TemporaryDbLock
  langs:
  - csharp
  - vb
  name: IsLocked
  nameWithType: TemporaryDbLock.IsLocked
  fullName: SuperOffice.CRM.TemporaryDbLock.IsLocked
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public bool IsLocked { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocked As Boolean
  overload: SuperOffice.CRM.TemporaryDbLock.IsLocked*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IAsyncDisposable
  isExternal: true
  name: IAsyncDisposable
  nameWithType: IAsyncDisposable
  fullName: System.IAsyncDisposable
- uid: SuperOffice.CRM.TemporaryDbLock.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TemporaryDbLock, To>()
  nameWithType: EnumUtil.MapEnums<TemporaryDbLock, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TemporaryDbLock, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)()
  name.vb: MapEnums(Of TemporaryDbLock, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TemporaryDbLock, To>
    nameWithType: EnumUtil.MapEnums<TemporaryDbLock, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TemporaryDbLock, To)
    nameWithType: EnumUtil.MapEnums(Of TemporaryDbLock, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TemporaryDbLock.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TemporaryDbLock, To>()
  nameWithType: Converters.MapEnums<TemporaryDbLock, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>()
  nameWithType.vb: Converters.MapEnums(Of TemporaryDbLock, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)()
  name.vb: MapEnums(Of TemporaryDbLock, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TemporaryDbLock, To>
    nameWithType: Converters.MapEnums<TemporaryDbLock, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.TemporaryDbLock, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TemporaryDbLock, To)
    nameWithType: Converters.MapEnums(Of TemporaryDbLock, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.TemporaryDbLock, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.TemporaryDbLock.CreateAsync*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.CreateAsync
  isExternal: true
  name: CreateAsync
  nameWithType: TemporaryDbLock.CreateAsync
  fullName: SuperOffice.CRM.TemporaryDbLock.CreateAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.TemporaryDbLock}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.TemporaryDbLock}'
  definition: System.Threading.Tasks.Task`1
  name: Task<TemporaryDbLock>
  nameWithType: Task<TemporaryDbLock>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.TemporaryDbLock>
  nameWithType.vb: Task(Of TemporaryDbLock)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.TemporaryDbLock)
  name.vb: Task(Of TemporaryDbLock)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.TemporaryDbLock
    name: TemporaryDbLock
    nameWithType: TemporaryDbLock
    fullName: SuperOffice.CRM.TemporaryDbLock
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.TemporaryDbLock
    name: TemporaryDbLock
    nameWithType: TemporaryDbLock
    fullName: SuperOffice.CRM.TemporaryDbLock
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TemporaryDbLock.UpdateAsync*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.UpdateAsync
  isExternal: true
  name: UpdateAsync
  nameWithType: TemporaryDbLock.UpdateAsync
  fullName: SuperOffice.CRM.TemporaryDbLock.UpdateAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync
  isExternal: true
  name: TryUpdateAsync
  nameWithType: TemporaryDbLock.TryUpdateAsync
  fullName: SuperOffice.CRM.TemporaryDbLock.TryUpdateAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TemporaryDbLock.DisposeAsync*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.DisposeAsync
  isExternal: true
  name: DisposeAsync
  nameWithType: TemporaryDbLock.DisposeAsync
  fullName: SuperOffice.CRM.TemporaryDbLock.DisposeAsync
- uid: System.Threading.Tasks.ValueTask
  isExternal: true
  name: ValueTask
  nameWithType: ValueTask
  fullName: System.Threading.Tasks.ValueTask
- uid: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync
  isExternal: true
  name: FlushAllTempDbLocksAsync
  nameWithType: TemporaryDbLock.FlushAllTempDbLocksAsync
  fullName: SuperOffice.CRM.TemporaryDbLock.FlushAllTempDbLocksAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: '!:System.Threading.Tasks.Task{System.Int32}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: System.Threading.Tasks.Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.TemporaryDbLock.IsLocked*
  commentId: Overload:SuperOffice.CRM.TemporaryDbLock.IsLocked
  isExternal: true
  name: IsLocked
  nameWithType: TemporaryDbLock.IsLocked
  fullName: SuperOffice.CRM.TemporaryDbLock.IsLocked
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
