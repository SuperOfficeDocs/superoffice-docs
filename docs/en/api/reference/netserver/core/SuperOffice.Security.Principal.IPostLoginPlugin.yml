### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.IPostLoginPlugin
  commentId: T:SuperOffice.Security.Principal.IPostLoginPlugin
  id: IPostLoginPlugin
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri(System.String,System.String)
  - SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync(System.Threading.CancellationToken)
  - SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: IPostLoginPlugin
  nameWithType: IPostLoginPlugin
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: 'public interface IPostLoginPlugin : IPlugin'
    content.vb: >-
      Public Interface IPostLoginPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.Security.Principal.IPostLoginPlugin.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.IPostLoginPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync(System.Threading.CancellationToken)
  id: IsRequiredAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Security.Principal.IPostLoginPlugin
  langs:
  - csharp
  - vb
  name: IsRequiredAsync(CancellationToken)
  nameWithType: IPostLoginPlugin.IsRequiredAsync(CancellationToken)
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: Task<bool> IsRequiredAsync(CancellationToken cancellationToken = null)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Function IsRequiredAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync*
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri(System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri(System.String,System.String)
  id: GetEndpointUri(System.String,System.String)
  parent: SuperOffice.Security.Principal.IPostLoginPlugin
  langs:
  - csharp
  - vb
  name: GetEndpointUri(String, String)
  nameWithType: IPostLoginPlugin.GetEndpointUri(String, String)
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri(System.String, System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nObtain endpoint for external service where browser should be redirected\n"
  syntax:
    content: string GetEndpointUri(string callbackUri, string state)
    parameters:
    - id: callbackUri
      type: System.String
      description: contains uri back to LoginControllers POST endpoint, already encoded
    - id: state
      type: System.String
      description: Must be returned by process callback and is url encoded
    return:
      type: System.String
      description: url the browser can be redirected to
    content.vb: Function GetEndpointUri(callbackUri As String, state As String) As String
  overload: SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri*
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: ProcessCallback(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: SuperOffice.Security.Principal.IPostLoginPlugin
  langs:
  - csharp
  - vb
  name: ProcessCallback(String, Dictionary<String, String>)
  nameWithType: IPostLoginPlugin.ProcessCallback(String, Dictionary<String, String>)
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: "\nHandle payload and return state from external service\n"
  syntax:
    content: string ProcessCallback(string payload, Dictionary<string, string> args)
    parameters:
    - id: payload
      type: System.String
      description: Body from Http Post message from external service
    - id: args
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: url arguments
    return:
      type: System.String
      description: state as provided by GetEndpointUrl
    content.vb: Function ProcessCallback(payload As String, args As Dictionary(Of String, String)) As String
  overload: SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback*
  nameWithType.vb: IPostLoginPlugin.ProcessCallback(String, Dictionary(Of String, String))
  fullName.vb: SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: ProcessCallback(String, Dictionary(Of String, String))
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IPostLoginPlugin, To>()
  nameWithType: EnumUtil.MapEnums<IPostLoginPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.IPostLoginPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IPostLoginPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.IPostLoginPlugin, To)()
  name.vb: MapEnums(Of IPostLoginPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IPostLoginPlugin, To>
    nameWithType: EnumUtil.MapEnums<IPostLoginPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.IPostLoginPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IPostLoginPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of IPostLoginPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.IPostLoginPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IPostLoginPlugin, To>()
  nameWithType: Converters.MapEnums<IPostLoginPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.IPostLoginPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of IPostLoginPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.IPostLoginPlugin, To)()
  name.vb: MapEnums(Of IPostLoginPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IPostLoginPlugin, To>
    nameWithType: Converters.MapEnums<IPostLoginPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.IPostLoginPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IPostLoginPlugin, To)
    nameWithType: Converters.MapEnums(Of IPostLoginPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.IPostLoginPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync*
  commentId: Overload:SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync
  isExternal: true
  name: IsRequiredAsync
  nameWithType: IPostLoginPlugin.IsRequiredAsync
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin.IsRequiredAsync
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri*
  commentId: Overload:SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri
  isExternal: true
  name: GetEndpointUri
  nameWithType: IPostLoginPlugin.GetEndpointUri
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin.GetEndpointUri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback*
  commentId: Overload:SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback
  isExternal: true
  name: ProcessCallback
  nameWithType: IPostLoginPlugin.ProcessCallback
  fullName: SuperOffice.Security.Principal.IPostLoginPlugin.ProcessCallback
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.String}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
