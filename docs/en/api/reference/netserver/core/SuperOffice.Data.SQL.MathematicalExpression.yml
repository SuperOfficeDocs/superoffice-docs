### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.MathematicalExpression
  commentId: T:SuperOffice.Data.SQL.MathematicalExpression
  id: MathematicalExpression
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.FieldDataType,System.Int32)
  - SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.MathematicalExpression.Arguments
  - SuperOffice.Data.SQL.MathematicalExpression.GetMainField
  - SuperOffice.Data.SQL.MathematicalExpression.Left
  - SuperOffice.Data.SQL.MathematicalExpression.Right
  - SuperOffice.Data.SQL.MathematicalExpression.ToString
  - SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection
  - SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter)
  - SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue(SuperOffice.Data.SQL.Parameter,SuperOffice.Data.SQL.Parameter)
  - SuperOffice.Data.SQL.MathematicalExpression._args
  langs:
  - csharp
  - vb
  name: MathematicalExpression
  nameWithType: MathematicalExpression
  fullName: SuperOffice.Data.SQL.MathematicalExpression
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: The base-class for all mathematical expressions.
  example: []
  syntax:
    content: 'public abstract class MathematicalExpression : Argument, ICloneable'
    content.vb: Public MustInherit Class MathematicalExpression Inherits Argument Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.QueryElement
  - SuperOffice.Data.SQL.Argument
  derivedClasses:
  - SuperOffice.Data.SQL.Add
  - SuperOffice.Data.SQL.Divide
  - SuperOffice.Data.SQL.Greatest
  - SuperOffice.Data.SQL.Multiply
  - SuperOffice.Data.SQL.Subtract
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(System.String)
  - SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.IsNull
  - SuperOffice.Data.SQL.Argument.IsNotNull
  - SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[])
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[],System.Boolean)
  - SuperOffice.Data.SQL.Argument.GetSubElements
  - SuperOffice.Data.SQL.Argument.Alias
  - SuperOffice.Data.SQL.Argument.DataType
  - SuperOffice.Data.SQL.Argument.Size
  - SuperOffice.Data.SQL.QueryElement.Clone
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SQL.MathematicalExpression.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.MathematicalExpression.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Data.SQL.MathematicalExpression._args
  commentId: F:SuperOffice.Data.SQL.MathematicalExpression._args
  id: _args
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: _args
  nameWithType: MathematicalExpression._args
  fullName: SuperOffice.Data.SQL.MathematicalExpression._args
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: >-
    If Mathematical operation have several in-parameters,  

    an array of arguments is used to hold the parameters instead

    of the left and right class-variables.
  example: []
  syntax:
    content: protected Argument[] _args
    return:
      type: SuperOffice.Data.SQL.Argument[]
    content.vb: Protected _args As Argument()
- uid: SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.FieldDataType,System.Int32)
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.FieldDataType,System.Int32)
  id: '#ctor(SuperOffice.Data.FieldDataType,System.Int32)'
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: MathematicalExpression(FieldDataType, int)
  nameWithType: MathematicalExpression.MathematicalExpression(FieldDataType, int)
  fullName: SuperOffice.Data.SQL.MathematicalExpression.MathematicalExpression(SuperOffice.Data.FieldDataType, int)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: >-
    Initializes a new instance of the <xref href="SuperOffice.Data.SQL.MathematicalExpression" data-throw-if-not-resolved="false"></xref> class, and takes

    datatype and length as in-parameters.
  example: []
  syntax:
    content: public MathematicalExpression(FieldDataType dataType, int length)
    parameters:
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: Type of the data.
    - id: length
      type: System.Int32
      description: The length.
    content.vb: Public Sub New(dataType As FieldDataType, length As Integer)
  overload: SuperOffice.Data.SQL.MathematicalExpression.#ctor*
  nameWithType.vb: MathematicalExpression.New(FieldDataType, Integer)
  fullName.vb: SuperOffice.Data.SQL.MathematicalExpression.New(SuperOffice.Data.FieldDataType, Integer)
  name.vb: New(FieldDataType, Integer)
- uid: SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  id: '#ctor(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)'
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: MathematicalExpression(Argument, Argument)
  nameWithType: MathematicalExpression.MathematicalExpression(Argument, Argument)
  fullName: SuperOffice.Data.SQL.MathematicalExpression.MathematicalExpression(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: >-
    Initializes a new instance of the <xref href="SuperOffice.Data.SQL.MathematicalExpression" data-throw-if-not-resolved="false"></xref> class, and takes 

    left and right as in-parameters.
  remarks: Will validate that the incoming parameters are not null.
  example: []
  syntax:
    content: public MathematicalExpression(Argument left, Argument right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
      description: The left-hand-side of the operation.
    - id: right
      type: SuperOffice.Data.SQL.Argument
      description: The right-hand-side of the operation.
    content.vb: Public Sub New(left As Argument, right As Argument)
  overload: SuperOffice.Data.SQL.MathematicalExpression.#ctor*
  nameWithType.vb: MathematicalExpression.New(Argument, Argument)
  fullName.vb: SuperOffice.Data.SQL.MathematicalExpression.New(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  name.vb: New(Argument, Argument)
- uid: SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.#ctor(SuperOffice.Data.SQL.Argument[])
  id: '#ctor(SuperOffice.Data.SQL.Argument[])'
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: MathematicalExpression(params Argument[])
  nameWithType: MathematicalExpression.MathematicalExpression(params Argument[])
  fullName: SuperOffice.Data.SQL.MathematicalExpression.MathematicalExpression(params SuperOffice.Data.SQL.Argument[])
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Default constructor.
  example: []
  syntax:
    content: public MathematicalExpression(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
      description: ''
    content.vb: Public Sub New(ParamArray arguments As Argument())
  overload: SuperOffice.Data.SQL.MathematicalExpression.#ctor*
  nameWithType.vb: MathematicalExpression.New(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.MathematicalExpression.New(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: New(ParamArray Argument())
- uid: SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter)
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter)
  id: ValidateFieldInfoParameter(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter)
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: ValidateFieldInfoParameter(FieldInfo, Parameter)
  nameWithType: MathematicalExpression.ValidateFieldInfoParameter(FieldInfo, Parameter)
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.SQL.Parameter)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: >-
    ValidateFieldInfoParameter validates that the operation can be done on a FieldInfo and 

    a Parameter.
  remarks: Validates that the Parameters is not 0 (zero).
  example: []
  syntax:
    content: protected virtual void ValidateFieldInfoParameter(FieldInfo left, Parameter right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.FieldInfo
      description: The left-hand-side of the operation.
    - id: right
      type: SuperOffice.Data.SQL.Parameter
      description: The right-hand-side of the operation.
    content.vb: Protected Overridable Sub ValidateFieldInfoParameter(left As FieldInfo, right As Parameter)
  overload: SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter*
- uid: SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue(SuperOffice.Data.SQL.Parameter,SuperOffice.Data.SQL.Parameter)
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue(SuperOffice.Data.SQL.Parameter,SuperOffice.Data.SQL.Parameter)
  id: ValidateParameterArgumentsForZeroValue(SuperOffice.Data.SQL.Parameter,SuperOffice.Data.SQL.Parameter)
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: ValidateParameterArgumentsForZeroValue(Parameter, Parameter)
  nameWithType: MathematicalExpression.ValidateParameterArgumentsForZeroValue(Parameter, Parameter)
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue(SuperOffice.Data.SQL.Parameter, SuperOffice.Data.SQL.Parameter)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: ValidateParameterArguments validates that the operation can be done on two Parameters.
  remarks: Validates that the value of both sides is not 0 (zero).
  example: []
  syntax:
    content: protected virtual void ValidateParameterArgumentsForZeroValue(Parameter left, Parameter right)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Parameter
      description: The left-hand-side of the operation.
    - id: right
      type: SuperOffice.Data.SQL.Parameter
      description: The right-hand-side of the operation.
    content.vb: Protected Overridable Sub ValidateParameterArgumentsForZeroValue(left As Parameter, right As Parameter)
  overload: SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue*
- uid: SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection
  id: ValidateArgumentCollection
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: ValidateArgumentCollection()
  nameWithType: MathematicalExpression.ValidateArgumentCollection()
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Validates the class' argument-collection.
  remarks: >-
    The validation is common for <xref href="SuperOffice.Data.SQL.Subtract" data-throw-if-not-resolved="false"></xref>, <xref href="SuperOffice.Data.SQL.Multiply" data-throw-if-not-resolved="false"></xref> and

    <xref href="SuperOffice.Data.SQL.Divide" data-throw-if-not-resolved="false"></xref>. <xref href="SuperOffice.Data.SQL.Add" data-throw-if-not-resolved="false"></xref> needs to validate the collection itselves because of the

    functions possibility to do an add-operation on strings.
  example: []
  syntax:
    content: protected virtual void ValidateArgumentCollection()
    content.vb: Protected Overridable Sub ValidateArgumentCollection()
  overload: SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection*
- uid: SuperOffice.Data.SQL.MathematicalExpression.ToString
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.ToString
  id: ToString
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MathematicalExpression.ToString()
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ToString()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: String output.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: a MATHOP b
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.Data.SQL.MathematicalExpression.ToString*
- uid: SuperOffice.Data.SQL.MathematicalExpression.GetMainField
  commentId: M:SuperOffice.Data.SQL.MathematicalExpression.GetMainField
  id: GetMainField
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: GetMainField()
  nameWithType: MathematicalExpression.GetMainField()
  fullName: SuperOffice.Data.SQL.MathematicalExpression.GetMainField()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Information about a database field.
  example: []
  syntax:
    content: public override FieldInfo GetMainField()
    return:
      type: SuperOffice.Data.SQL.FieldInfo
      description: Information about the database field
    content.vb: Public Overrides Function GetMainField() As FieldInfo
  overridden: SuperOffice.Data.SQL.Argument.GetMainField
  overload: SuperOffice.Data.SQL.MathematicalExpression.GetMainField*
- uid: SuperOffice.Data.SQL.MathematicalExpression.Left
  commentId: P:SuperOffice.Data.SQL.MathematicalExpression.Left
  id: Left
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: MathematicalExpression.Left
  fullName: SuperOffice.Data.SQL.MathematicalExpression.Left
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: The left hand side of the operation.
  example: []
  syntax:
    content: public Argument Left { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Argument
    content.vb: Public Property Left As Argument
  overload: SuperOffice.Data.SQL.MathematicalExpression.Left*
- uid: SuperOffice.Data.SQL.MathematicalExpression.Right
  commentId: P:SuperOffice.Data.SQL.MathematicalExpression.Right
  id: Right
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: MathematicalExpression.Right
  fullName: SuperOffice.Data.SQL.MathematicalExpression.Right
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: The right hand side of the operation.
  example: []
  syntax:
    content: public Argument Right { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Argument
    content.vb: Public Property Right As Argument
  overload: SuperOffice.Data.SQL.MathematicalExpression.Right*
- uid: SuperOffice.Data.SQL.MathematicalExpression.Arguments
  commentId: P:SuperOffice.Data.SQL.MathematicalExpression.Arguments
  id: Arguments
  parent: SuperOffice.Data.SQL.MathematicalExpression
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: MathematicalExpression.Arguments
  fullName: SuperOffice.Data.SQL.MathematicalExpression.Arguments
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: Get method for the argument collection.
  example: []
  syntax:
    content: public Argument[] Arguments { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Argument[]
    content.vb: Public ReadOnly Property Arguments As Argument()
  overload: SuperOffice.Data.SQL.MathematicalExpression.Arguments*
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.QueryElement.html
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Equal_SuperOffice_Data_SQL_Argument_
  name: Equal(Argument)
  nameWithType: Argument.Equal(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
    name: Equal
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Equal_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
    name: Equal
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Equal_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_UnEqual_SuperOffice_Data_SQL_Argument_
  name: UnEqual(Argument)
  nameWithType: Argument.UnEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
    name: UnEqual
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_UnEqual_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
    name: UnEqual
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_UnEqual_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThan_SuperOffice_Data_SQL_Argument_
  name: LessThan(Argument)
  nameWithType: Argument.LessThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
    name: LessThan
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThan_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
    name: LessThan
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThan_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThanOrEqual_SuperOffice_Data_SQL_Argument_
  name: LessThanOrEqual(Argument)
  nameWithType: Argument.LessThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: LessThanOrEqual
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThanOrEqual_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: LessThanOrEqual
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_LessThanOrEqual_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThan_SuperOffice_Data_SQL_Argument_
  name: GreaterThan(Argument)
  nameWithType: Argument.GreaterThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
    name: GreaterThan
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThan_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
    name: GreaterThan
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThan_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThanOrEqual_SuperOffice_Data_SQL_Argument_
  name: GreaterThanOrEqual(Argument)
  nameWithType: Argument.GreaterThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: GreaterThanOrEqual
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThanOrEqual_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: GreaterThanOrEqual
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GreaterThanOrEqual_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_SuperOffice_Data_SQL_Argument_
  name: Like(Argument)
  nameWithType: Argument.Like(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
    name: Like
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
    name: Like
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.Like(System.String)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(System.String)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_System_String_
  name: Like(string)
  nameWithType: Argument.Like(string)
  fullName: SuperOffice.Data.SQL.Argument.Like(string)
  nameWithType.vb: Argument.Like(String)
  fullName.vb: SuperOffice.Data.SQL.Argument.Like(String)
  name.vb: Like(String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Like(System.String)
    name: Like
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Like(System.String)
    name: Like
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Like_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotLike_SuperOffice_Data_SQL_Argument_
  name: NotLike(Argument)
  nameWithType: Argument.NotLike(Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
    name: NotLike
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotLike_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
    name: NotLike
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotLike_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotBetween_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: NotBetween(Argument, Argument)
  nameWithType: Argument.NotBetween(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: NotBetween
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotBetween_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: NotBetween
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotBetween_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Between_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  name: Between(Argument, Argument)
  nameWithType: Argument.Between(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: Between
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Between_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: Between
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Between_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_In_SuperOffice_Data_SQL_Argument___
  name: In(params Argument[])
  nameWithType: Argument.In(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.In(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.In(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.In(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: In(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
    name: In
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_In_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
    name: In
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_In_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  name: HasAny(params Argument[])
  nameWithType: Argument.HasAny(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAny(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAny(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAny(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: HasAny(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  name: HasAll(params Argument[])
  nameWithType: Argument.HasAll(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAll(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAll(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAll(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: HasAll(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  name: MissingAny(params Argument[])
  nameWithType: Argument.MissingAny(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAny(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAny(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAny(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: MissingAny(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAny_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  name: MissingAll(params Argument[])
  nameWithType: Argument.MissingAll(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAll(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAll(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAll(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: MissingAll(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_MissingAll_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.IsNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNull
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNull
  name: IsNull()
  nameWithType: Argument.IsNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNull()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.IsNull
    name: IsNull
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNull
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.IsNull
    name: IsNull
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNull
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.Argument.IsNotNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNotNull
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNotNull
  name: IsNotNull()
  nameWithType: Argument.IsNotNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNotNull()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.IsNotNull
    name: IsNotNull
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNotNull
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.IsNotNull
    name: IsNotNull
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_IsNotNull
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotIn_SuperOffice_Data_SQL_Argument___
  name: NotIn(params Argument[])
  nameWithType: Argument.NotIn(params Argument[])
  fullName: SuperOffice.Data.SQL.Argument.NotIn(params SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.NotIn(ParamArray Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.NotIn(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: NotIn(ParamArray Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
    name: NotIn
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotIn_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: params
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
    name: NotIn
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_NotIn_SuperOffice_Data_SQL_Argument___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasFlag_SuperOffice_Data_SQL_Argument_
  name: HasFlag(Argument)
  nameWithType: Argument.HasFlag(Argument)
  fullName: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
    name: HasFlag
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasFlag_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasFlag(SuperOffice.Data.SQL.Argument)
    name: HasFlag
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasFlag_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasNoFlag_SuperOffice_Data_SQL_Argument_
  name: HasNoFlag(Argument)
  nameWithType: Argument.HasNoFlag(Argument)
  fullName: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
    name: HasNoFlag
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasNoFlag_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasNoFlag(SuperOffice.Data.SQL.Argument)
    name: HasNoFlag
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_HasNoFlag_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  parent: SuperOffice.Data.SQL.Argument
  definition: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  parent: SuperOffice.Data.SQL.Argument
  definition: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___System_Boolean_
  name: ToArgumentArray<T>(T[], bool)
  nameWithType: Argument.ToArgumentArray<T>(T[], bool)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], bool)
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.Data.SQL.Argument.GetSubElements
  commentId: M:SuperOffice.Data.SQL.Argument.GetSubElements
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetSubElements
  name: GetSubElements()
  nameWithType: Argument.GetSubElements()
  fullName: SuperOffice.Data.SQL.Argument.GetSubElements()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GetSubElements
    name: GetSubElements
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetSubElements
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GetSubElements
    name: GetSubElements
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetSubElements
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.Argument.Alias
  commentId: P:SuperOffice.Data.SQL.Argument.Alias
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Alias
  name: Alias
  nameWithType: Argument.Alias
  fullName: SuperOffice.Data.SQL.Argument.Alias
- uid: SuperOffice.Data.SQL.Argument.DataType
  commentId: P:SuperOffice.Data.SQL.Argument.DataType
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_DataType
  name: DataType
  nameWithType: Argument.DataType
  fullName: SuperOffice.Data.SQL.Argument.DataType
- uid: SuperOffice.Data.SQL.Argument.Size
  commentId: P:SuperOffice.Data.SQL.Argument.Size
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_Size
  name: Size
  nameWithType: Argument.Size
  fullName: SuperOffice.Data.SQL.Argument.Size
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_Clone
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_Clone
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    isExternal: true
    href: SuperOffice.Data.SQL.QueryElement.html#SuperOffice_Data_SQL_QueryElement_Clone
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.MathematicalExpression.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<MathematicalExpression, To>(MathematicalExpression)
  nameWithType: EnumUtil.MapEnums<MathematicalExpression, To>(MathematicalExpression)
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.MathematicalExpression, To>(SuperOffice.Data.SQL.MathematicalExpression)
  nameWithType.vb: EnumUtil.MapEnums(Of MathematicalExpression, To)(MathematicalExpression)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.MathematicalExpression, To)(SuperOffice.Data.SQL.MathematicalExpression)
  name.vb: MapEnums(Of MathematicalExpression, To)(MathematicalExpression)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.SQL.MathematicalExpression)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.SQL.MathematicalExpression)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: )
- uid: SuperOffice.Data.SQL.MathematicalExpression.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<MathematicalExpression, To>(MathematicalExpression)
  nameWithType: Converters.MapEnums<MathematicalExpression, To>(MathematicalExpression)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.MathematicalExpression, To>(SuperOffice.Data.SQL.MathematicalExpression)
  nameWithType.vb: Converters.MapEnums(Of MathematicalExpression, To)(MathematicalExpression)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.MathematicalExpression, To)(SuperOffice.Data.SQL.MathematicalExpression)
  name.vb: MapEnums(Of MathematicalExpression, To)(MathematicalExpression)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.SQL.MathematicalExpression)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.SQL.MathematicalExpression)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.SQL.MathematicalExpression
    name: MathematicalExpression
    isExternal: true
    href: SuperOffice.Data.SQL.MathematicalExpression.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___System_Boolean_
  name: ToArgumentArray<T>(T[], bool)
  nameWithType: Argument.ToArgumentArray<T>(T[], bool)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], bool)
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___System_Boolean_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_ToArgumentArray__1___0___System_Boolean_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Data.SQL.Argument[]
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument[]
  nameWithType: Argument[]
  fullName: SuperOffice.Data.SQL.Argument[]
  nameWithType.vb: Argument()
  fullName.vb: SuperOffice.Data.SQL.Argument()
  name.vb: Argument()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.MathematicalExpression
  commentId: T:SuperOffice.Data.SQL.MathematicalExpression
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html
  name: MathematicalExpression
  nameWithType: MathematicalExpression
  fullName: SuperOffice.Data.SQL.MathematicalExpression
- uid: SuperOffice.Data.SQL.MathematicalExpression.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.#ctor
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression__ctor_SuperOffice_Data_FieldDataType_System_Int32_
  name: MathematicalExpression
  nameWithType: MathematicalExpression.MathematicalExpression
  fullName: SuperOffice.Data.SQL.MathematicalExpression.MathematicalExpression
  nameWithType.vb: MathematicalExpression.New
  fullName.vb: SuperOffice.Data.SQL.MathematicalExpression.New
  name.vb: New
- uid: SuperOffice.Data.FieldDataType
  commentId: T:SuperOffice.Data.FieldDataType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.FieldDataType.html
  name: FieldDataType
  nameWithType: FieldDataType
  fullName: SuperOffice.Data.FieldDataType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_ValidateFieldInfoParameter_SuperOffice_Data_SQL_FieldInfo_SuperOffice_Data_SQL_Parameter_
  name: ValidateFieldInfoParameter
  nameWithType: MathematicalExpression.ValidateFieldInfoParameter
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ValidateFieldInfoParameter
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Parameter.html
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_ValidateParameterArgumentsForZeroValue_SuperOffice_Data_SQL_Parameter_SuperOffice_Data_SQL_Parameter_
  name: ValidateParameterArgumentsForZeroValue
  nameWithType: MathematicalExpression.ValidateParameterArgumentsForZeroValue
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ValidateParameterArgumentsForZeroValue
- uid: SuperOffice.Data.SQL.Subtract
  commentId: T:SuperOffice.Data.SQL.Subtract
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Subtract.html
  name: Subtract
  nameWithType: Subtract
  fullName: SuperOffice.Data.SQL.Subtract
- uid: SuperOffice.Data.SQL.Multiply
  commentId: T:SuperOffice.Data.SQL.Multiply
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Multiply.html
  name: Multiply
  nameWithType: Multiply
  fullName: SuperOffice.Data.SQL.Multiply
- uid: SuperOffice.Data.SQL.Divide
  commentId: T:SuperOffice.Data.SQL.Divide
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Divide.html
  name: Divide
  nameWithType: Divide
  fullName: SuperOffice.Data.SQL.Divide
- uid: SuperOffice.Data.SQL.Add
  commentId: T:SuperOffice.Data.SQL.Add
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Add.html
  name: Add
  nameWithType: Add
  fullName: SuperOffice.Data.SQL.Add
- uid: SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_ValidateArgumentCollection
  name: ValidateArgumentCollection
  nameWithType: MathematicalExpression.ValidateArgumentCollection
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ValidateArgumentCollection
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.MathematicalExpression.ToString*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.ToString
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_ToString
  name: ToString
  nameWithType: MathematicalExpression.ToString
  fullName: SuperOffice.Data.SQL.MathematicalExpression.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.SQL.Argument.GetMainField
  commentId: M:SuperOffice.Data.SQL.Argument.GetMainField
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetMainField
  name: GetMainField()
  nameWithType: Argument.GetMainField()
  fullName: SuperOffice.Data.SQL.Argument.GetMainField()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GetMainField
    name: GetMainField
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetMainField
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GetMainField
    name: GetMainField
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html#SuperOffice_Data_SQL_Argument_GetMainField
  - name: (
  - name: )
- uid: SuperOffice.Data.SQL.MathematicalExpression.GetMainField*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.GetMainField
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_GetMainField
  name: GetMainField
  nameWithType: MathematicalExpression.GetMainField
  fullName: SuperOffice.Data.SQL.MathematicalExpression.GetMainField
- uid: SuperOffice.Data.SQL.MathematicalExpression.Left*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.Left
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_Left
  name: Left
  nameWithType: MathematicalExpression.Left
  fullName: SuperOffice.Data.SQL.MathematicalExpression.Left
- uid: SuperOffice.Data.SQL.MathematicalExpression.Right*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.Right
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_Right
  name: Right
  nameWithType: MathematicalExpression.Right
  fullName: SuperOffice.Data.SQL.MathematicalExpression.Right
- uid: SuperOffice.Data.SQL.MathematicalExpression.Arguments*
  commentId: Overload:SuperOffice.Data.SQL.MathematicalExpression.Arguments
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html#SuperOffice_Data_SQL_MathematicalExpression_Arguments
  name: Arguments
  nameWithType: MathematicalExpression.Arguments
  fullName: SuperOffice.Data.SQL.MathematicalExpression.Arguments
