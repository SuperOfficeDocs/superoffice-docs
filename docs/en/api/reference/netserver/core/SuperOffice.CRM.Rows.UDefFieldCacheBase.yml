### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase
  commentId: T:SuperOffice.CRM.Rows.UDefFieldCacheBase
  id: UDefFieldCacheBase
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.#ctor
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType(SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel(SuperOffice.Data.UDefType,System.String)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture(SuperOffice.Data.UDefType,System.String,System.String)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.Dictionary.SoField)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(System.Int32)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel(System.String,SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId(System.Int32)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId(System.String,SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType(SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity(System.Int32,SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId(System.Int32)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo(System.Int32)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType,System.Int32)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO(SuperOffice.Data.UDefType)
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames
  langs:
  - csharp
  - vb
  name: UDefFieldCacheBase
  nameWithType: UDefFieldCacheBase
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: 'public abstract class UDefFieldCacheBase : CacheBaseV2, IFlushableV2, IDisposable'
    content.vb: >-
      Public MustInherit Class UDefFieldCacheBase
          Inherits CacheBaseV2
          Implements IFlushableV2, IDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  derivedClasses:
  - SuperOffice.CRM.Rows.UDefFieldAdminCache
  - SuperOffice.CRM.Rows.UDefFieldCache
  implements:
  - SuperOffice.Data.Cache.IFlushableV2
  - System.IDisposable
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Cache.CacheBaseV2.Dispose
  - SuperOffice.Data.Cache.CacheBaseV2.Flush
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.UDefFieldCacheBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId(System.Int32)
  id: GetFromId(System.Int32)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromId(Int32)
  nameWithType: UDefFieldCacheBase.GetFromId(Int32)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> from its primary key.\n"
  syntax:
    content: public UDefFieldRow GetFromId(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Primary key of the row.
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row with the primary key.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows with this primary key."
    content.vb: Public Function GetFromId(id As Integer) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.SQL.FieldInfo)
  id: GetFromField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromField(FieldInfo)
  nameWithType: UDefFieldCacheBase.GetFromField(FieldInfo)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> from the field the user-defined value is stored in.\n"
  syntax:
    content: public UDefFieldRow GetFromField(FieldInfo fieldInfo)
    parameters:
    - id: fieldInfo
      type: SuperOffice.Data.SQL.FieldInfo
      description: Information about the field
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row holding the definition of the field.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows defined for this field.  This would mean that this\nfield does not hold a value for a user-defined field."
    content.vb: Public Function GetFromField(fieldInfo As FieldInfo) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.Dictionary.SoField)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.Dictionary.SoField)
  id: GetFromField(SuperOffice.Data.Dictionary.SoField)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromField(SoField)
  nameWithType: UDefFieldCacheBase.GetFromField(SoField)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(SuperOffice.Data.Dictionary.SoField)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> from the field the user-defined value is stored in.\n"
  syntax:
    content: public UDefFieldRow GetFromField(SoField field)
    parameters:
    - id: field
      type: SuperOffice.Data.Dictionary.SoField
      description: Information about the field
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row holding the definition of the field.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows defined for this field.  This would mean that this\nfield does not hold a value for a user-defined field."
    content.vb: Public Function GetFromField(field As SoField) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(System.Int32)
  id: GetFromField(System.Int32)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromField(Int32)
  nameWithType: UDefFieldCacheBase.GetFromField(Int32)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> from the field the user-defined value is stored in.\n"
  syntax:
    content: public UDefFieldRow GetFromField(int fieldNumber)
    parameters:
    - id: fieldNumber
      type: System.Int32
      description: Information about the field
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row holding the definition of the field.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows defined for this field.  This would mean that this\nfield does not hold a value for a user-defined field."
    content.vb: Public Function GetFromField(fieldNumber As Integer) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity(System.Int32,SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity(System.Int32,SuperOffice.Data.UDefType)
  id: GetFromUdefIdentity(System.Int32,SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromUdefIdentity(Int32, UDefType)
  nameWithType: UDefFieldCacheBase.GetFromUdefIdentity(Int32, UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity(System.Int32, SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> from its udefIdentity.\n"
  syntax:
    content: public UDefFieldRow GetFromUdefIdentity(int udefIdentity, UDefType type)
    parameters:
    - id: udefIdentity
      type: System.Int32
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row with the matching udefIdentity and type.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows matching."
    content.vb: Public Function GetFromUdefIdentity(udefIdentity As Integer, type As UDefType) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId(System.String,SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId(System.String,SuperOffice.Data.UDefType)
  id: GetFromProgId(System.String,SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromProgId(String, UDefType)
  nameWithType: UDefFieldCacheBase.GetFromProgId(String, UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId(System.String, SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> from its progid\n"
  syntax:
    content: public UDefFieldRow GetFromProgId(string progId, UDefType type)
    parameters:
    - id: progId
      type: System.String
      description: >-
        ProgId is composed of an identifier and udefidentity; &apos;[identifier]:[udefIdentity]&apos;

        Note that a colon is generally used as the separator, and not a dot; this is because the web client

        (and other applications) tend to use the dot as an indirection operator, like C# does.
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row with the matching progid.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows matching."
    content.vb: Public Function GetFromProgId(progId As String, type As UDefType) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId(System.Int32)
  id: GetFromUDListDefinitionId(System.Int32)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromUDListDefinitionId(Int32)
  nameWithType: UDefFieldCacheBase.GetFromUDListDefinitionId(Int32)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public UDefFieldRows GetFromUDListDefinitionId(int udListDefinitionId)
    parameters:
    - id: udListDefinitionId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRows
    content.vb: Public Function GetFromUDListDefinitionId(udListDefinitionId As Integer) As UDefFieldRows
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType(SuperOffice.Data.UDefType)
  id: GetFromType(SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromType(UDefType)
  nameWithType: UDefFieldCacheBase.GetFromType(UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> collection of definitions for a given udef type\n"
  syntax:
    content: public UDefFieldRows GetFromType(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRows
      description: Field definitions; the collection might be empty if there are no fields defined
    content.vb: Public Function GetFromType(type As UDefType) As UDefFieldRows
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel(SuperOffice.Data.UDefType,System.String)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel(SuperOffice.Data.UDefType,System.String)
  id: GetFirstFromLabel(SuperOffice.Data.UDefType,System.String)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFirstFromLabel(UDefType, String)
  nameWithType: UDefFieldCacheBase.GetFirstFromLabel(UDefType, String)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel(SuperOffice.Data.UDefType, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a field definition based on the field label. This method is <strong>not safe</strong> as field labels are easily\nchanged through the Admin client, and therefore not guaranteed to be constant. Labels are also not enforced unique.\n"
  remarks: "\nTo improve reliability, this method will strip colon, semicolon, blank, newline, carriage return, tab and minus\ncharacters from the front and back of labels, as well as convert to lower case for comparison. The &apos;label&apos; in-parameter\nis also treated this way. A sequential search is then made, and the first field found to match is returned.\n"
  syntax:
    content: public UDefFieldRow GetFirstFromLabel(UDefType type, string label)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Type of udef field to search
    - id: label
      type: System.String
      description: Label to look for
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: Row definition, or null if no match
    content.vb: Public Function GetFirstFromLabel(type As UDefType, label As String) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture(SuperOffice.Data.UDefType,System.String,System.String)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture(SuperOffice.Data.UDefType,System.String,System.String)
  id: GetFirstFromLabelWithCulture(SuperOffice.Data.UDefType,System.String,System.String)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFirstFromLabelWithCulture(UDefType, String, String)
  nameWithType: UDefFieldCacheBase.GetFirstFromLabelWithCulture(UDefType, String, String)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture(SuperOffice.Data.UDefType, System.String, System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a field definition based on the field label, parsed according to a specified culture. \nThis method is <strong>not safe</strong> as field labels are easily\nchanged through the Admin client, and therefore not guaranteed to be constant. Labels are also not enforced unique.\n"
  remarks: "\nInitially, all labels are parsed according to the given culture (labels that do not follow multi-language\nlayout are not touched). Then, this method will strip colon, semicolon, blank, newline, carriage return, tab and minus\ncharacters from the front and back of labels, as well as convert to lower case for comparison. The &apos;label&apos; in-parameter\nis also treated this way (but not multi-language parsed). \nA sequential search is then made, and the first field found to match is returned.\n"
  syntax:
    content: public UDefFieldRow GetFirstFromLabelWithCulture(UDefType type, string label, string culture)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Type of udef field to search
    - id: label
      type: System.String
      description: Label to look for
    - id: culture
      type: System.String
      description: Culture to apply to labels during parsing
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: Row definition, or null if no match
    content.vb: Public Function GetFirstFromLabelWithCulture(type As UDefType, label As String, culture As String) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel(System.String,SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel(System.String,SuperOffice.Data.UDefType)
  id: GetFromFieldLabel(System.String,SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetFromFieldLabel(String, UDefType)
  nameWithType: UDefFieldCacheBase.GetFromFieldLabel(String, UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel(System.String, SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow\" data-throw-if-not-resolved=\"false\"></xref> based on its label.\n"
  remarks: "\nThe label match is fuzzy and not-exact, unlike a prog-id.\nLeading and trailing spaces are removed, as is trailing punctuation (&quot;:&quot; and &quot;.&quot;).\nMulti-language strings (i.e. US:&quot;foo&quot;;NO:&quot;bar&quot;) are parsed according to the \ncurrent ui-culture before being matched.\n"
  syntax:
    content: public UDefFieldRow GetFromFieldLabel(string fieldlabel, UDefType type)
    parameters:
    - id: fieldlabel
      type: System.String
      description: 'Label is '
    - id: type
      type: SuperOffice.Data.UDefType
    return:
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: "Row with the matching progid.  &apos;null&apos; (vb &apos;Nothing&apos;) is \nreturned if there are no rows matching."
    content.vb: Public Function GetFromFieldLabel(fieldlabel As String, type As UDefType) As UDefFieldRow
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType,System.Int32)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType,System.Int32)
  id: GetPageOneFieldsFromType(SuperOffice.Data.UDefType,System.Int32)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetPageOneFieldsFromType(UDefType, Int32)
  nameWithType: UDefFieldCacheBase.GetPageOneFieldsFromType(UDefType, Int32)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType, System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a list of page one fields for given Udef type and user group. The list may be empty if no fields have been defined.\nnull will be returned if the Udef type is not supported for page one (Appointment, Document).\n"
  syntax:
    content: public IEnumerable<UDefFieldCacheBase.PageOneFieldInfo> GetPageOneFieldsFromType(UDefType type, int userGroupId)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type
    - id: userGroupId
      type: System.Int32
      description: User group to get for
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
      description: List of <xref href="SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo" data-throw-if-not-resolved="false"></xref> elements containing user-defined field definitions and line number (1-based)
    content.vb: Public Function GetPageOneFieldsFromType(type As UDefType, userGroupId As Integer) As IEnumerable(Of UDefFieldCacheBase.PageOneFieldInfo)
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType)
  id: GetPageOneFieldsFromType(SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetPageOneFieldsFromType(UDefType)
  nameWithType: UDefFieldCacheBase.GetPageOneFieldsFromType(UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a list of page one fields for given Udef type and current user group. The list may be empty if no fields have been defined.\nnull will be returned if the Udef type is not supported for page one (Appointment, Document).\n"
  syntax:
    content: public IEnumerable<UDefFieldCacheBase.PageOneFieldInfo> GetPageOneFieldsFromType(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type
    return:
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
      description: List of <xref href="SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo" data-throw-if-not-resolved="false"></xref> elements containing user-defined field definitions and line number (1-based)
    content.vb: Public Function GetPageOneFieldsFromType(type As UDefType) As IEnumerable(Of UDefFieldCacheBase.PageOneFieldInfo)
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType(SuperOffice.Data.UDefType)
  id: GetAllPageOneFieldsFromType(SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetAllPageOneFieldsFromType(UDefType)
  nameWithType: UDefFieldCacheBase.GetAllPageOneFieldsFromType(UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet ALL page one fields from an udef type\n"
  syntax:
    content: public ILookup<int, UDefFieldCacheBase.PageOneFieldInfo> GetAllPageOneFieldsFromType(UDefType type)
    parameters:
    - id: type
      type: SuperOffice.Data.UDefType
      description: Udef type
    return:
      type: System.Linq.ILookup{System.Int32,SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
      description: Lists of <xref href="SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo" data-throw-if-not-resolved="false"></xref> elements containing user-defined field definitions and line number (1-based)
    content.vb: Public Function GetAllPageOneFieldsFromType(type As UDefType) As ILookup(Of Integer, UDefFieldCacheBase.PageOneFieldInfo)
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  id: GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetDefaultValue(UDefFieldRow)
  nameWithType: UDefFieldCacheBase.GetDefaultValue(UDefFieldRow)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue(SuperOffice.CRM.Rows.UDefFieldRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet a field&apos;s default value as a typed (parsed) object: an int, a date, or whatever. There are\nno parsing exceptions thrown by this method. Multi-language parsing is performed for all\nkinds of values prior to other parsing, as in the windows client.\n"
  syntax:
    content: public static object GetDefaultValue(UDefFieldRow definition)
    parameters:
    - id: definition
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: Udef field definition
    return:
      type: System.Object
      description: "An object of the correct type for the database type of the udef field (so a \ndropdown list field will get an int, which is the list item id). If the stored default is\nnot parseable as the target type, an &apos;empty&apos; object of the correct type is returned\n(0 for ints, etc.)"
    content.vb: Public Shared Function GetDefaultValue(definition As UDefFieldRow) As Object
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  id: GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetListName(UDefFieldRow)
  nameWithType: UDefFieldCacheBase.GetListName(UDefFieldRow)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName(SuperOffice.CRM.Rows.UDefFieldRow)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the name of the MDO list associate with the given udef field. An empty string is returned\nif the field is not a list field.\n"
  remarks: "\nThe list associated with a udef field is generally given by the <xref href=\"SuperOffice.CRM.Rows.UDefFieldRow.ListTableId\" data-throw-if-not-resolved=\"false\"></xref> property\nof the definition. However, there is some special treatment:\n\n"
  syntax:
    content: public static string GetListName(UDefFieldRow definition)
    parameters:
    - id: definition
      type: SuperOffice.CRM.Rows.UDefFieldRow
      description: User-defined field to get list name for
    return:
      type: System.String
    content.vb: Public Shared Function GetListName(definition As UDefFieldRow) As String
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand
  id: LoadOnDemand
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: LoadOnDemand()
  nameWithType: UDefFieldCacheBase.LoadOnDemand()
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected void LoadOnDemand()
    content.vb: Protected Sub LoadOnDemand
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: UDefFieldCacheBase.OnLoad()
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions
  id: GetVersions
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetVersions()
  nameWithType: UDefFieldCacheBase.GetVersions()
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nGet the current udef version array. Override to get either the Admin version or some specific set of versions\n"
  syntax:
    content: protected virtual Dictionary<UDefType, int> GetVersions()
    return:
      type: System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}
    content.vb: Protected Overridable Function GetVersions As Dictionary(Of UDefType, Integer)
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO(SuperOffice.Data.UDefType)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO(SuperOffice.Data.UDefType)
  id: IsPageOneMDO(SuperOffice.Data.UDefType)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: IsPageOneMDO(UDefType)
  nameWithType: UDefFieldCacheBase.IsPageOneMDO(UDefType)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO(SuperOffice.Data.UDefType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected virtual bool IsPageOneMDO(UDefType udefType)
    parameters:
    - id: udefType
      type: SuperOffice.Data.UDefType
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function IsPageOneMDO(udefType As UDefType) As Boolean
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision
  id: CheckRevision
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: CheckRevision()
  nameWithType: UDefFieldCacheBase.CheckRevision()
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected virtual void CheckRevision()
    content.vb: Protected Overridable Sub CheckRevision
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo(System.Int32)
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo(System.Int32)
  id: GetLineNo(System.Int32)
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: GetLineNo(Int32)
  nameWithType: UDefFieldCacheBase.GetLineNo(Int32)
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nLine number could need some recalculation.\n"
  syntax:
    content: protected virtual int GetLineNo(int lineNo)
    parameters:
    - id: lineNo
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Protected Overridable Function GetLineNo(lineNo As Integer) As Integer
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.#ctor
  commentId: M:SuperOffice.CRM.Rows.UDefFieldCacheBase.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: UDefFieldCacheBase()
  nameWithType: UDefFieldCacheBase.UDefFieldCacheBase()
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.UDefFieldCacheBase()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: protected UDefFieldCacheBase()
    content.vb: Protected Sub New
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames
  commentId: P:SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Rows.UDefFieldCacheBase
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: UDefFieldCacheBase.TableNames
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  remarks: "\nAlthough we read from table &quot;UserPreference&quot; we shouldn&apos;t add it to TableNames for this cache\nbecause there&apos;s too much traffic on that table. Invoking flush on table change would be\nexpensive, so flushing manually is the way to go.\n&quot;Udeflayout&quot; is a pseudo-table that updates whenever published layout changes.\n"
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.IFlushableV2
  commentId: T:SuperOffice.Data.Cache.IFlushableV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: IFlushableV2
  nameWithType: IFlushableV2
  fullName: SuperOffice.Data.Cache.IFlushableV2
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidated(String, Int32, PrivateSave)
  nameWithType: CacheBaseV2.IsCacheInvalidated(String, Int32, PrivateSave)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave)
    name: IsCacheInvalidated
    nameWithType: CacheBaseV2.IsCacheInvalidated
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidated
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Dispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Dispose()
  nameWithType: CacheBaseV2.Dispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    name: Dispose
    nameWithType: CacheBaseV2.Dispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Flush
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Flush()
  nameWithType: CacheBaseV2.Flush()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Flush
    name: Flush
    nameWithType: CacheBaseV2.Flush
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Flush
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: GetCurrent<T>()
  nameWithType: CacheBaseV2.GetCurrent<T>()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>()
  nameWithType.vb: CacheBaseV2.GetCurrent(Of T)()
  fullName.vb: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)()
  name.vb: GetCurrent(Of T)()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent<T>
    nameWithType: CacheBaseV2.GetCurrent<T>
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent``1
    name: GetCurrent(Of T)
    nameWithType: CacheBaseV2.GetCurrent(Of T)
    fullName: SuperOffice.Data.Cache.CacheBaseV2.GetCurrent(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<UDefFieldCacheBase, To>()
  nameWithType: EnumUtil.MapEnums<UDefFieldCacheBase, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.UDefFieldCacheBase, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of UDefFieldCacheBase, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldCacheBase, To)()
  name.vb: MapEnums(Of UDefFieldCacheBase, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<UDefFieldCacheBase, To>
    nameWithType: EnumUtil.MapEnums<UDefFieldCacheBase, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.UDefFieldCacheBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of UDefFieldCacheBase, To)
    nameWithType: EnumUtil.MapEnums(Of UDefFieldCacheBase, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldCacheBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<UDefFieldCacheBase, To>()
  nameWithType: Converters.MapEnums<UDefFieldCacheBase, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.UDefFieldCacheBase, To>()
  nameWithType.vb: Converters.MapEnums(Of UDefFieldCacheBase, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldCacheBase, To)()
  name.vb: MapEnums(Of UDefFieldCacheBase, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<UDefFieldCacheBase, To>
    nameWithType: Converters.MapEnums<UDefFieldCacheBase, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.UDefFieldCacheBase, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of UDefFieldCacheBase, To)
    nameWithType: Converters.MapEnums(Of UDefFieldCacheBase, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.UDefFieldCacheBase, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId
  isExternal: true
  name: GetFromId
  nameWithType: UDefFieldCacheBase.GetFromId
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Rows.UDefFieldRow
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: UDefFieldRow
  nameWithType: UDefFieldRow
  fullName: SuperOffice.CRM.Rows.UDefFieldRow
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField
  isExternal: true
  name: GetFromField
  nameWithType: UDefFieldCacheBase.GetFromField
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromField
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: SuperOffice.Data.Dictionary.SoField
  commentId: T:SuperOffice.Data.Dictionary.SoField
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoField
  nameWithType: SoField
  fullName: SuperOffice.Data.Dictionary.SoField
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity
  isExternal: true
  name: GetFromUdefIdentity
  nameWithType: UDefFieldCacheBase.GetFromUdefIdentity
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUdefIdentity
- uid: SuperOffice.Data.UDefType
  commentId: T:SuperOffice.Data.UDefType
  parent: SuperOffice.Data
  isExternal: true
  name: UDefType
  nameWithType: UDefType
  fullName: SuperOffice.Data.UDefType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId
  isExternal: true
  name: GetFromProgId
  nameWithType: UDefFieldCacheBase.GetFromProgId
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromProgId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId
  isExternal: true
  name: GetFromUDListDefinitionId
  nameWithType: UDefFieldCacheBase.GetFromUDListDefinitionId
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromUDListDefinitionId
- uid: SuperOffice.CRM.Rows.UDefFieldRows
  commentId: T:SuperOffice.CRM.Rows.UDefFieldRows
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: UDefFieldRows
  nameWithType: UDefFieldRows
  fullName: SuperOffice.CRM.Rows.UDefFieldRows
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType
  isExternal: true
  name: GetFromType
  nameWithType: UDefFieldCacheBase.GetFromType
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromType
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel
  isExternal: true
  name: GetFirstFromLabel
  nameWithType: UDefFieldCacheBase.GetFirstFromLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabel
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture
  isExternal: true
  name: GetFirstFromLabelWithCulture
  nameWithType: UDefFieldCacheBase.GetFirstFromLabelWithCulture
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFirstFromLabelWithCulture
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel
  isExternal: true
  name: GetFromFieldLabel
  nameWithType: UDefFieldCacheBase.GetFromFieldLabel
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetFromFieldLabel
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType
  isExternal: true
  name: GetPageOneFieldsFromType
  nameWithType: UDefFieldCacheBase.GetPageOneFieldsFromType
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetPageOneFieldsFromType
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<UDefFieldCacheBase.PageOneFieldInfo>
  nameWithType: IEnumerable<UDefFieldCacheBase.PageOneFieldInfo>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo>
  nameWithType.vb: IEnumerable(Of UDefFieldCacheBase.PageOneFieldInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo)
  name.vb: IEnumerable(Of UDefFieldCacheBase.PageOneFieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    name: UDefFieldCacheBase.PageOneFieldInfo
    nameWithType: UDefFieldCacheBase.PageOneFieldInfo
    fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    name: UDefFieldCacheBase.PageOneFieldInfo
    nameWithType: UDefFieldCacheBase.PageOneFieldInfo
    fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType
  isExternal: true
  name: GetAllPageOneFieldsFromType
  nameWithType: UDefFieldCacheBase.GetAllPageOneFieldsFromType
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetAllPageOneFieldsFromType
- uid: System.Linq.ILookup{System.Int32,SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}
  commentId: '!:System.Linq.ILookup{System.Int32,SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo}'
  definition: System.Linq.ILookup`2
  name: ILookup<Int32, UDefFieldCacheBase.PageOneFieldInfo>
  nameWithType: ILookup<Int32, UDefFieldCacheBase.PageOneFieldInfo>
  fullName: System.Linq.ILookup<System.Int32, SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo>
  nameWithType.vb: ILookup(Of Int32, UDefFieldCacheBase.PageOneFieldInfo)
  fullName.vb: System.Linq.ILookup(Of System.Int32, SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo)
  name.vb: ILookup(Of Int32, UDefFieldCacheBase.PageOneFieldInfo)
  spec.csharp:
  - uid: System.Linq.ILookup`2
    name: ILookup
    nameWithType: ILookup
    fullName: System.Linq.ILookup
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    name: UDefFieldCacheBase.PageOneFieldInfo
    nameWithType: UDefFieldCacheBase.PageOneFieldInfo
    fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.ILookup`2
    name: ILookup
    nameWithType: ILookup
    fullName: System.Linq.ILookup
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    name: UDefFieldCacheBase.PageOneFieldInfo
    nameWithType: UDefFieldCacheBase.PageOneFieldInfo
    fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.PageOneFieldInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.ILookup`2
  commentId: '!:System.Linq.ILookup`2'
  isExternal: true
  name: ILookup<, >
  nameWithType: ILookup<, >
  fullName: System.Linq.ILookup<, >
  nameWithType.vb: ILookup(Of , )
  fullName.vb: System.Linq.ILookup(Of , )
  name.vb: ILookup(Of , )
  spec.csharp:
  - uid: System.Linq.ILookup`2
    name: ILookup
    nameWithType: ILookup
    fullName: System.Linq.ILookup
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.ILookup`2
    name: ILookup
    nameWithType: ILookup
    fullName: System.Linq.ILookup
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue
  isExternal: true
  name: GetDefaultValue
  nameWithType: UDefFieldCacheBase.GetDefaultValue
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetDefaultValue
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName
  isExternal: true
  name: GetListName
  nameWithType: UDefFieldCacheBase.GetListName
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetListName
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand
  isExternal: true
  name: LoadOnDemand
  nameWithType: UDefFieldCacheBase.LoadOnDemand
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.LoadOnDemand
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: UDefFieldCacheBase.OnLoad
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.OnLoad
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions
  isExternal: true
  name: GetVersions
  nameWithType: UDefFieldCacheBase.GetVersions
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetVersions
- uid: System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}
  commentId: '!:System.Collections.Generic.Dictionary{SuperOffice.Data.UDefType,System.Int32}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<UDefType, Int32>
  nameWithType: Dictionary<UDefType, Int32>
  fullName: System.Collections.Generic.Dictionary<SuperOffice.Data.UDefType, System.Int32>
  nameWithType.vb: Dictionary(Of UDefType, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of SuperOffice.Data.UDefType, System.Int32)
  name.vb: Dictionary(Of UDefType, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    nameWithType: UDefType
    fullName: SuperOffice.Data.UDefType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.Data.UDefType
    name: UDefType
    nameWithType: UDefType
    fullName: SuperOffice.Data.UDefType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO
  isExternal: true
  name: IsPageOneMDO
  nameWithType: UDefFieldCacheBase.IsPageOneMDO
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.IsPageOneMDO
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision
  isExternal: true
  name: CheckRevision
  nameWithType: UDefFieldCacheBase.CheckRevision
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.CheckRevision
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo
  isExternal: true
  name: GetLineNo
  nameWithType: UDefFieldCacheBase.GetLineNo
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.GetLineNo
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.#ctor
  isExternal: true
  name: UDefFieldCacheBase
  nameWithType: UDefFieldCacheBase.UDefFieldCacheBase
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.UDefFieldCacheBase
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames*
  commentId: Overload:SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames
  isExternal: true
  name: TableNames
  nameWithType: UDefFieldCacheBase.TableNames
  fullName: SuperOffice.CRM.Rows.UDefFieldCacheBase.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
