### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.MailboxType
  commentId: T:SuperOffice.Data.MailboxType
  id: MailboxType
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.MailboxType.Facebook
  - SuperOffice.Data.MailboxType.Imap
  - SuperOffice.Data.MailboxType.ImapOAuth
  - SuperOffice.Data.MailboxType.Imaps
  - SuperOffice.Data.MailboxType.Mailgun
  - SuperOffice.Data.MailboxType.Mapi
  - SuperOffice.Data.MailboxType.Pop
  - SuperOffice.Data.MailboxType.Pops
  - SuperOffice.Data.MailboxType.SmsPlugin
  - SuperOffice.Data.MailboxType.Unknown
  langs:
  - csharp
  - vb
  name: MailboxType
  nameWithType: MailboxType
  fullName: SuperOffice.Data.MailboxType
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nService mailbox type\nThis Enum is used by:  mail_in_filter.server_type\n"
  syntax:
    content: 'public enum MailboxType : short'
    content.vb: Public Enum MailboxType As Short
  extensionMethods:
  - SuperOffice.Data.MailboxType.EnumUtil.MapEnums``2
  - SuperOffice.Data.MailboxType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.MailboxType)
  - SuperOffice.Data.MailboxType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.MailboxType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.MailboxType.Unknown
  commentId: F:SuperOffice.Data.MailboxType.Unknown
  id: Unknown
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: MailboxType.Unknown
  fullName: SuperOffice.Data.MailboxType.Unknown
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: Unknown\n"
  syntax:
    content: Unknown = 0
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Pop
  commentId: F:SuperOffice.Data.MailboxType.Pop
  id: Pop
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Pop
  nameWithType: MailboxType.Pop
  fullName: SuperOffice.Data.MailboxType.Pop
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Pop\n"
  syntax:
    content: Pop = 1
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Imap
  commentId: F:SuperOffice.Data.MailboxType.Imap
  id: Imap
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Imap
  nameWithType: MailboxType.Imap
  fullName: SuperOffice.Data.MailboxType.Imap
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Imap - without OAuth support. Use ImapOAuth instead if OAuth is needed\n"
  syntax:
    content: Imap = 2
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Mapi
  commentId: F:SuperOffice.Data.MailboxType.Mapi
  id: Mapi
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Mapi
  nameWithType: MailboxType.Mapi
  fullName: SuperOffice.Data.MailboxType.Mapi
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: Mapi - Obsolete\n"
  syntax:
    content: Mapi = 3
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Facebook
  commentId: F:SuperOffice.Data.MailboxType.Facebook
  id: Facebook
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Facebook
  nameWithType: MailboxType.Facebook
  fullName: SuperOffice.Data.MailboxType.Facebook
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: TypeFacebook\n"
  syntax:
    content: Facebook = 4
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Pops
  commentId: F:SuperOffice.Data.MailboxType.Pops
  id: Pops
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Pops
  nameWithType: MailboxType.Pops
  fullName: SuperOffice.Data.MailboxType.Pops
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n5: Pop SSL\n"
  syntax:
    content: Pops = 5
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Imaps
  commentId: F:SuperOffice.Data.MailboxType.Imaps
  id: Imaps
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Imaps
  nameWithType: MailboxType.Imaps
  fullName: SuperOffice.Data.MailboxType.Imaps
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n6: Imap SSL\n"
  syntax:
    content: Imaps = 6
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.SmsPlugin
  commentId: F:SuperOffice.Data.MailboxType.SmsPlugin
  id: SmsPlugin
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: SmsPlugin
  nameWithType: MailboxType.SmsPlugin
  fullName: SuperOffice.Data.MailboxType.SmsPlugin
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n7: Incoming SMS, using a plugin\n"
  syntax:
    content: SmsPlugin = 7
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.Mailgun
  commentId: F:SuperOffice.Data.MailboxType.Mailgun
  id: Mailgun
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: Mailgun
  nameWithType: MailboxType.Mailgun
  fullName: SuperOffice.Data.MailboxType.Mailgun
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n8: Used by mailboxes set up as a Mailgun route\n"
  syntax:
    content: Mailgun = 8
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.MailboxType.ImapOAuth
  commentId: F:SuperOffice.Data.MailboxType.ImapOAuth
  id: ImapOAuth
  parent: SuperOffice.Data.MailboxType
  langs:
  - csharp
  - vb
  name: ImapOAuth
  nameWithType: MailboxType.ImapOAuth
  fullName: SuperOffice.Data.MailboxType.ImapOAuth
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n9: This is a Imap mailbox using OAuth authentication\n"
  syntax:
    content: ImapOAuth = 9
    return:
      type: SuperOffice.Data.MailboxType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.MailboxType.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<MailboxType, To>()
  nameWithType: EnumUtil.MapEnums<MailboxType, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.MailboxType, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of MailboxType, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.MailboxType, To)()
  name.vb: MapEnums(Of MailboxType, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<MailboxType, To>
    nameWithType: EnumUtil.MapEnums<MailboxType, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.MailboxType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of MailboxType, To)
    nameWithType: EnumUtil.MapEnums(Of MailboxType, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.MailboxType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.MailboxType.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.MailboxType)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<MailboxType>(MailboxType)
  nameWithType: ObjectExtensions.AssignByReflection<MailboxType>(MailboxType)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.MailboxType>(SuperOffice.Data.MailboxType)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of MailboxType)(MailboxType)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.MailboxType)(SuperOffice.Data.MailboxType)
  name.vb: AssignByReflection(Of MailboxType)(MailboxType)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<MailboxType>
    nameWithType: ObjectExtensions.AssignByReflection<MailboxType>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.MailboxType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.MailboxType
    name: MailboxType
    nameWithType: MailboxType
    fullName: SuperOffice.Data.MailboxType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of MailboxType)
    nameWithType: ObjectExtensions.AssignByReflection(Of MailboxType)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.MailboxType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.MailboxType
    name: MailboxType
    nameWithType: MailboxType
    fullName: SuperOffice.Data.MailboxType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.MailboxType.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<MailboxType>()
  nameWithType: ObjectExtensions.GraphCopy<MailboxType>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.MailboxType>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of MailboxType)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.MailboxType)()
  name.vb: GraphCopy(Of MailboxType)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<MailboxType>
    nameWithType: ObjectExtensions.GraphCopy<MailboxType>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.MailboxType>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of MailboxType)
    nameWithType: ObjectExtensions.GraphCopy(Of MailboxType)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.MailboxType)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.MailboxType.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<MailboxType, To>()
  nameWithType: Converters.MapEnums<MailboxType, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.MailboxType, To>()
  nameWithType.vb: Converters.MapEnums(Of MailboxType, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.MailboxType, To)()
  name.vb: MapEnums(Of MailboxType, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<MailboxType, To>
    nameWithType: Converters.MapEnums<MailboxType, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.MailboxType, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of MailboxType, To)
    nameWithType: Converters.MapEnums(Of MailboxType, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.MailboxType, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.MailboxType
  commentId: T:SuperOffice.Data.MailboxType
  parent: SuperOffice.Data
  isExternal: true
  name: MailboxType
  nameWithType: MailboxType
  fullName: SuperOffice.Data.MailboxType
