### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  commentId: T:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  id: IAggregationPlugin
  parent: SuperOffice.CRM.ArchiveLists.Aggregation
  children:
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  langs:
  - csharp
  - vb
  name: IAggregationPlugin
  nameWithType: IAggregationPlugin
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nInterface for plugins to the aggregation system in archives. Except for the special\n<xref href=\"SuperOffice.CRM.ArchiveLists.Aggregation.GroupAggregation\" data-throw-if-not-resolved=\"false\"></xref>, aggregators accumulate or modify values\n"
  syntax:
    content: 'public interface IAggregationPlugin : IPlugin'
    content.vb: >-
      Public Interface IAggregationPlugin
          Inherits IPlugin
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  id: SetModifiers(System.String[])
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  langs:
  - csharp
  - vb
  name: SetModifiers(String[])
  nameWithType: IAggregationPlugin.SetModifiers(String[])
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nAccept modifiers in the column definition\n"
  syntax:
    content: void SetModifiers(string[] modifiers)
    parameters:
    - id: modifiers
      type: System.String[]
    content.vb: Sub SetModifiers(modifiers As String())
  overload: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers*
  nameWithType.vb: IAggregationPlugin.SetModifiers(String())
  fullName.vb: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers(System.String())
  name.vb: SetModifiers(String())
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  id: AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  langs:
  - csharp
  - vb
  name: AddItem(ArchiveColumnData)
  nameWithType: IAggregationPlugin.AddItem(ArchiveColumnData)
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nAccept one item, and return its replacement (output in the detail row)\n"
  syntax:
    content: ArchiveColumnData AddItem(ArchiveColumnData item)
    parameters:
    - id: item
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
      description: >-
        This value will be output in the current detail row. It can be the incoming item unchaged,

        a transformation of it, or the current (running) value of the aggregate - it all depends on

        the precise function the aggregator
    content.vb: Function AddItem(item As ArchiveColumnData) As ArchiveColumnData
  overload: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem*
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  id: AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  langs:
  - csharp
  - vb
  name: AddItem(ArchiveColumnData[])
  nameWithType: IAggregationPlugin.AddItem(ArchiveColumnData[])
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nAccept an array of items, and return one field\n"
  syntax:
    content: ArchiveColumnData AddItem(ArchiveColumnData[] items)
    parameters:
    - id: items
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnData[]
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
      description: "This value will be output in the current detail row. It can be one of the the \nincoming items unchanged, a transformation of them, or the current (running) value of \nthe aggregate - it all depends on the precise function the aggregator"
    content.vb: Function AddItem(items As ArchiveColumnData()) As ArchiveColumnData
  overload: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem*
  nameWithType.vb: IAggregationPlugin.AddItem(ArchiveColumnData())
  fullName.vb: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem(SuperOffice.CRM.ArchiveLists.ArchiveColumnData())
  name.vb: AddItem(ArchiveColumnData())
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  commentId: M:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  id: GetAggregatedValue
  parent: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin
  langs:
  - csharp
  - vb
  name: GetAggregatedValue()
  nameWithType: IAggregationPlugin.GetAggregatedValue()
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists.Aggregation
  summary: "\nReturn the aggregate value (output in the footer)\n"
  syntax:
    content: ArchiveColumnData GetAggregatedValue()
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    content.vb: Function GetAggregatedValue As ArchiveColumnData
  overload: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue*
references:
- uid: SuperOffice.CRM.ArchiveLists.Aggregation
  commentId: N:SuperOffice.CRM.ArchiveLists.Aggregation
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists.Aggregation
  nameWithType: SuperOffice.CRM.ArchiveLists.Aggregation
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IAggregationPlugin, To>()
  nameWithType: EnumUtil.MapEnums<IAggregationPlugin, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IAggregationPlugin, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To)()
  name.vb: MapEnums(Of IAggregationPlugin, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IAggregationPlugin, To>
    nameWithType: EnumUtil.MapEnums<IAggregationPlugin, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IAggregationPlugin, To)
    nameWithType: EnumUtil.MapEnums(Of IAggregationPlugin, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IAggregationPlugin, To>()
  nameWithType: Converters.MapEnums<IAggregationPlugin, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To>()
  nameWithType.vb: Converters.MapEnums(Of IAggregationPlugin, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To)()
  name.vb: MapEnums(Of IAggregationPlugin, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IAggregationPlugin, To>
    nameWithType: Converters.MapEnums<IAggregationPlugin, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IAggregationPlugin, To)
    nameWithType: Converters.MapEnums(Of IAggregationPlugin, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers
  isExternal: true
  name: SetModifiers
  nameWithType: IAggregationPlugin.SetModifiers
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.SetModifiers
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem
  isExternal: true
  name: AddItem
  nameWithType: IAggregationPlugin.AddItem
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.AddItem
- uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
  commentId: T:SuperOffice.CRM.ArchiveLists.ArchiveColumnData
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: ArchiveColumnData
  nameWithType: ArchiveColumnData
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData[]
  isExternal: true
  name: ArchiveColumnData[]
  nameWithType: ArchiveColumnData[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData[]
  nameWithType.vb: ArchiveColumnData()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveColumnData()
  name.vb: ArchiveColumnData()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    name: ArchiveColumnData
    nameWithType: ArchiveColumnData
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    name: ArchiveColumnData
    nameWithType: ArchiveColumnData
    fullName: SuperOffice.CRM.ArchiveLists.ArchiveColumnData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
  isExternal: true
  name: GetAggregatedValue
  nameWithType: IAggregationPlugin.GetAggregatedValue
  fullName: SuperOffice.CRM.ArchiveLists.Aggregation.IAggregationPlugin.GetAggregatedValue
