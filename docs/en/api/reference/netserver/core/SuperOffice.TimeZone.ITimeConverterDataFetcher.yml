### YamlMime:ManagedReference
items:
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher
  commentId: T:SuperOffice.TimeZone.ITimeConverterDataFetcher
  id: ITimeConverterDataFetcher
  parent: SuperOffice.TimeZone
  children:
  - SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId
  - SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData
  langs:
  - csharp
  - vb
  name: ITimeConverterDataFetcher
  nameWithType: ITimeConverterDataFetcher
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher
  type: Interface
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  summary: "\nInterface for Timezonedata fetchers.\n"
  syntax:
    content: public interface ITimeConverterDataFetcher
    content.vb: Public Interface ITimeConverterDataFetcher
  extensionMethods:
  - SuperOffice.TimeZone.ITimeConverterDataFetcher.EnumUtil.MapEnums``2
  - SuperOffice.TimeZone.ITimeConverterDataFetcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData
  commentId: M:SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData
  id: GetTimeZoneData
  parent: SuperOffice.TimeZone.ITimeConverterDataFetcher
  langs:
  - csharp
  - vb
  name: GetTimeZoneData()
  nameWithType: ITimeConverterDataFetcher.GetTimeZoneData()
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  summary: "\nGet timezonedata\n"
  syntax:
    content: TimeZoneData[] GetTimeZoneData()
    return:
      type: SuperOffice.CRM.TimeZoneData[]
    content.vb: Function GetTimeZoneData As TimeZoneData()
  overload: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData*
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId
  commentId: M:SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId
  id: GetBaseTimeZoneId
  parent: SuperOffice.TimeZone.ITimeConverterDataFetcher
  langs:
  - csharp
  - vb
  name: GetBaseTimeZoneId()
  nameWithType: ITimeConverterDataFetcher.GetBaseTimeZoneId()
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.TimeZone
  summary: "\nGet base timezone id\n"
  syntax:
    content: int GetBaseTimeZoneId()
    return:
      type: System.Int32
    content.vb: Function GetBaseTimeZoneId As Integer
  overload: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId*
references:
- uid: SuperOffice.TimeZone
  commentId: N:SuperOffice.TimeZone
  isExternal: true
  name: SuperOffice.TimeZone
  nameWithType: SuperOffice.TimeZone
  fullName: SuperOffice.TimeZone
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ITimeConverterDataFetcher, To>()
  nameWithType: EnumUtil.MapEnums<ITimeConverterDataFetcher, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.TimeZone.ITimeConverterDataFetcher, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ITimeConverterDataFetcher, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.TimeZone.ITimeConverterDataFetcher, To)()
  name.vb: MapEnums(Of ITimeConverterDataFetcher, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ITimeConverterDataFetcher, To>
    nameWithType: EnumUtil.MapEnums<ITimeConverterDataFetcher, To>
    fullName: EnumUtil.MapEnums<SuperOffice.TimeZone.ITimeConverterDataFetcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ITimeConverterDataFetcher, To)
    nameWithType: EnumUtil.MapEnums(Of ITimeConverterDataFetcher, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.TimeZone.ITimeConverterDataFetcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ITimeConverterDataFetcher, To>()
  nameWithType: Converters.MapEnums<ITimeConverterDataFetcher, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.TimeZone.ITimeConverterDataFetcher, To>()
  nameWithType.vb: Converters.MapEnums(Of ITimeConverterDataFetcher, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.TimeZone.ITimeConverterDataFetcher, To)()
  name.vb: MapEnums(Of ITimeConverterDataFetcher, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ITimeConverterDataFetcher, To>
    nameWithType: Converters.MapEnums<ITimeConverterDataFetcher, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.TimeZone.ITimeConverterDataFetcher, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ITimeConverterDataFetcher, To)
    nameWithType: Converters.MapEnums(Of ITimeConverterDataFetcher, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.TimeZone.ITimeConverterDataFetcher, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData*
  commentId: Overload:SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData
  isExternal: true
  name: GetTimeZoneData
  nameWithType: ITimeConverterDataFetcher.GetTimeZoneData
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetTimeZoneData
- uid: SuperOffice.CRM.TimeZoneData[]
  isExternal: true
  name: TimeZoneData[]
  nameWithType: TimeZoneData[]
  fullName: SuperOffice.CRM.TimeZoneData[]
  nameWithType.vb: TimeZoneData()
  fullName.vb: SuperOffice.CRM.TimeZoneData()
  name.vb: TimeZoneData()
  spec.csharp:
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    nameWithType: TimeZoneData
    fullName: SuperOffice.CRM.TimeZoneData
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.TimeZoneData
    name: TimeZoneData
    nameWithType: TimeZoneData
    fullName: SuperOffice.CRM.TimeZoneData
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId*
  commentId: Overload:SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId
  isExternal: true
  name: GetBaseTimeZoneId
  nameWithType: ITimeConverterDataFetcher.GetBaseTimeZoneId
  fullName: SuperOffice.TimeZone.ITimeConverterDataFetcher.GetBaseTimeZoneId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
