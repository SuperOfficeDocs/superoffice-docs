### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.CredentialUsage
  commentId: T:SuperOffice.Data.CredentialUsage
  id: CredentialUsage
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.CredentialUsage.Inbound
  - SuperOffice.Data.CredentialUsage.Outbound
  - SuperOffice.Data.CredentialUsage.Session
  langs:
  - csharp
  - vb
  name: CredentialUsage
  nameWithType: CredentialUsage
  fullName: SuperOffice.Data.CredentialUsage
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nWhat kind of usage is this credential for\nThis Enum is used by:  Credentials.isActive\n"
  syntax:
    content: 'public enum CredentialUsage : short'
    content.vb: Public Enum CredentialUsage As Short
  extensionMethods:
  - SuperOffice.Data.CredentialUsage.EnumUtil.MapEnums``2
  - SuperOffice.Data.CredentialUsage.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.CredentialUsage)
  - SuperOffice.Data.CredentialUsage.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.CredentialUsage.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.CredentialUsage.Outbound
  commentId: F:SuperOffice.Data.CredentialUsage.Outbound
  id: Outbound
  parent: SuperOffice.Data.CredentialUsage
  langs:
  - csharp
  - vb
  name: Outbound
  nameWithType: CredentialUsage.Outbound
  fullName: SuperOffice.Data.CredentialUsage.Outbound
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: Credentials saved on behalf of an external system, not for authentication into NetServer\n"
  syntax:
    content: Outbound = 0
    return:
      type: SuperOffice.Data.CredentialUsage
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.CredentialUsage.Inbound
  commentId: F:SuperOffice.Data.CredentialUsage.Inbound
  id: Inbound
  parent: SuperOffice.Data.CredentialUsage
  langs:
  - csharp
  - vb
  name: Inbound
  nameWithType: CredentialUsage.Inbound
  fullName: SuperOffice.Data.CredentialUsage.Inbound
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Credentials to be used for authentication into NetServer, by a related plugin\n"
  syntax:
    content: Inbound = 1
    return:
      type: SuperOffice.Data.CredentialUsage
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.CredentialUsage.Session
  commentId: F:SuperOffice.Data.CredentialUsage.Session
  id: Session
  parent: SuperOffice.Data.CredentialUsage
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: CredentialUsage.Session
  fullName: SuperOffice.Data.CredentialUsage.Session
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Session ticket, for re-authentication of an existing session (automatically purged at first full authentication after validity expiration)\n"
  syntax:
    content: Session = 2
    return:
      type: SuperOffice.Data.CredentialUsage
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.CredentialUsage.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<CredentialUsage, To>()
  nameWithType: EnumUtil.MapEnums<CredentialUsage, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.CredentialUsage, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of CredentialUsage, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.CredentialUsage, To)()
  name.vb: MapEnums(Of CredentialUsage, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<CredentialUsage, To>
    nameWithType: EnumUtil.MapEnums<CredentialUsage, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.CredentialUsage, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of CredentialUsage, To)
    nameWithType: EnumUtil.MapEnums(Of CredentialUsage, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.CredentialUsage, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.CredentialUsage.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.CredentialUsage)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<CredentialUsage>(CredentialUsage)
  nameWithType: ObjectExtensions.AssignByReflection<CredentialUsage>(CredentialUsage)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.CredentialUsage>(SuperOffice.Data.CredentialUsage)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of CredentialUsage)(CredentialUsage)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.CredentialUsage)(SuperOffice.Data.CredentialUsage)
  name.vb: AssignByReflection(Of CredentialUsage)(CredentialUsage)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<CredentialUsage>
    nameWithType: ObjectExtensions.AssignByReflection<CredentialUsage>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.CredentialUsage>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.CredentialUsage
    name: CredentialUsage
    nameWithType: CredentialUsage
    fullName: SuperOffice.Data.CredentialUsage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of CredentialUsage)
    nameWithType: ObjectExtensions.AssignByReflection(Of CredentialUsage)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.CredentialUsage)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.CredentialUsage
    name: CredentialUsage
    nameWithType: CredentialUsage
    fullName: SuperOffice.Data.CredentialUsage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.CredentialUsage.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<CredentialUsage>()
  nameWithType: ObjectExtensions.GraphCopy<CredentialUsage>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.CredentialUsage>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of CredentialUsage)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.CredentialUsage)()
  name.vb: GraphCopy(Of CredentialUsage)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<CredentialUsage>
    nameWithType: ObjectExtensions.GraphCopy<CredentialUsage>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.CredentialUsage>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of CredentialUsage)
    nameWithType: ObjectExtensions.GraphCopy(Of CredentialUsage)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.CredentialUsage)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.CredentialUsage.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<CredentialUsage, To>()
  nameWithType: Converters.MapEnums<CredentialUsage, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.CredentialUsage, To>()
  nameWithType.vb: Converters.MapEnums(Of CredentialUsage, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.CredentialUsage, To)()
  name.vb: MapEnums(Of CredentialUsage, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<CredentialUsage, To>
    nameWithType: Converters.MapEnums<CredentialUsage, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.CredentialUsage, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of CredentialUsage, To)
    nameWithType: Converters.MapEnums(Of CredentialUsage, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.CredentialUsage, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.CredentialUsage
  commentId: T:SuperOffice.Data.CredentialUsage
  parent: SuperOffice.Data
  isExternal: true
  name: CredentialUsage
  nameWithType: CredentialUsage
  fullName: SuperOffice.Data.CredentialUsage
