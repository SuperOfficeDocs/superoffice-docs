### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Archives.SaleList
  commentId: T:SuperOffice.CRM.Archives.SaleList
  id: SaleList
  parent: SuperOffice.CRM.Archives
  children:
  - SuperOffice.CRM.Archives.SaleList.GetIndexOfItem(SuperOffice.CRM.Archives.SaleListItem)
  - SuperOffice.CRM.Archives.SaleList.GetSale(System.Int32)
  - SuperOffice.CRM.Archives.SaleList.GetSaleListItem(System.Int32)
  - SuperOffice.CRM.Archives.SaleList.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  - SuperOffice.CRM.Archives.SaleList.SaleExist(System.Int32)
  langs:
  - csharp
  - vb
  name: SaleList
  nameWithType: SaleList
  fullName: SuperOffice.CRM.Archives.SaleList
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nSaleList implements the sale list in SuperOffice. \n"
  syntax:
    content: 'public sealed class SaleList : ListBase<SaleList.SaleListQuery, SaleListItem>, IEnumerable, IEnumerable<SaleListItem>, IList, ICollection, IList<SaleListItem>, ICollection<SaleListItem>'
    content.vb: >-
      Public NotInheritable Class SaleList
          Inherits ListBase(Of SaleList.SaleListQuery, SaleListItem)
          Implements IEnumerable, IEnumerable(Of SaleListItem), IList, ICollection, IList(Of SaleListItem), ICollection(Of SaleListItem)
  inheritance:
  - System.Object
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  implements:
  - System.Collections.IEnumerable
  - System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.SaleListItem}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IList{SuperOffice.CRM.Archives.SaleListItem}
  - System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.SaleListItem}
  inheritedMembers:
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.CopyTo(System.Array,System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.CopyTo(SuperOffice.CRM.Archives.SaleListItem[],System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IndexOf(SuperOffice.CRM.Archives.SaleListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Contains(SuperOffice.CRM.Archives.SaleListItem)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.GetEnumerator
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Item(System.Int32)
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.ListCollection
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Count
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IsFixedSize
  - SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IsReadOnly
  extensionMethods:
  - SuperOffice.CRM.Archives.SaleList.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Archives.SaleList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.CRM.Archives.SaleList.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Archives.SaleList.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  id: OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Archives.SaleList
  langs:
  - csharp
  - vb
  name: OnLoadAsync(SaleList.SaleListQuery, SoDataReader, CancellationToken)
  nameWithType: SaleList.OnLoadAsync(SaleList.SaleListQuery, SoDataReader, CancellationToken)
  fullName: SuperOffice.CRM.Archives.SaleList.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nResponsible for reading each row with data from the SoDataReader and insert the object each row represents\ninto the class&apos; collection. \n"
  syntax:
    content: protected override Task OnLoadAsync(SaleList.SaleListQuery query, SoDataReader reader, CancellationToken cancellationToken = null)
    parameters:
    - id: query
      type: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    - id: reader
      type: SuperOffice.Data.SoDataReader
      description: The reader which contains all data in the list.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Protected Overrides Function OnLoadAsync(query As SaleList.SaleListQuery, reader As SoDataReader, cancellationToken As CancellationToken = Nothing) As Task
  overridden: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Archives.SaleList.OnLoadAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Archives.SaleList.GetSale(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.SaleList.GetSale(System.Int32)
  id: GetSale(System.Int32)
  parent: SuperOffice.CRM.Archives.SaleList
  langs:
  - csharp
  - vb
  name: GetSale(Int32)
  nameWithType: SaleList.GetSale(Int32)
  fullName: SuperOffice.CRM.Archives.SaleList.GetSale(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the sale described by the sale_id.\n"
  syntax:
    content: public Sale GetSale(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: The sale in question
    return:
      type: SuperOffice.CRM.Entities.Sale
      description: The Sale
    content.vb: Public Function GetSale(saleId As Integer) As Sale
  overload: SuperOffice.CRM.Archives.SaleList.GetSale*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.SaleList.SaleExist(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.SaleList.SaleExist(System.Int32)
  id: SaleExist(System.Int32)
  parent: SuperOffice.CRM.Archives.SaleList
  langs:
  - csharp
  - vb
  name: SaleExist(Int32)
  nameWithType: SaleList.SaleExist(Int32)
  fullName: SuperOffice.CRM.Archives.SaleList.SaleExist(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nChecks if the sale described by the sale exist in the list.\n"
  syntax:
    content: public bool SaleExist(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: The sale
    return:
      type: System.Boolean
      description: True/false
    content.vb: Public Function SaleExist(saleId As Integer) As Boolean
  overload: SuperOffice.CRM.Archives.SaleList.SaleExist*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.SaleList.GetIndexOfItem(SuperOffice.CRM.Archives.SaleListItem)
  commentId: M:SuperOffice.CRM.Archives.SaleList.GetIndexOfItem(SuperOffice.CRM.Archives.SaleListItem)
  id: GetIndexOfItem(SuperOffice.CRM.Archives.SaleListItem)
  parent: SuperOffice.CRM.Archives.SaleList
  langs:
  - csharp
  - vb
  name: GetIndexOfItem(SaleListItem)
  nameWithType: SaleList.GetIndexOfItem(SaleListItem)
  fullName: SuperOffice.CRM.Archives.SaleList.GetIndexOfItem(SuperOffice.CRM.Archives.SaleListItem)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nReturns the index of the given item. \n"
  syntax:
    content: public int GetIndexOfItem(SaleListItem sale)
    parameters:
    - id: sale
      type: SuperOffice.CRM.Archives.SaleListItem
      description: The salelistitem to search for.
    return:
      type: System.Int32
      description: The index of the SaleListItem.
    content.vb: Public Function GetIndexOfItem(sale As SaleListItem) As Integer
  overload: SuperOffice.CRM.Archives.SaleList.GetIndexOfItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Archives.SaleList.GetSaleListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Archives.SaleList.GetSaleListItem(System.Int32)
  id: GetSaleListItem(System.Int32)
  parent: SuperOffice.CRM.Archives.SaleList
  langs:
  - csharp
  - vb
  name: GetSaleListItem(Int32)
  nameWithType: SaleList.GetSaleListItem(Int32)
  fullName: SuperOffice.CRM.Archives.SaleList.GetSaleListItem(System.Int32)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Archives
  summary: "\nWill return the SaleListItem described by the saleId.\n"
  syntax:
    content: public SaleListItem GetSaleListItem(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: The person
    return:
      type: SuperOffice.CRM.Archives.SaleListItem
      description: The sale.
    content.vb: Public Function GetSaleListItem(saleId As Integer) As SaleListItem
  overload: SuperOffice.CRM.Archives.SaleList.GetSaleListItem*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Archives
  commentId: N:SuperOffice.CRM.Archives
  isExternal: true
  name: SuperOffice.CRM.Archives
  nameWithType: SuperOffice.CRM.Archives
  fullName: SuperOffice.CRM.Archives
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  commentId: T:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  parent: SuperOffice.CRM.Lists
  definition: SuperOffice.CRM.Lists.ListBase`2
  name: ListBase<SaleList.SaleListQuery, SaleListItem>
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem)
  name.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.SaleListItem}
  commentId: '!:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Archives.SaleListItem}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SaleListItem>
  nameWithType: IEnumerable<SaleListItem>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Archives.SaleListItem>
  nameWithType.vb: IEnumerable(Of SaleListItem)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Archives.SaleListItem)
  name.vb: IEnumerable(Of SaleListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Generic.IList{SuperOffice.CRM.Archives.SaleListItem}
  commentId: '!:System.Collections.Generic.IList{SuperOffice.CRM.Archives.SaleListItem}'
  definition: System.Collections.Generic.IList`1
  name: IList<SaleListItem>
  nameWithType: IList<SaleListItem>
  fullName: System.Collections.Generic.IList<SuperOffice.CRM.Archives.SaleListItem>
  nameWithType.vb: IList(Of SaleListItem)
  fullName.vb: System.Collections.Generic.IList(Of SuperOffice.CRM.Archives.SaleListItem)
  name.vb: IList(Of SaleListItem)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.SaleListItem}
  commentId: '!:System.Collections.Generic.ICollection{SuperOffice.CRM.Archives.SaleListItem}'
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<SaleListItem>
  nameWithType: ICollection<SaleListItem>
  fullName: System.Collections.Generic.ICollection<SuperOffice.CRM.Archives.SaleListItem>
  nameWithType.vb: ICollection(Of SaleListItem)
  fullName.vb: System.Collections.Generic.ICollection(Of SuperOffice.CRM.Archives.SaleListItem)
  name.vb: ICollection(Of SaleListItem)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.CopyTo(System.Array,System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.CopyTo(SuperOffice.CRM.Archives.SaleListItem[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.CopyTo(SuperOffice.CRM.Archives.SaleListItem[],System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  name: CopyTo(SaleListItem[], Int32)
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.CopyTo(SaleListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.CopyTo(SuperOffice.CRM.Archives.SaleListItem[], System.Int32)
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).CopyTo(SaleListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).CopyTo(SuperOffice.CRM.Archives.SaleListItem(), System.Int32)
  name.vb: CopyTo(SaleListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IndexOf(SuperOffice.CRM.Archives.SaleListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IndexOf(SuperOffice.CRM.Archives.SaleListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  name: IndexOf(SaleListItem)
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.IndexOf(SaleListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.IndexOf(SuperOffice.CRM.Archives.SaleListItem)
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).IndexOf(SaleListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).IndexOf(SuperOffice.CRM.Archives.SaleListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Contains(SuperOffice.CRM.Archives.SaleListItem)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Contains(SuperOffice.CRM.Archives.SaleListItem)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  name: Contains(SaleListItem)
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.Contains(SaleListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.Contains(SuperOffice.CRM.Archives.SaleListItem)
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).Contains(SaleListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).Contains(SuperOffice.CRM.Archives.SaleListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleListItem
    name: SaleListItem
    nameWithType: SaleListItem
    fullName: SuperOffice.CRM.Archives.SaleListItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  name: OnLoadAsync(SaleList.SaleListQuery, SoDataReader, CancellationToken)
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.OnLoadAsync(SaleList.SaleListQuery, SoDataReader, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).OnLoadAsync(SaleList.SaleListQuery, SoDataReader, CancellationToken)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).OnLoadAsync(SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    name: SaleList.SaleListQuery
    nameWithType: SaleList.SaleListQuery
    fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.GetEnumerator
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  name: GetEnumerator()
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Item(System.Int32)
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  name: Item[Int32]
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of SaleList.SaleListQuery, SaleListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.ListCollection
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  name: ListCollection
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.ListCollection
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.Count
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.Count
  name: Count
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.Count
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IsFixedSize
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  name: IsFixedSize
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}.IsReadOnly
  parent: SuperOffice.CRM.Lists.ListBase{SuperOffice.CRM.Archives.SaleList.SaleListQuery,SuperOffice.CRM.Archives.SaleListItem}
  definition: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  name: IsReadOnly
  nameWithType: ListBase<SaleList.SaleListQuery, SaleListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of SaleList.SaleListQuery, SaleListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of SuperOffice.CRM.Archives.SaleList.SaleListQuery, SuperOffice.CRM.Archives.SaleListItem).IsReadOnly
- uid: SuperOffice.CRM.Archives.SaleList.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SaleList, To>()
  nameWithType: EnumUtil.MapEnums<SaleList, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.SaleList, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SaleList, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.SaleList, To)()
  name.vb: MapEnums(Of SaleList, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SaleList, To>
    nameWithType: EnumUtil.MapEnums<SaleList, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Archives.SaleList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SaleList, To)
    nameWithType: EnumUtil.MapEnums(Of SaleList, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Archives.SaleList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Archives.SaleList.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SaleList, To>()
  nameWithType: Converters.MapEnums<SaleList, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.SaleList, To>()
  nameWithType.vb: Converters.MapEnums(Of SaleList, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.SaleList, To)()
  name.vb: MapEnums(Of SaleList, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SaleList, To>
    nameWithType: Converters.MapEnums<SaleList, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Archives.SaleList, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SaleList, To)
    nameWithType: Converters.MapEnums(Of SaleList, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Archives.SaleList, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Lists.ListBase`2
  commentId: T:SuperOffice.CRM.Lists.ListBase`2
  isExternal: true
  name: ListBase<TListSelect, TListItem>
  nameWithType: ListBase<TListSelect, TListItem>
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>
  nameWithType.vb: ListBase(Of TListSelect, TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem)
  name.vb: ListBase(Of TListSelect, TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2
    name: ListBase
    nameWithType: ListBase
    fullName: SuperOffice.CRM.Lists.ListBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists
  commentId: N:SuperOffice.CRM.Lists
  isExternal: true
  name: SuperOffice.CRM.Lists
  nameWithType: SuperOffice.CRM.Lists
  fullName: SuperOffice.CRM.Lists
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  isExternal: true
  name: IList<>
  nameWithType: IList<>
  fullName: System.Collections.Generic.IList<>
  nameWithType.vb: IList(Of )
  fullName.vb: System.Collections.Generic.IList(Of )
  name.vb: IList(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: System.Collections.Generic.ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: System.Collections.Generic.ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(Array, Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(Array, Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
  isExternal: true
  name: CopyTo(TListItem[], Int32)
  nameWithType: ListBase<TListSelect, TListItem>.CopyTo(TListItem[], Int32)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo(TListItem[], System.Int32)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo(TListItem(), System.Int32)
  name.vb: CopyTo(TListItem(), Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase<TListSelect, TListItem>.CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.CopyTo(`1[],System.Int32)
    name: CopyTo
    nameWithType: ListBase(Of TListSelect, TListItem).CopyTo
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
  isExternal: true
  name: IndexOf(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase<TListSelect, TListItem>.IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.IndexOf(`1)
    name: IndexOf
    nameWithType: ListBase(Of TListSelect, TListItem).IndexOf
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
  isExternal: true
  name: Contains(TListItem)
  nameWithType: ListBase<TListSelect, TListItem>.Contains(TListItem)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains(TListItem)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Contains(TListItem)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains(TListItem)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase<TListSelect, TListItem>.Contains
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Contains(`1)
    name: Contains
    nameWithType: ListBase(Of TListSelect, TListItem).Contains
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListItem
    nameWithType: TListItem
    fullName: TListItem
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
  isExternal: true
  name: OnLoadAsync(TListSelect, SoDataReader, CancellationToken)
  nameWithType: ListBase<TListSelect, TListItem>.OnLoadAsync(TListSelect, SoDataReader, CancellationToken)
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoadAsync(TListSelect, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  nameWithType.vb: ListBase(Of TListSelect, TListItem).OnLoadAsync(TListSelect, SoDataReader, CancellationToken)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoadAsync(TListSelect, SuperOffice.Data.SoDataReader, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase<TListSelect, TListItem>.OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.OnLoadAsync(`0,SuperOffice.Data.SoDataReader,System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: ListBase(Of TListSelect, TListItem).OnLoadAsync
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TListSelect
    nameWithType: TListSelect
    fullName: TListSelect
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SoDataReader
    name: SoDataReader
    nameWithType: SoDataReader
    fullName: SuperOffice.Data.SoDataReader
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  commentId: M:SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator()
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator()
  nameWithType.vb: ListBase(Of TListSelect, TListItem).GetEnumerator()
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator()
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase<TListSelect, TListItem>.GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.GetEnumerator
    name: GetEnumerator
    nameWithType: ListBase(Of TListSelect, TListItem).GetEnumerator
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: ListBase<TListSelect, TListItem>.Item[Int32]
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item[System.Int32]
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Item(Int32)
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase<TListSelect, TListItem>.Item
    fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Lists.ListBase`2.Item(System.Int32)
    name: Item
    nameWithType: ListBase(Of TListSelect, TListItem).Item
    fullName: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Lists.ListBase`2.ListCollection
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.ListCollection
  isExternal: true
  name: ListCollection
  nameWithType: ListBase<TListSelect, TListItem>.ListCollection
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.ListCollection
  nameWithType.vb: ListBase(Of TListSelect, TListItem).ListCollection
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).ListCollection
- uid: SuperOffice.CRM.Lists.ListBase`2.Count
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.Count
  isExternal: true
  name: Count
  nameWithType: ListBase<TListSelect, TListItem>.Count
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.Count
  nameWithType.vb: ListBase(Of TListSelect, TListItem).Count
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).Count
- uid: SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsFixedSize
  isExternal: true
  name: IsFixedSize
  nameWithType: ListBase<TListSelect, TListItem>.IsFixedSize
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsFixedSize
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsFixedSize
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsFixedSize
- uid: SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  commentId: P:SuperOffice.CRM.Lists.ListBase`2.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ListBase<TListSelect, TListItem>.IsReadOnly
  fullName: SuperOffice.CRM.Lists.ListBase<TListSelect, TListItem>.IsReadOnly
  nameWithType.vb: ListBase(Of TListSelect, TListItem).IsReadOnly
  fullName.vb: SuperOffice.CRM.Lists.ListBase(Of TListSelect, TListItem).IsReadOnly
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Archives.SaleList.OnLoadAsync*
  commentId: Overload:SuperOffice.CRM.Archives.SaleList.OnLoadAsync
  isExternal: true
  name: OnLoadAsync
  nameWithType: SaleList.OnLoadAsync
  fullName: SuperOffice.CRM.Archives.SaleList.OnLoadAsync
- uid: SuperOffice.CRM.Archives.SaleList.SaleListQuery
  commentId: T:SuperOffice.CRM.Archives.SaleList.SaleListQuery
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: SaleList.SaleListQuery
  nameWithType: SaleList.SaleListQuery
  fullName: SuperOffice.CRM.Archives.SaleList.SaleListQuery
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Archives.SaleList.GetSale*
  commentId: Overload:SuperOffice.CRM.Archives.SaleList.GetSale
  isExternal: true
  name: GetSale
  nameWithType: SaleList.GetSale
  fullName: SuperOffice.CRM.Archives.SaleList.GetSale
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Entities.Sale
  commentId: T:SuperOffice.CRM.Entities.Sale
  parent: SuperOffice.CRM.Entities
  isExternal: true
  name: Sale
  nameWithType: Sale
  fullName: SuperOffice.CRM.Entities.Sale
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: SuperOffice.CRM.Archives.SaleList.SaleExist*
  commentId: Overload:SuperOffice.CRM.Archives.SaleList.SaleExist
  isExternal: true
  name: SaleExist
  nameWithType: SaleList.SaleExist
  fullName: SuperOffice.CRM.Archives.SaleList.SaleExist
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Archives.SaleList.GetIndexOfItem*
  commentId: Overload:SuperOffice.CRM.Archives.SaleList.GetIndexOfItem
  isExternal: true
  name: GetIndexOfItem
  nameWithType: SaleList.GetIndexOfItem
  fullName: SuperOffice.CRM.Archives.SaleList.GetIndexOfItem
- uid: SuperOffice.CRM.Archives.SaleListItem
  commentId: T:SuperOffice.CRM.Archives.SaleListItem
  parent: SuperOffice.CRM.Archives
  isExternal: true
  name: SaleListItem
  nameWithType: SaleListItem
  fullName: SuperOffice.CRM.Archives.SaleListItem
- uid: SuperOffice.CRM.Archives.SaleList.GetSaleListItem*
  commentId: Overload:SuperOffice.CRM.Archives.SaleList.GetSaleListItem
  isExternal: true
  name: GetSaleListItem
  nameWithType: SaleList.GetSaleListItem
  fullName: SuperOffice.CRM.Archives.SaleList.GetSaleListItem
