### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Security.Sentry
  commentId: T:SuperOffice.CRM.Security.Sentry
  id: Sentry
  parent: SuperOffice.CRM.Security
  children:
  - SuperOffice.CRM.Security.Sentry.#ctor(SuperOffice.CRM.Security.SentryQueryInfo)
  - SuperOffice.CRM.Security.Sentry.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.CRM.Security.Sentry.AssociateId
  - SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry
  - SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry
  - SuperOffice.CRM.Security.Sentry.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
  - SuperOffice.CRM.Security.Sentry.CanTableDo(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.ETableRight,System.Boolean)
  - SuperOffice.CRM.Security.Sentry.ClearRights
  - SuperOffice.CRM.Security.Sentry.CreateSentries(SuperOffice.Data.SQL.Select)
  - SuperOffice.CRM.Security.Sentry.CreateSentry(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.Sentry.DemandPlugins
  - SuperOffice.CRM.Security.Sentry.GetDateTimeField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.Sentry.GetFieldRight(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate(System.Int32)
  - SuperOffice.CRM.Security.Sentry.GetIntField(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.CRM.Security.Sentry.GetIsGhostField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.Sentry.GetMainRight
  - SuperOffice.CRM.Security.Sentry.GetPersistedIntField(SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex
  - SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex(System.Int32,System.Int32)
  - SuperOffice.CRM.Security.Sentry.GetRowSentry
  - SuperOffice.CRM.Security.Sentry.GetStringField(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.Sentry.GetTableRight(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.Sentry.GroupId
  - SuperOffice.CRM.Security.Sentry.IgnoreRowSentry
  - SuperOffice.CRM.Security.Sentry.IgnoreSentry
  - SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact(System.Int32,System.Int32)
  - SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner(System.Int32)
  - SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner(System.Int32)
  - SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner(System.Int32)
  - SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner(System.Int32)
  - SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner(System.Int32)
  - SuperOffice.CRM.Security.Sentry.IsFieldCovered(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.CRM.Security.Sentry.IsGhostRow
  - SuperOffice.CRM.Security.Sentry.IsNew
  - SuperOffice.CRM.Security.Sentry.IsPersonAssociate(System.Int32,System.Boolean)
  - SuperOffice.CRM.Security.Sentry.IsTableCovered(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.CRM.Security.Sentry.IterateLookups(SuperOffice.CRM.Security.LookupCollection)
  - SuperOffice.CRM.Security.Sentry.Lookups
  - SuperOffice.CRM.Security.Sentry.MainTable
  - SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight)
  - SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight,SuperOffice.Data.ETableRight)
  - SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.Data.ETableRight)
  - SuperOffice.CRM.Security.Sentry.MapTableToFieldRights(SuperOffice.Data.SQL.TableInfo,SuperOffice.CRM.Security.TableRight,SuperOffice.Data.SQL.FieldInfo[])
  - SuperOffice.CRM.Security.Sentry.Parent
  - SuperOffice.CRM.Security.Sentry.Registered
  - SuperOffice.CRM.Security.Sentry.RegisteredAssociateId
  - SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField
  - SuperOffice.CRM.Security.Sentry.RegisteredField
  - SuperOffice.CRM.Security.Sentry.RowId
  - SuperOffice.CRM.Security.Sentry.SentryQueryInfo
  - SuperOffice.CRM.Security.Sentry.SetAllTableRights(SuperOffice.Data.ETableRight,System.String)
  - SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights
  - SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights
  - SuperOffice.CRM.Security.Sentry.SuperComputeTableRights
  - SuperOffice.CRM.Security.Sentry._fieldRights
  - SuperOffice.CRM.Security.Sentry._lookups
  - SuperOffice.CRM.Security.Sentry._tableRights
  - SuperOffice.CRM.Security.Sentry.kFieldRights
  - SuperOffice.CRM.Security.Sentry.kTableRights
  langs:
  - csharp
  - vb
  name: Sentry
  nameWithType: Sentry
  fullName: SuperOffice.CRM.Security.Sentry
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: 'public abstract class Sentry : ICloneable'
    content.vb: Public MustInherit Class Sentry Implements ICloneable
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.CRM.Security.Sentry`1
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Security.Sentry.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Security.Sentry.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Security.Sentry.kTableRights
  commentId: F:SuperOffice.CRM.Security.Sentry.kTableRights
  id: kTableRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: kTableRights
  nameWithType: Sentry.kTableRights
  fullName: SuperOffice.CRM.Security.Sentry.kTableRights
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected const string kTableRights = "Rights"
    return:
      type: System.String
    content.vb: Protected Const kTableRights As String = "Rights"
- uid: SuperOffice.CRM.Security.Sentry.kFieldRights
  commentId: F:SuperOffice.CRM.Security.Sentry.kFieldRights
  id: kFieldRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: kFieldRights
  nameWithType: Sentry.kFieldRights
  fullName: SuperOffice.CRM.Security.Sentry.kFieldRights
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected const string kFieldRights = "Rights"
    return:
      type: System.String
    content.vb: Protected Const kFieldRights As String = "Rights"
- uid: SuperOffice.CRM.Security.Sentry._tableRights
  commentId: F:SuperOffice.CRM.Security.Sentry._tableRights
  id: _tableRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: _tableRights
  nameWithType: Sentry._tableRights
  fullName: SuperOffice.CRM.Security.Sentry._tableRights
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Holds the result of the table rights computations.

    Tells us if we can add/read/update/delete the row.

    This is a bit-flag, so more than one right may be set.

    Key = table number (from conceptual dictionary)

    Value = Tableright. Usually gotten from the <xref href="SuperOffice.CRM.Security.RightsFactory" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected TableRights _tableRights
    return:
      type: SuperOffice.CRM.Security.TableRights
    content.vb: Protected _tableRights As TableRights
- uid: SuperOffice.CRM.Security.Sentry._fieldRights
  commentId: F:SuperOffice.CRM.Security.Sentry._fieldRights
  id: _fieldRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: _fieldRights
  nameWithType: Sentry._fieldRights
  fullName: SuperOffice.CRM.Security.Sentry._fieldRights
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Holds the result of the field rights computations.

    The dictionary key is the field id, the dictionary value is the resulting <xref href="SuperOffice.CRM.Security.FieldRight" data-throw-if-not-resolved="false"></xref> rights object.

    The rights objects are shared among many instances -- they are copy-on-write.

    Key = field number (from conceptual dictionary)

    Value = FieldRight. Usually gotten from the <xref href="SuperOffice.CRM.Security.RightsFactory" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: protected FieldRights _fieldRights
    return:
      type: SuperOffice.CRM.Security.FieldRights
    content.vb: Protected _fieldRights As FieldRights
- uid: SuperOffice.CRM.Security.Sentry._lookups
  commentId: F:SuperOffice.CRM.Security.Sentry._lookups
  id: _lookups
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: _lookups
  nameWithType: Sentry._lookups
  fullName: SuperOffice.CRM.Security.Sentry._lookups
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Contains the list of row data providers that the sentry can consult.
  example: []
  syntax:
    content: protected LookupCollection _lookups
    return:
      type: SuperOffice.CRM.Security.LookupCollection
    content.vb: Protected _lookups As LookupCollection
- uid: SuperOffice.CRM.Security.Sentry.DemandPlugins
  commentId: M:SuperOffice.CRM.Security.Sentry.DemandPlugins
  id: DemandPlugins
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: DemandPlugins()
  nameWithType: Sentry.DemandPlugins()
  fullName: SuperOffice.CRM.Security.Sentry.DemandPlugins()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Demand that all required sentry plugins are present. See <xref href="SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames" data-throw-if-not-resolved="false"></xref> and <xref href="SuperOffice.CRM.Security.SentryPluginAttribute" data-throw-if-not-resolved="false"></xref> for further details.

    Called by NetServer during user authentication.
  remarks: >-
    These user-preferences all mean the same thing:<p></p>

    [section] key = val

    <pre><code class="lang-csharp">[SentryAddonNames] prog.id = prog.id

    [SentryAddonNames] 1 = prog.id

    [SentryAddonNames] foo bar = prog.id</code></pre>

    They all mean that the config file must load a sentry plug-in that declares itself as the "prog.id" plug-in.

    If the plug-in with this prog.id attribute is not loaded according to the principal plug-in configuration, an exception will be thrown.

    <p></p>

    To disable a sentry preference, change its value to 0 or to blank.
  example: []
  syntax:
    content: public static void DemandPlugins()
    content.vb: Public Shared Sub DemandPlugins()
  overload: SuperOffice.CRM.Security.Sentry.DemandPlugins*
  exceptions:
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if there are any sentry plugins missing and Sentry is enabled.
- uid: SuperOffice.CRM.Security.Sentry.#ctor(SuperOffice.CRM.Security.SentryQueryInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.#ctor(SuperOffice.CRM.Security.SentryQueryInfo)
  id: '#ctor(SuperOffice.CRM.Security.SentryQueryInfo)'
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: Sentry(SentryQueryInfo)
  nameWithType: Sentry.Sentry(SentryQueryInfo)
  fullName: SuperOffice.CRM.Security.Sentry.Sentry(SuperOffice.CRM.Security.SentryQueryInfo)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected Sentry(SentryQueryInfo coveredTables)
    parameters:
    - id: coveredTables
      type: SuperOffice.CRM.Security.SentryQueryInfo
    content.vb: Protected Sub New(coveredTables As SentryQueryInfo)
  overload: SuperOffice.CRM.Security.Sentry.#ctor*
  nameWithType.vb: Sentry.New(SentryQueryInfo)
  fullName.vb: SuperOffice.CRM.Security.Sentry.New(SuperOffice.CRM.Security.SentryQueryInfo)
  name.vb: New(SentryQueryInfo)
- uid: SuperOffice.CRM.Security.Sentry.CreateSentry(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.CreateSentry(SuperOffice.Data.SQL.TableInfo)
  id: CreateSentry(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: CreateSentry(TableInfo)
  nameWithType: Sentry.CreateSentry(TableInfo)
  fullName: SuperOffice.CRM.Security.Sentry.CreateSentry(SuperOffice.Data.SQL.TableInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Sentry Factory function. Given a table-info, finds the appropriate sentry type (if possible) 

    and creates a new instance.

    <p>The sentry must afterwards be populated with lookup interfaces to read the row.</p>
  example: []
  syntax:
    content: public static Sentry CreateSentry(TableInfo tableInfo)
    parameters:
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: >-
        The table we want covered:
                    Contact, Person, Appointment, Sale, Project, Selection, Relation are suitable TableInfo types.
    return:
      type: SuperOffice.CRM.Security.Sentry
      description: >-
        A sentry of the proper sub-class. 
                    Returns a ContactSentry if given a Contact.ContactId and a Contact.AssociateId field.
    content.vb: Public Shared Function CreateSentry(tableInfo As TableInfo) As Sentry
  overload: SuperOffice.CRM.Security.Sentry.CreateSentry*
- uid: SuperOffice.CRM.Security.Sentry.CreateSentries(SuperOffice.Data.SQL.Select)
  commentId: M:SuperOffice.CRM.Security.Sentry.CreateSentries(SuperOffice.Data.SQL.Select)
  id: CreateSentries(SuperOffice.Data.SQL.Select)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: CreateSentries(Select)
  nameWithType: Sentry.CreateSentries(Select)
  fullName: SuperOffice.CRM.Security.Sentry.CreateSentries(SuperOffice.Data.SQL.Select)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public static SentryCollection CreateSentries(Select sql)
    parameters:
    - id: sql
      type: SuperOffice.Data.SQL.Select
    return:
      type: SuperOffice.CRM.Security.SentryCollection
    content.vb: Public Shared Function CreateSentries(sql As [Select]) As SentryCollection
  overload: SuperOffice.CRM.Security.Sentry.CreateSentries*
- uid: SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry
  commentId: M:SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry
  id: BeginIgnoreSentry
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: BeginIgnoreSentry()
  nameWithType: Sentry.BeginIgnoreSentry()
  fullName: SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public static IDisposable BeginIgnoreSentry()
    return:
      type: System.IDisposable
    content.vb: Public Shared Function BeginIgnoreSentry() As IDisposable
  overload: SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry*
- uid: SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry
  commentId: M:SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry
  id: BeginIgnoreRowSentry
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: BeginIgnoreRowSentry()
  nameWithType: Sentry.BeginIgnoreRowSentry()
  fullName: SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public static IDisposable BeginIgnoreRowSentry()
    return:
      type: System.IDisposable
    content.vb: Public Shared Function BeginIgnoreRowSentry() As IDisposable
  overload: SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry*
- uid: SuperOffice.CRM.Security.Sentry.IgnoreRowSentry
  commentId: M:SuperOffice.CRM.Security.Sentry.IgnoreRowSentry
  id: IgnoreRowSentry
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IgnoreRowSentry()
  nameWithType: Sentry.IgnoreRowSentry()
  fullName: SuperOffice.CRM.Security.Sentry.IgnoreRowSentry()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public static bool IgnoreRowSentry()
    return:
      type: System.Boolean
    content.vb: Public Shared Function IgnoreRowSentry() As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IgnoreRowSentry*
- uid: SuperOffice.CRM.Security.Sentry.IgnoreSentry
  commentId: M:SuperOffice.CRM.Security.Sentry.IgnoreSentry
  id: IgnoreSentry
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IgnoreSentry()
  nameWithType: Sentry.IgnoreSentry()
  fullName: SuperOffice.CRM.Security.Sentry.IgnoreSentry()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Are we currently in an 'IgnoreSentry' state? This is <b>the</b> place to get the answer; do not try to directly

    compute it - just call this method
  remarks: IgnoreSentry can be set on the SoPrincipal.
  example: []
  syntax:
    content: public static bool IgnoreSentry()
    return:
      type: System.Boolean
      description: true if sentry should currently be ignored
    content.vb: Public Shared Function IgnoreSentry() As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IgnoreSentry*
- uid: SuperOffice.CRM.Security.Sentry.GetRowSentry
  commentId: M:SuperOffice.CRM.Security.Sentry.GetRowSentry
  id: GetRowSentry
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetRowSentry()
  nameWithType: Sentry.GetRowSentry()
  fullName: SuperOffice.CRM.Security.Sentry.GetRowSentry()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Create a copy of the Sentry holding the right instances of table and field infos.
  example: []
  syntax:
    content: public abstract Sentry GetRowSentry()
    return:
      type: SuperOffice.CRM.Security.Sentry
      description: New instance of the Sentry.
    content.vb: Public MustOverride Function GetRowSentry() As Sentry
  overload: SuperOffice.CRM.Security.Sentry.GetRowSentry*
- uid: SuperOffice.CRM.Security.Sentry.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.CRM.Security.Sentry.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  id: AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: AnalyzeQuery(PrivateSelect)
  nameWithType: Sentry.AnalyzeQuery(PrivateSelect)
  fullName: SuperOffice.CRM.Security.Sentry.AnalyzeQuery(SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public abstract void AnalyzeQuery(PrivateSelect sql)
    parameters:
    - id: sql
      type: SuperOffice.Data.SQL.PrivateSelect
    content.vb: Public MustOverride Sub AnalyzeQuery(sql As PrivateSelect)
  overload: SuperOffice.CRM.Security.Sentry.AnalyzeQuery*
- uid: SuperOffice.CRM.Security.Sentry.IterateLookups(SuperOffice.CRM.Security.LookupCollection)
  commentId: M:SuperOffice.CRM.Security.Sentry.IterateLookups(SuperOffice.CRM.Security.LookupCollection)
  id: IterateLookups(SuperOffice.CRM.Security.LookupCollection)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IterateLookups(LookupCollection)
  nameWithType: Sentry.IterateLookups(LookupCollection)
  fullName: SuperOffice.CRM.Security.Sentry.IterateLookups(SuperOffice.CRM.Security.LookupCollection)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Iterate over the lookup collection
  example: []
  syntax:
    content: protected IEnumerable<object> IterateLookups(LookupCollection lookup)
    parameters:
    - id: lookup
      type: SuperOffice.CRM.Security.LookupCollection
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{System.Object}
      description: ''
    content.vb: Protected Function IterateLookups(lookup As LookupCollection) As IEnumerable(Of Object)
  overload: SuperOffice.CRM.Security.Sentry.IterateLookups*
- uid: SuperOffice.CRM.Security.Sentry.GetIntField(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.CRM.Security.Sentry.GetIntField(SuperOffice.Data.SQL.FieldInfo[])
  id: GetIntField(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetIntField(params FieldInfo[])
  nameWithType: Sentry.GetIntField(params FieldInfo[])
  fullName: SuperOffice.CRM.Security.Sentry.GetIntField(params SuperOffice.Data.SQL.FieldInfo[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Get the value of a field, as an int. The first lookup that returns a valid value is used.
  example: []
  syntax:
    content: public int GetIntField(params FieldInfo[] fields)
    parameters:
    - id: fields
      type: SuperOffice.Data.SQL.FieldInfo[]
      description: Field specification
    return:
      type: System.Int32
      description: Value, or 0 if none was found
    content.vb: Public Function GetIntField(ParamArray fields As FieldInfo()) As Integer
  overload: SuperOffice.CRM.Security.Sentry.GetIntField*
  nameWithType.vb: Sentry.GetIntField(ParamArray FieldInfo())
  fullName.vb: SuperOffice.CRM.Security.Sentry.GetIntField(ParamArray SuperOffice.Data.SQL.FieldInfo())
  name.vb: GetIntField(ParamArray FieldInfo())
- uid: SuperOffice.CRM.Security.Sentry.GetPersistedIntField(SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.CRM.Security.Sentry.GetPersistedIntField(SuperOffice.Data.SQL.FieldInfo[])
  id: GetPersistedIntField(SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetPersistedIntField(params FieldInfo[])
  nameWithType: Sentry.GetPersistedIntField(params FieldInfo[])
  fullName: SuperOffice.CRM.Security.Sentry.GetPersistedIntField(params SuperOffice.Data.SQL.FieldInfo[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Get the persisted value of a field, as an int. The first lookup that returns a valid value is used.
  example: []
  syntax:
    content: public int GetPersistedIntField(params FieldInfo[] fields)
    parameters:
    - id: fields
      type: SuperOffice.Data.SQL.FieldInfo[]
      description: Field specification
    return:
      type: System.Int32
      description: Value, or 0 if none was found
    content.vb: Public Function GetPersistedIntField(ParamArray fields As FieldInfo()) As Integer
  overload: SuperOffice.CRM.Security.Sentry.GetPersistedIntField*
  nameWithType.vb: Sentry.GetPersistedIntField(ParamArray FieldInfo())
  fullName.vb: SuperOffice.CRM.Security.Sentry.GetPersistedIntField(ParamArray SuperOffice.Data.SQL.FieldInfo())
  name.vb: GetPersistedIntField(ParamArray FieldInfo())
- uid: SuperOffice.CRM.Security.Sentry.GetIsGhostField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetIsGhostField(SuperOffice.Data.SQL.FieldInfo)
  id: GetIsGhostField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetIsGhostField(FieldInfo)
  nameWithType: Sentry.GetIsGhostField(FieldInfo)
  fullName: SuperOffice.CRM.Security.Sentry.GetIsGhostField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Determine whether the given field is a ghost field. It is sufficient that

    one lookup has a non-ghost, to return false
  example: []
  syntax:
    content: public bool GetIsGhostField(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field specification
    return:
      type: System.Boolean
      description: true if a) no lookup had the field, or b) all lookups that had the field, returned true (ghost)
    content.vb: Public Function GetIsGhostField(field As FieldInfo) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.GetIsGhostField*
- uid: SuperOffice.CRM.Security.Sentry.GetDateTimeField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetDateTimeField(SuperOffice.Data.SQL.FieldInfo)
  id: GetDateTimeField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetDateTimeField(FieldInfo)
  nameWithType: Sentry.GetDateTimeField(FieldInfo)
  fullName: SuperOffice.CRM.Security.Sentry.GetDateTimeField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Get the value of a field, as a DateTime. 

    The first lookup that returns a valid value is used.
  example: []
  syntax:
    content: public DateTime GetDateTimeField(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field specification
    return:
      type: System.DateTime
      description: DateTime value, or DateTime.MinValue if not found
    content.vb: Public Function GetDateTimeField(field As FieldInfo) As Date
  overload: SuperOffice.CRM.Security.Sentry.GetDateTimeField*
- uid: SuperOffice.CRM.Security.Sentry.GetStringField(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetStringField(SuperOffice.Data.SQL.FieldInfo)
  id: GetStringField(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetStringField(FieldInfo)
  nameWithType: Sentry.GetStringField(FieldInfo)
  fullName: SuperOffice.CRM.Security.Sentry.GetStringField(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Get the value of a field, as a string. 

    The first lookup that returns a valid value is used.
  example: []
  syntax:
    content: public string GetStringField(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: Field specification
    return:
      type: System.String
      description: string value, or empty string if not found
    content.vb: Public Function GetStringField(field As FieldInfo) As String
  overload: SuperOffice.CRM.Security.Sentry.GetStringField*
- uid: SuperOffice.CRM.Security.Sentry.ClearRights
  commentId: M:SuperOffice.CRM.Security.Sentry.ClearRights
  id: ClearRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: ClearRights()
  nameWithType: Sentry.ClearRights()
  fullName: SuperOffice.CRM.Security.Sentry.ClearRights()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Clears out old results from data. 

    Called every time a row is read.
  example: []
  syntax:
    content: public void ClearRights()
    content.vb: Public Sub ClearRights()
  overload: SuperOffice.CRM.Security.Sentry.ClearRights*
- uid: SuperOffice.CRM.Security.Sentry.GetMainRight
  commentId: M:SuperOffice.CRM.Security.Sentry.GetMainRight
  id: GetMainRight
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetMainRight()
  nameWithType: Sentry.GetMainRight()
  fullName: SuperOffice.CRM.Security.Sentry.GetMainRight()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public abstract ETableRight GetMainRight()
    return:
      type: SuperOffice.Data.ETableRight
    content.vb: Public MustOverride Function GetMainRight() As ETableRight
  overload: SuperOffice.CRM.Security.Sentry.GetMainRight*
- uid: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex
  commentId: M:SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex
  id: GetRecordOwnershipIndex
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetRecordOwnershipIndex()
  nameWithType: Sentry.GetRecordOwnershipIndex()
  fullName: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Return the sort of relationship between the principal user and the Sentry's user and group.
  example: []
  syntax:
    content: public virtual EOwnershipIndex GetRecordOwnershipIndex()
    return:
      type: SuperOffice.CRM.Security.EOwnershipIndex
      description: Relationship to the item.
    content.vb: Public Overridable Function GetRecordOwnershipIndex() As EOwnershipIndex
  overload: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex*
- uid: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex(System.Int32,System.Int32)
  id: GetRecordOwnershipIndex(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetRecordOwnershipIndex(int, int)
  nameWithType: Sentry.GetRecordOwnershipIndex(int, int)
  fullName: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex(int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Return the sort of relationship between the principal user and the given user and group. Use a cached value if possible
  example: []
  syntax:
    content: public static EOwnershipIndex GetRecordOwnershipIndex(int assocId, int groupId)
    parameters:
    - id: assocId
      type: System.Int32
      description: The associate id of the owner of the record being guarded.
    - id: groupId
      type: System.Int32
      description: The user-group that the associate id is part of.
    return:
      type: SuperOffice.CRM.Security.EOwnershipIndex
      description: Relationship to the item.
    content.vb: Public Shared Function GetRecordOwnershipIndex(assocId As Integer, groupId As Integer) As EOwnershipIndex
  overload: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex*
  nameWithType.vb: Sentry.GetRecordOwnershipIndex(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex(Integer, Integer)
  name.vb: GetRecordOwnershipIndex(Integer, Integer)
- uid: SuperOffice.CRM.Security.Sentry.MapTableToFieldRights(SuperOffice.Data.SQL.TableInfo,SuperOffice.CRM.Security.TableRight,SuperOffice.Data.SQL.FieldInfo[])
  commentId: M:SuperOffice.CRM.Security.Sentry.MapTableToFieldRights(SuperOffice.Data.SQL.TableInfo,SuperOffice.CRM.Security.TableRight,SuperOffice.Data.SQL.FieldInfo[])
  id: MapTableToFieldRights(SuperOffice.Data.SQL.TableInfo,SuperOffice.CRM.Security.TableRight,SuperOffice.Data.SQL.FieldInfo[])
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: MapTableToFieldRights(TableInfo, TableRight, FieldInfo[])
  nameWithType: Sentry.MapTableToFieldRights(TableInfo, TableRight, FieldInfo[])
  fullName: SuperOffice.CRM.Security.Sentry.MapTableToFieldRights(SuperOffice.Data.SQL.TableInfo, SuperOffice.CRM.Security.TableRight, SuperOffice.Data.SQL.FieldInfo[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Adds the field rights for all the fields in the given table, 

    derived from the given tableRight. i.e. an Update tableright will 

    give write permission on the fields.
  remarks: >-
    This function is used for creating the base fieldrights in SuperComputeFieldRights.

    The ComputeFieldRights function will invariably tweak these rights slightly.
  example: []
  syntax:
    content: protected void MapTableToFieldRights(TableInfo tableInfo, TableRight tableRight, FieldInfo[] fieldInfos = null)
    parameters:
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: All the fields in this table are added to the fieldrights list
    - id: tableRight
      type: SuperOffice.CRM.Security.TableRight
      description: These tablerights are used when computing the fieldrights
    - id: fieldInfos
      type: SuperOffice.Data.SQL.FieldInfo[]
    content.vb: Protected Sub MapTableToFieldRights(tableInfo As TableInfo, tableRight As TableRight, fieldInfos As FieldInfo() = Nothing)
  overload: SuperOffice.CRM.Security.Sentry.MapTableToFieldRights*
  nameWithType.vb: Sentry.MapTableToFieldRights(TableInfo, TableRight, FieldInfo())
  fullName.vb: SuperOffice.CRM.Security.Sentry.MapTableToFieldRights(SuperOffice.Data.SQL.TableInfo, SuperOffice.CRM.Security.TableRight, SuperOffice.Data.SQL.FieldInfo())
  name.vb: MapTableToFieldRights(TableInfo, TableRight, FieldInfo())
- uid: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight)
  commentId: M:SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight)
  id: MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: MakeFieldFromTableRight(TableRight)
  nameWithType: Sentry.MakeFieldFromTableRight(TableRight)
  fullName: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns the field rights for all the fields in the given table, 

    derived from the given tableRight.
  example: []
  syntax:
    content: protected FieldRight MakeFieldFromTableRight(TableRight tableRight)
    parameters:
    - id: tableRight
      type: SuperOffice.CRM.Security.TableRight
      description: >-
        The tableRight determines the field right returned. 
                    A select table right implies a read fieldright. 
                    An Insert or Update tableright will imply a write fieldright, depending on the record id.
    return:
      type: SuperOffice.CRM.Security.FieldRight
    content.vb: Protected Function MakeFieldFromTableRight(tableRight As TableRight) As FieldRight
  overload: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight*
- uid: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight,SuperOffice.Data.ETableRight)
  commentId: M:SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight,SuperOffice.Data.ETableRight)
  id: MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight,SuperOffice.Data.ETableRight)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: MakeFieldFromTableRight(TableRight, ETableRight)
  nameWithType: Sentry.MakeFieldFromTableRight(TableRight, ETableRight)
  fullName: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.CRM.Security.TableRight, SuperOffice.Data.ETableRight)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns the field rights for all the fields in the given table, 

    derived from the principal tableRight, minus the given tableRight.
  example: []
  syntax:
    content: protected FieldRight MakeFieldFromTableRight(TableRight tableRight, ETableRight allowOnly)
    parameters:
    - id: tableRight
      type: SuperOffice.CRM.Security.TableRight
      description: >-
        The tableRight determines the field right returned. 
                    A select table right implies a read fieldright. 
                    An Insert or Update tableright will imply a write fieldright.
    - id: allowOnly
      type: SuperOffice.Data.ETableRight
      description: >-
        If set, this tableRight is the one that triggers write-access when determining the fieldright returned.

        Useful for getting rid of write permissions when you want to force a read-only situation.
    return:
      type: SuperOffice.CRM.Security.FieldRight
    content.vb: Protected Function MakeFieldFromTableRight(tableRight As TableRight, allowOnly As ETableRight) As FieldRight
  overload: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight*
- uid: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.Data.ETableRight)
  commentId: M:SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.Data.ETableRight)
  id: MakeFieldFromTableRight(SuperOffice.Data.ETableRight)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: MakeFieldFromTableRight(ETableRight)
  nameWithType: Sentry.MakeFieldFromTableRight(ETableRight)
  fullName: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight(SuperOffice.Data.ETableRight)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected EFieldRight MakeFieldFromTableRight(ETableRight tableRight)
    parameters:
    - id: tableRight
      type: SuperOffice.Data.ETableRight
    return:
      type: SuperOffice.Data.EFieldRight
    content.vb: Protected Function MakeFieldFromTableRight(tableRight As ETableRight) As EFieldRight
  overload: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight*
- uid: SuperOffice.CRM.Security.Sentry.SuperComputeTableRights
  commentId: M:SuperOffice.CRM.Security.Sentry.SuperComputeTableRights
  id: SuperComputeTableRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: SuperComputeTableRights()
  nameWithType: Sentry.SuperComputeTableRights()
  fullName: SuperOffice.CRM.Security.Sentry.SuperComputeTableRights()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected abstract void SuperComputeTableRights()
    content.vb: Protected MustOverride Sub SuperComputeTableRights()
  overload: SuperOffice.CRM.Security.Sentry.SuperComputeTableRights*
- uid: SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights
  commentId: M:SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights
  id: SuperComputeFieldRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: SuperComputeFieldRights()
  nameWithType: Sentry.SuperComputeFieldRights()
  fullName: SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected abstract void SuperComputeFieldRights()
    content.vb: Protected MustOverride Sub SuperComputeFieldRights()
  overload: SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights*
- uid: SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights
  commentId: M:SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights
  id: SuperComputeDerivedTableRights
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: SuperComputeDerivedTableRights()
  nameWithType: Sentry.SuperComputeDerivedTableRights()
  fullName: SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: protected abstract void SuperComputeDerivedTableRights()
    content.vb: Protected MustOverride Sub SuperComputeDerivedTableRights()
  overload: SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights*
- uid: SuperOffice.CRM.Security.Sentry.GetTableRight(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetTableRight(SuperOffice.Data.SQL.TableInfo)
  id: GetTableRight(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetTableRight(TableInfo)
  nameWithType: Sentry.GetTableRight(TableInfo)
  fullName: SuperOffice.CRM.Security.Sentry.GetTableRight(SuperOffice.Data.SQL.TableInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns the tableright for the given table.

    The table right contains the rights mask and a reason why some rights are restricted.
  example: []
  syntax:
    content: public TableRight GetTableRight(TableInfo table)
    parameters:
    - id: table
      type: SuperOffice.Data.SQL.TableInfo
      description: ''
    return:
      type: SuperOffice.CRM.Security.TableRight
      description: Will return a new tableright with full rights if the table is not covered by this sentry.
    content.vb: Public Function GetTableRight(table As TableInfo) As TableRight
  overload: SuperOffice.CRM.Security.Sentry.GetTableRight*
- uid: SuperOffice.CRM.Security.Sentry.GetFieldRight(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetFieldRight(SuperOffice.Data.SQL.FieldInfo)
  id: GetFieldRight(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetFieldRight(FieldInfo)
  nameWithType: Sentry.GetFieldRight(FieldInfo)
  fullName: SuperOffice.CRM.Security.Sentry.GetFieldRight(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Returns the fieldright for the given table.
  example: []
  syntax:
    content: public FieldRight GetFieldRight(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: ''
    return:
      type: SuperOffice.CRM.Security.FieldRight
      description: Returns a new fieldright with full rights if the field is not covered by this sentry.
    content.vb: Public Function GetFieldRight(field As FieldInfo) As FieldRight
  overload: SuperOffice.CRM.Security.Sentry.GetFieldRight*
- uid: SuperOffice.CRM.Security.Sentry.SetAllTableRights(SuperOffice.Data.ETableRight,System.String)
  commentId: M:SuperOffice.CRM.Security.Sentry.SetAllTableRights(SuperOffice.Data.ETableRight,System.String)
  id: SetAllTableRights(SuperOffice.Data.ETableRight,System.String)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: SetAllTableRights(ETableRight, string)
  nameWithType: Sentry.SetAllTableRights(ETableRight, string)
  fullName: SuperOffice.CRM.Security.Sentry.SetAllTableRights(SuperOffice.Data.ETableRight, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Copies the given right and reason into all the tablerights, except for the main table.

    The main table can have different rights than the dependent tables.
  example: []
  syntax:
    content: protected abstract void SetAllTableRights(ETableRight right, string reason)
    parameters:
    - id: right
      type: SuperOffice.Data.ETableRight
      description: ''
    - id: reason
      type: System.String
      description: ''
    content.vb: Protected MustOverride Sub SetAllTableRights(right As ETableRight, reason As String)
  overload: SuperOffice.CRM.Security.Sentry.SetAllTableRights*
  nameWithType.vb: Sentry.SetAllTableRights(ETableRight, String)
  fullName.vb: SuperOffice.CRM.Security.Sentry.SetAllTableRights(SuperOffice.Data.ETableRight, String)
  name.vb: SetAllTableRights(ETableRight, String)
- uid: SuperOffice.CRM.Security.Sentry.CanTableDo(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.ETableRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Security.Sentry.CanTableDo(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.ETableRight,System.Boolean)
  id: CanTableDo(SuperOffice.Data.SQL.TableInfo,SuperOffice.Data.ETableRight,System.Boolean)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: CanTableDo(TableInfo, ETableRight, bool)
  nameWithType: Sentry.CanTableDo(TableInfo, ETableRight, bool)
  fullName: SuperOffice.CRM.Security.Sentry.CanTableDo(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.ETableRight, bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Determine if the principal user has the required access rights to the row this sentry is protecting.
  example:
  - >-
    ContactRow c = new ContactRow.IdxContactId( 1234 );

    bool canModify = c.Sentry.CanTableDo( c.TableInfo, ETableRight.Insert and ETableRight.Update, false );
  syntax:
    content: public virtual bool CanTableDo(TableInfo table, ETableRight rights, bool allOfRights)
    parameters:
    - id: table
      type: SuperOffice.Data.SQL.TableInfo
      description: ''
    - id: rights
      type: SuperOffice.Data.ETableRight
      description: one or more of the <xref href="SuperOffice.Data.ETableRight" data-throw-if-not-resolved="false"></xref> values combined as bitflags
    - id: allOfRights
      type: System.Boolean
      description: >-
        if true, then all of the rights must be available for the result to be true. 
                    Otherwise any of the rights must be available for the result to be true
    return:
      type: System.Boolean
      description: True if the user has the required access rights to the table.
    content.vb: Public Overridable Function CanTableDo(table As TableInfo, rights As ETableRight, allOfRights As Boolean) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.CanTableDo*
  nameWithType.vb: Sentry.CanTableDo(TableInfo, ETableRight, Boolean)
  fullName.vb: SuperOffice.CRM.Security.Sentry.CanTableDo(SuperOffice.Data.SQL.TableInfo, SuperOffice.Data.ETableRight, Boolean)
  name.vb: CanTableDo(TableInfo, ETableRight, Boolean)
- uid: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
  id: CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: CanFieldDo(FieldInfo, EFieldRight, bool)
  nameWithType: Sentry.CanFieldDo(FieldInfo, EFieldRight, bool)
  fullName: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.EFieldRight, bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Determine if the principal user has the required access rights to a field 

    belonging to the row this sentry is protecting.


    Note that the field does not have to be on the table
  example: []
  syntax:
    content: public virtual bool CanFieldDo(FieldInfo field, EFieldRight rights, bool allOfRights)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: SODBIF id of field we want to know about
    - id: rights
      type: SuperOffice.Data.EFieldRight
      description: Rights we want to have to field
    - id: allOfRights
      type: System.Boolean
      description: True if all the rights must be present
    return:
      type: System.Boolean
      description: True if we have some (allOfRights=False) or all (allOfRights=True) of the rights to the field.
    content.vb: Public Overridable Function CanFieldDo(field As FieldInfo, rights As EFieldRight, allOfRights As Boolean) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.CanFieldDo*
  nameWithType.vb: Sentry.CanFieldDo(FieldInfo, EFieldRight, Boolean)
  fullName.vb: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.EFieldRight, Boolean)
  name.vb: CanFieldDo(FieldInfo, EFieldRight, Boolean)
- uid: SuperOffice.CRM.Security.Sentry.IsTableCovered(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsTableCovered(SuperOffice.Data.SQL.TableInfo)
  id: IsTableCovered(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsTableCovered(TableInfo)
  nameWithType: Sentry.IsTableCovered(TableInfo)
  fullName: SuperOffice.CRM.Security.Sentry.IsTableCovered(SuperOffice.Data.SQL.TableInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Returns true if the sentry has an opinion about the table in question.
  example: []
  syntax:
    content: public abstract bool IsTableCovered(TableInfo table)
    parameters:
    - id: table
      type: SuperOffice.Data.SQL.TableInfo
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function IsTableCovered(table As TableInfo) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsTableCovered*
- uid: SuperOffice.CRM.Security.Sentry.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  id: CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: CanCoverTable(TableInfo)
  nameWithType: Sentry.CanCoverTable(TableInfo)
  fullName: SuperOffice.CRM.Security.Sentry.CanCoverTable(SuperOffice.Data.SQL.TableInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  syntax:
    content: public abstract bool CanCoverTable(TableInfo table)
    parameters:
    - id: table
      type: SuperOffice.Data.SQL.TableInfo
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function CanCoverTable(table As TableInfo) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.CanCoverTable*
- uid: SuperOffice.CRM.Security.Sentry.IsFieldCovered(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsFieldCovered(SuperOffice.Data.SQL.FieldInfo)
  id: IsFieldCovered(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsFieldCovered(FieldInfo)
  nameWithType: Sentry.IsFieldCovered(FieldInfo)
  fullName: SuperOffice.CRM.Security.Sentry.IsFieldCovered(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns true if the sentry has a definite opinion about the field.

    To find out what the opinion is, you need to use <xref href="SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo%2cSuperOffice.Data.EFieldRight%2cSystem.Boolean)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public virtual bool IsFieldCovered(FieldInfo field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.FieldInfo
      description: The field we are wondering about
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function IsFieldCovered(field As FieldInfo) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsFieldCovered*
- uid: SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate(System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate(System.Int32)
  id: GetGroupFromAssociate(System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GetGroupFromAssociate(int)
  nameWithType: Sentry.GetGroupFromAssociate(int)
  fullName: SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Get the group that an associate belongs to.
  remarks: >-
    <p>
    	This value can be cached.
    </p>

    <p>
    	Most calculations actually only requires to find out wetter 
    	the associate belongs to a group or not.  Future 
    	implementations can take advantage of this and make this 
    	method obsolete.
    </p>
  example: []
  syntax:
    content: protected int GetGroupFromAssociate(int assocId)
    parameters:
    - id: assocId
      type: System.Int32
      description: The associate id to check group for.
    return:
      type: System.Int32
      description: Group id of the group that the associate belongs to.
    content.vb: Protected Function GetGroupFromAssociate(assocId As Integer) As Integer
  overload: SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate*
  nameWithType.vb: Sentry.GetGroupFromAssociate(Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate(Integer)
  name.vb: GetGroupFromAssociate(Integer)
- uid: SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner(System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner(System.Int32)
  id: IsContactDatabaseOwner(System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsContactDatabaseOwner(int)
  nameWithType: Sentry.IsContactDatabaseOwner(int)
  fullName: SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Is the contact one of the contacts owning the database?
  remarks: This value can be cached.
  example: []
  syntax:
    content: protected bool IsContactDatabaseOwner(int contact_id)
    parameters:
    - id: contact_id
      type: System.Int32
      description: Id of contact to check if is one of teh owner contacts.
    return:
      type: System.Boolean
      description: True of the contact is one of the owner contacts.
    content.vb: Protected Function IsContactDatabaseOwner(contact_id As Integer) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner*
  nameWithType.vb: Sentry.IsContactDatabaseOwner(Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner(Integer)
  name.vb: IsContactDatabaseOwner(Integer)
- uid: SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner(System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner(System.Int32)
  id: IsContactEmployeeUserOwner(System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsContactEmployeeUserOwner(int)
  nameWithType: Sentry.IsContactEmployeeUserOwner(int)
  fullName: SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Is the contact owner of an associate (employee users)
  remarks: This value can be cached.
  example: []
  syntax:
    content: protected bool IsContactEmployeeUserOwner(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of contact to check if is one of the.
    return:
      type: System.Boolean
      description: True of the contact is one of the owner contacts.
    content.vb: Protected Function IsContactEmployeeUserOwner(contactId As Integer) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner*
  nameWithType.vb: Sentry.IsContactEmployeeUserOwner(Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner(Integer)
  name.vb: IsContactEmployeeUserOwner(Integer)
- uid: SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner(System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner(System.Int32)
  id: IsContactSatelliteOwner(System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsContactSatelliteOwner(int)
  nameWithType: Sentry.IsContactSatelliteOwner(int)
  fullName: SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Is the contact an owner of a satelite?
  remarks: This value can be cached.
  example: []
  syntax:
    content: protected bool IsContactSatelliteOwner(int contact_id)
    parameters:
    - id: contact_id
      type: System.Int32
      description: Id of contact to check if it owns a satelite.
    return:
      type: System.Boolean
      description: True if the contact owns a satelite.
    content.vb: Protected Function IsContactSatelliteOwner(contact_id As Integer) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner*
  nameWithType.vb: Sentry.IsContactSatelliteOwner(Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner(Integer)
  name.vb: IsContactSatelliteOwner(Integer)
- uid: SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner(System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner(System.Int32)
  id: IsContactLicenseOwner(System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsContactLicenseOwner(int)
  nameWithType: Sentry.IsContactLicenseOwner(int)
  fullName: SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Is the contact owner of central database and the license?
  example: []
  syntax:
    content: public static bool IsContactLicenseOwner(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Primary key of the contect to check.
    return:
      type: System.Boolean
      description: True if the contact is hte owner of central database and the license.
    content.vb: Public Shared Function IsContactLicenseOwner(contactId As Integer) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner*
  nameWithType.vb: Sentry.IsContactLicenseOwner(Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner(Integer)
  name.vb: IsContactLicenseOwner(Integer)
- uid: SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner(System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner(System.Int32)
  id: IsContactCurrentDatabaseOwner(System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsContactCurrentDatabaseOwner(int)
  nameWithType: Sentry.IsContactCurrentDatabaseOwner(int)
  fullName: SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Is the contact the owner of the principal database.
  example: []
  syntax:
    content: protected bool IsContactCurrentDatabaseOwner(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Primary key of the contect to check.
    return:
      type: System.Boolean
      description: True if the contact is the owner of the principal database
    content.vb: Protected Function IsContactCurrentDatabaseOwner(contactId As Integer) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner*
  nameWithType.vb: Sentry.IsContactCurrentDatabaseOwner(Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner(Integer)
  name.vb: IsContactCurrentDatabaseOwner(Integer)
- uid: SuperOffice.CRM.Security.Sentry.IsPersonAssociate(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsPersonAssociate(System.Int32,System.Boolean)
  id: IsPersonAssociate(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsPersonAssociate(int, bool)
  nameWithType: Sentry.IsPersonAssociate(int, bool)
  fullName: SuperOffice.CRM.Security.Sentry.IsPersonAssociate(int, bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Check if a person is an associate (e.g. user).
  example: []
  syntax:
    content: protected bool IsPersonAssociate(int personId, bool includeExternalUsers)
    parameters:
    - id: personId
      type: System.Int32
      description: Id of person to check if it is an associate (e.g. user).
    - id: includeExternalUsers
      type: System.Boolean
      description: If includeExternalUsers is false, external users will not be regarded as associates.
    return:
      type: System.Boolean
      description: True if the person is an associate (e.g. user).
    content.vb: Protected Function IsPersonAssociate(personId As Integer, includeExternalUsers As Boolean) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsPersonAssociate*
  nameWithType.vb: Sentry.IsPersonAssociate(Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsPersonAssociate(Integer, Boolean)
  name.vb: IsPersonAssociate(Integer, Boolean)
- uid: SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact(System.Int32,System.Int32)
  id: IsAssociatesOwnerContact(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsAssociatesOwnerContact(int, int)
  nameWithType: Sentry.IsAssociatesOwnerContact(int, int)
  fullName: SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact(int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Check if a contact is the owner of an associate
  example: []
  syntax:
    content: protected bool IsAssociatesOwnerContact(int assocId, int contactId)
    parameters:
    - id: assocId
      type: System.Int32
      description: Id of the associate
    - id: contactId
      type: System.Int32
      description: Id of the contact we want to verify
    return:
      type: System.Boolean
      description: True if the contact id is the owner of the associate
    content.vb: Protected Function IsAssociatesOwnerContact(assocId As Integer, contactId As Integer) As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact*
  nameWithType.vb: Sentry.IsAssociatesOwnerContact(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact(Integer, Integer)
  name.vb: IsAssociatesOwnerContact(Integer, Integer)
- uid: SuperOffice.CRM.Security.Sentry.Lookups
  commentId: P:SuperOffice.CRM.Security.Sentry.Lookups
  id: Lookups
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: Lookups
  nameWithType: Sentry.Lookups
  fullName: SuperOffice.CRM.Security.Sentry.Lookups
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Contains the list of row data providers that the sentry can consult.
  example: []
  syntax:
    content: public LookupCollection Lookups { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.LookupCollection
    content.vb: Public ReadOnly Property Lookups As LookupCollection
  overload: SuperOffice.CRM.Security.Sentry.Lookups*
- uid: SuperOffice.CRM.Security.Sentry.Parent
  commentId: P:SuperOffice.CRM.Security.Sentry.Parent
  id: Parent
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: Sentry.Parent
  fullName: SuperOffice.CRM.Security.Sentry.Parent
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Get the sentry collection that teh sentry belongs to.
  example: []
  syntax:
    content: public SentryCollection Parent { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.SentryCollection
    content.vb: Public ReadOnly Property Parent As SentryCollection
  overload: SuperOffice.CRM.Security.Sentry.Parent*
- uid: SuperOffice.CRM.Security.Sentry.RegisteredField
  commentId: P:SuperOffice.CRM.Security.Sentry.RegisteredField
  id: RegisteredField
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: RegisteredField
  nameWithType: Sentry.RegisteredField
  fullName: SuperOffice.CRM.Security.Sentry.RegisteredField
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: The field that holds information about when the item was first created.
  example: []
  syntax:
    content: public abstract FieldInfo RegisteredField { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Public MustOverride ReadOnly Property RegisteredField As FieldInfo
  overload: SuperOffice.CRM.Security.Sentry.RegisteredField*
- uid: SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField
  commentId: P:SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField
  id: RegisteredAssociateIdField
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: RegisteredAssociateIdField
  nameWithType: Sentry.RegisteredAssociateIdField
  fullName: SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: The field that holds the associate id of teh user first creating the item.
  example: []
  syntax:
    content: public abstract FieldInfo RegisteredAssociateIdField { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Public MustOverride ReadOnly Property RegisteredAssociateIdField As FieldInfo
  overload: SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField*
- uid: SuperOffice.CRM.Security.Sentry.RowId
  commentId: P:SuperOffice.CRM.Security.Sentry.RowId
  id: RowId
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: RowId
  nameWithType: Sentry.RowId
  fullName: SuperOffice.CRM.Security.Sentry.RowId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns the primary key id based on the row provided to the sentry.

    This method must be overridden by the sub-class.
  example: []
  syntax:
    content: public abstract int RowId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property RowId As Integer
  overload: SuperOffice.CRM.Security.Sentry.RowId*
- uid: SuperOffice.CRM.Security.Sentry.IsNew
  commentId: P:SuperOffice.CRM.Security.Sentry.IsNew
  id: IsNew
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsNew
  nameWithType: Sentry.IsNew
  fullName: SuperOffice.CRM.Security.Sentry.IsNew
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Has the row been saved to teh database yet.
  example: []
  syntax:
    content: public abstract bool IsNew { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsNew As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsNew*
- uid: SuperOffice.CRM.Security.Sentry.IsGhostRow
  commentId: P:SuperOffice.CRM.Security.Sentry.IsGhostRow
  id: IsGhostRow
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: IsGhostRow
  nameWithType: Sentry.IsGhostRow
  fullName: SuperOffice.CRM.Security.Sentry.IsGhostRow
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Returns whether the primary key field is a ghost
  example: []
  syntax:
    content: public abstract bool IsGhostRow { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property IsGhostRow As Boolean
  overload: SuperOffice.CRM.Security.Sentry.IsGhostRow*
- uid: SuperOffice.CRM.Security.Sentry.MainTable
  commentId: P:SuperOffice.CRM.Security.Sentry.MainTable
  id: MainTable
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: MainTable
  nameWithType: Sentry.MainTable
  fullName: SuperOffice.CRM.Security.Sentry.MainTable
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Get main table for the sentry.
  example: []
  syntax:
    content: public TableInfo MainTable { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfo
    content.vb: Public ReadOnly Property MainTable As TableInfo
  overload: SuperOffice.CRM.Security.Sentry.MainTable*
- uid: SuperOffice.CRM.Security.Sentry.SentryQueryInfo
  commentId: P:SuperOffice.CRM.Security.Sentry.SentryQueryInfo
  id: SentryQueryInfo
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: SentryQueryInfo
  nameWithType: Sentry.SentryQueryInfo
  fullName: SuperOffice.CRM.Security.Sentry.SentryQueryInfo
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Returns an array of the table-ids of the tables this sentry covers
  example: []
  syntax:
    content: public SentryQueryInfo SentryQueryInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.Security.SentryQueryInfo
    content.vb: Public ReadOnly Property SentryQueryInfo As SentryQueryInfo
  overload: SuperOffice.CRM.Security.Sentry.SentryQueryInfo*
- uid: SuperOffice.CRM.Security.Sentry.Registered
  commentId: P:SuperOffice.CRM.Security.Sentry.Registered
  id: Registered
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: Registered
  nameWithType: Sentry.Registered
  fullName: SuperOffice.CRM.Security.Sentry.Registered
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: When was the item first created. Returns the principal time if the field is not set (i.e. if the record has not been saved yet).
  example: []
  syntax:
    content: public virtual DateTime Registered { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Overridable ReadOnly Property Registered As Date
  overload: SuperOffice.CRM.Security.Sentry.Registered*
- uid: SuperOffice.CRM.Security.Sentry.RegisteredAssociateId
  commentId: P:SuperOffice.CRM.Security.Sentry.RegisteredAssociateId
  id: RegisteredAssociateId
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: RegisteredAssociateId
  nameWithType: Sentry.RegisteredAssociateId
  fullName: SuperOffice.CRM.Security.Sentry.RegisteredAssociateId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: Who created the item.
  example: []
  syntax:
    content: public virtual int RegisteredAssociateId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property RegisteredAssociateId As Integer
  overload: SuperOffice.CRM.Security.Sentry.RegisteredAssociateId*
- uid: SuperOffice.CRM.Security.Sentry.AssociateId
  commentId: P:SuperOffice.CRM.Security.Sentry.AssociateId
  id: AssociateId
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: Sentry.AssociateId
  fullName: SuperOffice.CRM.Security.Sentry.AssociateId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns the associate id based on the row provided to the sentry.

    This method must be overridden by the sub-class.
  example: []
  syntax:
    content: public abstract int AssociateId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property AssociateId As Integer
  overload: SuperOffice.CRM.Security.Sentry.AssociateId*
- uid: SuperOffice.CRM.Security.Sentry.GroupId
  commentId: P:SuperOffice.CRM.Security.Sentry.GroupId
  id: GroupId
  parent: SuperOffice.CRM.Security.Sentry
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: Sentry.GroupId
  fullName: SuperOffice.CRM.Security.Sentry.GroupId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Security
  summary: >-
    Returns the group id of the associate based on the row provided to the sentry.

    This method must be overridden by the sub-class.

    If the row does not contain the group id of the associate, then the function must

    look up the appropriate group id in the associate table.


    TODO CM: add multi-db aware caching mechanism for associate-&gt;usergroup mapping
  example: []
  syntax:
    content: public virtual int GroupId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property GroupId As Integer
  overload: SuperOffice.CRM.Security.Sentry.GroupId*
references:
- uid: SuperOffice.CRM.Security
  commentId: N:SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Security
  nameWithType: SuperOffice.CRM.Security
  fullName: SuperOffice.CRM.Security
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Security
    name: Security
    isExternal: true
    href: SuperOffice.CRM.Security.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Security
    name: Security
    isExternal: true
    href: SuperOffice.CRM.Security.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icloneable
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Security.Sentry.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<Sentry, To>(Sentry)
  nameWithType: EnumUtil.MapEnums<Sentry, To>(Sentry)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Security.Sentry, To>(SuperOffice.CRM.Security.Sentry)
  nameWithType.vb: EnumUtil.MapEnums(Of Sentry, To)(Sentry)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Security.Sentry, To)(SuperOffice.CRM.Security.Sentry)
  name.vb: MapEnums(Of Sentry, To)(Sentry)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Security.Sentry)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Security.Sentry)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: )
- uid: SuperOffice.CRM.Security.Sentry.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<Sentry, To>(Sentry)
  nameWithType: Converters.MapEnums<Sentry, To>(Sentry)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Security.Sentry, To>(SuperOffice.CRM.Security.Sentry)
  nameWithType.vb: Converters.MapEnums(Of Sentry, To)(Sentry)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Security.Sentry, To)(SuperOffice.CRM.Security.Sentry)
  name.vb: MapEnums(Of Sentry, To)(Sentry)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Security.Sentry)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Security.Sentry)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Security.Sentry
    name: Sentry
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Security.RightsFactory
  commentId: T:SuperOffice.CRM.Security.RightsFactory
  isExternal: true
  name: RightsFactory
  nameWithType: RightsFactory
  fullName: SuperOffice.CRM.Security.RightsFactory
- uid: SuperOffice.CRM.Security.TableRights
  commentId: T:SuperOffice.CRM.Security.TableRights
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.TableRights.html
  name: TableRights
  nameWithType: TableRights
  fullName: SuperOffice.CRM.Security.TableRights
- uid: SuperOffice.CRM.Security.FieldRight
  commentId: T:SuperOffice.CRM.Security.FieldRight
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.FieldRight.html
  name: FieldRight
  nameWithType: FieldRight
  fullName: SuperOffice.CRM.Security.FieldRight
- uid: SuperOffice.CRM.Security.FieldRights
  commentId: T:SuperOffice.CRM.Security.FieldRights
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.FieldRights.html
  name: FieldRights
  nameWithType: FieldRights
  fullName: SuperOffice.CRM.Security.FieldRights
- uid: SuperOffice.CRM.Security.LookupCollection
  commentId: T:SuperOffice.CRM.Security.LookupCollection
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.LookupCollection.html
  name: LookupCollection
  nameWithType: LookupCollection
  fullName: SuperOffice.CRM.Security.LookupCollection
- uid: SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames
  commentId: T:SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames
  isExternal: true
  href: SuperOffice.CRM.UserPreferenceStrings.html
  name: UserPreferenceStrings.SentryAddonNames
  nameWithType: UserPreferenceStrings.SentryAddonNames
  fullName: SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames
  spec.csharp:
  - uid: SuperOffice.CRM.UserPreferenceStrings
    name: UserPreferenceStrings
    isExternal: true
    href: SuperOffice.CRM.UserPreferenceStrings.html
  - name: .
  - uid: SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames
    name: SentryAddonNames
    isExternal: true
    href: SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames.html
  spec.vb:
  - uid: SuperOffice.CRM.UserPreferenceStrings
    name: UserPreferenceStrings
    isExternal: true
    href: SuperOffice.CRM.UserPreferenceStrings.html
  - name: .
  - uid: SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames
    name: SentryAddonNames
    isExternal: true
    href: SuperOffice.CRM.UserPreferenceStrings.SentryAddonNames.html
- uid: SuperOffice.CRM.Security.SentryPluginAttribute
  commentId: T:SuperOffice.CRM.Security.SentryPluginAttribute
  isExternal: true
  href: SuperOffice.CRM.Security.SentryPluginAttribute.html
  name: SentryPluginAttribute
  nameWithType: SentryPluginAttribute
  fullName: SuperOffice.CRM.Security.SentryPluginAttribute
- uid: SuperOffice.Exceptions.SoSentryException
  commentId: T:SuperOffice.Exceptions.SoSentryException
  isExternal: true
  href: SuperOffice.Exceptions.SoSentryException.html
  name: SoSentryException
  nameWithType: SoSentryException
  fullName: SuperOffice.Exceptions.SoSentryException
- uid: SuperOffice.CRM.Security.Sentry.DemandPlugins*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.DemandPlugins
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_DemandPlugins
  name: DemandPlugins
  nameWithType: Sentry.DemandPlugins
  fullName: SuperOffice.CRM.Security.Sentry.DemandPlugins
- uid: SuperOffice.CRM.Security.Sentry.#ctor*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.#ctor
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry__ctor_SuperOffice_CRM_Security_SentryQueryInfo_
  name: Sentry
  nameWithType: Sentry.Sentry
  fullName: SuperOffice.CRM.Security.Sentry.Sentry
  nameWithType.vb: Sentry.New
  fullName.vb: SuperOffice.CRM.Security.Sentry.New
  name.vb: New
- uid: SuperOffice.CRM.Security.SentryQueryInfo
  commentId: T:SuperOffice.CRM.Security.SentryQueryInfo
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.SentryQueryInfo.html
  name: SentryQueryInfo
  nameWithType: SentryQueryInfo
  fullName: SuperOffice.CRM.Security.SentryQueryInfo
- uid: SuperOffice.CRM.Security.Sentry.CreateSentry*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.CreateSentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CreateSentry_SuperOffice_Data_SQL_TableInfo_
  name: CreateSentry
  nameWithType: Sentry.CreateSentry
  fullName: SuperOffice.CRM.Security.Sentry.CreateSentry
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.TableInfo.html
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.CRM.Security.Sentry
  commentId: T:SuperOffice.CRM.Security.Sentry
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html
  name: Sentry
  nameWithType: Sentry
  fullName: SuperOffice.CRM.Security.Sentry
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: SuperOffice.CRM.Security.Sentry.CreateSentries*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.CreateSentries
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CreateSentries_SuperOffice_Data_SQL_Select_
  name: CreateSentries
  nameWithType: Sentry.CreateSentries
  fullName: SuperOffice.CRM.Security.Sentry.CreateSentries
- uid: SuperOffice.Data.SQL.Select
  commentId: T:SuperOffice.Data.SQL.Select
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Select.html
  name: Select
  nameWithType: Select
  fullName: SuperOffice.Data.SQL.Select
- uid: SuperOffice.CRM.Security.SentryCollection
  commentId: T:SuperOffice.CRM.Security.SentryCollection
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.SentryCollection.html
  name: SentryCollection
  nameWithType: SentryCollection
  fullName: SuperOffice.CRM.Security.SentryCollection
- uid: SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_BeginIgnoreSentry
  name: BeginIgnoreSentry
  nameWithType: Sentry.BeginIgnoreSentry
  fullName: SuperOffice.CRM.Security.Sentry.BeginIgnoreSentry
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_BeginIgnoreRowSentry
  name: BeginIgnoreRowSentry
  nameWithType: Sentry.BeginIgnoreRowSentry
  fullName: SuperOffice.CRM.Security.Sentry.BeginIgnoreRowSentry
- uid: SuperOffice.CRM.Security.Sentry.IgnoreRowSentry*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IgnoreRowSentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IgnoreRowSentry
  name: IgnoreRowSentry
  nameWithType: Sentry.IgnoreRowSentry
  fullName: SuperOffice.CRM.Security.Sentry.IgnoreRowSentry
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Security.Sentry.IgnoreSentry*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IgnoreSentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IgnoreSentry
  name: IgnoreSentry
  nameWithType: Sentry.IgnoreSentry
  fullName: SuperOffice.CRM.Security.Sentry.IgnoreSentry
- uid: SuperOffice.CRM.Security.Sentry.GetRowSentry*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetRowSentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetRowSentry
  name: GetRowSentry
  nameWithType: Sentry.GetRowSentry
  fullName: SuperOffice.CRM.Security.Sentry.GetRowSentry
- uid: SuperOffice.CRM.Security.Sentry.AnalyzeQuery*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.AnalyzeQuery
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_AnalyzeQuery_SuperOffice_Data_SQL_PrivateSelect_
  name: AnalyzeQuery
  nameWithType: Sentry.AnalyzeQuery
  fullName: SuperOffice.CRM.Security.Sentry.AnalyzeQuery
- uid: SuperOffice.Data.SQL.PrivateSelect
  commentId: T:SuperOffice.Data.SQL.PrivateSelect
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.PrivateSelect.html
  name: PrivateSelect
  nameWithType: PrivateSelect
  fullName: SuperOffice.Data.SQL.PrivateSelect
- uid: SuperOffice.CRM.Security.Sentry.IterateLookups*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IterateLookups
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IterateLookups_SuperOffice_CRM_Security_LookupCollection_
  name: IterateLookups
  nameWithType: Sentry.IterateLookups
  fullName: SuperOffice.CRM.Security.Sentry.IterateLookups
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<object>
  nameWithType: IEnumerable<object>
  fullName: System.Collections.Generic.IEnumerable<object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.CRM.Security.Sentry.GetIntField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetIntField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetIntField_SuperOffice_Data_SQL_FieldInfo___
  name: GetIntField
  nameWithType: Sentry.GetIntField
  fullName: SuperOffice.CRM.Security.Sentry.GetIntField
- uid: SuperOffice.Data.SQL.FieldInfo[]
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo[]
  nameWithType: FieldInfo[]
  fullName: SuperOffice.Data.SQL.FieldInfo[]
  nameWithType.vb: FieldInfo()
  fullName.vb: SuperOffice.Data.SQL.FieldInfo()
  name.vb: FieldInfo()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Security.Sentry.GetPersistedIntField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetPersistedIntField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetPersistedIntField_SuperOffice_Data_SQL_FieldInfo___
  name: GetPersistedIntField
  nameWithType: Sentry.GetPersistedIntField
  fullName: SuperOffice.CRM.Security.Sentry.GetPersistedIntField
- uid: SuperOffice.CRM.Security.Sentry.GetIsGhostField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetIsGhostField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetIsGhostField_SuperOffice_Data_SQL_FieldInfo_
  name: GetIsGhostField
  nameWithType: Sentry.GetIsGhostField
  fullName: SuperOffice.CRM.Security.Sentry.GetIsGhostField
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.CRM.Security.Sentry.GetDateTimeField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetDateTimeField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetDateTimeField_SuperOffice_Data_SQL_FieldInfo_
  name: GetDateTimeField
  nameWithType: Sentry.GetDateTimeField
  fullName: SuperOffice.CRM.Security.Sentry.GetDateTimeField
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Security.Sentry.GetStringField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetStringField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetStringField_SuperOffice_Data_SQL_FieldInfo_
  name: GetStringField
  nameWithType: Sentry.GetStringField
  fullName: SuperOffice.CRM.Security.Sentry.GetStringField
- uid: SuperOffice.CRM.Security.Sentry.ClearRights*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.ClearRights
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_ClearRights
  name: ClearRights
  nameWithType: Sentry.ClearRights
  fullName: SuperOffice.CRM.Security.Sentry.ClearRights
- uid: SuperOffice.CRM.Security.Sentry.GetMainRight*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetMainRight
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetMainRight
  name: GetMainRight
  nameWithType: Sentry.GetMainRight
  fullName: SuperOffice.CRM.Security.Sentry.GetMainRight
- uid: SuperOffice.Data.ETableRight
  commentId: T:SuperOffice.Data.ETableRight
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.ETableRight.html
  name: ETableRight
  nameWithType: ETableRight
  fullName: SuperOffice.Data.ETableRight
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetRecordOwnershipIndex
  name: GetRecordOwnershipIndex
  nameWithType: Sentry.GetRecordOwnershipIndex
  fullName: SuperOffice.CRM.Security.Sentry.GetRecordOwnershipIndex
- uid: SuperOffice.CRM.Security.EOwnershipIndex
  commentId: T:SuperOffice.CRM.Security.EOwnershipIndex
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.EOwnershipIndex.html
  name: EOwnershipIndex
  nameWithType: EOwnershipIndex
  fullName: SuperOffice.CRM.Security.EOwnershipIndex
- uid: SuperOffice.CRM.Security.Sentry.MapTableToFieldRights*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.MapTableToFieldRights
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_MapTableToFieldRights_SuperOffice_Data_SQL_TableInfo_SuperOffice_CRM_Security_TableRight_SuperOffice_Data_SQL_FieldInfo___
  name: MapTableToFieldRights
  nameWithType: Sentry.MapTableToFieldRights
  fullName: SuperOffice.CRM.Security.Sentry.MapTableToFieldRights
- uid: SuperOffice.CRM.Security.TableRight
  commentId: T:SuperOffice.CRM.Security.TableRight
  parent: SuperOffice.CRM.Security
  isExternal: true
  href: SuperOffice.CRM.Security.TableRight.html
  name: TableRight
  nameWithType: TableRight
  fullName: SuperOffice.CRM.Security.TableRight
- uid: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_MakeFieldFromTableRight_SuperOffice_CRM_Security_TableRight_
  name: MakeFieldFromTableRight
  nameWithType: Sentry.MakeFieldFromTableRight
  fullName: SuperOffice.CRM.Security.Sentry.MakeFieldFromTableRight
- uid: SuperOffice.Data.EFieldRight
  commentId: T:SuperOffice.Data.EFieldRight
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.EFieldRight.html
  name: EFieldRight
  nameWithType: EFieldRight
  fullName: SuperOffice.Data.EFieldRight
- uid: SuperOffice.CRM.Security.Sentry.SuperComputeTableRights*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.SuperComputeTableRights
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_SuperComputeTableRights
  name: SuperComputeTableRights
  nameWithType: Sentry.SuperComputeTableRights
  fullName: SuperOffice.CRM.Security.Sentry.SuperComputeTableRights
- uid: SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_SuperComputeFieldRights
  name: SuperComputeFieldRights
  nameWithType: Sentry.SuperComputeFieldRights
  fullName: SuperOffice.CRM.Security.Sentry.SuperComputeFieldRights
- uid: SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_SuperComputeDerivedTableRights
  name: SuperComputeDerivedTableRights
  nameWithType: Sentry.SuperComputeDerivedTableRights
  fullName: SuperOffice.CRM.Security.Sentry.SuperComputeDerivedTableRights
- uid: SuperOffice.CRM.Security.Sentry.GetTableRight*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetTableRight
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetTableRight_SuperOffice_Data_SQL_TableInfo_
  name: GetTableRight
  nameWithType: Sentry.GetTableRight
  fullName: SuperOffice.CRM.Security.Sentry.GetTableRight
- uid: SuperOffice.CRM.Security.Sentry.GetFieldRight*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetFieldRight
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetFieldRight_SuperOffice_Data_SQL_FieldInfo_
  name: GetFieldRight
  nameWithType: Sentry.GetFieldRight
  fullName: SuperOffice.CRM.Security.Sentry.GetFieldRight
- uid: SuperOffice.CRM.Security.Sentry.SetAllTableRights*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.SetAllTableRights
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_SetAllTableRights_SuperOffice_Data_ETableRight_System_String_
  name: SetAllTableRights
  nameWithType: Sentry.SetAllTableRights
  fullName: SuperOffice.CRM.Security.Sentry.SetAllTableRights
- uid: SuperOffice.CRM.Security.Sentry.CanTableDo*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.CanTableDo
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CanTableDo_SuperOffice_Data_SQL_TableInfo_SuperOffice_Data_ETableRight_System_Boolean_
  name: CanTableDo
  nameWithType: Sentry.CanTableDo
  fullName: SuperOffice.CRM.Security.Sentry.CanTableDo
- uid: SuperOffice.CRM.Security.Sentry.CanFieldDo*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.CanFieldDo
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CanFieldDo_SuperOffice_Data_SQL_FieldInfo_SuperOffice_Data_EFieldRight_System_Boolean_
  name: CanFieldDo
  nameWithType: Sentry.CanFieldDo
  fullName: SuperOffice.CRM.Security.Sentry.CanFieldDo
- uid: SuperOffice.CRM.Security.Sentry.IsTableCovered*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsTableCovered
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsTableCovered_SuperOffice_Data_SQL_TableInfo_
  name: IsTableCovered
  nameWithType: Sentry.IsTableCovered
  fullName: SuperOffice.CRM.Security.Sentry.IsTableCovered
- uid: SuperOffice.CRM.Security.Sentry.CanCoverTable*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.CanCoverTable
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CanCoverTable_SuperOffice_Data_SQL_TableInfo_
  name: CanCoverTable
  nameWithType: Sentry.CanCoverTable
  fullName: SuperOffice.CRM.Security.Sentry.CanCoverTable
- uid: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
  commentId: M:SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
  parent: SuperOffice.CRM.Security.Sentry
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CanFieldDo_SuperOffice_Data_SQL_FieldInfo_SuperOffice_Data_EFieldRight_System_Boolean_
  name: CanFieldDo(FieldInfo, EFieldRight, bool)
  nameWithType: Sentry.CanFieldDo(FieldInfo, EFieldRight, bool)
  fullName: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.EFieldRight, bool)
  nameWithType.vb: Sentry.CanFieldDo(FieldInfo, EFieldRight, Boolean)
  fullName.vb: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.EFieldRight, Boolean)
  name.vb: CanFieldDo(FieldInfo, EFieldRight, Boolean)
  spec.csharp:
  - uid: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
    name: CanFieldDo
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CanFieldDo_SuperOffice_Data_SQL_FieldInfo_SuperOffice_Data_EFieldRight_System_Boolean_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Security.Sentry.CanFieldDo(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.EFieldRight,System.Boolean)
    name: CanFieldDo
    isExternal: true
    href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_CanFieldDo_SuperOffice_Data_SQL_FieldInfo_SuperOffice_Data_EFieldRight_System_Boolean_
  - name: (
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: ','
  - name: " "
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Security.Sentry.IsFieldCovered*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsFieldCovered
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsFieldCovered_SuperOffice_Data_SQL_FieldInfo_
  name: IsFieldCovered
  nameWithType: Sentry.IsFieldCovered
  fullName: SuperOffice.CRM.Security.Sentry.IsFieldCovered
- uid: SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GetGroupFromAssociate_System_Int32_
  name: GetGroupFromAssociate
  nameWithType: Sentry.GetGroupFromAssociate
  fullName: SuperOffice.CRM.Security.Sentry.GetGroupFromAssociate
- uid: SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsContactDatabaseOwner_System_Int32_
  name: IsContactDatabaseOwner
  nameWithType: Sentry.IsContactDatabaseOwner
  fullName: SuperOffice.CRM.Security.Sentry.IsContactDatabaseOwner
- uid: SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsContactEmployeeUserOwner_System_Int32_
  name: IsContactEmployeeUserOwner
  nameWithType: Sentry.IsContactEmployeeUserOwner
  fullName: SuperOffice.CRM.Security.Sentry.IsContactEmployeeUserOwner
- uid: SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsContactSatelliteOwner_System_Int32_
  name: IsContactSatelliteOwner
  nameWithType: Sentry.IsContactSatelliteOwner
  fullName: SuperOffice.CRM.Security.Sentry.IsContactSatelliteOwner
- uid: SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsContactLicenseOwner_System_Int32_
  name: IsContactLicenseOwner
  nameWithType: Sentry.IsContactLicenseOwner
  fullName: SuperOffice.CRM.Security.Sentry.IsContactLicenseOwner
- uid: SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsContactCurrentDatabaseOwner_System_Int32_
  name: IsContactCurrentDatabaseOwner
  nameWithType: Sentry.IsContactCurrentDatabaseOwner
  fullName: SuperOffice.CRM.Security.Sentry.IsContactCurrentDatabaseOwner
- uid: SuperOffice.CRM.Security.Sentry.IsPersonAssociate*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsPersonAssociate
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsPersonAssociate_System_Int32_System_Boolean_
  name: IsPersonAssociate
  nameWithType: Sentry.IsPersonAssociate
  fullName: SuperOffice.CRM.Security.Sentry.IsPersonAssociate
- uid: SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsAssociatesOwnerContact_System_Int32_System_Int32_
  name: IsAssociatesOwnerContact
  nameWithType: Sentry.IsAssociatesOwnerContact
  fullName: SuperOffice.CRM.Security.Sentry.IsAssociatesOwnerContact
- uid: SuperOffice.CRM.Security.Sentry.Lookups*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.Lookups
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_Lookups
  name: Lookups
  nameWithType: Sentry.Lookups
  fullName: SuperOffice.CRM.Security.Sentry.Lookups
- uid: SuperOffice.CRM.Security.Sentry.Parent*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.Parent
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_Parent
  name: Parent
  nameWithType: Sentry.Parent
  fullName: SuperOffice.CRM.Security.Sentry.Parent
- uid: SuperOffice.CRM.Security.Sentry.RegisteredField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.RegisteredField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_RegisteredField
  name: RegisteredField
  nameWithType: Sentry.RegisteredField
  fullName: SuperOffice.CRM.Security.Sentry.RegisteredField
- uid: SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_RegisteredAssociateIdField
  name: RegisteredAssociateIdField
  nameWithType: Sentry.RegisteredAssociateIdField
  fullName: SuperOffice.CRM.Security.Sentry.RegisteredAssociateIdField
- uid: SuperOffice.CRM.Security.Sentry.RowId*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.RowId
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_RowId
  name: RowId
  nameWithType: Sentry.RowId
  fullName: SuperOffice.CRM.Security.Sentry.RowId
- uid: SuperOffice.CRM.Security.Sentry.IsNew*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsNew
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsNew
  name: IsNew
  nameWithType: Sentry.IsNew
  fullName: SuperOffice.CRM.Security.Sentry.IsNew
- uid: SuperOffice.CRM.Security.Sentry.IsGhostRow*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.IsGhostRow
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_IsGhostRow
  name: IsGhostRow
  nameWithType: Sentry.IsGhostRow
  fullName: SuperOffice.CRM.Security.Sentry.IsGhostRow
- uid: SuperOffice.CRM.Security.Sentry.MainTable*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.MainTable
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_MainTable
  name: MainTable
  nameWithType: Sentry.MainTable
  fullName: SuperOffice.CRM.Security.Sentry.MainTable
- uid: SuperOffice.CRM.Security.Sentry.SentryQueryInfo*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.SentryQueryInfo
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_SentryQueryInfo
  name: SentryQueryInfo
  nameWithType: Sentry.SentryQueryInfo
  fullName: SuperOffice.CRM.Security.Sentry.SentryQueryInfo
- uid: SuperOffice.CRM.Security.Sentry.Registered*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.Registered
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_Registered
  name: Registered
  nameWithType: Sentry.Registered
  fullName: SuperOffice.CRM.Security.Sentry.Registered
- uid: SuperOffice.CRM.Security.Sentry.RegisteredAssociateId*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.RegisteredAssociateId
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_RegisteredAssociateId
  name: RegisteredAssociateId
  nameWithType: Sentry.RegisteredAssociateId
  fullName: SuperOffice.CRM.Security.Sentry.RegisteredAssociateId
- uid: SuperOffice.CRM.Security.Sentry.AssociateId*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.AssociateId
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_AssociateId
  name: AssociateId
  nameWithType: Sentry.AssociateId
  fullName: SuperOffice.CRM.Security.Sentry.AssociateId
- uid: SuperOffice.CRM.Security.Sentry.GroupId*
  commentId: Overload:SuperOffice.CRM.Security.Sentry.GroupId
  isExternal: true
  href: SuperOffice.CRM.Security.Sentry.html#SuperOffice_CRM_Security_Sentry_GroupId
  name: GroupId
  nameWithType: Sentry.GroupId
  fullName: SuperOffice.CRM.Security.Sentry.GroupId
