### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.RecursionInfo
  id: RecursionInfo
  parent: SuperOffice.CRM.ArchiveLists
  children:
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.Level
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables
  langs:
  - csharp
  - vb
  name: RecursionInfo
  nameWithType: RecursionInfo
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: 'public class RecursionInfo : Object'
    content.vb: >-
      Public Class RecursionInfo
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.EnumUtil.MapEnums``2
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.ArchiveLists.RecursionInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor
  commentId: M:SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: RecursionInfo()
  nameWithType: RecursionInfo.RecursionInfo()
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RecursionInfo()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public RecursionInfo()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  commentId: M:SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  id: '#ctor(SuperOffice.CRM.ArchiveLists.RecursionInfo)'
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: RecursionInfo(RecursionInfo)
  nameWithType: RecursionInfo.RecursionInfo(RecursionInfo)
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RecursionInfo(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public RecursionInfo(RecursionInfo ri)
    parameters:
    - id: ri
      type: SuperOffice.CRM.ArchiveLists.RecursionInfo
    content.vb: Public Sub New(ri As RecursionInfo)
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.Level
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.Level
  id: Level
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: RecursionInfo.Level
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.Level
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public int Level { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Level As Integer
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.Level*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon
  id: Icon
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: RecursionInfo.Icon
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany
  id: OneToMany
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: OneToMany
  nameWithType: RecursionInfo.OneToMany
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public bool OneToMany { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OneToMany As Boolean
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable
  id: RootTable
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: RootTable
  nameWithType: RecursionInfo.RootTable
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public string RootTable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RootTable As String
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable
  id: IsExtraTable
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: IsExtraTable
  nameWithType: RecursionInfo.IsExtraTable
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public bool IsExtraTable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsExtraTable As Boolean
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank
  id: ColumnRank
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: ColumnRank
  nameWithType: RecursionInfo.ColumnRank
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public double ColumnRank { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property ColumnRank As Double
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField
  id: RelationField
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: RelationField
  nameWithType: RecursionInfo.RelationField
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public SoField RelationField { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.Dictionary.SoField
    content.vb: Public Property RelationField As SoField
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables
  commentId: P:SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables
  id: SeenTables
  parent: SuperOffice.CRM.ArchiveLists.RecursionInfo
  langs:
  - csharp
  - vb
  name: SeenTables
  nameWithType: RecursionInfo.SeenTables
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.ArchiveLists
  syntax:
    content: public HashSet<string> SeenTables { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public Property SeenTables As HashSet(Of String)
  overload: SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.ArchiveLists
  commentId: N:SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: SuperOffice.CRM.ArchiveLists
  nameWithType: SuperOffice.CRM.ArchiveLists
  fullName: SuperOffice.CRM.ArchiveLists
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<RecursionInfo, To>()
  nameWithType: EnumUtil.MapEnums<RecursionInfo, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.RecursionInfo, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of RecursionInfo, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.RecursionInfo, To)()
  name.vb: MapEnums(Of RecursionInfo, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<RecursionInfo, To>
    nameWithType: EnumUtil.MapEnums<RecursionInfo, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.ArchiveLists.RecursionInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of RecursionInfo, To)
    nameWithType: EnumUtil.MapEnums(Of RecursionInfo, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.ArchiveLists.RecursionInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<RecursionInfo>(RecursionInfo)
  nameWithType: ObjectExtensions.AssignByReflection<RecursionInfo>(RecursionInfo)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.RecursionInfo>(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of RecursionInfo)(RecursionInfo)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.RecursionInfo)(SuperOffice.CRM.ArchiveLists.RecursionInfo)
  name.vb: AssignByReflection(Of RecursionInfo)(RecursionInfo)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<RecursionInfo>
    nameWithType: ObjectExtensions.AssignByReflection<RecursionInfo>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.ArchiveLists.RecursionInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.RecursionInfo
    name: RecursionInfo
    nameWithType: RecursionInfo
    fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of RecursionInfo)
    nameWithType: ObjectExtensions.AssignByReflection(Of RecursionInfo)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.ArchiveLists.RecursionInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.ArchiveLists.RecursionInfo
    name: RecursionInfo
    nameWithType: RecursionInfo
    fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<RecursionInfo>()
  nameWithType: ObjectExtensions.GraphCopy<RecursionInfo>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.RecursionInfo>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of RecursionInfo)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.RecursionInfo)()
  name.vb: GraphCopy(Of RecursionInfo)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<RecursionInfo>
    nameWithType: ObjectExtensions.GraphCopy<RecursionInfo>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.ArchiveLists.RecursionInfo>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of RecursionInfo)
    nameWithType: ObjectExtensions.GraphCopy(Of RecursionInfo)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.ArchiveLists.RecursionInfo)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<RecursionInfo, To>()
  nameWithType: Converters.MapEnums<RecursionInfo, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.RecursionInfo, To>()
  nameWithType.vb: Converters.MapEnums(Of RecursionInfo, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.RecursionInfo, To)()
  name.vb: MapEnums(Of RecursionInfo, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<RecursionInfo, To>
    nameWithType: Converters.MapEnums<RecursionInfo, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.ArchiveLists.RecursionInfo, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of RecursionInfo, To)
    nameWithType: Converters.MapEnums(Of RecursionInfo, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.ArchiveLists.RecursionInfo, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.#ctor
  isExternal: true
  name: RecursionInfo
  nameWithType: RecursionInfo.RecursionInfo
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RecursionInfo
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo
  commentId: T:SuperOffice.CRM.ArchiveLists.RecursionInfo
  parent: SuperOffice.CRM.ArchiveLists
  isExternal: true
  name: RecursionInfo
  nameWithType: RecursionInfo
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.Level*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.Level
  isExternal: true
  name: Level
  nameWithType: RecursionInfo.Level
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.Level
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon
  isExternal: true
  name: Icon
  nameWithType: RecursionInfo.Icon
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.Icon
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany
  isExternal: true
  name: OneToMany
  nameWithType: RecursionInfo.OneToMany
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.OneToMany
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable
  isExternal: true
  name: RootTable
  nameWithType: RecursionInfo.RootTable
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RootTable
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable
  isExternal: true
  name: IsExtraTable
  nameWithType: RecursionInfo.IsExtraTable
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.IsExtraTable
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank
  isExternal: true
  name: ColumnRank
  nameWithType: RecursionInfo.ColumnRank
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.ColumnRank
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField
  isExternal: true
  name: RelationField
  nameWithType: RecursionInfo.RelationField
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.RelationField
- uid: SuperOffice.Data.Dictionary.SoField
  commentId: T:SuperOffice.Data.Dictionary.SoField
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  name: SoField
  nameWithType: SoField
  fullName: SuperOffice.Data.Dictionary.SoField
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
- uid: SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables*
  commentId: Overload:SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables
  isExternal: true
  name: SeenTables
  nameWithType: RecursionInfo.SeenTables
  fullName: SuperOffice.CRM.ArchiveLists.RecursionInfo.SeenTables
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: '!:System.Collections.Generic.HashSet{System.String}'
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<String>
  nameWithType: HashSet<String>
  fullName: System.Collections.Generic.HashSet<System.String>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of System.String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<>
  nameWithType: HashSet<>
  fullName: System.Collections.Generic.HashSet<>
  nameWithType.vb: HashSet(Of )
  fullName.vb: System.Collections.Generic.HashSet(Of )
  name.vb: HashSet(Of )
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    nameWithType: HashSet
    fullName: System.Collections.Generic.HashSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
