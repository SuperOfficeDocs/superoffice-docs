### YamlMime:ManagedReference
items:
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS
  commentId: T:SuperOffice.ErpSync.TestConfigDataRequestWS
  id: TestConfigDataRequestWS
  parent: SuperOffice.ErpSync
  children:
  - SuperOffice.ErpSync.TestConfigDataRequestWS.#ctor
  - SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo
  langs:
  - csharp
  - vb
  name: TestConfigDataRequestWS
  nameWithType: TestConfigDataRequestWS
  fullName: SuperOffice.ErpSync.TestConfigDataRequestWS
  type: Class
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.ErpSync
  summary: "\nParameters for TestConfigData\n"
  syntax:
    content: 'public class TestConfigDataRequestWS : Object'
    content.vb: >-
      Public Class TestConfigDataRequestWS
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.ErpSync.TestConfigDataRequestWS.EnumUtil.MapEnums``2
  - SuperOffice.ErpSync.TestConfigDataRequestWS.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.ErpSync.TestConfigDataRequestWS)
  - SuperOffice.ErpSync.TestConfigDataRequestWS.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.ErpSync.TestConfigDataRequestWS.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.#ctor
  commentId: M:SuperOffice.ErpSync.TestConfigDataRequestWS.#ctor
  id: '#ctor'
  parent: SuperOffice.ErpSync.TestConfigDataRequestWS
  langs:
  - csharp
  - vb
  name: TestConfigDataRequestWS()
  nameWithType: TestConfigDataRequestWS.TestConfigDataRequestWS()
  fullName: SuperOffice.ErpSync.TestConfigDataRequestWS.TestConfigDataRequestWS()
  type: Constructor
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.ErpSync
  syntax:
    content: public TestConfigDataRequestWS()
    content.vb: Public Sub New
  overload: SuperOffice.ErpSync.TestConfigDataRequestWS.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo
  commentId: P:SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo
  id: ConnectionInfo
  parent: SuperOffice.ErpSync.TestConfigDataRequestWS
  langs:
  - csharp
  - vb
  name: ConnectionInfo
  nameWithType: TestConfigDataRequestWS.ConnectionInfo
  fullName: SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.ErpSync
  summary: "\nDictionary containing all settings for a connection\n"
  syntax:
    content: public Dictionary<string, string> ConnectionInfo { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property ConnectionInfo As Dictionary(Of String, String)
  overload: SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.ErpSync
  commentId: N:SuperOffice.ErpSync
  isExternal: true
  name: SuperOffice.ErpSync
  nameWithType: SuperOffice.ErpSync
  fullName: SuperOffice.ErpSync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TestConfigDataRequestWS, To>()
  nameWithType: EnumUtil.MapEnums<TestConfigDataRequestWS, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.ErpSync.TestConfigDataRequestWS, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TestConfigDataRequestWS, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.ErpSync.TestConfigDataRequestWS, To)()
  name.vb: MapEnums(Of TestConfigDataRequestWS, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TestConfigDataRequestWS, To>
    nameWithType: EnumUtil.MapEnums<TestConfigDataRequestWS, To>
    fullName: EnumUtil.MapEnums<SuperOffice.ErpSync.TestConfigDataRequestWS, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TestConfigDataRequestWS, To)
    nameWithType: EnumUtil.MapEnums(Of TestConfigDataRequestWS, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.ErpSync.TestConfigDataRequestWS, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.ErpSync.TestConfigDataRequestWS)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TestConfigDataRequestWS>(TestConfigDataRequestWS)
  nameWithType: ObjectExtensions.AssignByReflection<TestConfigDataRequestWS>(TestConfigDataRequestWS)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.ErpSync.TestConfigDataRequestWS>(SuperOffice.ErpSync.TestConfigDataRequestWS)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TestConfigDataRequestWS)(TestConfigDataRequestWS)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.ErpSync.TestConfigDataRequestWS)(SuperOffice.ErpSync.TestConfigDataRequestWS)
  name.vb: AssignByReflection(Of TestConfigDataRequestWS)(TestConfigDataRequestWS)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TestConfigDataRequestWS>
    nameWithType: ObjectExtensions.AssignByReflection<TestConfigDataRequestWS>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.ErpSync.TestConfigDataRequestWS>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.ErpSync.TestConfigDataRequestWS
    name: TestConfigDataRequestWS
    nameWithType: TestConfigDataRequestWS
    fullName: SuperOffice.ErpSync.TestConfigDataRequestWS
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TestConfigDataRequestWS)
    nameWithType: ObjectExtensions.AssignByReflection(Of TestConfigDataRequestWS)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.ErpSync.TestConfigDataRequestWS)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.ErpSync.TestConfigDataRequestWS
    name: TestConfigDataRequestWS
    nameWithType: TestConfigDataRequestWS
    fullName: SuperOffice.ErpSync.TestConfigDataRequestWS
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TestConfigDataRequestWS>()
  nameWithType: ObjectExtensions.GraphCopy<TestConfigDataRequestWS>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.ErpSync.TestConfigDataRequestWS>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TestConfigDataRequestWS)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.ErpSync.TestConfigDataRequestWS)()
  name.vb: GraphCopy(Of TestConfigDataRequestWS)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TestConfigDataRequestWS>
    nameWithType: ObjectExtensions.GraphCopy<TestConfigDataRequestWS>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.ErpSync.TestConfigDataRequestWS>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TestConfigDataRequestWS)
    nameWithType: ObjectExtensions.GraphCopy(Of TestConfigDataRequestWS)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.ErpSync.TestConfigDataRequestWS)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TestConfigDataRequestWS, To>()
  nameWithType: Converters.MapEnums<TestConfigDataRequestWS, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.ErpSync.TestConfigDataRequestWS, To>()
  nameWithType.vb: Converters.MapEnums(Of TestConfigDataRequestWS, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.ErpSync.TestConfigDataRequestWS, To)()
  name.vb: MapEnums(Of TestConfigDataRequestWS, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TestConfigDataRequestWS, To>
    nameWithType: Converters.MapEnums<TestConfigDataRequestWS, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.ErpSync.TestConfigDataRequestWS, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TestConfigDataRequestWS, To)
    nameWithType: Converters.MapEnums(Of TestConfigDataRequestWS, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.ErpSync.TestConfigDataRequestWS, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.#ctor*
  commentId: Overload:SuperOffice.ErpSync.TestConfigDataRequestWS.#ctor
  isExternal: true
  name: TestConfigDataRequestWS
  nameWithType: TestConfigDataRequestWS.TestConfigDataRequestWS
  fullName: SuperOffice.ErpSync.TestConfigDataRequestWS.TestConfigDataRequestWS
- uid: SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo*
  commentId: Overload:SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo
  isExternal: true
  name: ConnectionInfo
  nameWithType: TestConfigDataRequestWS.ConnectionInfo
  fullName: SuperOffice.ErpSync.TestConfigDataRequestWS.ConnectionInfo
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.String}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
