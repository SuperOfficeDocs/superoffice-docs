### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache
  commentId: T:SuperOffice.CRM.Cache.MDOPreferenceCache
  id: MDOPreferenceCache
  parent: SuperOffice.CRM.Cache
  children:
  - SuperOffice.CRM.Cache.MDOPreferenceCache.#ctor
  - SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultGroupingLowerLimit
  - SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultIsGroupingAllowed
  - SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit(System.String)
  - SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder(System.String)
  - SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly
  - SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  - SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed(System.String)
  - SuperOffice.CRM.Cache.MDOPreferenceCache.MDOSectionName
  - SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad
  - SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Cache.MDOPreferenceCache.ShowAssociatesInPrimaryGroupOnly
  - SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames
  langs:
  - csharp
  - vb
  name: MDOPreferenceCache
  nameWithType: MDOPreferenceCache
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nCache for the special preferences used to control MDO lists; to improve performance vs. getting those preferences every time they are needed\n"
  syntax:
    content: >-
      [CacheV2(600)]

      public class MDOPreferenceCache : CacheBaseV2, IInstanceContainerDisposable
    content.vb: >-
      <CacheV2(600)>

      Public Class MDOPreferenceCache
          Inherits CacheBaseV2
          Implements IInstanceContainerDisposable
  inheritance:
  - System.Object
  - SuperOffice.Data.Cache.CacheBaseV2
  inheritedMembers:
  - SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  - SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  - SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  - SuperOffice.Data.Cache.CacheBaseV2.Load
  - SuperOffice.Data.Cache.CacheBaseV2.Disposed
  extensionMethods:
  - SuperOffice.CRM.Cache.MDOPreferenceCache.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Cache.MDOPreferenceCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Cache.MDOPreferenceCache)
  - SuperOffice.CRM.Cache.MDOPreferenceCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Cache.MDOPreferenceCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.Data.Cache.CacheV2Attribute
    ctor: SuperOffice.Data.Cache.CacheV2Attribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 600
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.MDOSectionName
  commentId: F:SuperOffice.CRM.Cache.MDOPreferenceCache.MDOSectionName
  id: MDOSectionName
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: MDOSectionName
  nameWithType: MDOPreferenceCache.MDOSectionName
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.MDOSectionName
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDefault value for grouping in the absence of preferences\n"
  syntax:
    content: public const string MDOSectionName = "MDOList"
    return:
      type: System.String
    content.vb: Public Const MDOSectionName As String = "MDOList"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultIsGroupingAllowed
  commentId: F:SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultIsGroupingAllowed
  id: DefaultIsGroupingAllowed
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: DefaultIsGroupingAllowed
  nameWithType: MDOPreferenceCache.DefaultIsGroupingAllowed
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultIsGroupingAllowed
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDefault value for grouping in the absence of preferences\n"
  syntax:
    content: public const bool DefaultIsGroupingAllowed = false
    return:
      type: System.Boolean
    content.vb: Public Const DefaultIsGroupingAllowed As Boolean = False
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultGroupingLowerLimit
  commentId: F:SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultGroupingLowerLimit
  id: DefaultGroupingLowerLimit
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: DefaultGroupingLowerLimit
  nameWithType: MDOPreferenceCache.DefaultGroupingLowerLimit
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.DefaultGroupingLowerLimit
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDefault value for grouping list lower limit (number before list becomes flattened) in the absence of preferences\n"
  syntax:
    content: public const int DefaultGroupingLowerLimit = 7
    return:
      type: System.Int32
    content.vb: Public Const DefaultGroupingLowerLimit As Integer = 7
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.ShowAssociatesInPrimaryGroupOnly
  commentId: F:SuperOffice.CRM.Cache.MDOPreferenceCache.ShowAssociatesInPrimaryGroupOnly
  id: ShowAssociatesInPrimaryGroupOnly
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: ShowAssociatesInPrimaryGroupOnly
  nameWithType: MDOPreferenceCache.ShowAssociatesInPrimaryGroupOnly
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.ShowAssociatesInPrimaryGroupOnly
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public const string ShowAssociatesInPrimaryGroupOnly = "ShowAssociatesInPrimaryGroupOnly"
    return:
      type: System.String
    content.vb: Public Const ShowAssociatesInPrimaryGroupOnly As String = "ShowAssociatesInPrimaryGroupOnly"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  id: IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: IsCacheInvalidatedAsync(String, Int32, PrivateSave, CancellationToken)
  nameWithType: MDOPreferenceCache.IsCacheInvalidatedAsync(String, Int32, PrivateSave, CancellationToken)
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nDetermine if cache was <strong>actually</strong> invalidated by this change - much of the traffic on the userpreference table does not affect us here\n"
  remarks: "\nThis cache is invalidated if a row with section name MDOList is created or updated.\nIt is also affected by the Sorting section, and by Functions.ShowAssociatesInPrimaryGroupOnly\nPreferences of this sort are never deleted (there&apos;s no UI to do that), so we do not track them in the\nsame way we track Sentry preferences.\n"
  syntax:
    content: protected override Task<bool> IsCacheInvalidatedAsync(string tableName, int primaryKey, PrivateSave save, CancellationToken cancellationToken = null)
    parameters:
    - id: tableName
      type: System.String
    - id: primaryKey
      type: System.Int32
    - id: save
      type: SuperOffice.Data.SQL.PrivateSave
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Protected Overrides Function IsCacheInvalidatedAsync(tableName As String, primaryKey As Integer, save As PrivateSave, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed(System.String)
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed(System.String)
  id: IsGroupingAllowed(System.String)
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: IsGroupingAllowed(String)
  nameWithType: MDOPreferenceCache.IsGroupingAllowed(String)
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet whether grouping is turned on for a specific list\n"
  syntax:
    content: public bool IsGroupingAllowed(string listName)
    parameters:
    - id: listName
      type: System.String
      description: Name of list, case insensitive
    return:
      type: System.Boolean
      description: True if list is grouped
    content.vb: Public Function IsGroupingAllowed(listName As String) As Boolean
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit(System.String)
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit(System.String)
  id: GetGroupingLowerLimit(System.String)
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: GetGroupingLowerLimit(String)
  nameWithType: MDOPreferenceCache.GetGroupingLowerLimit(String)
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the lower limit before grouped lists collapse to flattened (though after filtering)\n"
  syntax:
    content: public int GetGroupingLowerLimit(string listName)
    parameters:
    - id: listName
      type: System.String
      description: Name of list, case insnesitive
    return:
      type: System.Int32
      description: Lower limit
    content.vb: Public Function GetGroupingLowerLimit(listName As String) As Integer
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder(System.String)
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder(System.String)
  id: GetPreferredSortOrder(System.String)
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: GetPreferredSortOrder(String)
  nameWithType: MDOPreferenceCache.GetPreferredSortOrder(String)
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder(System.String)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  summary: "\nGet the preferred sort order. While the interface suggests this can be per list, the\ncurrent functionality is to have this is a global preference\n"
  syntax:
    content: public MDOSortOrder GetPreferredSortOrder(string listName)
    parameters:
    - id: listName
      type: System.String
      description: Name of list, case insensitive
    return:
      type: SuperOffice.Data.MDOSortOrder
      description: Preferred sort order
    content.vb: Public Function GetPreferredSortOrder(listName As String) As MDOSortOrder
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly
  id: GetShowAssociatesInPrimaryGroupOnly
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: GetShowAssociatesInPrimaryGroupOnly()
  nameWithType: MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly()
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public bool GetShowAssociatesInPrimaryGroupOnly()
    return:
      type: System.Boolean
    content.vb: Public Function GetShowAssociatesInPrimaryGroupOnly As Boolean
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync(System.Threading.CancellationToken)
  id: OnLoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: OnLoadAsync(CancellationToken)
  nameWithType: MDOPreferenceCache.OnLoadAsync(CancellationToken)
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync(System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      protected override Task OnLoadAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Protected Overrides Function OnLoadAsync(cancellationToken As CancellationToken) As Task
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad
  id: OnLoad
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: OnLoad()
  nameWithType: MDOPreferenceCache.OnLoad()
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override void OnLoad()
    content.vb: Protected Overrides Sub OnLoad
  overridden: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.#ctor
  commentId: M:SuperOffice.CRM.Cache.MDOPreferenceCache.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: MDOPreferenceCache()
  nameWithType: MDOPreferenceCache.MDOPreferenceCache()
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.MDOPreferenceCache()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: public MDOPreferenceCache()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames
  commentId: P:SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames
  id: TableNames
  parent: SuperOffice.CRM.Cache.MDOPreferenceCache
  langs:
  - csharp
  - vb
  name: TableNames
  nameWithType: MDOPreferenceCache.TableNames
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Cache
  syntax:
    content: protected override IEnumerable<string> TableNames { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Protected Overrides ReadOnly Property TableNames As IEnumerable(Of String)
  overridden: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  overload: SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames*
  modifiers.csharp:
  - protected
  - override
  - get
  modifiers.vb:
  - Protected
  - Overrides
  - ReadOnly
references:
- uid: SuperOffice.CRM.Cache
  commentId: N:SuperOffice.CRM.Cache
  isExternal: true
  name: SuperOffice.CRM.Cache
  nameWithType: SuperOffice.CRM.Cache
  fullName: SuperOffice.CRM.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Cache.CacheBaseV2
  commentId: T:SuperOffice.Data.Cache.CacheBaseV2
  parent: SuperOffice.Data.Cache
  isExternal: true
  name: CacheBaseV2
  nameWithType: CacheBaseV2
  fullName: SuperOffice.Data.Cache.CacheBaseV2
- uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: InstanceDispose()
  nameWithType: CacheBaseV2.InstanceDispose()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    name: InstanceDispose
    nameWithType: CacheBaseV2.InstanceDispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    name: InstanceDispose
    nameWithType: CacheBaseV2.InstanceDispose
    fullName: SuperOffice.Data.Cache.CacheBaseV2.InstanceDispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: BeginDisableAutoUpdate()
  nameWithType: CacheBaseV2.BeginDisableAutoUpdate()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    name: BeginDisableAutoUpdate
    nameWithType: CacheBaseV2.BeginDisableAutoUpdate
    fullName: SuperOffice.Data.Cache.CacheBaseV2.BeginDisableAutoUpdate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: LoadAsync(CancellationToken)
  nameWithType: CacheBaseV2.LoadAsync(CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: CacheBaseV2.LoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync(System.Threading.CancellationToken)
    name: LoadAsync
    nameWithType: CacheBaseV2.LoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.LoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Load
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.Load
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Load()
  nameWithType: CacheBaseV2.Load()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Load()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.Load
    name: Load
    nameWithType: CacheBaseV2.Load
    fullName: SuperOffice.Data.Cache.CacheBaseV2.Load
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Cache.CacheBaseV2.Disposed
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.Disposed
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: Disposed
  nameWithType: CacheBaseV2.Disposed
  fullName: SuperOffice.Data.Cache.CacheBaseV2.Disposed
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<MDOPreferenceCache, To>()
  nameWithType: EnumUtil.MapEnums<MDOPreferenceCache, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.MDOPreferenceCache, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of MDOPreferenceCache, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.MDOPreferenceCache, To)()
  name.vb: MapEnums(Of MDOPreferenceCache, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<MDOPreferenceCache, To>
    nameWithType: EnumUtil.MapEnums<MDOPreferenceCache, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Cache.MDOPreferenceCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of MDOPreferenceCache, To)
    nameWithType: EnumUtil.MapEnums(Of MDOPreferenceCache, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Cache.MDOPreferenceCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Cache.MDOPreferenceCache)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<MDOPreferenceCache>(MDOPreferenceCache)
  nameWithType: ObjectExtensions.AssignByReflection<MDOPreferenceCache>(MDOPreferenceCache)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Cache.MDOPreferenceCache>(SuperOffice.CRM.Cache.MDOPreferenceCache)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of MDOPreferenceCache)(MDOPreferenceCache)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Cache.MDOPreferenceCache)(SuperOffice.CRM.Cache.MDOPreferenceCache)
  name.vb: AssignByReflection(Of MDOPreferenceCache)(MDOPreferenceCache)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<MDOPreferenceCache>
    nameWithType: ObjectExtensions.AssignByReflection<MDOPreferenceCache>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Cache.MDOPreferenceCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Cache.MDOPreferenceCache
    name: MDOPreferenceCache
    nameWithType: MDOPreferenceCache
    fullName: SuperOffice.CRM.Cache.MDOPreferenceCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of MDOPreferenceCache)
    nameWithType: ObjectExtensions.AssignByReflection(Of MDOPreferenceCache)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Cache.MDOPreferenceCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Cache.MDOPreferenceCache
    name: MDOPreferenceCache
    nameWithType: MDOPreferenceCache
    fullName: SuperOffice.CRM.Cache.MDOPreferenceCache
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<MDOPreferenceCache>()
  nameWithType: ObjectExtensions.GraphCopy<MDOPreferenceCache>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Cache.MDOPreferenceCache>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of MDOPreferenceCache)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Cache.MDOPreferenceCache)()
  name.vb: GraphCopy(Of MDOPreferenceCache)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<MDOPreferenceCache>
    nameWithType: ObjectExtensions.GraphCopy<MDOPreferenceCache>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Cache.MDOPreferenceCache>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of MDOPreferenceCache)
    nameWithType: ObjectExtensions.GraphCopy(Of MDOPreferenceCache)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Cache.MDOPreferenceCache)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<MDOPreferenceCache, To>()
  nameWithType: Converters.MapEnums<MDOPreferenceCache, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.MDOPreferenceCache, To>()
  nameWithType.vb: Converters.MapEnums(Of MDOPreferenceCache, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.MDOPreferenceCache, To)()
  name.vb: MapEnums(Of MDOPreferenceCache, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<MDOPreferenceCache, To>
    nameWithType: Converters.MapEnums<MDOPreferenceCache, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Cache.MDOPreferenceCache, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of MDOPreferenceCache, To)
    nameWithType: Converters.MapEnums(Of MDOPreferenceCache, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Cache.MDOPreferenceCache, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.Cache
  commentId: N:SuperOffice.Data.Cache
  isExternal: true
  name: SuperOffice.Data.Cache
  nameWithType: SuperOffice.Data.Cache
  fullName: SuperOffice.Data.Cache
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: IsCacheInvalidatedAsync(String, Int32, PrivateSave, CancellationToken)
  nameWithType: CacheBaseV2.IsCacheInvalidatedAsync(String, Int32, PrivateSave, CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String, System.Int32, SuperOffice.Data.SQL.PrivateSave, System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
    name: IsCacheInvalidatedAsync
    nameWithType: CacheBaseV2.IsCacheInvalidatedAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync(System.String,System.Int32,SuperOffice.Data.SQL.PrivateSave,System.Threading.CancellationToken)
    name: IsCacheInvalidatedAsync
    nameWithType: CacheBaseV2.IsCacheInvalidatedAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.IsCacheInvalidatedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.PrivateSave
    name: PrivateSave
    nameWithType: PrivateSave
    fullName: SuperOffice.Data.SQL.PrivateSave
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync
  isExternal: true
  name: IsCacheInvalidatedAsync
  nameWithType: MDOPreferenceCache.IsCacheInvalidatedAsync
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.IsCacheInvalidatedAsync
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed
  isExternal: true
  name: IsGroupingAllowed
  nameWithType: MDOPreferenceCache.IsGroupingAllowed
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.IsGroupingAllowed
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit
  isExternal: true
  name: GetGroupingLowerLimit
  nameWithType: MDOPreferenceCache.GetGroupingLowerLimit
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.GetGroupingLowerLimit
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder
  isExternal: true
  name: GetPreferredSortOrder
  nameWithType: MDOPreferenceCache.GetPreferredSortOrder
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.GetPreferredSortOrder
- uid: SuperOffice.Data.MDOSortOrder
  commentId: T:SuperOffice.Data.MDOSortOrder
  parent: SuperOffice.Data
  isExternal: true
  name: MDOSortOrder
  nameWithType: MDOSortOrder
  fullName: SuperOffice.Data.MDOSortOrder
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly
  isExternal: true
  name: GetShowAssociatesInPrimaryGroupOnly
  nameWithType: MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.GetShowAssociatesInPrimaryGroupOnly
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoadAsync(CancellationToken)
  nameWithType: CacheBaseV2.OnLoadAsync(CancellationToken)
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: CacheBaseV2.OnLoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync(System.Threading.CancellationToken)
    name: OnLoadAsync
    nameWithType: CacheBaseV2.OnLoadAsync
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync
  isExternal: true
  name: OnLoadAsync
  nameWithType: MDOPreferenceCache.OnLoadAsync
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoadAsync
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  commentId: M:SuperOffice.Data.Cache.CacheBaseV2.OnLoad
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: OnLoad()
  nameWithType: CacheBaseV2.OnLoad()
  fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad()
  spec.csharp:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    name: OnLoad
    nameWithType: CacheBaseV2.OnLoad
    fullName: SuperOffice.Data.Cache.CacheBaseV2.OnLoad
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad
  isExternal: true
  name: OnLoad
  nameWithType: MDOPreferenceCache.OnLoad
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.OnLoad
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.#ctor*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.#ctor
  isExternal: true
  name: MDOPreferenceCache
  nameWithType: MDOPreferenceCache.MDOPreferenceCache
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.MDOPreferenceCache
- uid: SuperOffice.Data.Cache.CacheBaseV2.TableNames
  commentId: P:SuperOffice.Data.Cache.CacheBaseV2.TableNames
  parent: SuperOffice.Data.Cache.CacheBaseV2
  isExternal: true
  name: TableNames
  nameWithType: CacheBaseV2.TableNames
  fullName: SuperOffice.Data.Cache.CacheBaseV2.TableNames
- uid: SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames*
  commentId: Overload:SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames
  isExternal: true
  name: TableNames
  nameWithType: MDOPreferenceCache.TableNames
  fullName: SuperOffice.CRM.Cache.MDOPreferenceCache.TableNames
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: '!:System.Collections.Generic.IEnumerable{System.String}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
