### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Util.WindowsIdentityHelper
  commentId: T:SuperOffice.Security.Util.WindowsIdentityHelper
  id: WindowsIdentityHelper
  parent: SuperOffice.Security.Util
  children:
  - SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage
  - SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  - SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  langs:
  - csharp
  - vb
  name: WindowsIdentityHelper
  nameWithType: WindowsIdentityHelper
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Util
  summary: "\nUtility class for WindowsIdentity\n"
  syntax:
    content: public sealed class WindowsIdentityHelper
    content.vb: Public NotInheritable Class WindowsIdentityHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.Util.WindowsIdentityHelper.EnumUtil.MapEnums``2
  - SuperOffice.Security.Util.WindowsIdentityHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  commentId: M:SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  id: LogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  parent: SuperOffice.Security.Util.WindowsIdentityHelper
  langs:
  - csharp
  - vb
  name: LogonUser(String, String, String, WindowsIdentityHelper.LogonType, WindowsIdentityHelper.LogonProvider)
  nameWithType: WindowsIdentityHelper.LogonUser(String, String, String, WindowsIdentityHelper.LogonType, WindowsIdentityHelper.LogonProvider)
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser(System.String, System.String, System.String, SuperOffice.Security.Util.WindowsIdentityHelper.LogonType, SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Util
  summary: "\nThe LogonUser function attempts to log a user on to the local computer, that is, to the computer from \nwhich LogonUser was called. You cannot use LogonUser to log on to a remote computer. You specify the \nuser with a user name and domain, and authenticate the user with a clear-text password. If the \nfunction succeeds, you receive a WindowsIdentity that represents the logged-on user.\n"
  remarks: For further reference, se the platform SDK (e.g. Advapi32.lib and advapi32.dll) for method LogonUser.
  example:
  - "\nExample of using this method to impersonate a user:\n<pre><code>WindowsIdentity tmpUser = WindowsIdentityHelper.LogonUser\n                          (\n                            myUserName, \n                            myDomain, \n                            myPassword, \n                            WindowsIdentityHelper.LogonType.NetworkCleartext\n                            WindowsIdentityHelper.LogonProvider.Default\n                          );\nWindowsImpersonationContext wic = tmpUser.Impersonate();\n\n// Do my stuff as someone else\n\nwic.Undo()</code></pre>\n"
  syntax:
    content: public static WindowsIdentity LogonUser(string userName, string domain, string password, WindowsIdentityHelper.LogonType logonType, WindowsIdentityHelper.LogonProvider logonProvider)
    parameters:
    - id: userName
      type: System.String
      description: "\nThis is the name of the user account to log on to. If you use the UPN format, user@DNS_domain_name, \nthe domain parameter must be null. \n"
    - id: domain
      type: System.String
      description: "\nIf this parameter is NULL, the user name must be specified in UPN format. If this parameter is \n&quot;.&quot;, the function validates the account using only the local account database."
    - id: password
      type: System.String
      description: Clear-text password for the user account specified by userName.
    - id: logonType
      type: SuperOffice.Security.Util.WindowsIdentityHelper.LogonType
      description: Specifies the type of logon operation to perform.
    - id: logonProvider
      type: SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider
      description: 'Specifies the logon provider. '
    return:
      type: System.Security.Principal.WindowsIdentity
      description: WindowsIdentity representing the logged on user
    content.vb: Public Shared Function LogonUser(userName As String, domain As String, password As String, logonType As WindowsIdentityHelper.LogonType, logonProvider As WindowsIdentityHelper.LogonProvider) As WindowsIdentity
  overload: SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser*
  exceptions:
  - type: SuperOffice.Security.Util.WindowsIdentityHelper.WindowsIdentityHelperException
    commentId: T:SuperOffice.Security.Util.WindowsIdentityHelper.WindowsIdentityHelperException
    description: Thrown if the user fails to log on.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  commentId: M:SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  id: TryLogonUser(System.String,System.String,System.String,SuperOffice.Security.Util.WindowsIdentityHelper.LogonType,SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  parent: SuperOffice.Security.Util.WindowsIdentityHelper
  langs:
  - csharp
  - vb
  name: TryLogonUser(String, String, String, WindowsIdentityHelper.LogonType, WindowsIdentityHelper.LogonProvider)
  nameWithType: WindowsIdentityHelper.TryLogonUser(String, String, String, WindowsIdentityHelper.LogonType, WindowsIdentityHelper.LogonProvider)
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser(System.String, System.String, System.String, SuperOffice.Security.Util.WindowsIdentityHelper.LogonType, SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Util
  summary: "\nAttempt to log on to the local computer. Same functionality as <xref href=\"SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser(System.String%2cSystem.String%2cSystem.String%2cSystem.Int32%2cSystem.Int32%2cSystem.Int32%40)\" data-throw-if-not-resolved=\"false\"></xref>, but does not throw exceptions on failure (null return)\n"
  syntax:
    content: public static WindowsIdentity TryLogonUser(string userName, string domain, string password, WindowsIdentityHelper.LogonType logonType, WindowsIdentityHelper.LogonProvider logonProvider)
    parameters:
    - id: userName
      type: System.String
      description: "\nThis is the name of the user account to log on to. If you use the UPN format, user@DNS_domain_name, \nthe domain parameter must be null. \n"
    - id: domain
      type: System.String
      description: "\nIf this parameter is NULL, the user name must be specified in UPN format. If this parameter is \n&quot;.&quot;, the function validates the account using only the local account database."
    - id: password
      type: System.String
      description: Clear-text password for the user account specified by userName.
    - id: logonType
      type: SuperOffice.Security.Util.WindowsIdentityHelper.LogonType
      description: Specifies the type of logon operation to perform.
    - id: logonProvider
      type: SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider
      description: 'Specifies the logon provider. '
    return:
      type: System.Security.Principal.WindowsIdentity
      description: WindowsIdentity representing the logged on user; or <strong>null</strong> if the logon failed for any reason
    content.vb: Public Shared Function TryLogonUser(userName As String, domain As String, password As String, logonType As WindowsIdentityHelper.LogonType, logonProvider As WindowsIdentityHelper.LogonProvider) As WindowsIdentity
  overload: SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage
  commentId: M:SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage
  id: GetErrorMessage
  parent: SuperOffice.Security.Util.WindowsIdentityHelper
  langs:
  - csharp
  - vb
  name: GetErrorMessage()
  nameWithType: WindowsIdentityHelper.GetErrorMessage()
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage()
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Util
  summary: "\nGet an error message through the underlying  Platform SDK.\n"
  syntax:
    content: public static string GetErrorMessage()
    return:
      type: System.String
      description: Error message as returned from the operating system.
    content.vb: Public Shared Function GetErrorMessage As String
  overload: SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Security.Util
  commentId: N:SuperOffice.Security.Util
  isExternal: true
  name: SuperOffice.Security.Util
  nameWithType: SuperOffice.Security.Util
  fullName: SuperOffice.Security.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<WindowsIdentityHelper, To>()
  nameWithType: EnumUtil.MapEnums<WindowsIdentityHelper, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Util.WindowsIdentityHelper, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of WindowsIdentityHelper, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Util.WindowsIdentityHelper, To)()
  name.vb: MapEnums(Of WindowsIdentityHelper, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<WindowsIdentityHelper, To>
    nameWithType: EnumUtil.MapEnums<WindowsIdentityHelper, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Util.WindowsIdentityHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of WindowsIdentityHelper, To)
    nameWithType: EnumUtil.MapEnums(Of WindowsIdentityHelper, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Util.WindowsIdentityHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<WindowsIdentityHelper, To>()
  nameWithType: Converters.MapEnums<WindowsIdentityHelper, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Util.WindowsIdentityHelper, To>()
  nameWithType.vb: Converters.MapEnums(Of WindowsIdentityHelper, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Util.WindowsIdentityHelper, To)()
  name.vb: MapEnums(Of WindowsIdentityHelper, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<WindowsIdentityHelper, To>
    nameWithType: Converters.MapEnums<WindowsIdentityHelper, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Util.WindowsIdentityHelper, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of WindowsIdentityHelper, To)
    nameWithType: Converters.MapEnums(Of WindowsIdentityHelper, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Util.WindowsIdentityHelper, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser*
  commentId: Overload:SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser
  isExternal: true
  name: LogonUser
  nameWithType: WindowsIdentityHelper.LogonUser
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.LogonUser
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.WindowsIdentityHelperException
  commentId: T:SuperOffice.Security.Util.WindowsIdentityHelper.WindowsIdentityHelperException
  isExternal: true
  name: WindowsIdentityHelper.WindowsIdentityHelperException
  nameWithType: WindowsIdentityHelper.WindowsIdentityHelperException
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.WindowsIdentityHelperException
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.LogonType
  commentId: T:SuperOffice.Security.Util.WindowsIdentityHelper.LogonType
  parent: SuperOffice.Security.Util
  isExternal: true
  name: WindowsIdentityHelper.LogonType
  nameWithType: WindowsIdentityHelper.LogonType
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.LogonType
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider
  commentId: T:SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider
  parent: SuperOffice.Security.Util
  isExternal: true
  name: WindowsIdentityHelper.LogonProvider
  nameWithType: WindowsIdentityHelper.LogonProvider
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.LogonProvider
- uid: System.Security.Principal.WindowsIdentity
  commentId: T:System.Security.Principal.WindowsIdentity
  parent: System.Security.Principal
  isExternal: true
  name: WindowsIdentity
  nameWithType: WindowsIdentity
  fullName: System.Security.Principal.WindowsIdentity
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: true
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser*
  commentId: Overload:SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser
  isExternal: true
  name: TryLogonUser
  nameWithType: WindowsIdentityHelper.TryLogonUser
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.TryLogonUser
- uid: SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage*
  commentId: Overload:SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage
  isExternal: true
  name: GetErrorMessage
  nameWithType: WindowsIdentityHelper.GetErrorMessage
  fullName: SuperOffice.Security.Util.WindowsIdentityHelper.GetErrorMessage
