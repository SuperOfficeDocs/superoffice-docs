### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.ExtendedModuleLicense
  commentId: T:SuperOffice.License.ExtendedModuleLicense
  id: ExtendedModuleLicense
  parent: SuperOffice.License
  children:
  - SuperOffice.License.ExtendedModuleLicense.#ctor
  - SuperOffice.License.ExtendedModuleLicense.Current
  - SuperOffice.License.ExtendedModuleLicense.New
  - SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded
  - SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree
  - SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse
  - SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree
  - SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal
  - SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal
  - SuperOffice.License.ExtendedModuleLicense.ToString
  langs:
  - csharp
  - vb
  name: ExtendedModuleLicense
  nameWithType: ExtendedModuleLicense
  fullName: SuperOffice.License.ExtendedModuleLicense
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataContract(Namespace = "http://www.superoffice.net/ws/crm/NetServer/11.1.0.0")]

      public class ExtendedModuleLicense
    content.vb: >-
      <DataContract(Namespace:="http://www.superoffice.net/ws/crm/NetServer/11.1.0.0")>

      Public Class ExtendedModuleLicense
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.License.ExtendedModuleLicense.EnumUtil.MapEnums``2
  - SuperOffice.License.ExtendedModuleLicense.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.License.ExtendedModuleLicense.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.ExtendedModuleLicense)
  - SuperOffice.License.ExtendedModuleLicense.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Namespace
      type: System.String
      value: http://www.superoffice.net/ws/crm/NetServer/11.1.0.0
- uid: SuperOffice.License.ExtendedModuleLicense.ToString
  commentId: M:SuperOffice.License.ExtendedModuleLicense.ToString
  id: ToString
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ExtendedModuleLicense.ToString()
  fullName: SuperOffice.License.ExtendedModuleLicense.ToString()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.License.ExtendedModuleLicense.ToString*
- uid: SuperOffice.License.ExtendedModuleLicense.#ctor
  commentId: M:SuperOffice.License.ExtendedModuleLicense.#ctor
  id: '#ctor'
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: ExtendedModuleLicense()
  nameWithType: ExtendedModuleLicense.ExtendedModuleLicense()
  fullName: SuperOffice.License.ExtendedModuleLicense.ExtendedModuleLicense()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: public ExtendedModuleLicense()
    content.vb: Public Sub New()
  overload: SuperOffice.License.ExtendedModuleLicense.#ctor*
  nameWithType.vb: ExtendedModuleLicense.New()
  fullName.vb: SuperOffice.License.ExtendedModuleLicense.New()
  name.vb: New()
- uid: SuperOffice.License.ExtendedModuleLicense.New
  commentId: P:SuperOffice.License.ExtendedModuleLicense.New
  id: New
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: New
  nameWithType: ExtendedModuleLicense.New
  fullName: SuperOffice.License.ExtendedModuleLicense.New
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public ModuleLicense New { get; set; }
    parameters: []
    return:
      type: SuperOffice.License.ModuleLicense
    content.vb: >-
      <DataMember>

      Public Property [New] As ModuleLicense
  overload: SuperOffice.License.ExtendedModuleLicense.New*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.Current
  commentId: P:SuperOffice.License.ExtendedModuleLicense.Current
  id: Current
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: Current
  nameWithType: ExtendedModuleLicense.Current
  fullName: SuperOffice.License.ExtendedModuleLicense.Current
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public ModuleLicense Current { get; set; }
    parameters: []
    return:
      type: SuperOffice.License.ModuleLicense
    content.vb: >-
      <DataMember>

      Public Property Current As ModuleLicense
  overload: SuperOffice.License.ExtendedModuleLicense.Current*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse
  commentId: P:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse
  id: NumberOfLicensesInUse
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicensesInUse
  nameWithType: ExtendedModuleLicense.NumberOfLicensesInUse
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public int NumberOfLicensesInUse { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property NumberOfLicensesInUse As Integer
  overload: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree
  commentId: P:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree
  id: NumberOfLicensesFree
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicensesFree
  nameWithType: ExtendedModuleLicense.NumberOfLicensesFree
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public int NumberOfLicensesFree { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property NumberOfLicensesFree As Integer
  overload: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded
  commentId: P:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded
  id: NumberOfLicensesAdded
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicensesAdded
  nameWithType: ExtendedModuleLicense.NumberOfLicensesAdded
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public int NumberOfLicensesAdded { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property NumberOfLicensesAdded As Integer
  overload: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal
  commentId: P:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal
  id: NumberOfLicensesNewTotal
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicensesNewTotal
  nameWithType: ExtendedModuleLicense.NumberOfLicensesNewTotal
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public int NumberOfLicensesNewTotal { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property NumberOfLicensesNewTotal As Integer
  overload: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree
  commentId: P:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree
  id: NumberOfLicensesNewFree
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicensesNewFree
  nameWithType: ExtendedModuleLicense.NumberOfLicensesNewFree
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public int NumberOfLicensesNewFree { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property NumberOfLicensesNewFree As Integer
  overload: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal
  commentId: P:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal
  id: NumberOfLicensesTotal
  parent: SuperOffice.License.ExtendedModuleLicense
  langs:
  - csharp
  - vb
  name: NumberOfLicensesTotal
  nameWithType: ExtendedModuleLicense.NumberOfLicensesTotal
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: >-
      [DataMember]

      public int NumberOfLicensesTotal { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <DataMember>

      Public Property NumberOfLicensesTotal As Integer
  overload: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.License.ExtendedModuleLicense.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<ExtendedModuleLicense, To>(ExtendedModuleLicense)
  nameWithType: EnumUtil.MapEnums<ExtendedModuleLicense, To>(ExtendedModuleLicense)
  fullName: EnumUtil.MapEnums<SuperOffice.License.ExtendedModuleLicense, To>(SuperOffice.License.ExtendedModuleLicense)
  nameWithType.vb: EnumUtil.MapEnums(Of ExtendedModuleLicense, To)(ExtendedModuleLicense)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.License.ExtendedModuleLicense, To)(SuperOffice.License.ExtendedModuleLicense)
  name.vb: MapEnums(Of ExtendedModuleLicense, To)(ExtendedModuleLicense)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.License.ExtendedModuleLicense)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.License.ExtendedModuleLicense)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
- uid: SuperOffice.License.ExtendedModuleLicense.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<ExtendedModuleLicense, To>(ExtendedModuleLicense)
  nameWithType: Converters.MapEnums<ExtendedModuleLicense, To>(ExtendedModuleLicense)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.License.ExtendedModuleLicense, To>(SuperOffice.License.ExtendedModuleLicense)
  nameWithType.vb: Converters.MapEnums(Of ExtendedModuleLicense, To)(ExtendedModuleLicense)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.License.ExtendedModuleLicense, To)(SuperOffice.License.ExtendedModuleLicense)
  name.vb: MapEnums(Of ExtendedModuleLicense, To)(ExtendedModuleLicense)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.License.ExtendedModuleLicense)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.License.ExtendedModuleLicense)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
- uid: SuperOffice.License.ExtendedModuleLicense.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.ExtendedModuleLicense)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<ExtendedModuleLicense>(ExtendedModuleLicense, ExtendedModuleLicense)
  nameWithType: ObjectExtensions.AssignByReflection<ExtendedModuleLicense>(ExtendedModuleLicense, ExtendedModuleLicense)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.License.ExtendedModuleLicense>(SuperOffice.License.ExtendedModuleLicense, SuperOffice.License.ExtendedModuleLicense)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ExtendedModuleLicense)(ExtendedModuleLicense, ExtendedModuleLicense)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.License.ExtendedModuleLicense)(SuperOffice.License.ExtendedModuleLicense, SuperOffice.License.ExtendedModuleLicense)
  name.vb: AssignByReflection(Of ExtendedModuleLicense)(ExtendedModuleLicense, ExtendedModuleLicense)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.ExtendedModuleLicense,SuperOffice.License.ExtendedModuleLicense)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: '>'
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: ','
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.License.ExtendedModuleLicense,SuperOffice.License.ExtendedModuleLicense)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: ','
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
- uid: SuperOffice.License.ExtendedModuleLicense.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<ExtendedModuleLicense>(ExtendedModuleLicense)
  nameWithType: ObjectExtensions.GraphCopy<ExtendedModuleLicense>(ExtendedModuleLicense)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.License.ExtendedModuleLicense>(SuperOffice.License.ExtendedModuleLicense)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ExtendedModuleLicense)(ExtendedModuleLicense)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.License.ExtendedModuleLicense)(SuperOffice.License.ExtendedModuleLicense)
  name.vb: GraphCopy(Of ExtendedModuleLicense)(ExtendedModuleLicense)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.License.ExtendedModuleLicense)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: '>'
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.License.ExtendedModuleLicense)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
  - name: (
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
    href: SuperOffice.License.ExtendedModuleLicense.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.License.ExtendedModuleLicense.ToString*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.ToString
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_ToString
  name: ToString
  nameWithType: ExtendedModuleLicense.ToString
  fullName: SuperOffice.License.ExtendedModuleLicense.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.License.ExtendedModuleLicense.#ctor*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.#ctor
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense__ctor
  name: ExtendedModuleLicense
  nameWithType: ExtendedModuleLicense.ExtendedModuleLicense
  fullName: SuperOffice.License.ExtendedModuleLicense.ExtendedModuleLicense
  nameWithType.vb: ExtendedModuleLicense.New
  fullName.vb: SuperOffice.License.ExtendedModuleLicense.New
  name.vb: New
- uid: SuperOffice.License.ExtendedModuleLicense.New*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.New
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_New
  name: New
  nameWithType: ExtendedModuleLicense.New
  fullName: SuperOffice.License.ExtendedModuleLicense.New
- uid: SuperOffice.License.ModuleLicense
  commentId: T:SuperOffice.License.ModuleLicense
  parent: SuperOffice.License
  isExternal: true
  name: ModuleLicense
  nameWithType: ModuleLicense
  fullName: SuperOffice.License.ModuleLicense
- uid: SuperOffice.License.ExtendedModuleLicense.Current*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.Current
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_Current
  name: Current
  nameWithType: ExtendedModuleLicense.Current
  fullName: SuperOffice.License.ExtendedModuleLicense.Current
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_NumberOfLicensesInUse
  name: NumberOfLicensesInUse
  nameWithType: ExtendedModuleLicense.NumberOfLicensesInUse
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesInUse
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_NumberOfLicensesFree
  name: NumberOfLicensesFree
  nameWithType: ExtendedModuleLicense.NumberOfLicensesFree
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesFree
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_NumberOfLicensesAdded
  name: NumberOfLicensesAdded
  nameWithType: ExtendedModuleLicense.NumberOfLicensesAdded
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesAdded
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_NumberOfLicensesNewTotal
  name: NumberOfLicensesNewTotal
  nameWithType: ExtendedModuleLicense.NumberOfLicensesNewTotal
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewTotal
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_NumberOfLicensesNewFree
  name: NumberOfLicensesNewFree
  nameWithType: ExtendedModuleLicense.NumberOfLicensesNewFree
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesNewFree
- uid: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal*
  commentId: Overload:SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal
  isExternal: true
  href: SuperOffice.License.ExtendedModuleLicense.html#SuperOffice_License_ExtendedModuleLicense_NumberOfLicensesTotal
  name: NumberOfLicensesTotal
  nameWithType: ExtendedModuleLicense.NumberOfLicensesTotal
  fullName: SuperOffice.License.ExtendedModuleLicense.NumberOfLicensesTotal
