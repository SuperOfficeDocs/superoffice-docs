### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  id: ContactNameDuplicateRule
  parent: SuperOffice.CRM.Data.Util.Duplicates
  children:
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.#ctor
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates(System.String[])
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name
  langs:
  - csharp
  - vb
  name: ContactNameDuplicateRule
  nameWithType: ContactNameDuplicateRule
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nMatch contacts by name\n"
  syntax:
    content: >-
      [ContactDuplicateRulePlugin("ContactNameDuplicateRule")]

      public class ContactNameDuplicateRule : IContactDuplicateRule, IDuplicateRule, IPlugin
    content.vb: >-
      <ContactDuplicateRulePlugin("ContactNameDuplicateRule")>

      Public Class ContactNameDuplicateRule
          Implements IContactDuplicateRule, IDuplicateRule, IPlugin
  inheritance:
  - System.Object
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IContactDuplicateRule
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: SuperOffice.CRM.Data.Util.Duplicates.ContactDuplicateRulePluginAttribute
    ctor: SuperOffice.CRM.Data.Util.Duplicates.ContactDuplicateRulePluginAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ContactNameDuplicateRule
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates(System.String[])
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates(System.String[])
  id: GetDuplicates(System.String[])
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: GetDuplicates(String[])
  nameWithType: ContactNameDuplicateRule.GetDuplicates(String[])
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates(System.String[])
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nGet matching records in the superoffice database, using a soundex value\n"
  syntax:
    content: public DuplicateEntry[] GetDuplicates(params string[] contactName)
    parameters:
    - id: contactName
      type: System.String[]
      description: Name of contact to lookup
    return:
      type: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]
      description: Any duplicates found in the database
    content.vb: Public Function GetDuplicates(ParamArray contactName As String()) As DuplicateEntry()
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates*
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String[])
  nameWithType.vb: ContactNameDuplicateRule.GetDuplicates(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates(System.String())
  name.vb: GetDuplicates(String())
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  id: CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: CreateNewEntity(DuplicateEntry)
  nameWithType: ContactNameDuplicateRule.CreateNewEntity(DuplicateEntry)
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nThis operation is not supported for this rule\n"
  syntax:
    content: public int CreateNewEntity(DuplicateEntry entry)
    parameters:
    - id: entry
      type: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
      description: Entry to create contact from
    return:
      type: System.Int32
      description: Primary key of contact from superoffice database
    content.vb: Public Function CreateNewEntity(entry As DuplicateEntry) As Integer
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity*
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.#ctor
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: ContactNameDuplicateRule()
  nameWithType: ContactNameDuplicateRule.ContactNameDuplicateRule()
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.ContactNameDuplicateRule()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  syntax:
    content: public ContactNameDuplicateRule()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive
  id: IsActive
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: ContactNameDuplicateRule.IsActive
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nIndicates if this is an active rule that should be asked for duplicates\n"
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive*
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.IsActive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name
  id: Name
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ContactNameDuplicateRule.Name
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nUnique identifying name for rule\n"
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name*
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName
  id: DisplayName
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: ContactNameDuplicateRule.DisplayName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nDisplay name of rule\n"
  syntax:
    content: public string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayName As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName*
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip
  id: DisplayTooltip
  parent: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
  langs:
  - csharp
  - vb
  name: DisplayTooltip
  nameWithType: ContactNameDuplicateRule.DisplayTooltip
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: "\nDescription of rule\n"
  syntax:
    content: public string DisplayTooltip { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DisplayTooltip As String
  overload: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip*
  implements:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayTooltip
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.CRM.Data.Util.Duplicates
  commentId: N:SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  name: SuperOffice.CRM.Data.Util.Duplicates
  nameWithType: SuperOffice.CRM.Data.Util.Duplicates
  fullName: SuperOffice.CRM.Data.Util.Duplicates
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.CRM.Data.Util.Duplicates.IContactDuplicateRule
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.IContactDuplicateRule
  parent: SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  name: IContactDuplicateRule
  nameWithType: IContactDuplicateRule
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IContactDuplicateRule
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  parent: SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  name: IDuplicateRule
  nameWithType: IDuplicateRule
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<ContactNameDuplicateRule, To>()
  nameWithType: EnumUtil.MapEnums<ContactNameDuplicateRule, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of ContactNameDuplicateRule, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To)()
  name.vb: MapEnums(Of ContactNameDuplicateRule, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<ContactNameDuplicateRule, To>
    nameWithType: EnumUtil.MapEnums<ContactNameDuplicateRule, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of ContactNameDuplicateRule, To)
    nameWithType: EnumUtil.MapEnums(Of ContactNameDuplicateRule, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<ContactNameDuplicateRule>(ContactNameDuplicateRule)
  nameWithType: ObjectExtensions.AssignByReflection<ContactNameDuplicateRule>(ContactNameDuplicateRule)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule>(SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of ContactNameDuplicateRule)(ContactNameDuplicateRule)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)(SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)
  name.vb: AssignByReflection(Of ContactNameDuplicateRule)(ContactNameDuplicateRule)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<ContactNameDuplicateRule>
    nameWithType: ObjectExtensions.AssignByReflection<ContactNameDuplicateRule>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
    name: ContactNameDuplicateRule
    nameWithType: ContactNameDuplicateRule
    fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of ContactNameDuplicateRule)
    nameWithType: ObjectExtensions.AssignByReflection(Of ContactNameDuplicateRule)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
    name: ContactNameDuplicateRule
    nameWithType: ContactNameDuplicateRule
    fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<ContactNameDuplicateRule>()
  nameWithType: ObjectExtensions.GraphCopy<ContactNameDuplicateRule>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of ContactNameDuplicateRule)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)()
  name.vb: GraphCopy(Of ContactNameDuplicateRule)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<ContactNameDuplicateRule>
    nameWithType: ObjectExtensions.GraphCopy<ContactNameDuplicateRule>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of ContactNameDuplicateRule)
    nameWithType: ObjectExtensions.GraphCopy(Of ContactNameDuplicateRule)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<ContactNameDuplicateRule, To>()
  nameWithType: Converters.MapEnums<ContactNameDuplicateRule, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To>()
  nameWithType.vb: Converters.MapEnums(Of ContactNameDuplicateRule, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To)()
  name.vb: MapEnums(Of ContactNameDuplicateRule, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<ContactNameDuplicateRule, To>
    nameWithType: Converters.MapEnums<ContactNameDuplicateRule, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of ContactNameDuplicateRule, To)
    nameWithType: Converters.MapEnums(Of ContactNameDuplicateRule, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates
  isExternal: true
  name: GetDuplicates
  nameWithType: ContactNameDuplicateRule.GetDuplicates
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.GetDuplicates
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String[])
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String[])
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  isExternal: true
  name: GetDuplicates(String[])
  nameWithType: IDuplicateRule.GetDuplicates(String[])
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String[])
  nameWithType.vb: IDuplicateRule.GetDuplicates(String())
  fullName.vb: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String())
  name.vb: GetDuplicates(String())
  spec.csharp:
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String[])
    name: GetDuplicates
    nameWithType: IDuplicateRule.GetDuplicates
    fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates(System.String[])
    name: GetDuplicates
    nameWithType: IDuplicateRule.GetDuplicates
    fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.GetDuplicates
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]
  isExternal: true
  name: DuplicateEntry[]
  nameWithType: DuplicateEntry[]
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]
  nameWithType.vb: DuplicateEntry()
  fullName.vb: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry()
  name.vb: DuplicateEntry()
  spec.csharp:
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity
  isExternal: true
  name: CreateNewEntity
  nameWithType: ContactNameDuplicateRule.CreateNewEntity
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.CreateNewEntity
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  isExternal: true
  name: CreateNewEntity(DuplicateEntry)
  nameWithType: IDuplicateRule.CreateNewEntity(DuplicateEntry)
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  spec.csharp:
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
    name: CreateNewEntity
    nameWithType: IDuplicateRule.CreateNewEntity
    fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
    name: CreateNewEntity
    nameWithType: IDuplicateRule.CreateNewEntity
    fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.CreateNewEntity
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    nameWithType: DuplicateEntry
    fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  parent: SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  name: DuplicateEntry
  nameWithType: DuplicateEntry
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.#ctor*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.#ctor
  isExternal: true
  name: ContactNameDuplicateRule
  nameWithType: ContactNameDuplicateRule.ContactNameDuplicateRule
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.ContactNameDuplicateRule
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive
  isExternal: true
  name: IsActive
  nameWithType: ContactNameDuplicateRule.IsActive
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.IsActive
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.IsActive
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.IsActive
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  isExternal: true
  name: IsActive
  nameWithType: IDuplicateRule.IsActive
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name
  isExternal: true
  name: Name
  nameWithType: ContactNameDuplicateRule.Name
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.Name
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.Name
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.Name
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  isExternal: true
  name: Name
  nameWithType: IDuplicateRule.Name
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName
  isExternal: true
  name: DisplayName
  nameWithType: ContactNameDuplicateRule.DisplayName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayName
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayName
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayName
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  isExternal: true
  name: DisplayName
  nameWithType: IDuplicateRule.DisplayName
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayName
- uid: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip
  isExternal: true
  name: DisplayTooltip
  nameWithType: ContactNameDuplicateRule.DisplayTooltip
  fullName: SuperOffice.CRM.Data.Util.Duplicates.ContactNameDuplicateRule.DisplayTooltip
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayTooltip
  commentId: P:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayTooltip
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
  isExternal: true
  name: DisplayTooltip
  nameWithType: IDuplicateRule.DisplayTooltip
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.DisplayTooltip
