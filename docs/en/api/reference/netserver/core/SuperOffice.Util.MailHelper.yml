### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.MailHelper
  commentId: T:SuperOffice.Util.MailHelper
  id: MailHelper
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.MailHelper.ExceptionIsAuthFail(System.Exception,System.Boolean)
  - SuperOffice.Util.MailHelper.GetBodyContent(System.String)
  - SuperOffice.Util.MailHelper.GetCleanHtmlBody(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: MailHelper
  nameWithType: MailHelper
  fullName: SuperOffice.Util.MailHelper
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  syntax:
    content: public static class MailHelper
    content.vb: Public Module MailHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.Util.MailHelper.ExceptionIsAuthFail(System.Exception,System.Boolean)
  commentId: M:SuperOffice.Util.MailHelper.ExceptionIsAuthFail(System.Exception,System.Boolean)
  id: ExceptionIsAuthFail(System.Exception,System.Boolean)
  parent: SuperOffice.Util.MailHelper
  langs:
  - csharp
  - vb
  name: ExceptionIsAuthFail(Exception, Boolean)
  nameWithType: MailHelper.ExceptionIsAuthFail(Exception, Boolean)
  fullName: SuperOffice.Util.MailHelper.ExceptionIsAuthFail(System.Exception, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nChecks if an exception is considered an authentication exception.\n"
  syntax:
    content: public static bool ExceptionIsAuthFail(Exception ex, bool strict = false)
    parameters:
    - id: ex
      type: System.Exception
    - id: strict
      type: System.Boolean
    return:
      type: System.Boolean
    content.vb: Public Shared Function ExceptionIsAuthFail(ex As Exception, strict As Boolean = False) As Boolean
  overload: SuperOffice.Util.MailHelper.ExceptionIsAuthFail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.MailHelper.GetCleanHtmlBody(System.String,System.Boolean)
  commentId: M:SuperOffice.Util.MailHelper.GetCleanHtmlBody(System.String,System.Boolean)
  id: GetCleanHtmlBody(System.String,System.Boolean)
  parent: SuperOffice.Util.MailHelper
  langs:
  - csharp
  - vb
  name: GetCleanHtmlBody(String, Boolean)
  nameWithType: MailHelper.GetCleanHtmlBody(String, Boolean)
  fullName: SuperOffice.Util.MailHelper.GetCleanHtmlBody(System.String, System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nStrip everything but what is inside <body></body>\nStrip scripts\nOptionally remove references to external images\n"
  syntax:
    content: >-
      [Obsolete("Use MailSanitizer", false)]

      public static string GetCleanHtmlBody(string text, bool appendCustomStyle)
    parameters:
    - id: text
      type: System.String
    - id: appendCustomStyle
      type: System.Boolean
    return:
      type: System.String
    content.vb: >-
      <Obsolete("Use MailSanitizer", False)>

      Public Shared Function GetCleanHtmlBody(text As String, appendCustomStyle As Boolean) As String
  overload: SuperOffice.Util.MailHelper.GetCleanHtmlBody*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use MailSanitizer
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.Util.MailHelper.GetBodyContent(System.String)
  commentId: M:SuperOffice.Util.MailHelper.GetBodyContent(System.String)
  id: GetBodyContent(System.String)
  parent: SuperOffice.Util.MailHelper
  langs:
  - csharp
  - vb
  name: GetBodyContent(String)
  nameWithType: MailHelper.GetBodyContent(String)
  fullName: SuperOffice.Util.MailHelper.GetBodyContent(System.String)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: "\nStrip everything but what is inside <body></body>\nIf the body tags are not found, everything is returned\n"
  syntax:
    content: public static string GetBodyContent(string text)
    parameters:
    - id: text
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetBodyContent(text As String) As String
  overload: SuperOffice.Util.MailHelper.GetBodyContent*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Util.MailHelper.ExceptionIsAuthFail*
  commentId: Overload:SuperOffice.Util.MailHelper.ExceptionIsAuthFail
  isExternal: true
  name: ExceptionIsAuthFail
  nameWithType: MailHelper.ExceptionIsAuthFail
  fullName: SuperOffice.Util.MailHelper.ExceptionIsAuthFail
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Util.MailHelper.GetCleanHtmlBody*
  commentId: Overload:SuperOffice.Util.MailHelper.GetCleanHtmlBody
  isExternal: true
  name: GetCleanHtmlBody
  nameWithType: MailHelper.GetCleanHtmlBody
  fullName: SuperOffice.Util.MailHelper.GetCleanHtmlBody
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Util.MailHelper.GetBodyContent*
  commentId: Overload:SuperOffice.Util.MailHelper.GetBodyContent
  isExternal: true
  name: GetBodyContent
  nameWithType: MailHelper.GetBodyContent
  fullName: SuperOffice.Util.MailHelper.GetBodyContent
