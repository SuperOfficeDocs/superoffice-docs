### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Documents.PhysicalDocument
  commentId: T:SuperOffice.CRM.Documents.PhysicalDocument
  id: PhysicalDocument
  parent: SuperOffice.CRM.Documents
  children:
  - SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider
  - SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename(System.String,System.String)
  - SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync(System.String[],System.String,System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(System.Int32,System.String,SuperOffice.IO.TagContainer,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],SuperOffice.IO.TagContainer,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync(System.Threading.CancellationToken,System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.DocumentId
  - SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo
  - SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand(System.String,System.String[],System.String,System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins
  - SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(SuperOffice.CRM.IDocumentInfo)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(System.Int32)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync(System.String[],System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync(System.Int32,System.Threading.CancellationToken,System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates(System.Int32)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin(System.Int32)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities(System.Int32)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList
  - SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid(System.String)
  - SuperOffice.CRM.Documents.PhysicalDocument.Length
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
  - SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo(System.String)
  - SuperOffice.CRM.Documents.PhysicalDocument.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  - SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String[],System.IO.Stream,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(System.String[],System.IO.Stream,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync(System.Int32,System.IO.Stream,System.String,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  - SuperOffice.CRM.Documents.PhysicalDocument.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  - SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: PhysicalDocument
  nameWithType: PhysicalDocument
  fullName: SuperOffice.CRM.Documents.PhysicalDocument
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Facade for the Document Plugin system, and one-stop-shop for physical-document operations
  remarks: >-
    An instance of this class represents a physical document in a document archive, and can be

    used to manipulate (Load, Save) that document and its metadata. Instances are constructed

    using a static factory function, always based on an already existing information in the

    database.

    <p></p>

    Static methods also provide access to document template functions and other

    non-document specific functions.
  example: []
  syntax:
    content: 'public sealed class PhysicalDocument : IStreamProvider'
    content.vb: Public NotInheritable Class PhysicalDocument Implements IStreamProvider
  inheritance:
  - System.Object
  implements:
  - SuperOffice.IO.IStreamProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.CRM.Documents.PhysicalDocument.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Documents.PhysicalDocument.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(System.Int32)
  id: GetDocument(System.Int32)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocument(int)
  nameWithType: PhysicalDocument.GetDocument(int)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static PhysicalDocument GetDocument(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Documents.PhysicalDocument
    content.vb: Public Shared Function GetDocument(documentId As Integer) As PhysicalDocument
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument*
  nameWithType.vb: PhysicalDocument.GetDocument(Integer)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(Integer)
  name.vb: GetDocument(Integer)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(SuperOffice.CRM.IDocumentInfo)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(SuperOffice.CRM.IDocumentInfo)
  id: GetDocument(SuperOffice.CRM.IDocumentInfo)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocument(IDocumentInfo)
  nameWithType: PhysicalDocument.GetDocument(IDocumentInfo)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument(SuperOffice.CRM.IDocumentInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static PhysicalDocument GetDocument(IDocumentInfo incomingInfo)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    return:
      type: SuperOffice.CRM.Documents.PhysicalDocument
    content.vb: Public Shared Function GetDocument(incomingInfo As IDocumentInfo) As PhysicalDocument
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.Threading.CancellationToken)
  id: CreateNewEmptyAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateNewEmptyAsync(IDocumentInfo, string, string[], string, string[], CancellationToken)
  nameWithType: PhysicalDocument.CreateNewEmptyAsync(IDocumentInfo, string, string[], string, string[], CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync(SuperOffice.CRM.IDocumentInfo, string, string[], string, string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<(string extRef, string actualFileName)> CreateNewEmptyAsync(IDocumentInfo incomingInfo, string fileName, string[] extraFields, string versionDecription, string[] versionExtraFields, CancellationToken cancellationToken = default)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: fileName
      type: System.String
    - id: extraFields
      type: System.String[]
    - id: versionDecription
      type: System.String
    - id: versionExtraFields
      type: System.String[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
    content.vb: Public Shared Function CreateNewEmptyAsync(incomingInfo As IDocumentInfo, fileName As String, extraFields As String(), versionDecription As String, versionExtraFields As String(), cancellationToken As CancellationToken = Nothing) As Task(Of (extRef As String, actualFileName As String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync*
  nameWithType.vb: PhysicalDocument.CreateNewEmptyAsync(IDocumentInfo, String, String(), String, String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync(SuperOffice.CRM.IDocumentInfo, String, String(), String, String(), System.Threading.CancellationToken)
  name.vb: CreateNewEmptyAsync(IDocumentInfo, String, String(), String, String(), CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[])
  id: CreateNewEmptyByRefAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateNewEmptyByRefAsync(IDocumentInfo, string, string[], string, string[])
  nameWithType: PhysicalDocument.CreateNewEmptyByRefAsync(IDocumentInfo, string, string[], string, string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync(SuperOffice.CRM.IDocumentInfo, string, string[], string, string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<(string extRef, IDocumentInfo documentInfo, string actualFileName)> CreateNewEmptyByRefAsync(IDocumentInfo incomingInfo, string fileName, string[] extraFields, string versionDecription, string[] versionExtraFields)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: fileName
      type: System.String
    - id: extraFields
      type: System.String[]
    - id: versionDecription
      type: System.String
    - id: versionExtraFields
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}}
    content.vb: Public Shared Function CreateNewEmptyByRefAsync(incomingInfo As IDocumentInfo, fileName As String, extraFields As String(), versionDecription As String, versionExtraFields As String()) As Task(Of (extRef As String, documentInfo As IDocumentInfo, actualFileName As String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync*
  nameWithType.vb: PhysicalDocument.CreateNewEmptyByRefAsync(IDocumentInfo, String, String(), String, String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync(SuperOffice.CRM.IDocumentInfo, String, String(), String, String())
  name.vb: CreateNewEmptyByRefAsync(IDocumentInfo, String, String(), String, String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.String,System.Threading.CancellationToken)
  id: CreateNewFromTemplateAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateNewFromTemplateAsync(IDocumentInfo, string, string[], string, string[], string, CancellationToken)
  nameWithType: PhysicalDocument.CreateNewFromTemplateAsync(IDocumentInfo, string, string[], string, string[], string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync(SuperOffice.CRM.IDocumentInfo, string, string[], string, string[], string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Create a new document in the document archive without replacing template tags
  remarks: >-
    This method will create a new physical document, using the physical template <b>unchanged</b>.

    No template tag substitution will be attempted, no document conversions, nothing.

    <p></p>

    The method is generally used for creating mailmerge template documents
  example: []
  syntax:
    content: public static Task<(string extRef, string fileName)> CreateNewFromTemplateAsync(IDocumentInfo incomingInfo, string fileName, string[] extraFields, string versionDecription, string[] versionExtraFields, string uiCulture, CancellationToken cancellationToken = default)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: fileName
      type: System.String
    - id: extraFields
      type: System.String[]
    - id: versionDecription
      type: System.String
    - id: versionExtraFields
      type: System.String[]
    - id: uiCulture
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
      description: Reference to the newly created document in the document archive.
    content.vb: Public Shared Function CreateNewFromTemplateAsync(incomingInfo As IDocumentInfo, fileName As String, extraFields As String(), versionDecription As String, versionExtraFields As String(), uiCulture As String, cancellationToken As CancellationToken = Nothing) As Task(Of (extRef As String, fileName As String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync*
  nameWithType.vb: PhysicalDocument.CreateNewFromTemplateAsync(IDocumentInfo, String, String(), String, String(), String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync(SuperOffice.CRM.IDocumentInfo, String, String(), String, String(), String, System.Threading.CancellationToken)
  name.vb: CreateNewFromTemplateAsync(IDocumentInfo, String, String(), String, String(), String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],SuperOffice.IO.TagContainer,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],SuperOffice.IO.TagContainer,System.String,System.Threading.CancellationToken)
  id: CreateNewFromTemplateWithTagsAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.String[],System.String,System.String[],SuperOffice.IO.TagContainer,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateNewFromTemplateWithTagsAsync(IDocumentInfo, string, string[], string, string[], TagContainer, string, CancellationToken)
  nameWithType: PhysicalDocument.CreateNewFromTemplateWithTagsAsync(IDocumentInfo, string, string[], string, string[], TagContainer, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync(SuperOffice.CRM.IDocumentInfo, string, string[], string, string[], SuperOffice.IO.TagContainer, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Create a new document in the document archive, replacing template tags
  remarks: >-
    This method will create a new physical document, using the physical template and

    replacing all tags passed in through the TagContainer parameter.
  example: []
  syntax:
    content: public static Task<(string extRef, string fileName)> CreateNewFromTemplateWithTagsAsync(IDocumentInfo incomingInfo, string fileName, string[] extraFields, string versionDecription, string[] versionExtraFields, TagContainer templateTags, string uiCulture, CancellationToken cancellationToken = default)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: fileName
      type: System.String
    - id: extraFields
      type: System.String[]
    - id: versionDecription
      type: System.String
    - id: versionExtraFields
      type: System.String[]
    - id: templateTags
      type: SuperOffice.IO.TagContainer
    - id: uiCulture
      type: System.String
      description: UI Language (en-US or nb-NO) - used to select appropriate doc template
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
      description: Reference to the newly created document in the document archive.
    content.vb: Public Shared Function CreateNewFromTemplateWithTagsAsync(incomingInfo As IDocumentInfo, fileName As String, extraFields As String(), versionDecription As String, versionExtraFields As String(), templateTags As TagContainer, uiCulture As String, cancellationToken As CancellationToken = Nothing) As Task(Of (extRef As String, fileName As String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync*
  nameWithType.vb: PhysicalDocument.CreateNewFromTemplateWithTagsAsync(IDocumentInfo, String, String(), String, String(), TagContainer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync(SuperOffice.CRM.IDocumentInfo, String, String(), String, String(), SuperOffice.IO.TagContainer, String, System.Threading.CancellationToken)
  name.vb: CreateNewFromTemplateWithTagsAsync(IDocumentInfo, String, String(), String, String(), TagContainer, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync(System.Threading.CancellationToken)
  id: SuggestFilenameAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: SuggestFilenameAsync(CancellationToken)
  nameWithType: PhysicalDocument.SuggestFilenameAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<string> SuggestFilenameAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function SuggestFilenameAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String[],System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String[],System.IO.Stream,System.Threading.CancellationToken)
  id: SaveDocumentFromStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String[],System.IO.Stream,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: SaveDocumentFromStreamAsync(IDocumentInfo, string[], Stream, CancellationToken)
  nameWithType: PhysicalDocument.SaveDocumentFromStreamAsync(IDocumentInfo, string[], Stream, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(SuperOffice.CRM.IDocumentInfo, string[], System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<ReturnInfo> SaveDocumentFromStreamAsync(IDocumentInfo incomingInfo, string[] allowedReturnTypes, Stream content, CancellationToken cancellationToken = default)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: allowedReturnTypes
      type: System.String[]
    - id: content
      type: System.IO.Stream
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
    content.vb: Public Shared Function SaveDocumentFromStreamAsync(incomingInfo As IDocumentInfo, allowedReturnTypes As String(), content As Stream, cancellationToken As CancellationToken = Nothing) As Task(Of ReturnInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync*
  nameWithType.vb: PhysicalDocument.SaveDocumentFromStreamAsync(IDocumentInfo, String(), Stream, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(SuperOffice.CRM.IDocumentInfo, String(), System.IO.Stream, System.Threading.CancellationToken)
  name.vb: SaveDocumentFromStreamAsync(IDocumentInfo, String(), Stream, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(System.String[],System.IO.Stream,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(System.String[],System.IO.Stream,System.Threading.CancellationToken)
  id: SaveDocumentFromStreamAsync(System.String[],System.IO.Stream,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: SaveDocumentFromStreamAsync(string[], Stream, CancellationToken)
  nameWithType: PhysicalDocument.SaveDocumentFromStreamAsync(string[], Stream, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(string[], System.IO.Stream, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<ReturnInfo> SaveDocumentFromStreamAsync(string[] allowedReturnTypes, Stream content, CancellationToken cancellationToken = default)
    parameters:
    - id: allowedReturnTypes
      type: System.String[]
    - id: content
      type: System.IO.Stream
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
    content.vb: Public Function SaveDocumentFromStreamAsync(allowedReturnTypes As String(), content As Stream, cancellationToken As CancellationToken = Nothing) As Task(Of ReturnInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync*
  nameWithType.vb: PhysicalDocument.SaveDocumentFromStreamAsync(String(), Stream, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync(String(), System.IO.Stream, System.Threading.CancellationToken)
  name.vb: SaveDocumentFromStreamAsync(String(), Stream, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Threading.CancellationToken)
  id: LoadDocumentStreamAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadDocumentStreamAsync(IDocumentInfo, string, CancellationToken)
  nameWithType: PhysicalDocument.LoadDocumentStreamAsync(IDocumentInfo, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(SuperOffice.CRM.IDocumentInfo, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<Stream> LoadDocumentStreamAsync(IDocumentInfo incomingInfo, string versionId, CancellationToken cancellationToken = default)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: versionId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Shared Function LoadDocumentStreamAsync(incomingInfo As IDocumentInfo, versionId As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync*
  nameWithType.vb: PhysicalDocument.LoadDocumentStreamAsync(IDocumentInfo, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(SuperOffice.CRM.IDocumentInfo, String, System.Threading.CancellationToken)
  name.vb: LoadDocumentStreamAsync(IDocumentInfo, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.String,System.Threading.CancellationToken)
  id: LoadDocumentStreamAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadDocumentStreamAsync(string, CancellationToken)
  nameWithType: PhysicalDocument.LoadDocumentStreamAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<Stream> LoadDocumentStreamAsync(string versionId, CancellationToken cancellationToken = default)
    parameters:
    - id: versionId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Function LoadDocumentStreamAsync(versionId As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync*
  nameWithType.vb: PhysicalDocument.LoadDocumentStreamAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(String, System.Threading.CancellationToken)
  name.vb: LoadDocumentStreamAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.Threading.CancellationToken)
  id: LoadDocumentStreamAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadDocumentStreamAsync(CancellationToken)
  nameWithType: PhysicalDocument.LoadDocumentStreamAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<Stream> LoadDocumentStreamAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Function LoadDocumentStreamAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync(System.Threading.CancellationToken)
  id: GetDatabaseLanguageCodeAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDatabaseLanguageCodeAsync(CancellationToken)
  nameWithType: PhysicalDocument.GetDatabaseLanguageCodeAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Returns the database language for the current SuperOffice installation as stored in the ProductVersion table "SuperOffice" "DatabaseLanguage". "US"
  example: []
  syntax:
    content: public static Task<string> GetDatabaseLanguageCodeAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: 'SuperOffice Language code: "US", "SW", "GE" etc. NULL if nothing is configured.'
    content.vb: Public Shared Function GetDatabaseLanguageCodeAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync(System.Threading.CancellationToken)
  id: GetDatabaseLanguageCultureAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDatabaseLanguageCultureAsync(CancellationToken)
  nameWithType: PhysicalDocument.GetDatabaseLanguageCultureAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Returns the database language for the current SuperOffice installation as stored in the ProductVersion table "SuperOffice" "DatabaseLanguage". "US"
  example: []
  syntax:
    content: public static Task<CultureInfo> GetDatabaseLanguageCultureAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Globalization.CultureInfo}
      description: 'CultureInfo based on the neutral ISO language: "en", "sv", "de" etc. NULL if nothing is configured.'
    content.vb: Public Shared Function GetDatabaseLanguageCultureAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CultureInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  id: GetTemplateLanguagesAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetTemplateLanguagesAsync(IDocumentTemplateInfo, CancellationToken)
  nameWithType: PhysicalDocument.GetTemplateLanguagesAsync(IDocumentTemplateInfo, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync(SuperOffice.CRM.IDocumentTemplateInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Return the list of language-specific variants of a given document template, excepting the default language ("").

    The DatabaseLanguage should be used to determine the default language.
  example: []
  syntax:
    content: public static Task<string[]> GetTemplateLanguagesAsync(IDocumentTemplateInfo templateInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: templateInfo
      type: SuperOffice.CRM.IDocumentTemplateInfo
      description: The document template info
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String[]}
      description: 'Array of ISO language codes identifying language variants: ["en", "sv", "de"]. Empty array if no variants'
    content.vb: Public Shared Function GetTemplateLanguagesAsync(templateInfo As IDocumentTemplateInfo, cancellationToken As CancellationToken = Nothing) As Task(Of String())
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Throws if templateInfo is null or id 0
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.Threading.CancellationToken)
  id: GetDocumentUrlAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentUrlAsync(CancellationToken)
  nameWithType: PhysicalDocument.GetDocumentUrlAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<string> GetDocumentUrlAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetDocumentUrlAsync(cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  id: GetDocumentUrlAsync(System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentUrlAsync(string, bool, CancellationToken)
  nameWithType: PhysicalDocument.GetDocumentUrlAsync(string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<string> GetDocumentUrlAsync(string versionId, bool writeableUrl, CancellationToken cancellationToken = default)
    parameters:
    - id: versionId
      type: System.String
    - id: writeableUrl
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function GetDocumentUrlAsync(versionId As String, writeableUrl As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync*
  nameWithType.vb: PhysicalDocument.GetDocumentUrlAsync(String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(String, Boolean, System.Threading.CancellationToken)
  name.vb: GetDocumentUrlAsync(String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Boolean,System.Threading.CancellationToken)
  id: GetDocumentUrlAsync(SuperOffice.CRM.IDocumentInfo,System.String,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentUrlAsync(IDocumentInfo, string, bool, CancellationToken)
  nameWithType: PhysicalDocument.GetDocumentUrlAsync(IDocumentInfo, string, bool, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(SuperOffice.CRM.IDocumentInfo, string, bool, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<string> GetDocumentUrlAsync(IDocumentInfo incomingInfo, string versionId, bool writeableUrl, CancellationToken cancellationToken = default)
    parameters:
    - id: incomingInfo
      type: SuperOffice.CRM.IDocumentInfo
    - id: versionId
      type: System.String
    - id: writeableUrl
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Shared Function GetDocumentUrlAsync(incomingInfo As IDocumentInfo, versionId As String, writeableUrl As Boolean, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync*
  nameWithType.vb: PhysicalDocument.GetDocumentUrlAsync(IDocumentInfo, String, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync(SuperOffice.CRM.IDocumentInfo, String, Boolean, System.Threading.CancellationToken)
  name.vb: GetDocumentUrlAsync(IDocumentInfo, String, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync(System.Threading.CancellationToken,System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync(System.Threading.CancellationToken,System.String[])
  id: DeleteDocumentAsync(System.Threading.CancellationToken,System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: DeleteDocumentAsync(CancellationToken, params string[])
  nameWithType: PhysicalDocument.DeleteDocumentAsync(CancellationToken, params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync(System.Threading.CancellationToken, params string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<ReturnInfo> DeleteDocumentAsync(CancellationToken cancellationToken = default, params string[] allowedReturnTypes)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: allowedReturnTypes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
    content.vb: Public Function DeleteDocumentAsync(cancellationToken As CancellationToken = Nothing, ParamArray allowedReturnTypes As String()) As Task(Of ReturnInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync*
  nameWithType.vb: PhysicalDocument.DeleteDocumentAsync(CancellationToken, ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync(System.Threading.CancellationToken, ParamArray String())
  name.vb: DeleteDocumentAsync(CancellationToken, ParamArray String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync(System.String,System.Threading.CancellationToken)
  id: RenameDocumentAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: RenameDocumentAsync(string, CancellationToken)
  nameWithType: PhysicalDocument.RenameDocumentAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<string> RenameDocumentAsync(string suggestedNewName, CancellationToken cancellationToken = default)
    parameters:
    - id: suggestedNewName
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Public Function RenameDocumentAsync(suggestedNewName As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync*
  nameWithType.vb: PhysicalDocument.RenameDocumentAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync(String, System.Threading.CancellationToken)
  name.vb: RenameDocumentAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync(System.String,System.Threading.CancellationToken)
  id: GetDocumentIdFromPathAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentIdFromPathAsync(string, CancellationToken)
  nameWithType: PhysicalDocument.GetDocumentIdFromPathAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<int> GetDocumentIdFromPathAsync(string documentNameAndPath, CancellationToken cancellationToken = default)
    parameters:
    - id: documentNameAndPath
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Public Shared Function GetDocumentIdFromPathAsync(documentNameAndPath As String, cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync*
  nameWithType.vb: PhysicalDocument.GetDocumentIdFromPathAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync(String, System.Threading.CancellationToken)
  name.vb: GetDocumentIdFromPathAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities(System.Int32)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities(System.Int32)
  id: GetPluginCapabilities(System.Int32)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetPluginCapabilities(int)
  nameWithType: PhysicalDocument.GetPluginCapabilities(int)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Dictionary<string, string> GetPluginCapabilities(int pluginId)
    parameters:
    - id: pluginId
      type: System.Int32
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared Function GetPluginCapabilities(pluginId As Integer) As Dictionary(Of String, String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities*
  nameWithType.vb: PhysicalDocument.GetPluginCapabilities(Integer)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities(Integer)
  name.vb: GetPluginCapabilities(Integer)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  id: LoadDocumentTemplateStreamAsync(System.String,System.Boolean,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadDocumentTemplateStreamAsync(string, bool, string, CancellationToken)
  nameWithType: PhysicalDocument.LoadDocumentTemplateStreamAsync(string, bool, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(string, bool, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Retrieve data stream for a document template based on an identifier(Ex: the filename).

    All available document plugins are searched.  The first available template is returned.
  example: []
  syntax:
    content: public static Task<Stream> LoadDocumentTemplateStreamAsync(string templateIdentifier, bool allowPersonalTemplate, string uiCulture, CancellationToken cancellationToken = default)
    parameters:
    - id: templateIdentifier
      type: System.String
      description: 'Identifier for a template. Ex: "myTemplate.txt"'
    - id: allowPersonalTemplate
      type: System.Boolean
      description: Should we search for personal templates before central
    - id: uiCulture
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
      description: Data stream for template or null if not found
    content.vb: Public Shared Function LoadDocumentTemplateStreamAsync(templateIdentifier As String, allowPersonalTemplate As Boolean, uiCulture As String, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync*
  nameWithType.vb: PhysicalDocument.LoadDocumentTemplateStreamAsync(String, Boolean, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(String, Boolean, String, System.Threading.CancellationToken)
  name.vb: LoadDocumentTemplateStreamAsync(String, Boolean, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: LoadDocumentTemplateStreamAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadDocumentTemplateStreamAsync(int, string, CancellationToken)
  nameWithType: PhysicalDocument.LoadDocumentTemplateStreamAsync(int, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Get data stream for document template
  example: []
  syntax:
    content: public static Task<(Stream stream, string templateExtension)> LoadDocumentTemplateStreamAsync(int documentTemplateId, string uiCulture, CancellationToken cancellationToken = default)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Identity of document template
    - id: uiCulture
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.ValueTuple{System.IO.Stream,System.String}}
      description: Opens stream with data for document template
    content.vb: Public Shared Function LoadDocumentTemplateStreamAsync(documentTemplateId As Integer, uiCulture As String, cancellationToken As CancellationToken = Nothing) As Task(Of (stream As Stream, templateExtension As String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync*
  nameWithType.vb: PhysicalDocument.LoadDocumentTemplateStreamAsync(Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync(Integer, String, System.Threading.CancellationToken)
  name.vb: LoadDocumentTemplateStreamAsync(Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(System.Int32,System.String,SuperOffice.IO.TagContainer,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(System.Int32,System.String,SuperOffice.IO.TagContainer,System.Threading.CancellationToken)
  id: CreateNewFromTemplateWithTagsAsStreamAsync(System.Int32,System.String,SuperOffice.IO.TagContainer,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateNewFromTemplateWithTagsAsStreamAsync(int, string, TagContainer, CancellationToken)
  nameWithType: PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(int, string, TagContainer, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(int, string, SuperOffice.IO.TagContainer, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<Stream> CreateNewFromTemplateWithTagsAsStreamAsync(int templateId, string uiCulture, TagContainer templateTags, CancellationToken cancellationToken = default)
    parameters:
    - id: templateId
      type: System.Int32
    - id: uiCulture
      type: System.String
    - id: templateTags
      type: SuperOffice.IO.TagContainer
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.IO.Stream}
    content.vb: Public Shared Function CreateNewFromTemplateWithTagsAsStreamAsync(templateId As Integer, uiCulture As String, templateTags As TagContainer, cancellationToken As CancellationToken = Nothing) As Task(Of Stream)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync*
  nameWithType.vb: PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(Integer, String, TagContainer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync(Integer, String, SuperOffice.IO.TagContainer, System.Threading.CancellationToken)
  name.vb: CreateNewFromTemplateWithTagsAsStreamAsync(Integer, String, TagContainer, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync(System.Int32,System.IO.Stream,System.String,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync(System.Int32,System.IO.Stream,System.String,System.Int32,System.String,System.Threading.CancellationToken)
  id: SaveDocumentTemplateStreamAsync(System.Int32,System.IO.Stream,System.String,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: SaveDocumentTemplateStreamAsync(int, Stream, string, int, string, CancellationToken)
  nameWithType: PhysicalDocument.SaveDocumentTemplateStreamAsync(int, Stream, string, int, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync(int, System.IO.Stream, string, int, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Create or update the document template contents. Usually used when uploading a file to a new document template.
  example: []
  syntax:
    content: public static Task<TemplateInfo> SaveDocumentTemplateStreamAsync(int documentTemplateId, Stream content, string uiCulture, int pluginId, string providedFilename = null, CancellationToken cancellationToken = default)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Document template record id the database.
    - id: content
      type: System.IO.Stream
      description: Stream containing file content
    - id: uiCulture
      type: System.String
      description: Language variation on the template. May be ignored by the plugin, or used to keep language specific versions of the template.
    - id: pluginId
      type: System.Int32
      description: If negative, use the plugin specified in the document template's load-from-plugin-id field
    - id: providedFilename
      type: System.String
      description: If provided and non-ewmpty, will be used to override extref value passed along to document plugin. Required to support replacing file-formats for existing templates (among other things)
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Documents.TemplateInfo}
      description: Template information with ExtRef/Filename and MimeType filled in. These values are saved in the DocTmpl record.
    content.vb: Public Shared Function SaveDocumentTemplateStreamAsync(documentTemplateId As Integer, content As Stream, uiCulture As String, pluginId As Integer, providedFilename As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of TemplateInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync*
  nameWithType.vb: PhysicalDocument.SaveDocumentTemplateStreamAsync(Integer, Stream, String, Integer, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync(Integer, System.IO.Stream, String, Integer, String, System.Threading.CancellationToken)
  name.vb: SaveDocumentTemplateStreamAsync(Integer, Stream, String, Integer, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync(System.Int32,System.Threading.CancellationToken)
  id: GetTemplateExtensionAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetTemplateExtensionAsync(int, CancellationToken)
  nameWithType: PhysicalDocument.GetTemplateExtensionAsync(int, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync(int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Get the "extension" for the template, i.e., what the file extension would have been - to

    help identify the stream content format.
  remarks: >-
    Template documents are generally created in text editors and stored as files of some kind. The

    file extension indicates the kind of document - doc, docx, xls, txt, and so on. While the template

    may be stored inside the document repository as any kind of data byte collection, a concept

    akin to the file extension is still needed to help identify the document format, ahead of actually

    reading the template content.
  example: []
  syntax:
    content: public static Task<string> GetTemplateExtensionAsync(int documentTemplateId, CancellationToken cancellationToken = default)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: Document template primary key id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: String equivalent to a file extension, for instance ".docx"
    content.vb: Public Shared Function GetTemplateExtensionAsync(documentTemplateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync*
  nameWithType.vb: PhysicalDocument.GetTemplateExtensionAsync(Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync(Integer, System.Threading.CancellationToken)
  name.vb: GetTemplateExtensionAsync(Integer, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates(System.Int32)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates(System.Int32)
  id: GetDocumentTypesForDocumentTemplates(System.Int32)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentTypesForDocumentTemplates(int)
  nameWithType: PhysicalDocument.GetDocumentTypesForDocumentTemplates(int)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Get a list of supported document template types.
  example: []
  syntax:
    content: public static Dictionary<int, string> GetDocumentTypesForDocumentTemplates(int pluginId)
    parameters:
    - id: pluginId
      type: System.Int32
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,System.String}
      description: An dictionary of key=display-name for supported document types for template. Empty dictionary if no document types supported.
    content.vb: Public Shared Function GetDocumentTypesForDocumentTemplates(pluginId As Integer) As Dictionary(Of Integer, String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates*
  nameWithType.vb: PhysicalDocument.GetDocumentTypesForDocumentTemplates(Integer)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates(Integer)
  name.vb: GetDocumentTypesForDocumentTemplates(Integer)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  id: CreateDefaultDocumentTemplateAsync(System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentTemplateAsync(int, int, CancellationToken)
  nameWithType: PhysicalDocument.CreateDefaultDocumentTemplateAsync(int, int, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync(int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Create a blank default document based on the given documentTypeId. Called when creating a new template.
  example: []
  syntax:
    content: public static Task<string> CreateDefaultDocumentTemplateAsync(int documentTypeKey, int documentTemplateId, CancellationToken cancellationToken = default)
    parameters:
    - id: documentTypeKey
      type: System.Int32
      description: Id for a document type. Ignored if document plugin does not use document types.
    - id: documentTemplateId
      type: System.Int32
      description: Document template id
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Extref/Filename for new template. This value is written to the template's Filename property in the database.
    content.vb: Public Shared Function CreateDefaultDocumentTemplateAsync(documentTypeKey As Integer, documentTemplateId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync*
  nameWithType.vb: PhysicalDocument.CreateDefaultDocumentTemplateAsync(Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync(Integer, Integer, System.Threading.CancellationToken)
  name.vb: CreateDefaultDocumentTemplateAsync(Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync(System.Int32,System.Threading.CancellationToken,System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync(System.Int32,System.Threading.CancellationToken,System.String[])
  id: GetDocumentTemplatePropertiesAsync(System.Int32,System.Threading.CancellationToken,System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentTemplatePropertiesAsync(int, CancellationToken, params string[])
  nameWithType: PhysicalDocument.GetDocumentTemplatePropertiesAsync(int, CancellationToken, params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync(int, System.Threading.CancellationToken, params string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<Dictionary<string, string>> GetDocumentTemplatePropertiesAsync(int documentTemplateId, CancellationToken cancellationToken = default, params string[] requestedProperties)
    parameters:
    - id: documentTemplateId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: requestedProperties
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.String}}
    content.vb: Public Shared Function GetDocumentTemplatePropertiesAsync(documentTemplateId As Integer, cancellationToken As CancellationToken = Nothing, ParamArray requestedProperties As String()) As Task(Of Dictionary(Of String, String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync*
  nameWithType.vb: PhysicalDocument.GetDocumentTemplatePropertiesAsync(Integer, CancellationToken, ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync(Integer, System.Threading.CancellationToken, ParamArray String())
  name.vb: GetDocumentTemplatePropertiesAsync(Integer, CancellationToken, ParamArray String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,System.Threading.CancellationToken)
  id: GetDocumentTemplateUrlAsync(System.Int32,System.Boolean,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentTemplateUrlAsync(int, bool, string, CancellationToken)
  nameWithType: PhysicalDocument.GetDocumentTemplateUrlAsync(int, bool, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync(int, bool, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Get a WebDAV-compliant URL referring to the given document template
  remarks: >-
    Document plugins may support document access via WebDAV. This call is used to retrieve a WebDAV url that

    will give the specified access to the document. This URL will be passed to the ultimate client

    (most probably a text editor application), and control will not return to NetServer.

    <p></p>

    The string returned here should be a fully resolved URL that can be given directly to the editor application.
  example: []
  syntax:
    content: public static Task<string> GetDocumentTemplateUrlAsync(int documentTemplateId, bool writableUrl, string languageCode, CancellationToken cancellationToken = default)
    parameters:
    - id: documentTemplateId
      type: System.Int32
      description: The id of the document template
    - id: writableUrl
      type: System.Boolean
    - id: languageCode
      type: System.String
      description: Language variation on the template. May be ignored by the plugin, or used to keep language specific versions of the template.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: >-
        URL that gives access to the document. If the document plugin
                    does not support URL access, then a blank string should be returned.
    content.vb: Public Shared Function GetDocumentTemplateUrlAsync(documentTemplateId As Integer, writableUrl As Boolean, languageCode As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync*
  nameWithType.vb: PhysicalDocument.GetDocumentTemplateUrlAsync(Integer, Boolean, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync(Integer, Boolean, String, System.Threading.CancellationToken)
  name.vb: GetDocumentTemplateUrlAsync(Integer, Boolean, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync(System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync(System.String[],System.Threading.CancellationToken)
  id: GetDocumentPropertiesAsync(System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentPropertiesAsync(string[], CancellationToken)
  nameWithType: PhysicalDocument.GetDocumentPropertiesAsync(string[], CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync(string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Get the values of certain properties, for a given document
  remarks: >-
    Each document can have a number of properties associated with it. A set of standard properties

    is defined in the <xref href="SuperOffice.CRM.Documents.Constants.Properties" data-throw-if-not-resolved="false"></xref> class. Ideally, retrieving properties should

    be a lightweight operation.

    <p></p>

    Note that 'properties' are a one-way mechanism where the document plugin provides information about

    the document or certain aspects of it. This is not the same as document-specific

    metadata, which is handled by the <xref href="SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData" data-throw-if-not-resolved="false"></xref> and <xref href="SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>

    methods.
  example: []
  syntax:
    content: public Task<Dictionary<string, string>> GetDocumentPropertiesAsync(string[] requestedProperties, CancellationToken cancellationToken = default)
    parameters:
    - id: requestedProperties
      type: System.String[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.String}}
      description: >-
        Dictionary of key=value pairs, where the key is one of the requested property strings, and the value
                    is the value of that property for the given document.
    content.vb: Public Function GetDocumentPropertiesAsync(requestedProperties As String(), cancellationToken As CancellationToken = Nothing) As Task(Of Dictionary(Of String, String))
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync*
  nameWithType.vb: PhysicalDocument.GetDocumentPropertiesAsync(String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync(String(), System.Threading.CancellationToken)
  name.vb: GetDocumentPropertiesAsync(String(), CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
  id: GetDocumentCommands(System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDocumentCommands(params string[])
  nameWithType: PhysicalDocument.GetDocumentCommands(params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(params string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Get a list of custom commands, applicable to a specific document. Note that commands related to

    standard locking and versioning operations have their own API calls and are not 'custom commands' in this sense.
  remarks: >-
    This API is called before a menu, task button or other GUI item that gives access to document-specific commands is shown.

    It is used to populate the GUI with available commands for a particular document, the results are not cached by the GUI.

    <p></p>

    Depending on the return type indicated in the command, the command might be filtered by GUI. More information can

    be found in the <xref href="SuperOffice.CRM.Documents.CommandInfo" data-throw-if-not-resolved="false"></xref> topic.
  example: []
  syntax:
    content: public CommandInfo[] GetDocumentCommands(params string[] allowedReturnTypes)
    parameters:
    - id: allowedReturnTypes
      type: System.String[]
      description: >-
        Array of names of allowed return types; if this array is
                    empty then no limits are placed on return type.
    return:
      type: SuperOffice.CRM.Documents.CommandInfo[]
      description: Array of command descriptions. If there are no custom commands available, an empty array should be returned.
    content.vb: Public Function GetDocumentCommands(ParamArray allowedReturnTypes As String()) As CommandInfo()
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands*
  nameWithType.vb: PhysicalDocument.GetDocumentCommands(ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(ParamArray String())
  name.vb: GetDocumentCommands(ParamArray String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand(System.String,System.String[],System.String,System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand(System.String,System.String[],System.String,System.String[])
  id: ExecuteDocumentCommand(System.String,System.String[],System.String,System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: ExecuteDocumentCommand(string, string[], string, params string[])
  nameWithType: PhysicalDocument.ExecuteDocumentCommand(string, string[], string, params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand(string, string[], string, params string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Execute a custom command on a specified document and version
  remarks: >-
    This command is called when the user chooses an action item from a dropdown/context menu.

    It is also reflected in the DocumentAgent service interface, so that custom GUI’s and external

    code can directly execute document plugin commands; this is useful if a plugin also has some

    corresponding custom GUI that needs to execute commands depending on user interaction.

    <p></p>

    The parameter <code class="paramref">allowedReturnTypes</code> can be used by clients to hint to the plugin

    what kind of return value processing is available. For instance, a mobile client might

    only offer None and Message, and this information can be used by the document plugin to adapt

    the processing of a command, if it wants to (for instance, use default values instead of

    triggering some more advanced workflow).

    <p></p>

    The command is obtained from the <xref href="SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref> method.
  example: []
  syntax:
    content: public ReturnInfo ExecuteDocumentCommand(string versionId, string[] allowedReturnTypes, string command, params string[] additionalData)
    parameters:
    - id: versionId
      type: System.String
      description: Version identifier, blank implies 'latest' version
    - id: allowedReturnTypes
      type: System.String[]
      description: >-
        Array of names of allowed return types; if this array is
                    empty then no limits are placed on return type.
    - id: command
      type: System.String
      description: >-
        Command name, taken from an earlier call to <xref href="SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String%5b%5d)" data-throw-if-not-resolved="false"></xref>
                    - or any other command name that is understood by the provider. 'Private' commands that
                    are not declared in GetDocumentCommands but are known to the authors of custom GUI code
                    or OK.
    - id: additionalData
      type: System.String[]
      description: >-
        Array of strings containing whatever additional data the command
                    may need. This parameter is intended for authors of more complex custom GUI's and works as
                    a tunnel between the ultimate client and the document plugin. Standard GUI made by SuperOffice,
                    such as a context menu connected to a document item in an archive, will not populate this
                    member.<br />It is strongly suggested that the convention of using name=value for each string
                    array element be followed here.
    return:
      type: SuperOffice.CRM.ReturnInfo
      description: Return value object, specifying failure or success plus any optional, additional processing to be triggered
    content.vb: Public Function ExecuteDocumentCommand(versionId As String, allowedReturnTypes As String(), command As String, ParamArray additionalData As String()) As ReturnInfo
  overload: SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand*
  nameWithType.vb: PhysicalDocument.ExecuteDocumentCommand(String, String(), String, ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand(String, String(), String, ParamArray String())
  name.vb: ExecuteDocumentCommand(String, String(), String, ParamArray String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
  id: LoadMetaData
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadMetaData()
  nameWithType: PhysicalDocument.LoadMetaData()
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Retrieve metadata owned by the plugin/repository, related to one document (excluding version-dependent metadata)
  remarks: >-
    A document plugin may consume and provide an arbitrary number of metadata fields. These are placed

    in a string, string dictionary, representing name/value pairs. This call should <b>not</b>

    retrieve metadata related to any particular version, only data related to the document as a whole.

    <p></p>

    The NetServer service call DocumentAgent.GetDocumentEntity will (among other things) result in a call

    to this API to populate the ExtraFields property of the document entity carrier. Note, however,

    that the carrier handed over to the client may contain other fields in addition to those

    supplied by the document plugin, since the extrafields mechanism is generic and

    there may be other metadata providers along the line.

    <p></p>

    Attribute names should be prefixed with the name of the document plugin, to maintain global uniqueness.

    <p></p>

    It is <b>strongly suggested</b> that non-string data be formatted according to the rules followed by the

    <xref href="SuperOffice.CRM.Globalization.CultureDataFormatter" data-throw-if-not-resolved="false"></xref> class, to avoid problems

    when parsing dates and floating-point types between different cultures and platforms.
  example: []
  syntax:
    content: public string[] LoadMetaData()
    return:
      type: System.String[]
      description: Array of name=value strings, each representing one key and one value.
    content.vb: Public Function LoadMetaData() As String()
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo(System.String)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo(System.String)
  id: LoadVersionInfo(System.String)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: LoadVersionInfo(string)
  nameWithType: PhysicalDocument.LoadVersionInfo(string)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Retrieve metadata owned by the plugin/repository, related to one particular

    version of one document
  remarks: >-
    A document plugin may consume and provide an arbitrary number of metadata fields. These are placed

    in a string, string dictionary, representing name/value pairs. This call should only retrieve

    metadata related to a version.

    <p></p>

    The NetServer service call DocumentAgent.GetDocumentEntity will (among other things) result in a call

    to this API to populate the VersionInfo property of the document entity carrier.

    <p></p>

    Attribute names should be prefixed with the name of the document plugin, to maintain global uniqueness.

    <p></p>

    It is <b>strongly suggested</b> that non-string data be formatted according to the rules followed by the

    <xref href="SuperOffice.CRM.Globalization.CultureDataFormatter" data-throw-if-not-resolved="false"></xref> class, to avoid problems

    when parsing dates and floating-point types between different cultures and platforms.

    <p></p>

    To efficiently retrieve information about <b>all</b> versions, use the

    <xref href="SuperOffice.CRM.Documents.IDocumentPlugin2.GetVersionList(SuperOffice.CRM.IDocumentInfo)" data-throw-if-not-resolved="false"></xref> method, instead of iterating

    over this method.
  example: []
  syntax:
    content: public VersionInfo LoadVersionInfo(string versionId)
    parameters:
    - id: versionId
      type: System.String
      description: Version identifier, blank implies 'latest' version
    return:
      type: SuperOffice.CRM.Documents.VersionInfo
      description: Fully populated version info structure
    content.vb: Public Function LoadVersionInfo(versionId As String) As VersionInfo
  overload: SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo*
  nameWithType.vb: PhysicalDocument.LoadVersionInfo(String)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo(String)
  name.vb: LoadVersionInfo(String)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
  id: SaveMetaData(System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: SaveMetaData(string[])
  nameWithType: PhysicalDocument.SaveMetaData(string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Store/update plugin-dependent document metadata in the repository
  remarks: >-
    This call is made when the document metadata should be stored, and is the complement of the

    <xref href="SuperOffice.CRM.Documents.IDocumentPlugin2.LoadMetaData(SuperOffice.CRM.IDocumentInfo)" data-throw-if-not-resolved="false"></xref> method.

    The document plugin should extract whatever elements it

    recognizes from the pluginData name/value dictionary. Failure to recognize an element should not cause an exception,

    as there may be other plugins along the line (not document plugins, but service-level field providers) that own the data.

    Likewise, absence of a value should be taken to imply “no change” to that value - not "delete".

    <p></p>

    It is <b>strongly suggested</b> that non-string data be formatted according to the rules followed by the

    <xref href="SuperOffice.CRM.Globalization.CultureDataFormatter" data-throw-if-not-resolved="false"></xref> class, to avoid problems

    when parsing dates and floating-point types between different cultures and platforms.
  example: []
  syntax:
    content: public void SaveMetaData(string[] pluginData)
    parameters:
    - id: pluginData
      type: System.String[]
      description: Name=value array containing metadata
    content.vb: Public Sub SaveMetaData(pluginData As String())
  overload: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData*
  nameWithType.vb: PhysicalDocument.SaveMetaData(String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(String())
  name.vb: SaveMetaData(String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync(System.Threading.CancellationToken)
  id: ExistsAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: ExistsAsync(CancellationToken)
  nameWithType: PhysicalDocument.ExistsAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<bool> ExistsAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function ExistsAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync(System.String,System.Threading.CancellationToken)
  id: GetLengthAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetLengthAsync(string, CancellationToken)
  nameWithType: PhysicalDocument.GetLengthAsync(string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync(string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<long> GetLengthAsync(string versionId = null, CancellationToken cancellationToken = default)
    parameters:
    - id: versionId
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int64}
    content.vb: Public Function GetLengthAsync(versionId As String = Nothing, cancellationToken As CancellationToken = Nothing) As Task(Of Long)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync*
  nameWithType.vb: PhysicalDocument.GetLengthAsync(String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync(String, System.Threading.CancellationToken)
  name.vb: GetLengthAsync(String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync(System.Threading.CancellationToken)
  id: GetCheckoutStateAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetCheckoutStateAsync(CancellationToken)
  nameWithType: PhysicalDocument.GetCheckoutStateAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<CheckoutInfo> GetCheckoutStateAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Documents.CheckoutInfo}
    content.vb: Public Function GetCheckoutStateAsync(cancellationToken As CancellationToken = Nothing) As Task(Of CheckoutInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  id: CheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CheckoutDocumentAsync(CancellationToken, params string[])
  nameWithType: PhysicalDocument.CheckoutDocumentAsync(CancellationToken, params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync(System.Threading.CancellationToken, params string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<ReturnInfo> CheckoutDocumentAsync(CancellationToken cancellationToken = default, params string[] allowedReturnTypes)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: allowedReturnTypes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
    content.vb: Public Function CheckoutDocumentAsync(cancellationToken As CancellationToken = Nothing, ParamArray allowedReturnTypes As String()) As Task(Of ReturnInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync*
  nameWithType.vb: PhysicalDocument.CheckoutDocumentAsync(CancellationToken, ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync(System.Threading.CancellationToken, ParamArray String())
  name.vb: CheckoutDocumentAsync(CancellationToken, ParamArray String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync(System.String[],System.String,System.String[],System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync(System.String[],System.String,System.String[],System.Threading.CancellationToken)
  id: CheckinDocumentAsync(System.String[],System.String,System.String[],System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CheckinDocumentAsync(string[], string, string[], CancellationToken)
  nameWithType: PhysicalDocument.CheckinDocumentAsync(string[], string, string[], CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync(string[], string, string[], System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<ReturnInfo> CheckinDocumentAsync(string[] allowedReturnTypes, string versionDescription, string[] versionExtraFields, CancellationToken cancellationToken = default)
    parameters:
    - id: allowedReturnTypes
      type: System.String[]
    - id: versionDescription
      type: System.String
    - id: versionExtraFields
      type: System.String[]
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
    content.vb: Public Function CheckinDocumentAsync(allowedReturnTypes As String(), versionDescription As String, versionExtraFields As String(), cancellationToken As CancellationToken = Nothing) As Task(Of ReturnInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync*
  nameWithType.vb: PhysicalDocument.CheckinDocumentAsync(String(), String, String(), CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync(String(), String, String(), System.Threading.CancellationToken)
  name.vb: CheckinDocumentAsync(String(), String, String(), CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  id: UndoCheckoutDocumentAsync(System.Threading.CancellationToken,System.String[])
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: UndoCheckoutDocumentAsync(CancellationToken, params string[])
  nameWithType: PhysicalDocument.UndoCheckoutDocumentAsync(CancellationToken, params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync(System.Threading.CancellationToken, params string[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public Task<ReturnInfo> UndoCheckoutDocumentAsync(CancellationToken cancellationToken = default, params string[] allowedReturnTypes)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: allowedReturnTypes
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
    content.vb: Public Function UndoCheckoutDocumentAsync(cancellationToken As CancellationToken = Nothing, ParamArray allowedReturnTypes As String()) As Task(Of ReturnInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync*
  nameWithType.vb: PhysicalDocument.UndoCheckoutDocumentAsync(CancellationToken, ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync(System.Threading.CancellationToken, ParamArray String())
  name.vb: UndoCheckoutDocumentAsync(CancellationToken, ParamArray String())
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList
  id: GetVersionList
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetVersionList()
  nameWithType: PhysicalDocument.GetVersionList()
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public VersionInfo[] GetVersionList()
    return:
      type: SuperOffice.CRM.Documents.VersionInfo[]
    content.vb: Public Function GetVersionList() As VersionInfo()
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin(System.Int32)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin(System.Int32)
  id: GetPlugin(System.Int32)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetPlugin(int)
  nameWithType: PhysicalDocument.GetPlugin(int)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Return the plugin specified by its plugin-id
  example: []
  syntax:
    content: public static IDocumentPlugin2 GetPlugin(int pluginId)
    parameters:
    - id: pluginId
      type: System.Int32
    return:
      type: SuperOffice.CRM.Documents.IDocumentPlugin2
    content.vb: Public Shared Function GetPlugin(pluginId As Integer) As IDocumentPlugin2
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin*
  nameWithType.vb: PhysicalDocument.GetPlugin(Integer)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin(Integer)
  name.vb: GetPlugin(Integer)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync(System.Threading.CancellationToken)
  id: BeginWriteAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: BeginWriteAsync(CancellationToken)
  nameWithType: PhysicalDocument.BeginWriteAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Start writing the document file.
  remarks: >-
    Use the <xref href="SuperOffice.IO.IStreamProvider.Write(System.Int64%2cSystem.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> method to write data to the file.  

    As data might be written to a temporary location, the EndWrite 

    will archive the document to the document archive.
  example: []
  syntax:
    content: public Task BeginWriteAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function BeginWriteAsync(cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync*
  implements:
  - SuperOffice.IO.IStreamProvider.BeginWriteAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: WriteAsync(long, byte[], int, int, CancellationToken)
  nameWithType: PhysicalDocument.WriteAsync(long, byte[], int, int, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync(long, byte[], int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Write a block of data
  example: []
  syntax:
    content: public Task WriteAsync(long filePosition, byte[] buffer, int bufferStartPosition, int length, CancellationToken cancellationToken)
    parameters:
    - id: filePosition
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: bufferStartPosition
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: ''
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Function WriteAsync(filePosition As Long, buffer As Byte(), bufferStartPosition As Integer, length As Integer, cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: ''
  implements:
  - SuperOffice.IO.IStreamProvider.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: PhysicalDocument.WriteAsync(Long, Byte(), Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync(Long, Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: WriteAsync(Long, Byte(), Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  id: Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: Write(long, byte[], int, int)
  nameWithType: PhysicalDocument.Write(long, byte[], int, int)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.Write(long, byte[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Sync version of Write, eternally required by the double sync/async contracts of the Stream class
  example: []
  syntax:
    content: public void Write(long filePosition, byte[] buffer, int bufferStartPosition, int lenght)
    parameters:
    - id: filePosition
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: bufferStartPosition
      type: System.Int32
      description: ''
    - id: lenght
      type: System.Int32
      description: ''
    content.vb: Public Sub Write(filePosition As Long, buffer As Byte(), bufferStartPosition As Integer, lenght As Integer)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.Write*
  implements:
  - SuperOffice.IO.IStreamProvider.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: PhysicalDocument.Write(Long, Byte(), Integer, Integer)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.Write(Long, Byte(), Integer, Integer)
  name.vb: Write(Long, Byte(), Integer, Integer)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync(System.Threading.CancellationToken)
  id: EndWriteAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: EndWriteAsync(CancellationToken)
  nameWithType: PhysicalDocument.EndWriteAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Specify that the writing of the document is completed and that 

    the document can be archived in the document archive.
  example: []
  syntax:
    content: public Task EndWriteAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EndWriteAsync(cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync*
  implements:
  - SuperOffice.IO.IStreamProvider.EndWriteAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync(System.Threading.CancellationToken)
  id: BeginReadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: BeginReadAsync(CancellationToken)
  nameWithType: PhysicalDocument.BeginReadAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Start reading the document.
  remarks: >-
    Read bytes from the document using the <xref href="SuperOffice.IO.IStreamProvider.Read(System.Int64%2cSystem.Byte%5b%5d%2cSystem.Int32%2cSystem.Int32)" data-throw-if-not-resolved="false"></xref> method.  

    Call the EndRead method to specify that you are 

    finished reading the document.
  example: []
  syntax:
    content: public Task BeginReadAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function BeginReadAsync(cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync*
  implements:
  - SuperOffice.IO.IStreamProvider.BeginReadAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  id: ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: ReadAsync(long, byte[], int, int, CancellationToken)
  nameWithType: PhysicalDocument.ReadAsync(long, byte[], int, int, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync(long, byte[], int, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Read data from the document
  remarks: >-
    BeginRead must be called before this method.  It is not 
                	requred that BeginRead is called within the scope of 
                	this method.  It is required that it is called on bahalf of the same 
                	user and on the same document and that either this method or 
                	BeginRead is called during the last time period specified 
                	in the configuration.  Default time period is 24 hours.
  example: []
  syntax:
    content: public Task<int> ReadAsync(long filePosition, byte[] buffer, int bufferStartPosition, int length, CancellationToken cancellationToken)
    parameters:
    - id: filePosition
      type: System.Int64
      description: Position in the file to start reading from.
    - id: buffer
      type: System.Byte[]
      description: Buffer to put the data read.
    - id: bufferStartPosition
      type: System.Int32
      description: Position in buffer to start filling it.
    - id: length
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: >-
        Number of bytes actually read from the file.  This should only be 

        less then the file when the end of file is reached.
    content.vb: Public Function ReadAsync(filePosition As Long, buffer As Byte(), bufferStartPosition As Integer, length As Integer, cancellationToken As CancellationToken) As Task(Of Integer)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync*
  implements:
  - SuperOffice.IO.IStreamProvider.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  nameWithType.vb: PhysicalDocument.ReadAsync(Long, Byte(), Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync(Long, Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: ReadAsync(Long, Byte(), Integer, Integer, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync(System.Threading.CancellationToken)
  id: EndReadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: EndReadAsync(CancellationToken)
  nameWithType: PhysicalDocument.EndReadAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Express that you are finished reading the file.  If the file is read from 

    a temporary location, it will be removed from it.
  example: []
  syntax:
    content: public Task EndReadAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function EndReadAsync(cancellationToken As CancellationToken) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync*
  implements:
  - SuperOffice.IO.IStreamProvider.EndReadAsync(System.Threading.CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  id: CreateDefaultDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateDefaultDocumentTemplateLanguageAsync(IDocumentTemplateInfo, string, CancellationToken)
  nameWithType: PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(IDocumentTemplateInfo, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Create a new template language alternative based on the existing template
  example: []
  syntax:
    content: public static Task CreateDefaultDocumentTemplateLanguageAsync(IDocumentTemplateInfo docInfo, string languageCode, CancellationToken cancellationToken = default)
    parameters:
    - id: docInfo
      type: SuperOffice.CRM.IDocumentTemplateInfo
      description: ''
    - id: languageCode
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
      description: ''
    content.vb: Public Shared Function CreateDefaultDocumentTemplateLanguageAsync(docInfo As IDocumentTemplateInfo, languageCode As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync*
  nameWithType.vb: PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(IDocumentTemplateInfo, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo, String, System.Threading.CancellationToken)
  name.vb: CreateDefaultDocumentTemplateLanguageAsync(IDocumentTemplateInfo, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  id: DeleteDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: DeleteDocumentTemplateLanguageAsync(IDocumentTemplateInfo, string, CancellationToken)
  nameWithType: PhysicalDocument.DeleteDocumentTemplateLanguageAsync(IDocumentTemplateInfo, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Deletes the document template language.
  example: []
  syntax:
    content: public static Task DeleteDocumentTemplateLanguageAsync(IDocumentTemplateInfo templateInfo, string languageCode, CancellationToken cancellationToken = default)
    parameters:
    - id: templateInfo
      type: SuperOffice.CRM.IDocumentTemplateInfo
      description: Information about the template. The fields id and external reference must be filled out
    - id: languageCode
      type: System.String
      description: The language code ('en-US, 'nb-NO', etc). Field cannot be empty.
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function DeleteDocumentTemplateLanguageAsync(templateInfo As IDocumentTemplateInfo, languageCode As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync*
  nameWithType.vb: PhysicalDocument.DeleteDocumentTemplateLanguageAsync(IDocumentTemplateInfo, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync(SuperOffice.CRM.IDocumentTemplateInfo, String, System.Threading.CancellationToken)
  name.vb: DeleteDocumentTemplateLanguageAsync(IDocumentTemplateInfo, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  id: SetDocumentTemplateFromDocumentTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,SuperOffice.CRM.IDocumentTemplateInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: SetDocumentTemplateFromDocumentTemplateAsync(IDocumentTemplateInfo, IDocumentTemplateInfo, CancellationToken)
  nameWithType: PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync(IDocumentTemplateInfo, IDocumentTemplateInfo, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo, SuperOffice.CRM.IDocumentTemplateInfo, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Task<TemplateInfo> SetDocumentTemplateFromDocumentTemplateAsync(IDocumentTemplateInfo sourceTemplateInfo, IDocumentTemplateInfo destTemplateInfo, CancellationToken cancellationToken = default)
    parameters:
    - id: sourceTemplateInfo
      type: SuperOffice.CRM.IDocumentTemplateInfo
    - id: destTemplateInfo
      type: SuperOffice.CRM.IDocumentTemplateInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Documents.TemplateInfo}
    content.vb: Public Shared Function SetDocumentTemplateFromDocumentTemplateAsync(sourceTemplateInfo As IDocumentTemplateInfo, destTemplateInfo As IDocumentTemplateInfo, cancellationToken As CancellationToken = Nothing) As Task(Of TemplateInfo)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  id: CreateFilenameForNewTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: CreateFilenameForNewTemplateAsync(IDocumentTemplateInfo, string, CancellationToken)
  nameWithType: PhysicalDocument.CreateFilenameForNewTemplateAsync(IDocumentTemplateInfo, string, CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo, string, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: >-
    Calculates a new name for a template based on the properties from an existing template.

    Should only be used when copying existing templates.
  example: []
  syntax:
    content: public static Task<string> CreateFilenameForNewTemplateAsync(IDocumentTemplateInfo sourceTemplateInfo, string newTemplateName, CancellationToken cancellationToken = default)
    parameters:
    - id: sourceTemplateInfo
      type: SuperOffice.CRM.IDocumentTemplateInfo
      description: ''
    - id: newTemplateName
      type: System.String
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: newer null
    content.vb: Public Shared Function CreateFilenameForNewTemplateAsync(sourceTemplateInfo As IDocumentTemplateInfo, newTemplateName As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync*
  nameWithType.vb: PhysicalDocument.CreateFilenameForNewTemplateAsync(IDocumentTemplateInfo, String, CancellationToken)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync(SuperOffice.CRM.IDocumentTemplateInfo, String, System.Threading.CancellationToken)
  name.vb: CreateFilenameForNewTemplateAsync(IDocumentTemplateInfo, String, CancellationToken)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync(System.Threading.CancellationToken)
  id: GetDefaultDocumentPluginIdAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetDefaultDocumentPluginIdAsync(CancellationToken)
  nameWithType: PhysicalDocument.GetDefaultDocumentPluginIdAsync(CancellationToken)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Get the default document plugin id
  example: []
  syntax:
    content: public static Task<int> GetDefaultDocumentPluginIdAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: ''
    content.vb: Public Shared Function GetDefaultDocumentPluginIdAsync(cancellationToken As CancellationToken = Nothing) As Task(Of Integer)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename(System.String,System.String)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename(System.String,System.String)
  id: AssociateRename(System.String,System.String)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: AssociateRename(string, string)
  nameWithType: PhysicalDocument.AssociateRename(string, string)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename(string, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Invokes document plugins that implements the <xref href="SuperOffice.Plugins.CRM.Documents.IAssociateRename" data-throw-if-not-resolved="false"></xref> interface.
  example: []
  syntax:
    content: public static void AssociateRename(string oldName, string newName)
    parameters:
    - id: oldName
      type: System.String
      description: ''
    - id: newName
      type: System.String
      description: ''
    content.vb: Public Shared Sub AssociateRename(oldName As String, newName As String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename*
  nameWithType.vb: PhysicalDocument.AssociateRename(String, String)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename(String, String)
  name.vb: AssociateRename(String, String)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid(System.String)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid(System.String)
  id: IsNameValid(System.String)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: IsNameValid(string)
  nameWithType: PhysicalDocument.IsNameValid(string)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static bool IsNameValid(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsNameValid(name As String) As Boolean
  overload: SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid*
  nameWithType.vb: PhysicalDocument.IsNameValid(String)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid(String)
  name.vb: IsNameValid(String)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins
  id: GetAllDocPlugins
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: GetAllDocPlugins()
  nameWithType: PhysicalDocument.GetAllDocPlugins()
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  syntax:
    content: public static Dictionary<int, string> GetAllDocPlugins()
    return:
      type: System.Collections.Generic.Dictionary{System.Int32,System.String}
    content.vb: Public Shared Function GetAllDocPlugins() As Dictionary(Of Integer, String)
  overload: SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  id: Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: Read(long, byte[], int, int)
  nameWithType: PhysicalDocument.Read(long, byte[], int, int)
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.Read(long, byte[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Sync version of Read, eternally required by the double sync/async contracts of the Stream class
  example: []
  syntax:
    content: public int Read(long filePosition, byte[] buffer, int bufferStartPosition, int lenght)
    parameters:
    - id: filePosition
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: bufferStartPosition
      type: System.Int32
      description: ''
    - id: lenght
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function Read(filePosition As Long, buffer As Byte(), bufferStartPosition As Integer, lenght As Integer) As Integer
  overload: SuperOffice.CRM.Documents.PhysicalDocument.Read*
  implements:
  - SuperOffice.IO.IStreamProvider.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: PhysicalDocument.Read(Long, Byte(), Integer, Integer)
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.Read(Long, Byte(), Integer, Integer)
  name.vb: Read(Long, Byte(), Integer, Integer)
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo
  commentId: P:SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo
  id: DocumentInfo
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: DocumentInfo
  nameWithType: PhysicalDocument.DocumentInfo
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Document Info object - created by this class from documentId if needed
  example: []
  syntax:
    content: public IDocumentInfo DocumentInfo { get; }
    parameters: []
    return:
      type: SuperOffice.CRM.IDocumentInfo
    content.vb: Public ReadOnly Property DocumentInfo As IDocumentInfo
  overload: SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DocumentId
  commentId: P:SuperOffice.CRM.Documents.PhysicalDocument.DocumentId
  id: DocumentId
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: DocumentId
  nameWithType: PhysicalDocument.DocumentId
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DocumentId
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: ID of document row this physical document is related to
  example: []
  syntax:
    content: public int DocumentId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DocumentId As Integer
  overload: SuperOffice.CRM.Documents.PhysicalDocument.DocumentId*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider
  commentId: P:SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider
  id: ArchiveProvider
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: ArchiveProvider
  nameWithType: PhysicalDocument.ArchiveProvider
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: The numeric plugin ID of the plugin responsible for this physical document
  example: []
  syntax:
    content: public int ArchiveProvider { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ArchiveProvider As Integer
  overload: SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider*
- uid: SuperOffice.CRM.Documents.PhysicalDocument.Length
  commentId: P:SuperOffice.CRM.Documents.PhysicalDocument.Length
  id: Length
  parent: SuperOffice.CRM.Documents.PhysicalDocument
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: PhysicalDocument.Length
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.Length
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Documents
  summary: Length (in bytes) of the document.
  example: []
  syntax:
    content: public long Length { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property Length As Long
  overload: SuperOffice.CRM.Documents.PhysicalDocument.Length*
  implements:
  - SuperOffice.IO.IStreamProvider.Length
references:
- uid: SuperOffice.CRM.Documents
  commentId: N:SuperOffice.CRM.Documents
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Documents
  nameWithType: SuperOffice.CRM.Documents
  fullName: SuperOffice.CRM.Documents
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Documents
    name: Documents
    isExternal: true
    href: SuperOffice.CRM.Documents.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Documents
    name: Documents
    isExternal: true
    href: SuperOffice.CRM.Documents.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.IO.IStreamProvider
  commentId: T:SuperOffice.IO.IStreamProvider
  parent: SuperOffice.IO
  isExternal: true
  href: SuperOffice.IO.IStreamProvider.html
  name: IStreamProvider
  nameWithType: IStreamProvider
  fullName: SuperOffice.IO.IStreamProvider
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<PhysicalDocument, To>(PhysicalDocument)
  nameWithType: EnumUtil.MapEnums<PhysicalDocument, To>(PhysicalDocument)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Documents.PhysicalDocument, To>(SuperOffice.CRM.Documents.PhysicalDocument)
  nameWithType.vb: EnumUtil.MapEnums(Of PhysicalDocument, To)(PhysicalDocument)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Documents.PhysicalDocument, To)(SuperOffice.CRM.Documents.PhysicalDocument)
  name.vb: MapEnums(Of PhysicalDocument, To)(PhysicalDocument)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Documents.PhysicalDocument)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Documents.PhysicalDocument)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<PhysicalDocument, To>(PhysicalDocument)
  nameWithType: Converters.MapEnums<PhysicalDocument, To>(PhysicalDocument)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Documents.PhysicalDocument, To>(SuperOffice.CRM.Documents.PhysicalDocument)
  nameWithType.vb: Converters.MapEnums(Of PhysicalDocument, To)(PhysicalDocument)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Documents.PhysicalDocument, To)(SuperOffice.CRM.Documents.PhysicalDocument)
  name.vb: MapEnums(Of PhysicalDocument, To)(PhysicalDocument)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Documents.PhysicalDocument)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Documents.PhysicalDocument)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Documents.PhysicalDocument
    name: PhysicalDocument
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.IO
  commentId: N:SuperOffice.IO
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.IO
  nameWithType: SuperOffice.IO
  fullName: SuperOffice.IO
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.IO
    name: IO
    isExternal: true
    href: SuperOffice.IO.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.IO
    name: IO
    isExternal: true
    href: SuperOffice.IO.html
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocument
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocument_System_Int32_
  name: GetDocument
  nameWithType: PhysicalDocument.GetDocument
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocument
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Documents.PhysicalDocument
  commentId: T:SuperOffice.CRM.Documents.PhysicalDocument
  parent: SuperOffice.CRM.Documents
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html
  name: PhysicalDocument
  nameWithType: PhysicalDocument
  fullName: SuperOffice.CRM.Documents.PhysicalDocument
- uid: SuperOffice.CRM.IDocumentInfo
  commentId: T:SuperOffice.CRM.IDocumentInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.IDocumentInfo.html
  name: IDocumentInfo
  nameWithType: IDocumentInfo
  fullName: SuperOffice.CRM.IDocumentInfo
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateNewEmptyAsync_SuperOffice_CRM_IDocumentInfo_System_String_System_String___System_String_System_String___System_Threading_CancellationToken_
  name: CreateNewEmptyAsync
  nameWithType: PhysicalDocument.CreateNewEmptyAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.String,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(string value, string tooltip)>
  nameWithType: Task<(string value, string tooltip)>
  fullName: System.Threading.Tasks.Task<(string value, string tooltip)>
  nameWithType.vb: Task(Of (value As String, tooltip As String))
  fullName.vb: System.Threading.Tasks.Task(Of (value As String, tooltip As String))
  name.vb: Task(Of (value As String, tooltip As String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.value
    name: value
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.value
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.tooltip
    name: tooltip
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.tooltip
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,System.String}.value
    name: value
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.value
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,System.String}.tooltip
    name: tooltip
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,system.string-.tooltip
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateNewEmptyByRefAsync_SuperOffice_CRM_IDocumentInfo_System_String_System_String___System_String_System_String___
  name: CreateNewEmptyByRefAsync
  nameWithType: PhysicalDocument.CreateNewEmptyByRefAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewEmptyByRefAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(string extRef, IDocumentInfo documentInfo, string actualFileName)>
  nameWithType: Task<(string extRef, IDocumentInfo documentInfo, string actualFileName)>
  fullName: System.Threading.Tasks.Task<(string extRef, SuperOffice.CRM.IDocumentInfo documentInfo, string actualFileName)>
  nameWithType.vb: Task(Of (extRef As String, documentInfo As IDocumentInfo, actualFileName As String))
  fullName.vb: System.Threading.Tasks.Task(Of (extRef As String, documentInfo As SuperOffice.CRM.IDocumentInfo, actualFileName As String))
  name.vb: Task(Of (extRef As String, documentInfo As IDocumentInfo, actualFileName As String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}.extRef
    name: extRef
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,superoffice.crm.idocumentinfo,system.string-.extref
  - name: ','
  - name: " "
  - uid: SuperOffice.CRM.IDocumentInfo
    name: IDocumentInfo
    isExternal: true
  - name: " "
  - uid: System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}.documentInfo
    name: documentInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,superoffice.crm.idocumentinfo,system.string-.documentinfo
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}.actualFileName
    name: actualFileName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,superoffice.crm.idocumentinfo,system.string-.actualfilename
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}.extRef
    name: extRef
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,superoffice.crm.idocumentinfo,system.string-.extref
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}.documentInfo
    name: documentInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,superoffice.crm.idocumentinfo,system.string-.documentinfo
  - name: " "
  - name: As
  - name: " "
  - uid: SuperOffice.CRM.IDocumentInfo
    name: IDocumentInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.String,SuperOffice.CRM.IDocumentInfo,System.String}.actualFileName
    name: actualFileName
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.string,superoffice.crm.idocumentinfo,system.string-.actualfilename
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateNewFromTemplateAsync_SuperOffice_CRM_IDocumentInfo_System_String_System_String___System_String_System_String___System_String_System_Threading_CancellationToken_
  name: CreateNewFromTemplateAsync
  nameWithType: PhysicalDocument.CreateNewFromTemplateAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateNewFromTemplateWithTagsAsync_SuperOffice_CRM_IDocumentInfo_System_String_System_String___System_String_System_String___SuperOffice_IO_TagContainer_System_String_System_Threading_CancellationToken_
  name: CreateNewFromTemplateWithTagsAsync
  nameWithType: PhysicalDocument.CreateNewFromTemplateWithTagsAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsync
- uid: SuperOffice.IO.TagContainer
  commentId: T:SuperOffice.IO.TagContainer
  parent: SuperOffice.IO
  isExternal: true
  href: SuperOffice.IO.TagContainer.html
  name: TagContainer
  nameWithType: TagContainer
  fullName: SuperOffice.IO.TagContainer
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SuggestFilenameAsync_System_Threading_CancellationToken_
  name: SuggestFilenameAsync
  nameWithType: PhysicalDocument.SuggestFilenameAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SuggestFilenameAsync
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SaveDocumentFromStreamAsync_SuperOffice_CRM_IDocumentInfo_System_String___System_IO_Stream_System_Threading_CancellationToken_
  name: SaveDocumentFromStreamAsync
  nameWithType: PhysicalDocument.SaveDocumentFromStreamAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentFromStreamAsync
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.ReturnInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<ReturnInfo>
  nameWithType: Task<ReturnInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.ReturnInfo>
  nameWithType.vb: Task(Of ReturnInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.ReturnInfo)
  name.vb: Task(Of ReturnInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.ReturnInfo
    name: ReturnInfo
    isExternal: true
    href: SuperOffice.CRM.ReturnInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.ReturnInfo
    name: ReturnInfo
    isExternal: true
    href: SuperOffice.CRM.ReturnInfo.html
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadDocumentStreamAsync_SuperOffice_CRM_IDocumentInfo_System_String_System_Threading_CancellationToken_
  name: LoadDocumentStreamAsync
  nameWithType: PhysicalDocument.LoadDocumentStreamAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentStreamAsync
- uid: System.Threading.Tasks.Task{System.IO.Stream}
  commentId: T:System.Threading.Tasks.Task{System.IO.Stream}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Stream>
  nameWithType: Task<Stream>
  fullName: System.Threading.Tasks.Task<System.IO.Stream>
  nameWithType.vb: Task(Of Stream)
  fullName.vb: System.Threading.Tasks.Task(Of System.IO.Stream)
  name.vb: Task(Of Stream)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDatabaseLanguageCodeAsync_System_Threading_CancellationToken_
  name: GetDatabaseLanguageCodeAsync
  nameWithType: PhysicalDocument.GetDatabaseLanguageCodeAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCodeAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDatabaseLanguageCultureAsync_System_Threading_CancellationToken_
  name: GetDatabaseLanguageCultureAsync
  nameWithType: PhysicalDocument.GetDatabaseLanguageCultureAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDatabaseLanguageCultureAsync
- uid: System.Threading.Tasks.Task{System.Globalization.CultureInfo}
  commentId: T:System.Threading.Tasks.Task{System.Globalization.CultureInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CultureInfo>
  nameWithType: Task<CultureInfo>
  fullName: System.Threading.Tasks.Task<System.Globalization.CultureInfo>
  nameWithType.vb: Task(Of CultureInfo)
  fullName.vb: System.Threading.Tasks.Task(Of System.Globalization.CultureInfo)
  name.vb: Task(Of CultureInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: )
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  href: SuperOffice.Exceptions.SoIllegalOperationException.html
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetTemplateLanguagesAsync_SuperOffice_CRM_IDocumentTemplateInfo_System_Threading_CancellationToken_
  name: GetTemplateLanguagesAsync
  nameWithType: PhysicalDocument.GetTemplateLanguagesAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateLanguagesAsync
- uid: SuperOffice.CRM.IDocumentTemplateInfo
  commentId: T:SuperOffice.CRM.IDocumentTemplateInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.IDocumentTemplateInfo.html
  name: IDocumentTemplateInfo
  nameWithType: IDocumentTemplateInfo
  fullName: SuperOffice.CRM.IDocumentTemplateInfo
- uid: System.Threading.Tasks.Task{System.String[]}
  commentId: T:System.Threading.Tasks.Task{System.String[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string[]>
  nameWithType: Task<string[]>
  fullName: System.Threading.Tasks.Task<string[]>
  nameWithType.vb: Task(Of String())
  fullName.vb: System.Threading.Tasks.Task(Of String())
  name.vb: Task(Of String())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentUrlAsync_System_Threading_CancellationToken_
  name: GetDocumentUrlAsync
  nameWithType: PhysicalDocument.GetDocumentUrlAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentUrlAsync
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_DeleteDocumentAsync_System_Threading_CancellationToken_System_String___
  name: DeleteDocumentAsync
  nameWithType: PhysicalDocument.DeleteDocumentAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_RenameDocumentAsync_System_String_System_Threading_CancellationToken_
  name: RenameDocumentAsync
  nameWithType: PhysicalDocument.RenameDocumentAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.RenameDocumentAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentIdFromPathAsync_System_String_System_Threading_CancellationToken_
  name: GetDocumentIdFromPathAsync
  nameWithType: PhysicalDocument.GetDocumentIdFromPathAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentIdFromPathAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetPluginCapabilities_System_Int32_
  name: GetPluginCapabilities
  nameWithType: PhysicalDocument.GetPluginCapabilities
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetPluginCapabilities
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadDocumentTemplateStreamAsync_System_String_System_Boolean_System_String_System_Threading_CancellationToken_
  name: LoadDocumentTemplateStreamAsync
  nameWithType: PhysicalDocument.LoadDocumentTemplateStreamAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadDocumentTemplateStreamAsync
- uid: System.Threading.Tasks.Task{System.ValueTuple{System.IO.Stream,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.ValueTuple{System.IO.Stream,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<(Stream stream, string templateExtension)>
  nameWithType: Task<(Stream stream, string templateExtension)>
  fullName: System.Threading.Tasks.Task<(System.IO.Stream stream, string templateExtension)>
  nameWithType.vb: Task(Of (stream As Stream, templateExtension As String))
  fullName.vb: System.Threading.Tasks.Task(Of (stream As System.IO.Stream, templateExtension As String))
  name.vb: Task(Of (stream As Stream, templateExtension As String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: (
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: " "
  - uid: System.ValueTuple{System.IO.Stream,System.String}.stream
    name: stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.stream,system.string-.stream
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: " "
  - uid: System.ValueTuple{System.IO.Stream,System.String}.templateExtension
    name: templateExtension
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.stream,system.string-.templateextension
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.IO.Stream,System.String}.stream
    name: stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.stream,system.string-.stream
  - name: " "
  - name: As
  - name: " "
  - uid: System.IO.Stream
    name: Stream
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.stream
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.IO.Stream,System.String}.templateExtension
    name: templateExtension
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.io.stream,system.string-.templateextension
  - name: " "
  - name: As
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateNewFromTemplateWithTagsAsStreamAsync_System_Int32_System_String_SuperOffice_IO_TagContainer_System_Threading_CancellationToken_
  name: CreateNewFromTemplateWithTagsAsStreamAsync
  nameWithType: PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateNewFromTemplateWithTagsAsStreamAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SaveDocumentTemplateStreamAsync_System_Int32_System_IO_Stream_System_String_System_Int32_System_String_System_Threading_CancellationToken_
  name: SaveDocumentTemplateStreamAsync
  nameWithType: PhysicalDocument.SaveDocumentTemplateStreamAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveDocumentTemplateStreamAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Documents.TemplateInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Documents.TemplateInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TemplateInfo>
  nameWithType: Task<TemplateInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Documents.TemplateInfo>
  nameWithType.vb: Task(Of TemplateInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Documents.TemplateInfo)
  name.vb: Task(Of TemplateInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Documents.TemplateInfo
    name: TemplateInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.TemplateInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Documents.TemplateInfo
    name: TemplateInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.TemplateInfo.html
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetTemplateExtensionAsync_System_Int32_System_Threading_CancellationToken_
  name: GetTemplateExtensionAsync
  nameWithType: PhysicalDocument.GetTemplateExtensionAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetTemplateExtensionAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentTypesForDocumentTemplates_System_Int32_
  name: GetDocumentTypesForDocumentTemplates
  nameWithType: PhysicalDocument.GetDocumentTypesForDocumentTemplates
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTypesForDocumentTemplates
- uid: System.Collections.Generic.Dictionary{System.Int32,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.Int32,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<int, string>
  nameWithType: Dictionary<int, string>
  fullName: System.Collections.Generic.Dictionary<int, string>
  nameWithType.vb: Dictionary(Of Integer, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of Integer, String)
  name.vb: Dictionary(Of Integer, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateDefaultDocumentTemplateAsync_System_Int32_System_Int32_System_Threading_CancellationToken_
  name: CreateDefaultDocumentTemplateAsync
  nameWithType: PhysicalDocument.CreateDefaultDocumentTemplateAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentTemplatePropertiesAsync_System_Int32_System_Threading_CancellationToken_System_String___
  name: GetDocumentTemplatePropertiesAsync
  nameWithType: PhysicalDocument.GetDocumentTemplatePropertiesAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplatePropertiesAsync
- uid: System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.String}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.Dictionary{System.String,System.String}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Dictionary<string, string>>
  nameWithType: Task<Dictionary<string, string>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, string>>
  nameWithType.vb: Task(Of Dictionary(Of String, String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.Dictionary(Of String, String))
  name.vb: Task(Of Dictionary(Of String, String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentTemplateUrlAsync_System_Int32_System_Boolean_System_String_System_Threading_CancellationToken_
  name: GetDocumentTemplateUrlAsync
  nameWithType: PhysicalDocument.GetDocumentTemplateUrlAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentTemplateUrlAsync
- uid: SuperOffice.CRM.Documents.Constants.Properties
  commentId: T:SuperOffice.CRM.Documents.Constants.Properties
  isExternal: true
  href: SuperOffice.CRM.Documents.Constants.html
  name: Constants.Properties
  nameWithType: Constants.Properties
  fullName: SuperOffice.CRM.Documents.Constants.Properties
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.Constants
    name: Constants
    isExternal: true
    href: SuperOffice.CRM.Documents.Constants.html
  - name: .
  - uid: SuperOffice.CRM.Documents.Constants.Properties
    name: Properties
    isExternal: true
    href: SuperOffice.CRM.Documents.Constants.Properties.html
  spec.vb:
  - uid: SuperOffice.CRM.Documents.Constants
    name: Constants
    isExternal: true
    href: SuperOffice.CRM.Documents.Constants.html
  - name: .
  - uid: SuperOffice.CRM.Documents.Constants.Properties
    name: Properties
    isExternal: true
    href: SuperOffice.CRM.Documents.Constants.Properties.html
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadMetaData
  name: LoadMetaData()
  nameWithType: PhysicalDocument.LoadMetaData()
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData()
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
    name: LoadMetaData
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadMetaData
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
    name: LoadMetaData
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadMetaData
  - name: (
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SaveMetaData_System_String___
  name: SaveMetaData(string[])
  nameWithType: PhysicalDocument.SaveMetaData(string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(string[])
  nameWithType.vb: PhysicalDocument.SaveMetaData(String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(String())
  name.vb: SaveMetaData(String())
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
    name: SaveMetaData
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SaveMetaData_System_String___
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData(System.String[])
    name: SaveMetaData
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SaveMetaData_System_String___
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentPropertiesAsync_System_String___System_Threading_CancellationToken_
  name: GetDocumentPropertiesAsync
  nameWithType: PhysicalDocument.GetDocumentPropertiesAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentPropertiesAsync
- uid: SuperOffice.CRM.Documents.CommandInfo
  commentId: T:SuperOffice.CRM.Documents.CommandInfo
  isExternal: true
  href: SuperOffice.CRM.Documents.CommandInfo.html
  name: CommandInfo
  nameWithType: CommandInfo
  fullName: SuperOffice.CRM.Documents.CommandInfo
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentCommands_System_String___
  name: GetDocumentCommands
  nameWithType: PhysicalDocument.GetDocumentCommands
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands
- uid: SuperOffice.CRM.Documents.CommandInfo[]
  isExternal: true
  href: SuperOffice.CRM.Documents.CommandInfo.html
  name: CommandInfo[]
  nameWithType: CommandInfo[]
  fullName: SuperOffice.CRM.Documents.CommandInfo[]
  nameWithType.vb: CommandInfo()
  fullName.vb: SuperOffice.CRM.Documents.CommandInfo()
  name.vb: CommandInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.CommandInfo
    name: CommandInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.CommandInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Documents.CommandInfo
    name: CommandInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.CommandInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
  commentId: M:SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentCommands_System_String___
  name: GetDocumentCommands(params string[])
  nameWithType: PhysicalDocument.GetDocumentCommands(params string[])
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(params string[])
  nameWithType.vb: PhysicalDocument.GetDocumentCommands(ParamArray String())
  fullName.vb: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(ParamArray String())
  name.vb: GetDocumentCommands(ParamArray String())
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
    name: GetDocumentCommands
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentCommands_System_String___
  - name: (
  - name: params
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDocumentCommands(System.String[])
    name: GetDocumentCommands
    isExternal: true
    href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDocumentCommands_System_String___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_ExecuteDocumentCommand_System_String_System_String___System_String_System_String___
  name: ExecuteDocumentCommand
  nameWithType: PhysicalDocument.ExecuteDocumentCommand
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ExecuteDocumentCommand
- uid: SuperOffice.CRM.ReturnInfo
  commentId: T:SuperOffice.CRM.ReturnInfo
  parent: SuperOffice.CRM
  isExternal: true
  href: SuperOffice.CRM.ReturnInfo.html
  name: ReturnInfo
  nameWithType: ReturnInfo
  fullName: SuperOffice.CRM.ReturnInfo
- uid: SuperOffice.CRM.Globalization.CultureDataFormatter
  commentId: T:SuperOffice.CRM.Globalization.CultureDataFormatter
  isExternal: true
  href: SuperOffice.CRM.Globalization.CultureDataFormatter.html
  name: CultureDataFormatter
  nameWithType: CultureDataFormatter
  fullName: SuperOffice.CRM.Globalization.CultureDataFormatter
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadMetaData
  name: LoadMetaData
  nameWithType: PhysicalDocument.LoadMetaData
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadMetaData
- uid: SuperOffice.CRM.Documents.IDocumentPlugin2.GetVersionList(SuperOffice.CRM.IDocumentInfo)
  commentId: M:SuperOffice.CRM.Documents.IDocumentPlugin2.GetVersionList(SuperOffice.CRM.IDocumentInfo)
  parent: SuperOffice.CRM.Documents.IDocumentPlugin2
  isExternal: true
  href: SuperOffice.CRM.Documents.IDocumentPlugin2.html#SuperOffice_CRM_Documents_IDocumentPlugin2_GetVersionList_SuperOffice_CRM_IDocumentInfo_
  name: GetVersionList(IDocumentInfo)
  nameWithType: IDocumentPlugin2.GetVersionList(IDocumentInfo)
  fullName: SuperOffice.CRM.Documents.IDocumentPlugin2.GetVersionList(SuperOffice.CRM.IDocumentInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.IDocumentPlugin2.GetVersionList(SuperOffice.CRM.IDocumentInfo)
    name: GetVersionList
    isExternal: true
    href: SuperOffice.CRM.Documents.IDocumentPlugin2.html#SuperOffice_CRM_Documents_IDocumentPlugin2_GetVersionList_SuperOffice_CRM_IDocumentInfo_
  - name: (
  - uid: SuperOffice.CRM.IDocumentInfo
    name: IDocumentInfo
    isExternal: true
    href: SuperOffice.CRM.IDocumentInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Documents.IDocumentPlugin2.GetVersionList(SuperOffice.CRM.IDocumentInfo)
    name: GetVersionList
    isExternal: true
    href: SuperOffice.CRM.Documents.IDocumentPlugin2.html#SuperOffice_CRM_Documents_IDocumentPlugin2_GetVersionList_SuperOffice_CRM_IDocumentInfo_
  - name: (
  - uid: SuperOffice.CRM.IDocumentInfo
    name: IDocumentInfo
    isExternal: true
    href: SuperOffice.CRM.IDocumentInfo.html
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_LoadVersionInfo_System_String_
  name: LoadVersionInfo
  nameWithType: PhysicalDocument.LoadVersionInfo
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.LoadVersionInfo
- uid: SuperOffice.CRM.Documents.VersionInfo
  commentId: T:SuperOffice.CRM.Documents.VersionInfo
  parent: SuperOffice.CRM.Documents
  isExternal: true
  href: SuperOffice.CRM.Documents.VersionInfo.html
  name: VersionInfo
  nameWithType: VersionInfo
  fullName: SuperOffice.CRM.Documents.VersionInfo
- uid: SuperOffice.CRM.Documents.IDocumentPlugin2
  commentId: T:SuperOffice.CRM.Documents.IDocumentPlugin2
  parent: SuperOffice.CRM.Documents
  isExternal: true
  href: SuperOffice.CRM.Documents.IDocumentPlugin2.html
  name: IDocumentPlugin2
  nameWithType: IDocumentPlugin2
  fullName: SuperOffice.CRM.Documents.IDocumentPlugin2
- uid: SuperOffice.CRM.Documents.IDocumentPlugin2.LoadMetaData(SuperOffice.CRM.IDocumentInfo)
  commentId: M:SuperOffice.CRM.Documents.IDocumentPlugin2.LoadMetaData(SuperOffice.CRM.IDocumentInfo)
  parent: SuperOffice.CRM.Documents.IDocumentPlugin2
  isExternal: true
  href: SuperOffice.CRM.Documents.IDocumentPlugin2.html#SuperOffice_CRM_Documents_IDocumentPlugin2_LoadMetaData_SuperOffice_CRM_IDocumentInfo_
  name: LoadMetaData(IDocumentInfo)
  nameWithType: IDocumentPlugin2.LoadMetaData(IDocumentInfo)
  fullName: SuperOffice.CRM.Documents.IDocumentPlugin2.LoadMetaData(SuperOffice.CRM.IDocumentInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.IDocumentPlugin2.LoadMetaData(SuperOffice.CRM.IDocumentInfo)
    name: LoadMetaData
    isExternal: true
    href: SuperOffice.CRM.Documents.IDocumentPlugin2.html#SuperOffice_CRM_Documents_IDocumentPlugin2_LoadMetaData_SuperOffice_CRM_IDocumentInfo_
  - name: (
  - uid: SuperOffice.CRM.IDocumentInfo
    name: IDocumentInfo
    isExternal: true
    href: SuperOffice.CRM.IDocumentInfo.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Documents.IDocumentPlugin2.LoadMetaData(SuperOffice.CRM.IDocumentInfo)
    name: LoadMetaData
    isExternal: true
    href: SuperOffice.CRM.Documents.IDocumentPlugin2.html#SuperOffice_CRM_Documents_IDocumentPlugin2_LoadMetaData_SuperOffice_CRM_IDocumentInfo_
  - name: (
  - uid: SuperOffice.CRM.IDocumentInfo
    name: IDocumentInfo
    isExternal: true
    href: SuperOffice.CRM.IDocumentInfo.html
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SaveMetaData_System_String___
  name: SaveMetaData
  nameWithType: PhysicalDocument.SaveMetaData
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SaveMetaData
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_ExistsAsync_System_Threading_CancellationToken_
  name: ExistsAsync
  nameWithType: PhysicalDocument.ExistsAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ExistsAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetLengthAsync_System_String_System_Threading_CancellationToken_
  name: GetLengthAsync
  nameWithType: PhysicalDocument.GetLengthAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetLengthAsync
- uid: System.Threading.Tasks.Task{System.Int64}
  commentId: T:System.Threading.Tasks.Task{System.Int64}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<long>
  nameWithType: Task<long>
  fullName: System.Threading.Tasks.Task<long>
  nameWithType.vb: Task(Of Long)
  fullName.vb: System.Threading.Tasks.Task(Of Long)
  name.vb: Task(Of Long)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetCheckoutStateAsync_System_Threading_CancellationToken_
  name: GetCheckoutStateAsync
  nameWithType: PhysicalDocument.GetCheckoutStateAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetCheckoutStateAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Documents.CheckoutInfo}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Documents.CheckoutInfo}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<CheckoutInfo>
  nameWithType: Task<CheckoutInfo>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Documents.CheckoutInfo>
  nameWithType.vb: Task(Of CheckoutInfo)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Documents.CheckoutInfo)
  name.vb: Task(Of CheckoutInfo)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Documents.CheckoutInfo
    name: CheckoutInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.CheckoutInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Documents.CheckoutInfo
    name: CheckoutInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.CheckoutInfo.html
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CheckoutDocumentAsync_System_Threading_CancellationToken_System_String___
  name: CheckoutDocumentAsync
  nameWithType: PhysicalDocument.CheckoutDocumentAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CheckoutDocumentAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CheckinDocumentAsync_System_String___System_String_System_String___System_Threading_CancellationToken_
  name: CheckinDocumentAsync
  nameWithType: PhysicalDocument.CheckinDocumentAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CheckinDocumentAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_UndoCheckoutDocumentAsync_System_Threading_CancellationToken_System_String___
  name: UndoCheckoutDocumentAsync
  nameWithType: PhysicalDocument.UndoCheckoutDocumentAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.UndoCheckoutDocumentAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetVersionList
  name: GetVersionList
  nameWithType: PhysicalDocument.GetVersionList
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetVersionList
- uid: SuperOffice.CRM.Documents.VersionInfo[]
  isExternal: true
  href: SuperOffice.CRM.Documents.VersionInfo.html
  name: VersionInfo[]
  nameWithType: VersionInfo[]
  fullName: SuperOffice.CRM.Documents.VersionInfo[]
  nameWithType.vb: VersionInfo()
  fullName.vb: SuperOffice.CRM.Documents.VersionInfo()
  name.vb: VersionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Documents.VersionInfo
    name: VersionInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.VersionInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Documents.VersionInfo
    name: VersionInfo
    isExternal: true
    href: SuperOffice.CRM.Documents.VersionInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetPlugin_System_Int32_
  name: GetPlugin
  nameWithType: PhysicalDocument.GetPlugin
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetPlugin
- uid: SuperOffice.IO.IStreamProvider.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.IO.IStreamProvider.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: SuperOffice.IO.IStreamProvider.html#SuperOffice_IO_IStreamProvider_Write_System_Int64_System_Byte___System_Int32_System_Int32_
  name: Write(long, byte[], int, int)
  nameWithType: IStreamProvider.Write(long, byte[], int, int)
  fullName: SuperOffice.IO.IStreamProvider.Write(long, byte[], int, int)
  nameWithType.vb: IStreamProvider.Write(Long, Byte(), Integer, Integer)
  fullName.vb: SuperOffice.IO.IStreamProvider.Write(Long, Byte(), Integer, Integer)
  name.vb: Write(Long, Byte(), Integer, Integer)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: SuperOffice.IO.IStreamProvider.html#SuperOffice_IO_IStreamProvider_Write_System_Int64_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.Write(System.Int64,System.Byte[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: SuperOffice.IO.IStreamProvider.html#SuperOffice_IO_IStreamProvider_Write_System_Int64_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_BeginWriteAsync_System_Threading_CancellationToken_
  name: BeginWriteAsync
  nameWithType: PhysicalDocument.BeginWriteAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.BeginWriteAsync
- uid: SuperOffice.IO.IStreamProvider.BeginWriteAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.IStreamProvider.BeginWriteAsync(System.Threading.CancellationToken)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: BeginWriteAsync(CancellationToken)
  nameWithType: IStreamProvider.BeginWriteAsync(CancellationToken)
  fullName: SuperOffice.IO.IStreamProvider.BeginWriteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.BeginWriteAsync(System.Threading.CancellationToken)
    name: BeginWriteAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.BeginWriteAsync(System.Threading.CancellationToken)
    name: BeginWriteAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_WriteAsync_System_Int64_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  name: WriteAsync
  nameWithType: PhysicalDocument.WriteAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.WriteAsync
- uid: SuperOffice.IO.IStreamProvider.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.IStreamProvider.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: WriteAsync(long, byte[], int, int, CancellationToken)
  nameWithType: IStreamProvider.WriteAsync(long, byte[], int, int, CancellationToken)
  fullName: SuperOffice.IO.IStreamProvider.WriteAsync(long, byte[], int, int, System.Threading.CancellationToken)
  nameWithType.vb: IStreamProvider.WriteAsync(Long, Byte(), Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.IO.IStreamProvider.WriteAsync(Long, Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: WriteAsync(Long, Byte(), Integer, Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    isExternal: true
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.WriteAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: WriteAsync
    isExternal: true
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.Write*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.Write
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_Write_System_Int64_System_Byte___System_Int32_System_Int32_
  name: Write
  nameWithType: PhysicalDocument.Write
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.Write
- uid: SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_EndWriteAsync_System_Threading_CancellationToken_
  name: EndWriteAsync
  nameWithType: PhysicalDocument.EndWriteAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.EndWriteAsync
- uid: SuperOffice.IO.IStreamProvider.EndWriteAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.IStreamProvider.EndWriteAsync(System.Threading.CancellationToken)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: EndWriteAsync(CancellationToken)
  nameWithType: IStreamProvider.EndWriteAsync(CancellationToken)
  fullName: SuperOffice.IO.IStreamProvider.EndWriteAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.EndWriteAsync(System.Threading.CancellationToken)
    name: EndWriteAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.EndWriteAsync(System.Threading.CancellationToken)
    name: EndWriteAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.IO.IStreamProvider.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.IO.IStreamProvider.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: SuperOffice.IO.IStreamProvider.html#SuperOffice_IO_IStreamProvider_Read_System_Int64_System_Byte___System_Int32_System_Int32_
  name: Read(long, byte[], int, int)
  nameWithType: IStreamProvider.Read(long, byte[], int, int)
  fullName: SuperOffice.IO.IStreamProvider.Read(long, byte[], int, int)
  nameWithType.vb: IStreamProvider.Read(Long, Byte(), Integer, Integer)
  fullName.vb: SuperOffice.IO.IStreamProvider.Read(Long, Byte(), Integer, Integer)
  name.vb: Read(Long, Byte(), Integer, Integer)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: SuperOffice.IO.IStreamProvider.html#SuperOffice_IO_IStreamProvider_Read_System_Int64_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.Read(System.Int64,System.Byte[],System.Int32,System.Int32)
    name: Read
    isExternal: true
    href: SuperOffice.IO.IStreamProvider.html#SuperOffice_IO_IStreamProvider_Read_System_Int64_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_BeginReadAsync_System_Threading_CancellationToken_
  name: BeginReadAsync
  nameWithType: PhysicalDocument.BeginReadAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.BeginReadAsync
- uid: SuperOffice.IO.IStreamProvider.BeginReadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.IStreamProvider.BeginReadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: BeginReadAsync(CancellationToken)
  nameWithType: IStreamProvider.BeginReadAsync(CancellationToken)
  fullName: SuperOffice.IO.IStreamProvider.BeginReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.BeginReadAsync(System.Threading.CancellationToken)
    name: BeginReadAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.BeginReadAsync(System.Threading.CancellationToken)
    name: BeginReadAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_ReadAsync_System_Int64_System_Byte___System_Int32_System_Int32_System_Threading_CancellationToken_
  name: ReadAsync
  nameWithType: PhysicalDocument.ReadAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ReadAsync
- uid: SuperOffice.IO.IStreamProvider.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.IStreamProvider.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: ReadAsync(long, byte[], int, int, CancellationToken)
  nameWithType: IStreamProvider.ReadAsync(long, byte[], int, int, CancellationToken)
  fullName: SuperOffice.IO.IStreamProvider.ReadAsync(long, byte[], int, int, System.Threading.CancellationToken)
  nameWithType.vb: IStreamProvider.ReadAsync(Long, Byte(), Integer, Integer, CancellationToken)
  fullName.vb: SuperOffice.IO.IStreamProvider.ReadAsync(Long, Byte(), Integer, Integer, System.Threading.CancellationToken)
  name.vb: ReadAsync(Long, Byte(), Integer, Integer, CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    isExternal: true
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.ReadAsync(System.Int64,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)
    name: ReadAsync
    isExternal: true
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_EndReadAsync_System_Threading_CancellationToken_
  name: EndReadAsync
  nameWithType: PhysicalDocument.EndReadAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.EndReadAsync
- uid: SuperOffice.IO.IStreamProvider.EndReadAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.IO.IStreamProvider.EndReadAsync(System.Threading.CancellationToken)
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: EndReadAsync(CancellationToken)
  nameWithType: IStreamProvider.EndReadAsync(CancellationToken)
  fullName: SuperOffice.IO.IStreamProvider.EndReadAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: SuperOffice.IO.IStreamProvider.EndReadAsync(System.Threading.CancellationToken)
    name: EndReadAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.IStreamProvider.EndReadAsync(System.Threading.CancellationToken)
    name: EndReadAsync
    isExternal: true
  - name: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  - name: )
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateDefaultDocumentTemplateLanguageAsync_SuperOffice_CRM_IDocumentTemplateInfo_System_String_System_Threading_CancellationToken_
  name: CreateDefaultDocumentTemplateLanguageAsync
  nameWithType: PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateDefaultDocumentTemplateLanguageAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_DeleteDocumentTemplateLanguageAsync_SuperOffice_CRM_IDocumentTemplateInfo_System_String_System_Threading_CancellationToken_
  name: DeleteDocumentTemplateLanguageAsync
  nameWithType: PhysicalDocument.DeleteDocumentTemplateLanguageAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DeleteDocumentTemplateLanguageAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_SetDocumentTemplateFromDocumentTemplateAsync_SuperOffice_CRM_IDocumentTemplateInfo_SuperOffice_CRM_IDocumentTemplateInfo_System_Threading_CancellationToken_
  name: SetDocumentTemplateFromDocumentTemplateAsync
  nameWithType: PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.SetDocumentTemplateFromDocumentTemplateAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_CreateFilenameForNewTemplateAsync_SuperOffice_CRM_IDocumentTemplateInfo_System_String_System_Threading_CancellationToken_
  name: CreateFilenameForNewTemplateAsync
  nameWithType: PhysicalDocument.CreateFilenameForNewTemplateAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.CreateFilenameForNewTemplateAsync
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetDefaultDocumentPluginIdAsync_System_Threading_CancellationToken_
  name: GetDefaultDocumentPluginIdAsync
  nameWithType: PhysicalDocument.GetDefaultDocumentPluginIdAsync
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetDefaultDocumentPluginIdAsync
- uid: SuperOffice.Plugins.CRM.Documents.IAssociateRename
  commentId: T:SuperOffice.Plugins.CRM.Documents.IAssociateRename
  parent: SuperOffice.Plugins.CRM.Documents
  isExternal: true
  href: SuperOffice.Plugins.CRM.Documents.IAssociateRename.html
  name: IAssociateRename
  nameWithType: IAssociateRename
  fullName: SuperOffice.Plugins.CRM.Documents.IAssociateRename
- uid: SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_AssociateRename_System_String_System_String_
  name: AssociateRename
  nameWithType: PhysicalDocument.AssociateRename
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.AssociateRename
- uid: SuperOffice.Plugins.CRM.Documents
  commentId: N:SuperOffice.Plugins.CRM.Documents
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Plugins.CRM.Documents
  nameWithType: SuperOffice.Plugins.CRM.Documents
  fullName: SuperOffice.Plugins.CRM.Documents
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Plugins
    name: Plugins
    isExternal: true
    href: SuperOffice.Plugins.html
  - name: .
  - uid: SuperOffice.Plugins.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.Plugins.CRM.html
  - name: .
  - uid: SuperOffice.Plugins.CRM.Documents
    name: Documents
    isExternal: true
    href: SuperOffice.Plugins.CRM.Documents.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Plugins
    name: Plugins
    isExternal: true
    href: SuperOffice.Plugins.html
  - name: .
  - uid: SuperOffice.Plugins.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.Plugins.CRM.html
  - name: .
  - uid: SuperOffice.Plugins.CRM.Documents
    name: Documents
    isExternal: true
    href: SuperOffice.Plugins.CRM.Documents.html
- uid: SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_IsNameValid_System_String_
  name: IsNameValid
  nameWithType: PhysicalDocument.IsNameValid
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.IsNameValid
- uid: SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_GetAllDocPlugins
  name: GetAllDocPlugins
  nameWithType: PhysicalDocument.GetAllDocPlugins
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.GetAllDocPlugins
- uid: SuperOffice.CRM.Documents.PhysicalDocument.Read*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.Read
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_Read_System_Int64_System_Byte___System_Int32_System_Int32_
  name: Read
  nameWithType: PhysicalDocument.Read
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.Read
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_DocumentInfo
  name: DocumentInfo
  nameWithType: PhysicalDocument.DocumentInfo
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DocumentInfo
- uid: SuperOffice.CRM.Documents.PhysicalDocument.DocumentId*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.DocumentId
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_DocumentId
  name: DocumentId
  nameWithType: PhysicalDocument.DocumentId
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.DocumentId
- uid: SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_ArchiveProvider
  name: ArchiveProvider
  nameWithType: PhysicalDocument.ArchiveProvider
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.ArchiveProvider
- uid: SuperOffice.CRM.Documents.PhysicalDocument.Length*
  commentId: Overload:SuperOffice.CRM.Documents.PhysicalDocument.Length
  isExternal: true
  href: SuperOffice.CRM.Documents.PhysicalDocument.html#SuperOffice_CRM_Documents_PhysicalDocument_Length
  name: Length
  nameWithType: PhysicalDocument.Length
  fullName: SuperOffice.CRM.Documents.PhysicalDocument.Length
- uid: SuperOffice.IO.IStreamProvider.Length
  commentId: P:SuperOffice.IO.IStreamProvider.Length
  parent: SuperOffice.IO.IStreamProvider
  isExternal: true
  name: Length
  nameWithType: IStreamProvider.Length
  fullName: SuperOffice.IO.IStreamProvider.Length
