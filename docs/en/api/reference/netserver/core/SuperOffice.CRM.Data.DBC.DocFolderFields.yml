### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields
  commentId: T:SuperOffice.CRM.Data.DBC.DocFolderFields
  id: DBC.DocFolderFields
  parent: SuperOffice.CRM.Data
  children:
  - SuperOffice.CRM.Data.DBC.DocFolderFields.AccessLevel
  - SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedAt
  - SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedBy
  - SuperOffice.CRM.Data.DBC.DocFolderFields.DocFolderId
  - SuperOffice.CRM.Data.DBC.DocFolderFields.FolderId
  - SuperOffice.CRM.Data.DBC.DocFolderFields.Fullname
  - SuperOffice.CRM.Data.DBC.DocFolderFields.InheritedAccessLevel
  - SuperOffice.CRM.Data.DBC.DocFolderFields.Status
  - SuperOffice.CRM.Data.DBC.DocFolderFields.Title
  langs:
  - csharp
  - vb
  name: DBC.DocFolderFields
  nameWithType: DBC.DocFolderFields
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nFields for DocFolder, A document folder.\n"
  syntax:
    content: public static class DocFolderFields
    content.vb: Public Module DocFolderFields
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.DocFolderId
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.DocFolderId
  id: DocFolderId
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: DocFolderId
  nameWithType: DBC.DocFolderFields.DocFolderId
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.DocFolderId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.DocFolderId: The primary id (auto-incremented)\n"
  syntax:
    content: public const string DocFolderId = "id"
    return:
      type: System.String
    content.vb: Public Const DocFolderId As String = "id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.FolderId
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.FolderId
  id: FolderId
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: FolderId
  nameWithType: DBC.DocFolderFields.FolderId
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.FolderId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.FolderId: The parent folder. -1 if this is a root folder.\n"
  syntax:
    content: public const string FolderId = "folder_id"
    return:
      type: System.String
    content.vb: Public Const FolderId As String = "folder_id"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.Title
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.Title
  id: Title
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: DBC.DocFolderFields.Title
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.Title
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.Title: The title of the folder\n"
  syntax:
    content: public const string Title = "title"
    return:
      type: System.String
    content.vb: Public Const Title As String = "title"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedAt
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedAt
  id: CreatedAt
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: CreatedAt
  nameWithType: DBC.DocFolderFields.CreatedAt
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedAt
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.CreatedAt: When the folder was created.\n"
  syntax:
    content: public const string CreatedAt = "created_at"
    return:
      type: System.String
    content.vb: Public Const CreatedAt As String = "created_at"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedBy
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedBy
  id: CreatedBy
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: DBC.DocFolderFields.CreatedBy
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.CreatedBy
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.CreatedBy: The used who created the folder.\n"
  syntax:
    content: public const string CreatedBy = "created_by"
    return:
      type: System.String
    content.vb: Public Const CreatedBy As String = "created_by"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.Status
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.Status
  id: Status
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: DBC.DocFolderFields.Status
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.Status
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.Status: The status of the folder.\n"
  syntax:
    content: public const string Status = "status"
    return:
      type: System.String
    content.vb: Public Const Status As String = "status"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.AccessLevel
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.AccessLevel
  id: AccessLevel
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: AccessLevel
  nameWithType: DBC.DocFolderFields.AccessLevel
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.AccessLevel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.AccessLevel: The access level for the folder\n"
  syntax:
    content: public const string AccessLevel = "access_level"
    return:
      type: System.String
    content.vb: Public Const AccessLevel As String = "access_level"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.InheritedAccessLevel
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.InheritedAccessLevel
  id: InheritedAccessLevel
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: InheritedAccessLevel
  nameWithType: DBC.DocFolderFields.InheritedAccessLevel
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.InheritedAccessLevel
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.InheritedAccessLevel: The lowest access level for this folder or any parent\n"
  syntax:
    content: public const string InheritedAccessLevel = "inherited_access_level"
    return:
      type: System.String
    content.vb: Public Const InheritedAccessLevel As String = "inherited_access_level"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.CRM.Data.DBC.DocFolderFields.Fullname
  commentId: F:SuperOffice.CRM.Data.DBC.DocFolderFields.Fullname
  id: Fullname
  parent: SuperOffice.CRM.Data.DBC.DocFolderFields
  langs:
  - csharp
  - vb
  name: Fullname
  nameWithType: DBC.DocFolderFields.Fullname
  fullName: SuperOffice.CRM.Data.DBC.DocFolderFields.Fullname
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Data
  summary: "\nDocFolder.Fullname: The full name of this category, i.e. Foo/bar/test.\n"
  syntax:
    content: public const string Fullname = "fullname"
    return:
      type: System.String
    content.vb: Public Const Fullname As String = "fullname"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.CRM.Data
  commentId: N:SuperOffice.CRM.Data
  isExternal: true
  name: SuperOffice.CRM.Data
  nameWithType: SuperOffice.CRM.Data
  fullName: SuperOffice.CRM.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
