### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
  id: IDuplicateDetector
  parent: SuperOffice.CRM.Data.Util.Duplicates
  children:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync(System.Threading.CancellationToken)
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync(System.Threading.CancellationToken,System.String[])
  langs:
  - csharp
  - vb
  name: IDuplicateDetector
  nameWithType: IDuplicateDetector
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
  type: Interface
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  summary: Detect duplicates or similar items in database or external systems
  example: []
  syntax:
    content: public interface IDuplicateDetector
    content.vb: Public Interface IDuplicateDetector
  extensionMethods:
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  id: CreateNewEntryAsync(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
  langs:
  - csharp
  - vb
  name: CreateNewEntryAsync(DuplicateEntry)
  nameWithType: IDuplicateDetector.CreateNewEntryAsync(DuplicateEntry)
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync(SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  syntax:
    content: Task<int> CreateNewEntryAsync(DuplicateEntry entry)
    parameters:
    - id: entry
      type: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    return:
      type: System.Threading.Tasks.Task{System.Int32}
    content.vb: Function CreateNewEntryAsync(entry As DuplicateEntry) As Task(Of Integer)
  overload: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync*
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync(System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync(System.Threading.CancellationToken)
  id: GetAvailableRulesAsync(System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
  langs:
  - csharp
  - vb
  name: GetAvailableRulesAsync(CancellationToken)
  nameWithType: IDuplicateDetector.GetAvailableRulesAsync(CancellationToken)
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync(System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  syntax:
    content: Task<IDuplicateRule[]> GetAvailableRulesAsync(CancellationToken cancellationToken = default)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule[]}
    content.vb: Function GetAvailableRulesAsync(cancellationToken As CancellationToken = Nothing) As Task(Of IDuplicateRule())
  overload: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync*
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync(System.Threading.CancellationToken,System.String[])
  commentId: M:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync(System.Threading.CancellationToken,System.String[])
  id: GetDuplicatesAsync(System.Threading.CancellationToken,System.String[])
  parent: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
  langs:
  - csharp
  - vb
  name: GetDuplicatesAsync(CancellationToken, params string[])
  nameWithType: IDuplicateDetector.GetDuplicatesAsync(CancellationToken, params string[])
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync(System.Threading.CancellationToken, params string[])
  type: Method
  assemblies:
  - SoDataBase.BusinessLogic
  namespace: SuperOffice.CRM.Data.Util.Duplicates
  syntax:
    content: Task<DuplicateEntry[]> GetDuplicatesAsync(CancellationToken cancellationToken, params string[] value)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    - id: value
      type: System.String[]
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]}
    content.vb: Function GetDuplicatesAsync(cancellationToken As CancellationToken, ParamArray value As String()) As Task(Of DuplicateEntry())
  overload: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync*
  nameWithType.vb: IDuplicateDetector.GetDuplicatesAsync(CancellationToken, ParamArray String())
  fullName.vb: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync(System.Threading.CancellationToken, ParamArray String())
  name.vb: GetDuplicatesAsync(CancellationToken, ParamArray String())
references:
- uid: SuperOffice.CRM.Data.Util.Duplicates
  commentId: N:SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Data.Util.Duplicates
  nameWithType: SuperOffice.CRM.Data.Util.Duplicates
  fullName: SuperOffice.CRM.Data.Util.Duplicates
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Data
    name: Data
    isExternal: true
    href: SuperOffice.CRM.Data.html
  - name: .
  - uid: SuperOffice.CRM.Data.Util
    name: Util
    isExternal: true
    href: SuperOffice.CRM.Data.Util.html
  - name: .
  - uid: SuperOffice.CRM.Data.Util.Duplicates
    name: Duplicates
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Data
    name: Data
    isExternal: true
    href: SuperOffice.CRM.Data.html
  - name: .
  - uid: SuperOffice.CRM.Data.Util
    name: Util
    isExternal: true
    href: SuperOffice.CRM.Data.Util.html
  - name: .
  - uid: SuperOffice.CRM.Data.Util.Duplicates
    name: Duplicates
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.html
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<IDuplicateDetector, To>(IDuplicateDetector)
  nameWithType: EnumUtil.MapEnums<IDuplicateDetector, To>(IDuplicateDetector)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector, To>(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
  nameWithType.vb: EnumUtil.MapEnums(Of IDuplicateDetector, To)(IDuplicateDetector)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector, To)(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
  name.vb: MapEnums(Of IDuplicateDetector, To)(IDuplicateDetector)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: )
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<IDuplicateDetector, To>(IDuplicateDetector)
  nameWithType: Converters.MapEnums<IDuplicateDetector, To>(IDuplicateDetector)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector, To>(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
  nameWithType.vb: Converters.MapEnums(Of IDuplicateDetector, To)(IDuplicateDetector)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector, To)(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
  name.vb: MapEnums(Of IDuplicateDetector, To)(IDuplicateDetector)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector
    name: IDuplicateDetector
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync
  isExternal: true
  href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html#SuperOffice_CRM_Data_Util_Duplicates_IDuplicateDetector_CreateNewEntryAsync_SuperOffice_CRM_Data_Util_Duplicates_DuplicateEntry_
  name: CreateNewEntryAsync
  nameWithType: IDuplicateDetector.CreateNewEntryAsync
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.CreateNewEntryAsync
- uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  commentId: T:SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
  parent: SuperOffice.CRM.Data.Util.Duplicates
  isExternal: true
  href: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.html
  name: DuplicateEntry
  nameWithType: DuplicateEntry
  fullName: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync
  isExternal: true
  href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html#SuperOffice_CRM_Data_Util_Duplicates_IDuplicateDetector_GetAvailableRulesAsync_System_Threading_CancellationToken_
  name: GetAvailableRulesAsync
  nameWithType: IDuplicateDetector.GetAvailableRulesAsync
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetAvailableRulesAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IDuplicateRule[]>
  nameWithType: Task<IDuplicateRule[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule[]>
  nameWithType.vb: Task(Of IDuplicateRule())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule())
  name.vb: Task(Of IDuplicateRule())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
    name: IDuplicateRule
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule
    name: IDuplicateRule
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateRule.html
  - name: (
  - name: )
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync*
  commentId: Overload:SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync
  isExternal: true
  href: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.html#SuperOffice_CRM_Data_Util_Duplicates_IDuplicateDetector_GetDuplicatesAsync_System_Threading_CancellationToken_System_String___
  name: GetDuplicatesAsync
  nameWithType: IDuplicateDetector.GetDuplicatesAsync
  fullName: SuperOffice.CRM.Data.Util.Duplicates.IDuplicateDetector.GetDuplicatesAsync
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]}
  commentId: T:System.Threading.Tasks.Task{SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<DuplicateEntry[]>
  nameWithType: Task<DuplicateEntry[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry[]>
  nameWithType.vb: Task(Of DuplicateEntry())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry())
  name.vb: Task(Of DuplicateEntry())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.html
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry
    name: DuplicateEntry
    isExternal: true
    href: SuperOffice.CRM.Data.Util.Duplicates.DuplicateEntry.html
  - name: (
  - name: )
  - name: )
