### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SoSqlParameter
  commentId: T:SuperOffice.Data.SoSqlParameter
  id: SoSqlParameter
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.SoSqlParameter._parameterCollection
  - SuperOffice.Data.SoSqlParameter._sql
  - SuperOffice.Data.SoSqlParameter.CreateParameter(System.String,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.SoSqlParameter.CreateParameter(System.String,System.Object)
  langs:
  - csharp
  - vb
  name: SoSqlParameter
  nameWithType: SoSqlParameter
  fullName: SuperOffice.Data.SoSqlParameter
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  summary: "\nBase class\nThe purpose of this class is to return arguments to a sqlcommand.\nIt contains a generated sql query and a collection of <xref href=\"SuperOffice.Data.SoParameter\" data-throw-if-not-resolved=\"false\"></xref>.\nIn order to create a command parametercollection the class uses\n<xref href=\"SuperOffice.Data.SoSqlParameter.AddParametersToCommand(System.Data.IDbCommand)\" data-throw-if-not-resolved=\"false\"></xref> with a parameter <xref href=\"System.Data.IDbCommand\" data-throw-if-not-resolved=\"false\"></xref> object to build the\ncollection\n"
  syntax:
    content: public class SoSqlParameter
    content.vb: Public Class SoSqlParameter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SoSqlParameter.EnumUtil.MapEnums``2
  - SuperOffice.Data.SoSqlParameter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.SoSqlParameter._sql
  commentId: F:SuperOffice.Data.SoSqlParameter._sql
  id: _sql
  parent: SuperOffice.Data.SoSqlParameter
  langs:
  - csharp
  - vb
  name: _sql
  nameWithType: SoSqlParameter._sql
  fullName: SuperOffice.Data.SoSqlParameter._sql
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: protected string _sql
    return:
      type: System.String
    content.vb: Protected _sql As String
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Data.SoSqlParameter._parameterCollection
  commentId: F:SuperOffice.Data.SoSqlParameter._parameterCollection
  id: _parameterCollection
  parent: SuperOffice.Data.SoSqlParameter
  langs:
  - csharp
  - vb
  name: _parameterCollection
  nameWithType: SoSqlParameter._parameterCollection
  fullName: SuperOffice.Data.SoSqlParameter._parameterCollection
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: protected ArrayList _parameterCollection
    return:
      type: System.Collections.ArrayList
    content.vb: Protected _parameterCollection As ArrayList
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Data.SoSqlParameter.CreateParameter(System.String,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.SoSqlParameter.CreateParameter(System.String,SuperOffice.Data.FieldDataType)
  id: CreateParameter(System.String,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.SoSqlParameter
  langs:
  - csharp
  - vb
  name: CreateParameter(String, FieldDataType)
  nameWithType: SoSqlParameter.CreateParameter(String, FieldDataType)
  fullName: SuperOffice.Data.SoSqlParameter.CreateParameter(System.String, SuperOffice.Data.FieldDataType)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: protected virtual IDbDataParameter CreateParameter(string parameterName, FieldDataType fieldDataType)
    parameters:
    - id: parameterName
      type: System.String
    - id: fieldDataType
      type: SuperOffice.Data.FieldDataType
    return:
      type: System.Data.IDbDataParameter
    content.vb: Protected Overridable Function CreateParameter(parameterName As String, fieldDataType As FieldDataType) As IDbDataParameter
  overload: SuperOffice.Data.SoSqlParameter.CreateParameter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: SuperOffice.Data.SoSqlParameter.CreateParameter(System.String,System.Object)
  commentId: M:SuperOffice.Data.SoSqlParameter.CreateParameter(System.String,System.Object)
  id: CreateParameter(System.String,System.Object)
  parent: SuperOffice.Data.SoSqlParameter
  langs:
  - csharp
  - vb
  name: CreateParameter(String, Object)
  nameWithType: SoSqlParameter.CreateParameter(String, Object)
  fullName: SuperOffice.Data.SoSqlParameter.CreateParameter(System.String, System.Object)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data
  syntax:
    content: protected virtual IDbDataParameter CreateParameter(string parameterName, object value)
    parameters:
    - id: parameterName
      type: System.String
    - id: value
      type: System.Object
    return:
      type: System.Data.IDbDataParameter
    content.vb: Protected Overridable Function CreateParameter(parameterName As String, value As Object) As IDbDataParameter
  overload: SuperOffice.Data.SoSqlParameter.CreateParameter*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoSqlParameter.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<SoSqlParameter, To>()
  nameWithType: EnumUtil.MapEnums<SoSqlParameter, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SoSqlParameter, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of SoSqlParameter, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SoSqlParameter, To)()
  name.vb: MapEnums(Of SoSqlParameter, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<SoSqlParameter, To>
    nameWithType: EnumUtil.MapEnums<SoSqlParameter, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SoSqlParameter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of SoSqlParameter, To)
    nameWithType: EnumUtil.MapEnums(Of SoSqlParameter, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SoSqlParameter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SoSqlParameter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<SoSqlParameter, To>()
  nameWithType: Converters.MapEnums<SoSqlParameter, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoSqlParameter, To>()
  nameWithType.vb: Converters.MapEnums(Of SoSqlParameter, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoSqlParameter, To)()
  name.vb: MapEnums(Of SoSqlParameter, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<SoSqlParameter, To>
    nameWithType: Converters.MapEnums<SoSqlParameter, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SoSqlParameter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of SoSqlParameter, To)
    nameWithType: Converters.MapEnums(Of SoSqlParameter, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SoSqlParameter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: true
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: SuperOffice.Data.SoSqlParameter.CreateParameter*
  commentId: Overload:SuperOffice.Data.SoSqlParameter.CreateParameter
  isExternal: true
  name: CreateParameter
  nameWithType: SoSqlParameter.CreateParameter
  fullName: SuperOffice.Data.SoSqlParameter.CreateParameter
- uid: SuperOffice.Data.FieldDataType
  commentId: T:SuperOffice.Data.FieldDataType
  parent: SuperOffice.Data
  isExternal: true
  name: FieldDataType
  nameWithType: FieldDataType
  fullName: SuperOffice.Data.FieldDataType
- uid: System.Data.IDbDataParameter
  isExternal: true
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
