### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  commentId: T:SuperOffice.CRM.Notification.IPushNotificationServiceManager
  id: IPushNotificationServiceManager
  parent: SuperOffice.CRM.Notification
  children:
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(CentralServices.Data.Pocket.PushNotificationType,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationType,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync(SuperOffice.Data.NotificationPlatform,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync(System.TimeSpan,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync(SuperOffice.CRM.Notification.DeviceInfo,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Int32,CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount(System.String,System.Int32,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: IPushNotificationServiceManager
  nameWithType: IPushNotificationServiceManager
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  type: Interface
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: public interface IPushNotificationServiceManager
    content.vb: Public Interface IPushNotificationServiceManager
  extensionMethods:
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Notification.IPushNotificationServiceManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationType,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationType,System.Boolean,System.Threading.CancellationToken)
  id: GetPushNotificationRowsAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationType,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: GetPushNotificationRowsAsync(IEnumerable<Int32>, PushNotificationType, Boolean, CancellationToken)
  nameWithType: IPushNotificationServiceManager.GetPushNotificationRowsAsync(IEnumerable<Int32>, PushNotificationType, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(System.Collections.Generic.IEnumerable<System.Int32>, CentralServices.Data.Pocket.PushNotificationType, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: IAsyncEnumerable<PushNotificationServiceRow> GetPushNotificationRowsAsync(IEnumerable<int> associateIds, PushNotificationType type, bool overrideTagSettings, CancellationToken cancellationToken = null)
    parameters:
    - id: associateIds
      type: System.Collections.Generic.IEnumerable{System.Int32}
    - id: type
      type: CentralServices.Data.Pocket.PushNotificationType
    - id: overrideTagSettings
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}
    content.vb: Function GetPushNotificationRowsAsync(associateIds As IEnumerable(Of Integer), type As PushNotificationType, overrideTagSettings As Boolean, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of PushNotificationServiceRow)
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync*
  nameWithType.vb: IPushNotificationServiceManager.GetPushNotificationRowsAsync(IEnumerable(Of Int32), PushNotificationType, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(System.Collections.Generic.IEnumerable(Of System.Int32), CentralServices.Data.Pocket.PushNotificationType, System.Boolean, System.Threading.CancellationToken)
  name.vb: GetPushNotificationRowsAsync(IEnumerable(Of Int32), PushNotificationType, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(CentralServices.Data.Pocket.PushNotificationType,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(CentralServices.Data.Pocket.PushNotificationType,System.Threading.CancellationToken)
  id: GetPushNotificationRowsAsync(CentralServices.Data.Pocket.PushNotificationType,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: GetPushNotificationRowsAsync(PushNotificationType, CancellationToken)
  nameWithType: IPushNotificationServiceManager.GetPushNotificationRowsAsync(PushNotificationType, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync(CentralServices.Data.Pocket.PushNotificationType, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task<IEnumerable<PushNotificationServiceRow>> GetPushNotificationRowsAsync(PushNotificationType type, CancellationToken cancellationToken = null)
    parameters:
    - id: type
      type: CentralServices.Data.Pocket.PushNotificationType
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}}
    content.vb: Function GetPushNotificationRowsAsync(type As PushNotificationType, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of PushNotificationServiceRow))
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  id: GetRegisteredDevicesAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: GetRegisteredDevicesAsync(Int32, CancellationToken)
  nameWithType: IPushNotificationServiceManager.GetRegisteredDevicesAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: IAsyncEnumerable<DeviceInfo> GetRegisteredDevicesAsync(int associateId, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Notification.DeviceInfo}
    content.vb: Function GetRegisteredDevicesAsync(associateId As Integer, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of DeviceInfo)
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: GetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: GetTagsAsync(Int32, String, CancellationToken)
  nameWithType: IPushNotificationServiceManager.GetTagsAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task<string> GetTagsAsync(int associateId, string deviceIdentifier, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: deviceIdentifier
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetTagsAsync(associateId As Integer, deviceIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.String,System.Threading.CancellationToken)
  id: GetTagsAsync(System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: GetTagsAsync(String, CancellationToken)
  nameWithType: IPushNotificationServiceManager.GetTagsAsync(String, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync(System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task<string> GetTagsAsync(string deviceIdentifier, CancellationToken cancellationToken = null)
    parameters:
    - id: deviceIdentifier
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.String}
    content.vb: Function GetTagsAsync(deviceIdentifier As String, cancellationToken As CancellationToken = Nothing) As Task(Of String)
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync(SuperOffice.Data.NotificationPlatform,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync(SuperOffice.Data.NotificationPlatform,System.Threading.CancellationToken)
  id: PNSHandlesAsync(SuperOffice.Data.NotificationPlatform,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: PNSHandlesAsync(NotificationPlatform, CancellationToken)
  nameWithType: IPushNotificationServiceManager.PNSHandlesAsync(NotificationPlatform, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync(SuperOffice.Data.NotificationPlatform, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task<IEnumerable<string>> PNSHandlesAsync(NotificationPlatform platform, CancellationToken cancellationToken = null)
    parameters:
    - id: platform
      type: SuperOffice.Data.NotificationPlatform
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
    content.vb: Function PNSHandlesAsync(platform As NotificationPlatform, cancellationToken As CancellationToken = Nothing) As Task(Of IEnumerable(Of String))
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync(System.TimeSpan,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync(System.TimeSpan,System.Threading.CancellationToken)
  id: PurgeOldDevicesAsync(System.TimeSpan,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: PurgeOldDevicesAsync(TimeSpan, CancellationToken)
  nameWithType: IPushNotificationServiceManager.PurgeOldDevicesAsync(TimeSpan, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task PurgeOldDevicesAsync(TimeSpan age, CancellationToken cancellationToken = null)
    parameters:
    - id: age
      type: System.TimeSpan
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function PurgeOldDevicesAsync(age As TimeSpan, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync(SuperOffice.CRM.Notification.DeviceInfo,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync(SuperOffice.CRM.Notification.DeviceInfo,System.Threading.CancellationToken)
  id: RegisterDeviceAsync(SuperOffice.CRM.Notification.DeviceInfo,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: RegisterDeviceAsync(DeviceInfo, CancellationToken)
  nameWithType: IPushNotificationServiceManager.RegisterDeviceAsync(DeviceInfo, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync(SuperOffice.CRM.Notification.DeviceInfo, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task RegisterDeviceAsync(DeviceInfo deviceInfo, CancellationToken cancellationToken = null)
    parameters:
    - id: deviceInfo
      type: SuperOffice.CRM.Notification.DeviceInfo
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function RegisterDeviceAsync(deviceInfo As DeviceInfo, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  id: SendMessageAsync(System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SendMessageAsync(IAsyncEnumerable<PushNotificationServiceRow>, PushNotificationMessage, Boolean, CancellationToken)
  nameWithType: IPushNotificationServiceManager.SendMessageAsync(IAsyncEnumerable<PushNotificationServiceRow>, PushNotificationMessage, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.Rows.PushNotificationServiceRow>, CentralServices.Data.Pocket.PushNotificationMessage, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task SendMessageAsync(IAsyncEnumerable<PushNotificationServiceRow> rows, PushNotificationMessage message, bool usePredefinedMessageValues, CancellationToken cancellationToken = null)
    parameters:
    - id: rows
      type: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}
    - id: message
      type: CentralServices.Data.Pocket.PushNotificationMessage
    - id: usePredefinedMessageValues
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SendMessageAsync(rows As IAsyncEnumerable(Of PushNotificationServiceRow), message As PushNotificationMessage, usePredefinedMessageValues As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync*
  nameWithType.vb: IPushNotificationServiceManager.SendMessageAsync(IAsyncEnumerable(Of PushNotificationServiceRow), PushNotificationMessage, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.Rows.PushNotificationServiceRow), CentralServices.Data.Pocket.PushNotificationMessage, System.Boolean, System.Threading.CancellationToken)
  name.vb: SendMessageAsync(IAsyncEnumerable(Of PushNotificationServiceRow), PushNotificationMessage, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  id: SendMessageAsync(System.Collections.Generic.IEnumerable{System.Int32},CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SendMessageAsync(IEnumerable<Int32>, PushNotificationMessage, Boolean, Boolean, CancellationToken)
  nameWithType: IPushNotificationServiceManager.SendMessageAsync(IEnumerable<Int32>, PushNotificationMessage, Boolean, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IEnumerable<System.Int32>, CentralServices.Data.Pocket.PushNotificationMessage, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task SendMessageAsync(IEnumerable<int> associateIds, PushNotificationMessage message, bool usePredefinedMessageValues, bool overrideTagSettings, CancellationToken cancellationToken = null)
    parameters:
    - id: associateIds
      type: System.Collections.Generic.IEnumerable{System.Int32}
    - id: message
      type: CentralServices.Data.Pocket.PushNotificationMessage
    - id: usePredefinedMessageValues
      type: System.Boolean
    - id: overrideTagSettings
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SendMessageAsync(associateIds As IEnumerable(Of Integer), message As PushNotificationMessage, usePredefinedMessageValues As Boolean, overrideTagSettings As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync*
  nameWithType.vb: IPushNotificationServiceManager.SendMessageAsync(IEnumerable(Of Int32), PushNotificationMessage, Boolean, Boolean, CancellationToken)
  fullName.vb: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Collections.Generic.IEnumerable(Of System.Int32), CentralServices.Data.Pocket.PushNotificationMessage, System.Boolean, System.Boolean, System.Threading.CancellationToken)
  name.vb: SendMessageAsync(IEnumerable(Of Int32), PushNotificationMessage, Boolean, Boolean, CancellationToken)
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Int32,CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Int32,CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  id: SendMessageAsync(System.Int32,CentralServices.Data.Pocket.PushNotificationMessage,System.Boolean,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SendMessageAsync(Int32, PushNotificationMessage, Boolean, CancellationToken)
  nameWithType: IPushNotificationServiceManager.SendMessageAsync(Int32, PushNotificationMessage, Boolean, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync(System.Int32, CentralServices.Data.Pocket.PushNotificationMessage, System.Boolean, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task SendMessageAsync(int associateId, PushNotificationMessage message, bool overrideTagSettings, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: message
      type: CentralServices.Data.Pocket.PushNotificationMessage
    - id: overrideTagSettings
      type: System.Boolean
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SendMessageAsync(associateId As Integer, message As PushNotificationMessage, overrideTagSettings As Boolean, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: SetTagsAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SetTagsAsync(Int32, String, CancellationToken)
  nameWithType: IPushNotificationServiceManager.SetTagsAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task SetTagsAsync(int associateId, string tags, CancellationToken cancellationToken = null)
    parameters:
    - id: associateId
      type: System.Int32
    - id: tags
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetTagsAsync(associateId As Integer, tags As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.String,System.String,System.Threading.CancellationToken)
  id: SetTagsAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SetTagsAsync(String, String, CancellationToken)
  nameWithType: IPushNotificationServiceManager.SetTagsAsync(String, String, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync(System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task SetTagsAsync(string deviceIdentifier, string tags, CancellationToken cancellationToken = null)
    parameters:
    - id: deviceIdentifier
      type: System.String
    - id: tags
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function SetTagsAsync(deviceIdentifier As String, tags As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount(System.String,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount(System.String,System.Int32,System.Threading.CancellationToken)
  id: UpdateSentNotificationCount(System.String,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: UpdateSentNotificationCount(String, Int32, CancellationToken)
  nameWithType: IPushNotificationServiceManager.UpdateSentNotificationCount(String, Int32, CancellationToken)
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount(System.String, System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: Task UpdateSentNotificationCount(string deviceIdentifier, int notificationCount, CancellationToken cancellationToken = null)
    parameters:
    - id: deviceIdentifier
      type: System.String
    - id: notificationCount
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Function UpdateSentNotificationCount(deviceIdentifier As String, notificationCount As Integer, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount*
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  commentId: P:SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  id: IncludeUpdatedBadgeCount
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: IncludeUpdatedBadgeCount
  nameWithType: IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: bool IncludeUpdatedBadgeCount { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IncludeUpdatedBadgeCount As Boolean
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself
  commentId: P:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself
  id: SendMessageToOurself
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SendMessageToOurself
  nameWithType: IPushNotificationServiceManager.SendMessageToOurself
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: bool SendMessageToOurself { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property SendMessageToOurself As Boolean
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions
  commentId: P:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions
  id: SilentExceptions
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: SilentExceptions
  nameWithType: IPushNotificationServiceManager.SilentExceptions
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: bool SilentExceptions { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property SilentExceptions As Boolean
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions*
  modifiers.csharp:
  - get
  - set
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters
  commentId: P:SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters
  id: UpdateSentMessageCounters
  parent: SuperOffice.CRM.Notification.IPushNotificationServiceManager
  langs:
  - csharp
  - vb
  name: UpdateSentMessageCounters
  nameWithType: IPushNotificationServiceManager.UpdateSentMessageCounters
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Notification
  syntax:
    content: bool UpdateSentMessageCounters { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UpdateSentMessageCounters As Boolean
  overload: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters*
  modifiers.csharp:
  - get
  - set
references:
- uid: SuperOffice.CRM.Notification
  commentId: N:SuperOffice.CRM.Notification
  isExternal: true
  name: SuperOffice.CRM.Notification
  nameWithType: SuperOffice.CRM.Notification
  fullName: SuperOffice.CRM.Notification
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IPushNotificationServiceManager, To>()
  nameWithType: EnumUtil.MapEnums<IPushNotificationServiceManager, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Notification.IPushNotificationServiceManager, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IPushNotificationServiceManager, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Notification.IPushNotificationServiceManager, To)()
  name.vb: MapEnums(Of IPushNotificationServiceManager, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IPushNotificationServiceManager, To>
    nameWithType: EnumUtil.MapEnums<IPushNotificationServiceManager, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Notification.IPushNotificationServiceManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IPushNotificationServiceManager, To)
    nameWithType: EnumUtil.MapEnums(Of IPushNotificationServiceManager, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Notification.IPushNotificationServiceManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IPushNotificationServiceManager, To>()
  nameWithType: Converters.MapEnums<IPushNotificationServiceManager, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Notification.IPushNotificationServiceManager, To>()
  nameWithType.vb: Converters.MapEnums(Of IPushNotificationServiceManager, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Notification.IPushNotificationServiceManager, To)()
  name.vb: MapEnums(Of IPushNotificationServiceManager, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IPushNotificationServiceManager, To>
    nameWithType: Converters.MapEnums<IPushNotificationServiceManager, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Notification.IPushNotificationServiceManager, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IPushNotificationServiceManager, To)
    nameWithType: Converters.MapEnums(Of IPushNotificationServiceManager, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Notification.IPushNotificationServiceManager, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync
  isExternal: true
  name: GetPushNotificationRowsAsync
  nameWithType: IPushNotificationServiceManager.GetPushNotificationRowsAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetPushNotificationRowsAsync
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: '!:System.Collections.Generic.IEnumerable{System.Int32}'
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: CentralServices.Data.Pocket.PushNotificationType
  isExternal: true
  name: PushNotificationType
  nameWithType: PushNotificationType
  fullName: CentralServices.Data.Pocket.PushNotificationType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<PushNotificationServiceRow>
  nameWithType: IAsyncEnumerable<PushNotificationServiceRow>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.Rows.PushNotificationServiceRow>
  nameWithType.vb: IAsyncEnumerable(Of PushNotificationServiceRow)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.Rows.PushNotificationServiceRow)
  name.vb: IAsyncEnumerable(Of PushNotificationServiceRow)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.PushNotificationServiceRow
    name: PushNotificationServiceRow
    nameWithType: PushNotificationServiceRow
    fullName: SuperOffice.CRM.Rows.PushNotificationServiceRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.PushNotificationServiceRow
    name: PushNotificationServiceRow
    nameWithType: PushNotificationServiceRow
    fullName: SuperOffice.CRM.Rows.PushNotificationServiceRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: System.Collections.Generic.IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: System.Collections.Generic.IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: System.Collections.Generic.IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{SuperOffice.CRM.Rows.PushNotificationServiceRow}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<PushNotificationServiceRow>>
  nameWithType: Task<IEnumerable<PushNotificationServiceRow>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<SuperOffice.CRM.Rows.PushNotificationServiceRow>>
  nameWithType.vb: Task(Of IEnumerable(Of PushNotificationServiceRow))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Rows.PushNotificationServiceRow))
  name.vb: Task(Of IEnumerable(Of PushNotificationServiceRow))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.PushNotificationServiceRow
    name: PushNotificationServiceRow
    nameWithType: PushNotificationServiceRow
    fullName: SuperOffice.CRM.Rows.PushNotificationServiceRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.PushNotificationServiceRow
    name: PushNotificationServiceRow
    nameWithType: PushNotificationServiceRow
    fullName: SuperOffice.CRM.Rows.PushNotificationServiceRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync
  isExternal: true
  name: GetRegisteredDevicesAsync
  nameWithType: IPushNotificationServiceManager.GetRegisteredDevicesAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetRegisteredDevicesAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Notification.DeviceInfo}
  commentId: '!:System.Collections.Generic.IAsyncEnumerable{SuperOffice.CRM.Notification.DeviceInfo}'
  definition: System.Collections.Generic.IAsyncEnumerable`1
  name: IAsyncEnumerable<DeviceInfo>
  nameWithType: IAsyncEnumerable<DeviceInfo>
  fullName: System.Collections.Generic.IAsyncEnumerable<SuperOffice.CRM.Notification.DeviceInfo>
  nameWithType.vb: IAsyncEnumerable(Of DeviceInfo)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of SuperOffice.CRM.Notification.DeviceInfo)
  name.vb: IAsyncEnumerable(Of DeviceInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Notification.DeviceInfo
    name: DeviceInfo
    nameWithType: DeviceInfo
    fullName: SuperOffice.CRM.Notification.DeviceInfo
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: System.Collections.Generic.IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Notification.DeviceInfo
    name: DeviceInfo
    nameWithType: DeviceInfo
    fullName: SuperOffice.CRM.Notification.DeviceInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync
  isExternal: true
  name: GetTagsAsync
  nameWithType: IPushNotificationServiceManager.GetTagsAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.GetTagsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task{System.String}
  commentId: '!:System.Threading.Tasks.Task{System.String}'
  definition: System.Threading.Tasks.Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync
  isExternal: true
  name: PNSHandlesAsync
  nameWithType: IPushNotificationServiceManager.PNSHandlesAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PNSHandlesAsync
- uid: SuperOffice.Data.NotificationPlatform
  commentId: T:SuperOffice.Data.NotificationPlatform
  parent: SuperOffice.Data
  isExternal: true
  name: NotificationPlatform
  nameWithType: NotificationPlatform
  fullName: SuperOffice.Data.NotificationPlatform
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}
  commentId: '!:System.Threading.Tasks.Task{System.Collections.Generic.IEnumerable{System.String}}'
  definition: System.Threading.Tasks.Task`1
  name: Task<IEnumerable<String>>
  nameWithType: Task<IEnumerable<String>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IEnumerable<System.String>>
  nameWithType.vb: Task(Of IEnumerable(Of String))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Task(Of IEnumerable(Of String))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync
  isExternal: true
  name: PurgeOldDevicesAsync
  nameWithType: IPushNotificationServiceManager.PurgeOldDevicesAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.PurgeOldDevicesAsync
- uid: System.TimeSpan
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync
  isExternal: true
  name: RegisterDeviceAsync
  nameWithType: IPushNotificationServiceManager.RegisterDeviceAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.RegisterDeviceAsync
- uid: SuperOffice.CRM.Notification.DeviceInfo
  commentId: T:SuperOffice.CRM.Notification.DeviceInfo
  parent: SuperOffice.CRM.Notification
  isExternal: true
  name: DeviceInfo
  nameWithType: DeviceInfo
  fullName: SuperOffice.CRM.Notification.DeviceInfo
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync
  isExternal: true
  name: SendMessageAsync
  nameWithType: IPushNotificationServiceManager.SendMessageAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageAsync
- uid: CentralServices.Data.Pocket.PushNotificationMessage
  isExternal: true
  name: PushNotificationMessage
  nameWithType: PushNotificationMessage
  fullName: CentralServices.Data.Pocket.PushNotificationMessage
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync
  isExternal: true
  name: SetTagsAsync
  nameWithType: IPushNotificationServiceManager.SetTagsAsync
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SetTagsAsync
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount
  isExternal: true
  name: UpdateSentNotificationCount
  nameWithType: IPushNotificationServiceManager.UpdateSentNotificationCount
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentNotificationCount
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  isExternal: true
  name: IncludeUpdatedBadgeCount
  nameWithType: IPushNotificationServiceManager.IncludeUpdatedBadgeCount
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.IncludeUpdatedBadgeCount
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself
  isExternal: true
  name: SendMessageToOurself
  nameWithType: IPushNotificationServiceManager.SendMessageToOurself
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SendMessageToOurself
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions
  isExternal: true
  name: SilentExceptions
  nameWithType: IPushNotificationServiceManager.SilentExceptions
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.SilentExceptions
- uid: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters*
  commentId: Overload:SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters
  isExternal: true
  name: UpdateSentMessageCounters
  nameWithType: IPushNotificationServiceManager.UpdateSentMessageCounters
  fullName: SuperOffice.CRM.Notification.IPushNotificationServiceManager.UpdateSentMessageCounters
