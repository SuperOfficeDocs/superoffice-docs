### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.EFieldRight
  commentId: T:SuperOffice.Data.EFieldRight
  id: EFieldRight
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.EFieldRight.FULL
  - SuperOffice.Data.EFieldRight.None
  - SuperOffice.Data.EFieldRight.Read
  - SuperOffice.Data.EFieldRight.UIHintMandatory
  - SuperOffice.Data.EFieldRight.UIHintReadOnly
  - SuperOffice.Data.EFieldRight.UIHints
  - SuperOffice.Data.EFieldRight.Unused1
  - SuperOffice.Data.EFieldRight.Unused2
  - SuperOffice.Data.EFieldRight.Unused3
  - SuperOffice.Data.EFieldRight.Unused4
  - SuperOffice.Data.EFieldRight.Update
  - SuperOffice.Data.EFieldRight.Write
  langs:
  - csharp
  - vb
  name: EFieldRight
  nameWithType: EFieldRight
  fullName: SuperOffice.Data.EFieldRight
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nAccess levels to a single field. Read and/or write.\nThis Enum consists of flag values that can be combined.\n"
  syntax:
    content: >-
      [Flags]

      public enum EFieldRight
    content.vb: >-
      <Flags>

      Public Enum EFieldRight
  extensionMethods:
  - SuperOffice.Data.EFieldRight.EnumUtil.MapEnums``2
  - SuperOffice.Data.EFieldRight.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.EFieldRight)
  - SuperOffice.Data.EFieldRight.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.EFieldRight.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  attributes:
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.EFieldRight.None
  commentId: F:SuperOffice.Data.EFieldRight.None
  id: None
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: None
  nameWithType: EFieldRight.None
  fullName: SuperOffice.Data.EFieldRight.None
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: Hidden from user.\n"
  syntax:
    content: None = 0
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Read
  commentId: F:SuperOffice.Data.EFieldRight.Read
  id: Read
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Read
  nameWithType: EFieldRight.Read
  fullName: SuperOffice.Data.EFieldRight.Read
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: Read-only right\n"
  syntax:
    content: Read = 1
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Write
  commentId: F:SuperOffice.Data.EFieldRight.Write
  id: Write
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Write
  nameWithType: EFieldRight.Write
  fullName: SuperOffice.Data.EFieldRight.Write
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: Write-only (not terribly useful)\n"
  syntax:
    content: Write = 2
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Update
  commentId: F:SuperOffice.Data.EFieldRight.Update
  id: Update
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Update
  nameWithType: EFieldRight.Update
  fullName: SuperOffice.Data.EFieldRight.Update
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: Read + Write rights combined\n"
  syntax:
    content: Update = 3
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Unused1
  commentId: F:SuperOffice.Data.EFieldRight.Unused1
  id: Unused1
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Unused1
  nameWithType: EFieldRight.Unused1
  fullName: SuperOffice.Data.EFieldRight.Unused1
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: \n"
  syntax:
    content: Unused1 = 4
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Unused2
  commentId: F:SuperOffice.Data.EFieldRight.Unused2
  id: Unused2
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Unused2
  nameWithType: EFieldRight.Unused2
  fullName: SuperOffice.Data.EFieldRight.Unused2
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n8: \n"
  syntax:
    content: Unused2 = 8
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Unused3
  commentId: F:SuperOffice.Data.EFieldRight.Unused3
  id: Unused3
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Unused3
  nameWithType: EFieldRight.Unused3
  fullName: SuperOffice.Data.EFieldRight.Unused3
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n16: \n"
  syntax:
    content: Unused3 = 16
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.Unused4
  commentId: F:SuperOffice.Data.EFieldRight.Unused4
  id: Unused4
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: Unused4
  nameWithType: EFieldRight.Unused4
  fullName: SuperOffice.Data.EFieldRight.Unused4
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n32: \n"
  syntax:
    content: Unused4 = 32
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.UIHintMandatory
  commentId: F:SuperOffice.Data.EFieldRight.UIHintMandatory
  id: UIHintMandatory
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: UIHintMandatory
  nameWithType: EFieldRight.UIHintMandatory
  fullName: SuperOffice.Data.EFieldRight.UIHintMandatory
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n64: Field must be filled out (not blank)\n"
  syntax:
    content: UIHintMandatory = 64
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.UIHintReadOnly
  commentId: F:SuperOffice.Data.EFieldRight.UIHintReadOnly
  id: UIHintReadOnly
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: UIHintReadOnly
  nameWithType: EFieldRight.UIHintReadOnly
  fullName: SuperOffice.Data.EFieldRight.UIHintReadOnly
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n128: Field can only be read, not updated, in the user interface.\n"
  syntax:
    content: UIHintReadOnly = 128
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.FULL
  commentId: F:SuperOffice.Data.EFieldRight.FULL
  id: FULL
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: FULL
  nameWithType: EFieldRight.FULL
  fullName: SuperOffice.Data.EFieldRight.FULL
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: All possible rights (same as Update = Read + Write)\n"
  syntax:
    content: FULL = 3
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.EFieldRight.UIHints
  commentId: F:SuperOffice.Data.EFieldRight.UIHints
  id: UIHints
  parent: SuperOffice.Data.EFieldRight
  langs:
  - csharp
  - vb
  name: UIHints
  nameWithType: EFieldRight.UIHints
  fullName: SuperOffice.Data.EFieldRight.UIHints
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n192: Rights only applied in the user interface.  These rights are threated as deny rights.\n"
  syntax:
    content: UIHints = 192
    return:
      type: SuperOffice.Data.EFieldRight
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.EFieldRight.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<EFieldRight, To>()
  nameWithType: EnumUtil.MapEnums<EFieldRight, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.EFieldRight, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of EFieldRight, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.EFieldRight, To)()
  name.vb: MapEnums(Of EFieldRight, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<EFieldRight, To>
    nameWithType: EnumUtil.MapEnums<EFieldRight, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.EFieldRight, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of EFieldRight, To)
    nameWithType: EnumUtil.MapEnums(Of EFieldRight, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.EFieldRight, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.EFieldRight.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.EFieldRight)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<EFieldRight>(EFieldRight)
  nameWithType: ObjectExtensions.AssignByReflection<EFieldRight>(EFieldRight)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.EFieldRight>(SuperOffice.Data.EFieldRight)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of EFieldRight)(EFieldRight)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.EFieldRight)(SuperOffice.Data.EFieldRight)
  name.vb: AssignByReflection(Of EFieldRight)(EFieldRight)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<EFieldRight>
    nameWithType: ObjectExtensions.AssignByReflection<EFieldRight>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.EFieldRight>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of EFieldRight)
    nameWithType: ObjectExtensions.AssignByReflection(Of EFieldRight)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.EFieldRight)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.EFieldRight
    name: EFieldRight
    nameWithType: EFieldRight
    fullName: SuperOffice.Data.EFieldRight
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.EFieldRight.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<EFieldRight>()
  nameWithType: ObjectExtensions.GraphCopy<EFieldRight>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.EFieldRight>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of EFieldRight)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.EFieldRight)()
  name.vb: GraphCopy(Of EFieldRight)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<EFieldRight>
    nameWithType: ObjectExtensions.GraphCopy<EFieldRight>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.EFieldRight>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of EFieldRight)
    nameWithType: ObjectExtensions.GraphCopy(Of EFieldRight)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.EFieldRight)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.EFieldRight.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<EFieldRight, To>()
  nameWithType: Converters.MapEnums<EFieldRight, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.EFieldRight, To>()
  nameWithType.vb: Converters.MapEnums(Of EFieldRight, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.EFieldRight, To)()
  name.vb: MapEnums(Of EFieldRight, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<EFieldRight, To>
    nameWithType: Converters.MapEnums<EFieldRight, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.EFieldRight, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of EFieldRight, To)
    nameWithType: Converters.MapEnums(Of EFieldRight, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.EFieldRight, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.EFieldRight
  commentId: T:SuperOffice.Data.EFieldRight
  parent: SuperOffice.Data
  isExternal: true
  name: EFieldRight
  nameWithType: EFieldRight
  fullName: SuperOffice.Data.EFieldRight
