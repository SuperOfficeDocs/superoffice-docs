### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  commentId: T:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  id: FreeTextWordsBulkImportFacade
  parent: SuperOffice.CRM.Rows
  children:
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.#ctor
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.op_Implicit(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)~System.Object[]
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word
  langs:
  - csharp
  - vb
  name: FreeTextWordsBulkImportFacade
  nameWithType: FreeTextWordsBulkImportFacade
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nTyped facade for an object[] that contains all the fields of the FreeTextWords table, intended for\nuse with DatabaseOperations.<see cref=\"!:DatabaseOperations.ImportTable\"></see> for bulk import of data.\n"
  remarks: "\nThe bulk import system is based on generic row data, represented as an array of object. While this\nfits the bulk import functionality well, it may be convenient to have a typed, named way of accessing\nthe elements of such an object. This class has an object[] as its data carrier, together with\nstrongly typed access members.\n<p></p>\nOn creation, the array is dimensioned and all members initialized with &apos;blank&apos; values for their\ntypes (never null). There is an implicit conversion operator to object[], and it is also possible\nto access the array directly.\n"
  syntax:
    content: public class FreeTextWordsBulkImportFacade
    content.vb: Public Class FreeTextWordsBulkImportFacade
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.#ctor
  commentId: M:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  langs:
  - csharp
  - vb
  name: FreeTextWordsBulkImportFacade()
  nameWithType: FreeTextWordsBulkImportFacade.FreeTextWordsBulkImportFacade()
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreeTextWordsBulkImportFacade()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public FreeTextWordsBulkImportFacade()
    content.vb: Public Sub New
  overload: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.op_Implicit(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)~System.Object[]
  commentId: M:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.op_Implicit(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)~System.Object[]
  id: op_Implicit(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)~System.Object[]
  parent: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  langs:
  - csharp
  - vb
  name: Implicit(FreeTextWordsBulkImportFacade to Object[])
  nameWithType: FreeTextWordsBulkImportFacade.Implicit(FreeTextWordsBulkImportFacade to Object[])
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Implicit(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade to System.Object[])
  type: Operator
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public static implicit operator object[](FreeTextWordsBulkImportFacade r)
    parameters:
    - id: r
      type: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
    return:
      type: System.Object[]
    content.vb: Public Shared Widening Operator CType(r As FreeTextWordsBulkImportFacade) As Object()
  overload: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.op_Implicit*
  nameWithType.vb: FreeTextWordsBulkImportFacade.Widening(FreeTextWordsBulkImportFacade to Object())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Widening(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade to System.Object())
  name.vb: Widening(FreeTextWordsBulkImportFacade to Object())
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData
  commentId: P:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData
  id: RowData
  parent: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  langs:
  - csharp
  - vb
  name: RowData
  nameWithType: FreeTextWordsBulkImportFacade.RowData
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  syntax:
    content: public object[] RowData { get; }
    parameters: []
    return:
      type: System.Object[]
    content.vb: Public ReadOnly Property RowData As Object()
  overload: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId
  commentId: P:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId
  id: FreetextwordsId
  parent: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  langs:
  - csharp
  - vb
  name: FreetextwordsId
  nameWithType: FreeTextWordsBulkImportFacade.FreetextwordsId
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nPrimary key\n"
  syntax:
    content: public int FreetextwordsId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FreetextwordsId As Integer
  overload: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word
  commentId: P:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word
  id: Word
  parent: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  langs:
  - csharp
  - vb
  name: Word
  nameWithType: FreeTextWordsBulkImportFacade.Word
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nIndexed word\n"
  syntax:
    content: public string Word { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Word As String
  overload: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx
  commentId: P:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx
  id: SoundEx
  parent: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  langs:
  - csharp
  - vb
  name: SoundEx
  nameWithType: FreeTextWordsBulkImportFacade.SoundEx
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Rows
  summary: "\nSoundex form of word using Metaphone algorithm, for sounds-like searching\n"
  syntax:
    content: public string SoundEx { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SoundEx As String
  overload: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<FreeTextWordsBulkImportFacade, To>()
  nameWithType: EnumUtil.MapEnums<FreeTextWordsBulkImportFacade, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of FreeTextWordsBulkImportFacade, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To)()
  name.vb: MapEnums(Of FreeTextWordsBulkImportFacade, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<FreeTextWordsBulkImportFacade, To>
    nameWithType: EnumUtil.MapEnums<FreeTextWordsBulkImportFacade, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of FreeTextWordsBulkImportFacade, To)
    nameWithType: EnumUtil.MapEnums(Of FreeTextWordsBulkImportFacade, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<FreeTextWordsBulkImportFacade>(FreeTextWordsBulkImportFacade)
  nameWithType: ObjectExtensions.AssignByReflection<FreeTextWordsBulkImportFacade>(FreeTextWordsBulkImportFacade)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade>(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of FreeTextWordsBulkImportFacade)(FreeTextWordsBulkImportFacade)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)(SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)
  name.vb: AssignByReflection(Of FreeTextWordsBulkImportFacade)(FreeTextWordsBulkImportFacade)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<FreeTextWordsBulkImportFacade>
    nameWithType: ObjectExtensions.AssignByReflection<FreeTextWordsBulkImportFacade>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
    name: FreeTextWordsBulkImportFacade
    nameWithType: FreeTextWordsBulkImportFacade
    fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of FreeTextWordsBulkImportFacade)
    nameWithType: ObjectExtensions.AssignByReflection(Of FreeTextWordsBulkImportFacade)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
    name: FreeTextWordsBulkImportFacade
    nameWithType: FreeTextWordsBulkImportFacade
    fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<FreeTextWordsBulkImportFacade>()
  nameWithType: ObjectExtensions.GraphCopy<FreeTextWordsBulkImportFacade>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of FreeTextWordsBulkImportFacade)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)()
  name.vb: GraphCopy(Of FreeTextWordsBulkImportFacade)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<FreeTextWordsBulkImportFacade>
    nameWithType: ObjectExtensions.GraphCopy<FreeTextWordsBulkImportFacade>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of FreeTextWordsBulkImportFacade)
    nameWithType: ObjectExtensions.GraphCopy(Of FreeTextWordsBulkImportFacade)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<FreeTextWordsBulkImportFacade, To>()
  nameWithType: Converters.MapEnums<FreeTextWordsBulkImportFacade, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To>()
  nameWithType.vb: Converters.MapEnums(Of FreeTextWordsBulkImportFacade, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To)()
  name.vb: MapEnums(Of FreeTextWordsBulkImportFacade, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<FreeTextWordsBulkImportFacade, To>
    nameWithType: Converters.MapEnums<FreeTextWordsBulkImportFacade, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of FreeTextWordsBulkImportFacade, To)
    nameWithType: Converters.MapEnums(Of FreeTextWordsBulkImportFacade, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.#ctor*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.#ctor
  isExternal: true
  name: FreeTextWordsBulkImportFacade
  nameWithType: FreeTextWordsBulkImportFacade.FreeTextWordsBulkImportFacade
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreeTextWordsBulkImportFacade
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.op_Implicit*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.op_Implicit
  isExternal: true
  name: Implicit
  nameWithType: FreeTextWordsBulkImportFacade.Implicit
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Implicit
  nameWithType.vb: FreeTextWordsBulkImportFacade.Widening
  fullName.vb: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Widening
  name.vb: Widening
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  commentId: T:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
  parent: SuperOffice.CRM.Rows
  isExternal: true
  name: FreeTextWordsBulkImportFacade
  nameWithType: FreeTextWordsBulkImportFacade
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData
  isExternal: true
  name: RowData
  nameWithType: FreeTextWordsBulkImportFacade.RowData
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.RowData
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId
  isExternal: true
  name: FreetextwordsId
  nameWithType: FreeTextWordsBulkImportFacade.FreetextwordsId
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.FreetextwordsId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word
  isExternal: true
  name: Word
  nameWithType: FreeTextWordsBulkImportFacade.Word
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.Word
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx*
  commentId: Overload:SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx
  isExternal: true
  name: SoundEx
  nameWithType: FreeTextWordsBulkImportFacade.SoundEx
  fullName: SuperOffice.CRM.Rows.FreeTextWordsBulkImportFacade.SoundEx
