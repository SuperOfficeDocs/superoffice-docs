### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.IUserInfo2
  commentId: T:SuperOffice.CRM.IUserInfo2
  id: IUserInfo2
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.IUserInfo2.CustomFields
  - SuperOffice.CRM.IUserInfo2.UserName
  langs:
  - csharp
  - vb
  name: IUserInfo2
  nameWithType: IUserInfo2
  fullName: SuperOffice.CRM.IUserInfo2
  type: Interface
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  syntax:
    content: 'public interface IUserInfo2 : IUserInfo'
    content.vb: >-
      Public Interface IUserInfo2
          Inherits IUserInfo
  inheritedMembers:
  - SuperOffice.CRM.IUserInfo.AssociateId
  - SuperOffice.CRM.IUserInfo.AssociateName
  - SuperOffice.CRM.IUserInfo.CountryDomainName
  - SuperOffice.CRM.IUserInfo.CountryId
  - SuperOffice.CRM.IUserInfo.CountryName
  - SuperOffice.CRM.IUserInfo.Email
  - SuperOffice.CRM.IUserInfo.FullName
  - SuperOffice.CRM.IUserInfo.FunctionRights
  - SuperOffice.CRM.IUserInfo.Licenses
  - SuperOffice.CRM.IUserInfo.RoleId
  - SuperOffice.CRM.IUserInfo.RoleName
  - SuperOffice.CRM.IUserInfo.Ticket
  extensionMethods:
  - SuperOffice.CRM.IUserInfo2.EnumUtil.MapEnums``2
  - SuperOffice.CRM.IUserInfo2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: SuperOffice.CRM.IUserInfo2.UserName
  commentId: P:SuperOffice.CRM.IUserInfo2.UserName
  id: UserName
  parent: SuperOffice.CRM.IUserInfo2
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: IUserInfo2.UserName
  fullName: SuperOffice.CRM.IUserInfo2.UserName
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  summary: "\nSuperId user-name\n"
  syntax:
    content: string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property UserName As String
  overload: SuperOffice.CRM.IUserInfo2.UserName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: SuperOffice.CRM.IUserInfo2.CustomFields
  commentId: P:SuperOffice.CRM.IUserInfo2.CustomFields
  id: CustomFields
  parent: SuperOffice.CRM.IUserInfo2
  langs:
  - csharp
  - vb
  name: CustomFields
  nameWithType: IUserInfo2.CustomFields
  fullName: SuperOffice.CRM.IUserInfo2.CustomFields
  type: Property
  source:
    path: SuperOffice.Plugins
    isExternal: true
  assemblies:
  - SuperOffice.Plugins
  namespace: SuperOffice.CRM
  syntax:
    content: Dictionary<string, string> CustomFields { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: ReadOnly Property CustomFields As Dictionary(Of String, String)
  overload: SuperOffice.CRM.IUserInfo2.CustomFields*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
- uid: SuperOffice.CRM.IUserInfo.AssociateId
  commentId: P:SuperOffice.CRM.IUserInfo.AssociateId
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: AssociateId
  nameWithType: IUserInfo.AssociateId
  fullName: SuperOffice.CRM.IUserInfo.AssociateId
- uid: SuperOffice.CRM.IUserInfo.AssociateName
  commentId: P:SuperOffice.CRM.IUserInfo.AssociateName
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: AssociateName
  nameWithType: IUserInfo.AssociateName
  fullName: SuperOffice.CRM.IUserInfo.AssociateName
- uid: SuperOffice.CRM.IUserInfo.CountryDomainName
  commentId: P:SuperOffice.CRM.IUserInfo.CountryDomainName
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: CountryDomainName
  nameWithType: IUserInfo.CountryDomainName
  fullName: SuperOffice.CRM.IUserInfo.CountryDomainName
- uid: SuperOffice.CRM.IUserInfo.CountryId
  commentId: P:SuperOffice.CRM.IUserInfo.CountryId
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: CountryId
  nameWithType: IUserInfo.CountryId
  fullName: SuperOffice.CRM.IUserInfo.CountryId
- uid: SuperOffice.CRM.IUserInfo.CountryName
  commentId: P:SuperOffice.CRM.IUserInfo.CountryName
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: CountryName
  nameWithType: IUserInfo.CountryName
  fullName: SuperOffice.CRM.IUserInfo.CountryName
- uid: SuperOffice.CRM.IUserInfo.Email
  commentId: P:SuperOffice.CRM.IUserInfo.Email
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: Email
  nameWithType: IUserInfo.Email
  fullName: SuperOffice.CRM.IUserInfo.Email
- uid: SuperOffice.CRM.IUserInfo.FullName
  commentId: P:SuperOffice.CRM.IUserInfo.FullName
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: FullName
  nameWithType: IUserInfo.FullName
  fullName: SuperOffice.CRM.IUserInfo.FullName
- uid: SuperOffice.CRM.IUserInfo.FunctionRights
  commentId: P:SuperOffice.CRM.IUserInfo.FunctionRights
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: FunctionRights
  nameWithType: IUserInfo.FunctionRights
  fullName: SuperOffice.CRM.IUserInfo.FunctionRights
- uid: SuperOffice.CRM.IUserInfo.Licenses
  commentId: P:SuperOffice.CRM.IUserInfo.Licenses
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: Licenses
  nameWithType: IUserInfo.Licenses
  fullName: SuperOffice.CRM.IUserInfo.Licenses
- uid: SuperOffice.CRM.IUserInfo.RoleId
  commentId: P:SuperOffice.CRM.IUserInfo.RoleId
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: RoleId
  nameWithType: IUserInfo.RoleId
  fullName: SuperOffice.CRM.IUserInfo.RoleId
- uid: SuperOffice.CRM.IUserInfo.RoleName
  commentId: P:SuperOffice.CRM.IUserInfo.RoleName
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: RoleName
  nameWithType: IUserInfo.RoleName
  fullName: SuperOffice.CRM.IUserInfo.RoleName
- uid: SuperOffice.CRM.IUserInfo.Ticket
  commentId: P:SuperOffice.CRM.IUserInfo.Ticket
  parent: SuperOffice.CRM.IUserInfo
  isExternal: true
  name: Ticket
  nameWithType: IUserInfo.Ticket
  fullName: SuperOffice.CRM.IUserInfo.Ticket
- uid: SuperOffice.CRM.IUserInfo2.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<IUserInfo2, To>()
  nameWithType: EnumUtil.MapEnums<IUserInfo2, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.IUserInfo2, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of IUserInfo2, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.IUserInfo2, To)()
  name.vb: MapEnums(Of IUserInfo2, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<IUserInfo2, To>
    nameWithType: EnumUtil.MapEnums<IUserInfo2, To>
    fullName: EnumUtil.MapEnums<SuperOffice.CRM.IUserInfo2, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of IUserInfo2, To)
    nameWithType: EnumUtil.MapEnums(Of IUserInfo2, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.CRM.IUserInfo2, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.IUserInfo2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<IUserInfo2, To>()
  nameWithType: Converters.MapEnums<IUserInfo2, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.IUserInfo2, To>()
  nameWithType.vb: Converters.MapEnums(Of IUserInfo2, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.IUserInfo2, To)()
  name.vb: MapEnums(Of IUserInfo2, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<IUserInfo2, To>
    nameWithType: Converters.MapEnums<IUserInfo2, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.IUserInfo2, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of IUserInfo2, To)
    nameWithType: Converters.MapEnums(Of IUserInfo2, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.IUserInfo2, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.IUserInfo
  commentId: T:SuperOffice.CRM.IUserInfo
  parent: SuperOffice.CRM
  isExternal: true
  name: IUserInfo
  nameWithType: IUserInfo
  fullName: SuperOffice.CRM.IUserInfo
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.CRM.IUserInfo2.UserName*
  commentId: Overload:SuperOffice.CRM.IUserInfo2.UserName
  isExternal: true
  name: UserName
  nameWithType: IUserInfo2.UserName
  fullName: SuperOffice.CRM.IUserInfo2.UserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.IUserInfo2.CustomFields*
  commentId: Overload:SuperOffice.CRM.IUserInfo2.CustomFields
  isExternal: true
  name: CustomFields
  nameWithType: IUserInfo2.CustomFields
  fullName: SuperOffice.CRM.IUserInfo2.CustomFields
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.String}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
