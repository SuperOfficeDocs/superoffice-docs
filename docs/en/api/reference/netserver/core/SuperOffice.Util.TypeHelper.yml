### YamlMime:ManagedReference
items:
- uid: SuperOffice.Util.TypeHelper
  commentId: T:SuperOffice.Util.TypeHelper
  id: TypeHelper
  parent: SuperOffice.Util
  children:
  - SuperOffice.Util.TypeHelper.CreateDefaultEntity(System.Type)
  - SuperOffice.Util.TypeHelper.GetAllInterfaces(System.Type)
  - SuperOffice.Util.TypeHelper.GetPublicReadableProperties(System.Type)
  - SuperOffice.Util.TypeHelper.IsComplex(System.Type)
  - SuperOffice.Util.TypeHelper.IsDecimalNumber(System.Type)
  - SuperOffice.Util.TypeHelper.IsDictionary(System.Type,System.Type@,System.Type@)
  - SuperOffice.Util.TypeHelper.IsEnumerable(System.Type)
  - SuperOffice.Util.TypeHelper.IsEnumerable(System.Type,System.Type@)
  - SuperOffice.Util.TypeHelper.IsGenericEnumerable(System.Type,System.Type@)
  - SuperOffice.Util.TypeHelper.IsGenericIDictionary(System.Type,System.Type@,System.Type@)
  - SuperOffice.Util.TypeHelper.IsGenericIList(System.Type,System.Type@)
  - SuperOffice.Util.TypeHelper.IsNonGenericIDictionary(System.Type)
  - SuperOffice.Util.TypeHelper.IsNongenericEnumerable(System.Type)
  - SuperOffice.Util.TypeHelper.IsNongenericIList(System.Type)
  - SuperOffice.Util.TypeHelper.IsNullable(System.Type)
  - SuperOffice.Util.TypeHelper.IsSimple(System.Type)
  langs:
  - csharp
  - vb
  name: TypeHelper
  nameWithType: TypeHelper
  fullName: SuperOffice.Util.TypeHelper
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Utility/Extension class to assist analysis of data-types when doing reflection-code.
  example: []
  syntax:
    content: public static class TypeHelper
    content.vb: Public Module TypeHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.Util.TypeHelper.IsEnumerable(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsEnumerable(System.Type)
  id: IsEnumerable(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsEnumerable(Type)
  nameWithType: TypeHelper.IsEnumerable(Type)
  fullName: SuperOffice.Util.TypeHelper.IsEnumerable(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Checks if the instance represents an enumerable type.

    <remarks>

    While <xref href="System.String" data-throw-if-not-resolved="false"></xref> technically is an enumerable of char, it will

    not be reported as an enumerable type.

    </remarks>
  example: []
  syntax:
    content: public static bool IsEnumerable(this Type instance)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    return:
      type: System.Boolean
      description: true if enumerable.
    content.vb: Public Shared Function IsEnumerable(instance As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsEnumerable*
- uid: SuperOffice.Util.TypeHelper.IsEnumerable(System.Type,System.Type@)
  commentId: M:SuperOffice.Util.TypeHelper.IsEnumerable(System.Type,System.Type@)
  id: IsEnumerable(System.Type,System.Type@)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsEnumerable(Type, out Type)
  nameWithType: TypeHelper.IsEnumerable(Type, out Type)
  fullName: SuperOffice.Util.TypeHelper.IsEnumerable(System.Type, out System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Checks if the instance represents an enumerable type and attempts to

    discover the type it enumerates over.

    <remarks>

    While <xref href="System.String" data-throw-if-not-resolved="false"></xref> technically is an enumerable of char, it will

    not be reported as an enumerable type.

    </remarks>
  example: []
  syntax:
    content: public static bool IsEnumerable(this Type instance, out Type elementType)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    - id: elementType
      type: System.Type
      description: The type which the enumerable contains. Set to null if result type is unenumerable.
    return:
      type: System.Boolean
      description: true if enumerable.
    content.vb: Public Shared Function IsEnumerable(instance As Type, elementType As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsEnumerable*
  nameWithType.vb: TypeHelper.IsEnumerable(Type, Type)
  fullName.vb: SuperOffice.Util.TypeHelper.IsEnumerable(System.Type, System.Type)
  name.vb: IsEnumerable(Type, Type)
- uid: SuperOffice.Util.TypeHelper.IsDictionary(System.Type,System.Type@,System.Type@)
  commentId: M:SuperOffice.Util.TypeHelper.IsDictionary(System.Type,System.Type@,System.Type@)
  id: IsDictionary(System.Type,System.Type@,System.Type@)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsDictionary(Type, out Type, out Type)
  nameWithType: TypeHelper.IsDictionary(Type, out Type, out Type)
  fullName: SuperOffice.Util.TypeHelper.IsDictionary(System.Type, out System.Type, out System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Checks is the instance repesent an generic dictionary and attempts to discover the types used for its key/value-pairs.
  example: []
  syntax:
    content: public static bool IsDictionary(this Type instance, out Type keyType, out Type valueType)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    - id: keyType
      type: System.Type
      description: The key-type in the dictionary. Set to null if result type isn't a dictionary.
    - id: valueType
      type: System.Type
      description: The value-type in the dictionary. Set to null if result type isn't a dictionary.
    return:
      type: System.Boolean
      description: true if a dictionary.
    content.vb: Public Shared Function IsDictionary(instance As Type, keyType As Type, valueType As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsDictionary*
  nameWithType.vb: TypeHelper.IsDictionary(Type, Type, Type)
  fullName.vb: SuperOffice.Util.TypeHelper.IsDictionary(System.Type, System.Type, System.Type)
  name.vb: IsDictionary(Type, Type, Type)
- uid: SuperOffice.Util.TypeHelper.IsGenericIDictionary(System.Type,System.Type@,System.Type@)
  commentId: M:SuperOffice.Util.TypeHelper.IsGenericIDictionary(System.Type,System.Type@,System.Type@)
  id: IsGenericIDictionary(System.Type,System.Type@,System.Type@)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsGenericIDictionary(Type, out Type, out Type)
  nameWithType: TypeHelper.IsGenericIDictionary(Type, out Type, out Type)
  fullName: SuperOffice.Util.TypeHelper.IsGenericIDictionary(System.Type, out System.Type, out System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Checks is the instance repesent an generic dictionary and attempts to discover the types used for its key/value-pairs.
  example: []
  syntax:
    content: public static bool IsGenericIDictionary(this Type instance, out Type keyType, out Type valueType)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    - id: keyType
      type: System.Type
      description: The key-type in the dictionary. Set to null if result type isn't a dictionary.
    - id: valueType
      type: System.Type
      description: The value-type in the dictionary. Set to null if result type isn't a dictionary.
    return:
      type: System.Boolean
      description: true if a dictionary.
    content.vb: Public Shared Function IsGenericIDictionary(instance As Type, keyType As Type, valueType As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsGenericIDictionary*
  nameWithType.vb: TypeHelper.IsGenericIDictionary(Type, Type, Type)
  fullName.vb: SuperOffice.Util.TypeHelper.IsGenericIDictionary(System.Type, System.Type, System.Type)
  name.vb: IsGenericIDictionary(Type, Type, Type)
- uid: SuperOffice.Util.TypeHelper.IsNonGenericIDictionary(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsNonGenericIDictionary(System.Type)
  id: IsNonGenericIDictionary(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsNonGenericIDictionary(Type)
  nameWithType: TypeHelper.IsNonGenericIDictionary(Type)
  fullName: SuperOffice.Util.TypeHelper.IsNonGenericIDictionary(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Checks is the instance repesent an non-generic dictionary.
  example: []
  syntax:
    content: public static bool IsNonGenericIDictionary(this Type instance)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    return:
      type: System.Boolean
      description: true if a dictionary.
    content.vb: Public Shared Function IsNonGenericIDictionary(instance As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsNonGenericIDictionary*
- uid: SuperOffice.Util.TypeHelper.IsGenericEnumerable(System.Type,System.Type@)
  commentId: M:SuperOffice.Util.TypeHelper.IsGenericEnumerable(System.Type,System.Type@)
  id: IsGenericEnumerable(System.Type,System.Type@)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsGenericEnumerable(Type, out Type)
  nameWithType: TypeHelper.IsGenericEnumerable(Type, out Type)
  fullName: SuperOffice.Util.TypeHelper.IsGenericEnumerable(System.Type, out System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Checks is the instance repesent an generic enemurable and attempts to discover the type it

    enumerates over.
  example: []
  syntax:
    content: public static bool IsGenericEnumerable(this Type instance, out Type elementType)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    - id: elementType
      type: System.Type
      description: The type which the enumerable contains. Set to null if result type is unenumerable.
    return:
      type: System.Boolean
      description: true if enumerable.
    content.vb: Public Shared Function IsGenericEnumerable(instance As Type, elementType As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsGenericEnumerable*
  nameWithType.vb: TypeHelper.IsGenericEnumerable(Type, Type)
  fullName.vb: SuperOffice.Util.TypeHelper.IsGenericEnumerable(System.Type, System.Type)
  name.vb: IsGenericEnumerable(Type, Type)
- uid: SuperOffice.Util.TypeHelper.IsNongenericEnumerable(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsNongenericEnumerable(System.Type)
  id: IsNongenericEnumerable(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsNongenericEnumerable(Type)
  nameWithType: TypeHelper.IsNongenericEnumerable(Type)
  fullName: SuperOffice.Util.TypeHelper.IsNongenericEnumerable(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Checks is the instance repesent an non-generic IEnumerable.

    <remarks>

    While <xref href="System.String" data-throw-if-not-resolved="false"></xref> technically is an enumerable of char, it will

    not be reported as an enumerable type.

    </remarks>
  example: []
  syntax:
    content: public static bool IsNongenericEnumerable(this Type instance)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    return:
      type: System.Boolean
      description: true if nongeneric IEnumerable.
    content.vb: Public Shared Function IsNongenericEnumerable(instance As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsNongenericEnumerable*
- uid: SuperOffice.Util.TypeHelper.IsGenericIList(System.Type,System.Type@)
  commentId: M:SuperOffice.Util.TypeHelper.IsGenericIList(System.Type,System.Type@)
  id: IsGenericIList(System.Type,System.Type@)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsGenericIList(Type, out Type)
  nameWithType: TypeHelper.IsGenericIList(Type, out Type)
  fullName: SuperOffice.Util.TypeHelper.IsGenericIList(System.Type, out System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Checks is the instance repesent an generic List and attempts to discover the type it

    enumerates over.
  example: []
  syntax:
    content: public static bool IsGenericIList(this Type instance, out Type elementType)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    - id: elementType
      type: System.Type
      description: The type which the enumerable contains. Set to null if result type is unenumerable.
    return:
      type: System.Boolean
      description: true if generic List.
    content.vb: Public Shared Function IsGenericIList(instance As Type, elementType As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsGenericIList*
  nameWithType.vb: TypeHelper.IsGenericIList(Type, Type)
  fullName.vb: SuperOffice.Util.TypeHelper.IsGenericIList(System.Type, System.Type)
  name.vb: IsGenericIList(Type, Type)
- uid: SuperOffice.Util.TypeHelper.IsNongenericIList(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsNongenericIList(System.Type)
  id: IsNongenericIList(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsNongenericIList(Type)
  nameWithType: TypeHelper.IsNongenericIList(Type)
  fullName: SuperOffice.Util.TypeHelper.IsNongenericIList(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Checks is the instance repesent an non-generic IList.
  example: []
  syntax:
    content: public static bool IsNongenericIList(this Type instance)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyse
    return:
      type: System.Boolean
      description: true if nongeneric IList.
    content.vb: Public Shared Function IsNongenericIList(instance As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsNongenericIList*
- uid: SuperOffice.Util.TypeHelper.GetPublicReadableProperties(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.GetPublicReadableProperties(System.Type)
  id: GetPublicReadableProperties(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: GetPublicReadableProperties(Type)
  nameWithType: TypeHelper.GetPublicReadableProperties(Type)
  fullName: SuperOffice.Util.TypeHelper.GetPublicReadableProperties(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Gets the public, readable instance-properties of a type.
  example: []
  syntax:
    content: public static IEnumerable<PropertyInfo> GetPublicReadableProperties(this Type instance)
    parameters:
    - id: instance
      type: System.Type
      description: The type to analyze.
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
      description: Empty array if no properties found.
    content.vb: Public Shared Function GetPublicReadableProperties(instance As Type) As IEnumerable(Of PropertyInfo)
  overload: SuperOffice.Util.TypeHelper.GetPublicReadableProperties*
- uid: SuperOffice.Util.TypeHelper.IsSimple(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsSimple(System.Type)
  id: IsSimple(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsSimple(Type)
  nameWithType: TypeHelper.IsSimple(Type)
  fullName: SuperOffice.Util.TypeHelper.IsSimple(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Determines if the type represents a simple/primitive type.
  example: []
  syntax:
    content: public static bool IsSimple(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to analyze.
    return:
      type: System.Boolean
      description: true if simple
    content.vb: Public Shared Function IsSimple(type As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsSimple*
- uid: SuperOffice.Util.TypeHelper.IsDecimalNumber(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsDecimalNumber(System.Type)
  id: IsDecimalNumber(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsDecimalNumber(Type)
  nameWithType: TypeHelper.IsDecimalNumber(Type)
  fullName: SuperOffice.Util.TypeHelper.IsDecimalNumber(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Determins if the type represents a type which can represent decimal nubers.
  example: []
  syntax:
    content: public static bool IsDecimalNumber(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to analyze.
    return:
      type: System.Boolean
      description: true if decimal number
    content.vb: Public Shared Function IsDecimalNumber(type As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsDecimalNumber*
- uid: SuperOffice.Util.TypeHelper.IsNullable(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsNullable(System.Type)
  id: IsNullable(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsNullable(Type)
  nameWithType: TypeHelper.IsNullable(Type)
  fullName: SuperOffice.Util.TypeHelper.IsNullable(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Determines if the provided type is a Nullable one.
  example: []
  syntax:
    content: public static bool IsNullable(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsNullable(type As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsNullable*
- uid: SuperOffice.Util.TypeHelper.IsComplex(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.IsComplex(System.Type)
  id: IsComplex(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: IsComplex(Type)
  nameWithType: TypeHelper.IsComplex(Type)
  fullName: SuperOffice.Util.TypeHelper.IsComplex(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Determines if the type represents a complex type.
  example: []
  syntax:
    content: public static bool IsComplex(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to analyze.
    return:
      type: System.Boolean
      description: true is complex.
    content.vb: Public Shared Function IsComplex(type As Type) As Boolean
  overload: SuperOffice.Util.TypeHelper.IsComplex*
- uid: SuperOffice.Util.TypeHelper.GetAllInterfaces(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.GetAllInterfaces(System.Type)
  id: GetAllInterfaces(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: GetAllInterfaces(Type)
  nameWithType: TypeHelper.GetAllInterfaces(Type)
  fullName: SuperOffice.Util.TypeHelper.GetAllInterfaces(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: >-
    Gets all interfaces implemented by the type.

    This may includes the type itself it if itself is an interface.
  example: []
  syntax:
    content: public static Type[] GetAllInterfaces(this Type instance)
    parameters:
    - id: instance
      type: System.Type
      description: ''
    return:
      type: System.Type[]
      description: ''
    content.vb: Public Shared Function GetAllInterfaces(instance As Type) As Type()
  overload: SuperOffice.Util.TypeHelper.GetAllInterfaces*
- uid: SuperOffice.Util.TypeHelper.CreateDefaultEntity(System.Type)
  commentId: M:SuperOffice.Util.TypeHelper.CreateDefaultEntity(System.Type)
  id: CreateDefaultEntity(System.Type)
  isExtensionMethod: true
  parent: SuperOffice.Util.TypeHelper
  langs:
  - csharp
  - vb
  name: CreateDefaultEntity(Type)
  nameWithType: TypeHelper.CreateDefaultEntity(Type)
  fullName: SuperOffice.Util.TypeHelper.CreateDefaultEntity(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Util
  summary: Safely creates a default-value for the specified type.
  example: []
  syntax:
    content: public static object CreateDefaultEntity(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Shared Function CreateDefaultEntity(type As Type) As Object
  overload: SuperOffice.Util.TypeHelper.CreateDefaultEntity*
references:
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Util.TypeHelper.IsEnumerable*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsEnumerable
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsEnumerable_System_Type_
  name: IsEnumerable
  nameWithType: TypeHelper.IsEnumerable
  fullName: SuperOffice.Util.TypeHelper.IsEnumerable
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Util.TypeHelper.IsDictionary*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsDictionary
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsDictionary_System_Type_System_Type__System_Type__
  name: IsDictionary
  nameWithType: TypeHelper.IsDictionary
  fullName: SuperOffice.Util.TypeHelper.IsDictionary
- uid: SuperOffice.Util.TypeHelper.IsGenericIDictionary*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsGenericIDictionary
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsGenericIDictionary_System_Type_System_Type__System_Type__
  name: IsGenericIDictionary
  nameWithType: TypeHelper.IsGenericIDictionary
  fullName: SuperOffice.Util.TypeHelper.IsGenericIDictionary
- uid: SuperOffice.Util.TypeHelper.IsNonGenericIDictionary*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsNonGenericIDictionary
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsNonGenericIDictionary_System_Type_
  name: IsNonGenericIDictionary
  nameWithType: TypeHelper.IsNonGenericIDictionary
  fullName: SuperOffice.Util.TypeHelper.IsNonGenericIDictionary
- uid: SuperOffice.Util.TypeHelper.IsGenericEnumerable*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsGenericEnumerable
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsGenericEnumerable_System_Type_System_Type__
  name: IsGenericEnumerable
  nameWithType: TypeHelper.IsGenericEnumerable
  fullName: SuperOffice.Util.TypeHelper.IsGenericEnumerable
- uid: SuperOffice.Util.TypeHelper.IsNongenericEnumerable*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsNongenericEnumerable
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsNongenericEnumerable_System_Type_
  name: IsNongenericEnumerable
  nameWithType: TypeHelper.IsNongenericEnumerable
  fullName: SuperOffice.Util.TypeHelper.IsNongenericEnumerable
- uid: SuperOffice.Util.TypeHelper.IsGenericIList*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsGenericIList
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsGenericIList_System_Type_System_Type__
  name: IsGenericIList
  nameWithType: TypeHelper.IsGenericIList
  fullName: SuperOffice.Util.TypeHelper.IsGenericIList
- uid: SuperOffice.Util.TypeHelper.IsNongenericIList*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsNongenericIList
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsNongenericIList_System_Type_
  name: IsNongenericIList
  nameWithType: TypeHelper.IsNongenericIList
  fullName: SuperOffice.Util.TypeHelper.IsNongenericIList
- uid: SuperOffice.Util.TypeHelper.GetPublicReadableProperties*
  commentId: Overload:SuperOffice.Util.TypeHelper.GetPublicReadableProperties
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_GetPublicReadableProperties_System_Type_
  name: GetPublicReadableProperties
  nameWithType: TypeHelper.GetPublicReadableProperties
  fullName: SuperOffice.Util.TypeHelper.GetPublicReadableProperties
- uid: System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.PropertyInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<PropertyInfo>
  nameWithType: IEnumerable<PropertyInfo>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.PropertyInfo>
  nameWithType.vb: IEnumerable(Of PropertyInfo)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.PropertyInfo)
  name.vb: IEnumerable(Of PropertyInfo)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Util.TypeHelper.IsSimple*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsSimple
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsSimple_System_Type_
  name: IsSimple
  nameWithType: TypeHelper.IsSimple
  fullName: SuperOffice.Util.TypeHelper.IsSimple
- uid: SuperOffice.Util.TypeHelper.IsDecimalNumber*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsDecimalNumber
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsDecimalNumber_System_Type_
  name: IsDecimalNumber
  nameWithType: TypeHelper.IsDecimalNumber
  fullName: SuperOffice.Util.TypeHelper.IsDecimalNumber
- uid: SuperOffice.Util.TypeHelper.IsNullable*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsNullable
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsNullable_System_Type_
  name: IsNullable
  nameWithType: TypeHelper.IsNullable
  fullName: SuperOffice.Util.TypeHelper.IsNullable
- uid: SuperOffice.Util.TypeHelper.IsComplex*
  commentId: Overload:SuperOffice.Util.TypeHelper.IsComplex
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_IsComplex_System_Type_
  name: IsComplex
  nameWithType: TypeHelper.IsComplex
  fullName: SuperOffice.Util.TypeHelper.IsComplex
- uid: SuperOffice.Util.TypeHelper.GetAllInterfaces*
  commentId: Overload:SuperOffice.Util.TypeHelper.GetAllInterfaces
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_GetAllInterfaces_System_Type_
  name: GetAllInterfaces
  nameWithType: TypeHelper.GetAllInterfaces
  fullName: SuperOffice.Util.TypeHelper.GetAllInterfaces
- uid: System.Type[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type[]
  nameWithType: Type[]
  fullName: System.Type[]
  nameWithType.vb: Type()
  fullName.vb: System.Type()
  name.vb: Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: (
  - name: )
- uid: SuperOffice.Util.TypeHelper.CreateDefaultEntity*
  commentId: Overload:SuperOffice.Util.TypeHelper.CreateDefaultEntity
  isExternal: true
  href: SuperOffice.Util.TypeHelper.html#SuperOffice_Util_TypeHelper_CreateDefaultEntity_System_Type_
  name: CreateDefaultEntity
  nameWithType: TypeHelper.CreateDefaultEntity
  fullName: SuperOffice.Util.TypeHelper.CreateDefaultEntity
