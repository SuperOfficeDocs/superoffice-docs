### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.JoinCompare
  commentId: T:SuperOffice.Data.SQL.JoinCompare
  id: JoinCompare
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.JoinCompare.#ctor(SuperOffice.Data.SQL.Equal)
  - SuperOffice.Data.SQL.JoinCompare.#ctor(SuperOffice.Data.SQL.Equal,SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.JoinCompare.Clone
  - SuperOffice.Data.SQL.JoinCompare.Compare
  - SuperOffice.Data.SQL.JoinCompare.Restriction
  - SuperOffice.Data.SQL.JoinCompare.RestrictionAnd(SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.JoinCompare.RestrictionOr(SuperOffice.Data.SQL.Restriction)
  - SuperOffice.Data.SQL.JoinCompare.ToString
  langs:
  - csharp
  - vb
  name: JoinCompare
  nameWithType: JoinCompare
  fullName: SuperOffice.Data.SQL.JoinCompare
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nThis class represents a join, consisting of a) a mandatory Equal comparison that defines the join, and\nb) an optional, arbitrarily deep Restriction that contains additional restrictions to be part of the\njoin clause. Concrete subclasses then define if this is an Inner, Left Outer or Right Outer join.\n"
  syntax:
    content: 'public abstract class JoinCompare : ICloneable'
    content.vb: >-
      Public MustInherit Class JoinCompare
          Implements ICloneable
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.Data.SQL.InnerJoin
  - SuperOffice.Data.SQL.LeftOuterJoin
  - SuperOffice.Data.SQL.RightOuterJoin
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SQL.JoinCompare.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.JoinCompare.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: SuperOffice.Data.SQL.JoinCompare.RestrictionAnd(SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.JoinCompare.RestrictionAnd(SuperOffice.Data.SQL.Restriction)
  id: RestrictionAnd(SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: RestrictionAnd(Restriction)
  nameWithType: JoinCompare.RestrictionAnd(Restriction)
  fullName: SuperOffice.Data.SQL.JoinCompare.RestrictionAnd(SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public void RestrictionAnd(Restriction additional)
    parameters:
    - id: additional
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Sub RestrictionAnd(additional As Restriction)
  overload: SuperOffice.Data.SQL.JoinCompare.RestrictionAnd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.JoinCompare.RestrictionOr(SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.JoinCompare.RestrictionOr(SuperOffice.Data.SQL.Restriction)
  id: RestrictionOr(SuperOffice.Data.SQL.Restriction)
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: RestrictionOr(Restriction)
  nameWithType: JoinCompare.RestrictionOr(Restriction)
  fullName: SuperOffice.Data.SQL.JoinCompare.RestrictionOr(SuperOffice.Data.SQL.Restriction)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public void RestrictionOr(Restriction additional)
    parameters:
    - id: additional
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Sub RestrictionOr(additional As Restriction)
  overload: SuperOffice.Data.SQL.JoinCompare.RestrictionOr*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.JoinCompare.#ctor(SuperOffice.Data.SQL.Equal)
  commentId: M:SuperOffice.Data.SQL.JoinCompare.#ctor(SuperOffice.Data.SQL.Equal)
  id: '#ctor(SuperOffice.Data.SQL.Equal)'
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: JoinCompare(Equal)
  nameWithType: JoinCompare.JoinCompare(Equal)
  fullName: SuperOffice.Data.SQL.JoinCompare.JoinCompare(SuperOffice.Data.SQL.Equal)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.JoinCompare\" data-throw-if-not-resolved=\"false\"></xref> class and takes a Compare and Restriction as in-parameter. \nTakes a Compare as in-parameter, for example field = field.\n"
  syntax:
    content: protected JoinCompare(Equal comp)
    parameters:
    - id: comp
      type: SuperOffice.Data.SQL.Equal
      description: 'The Compare-parameter. '
    content.vb: Protected Sub New(comp As Equal)
  overload: SuperOffice.Data.SQL.JoinCompare.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Data.SQL.JoinCompare.#ctor(SuperOffice.Data.SQL.Equal,SuperOffice.Data.SQL.Restriction)
  commentId: M:SuperOffice.Data.SQL.JoinCompare.#ctor(SuperOffice.Data.SQL.Equal,SuperOffice.Data.SQL.Restriction)
  id: '#ctor(SuperOffice.Data.SQL.Equal,SuperOffice.Data.SQL.Restriction)'
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: JoinCompare(Equal, Restriction)
  nameWithType: JoinCompare.JoinCompare(Equal, Restriction)
  fullName: SuperOffice.Data.SQL.JoinCompare.JoinCompare(SuperOffice.Data.SQL.Equal, SuperOffice.Data.SQL.Restriction)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.JoinCompare\" data-throw-if-not-resolved=\"false\"></xref> class and takes a Compare and Restriction as in-parameter. \n"
  syntax:
    content: protected JoinCompare(Equal comp, Restriction res)
    parameters:
    - id: comp
      type: SuperOffice.Data.SQL.Equal
      description: The Compare-parameter.
    - id: res
      type: SuperOffice.Data.SQL.Restriction
      description: The Restriction-parameter, nulls are now allowed
    content.vb: Protected Sub New(comp As Equal, res As Restriction)
  overload: SuperOffice.Data.SQL.JoinCompare.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: SuperOffice.Data.SQL.JoinCompare.Clone
  commentId: M:SuperOffice.Data.SQL.JoinCompare.Clone
  id: Clone
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: JoinCompare.Clone()
  fullName: SuperOffice.Data.SQL.JoinCompare.Clone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nICloneable stub.\n"
  syntax:
    content: public abstract object Clone()
    return:
      type: System.Object
      description: "\nA new object that is a copy of this instance.\n"
    content.vb: Public MustOverride Function Clone As Object
  overload: SuperOffice.Data.SQL.JoinCompare.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: SuperOffice.Data.SQL.JoinCompare.ToString
  commentId: M:SuperOffice.Data.SQL.JoinCompare.ToString
  id: ToString
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: JoinCompare.ToString()
  fullName: SuperOffice.Data.SQL.JoinCompare.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.Data.SQL.JoinCompare.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.SQL.JoinCompare.Compare
  commentId: P:SuperOffice.Data.SQL.JoinCompare.Compare
  id: Compare
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: Compare
  nameWithType: JoinCompare.Compare
  fullName: SuperOffice.Data.SQL.JoinCompare.Compare
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nGets the compare part of the join.\n"
  syntax:
    content: public Equal Compare { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Equal
    content.vb: Public Property Compare As Equal
  overload: SuperOffice.Data.SQL.JoinCompare.Compare*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.JoinCompare.Restriction
  commentId: P:SuperOffice.Data.SQL.JoinCompare.Restriction
  id: Restriction
  parent: SuperOffice.Data.SQL.JoinCompare
  langs:
  - csharp
  - vb
  name: Restriction
  nameWithType: JoinCompare.Restriction
  fullName: SuperOffice.Data.SQL.JoinCompare.Restriction
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nGet or set the restriction part of the join.\n"
  syntax:
    content: public Restriction Restriction { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.Restriction
    content.vb: Public Property Restriction As Restriction
  overload: SuperOffice.Data.SQL.JoinCompare.Restriction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.JoinCompare.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<JoinCompare, To>()
  nameWithType: EnumUtil.MapEnums<JoinCompare, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.JoinCompare, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of JoinCompare, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.JoinCompare, To)()
  name.vb: MapEnums(Of JoinCompare, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<JoinCompare, To>
    nameWithType: EnumUtil.MapEnums<JoinCompare, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.JoinCompare, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of JoinCompare, To)
    nameWithType: EnumUtil.MapEnums(Of JoinCompare, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.JoinCompare, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.JoinCompare.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<JoinCompare, To>()
  nameWithType: Converters.MapEnums<JoinCompare, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.JoinCompare, To>()
  nameWithType.vb: Converters.MapEnums(Of JoinCompare, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.JoinCompare, To)()
  name.vb: MapEnums(Of JoinCompare, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<JoinCompare, To>
    nameWithType: Converters.MapEnums<JoinCompare, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.JoinCompare, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of JoinCompare, To)
    nameWithType: Converters.MapEnums(Of JoinCompare, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.JoinCompare, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.JoinCompare.RestrictionAnd*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.RestrictionAnd
  isExternal: true
  name: RestrictionAnd
  nameWithType: JoinCompare.RestrictionAnd
  fullName: SuperOffice.Data.SQL.JoinCompare.RestrictionAnd
- uid: SuperOffice.Data.SQL.Restriction
  commentId: T:SuperOffice.Data.SQL.Restriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Restriction
  nameWithType: Restriction
  fullName: SuperOffice.Data.SQL.Restriction
- uid: SuperOffice.Data.SQL.JoinCompare.RestrictionOr*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.RestrictionOr
  isExternal: true
  name: RestrictionOr
  nameWithType: JoinCompare.RestrictionOr
  fullName: SuperOffice.Data.SQL.JoinCompare.RestrictionOr
- uid: SuperOffice.Data.SQL.JoinCompare.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.#ctor
  isExternal: true
  name: JoinCompare
  nameWithType: JoinCompare.JoinCompare
  fullName: SuperOffice.Data.SQL.JoinCompare.JoinCompare
- uid: SuperOffice.Data.SQL.Equal
  commentId: T:SuperOffice.Data.SQL.Equal
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Equal
  nameWithType: Equal
  fullName: SuperOffice.Data.SQL.Equal
- uid: SuperOffice.Data.SQL.JoinCompare.Clone*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.Clone
  isExternal: true
  name: Clone
  nameWithType: JoinCompare.Clone
  fullName: SuperOffice.Data.SQL.JoinCompare.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.JoinCompare.ToString*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.ToString
  isExternal: true
  name: ToString
  nameWithType: JoinCompare.ToString
  fullName: SuperOffice.Data.SQL.JoinCompare.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.SQL.JoinCompare.Compare*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.Compare
  isExternal: true
  name: Compare
  nameWithType: JoinCompare.Compare
  fullName: SuperOffice.Data.SQL.JoinCompare.Compare
- uid: SuperOffice.Data.SQL.JoinCompare.Restriction*
  commentId: Overload:SuperOffice.Data.SQL.JoinCompare.Restriction
  isExternal: true
  name: Restriction
  nameWithType: JoinCompare.Restriction
  fullName: SuperOffice.Data.SQL.JoinCompare.Restriction
