### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Domain
  commentId: T:SuperOffice.Data.Domain
  id: Domain
  parent: SuperOffice.Data
  children:
  - SuperOffice.Data.Domain.Dashboards
  - SuperOffice.Data.Domain.ExternalDocumentRelatedToSpmMessage
  - SuperOffice.Data.Domain.ExternalDocuments
  - SuperOffice.Data.Domain.ExtraTables
  - SuperOffice.Data.Domain.ScreenDefinitions
  - SuperOffice.Data.Domain.Scripts
  - SuperOffice.Data.Domain.Selections
  - SuperOffice.Data.Domain.Unknown
  - SuperOffice.Data.Domain.UserGroups
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: Domain
  fullName: SuperOffice.Data.Domain
  type: Enum
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\nHierarchy domain\n"
  syntax:
    content: public enum Domain
    content.vb: Public Enum Domain
  extensionMethods:
  - SuperOffice.Data.Domain.EnumUtil.MapEnums``2
  - SuperOffice.Data.Domain.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Domain)
  - SuperOffice.Data.Domain.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.Domain.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: SuperOffice.Data.Domain.Unknown
  commentId: F:SuperOffice.Data.Domain.Unknown
  id: Unknown
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: Domain.Unknown
  fullName: SuperOffice.Data.Domain.Unknown
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n0: Unknown folders\n"
  syntax:
    content: Unknown = 0
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.ExtraTables
  commentId: F:SuperOffice.Data.Domain.ExtraTables
  id: ExtraTables
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: ExtraTables
  nameWithType: Domain.ExtraTables
  fullName: SuperOffice.Data.Domain.ExtraTables
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n1: ExtraTable folders\n"
  syntax:
    content: ExtraTables = 1
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.ScreenDefinitions
  commentId: F:SuperOffice.Data.Domain.ScreenDefinitions
  id: ScreenDefinitions
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: ScreenDefinitions
  nameWithType: Domain.ScreenDefinitions
  fullName: SuperOffice.Data.Domain.ScreenDefinitions
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n2: ScreenDefinition folders\n"
  syntax:
    content: ScreenDefinitions = 2
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.Scripts
  commentId: F:SuperOffice.Data.Domain.Scripts
  id: Scripts
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: Scripts
  nameWithType: Domain.Scripts
  fullName: SuperOffice.Data.Domain.Scripts
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n3: Script folders\n"
  syntax:
    content: Scripts = 3
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.Selections
  commentId: F:SuperOffice.Data.Domain.Selections
  id: Selections
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: Selections
  nameWithType: Domain.Selections
  fullName: SuperOffice.Data.Domain.Selections
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n4: Selection folders\n"
  syntax:
    content: Selections = 4
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.ExternalDocuments
  commentId: F:SuperOffice.Data.Domain.ExternalDocuments
  id: ExternalDocuments
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: ExternalDocuments
  nameWithType: Domain.ExternalDocuments
  fullName: SuperOffice.Data.Domain.ExternalDocuments
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n5: ExternalDocument folders\n"
  syntax:
    content: ExternalDocuments = 5
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.UserGroups
  commentId: F:SuperOffice.Data.Domain.UserGroups
  id: UserGroups
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: UserGroups
  nameWithType: Domain.UserGroups
  fullName: SuperOffice.Data.Domain.UserGroups
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n6: UserGroup folders\n"
  syntax:
    content: UserGroups = 6
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.ExternalDocumentRelatedToSpmMessage
  commentId: F:SuperOffice.Data.Domain.ExternalDocumentRelatedToSpmMessage
  id: ExternalDocumentRelatedToSpmMessage
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: ExternalDocumentRelatedToSpmMessage
  nameWithType: Domain.ExternalDocumentRelatedToSpmMessage
  fullName: SuperOffice.Data.Domain.ExternalDocumentRelatedToSpmMessage
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n7: ExternalDocuments related to spam messages folders\n"
  syntax:
    content: ExternalDocumentRelatedToSpmMessage = 7
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: SuperOffice.Data.Domain.Dashboards
  commentId: F:SuperOffice.Data.Domain.Dashboards
  id: Dashboards
  parent: SuperOffice.Data.Domain
  langs:
  - csharp
  - vb
  name: Dashboards
  nameWithType: Domain.Dashboards
  fullName: SuperOffice.Data.Domain.Dashboards
  type: Field
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Data
  summary: "\n8: Dashboard folders\n"
  syntax:
    content: Dashboards = 8
    return:
      type: SuperOffice.Data.Domain
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: SuperOffice.Data.Domain.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<Domain, To>()
  nameWithType: EnumUtil.MapEnums<Domain, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Domain, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of Domain, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Domain, To)()
  name.vb: MapEnums(Of Domain, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<Domain, To>
    nameWithType: EnumUtil.MapEnums<Domain, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Domain, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of Domain, To)
    nameWithType: EnumUtil.MapEnums(Of Domain, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Domain, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Domain.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Domain)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<Domain>(Domain)
  nameWithType: ObjectExtensions.AssignByReflection<Domain>(Domain)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Domain>(SuperOffice.Data.Domain)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of Domain)(Domain)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Domain)(SuperOffice.Data.Domain)
  name.vb: AssignByReflection(Of Domain)(Domain)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<Domain>
    nameWithType: ObjectExtensions.AssignByReflection<Domain>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Domain>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Domain
    name: Domain
    nameWithType: Domain
    fullName: SuperOffice.Data.Domain
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of Domain)
    nameWithType: ObjectExtensions.AssignByReflection(Of Domain)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Domain)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Domain
    name: Domain
    nameWithType: Domain
    fullName: SuperOffice.Data.Domain
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Domain.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<Domain>()
  nameWithType: ObjectExtensions.GraphCopy<Domain>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Domain>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of Domain)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Domain)()
  name.vb: GraphCopy(Of Domain)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<Domain>
    nameWithType: ObjectExtensions.GraphCopy<Domain>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Domain>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of Domain)
    nameWithType: ObjectExtensions.GraphCopy(Of Domain)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Domain)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Domain.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<Domain, To>()
  nameWithType: Converters.MapEnums<Domain, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Domain, To>()
  nameWithType.vb: Converters.MapEnums(Of Domain, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Domain, To)()
  name.vb: MapEnums(Of Domain, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<Domain, To>
    nameWithType: Converters.MapEnums<Domain, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Domain, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of Domain, To)
    nameWithType: Converters.MapEnums(Of Domain, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Domain, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.Domain
  commentId: T:SuperOffice.Data.Domain
  parent: SuperOffice.Data
  isExternal: true
  name: Domain
  nameWithType: Domain
  fullName: SuperOffice.Data.Domain
