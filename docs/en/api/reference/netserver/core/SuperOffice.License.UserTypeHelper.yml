### YamlMime:ManagedReference
items:
- uid: SuperOffice.License.UserTypeHelper
  commentId: T:SuperOffice.License.UserTypeHelper
  id: UserTypeHelper
  parent: SuperOffice.License
  children:
  - SuperOffice.License.UserTypeHelper.GetAssociateType(SuperOffice.License.UserType)
  - SuperOffice.License.UserTypeHelper.GetLoginRightModuleName(SuperOffice.License.UserType)
  - SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.Data.AssociateType)
  - SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.License.UserType)
  - SuperOffice.License.UserTypeHelper.GetUserType(SuperOffice.Data.AssociateType)
  langs:
  - csharp
  - vb
  name: UserTypeHelper
  nameWithType: UserTypeHelper
  fullName: SuperOffice.License.UserTypeHelper
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  syntax:
    content: public static class UserTypeHelper
    content.vb: Public Module UserTypeHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.License.UserTypeHelper.GetAssociateType(SuperOffice.License.UserType)
  commentId: M:SuperOffice.License.UserTypeHelper.GetAssociateType(SuperOffice.License.UserType)
  id: GetAssociateType(SuperOffice.License.UserType)
  isExtensionMethod: true
  parent: SuperOffice.License.UserTypeHelper
  langs:
  - csharp
  - vb
  name: GetAssociateType(UserType)
  nameWithType: UserTypeHelper.GetAssociateType(UserType)
  fullName: SuperOffice.License.UserTypeHelper.GetAssociateType(SuperOffice.License.UserType)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  summary: Convert from <xref href="SuperOffice.License.UserType" data-throw-if-not-resolved="false"></xref> to <xref href="SuperOffice.License.UserType" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static AssociateType GetAssociateType(this UserType allowedType)
    parameters:
    - id: allowedType
      type: SuperOffice.License.UserType
      description: Allowed associate type to convert from.
    return:
      type: SuperOffice.Data.AssociateType
      description: Associate type to convert to.
    content.vb: Public Shared Function GetAssociateType(allowedType As UserType) As AssociateType
  overload: SuperOffice.License.UserTypeHelper.GetAssociateType*
- uid: SuperOffice.License.UserTypeHelper.GetUserType(SuperOffice.Data.AssociateType)
  commentId: M:SuperOffice.License.UserTypeHelper.GetUserType(SuperOffice.Data.AssociateType)
  id: GetUserType(SuperOffice.Data.AssociateType)
  isExtensionMethod: true
  parent: SuperOffice.License.UserTypeHelper
  langs:
  - csharp
  - vb
  name: GetUserType(AssociateType)
  nameWithType: UserTypeHelper.GetUserType(AssociateType)
  fullName: SuperOffice.License.UserTypeHelper.GetUserType(SuperOffice.Data.AssociateType)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  summary: Convert from <xref href="SuperOffice.License.UserType" data-throw-if-not-resolved="false"></xref> to <xref href="SuperOffice.License.UserType" data-throw-if-not-resolved="false"></xref>
  example: []
  syntax:
    content: public static UserType GetUserType(this AssociateType associateType)
    parameters:
    - id: associateType
      type: SuperOffice.Data.AssociateType
      description: Associate type to convert from
    return:
      type: SuperOffice.License.UserType
      description: Allowed license type to convert to.
    content.vb: Public Shared Function GetUserType(associateType As AssociateType) As UserType
  overload: SuperOffice.License.UserTypeHelper.GetUserType*
- uid: SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.Data.AssociateType)
  commentId: M:SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.Data.AssociateType)
  id: GetRoleType(SuperOffice.Data.AssociateType)
  isExtensionMethod: true
  parent: SuperOffice.License.UserTypeHelper
  langs:
  - csharp
  - vb
  name: GetRoleType(AssociateType)
  nameWithType: UserTypeHelper.GetRoleType(AssociateType)
  fullName: SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.Data.AssociateType)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  summary: Convert from <xref href="SuperOffice.License.UserType" data-throw-if-not-resolved="false"></xref> to RoleType (short)
  example: []
  syntax:
    content: public static short GetRoleType(this AssociateType associateType)
    parameters:
    - id: associateType
      type: SuperOffice.Data.AssociateType
      description: Associate type to convert from
    return:
      type: System.Int16
      description: Role type to convert to.
    content.vb: Public Shared Function GetRoleType(associateType As AssociateType) As Short
  overload: SuperOffice.License.UserTypeHelper.GetRoleType*
- uid: SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.License.UserType)
  commentId: M:SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.License.UserType)
  id: GetRoleType(SuperOffice.License.UserType)
  isExtensionMethod: true
  parent: SuperOffice.License.UserTypeHelper
  langs:
  - csharp
  - vb
  name: GetRoleType(UserType)
  nameWithType: UserTypeHelper.GetRoleType(UserType)
  fullName: SuperOffice.License.UserTypeHelper.GetRoleType(SuperOffice.License.UserType)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  summary: Convert from <xref href="SuperOffice.License.UserType" data-throw-if-not-resolved="false"></xref> to RoleType (short)
  example: []
  syntax:
    content: public static short GetRoleType(this UserType userType)
    parameters:
    - id: userType
      type: SuperOffice.License.UserType
    return:
      type: System.Int16
      description: Role type to convert to.
    content.vb: Public Shared Function GetRoleType(userType As UserType) As Short
  overload: SuperOffice.License.UserTypeHelper.GetRoleType*
- uid: SuperOffice.License.UserTypeHelper.GetLoginRightModuleName(SuperOffice.License.UserType)
  commentId: M:SuperOffice.License.UserTypeHelper.GetLoginRightModuleName(SuperOffice.License.UserType)
  id: GetLoginRightModuleName(SuperOffice.License.UserType)
  isExtensionMethod: true
  parent: SuperOffice.License.UserTypeHelper
  langs:
  - csharp
  - vb
  name: GetLoginRightModuleName(UserType)
  nameWithType: UserTypeHelper.GetLoginRightModuleName(UserType)
  fullName: SuperOffice.License.UserTypeHelper.GetLoginRightModuleName(SuperOffice.License.UserType)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.License
  summary: Get the full name (including module owner) of the login right module license from user type.
  example: []
  syntax:
    content: public static string GetLoginRightModuleName(this UserType user)
    parameters:
    - id: user
      type: SuperOffice.License.UserType
      description: User type to get name of module owner.
    return:
      type: System.String
      description: Full name (including module owner) of the login right module license from user type.
    content.vb: Public Shared Function GetLoginRightModuleName(user As UserType) As String
  overload: SuperOffice.License.UserTypeHelper.GetLoginRightModuleName*
references:
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: SuperOffice.License.UserTypeHelper.GetAssociateType*
  commentId: Overload:SuperOffice.License.UserTypeHelper.GetAssociateType
  isExternal: true
  href: SuperOffice.License.UserTypeHelper.html#SuperOffice_License_UserTypeHelper_GetAssociateType_SuperOffice_License_UserType_
  name: GetAssociateType
  nameWithType: UserTypeHelper.GetAssociateType
  fullName: SuperOffice.License.UserTypeHelper.GetAssociateType
- uid: SuperOffice.Data.AssociateType
  commentId: T:SuperOffice.Data.AssociateType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.AssociateType.html
  name: AssociateType
  nameWithType: AssociateType
  fullName: SuperOffice.Data.AssociateType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.License.UserTypeHelper.GetUserType*
  commentId: Overload:SuperOffice.License.UserTypeHelper.GetUserType
  isExternal: true
  href: SuperOffice.License.UserTypeHelper.html#SuperOffice_License_UserTypeHelper_GetUserType_SuperOffice_Data_AssociateType_
  name: GetUserType
  nameWithType: UserTypeHelper.GetUserType
  fullName: SuperOffice.License.UserTypeHelper.GetUserType
- uid: SuperOffice.License.UserTypeHelper.GetRoleType*
  commentId: Overload:SuperOffice.License.UserTypeHelper.GetRoleType
  isExternal: true
  href: SuperOffice.License.UserTypeHelper.html#SuperOffice_License_UserTypeHelper_GetRoleType_SuperOffice_Data_AssociateType_
  name: GetRoleType
  nameWithType: UserTypeHelper.GetRoleType
  fullName: SuperOffice.License.UserTypeHelper.GetRoleType
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SuperOffice.License.UserTypeHelper.GetLoginRightModuleName*
  commentId: Overload:SuperOffice.License.UserTypeHelper.GetLoginRightModuleName
  isExternal: true
  href: SuperOffice.License.UserTypeHelper.html#SuperOffice_License_UserTypeHelper_GetLoginRightModuleName_SuperOffice_License_UserType_
  name: GetLoginRightModuleName
  nameWithType: UserTypeHelper.GetLoginRightModuleName
  fullName: SuperOffice.License.UserTypeHelper.GetLoginRightModuleName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
