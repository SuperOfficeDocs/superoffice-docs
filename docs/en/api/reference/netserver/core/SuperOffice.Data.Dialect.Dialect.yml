### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Dialect.Dialect
  commentId: T:SuperOffice.Data.Dialect.Dialect
  id: Dialect
  parent: SuperOffice.Data.Dialect
  children:
  - SuperOffice.Data.Dialect.Dialect.#ctor
  - SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  - SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  - SuperOffice.Data.Dialect.Dialect.CheckForAlias
  - SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  - SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  - SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  - SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32)
  - SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32,System.Threading.CancellationToken)
  - SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  - SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  - SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  - SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  - SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  - SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  - SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  - SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  - SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  - SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  - SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  - SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  - SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  - SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  - SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  - SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  - SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  - SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  - SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  - SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  - SuperOffice.Data.Dialect.Dialect.LockReader``1(SuperOffice.Data.SoDataReader,System.Func{``0})
  - SuperOffice.Data.Dialect.Dialect.MaxInSize
  - SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  - SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  - SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  - SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  - SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  - SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  - SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  - SuperOffice.Data.Dialect.Dialect.Tables
  - SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  - SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Greatest)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasFlag)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasNoFlag)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.JsonValue)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  - SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  - SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  - SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  - SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  - SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  - SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  - SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  - SuperOffice.Data.Dialect.Dialect.VarcharType
  - SuperOffice.Data.Dialect.Dialect._cmd
  - SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  - SuperOffice.Data.Dialect.Dialect._filterCallbacks
  - SuperOffice.Data.Dialect.Dialect._returnArguments
  - SuperOffice.Data.Dialect.Dialect._returnDBFields
  - SuperOffice.Data.Dialect.Dialect._soSchemaTable
  - SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  - SuperOffice.Data.Dialect.Dialect._tables
  - SuperOffice.Data.Dialect.Dialect._tablesInJoin
  - SuperOffice.Data.Dialect.Dialect._usedAliases
  langs:
  - csharp
  - vb
  name: Dialect
  nameWithType: Dialect
  fullName: SuperOffice.Data.Dialect.Dialect
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    <remarks>

    All classes inheriting from this class must implement the following code:

    <pre><code class="lang-csharp">static System.Collections.Hashtable _toSqlHelper = null;

    protected override Hashtable System.Collections.ToSqlHelper

    {
    	get {return _toSqlHelper;}
    	set {_toSqlHelper = value;}
    }</code></pre>

    </remarks>

    This class is the sql-generator in the new SSearch. 

    It has various derived classes that represents the databases we use. 

    These classes contain the information needed to generate the db-specific sql.
  example: []
  syntax:
    content: public abstract class Dialect
    content.vb: Public MustInherit Class Dialect
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.Data.Dialect.OracleCommon
  - SuperOffice.Data.Dialect.PostgreSqlDialect
  - SuperOffice.Data.Dialect.SqlServerCommon
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.Dialect.Dialect.EnumUtil.MapEnums``2
  - SuperOffice.Data.Dialect.Dialect.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Data.Dialect.Dialect._tables
  commentId: F:SuperOffice.Data.Dialect.Dialect._tables
  id: _tables
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _tables
  nameWithType: Dialect._tables
  fullName: SuperOffice.Data.Dialect.Dialect._tables
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Contains information regarding the current tables we are working with.
  example: []
  syntax:
    content: protected TableInfoCollection _tables
    return:
      type: SuperOffice.Data.SQL.TableInfoCollection
    content.vb: Protected _tables As TableInfoCollection
- uid: SuperOffice.Data.Dialect.Dialect._tablesInJoin
  commentId: F:SuperOffice.Data.Dialect.Dialect._tablesInJoin
  id: _tablesInJoin
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _tablesInJoin
  nameWithType: Dialect._tablesInJoin
  fullName: SuperOffice.Data.Dialect.Dialect._tablesInJoin
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    A sub-collection of _tables, containing those tables that are part of a join restriction.

    Populated by ParseJoinClause and used by ToSqlFrom to avoid listing tables twice
  example: []
  syntax:
    content: protected TableInfoCollection _tablesInJoin
    return:
      type: SuperOffice.Data.SQL.TableInfoCollection
    content.vb: Protected _tablesInJoin As TableInfoCollection
- uid: SuperOffice.Data.Dialect.Dialect._returnDBFields
  commentId: F:SuperOffice.Data.Dialect.Dialect._returnDBFields
  id: _returnDBFields
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _returnDBFields
  nameWithType: Dialect._returnDBFields
  fullName: SuperOffice.Data.Dialect.Dialect._returnDBFields
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Contains information regarding the fields in returnfields. Does not contain information 

    regarding Arguments.
  example: []
  syntax:
    content: protected FieldInfoCollection _returnDBFields
    return:
      type: SuperOffice.Data.SQL.FieldInfoCollection
    content.vb: Protected _returnDBFields As FieldInfoCollection
- uid: SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  commentId: F:SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  id: _dbSchemaTable
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _dbSchemaTable
  nameWithType: Dialect._dbSchemaTable
  fullName: SuperOffice.Data.Dialect.Dialect._dbSchemaTable
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: protected DataTable _dbSchemaTable
    return:
      type: System.Data.DataTable
    content.vb: Protected _dbSchemaTable As DataTable
- uid: SuperOffice.Data.Dialect.Dialect._soSchemaTable
  commentId: F:SuperOffice.Data.Dialect.Dialect._soSchemaTable
  id: _soSchemaTable
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _soSchemaTable
  nameWithType: Dialect._soSchemaTable
  fullName: SuperOffice.Data.Dialect.Dialect._soSchemaTable
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: protected DataTable _soSchemaTable
    return:
      type: System.Data.DataTable
    content.vb: Protected _soSchemaTable As DataTable
- uid: SuperOffice.Data.Dialect.Dialect._returnArguments
  commentId: F:SuperOffice.Data.Dialect.Dialect._returnArguments
  id: _returnArguments
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _returnArguments
  nameWithType: Dialect._returnArguments
  fullName: SuperOffice.Data.Dialect.Dialect._returnArguments
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: protected List<Argument> _returnArguments
    return:
      type: System.Collections.Generic.List{SuperOffice.Data.SQL.Argument}
    content.vb: Protected _returnArguments As List(Of Argument)
- uid: SuperOffice.Data.Dialect.Dialect._usedAliases
  commentId: F:SuperOffice.Data.Dialect.Dialect._usedAliases
  id: _usedAliases
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _usedAliases
  nameWithType: Dialect._usedAliases
  fullName: SuperOffice.Data.Dialect.Dialect._usedAliases
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The user can use different types of aliases in the select-statement. 

    Ex. use Personname on a field and use another text in the order-by clause. 

    This table will store the aliases used in the query and validate them before the

    sql is sent to the database.
  example: []
  syntax:
    content: protected ArrayList _usedAliases
    return:
      type: System.Collections.ArrayList
    content.vb: Protected _usedAliases As ArrayList
- uid: SuperOffice.Data.Dialect.Dialect._filterCallbacks
  commentId: F:SuperOffice.Data.Dialect.Dialect._filterCallbacks
  id: _filterCallbacks
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _filterCallbacks
  nameWithType: Dialect._filterCallbacks
  fullName: SuperOffice.Data.Dialect.Dialect._filterCallbacks
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Callbacks that can unconditionally throw away ("filter") a row during reading.

    <b>Be careful</b> if you think you need this; it can quickly become complex if the reasons for filtering a row

    reside inside something that could be part of an OR ...
  example: []
  syntax:
    content: protected readonly List<Func<IDataReader, bool>> _filterCallbacks
    return:
      type: System.Collections.Generic.List{System.Func{System.Data.IDataReader,System.Boolean}}
    content.vb: Protected ReadOnly _filterCallbacks As List(Of Func(Of IDataReader, Boolean))
- uid: SuperOffice.Data.Dialect.Dialect._cmd
  commentId: F:SuperOffice.Data.Dialect.Dialect._cmd
  id: _cmd
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _cmd
  nameWithType: Dialect._cmd
  fullName: SuperOffice.Data.Dialect.Dialect._cmd
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Current SqlCommand
  example: []
  syntax:
    content: protected SqlCommand _cmd
    return:
      type: SuperOffice.Data.SQL.SqlCommand
    content.vb: Protected _cmd As SqlCommand
- uid: SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  commentId: F:SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  id: _stringFieldsInOrderByWithDistinct
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: _stringFieldsInOrderByWithDistinct
  nameWithType: Dialect._stringFieldsInOrderByWithDistinct
  fullName: SuperOffice.Data.Dialect.Dialect._stringFieldsInOrderByWithDistinct
  type: Field
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected HashSet<FieldInfo> _stringFieldsInOrderByWithDistinct
    return:
      type: System.Collections.Generic.HashSet{SuperOffice.Data.SQL.FieldInfo}
    content.vb: Protected _stringFieldsInOrderByWithDistinct As HashSet(Of FieldInfo)
- uid: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  commentId: M:SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  id: CheckForDuplicateRow(System.Data.IDataReader)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: CheckForDuplicateRow(IDataReader)
  nameWithType: Dialect.CheckForDuplicateRow(IDataReader)
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow(System.Data.IDataReader)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Some databases (ORACLE!!) are unable to do DISTINCT over the datatype we use for our 2k text strings; in those cases

    we need to 'fake' a distinct. This method is called from the <xref href="SuperOffice.Data.SoDataReader" data-throw-if-not-resolved="false"></xref> to determine if the current

    row is such a duplicate.
  example: []
  syntax:
    content: public virtual bool CheckForDuplicateRow(IDataReader reader)
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: Reader containing the row to be evaluated
    return:
      type: System.Boolean
      description: If true, then this row is a duplicate of one that has been previously passed to this method
    content.vb: Public Overridable Function CheckForDuplicateRow(reader As IDataReader) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow*
- uid: SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  id: CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: CheckForDistinct(PrivateSelect)
  nameWithType: Dialect.CheckForDistinct(PrivateSelect)
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForDistinct(SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Some databases (ORACLE!!) are unable to do DISTINCT over the datatype we use for our 2k text strings; in those cases

    we need to 'fake' a distinct. This method is called when generating the SQL text, and controls whether we should

    say "distinct" as part of the select
  example: []
  syntax:
    content: public virtual bool CheckForDistinct(PrivateSelect cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.PrivateSelect
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CheckForDistinct(cmd As PrivateSelect) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.CheckForDistinct*
- uid: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  id: ShouldRowBeSkipped(System.Data.IDataReader)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ShouldRowBeSkipped(IDataReader)
  nameWithType: Dialect.ShouldRowBeSkipped(IDataReader)
  fullName: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped(System.Data.IDataReader)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Invoke Filter callbacks to see if the row should be skipped. Use with care.
  example: []
  syntax:
    content: public bool ShouldRowBeSkipped(IDataReader reader)
    parameters:
    - id: reader
      type: System.Data.IDataReader
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ShouldRowBeSkipped(reader As IDataReader) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped*
- uid: SuperOffice.Data.Dialect.Dialect.#ctor
  commentId: M:SuperOffice.Data.Dialect.Dialect.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: Dialect()
  nameWithType: Dialect.Dialect()
  fullName: SuperOffice.Data.Dialect.Dialect.Dialect()
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Default constructor
  example: []
  syntax:
    content: protected Dialect()
    content.vb: Protected Sub New()
  overload: SuperOffice.Data.Dialect.Dialect.#ctor*
  nameWithType.vb: Dialect.New()
  fullName.vb: SuperOffice.Data.Dialect.Dialect.New()
  name.vb: New()
- uid: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  id: IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: IsTableReferencedInSelect(SoTable)
  nameWithType: Dialect.IsTableReferencedInSelect(SoTable)
  fullName: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect(SuperOffice.Data.Dictionary.SoTable)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Is a table referenced at least one in the current SQL (by definition, not by instance!)
  remarks: >-
    This call is valid only after ToSqlFrom and ParseJoin have been executed, since these are the

    methods that populate the reference. Too-early calls will result in a 'false'  result. Also

    note that calling this method on a delete, update or insert type sql will always yield 'false'.
  example: []
  syntax:
    content: protected bool IsTableReferencedInSelect(SoTable definition)
    parameters:
    - id: definition
      type: SuperOffice.Data.Dictionary.SoTable
      description: Definition of table to check for
    return:
      type: System.Boolean
      description: True if table is referenced
    content.vb: Protected Function IsTableReferencedInSelect(definition As SoTable) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect*
- uid: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  id: GetUpdatedSchemaTable(System.Data.DataTable)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetUpdatedSchemaTable(DataTable)
  nameWithType: Dialect.GetUpdatedSchemaTable(DataTable)
  fullName: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable(System.Data.DataTable)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Get the schema as it is converted to from the underlying database schema types.
  example: []
  syntax:
    content: public virtual DataTable GetUpdatedSchemaTable(DataTable dbSchemaTable)
    parameters:
    - id: dbSchemaTable
      type: System.Data.DataTable
      description: ''
    return:
      type: System.Data.DataTable
      description: Schema complient with internal NetServer types.
    content.vb: Public Overridable Function GetUpdatedSchemaTable(dbSchemaTable As DataTable) As DataTable
  overload: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable*
- uid: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  id: GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo,SuperOffice.Data.SQL.Parameter,System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GenerateCaseInsensitivity(FieldInfo, Parameter, string)
  nameWithType: Dialect.GenerateCaseInsensitivity(FieldInfo, Parameter, string)
  fullName: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.SQL.Parameter, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Oracle treats string a bit differently than other databases. Oracle is Case-sensitive. 

    This function takes care of this without risking a full table scan.
  example: []
  syntax:
    content: protected virtual string GenerateCaseInsensitivity(FieldInfo left, Parameter right, string sqloper)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.FieldInfo
      description: FieldInfo
    - id: right
      type: SuperOffice.Data.SQL.Parameter
      description: Parameter
    - id: sqloper
      type: System.String
      description: string sql operator
    return:
      type: System.String
      description: The generated case-insensitive string
    content.vb: Protected Overridable Function GenerateCaseInsensitivity(left As FieldInfo, right As Parameter, sqloper As String) As String
  overload: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity*
  nameWithType.vb: Dialect.GenerateCaseInsensitivity(FieldInfo, Parameter, String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity(SuperOffice.Data.SQL.FieldInfo, SuperOffice.Data.SQL.Parameter, String)
  name.vb: GenerateCaseInsensitivity(FieldInfo, Parameter, String)
- uid: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  id: GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetOriginAsComment(SqlCommand)
  nameWithType: Dialect.GetOriginAsComment(SqlCommand)
  fullName: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment(SuperOffice.Data.SQL.SqlCommand)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Convert the Origin string into something that can be embedded in an SQL statement without breaking it
  remarks: >-
    The comment generated here is extremely useful for debugging, and contains not only the Origin string,

    but the database context (tenant/customer in Online!), associate, and service method info.
  example: []
  syntax:
    content: protected virtual string GetOriginAsComment(SqlCommand command)
    parameters:
    - id: command
      type: SuperOffice.Data.SQL.SqlCommand
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function GetOriginAsComment(command As SqlCommand) As String
  overload: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment*
- uid: SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DateToVarchar(System.String)
  id: DateToVarchar(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DateToVarchar(string)
  nameWithType: Dialect.DateToVarchar(string)
  fullName: SuperOffice.Data.Dialect.Dialect.DateToVarchar(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "Subclass override: How to convert a datetime to a varchar (or whatever it's called), in the database, taking only the DATE part"
  example: []
  syntax:
    content: protected abstract string DateToVarchar(string innerValue)
    parameters:
    - id: innerValue
      type: System.String
      description: >-
        The actual reference to the datetime to work on; this is an opaque parameter that the method should NOT attempt to understand,
                    just assume it will be a valid datetime value or parameter at query-execution time
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function DateToVarchar(innerValue As String) As String
  overload: SuperOffice.Data.Dialect.Dialect.DateToVarchar*
  nameWithType.vb: Dialect.DateToVarchar(String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DateToVarchar(String)
  name.vb: DateToVarchar(String)
- uid: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.TimeToVarchar(System.String)
  id: TimeToVarchar(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: TimeToVarchar(string)
  nameWithType: Dialect.TimeToVarchar(string)
  fullName: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: "Subclass override: How to convert a datetime to a varchar (or whatever it's called), in the database, taking only the TIME part"
  example: []
  syntax:
    content: protected abstract string TimeToVarchar(string innerValue)
    parameters:
    - id: innerValue
      type: System.String
      description: >-
        The actual reference to the datetime to work on; this is an opaque parameter that the method should NOT attempt to understand,
                    just assume it will be a valid datetime value or parameter at query-execution time
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function TimeToVarchar(innerValue As String) As String
  overload: SuperOffice.Data.Dialect.Dialect.TimeToVarchar*
  nameWithType.vb: Dialect.TimeToVarchar(String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.TimeToVarchar(String)
  name.vb: TimeToVarchar(String)
- uid: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  id: HandleDateAndTimeWrapping(System.String,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: HandleDateAndTimeWrapping(string, FieldDataType)
  nameWithType: Dialect.HandleDateAndTimeWrapping(string, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(string, SuperOffice.Data.FieldDataType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Date and Time (as separate types, not DateTime) are handled by in-database-conversions, on the fly;

    create the syntax for that, in case we happen to be dealing with them (the syntax is VERY db-dependent

    and implemented by virtual methods in the different dialects)
  example: []
  syntax:
    content: protected string HandleDateAndTimeWrapping(string innerValue, FieldDataType fieldType)
    parameters:
    - id: innerValue
      type: System.String
      description: ''
    - id: fieldType
      type: SuperOffice.Data.FieldDataType
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Function HandleDateAndTimeWrapping(innerValue As String, fieldType As FieldDataType) As String
  overload: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping*
  nameWithType.vb: Dialect.HandleDateAndTimeWrapping(String, FieldDataType)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping(String, SuperOffice.Data.FieldDataType)
  name.vb: HandleDateAndTimeWrapping(String, FieldDataType)
- uid: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(System.Int32)
  id: GetFieldDbDataType(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetFieldDbDataType(int)
  nameWithType: Dialect.GetFieldDbDataType(int)
  fullName: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    We need to know the data type of the first field we are returning (The select [fieldname]-clause).

    To get this information, we run through the private member <xref href="SuperOffice.Data.Dialect.Dialect._returnDBFields" data-throw-if-not-resolved="false"></xref> and return

    the data type that corresponds to the given index.
  example: []
  syntax:
    content: public FieldDataType GetFieldDbDataType(int index)
    parameters:
    - id: index
      type: System.Int32
      description: The index of the actual field.
    return:
      type: SuperOffice.Data.FieldDataType
      description: The FieldDataType of the actual field.
    content.vb: Public Function GetFieldDbDataType(index As Integer) As FieldDataType
  overload: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType*
  nameWithType.vb: Dialect.GetFieldDbDataType(Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType(Integer)
  name.vb: GetFieldDbDataType(Integer)
- uid: SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  id: GetIndexOfField(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetIndexOfField(Argument)
  nameWithType: Dialect.GetIndexOfField(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.GetIndexOfField(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Sometimes we need to know the index of one of the fields we are returning (The select [fieldname]-clause).

    To get this information, we run through the private member <xref href="SuperOffice.Data.Dialect.Dialect._returnArguments" data-throw-if-not-resolved="false"></xref> and return

    the correct index according to the in-parameter.
  example: []
  syntax:
    content: public int GetIndexOfField(Argument field)
    parameters:
    - id: field
      type: SuperOffice.Data.SQL.Argument
      description: The field we want to know the index of.
    return:
      type: System.Int32
      description: The index of the in-parameter FieldInfo.
    content.vb: Public Function GetIndexOfField(field As Argument) As Integer
  overload: SuperOffice.Data.Dialect.Dialect.GetIndexOfField*
- uid: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(System.Int32)
  id: GetFieldInfoFromIndex(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetFieldInfoFromIndex(int)
  nameWithType: Dialect.GetFieldInfoFromIndex(int)
  fullName: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public FieldInfo GetFieldInfoFromIndex(int index)
    parameters:
    - id: index
      type: System.Int32
    return:
      type: SuperOffice.Data.SQL.FieldInfo
    content.vb: Public Function GetFieldInfoFromIndex(index As Integer) As FieldInfo
  overload: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex*
  nameWithType.vb: Dialect.GetFieldInfoFromIndex(Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex(Integer)
  name.vb: GetFieldInfoFromIndex(Integer)
- uid: SuperOffice.Data.Dialect.Dialect.CheckForAlias
  commentId: M:SuperOffice.Data.Dialect.Dialect.CheckForAlias
  id: CheckForAlias
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: CheckForAlias()
  nameWithType: Dialect.CheckForAlias()
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForAlias()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Some of the databases we support supports aliasing on for example Insert and Update. Some don't. 

    This function asks the current database if it support alias for the specific sql-command. 

    Default value in Dialect is true. Each new database must therefore override the HasAliasOn...

    function to change this.
  example: []
  syntax:
    content: protected bool CheckForAlias()
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function CheckForAlias() As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.CheckForAlias*
- uid: SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  commentId: M:SuperOffice.Data.Dialect.Dialect.InvokeToSql(System.Object[])
  id: InvokeToSql(System.Object[])
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: InvokeToSql(params object[])
  nameWithType: Dialect.InvokeToSql(params object[])
  fullName: SuperOffice.Data.Dialect.Dialect.InvokeToSql(params object[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    InvokeToSql checks the in-parameters type against the already existing ToSqlHelper-array. 

    When the key is found in the array, the key's object (the <xref href="SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)" data-throw-if-not-resolved="false"></xref> method) is called.
  example: []
  syntax:
    content: protected string InvokeToSql(params object[] toSqlArguments)
    parameters:
    - id: toSqlArguments
      type: System.Object[]
      description: >-
        arguments as passed to the <xref href="SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)" data-throw-if-not-resolved="false"></xref> method.  The arguments' type needs to be an 

        exact match of the type implemented in the appropriate ToSql method.
    return:
      type: System.String
      description: returns the stringvalue returned from the Invoked <xref href="SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)" data-throw-if-not-resolved="false"></xref> method
    content.vb: Protected Function InvokeToSql(ParamArray toSqlArguments As Object()) As String
  overload: SuperOffice.Data.Dialect.Dialect.InvokeToSql*
  exceptions:
  - type: SuperOffice.Exceptions.SoNotImplementedException
    commentId: T:SuperOffice.Exceptions.SoNotImplementedException
    description: There is no appropriate <xref href="SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)" data-throw-if-not-resolved="false"></xref> method to invoke.
  - type: SuperOffice.Exceptions.SoException
    commentId: T:SuperOffice.Exceptions.SoException
    description: An exception was thrown while trying to invoke the <xref href="SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)" data-throw-if-not-resolved="false"></xref> method
  nameWithType.vb: Dialect.InvokeToSql(ParamArray Object())
  fullName.vb: SuperOffice.Data.Dialect.Dialect.InvokeToSql(ParamArray Object())
  name.vb: InvokeToSql(ParamArray Object())
- uid: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  id: IsAnyArgumentString(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: IsAnyArgumentString(params Argument[])
  nameWithType: Dialect.IsAnyArgumentString(params Argument[])
  fullName: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(params SuperOffice.Data.SQL.Argument[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Determine if at least one of the given arguments is a FieldInfo of type string
  example: []
  syntax:
    content: public static bool IsAnyArgumentString(params Argument[] arguments)
    parameters:
    - id: arguments
      type: SuperOffice.Data.SQL.Argument[]
      description: Zero or more arguments, null is allowed
    return:
      type: System.Boolean
      description: true if at least one is a FieldInfo of type string
    content.vb: Public Shared Function IsAnyArgumentString(ParamArray arguments As Argument()) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString*
  nameWithType.vb: Dialect.IsAnyArgumentString(ParamArray Argument())
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString(ParamArray SuperOffice.Data.SQL.Argument())
  name.vb: IsAnyArgumentString(ParamArray Argument())
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  id: ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSqlUpperIfNeeded(Argument)
  nameWithType: Dialect.ToSqlUpperIfNeeded(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSqlUpperIfNeeded(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSqlUpperIfNeeded(arg As Argument) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded*
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  id: ToSqlFrom
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSqlFrom()
  nameWithType: Dialect.ToSqlFrom()
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlFrom()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    ToSqlFrom runs through the TableInfoCollection in Dialect and creates a 

    string containing the table-name and alias of a table. If there are several tables, 

    we add a ", " between each of them. Ex:

    <pre><code class="lang-csharp">associate T0, contact T1, appointment T2</code></pre>

    Tables in the _tablesInJoin collection are automatically skipped, and not part of this list
  example: []
  syntax:
    content: protected virtual string ToSqlFrom()
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSqlFrom() As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSqlFrom*
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  id: ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSqlField(FieldInfoCollection)
  nameWithType: Dialect.ToSqlField(FieldInfoCollection)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.FieldInfoCollection)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    This function will run through a fieldcollection and return the selected fields

    together with the appropriate table-alias. This is possible because each field

    has knowledge about its parent (table) and each table contains a auto generated

    alias. The order on the fields will not change according to the way the user has 

    entered them.
  example: []
  syntax:
    content: protected virtual string ToSqlField(FieldInfoCollection arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.FieldInfoCollection
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSqlField(arg As FieldInfoCollection) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSqlField*
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  id: ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSqlField(ArgumentCollection)
  nameWithType: Dialect.ToSqlField(ArgumentCollection)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ArgumentCollection)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    This function will run through a fieldcollection and return the selected fields

    together with the appropriate table-alias. This is possible because each field

    has knowledge about its parent (table) and each table contains a auto generated

    alias. The order on the fields will not change according to the way the user has 

    entered them.
  example: []
  syntax:
    content: protected virtual string ToSqlField(ArgumentCollection arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.ArgumentCollection
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSqlField(arg As ArgumentCollection) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSqlField*
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  id: ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSqlField(ReturnFieldsCollection)
  nameWithType: Dialect.ToSqlField(ReturnFieldsCollection)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField(SuperOffice.Data.SQL.ReturnFieldsCollection)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    ToSqlField( ReturnFieldsCollection arg ) will run through the in-parameter and 

    create the correct sql-syntax for the fields the user want to return from the

    query.
  example: []
  syntax:
    content: protected virtual string ToSqlField(ReturnFieldsCollection arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.ReturnFieldsCollection
      description: The ReturnFieldsCollection the user wants to run through
    return:
      type: System.String
      description: The sql-clause
    content.vb: Protected Overridable Function ToSqlField(arg As ReturnFieldsCollection) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSqlField*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  id: ToSql(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Argument)
  nameWithType: Dialect.ToSql(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Not implemented.
  example: []
  syntax:
    content: protected virtual string ToSql(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Argument) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  id: GetOrderbyCollationHint
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetOrderbyCollationHint()
  nameWithType: Dialect.GetOrderbyCollationHint()
  fullName: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string GetOrderbyCollationHint()
    return:
      type: System.String
    content.vb: Protected Overridable Function GetOrderbyCollationHint() As String
  overload: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  id: ToSql(SuperOffice.Data.SQL.OrderBy)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(OrderBy)
  nameWithType: Dialect.ToSql(OrderBy)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.OrderBy)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: The Order By is used when you want your data shown in a specific order.
  example: []
  syntax:
    content: protected virtual string ToSql(OrderBy arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.OrderBy
      description: The OrderBy clause
    return:
      type: System.String
      description: The Order By sql-clause.
    content.vb: Protected Overridable Function ToSql(arg As OrderBy) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  id: ToSql(SuperOffice.Data.SQL.GroupBy)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(GroupBy)
  nameWithType: Dialect.ToSql(GroupBy)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GroupBy)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( GroupBy arg ) parses the Group by clause and returns the values first entered.
  example: []
  syntax:
    content: protected virtual string ToSql(GroupBy arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.GroupBy
      description: The Group by clause.
    return:
      type: System.String
      description: The parsed Group by clause.
    content.vb: Protected Overridable Function ToSql(arg As GroupBy) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  id: ToSql(SuperOffice.Data.SQL.Count)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Count)
  nameWithType: Dialect.ToSql(Count)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Count)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( Count arg ) parses the Count clause in the sql command and returns the correct values.
  example: []
  syntax:
    content: protected virtual string ToSql(Count arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Count
      description: The count-clause.
    return:
      type: System.String
      description: The parsed string.
    content.vb: Protected Overridable Function ToSql(arg As Count) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  id: ToSql(SuperOffice.Data.SQL.CountAll)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(CountAll)
  nameWithType: Dialect.ToSql(CountAll)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.CountAll)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( CountAll arg ) parses the CountAll clause in the sql command and returns the correct values.
  example: []
  syntax:
    content: protected virtual string ToSql(CountAll arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.CountAll
      description: The countAll-clause.
    return:
      type: System.String
      description: The parsed string; always COUNT(*) regardless of argument.
    content.vb: Protected Overridable Function ToSql(arg As CountAll) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  id: ToSql(SuperOffice.Data.SQL.IsNull)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(IsNull)
  nameWithType: Dialect.ToSql(IsNull)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNull)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: The ToSql( IsNull ) is used when you want to check if a field is null.
  example: []
  syntax:
    content: protected virtual string ToSql(IsNull arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.IsNull
      description: The field-info you want to check the value on.
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As IsNull) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  id: ToSql(SuperOffice.Data.SQL.IsNotNull)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(IsNotNull)
  nameWithType: Dialect.ToSql(IsNotNull)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.IsNotNull)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: The ToSql( IsNotNull ) is used when you want to check if a field is not null.
  example: []
  syntax:
    content: protected virtual string ToSql(IsNotNull arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.IsNotNull
      description: The field-info you want to check the value on
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As IsNotNull) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  commentId: M:SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  id: EncodedArraySearch(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument[],SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType,SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: EncodedArraySearch(Argument, Argument[], EncodedArraySearchType, FulltextEncodedSearch)
  nameWithType: Dialect.EncodedArraySearch(Argument, Argument[], Dialect.EncodedArraySearchType, Dialect.FulltextEncodedSearch)
  fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument[], SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType, SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string EncodedArraySearch(Argument left, Argument[] right, Dialect.EncodedArraySearchType searchType, Dialect.FulltextEncodedSearch fts = null)
    parameters:
    - id: left
      type: SuperOffice.Data.SQL.Argument
    - id: right
      type: SuperOffice.Data.SQL.Argument[]
    - id: searchType
      type: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    - id: fts
      type: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    return:
      type: System.String
    content.vb: Protected Overridable Function EncodedArraySearch(left As Argument, right As Argument(), searchType As Dialect.EncodedArraySearchType, fts As Dialect.FulltextEncodedSearch = Nothing) As String
  overload: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch*
  nameWithType.vb: Dialect.EncodedArraySearch(Argument, Argument(), Dialect.EncodedArraySearchType, Dialect.FulltextEncodedSearch)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument(), SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType, SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch)
  name.vb: EncodedArraySearch(Argument, Argument(), EncodedArraySearchType, FulltextEncodedSearch)
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  id: ToSql(SuperOffice.Data.SQL.In)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(In)
  nameWithType: Dialect.ToSql(In)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.In)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The not in-operator (NOT IN) is used when you want to get data that 

    corresponds with the restriction-clause but does not contain the values 

    described in the not in-clause. 

    <pre><code class="lang-csharp">SELECT T0.associate_id

    FROM associate TO

    WHERE associate_id BETWEEN 10 AND 100

    AND T0.associate_id NOT IN (20, 30, 40, 50, 60, 70, 80, 90);</code></pre>

    This example will give you all the associate_id's between 10 and 100 but the ones

    described  in the not in-clause.
  remarks: This operator temporarily supports int[] fields, with HAS_ALL semantics
  example: []
  syntax:
    content: protected virtual string ToSql(In arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.In
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As [In]) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  id: ToSql(SuperOffice.Data.SQL.HasAny)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(HasAny)
  nameWithType: Dialect.ToSql(HasAny)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAny)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Process the special HasAny, which doesn't correspond to SQL. However it does work (only!) with our special

    simulated int[] datatype, encoded as words in a text field
  example: []
  syntax:
    content: protected virtual string ToSql(HasAny arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.HasAny
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As HasAny) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  id: ToSql(SuperOffice.Data.SQL.HasAll)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(HasAll)
  nameWithType: Dialect.ToSql(HasAll)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasAll)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Process the special HasAny, which doesn't correspond to SQL. However it does work (only!) with our special

    simulated int[] datatype, encoded as words in a text field
  example: []
  syntax:
    content: protected virtual string ToSql(HasAll arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.HasAll
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As HasAll) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  id: ToSql(SuperOffice.Data.SQL.MissingAny)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(MissingAny)
  nameWithType: Dialect.ToSql(MissingAny)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAny)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Process the special HasAny, which doesn't correspond to SQL. However it does work (only!) with our special

    simulated int[] datatype, encoded as words in a text field
  example: []
  syntax:
    content: protected virtual string ToSql(MissingAny arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.MissingAny
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As MissingAny) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  id: ToSql(SuperOffice.Data.SQL.MissingAll)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(MissingAll)
  nameWithType: Dialect.ToSql(MissingAll)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.MissingAll)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Process the special HasAny, which doesn't correspond to SQL. However it does work (only!) with our special

    simulated int[] datatype, encoded as words in a text field
  example: []
  syntax:
    content: protected virtual string ToSql(MissingAll arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.MissingAll
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As MissingAll) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  id: ToSql(SuperOffice.Data.SQL.NotIn)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(NotIn)
  nameWithType: Dialect.ToSql(NotIn)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotIn)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The in-operator (IN) is used when you want to get specific data from the database

    but you don't want to use a regular restriction-clause to get it. 

    <pre><code class="lang-csharp">SELECT T0.associate_id

    FROM associate TO

    WHERE T0.associate_id IN (20, 30, 40, 50, 60, 70, 80, 90);</code></pre>

    This example will give you the associate_id's described  in the in-clause.
  example: []
  syntax:
    content: protected virtual string ToSql(NotIn arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.NotIn
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As NotIn) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  id: ToSql(SuperOffice.Data.SQL.Between)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Between)
  nameWithType: Dialect.ToSql(Between)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Between)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The between-operator (BETWEEN) is used when you want the values between range a and range b. 

    <pre><code class="lang-csharp">SELECT T0.associate_id

    FROM associate T0

    WHERE associate_id BETWEEN 10 AND 100;</code></pre>

    The operator can also give range-values based on sub-selects:

    <pre><code class="lang-csharp">SELECT T0.associate_id

    FROM associate T0

    WHERE associate_id BETWEEN 
    	(SELECT TO.associate_id
    	FROM associate T0
    	WHERE TO.name = 'SuperOffice')
    AND 
    	(SELECT TO.associate_id 
    	FROM associate TO
    	WHERE TO.date &gt; '08.10.2002');</code></pre>
    This may not make very much sense, but the possibility to do it is here.
  example: []
  syntax:
    content: protected virtual string ToSql(Between arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Between
      description: ''
    return:
      type: System.String
      description: string clause
    content.vb: Protected Overridable Function ToSql(arg As Between) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  id: ToSql(SuperOffice.Data.SQL.NotBetween)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(NotBetween)
  nameWithType: Dialect.ToSql(NotBetween)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotBetween)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The not between-operator (NOT BETWEEN) is used when you do not want the values between range a and range b. 

    <pre><code class="lang-csharp">SELECT T0.associate_id

    FROM associate T0

    WHERE associate_id NOT BETWEEN 10 AND 100;</code></pre>

    The operator can also give range-values based on sub-selects:

    <pre><code class="lang-csharp">SELECT T0.associate_id

    FROM associate T0

    WHERE associate_id NOT BETWEEN 
    	(SELECT TO.associate_id
    	FROM associate T0
    	WHERE TO.name = 'SuperOffice')
    AND 6
    	(SELECT TO.associate_id 
    	FROM associate TO
    	WHERE TO.date &gt; '08.10.2002');</code></pre>
    This may not make very much sense, but the possibility to do it is here.
  example: []
  syntax:
    content: protected virtual string ToSql(NotBetween arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.NotBetween
      description: ''
    return:
      type: System.String
      description: string clause
    content.vb: Protected Overridable Function ToSql(arg As NotBetween) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  id: ToSql(SuperOffice.Data.SQL.Like)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Like)
  nameWithType: Dialect.ToSql(Like)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Like)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Like (LIKE) operator is used when you want the left string-value

    to be somewhat similar to the right string-value, 

    <example>

    <pre><code class="lang-csharp">WHERE contact.name LIKE 'Super%'</code></pre> 

    </example>

    We add the wildcard-operator (%) to the end. A LIKE clause isn't very interesting

    without it. If the programmer don't want this, parse and remove it when the function 

    returns the correct sql-string.
  example: []
  syntax:
    content: protected virtual string ToSql(Like arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Like
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As [Like]) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  id: ToSql(SuperOffice.Data.SQL.TableInfo)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(TableInfo)
  nameWithType: Dialect.ToSql(TableInfo)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.TableInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Will return the Table's name including table prefix.
  example: []
  syntax:
    content: protected virtual string ToSql(TableInfo tableInfo)
    parameters:
    - id: tableInfo
      type: SuperOffice.Data.SQL.TableInfo
      description: The table to get the name for
    return:
      type: System.String
      description: Name of the table like <code>crm5."contact"</code>.
    content.vb: Protected Overridable Function ToSql(tableInfo As TableInfo) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  id: ToSql(SuperOffice.Data.SQL.FieldInfo)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(FieldInfo)
  nameWithType: Dialect.ToSql(FieldInfo)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Will return the Field's name together with the generated table-alias.

    <pre><code class="lang-csharp">T1."contact"</code></pre>
  example: []
  syntax:
    content: protected virtual string ToSql(FieldInfo arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.FieldInfo
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As FieldInfo) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  id: ToSql(SuperOffice.Data.SQL.Parameter)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Parameter)
  nameWithType: Dialect.ToSql(Parameter)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Parameter)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Returns the parameter, either as a string with apostrophe's around 

    <pre><code class="lang-csharp">'Super'</code></pre>

    or as a "normal" numeric value.
  example: []
  syntax:
    content: protected virtual string ToSql(Parameter arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Parameter
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Parameter) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  id: ToSql(SuperOffice.Data.SQL.NotLike)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(NotLike)
  nameWithType: Dialect.ToSql(NotLike)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.NotLike)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Not Like (NOT LIKE) operator is used when you do not want the left string-value

    to be somewhat similar to the right string-value, 

    <example>

    <pre><code class="lang-csharp">WHERE contact.name NOT LIKE 'Super%'</code></pre>

    </example>

    We add the wildcard-operator (%) to the end. A NOT LIKE clause isn't very interesting

    without it. If the programmer don't want this, parse and remove it when the function 

    returns the correct sql-string.
  example: []
  syntax:
    content: protected virtual string ToSql(NotLike arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.NotLike
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As NotLike) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  id: ToSql(SuperOffice.Data.SQL.LessThan)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(LessThan)
  nameWithType: Dialect.ToSql(LessThan)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThan)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Less Than (&lt;) operator is only used in restrictions where the value in a field

    should be less then the given parameter, for example 

    <example>

    <pre><code class="lang-csharp">WHERE contact.contactId &lt; 100</code></pre> 

    </example>
  example: []
  syntax:
    content: protected virtual string ToSql(LessThan arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.LessThan
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As LessThan) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  id: ToSql(SuperOffice.Data.SQL.GreaterThan)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(GreaterThan)
  nameWithType: Dialect.ToSql(GreaterThan)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThan)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Greater Than (&gt;) operator is only used in restrictions where the value in a field

    should be greater then the given parameter, for example 

    <example> 

    <pre><code class="lang-csharp">WHERE contact.contactId &gt; 100</code></pre>

    </example>
  example: []
  syntax:
    content: protected virtual string ToSql(GreaterThan arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.GreaterThan
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As GreaterThan) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  id: ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(LessThanOrEqual)
  nameWithType: Dialect.ToSql(LessThanOrEqual)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LessThanOrEqual)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Less Than Or Equal (&lt;=) operator is only used in restrictions where the value in a field

    should be less than or equal to the given parameter, for example 

    <example>

    <pre><code class="lang-csharp">WHERE contact.contactId &lt;= 100</code></pre> 

    </example>
  example: []
  syntax:
    content: protected virtual string ToSql(LessThanOrEqual arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.LessThanOrEqual
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As LessThanOrEqual) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  id: ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(GreaterThanOrEqual)
  nameWithType: Dialect.ToSql(GreaterThanOrEqual)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.GreaterThanOrEqual)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Greater Than Or Equal (&gt;=) operator is only used in restrictions where the value in a field

    should be greater than or equal to the given parameter, for example 

    <example> 

    <pre><code class="lang-csharp">WHERE contact.contactId &gt;= 100</code></pre>

    </example>
  example: []
  syntax:
    content: protected virtual string ToSql(GreaterThanOrEqual arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.GreaterThanOrEqual
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As GreaterThanOrEqual) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  id: ToSql(SuperOffice.Data.SQL.Equal)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Equal)
  nameWithType: Dialect.ToSql(Equal)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Equal)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    You will never use the == (equal) operator on anything else then

    fields and numeric parameters ( expressions... and/ or other fields ).

    So we just return the arg.Left == arg.Right. If the right hand side isn't

    a numeric value, the return value is null.
  example: []
  syntax:
    content: protected virtual string ToSql(Equal arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Equal
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Equal) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasFlag)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasFlag)
  id: ToSql(SuperOffice.Data.SQL.HasFlag)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(HasFlag)
  nameWithType: Dialect.ToSql(HasFlag)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasFlag)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(HasFlag arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.HasFlag
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As HasFlag) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasNoFlag)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasNoFlag)
  id: ToSql(SuperOffice.Data.SQL.HasNoFlag)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(HasNoFlag)
  nameWithType: Dialect.ToSql(HasNoFlag)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.HasNoFlag)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(HasNoFlag arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.HasNoFlag
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As HasNoFlag) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  id: ToSql(SuperOffice.Data.SQL.UnEqual)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(UnEqual)
  nameWithType: Dialect.ToSql(UnEqual)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.UnEqual)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    You will never use the != ( not equal ) operator on anything else then 

    fields and numeric parameters ( or possible other fields ). 

    So we just return the arg.Left != arg.Right. If the right hand side isn't

    a numeric value, the return value is null.
  example: []
  syntax:
    content: protected virtual string ToSql(UnEqual arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.UnEqual
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As UnEqual) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  id: ToSql(SuperOffice.Data.SQL.And)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(And)
  nameWithType: Dialect.ToSql(And)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.And)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The and (AND) operator will run through itself and its sub nodes and return the appropriate sql-syntax 

    for the and-part.
  example: []
  syntax:
    content: protected virtual string ToSql(And arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.And
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As [And]) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  id: ToSql(SuperOffice.Data.SQL.Or)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Or)
  nameWithType: Dialect.ToSql(Or)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Or)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The or (OR) operator will run through itself and its subnodes and return the appropriate sql-syntax 

    for the and-part.
  example: []
  syntax:
    content: protected virtual string ToSql(Or arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Or
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As [Or]) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  id: ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression,System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ParseMathematicalArguments(MathematicalExpression, string)
  nameWithType: Dialect.ParseMathematicalArguments(MathematicalExpression, string)
  fullName: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Parses the argument-collection in MathematicalExpression.
  remarks: >-
    All classes generalized from MathematicalExpression will use this function

    to parse the collection of arguments. Oper will tell the system if we are dealing

    with an Add, Subtract, Divide or Multiply operation.
  example: []
  syntax:
    content: protected string ParseMathematicalArguments(MathematicalExpression arg, string oper)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.MathematicalExpression
      description: >-
        Argument of type MathematicalExpression is used to make sure we have
                    all the information needed to perform the necessary operations.
    - id: oper
      type: System.String
      description: The operator to use.
    return:
      type: System.String
      description: A string containing the information from the argument-collection.
    content.vb: Protected Function ParseMathematicalArguments(arg As MathematicalExpression, oper As String) As String
  overload: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments*
  nameWithType.vb: Dialect.ParseMathematicalArguments(MathematicalExpression, String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments(SuperOffice.Data.SQL.MathematicalExpression, String)
  name.vb: ParseMathematicalArguments(MathematicalExpression, String)
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Greatest)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Greatest)
  id: ToSql(SuperOffice.Data.SQL.Greatest)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Greatest)
  nameWithType: Dialect.ToSql(Greatest)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Greatest)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The MathMax-operator will return the correct field and its correct sqlOperator. 

    <pre><code class="lang-csharp">T0.lastUpdated = max of registered and updated;</code></pre>
  example: []
  syntax:
    content: protected virtual string ToSql(Greatest arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Greatest
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Greatest) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  id: ToSql(SuperOffice.Data.SQL.Add)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Add)
  nameWithType: Dialect.ToSql(Add)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Add)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Add-operator will return the correct field and its correct sqlOperator. 

    <pre><code class="lang-csharp">T0.associate_id = T0.associate_id + 1;</code></pre>
  example: []
  syntax:
    content: protected virtual string ToSql(Add arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Add
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Add) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  id: ToSql(SuperOffice.Data.SQL.Subtract)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Subtract)
  nameWithType: Dialect.ToSql(Subtract)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Subtract)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Subtract-operator will return the correct field and its correct sqlOperator. 

    <pre><code class="lang-csharp">T0.associate_id = T0.associate_id - 1;</code></pre>
  example: []
  syntax:
    content: protected virtual string ToSql(Subtract arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Subtract
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Subtract) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  id: ToSql(SuperOffice.Data.SQL.Multiply)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Multiply)
  nameWithType: Dialect.ToSql(Multiply)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Multiply)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Multiply-operator will return the correct field and its correct sqlOperator. 

    <pre><code class="lang-csharp">T0.associate_id = T0.associate_id * 1;</code></pre>
  example: []
  syntax:
    content: protected virtual string ToSql(Multiply arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Multiply
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Multiply) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  id: ToSql(SuperOffice.Data.SQL.Divide)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Divide)
  nameWithType: Dialect.ToSql(Divide)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Divide)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    The Divided-operator will return the correct field and its correct sqlOperator. 

    <pre><code class="lang-csharp">T0.associate_id = T0.associate_id / 1;</code></pre>
  example: []
  syntax:
    content: protected virtual string ToSql(Divide arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Divide
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Divide) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  id: ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(LeftOuterJoin)
  nameWithType: Dialect.ToSql(LeftOuterJoin)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.LeftOuterJoin)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( LeftOuterJoin arg ) parses the LeftOuterJoin of an Join-sql. It also adds the right-hand table to the _tablesInJoin collection.
  example: []
  syntax:
    content: protected virtual string ToSql(LeftOuterJoin arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.LeftOuterJoin
      description: The LeftOuterJoin argument
    return:
      type: System.String
      description: The LeftOuterJoin sql string
    content.vb: Protected Overridable Function ToSql(arg As LeftOuterJoin) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  id: ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(RightOuterJoin)
  nameWithType: Dialect.ToSql(RightOuterJoin)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.RightOuterJoin)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( RightOuterJoin arg ) parses the RightOuterJoin of an Join-sql.  It also adds the right-hand table to the _tablesInJoin collection.
  example: []
  syntax:
    content: protected virtual string ToSql(RightOuterJoin arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.RightOuterJoin
      description: The RightOuterJoin argument
    return:
      type: System.String
      description: The RightOuterJoin sql string
    content.vb: Protected Overridable Function ToSql(arg As RightOuterJoin) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  id: ToSql(SuperOffice.Data.SQL.InnerJoin)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(InnerJoin)
  nameWithType: Dialect.ToSql(InnerJoin)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.InnerJoin)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( InnerJoin arg ) parses the InnerJoin of an Join-sql.  It also adds the right-hand table to the _tablesInJoin collection.
  example: []
  syntax:
    content: protected virtual string ToSql(InnerJoin arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.InnerJoin
      description: The InnerJoin argument
    return:
      type: System.String
      description: The InnerJoin sql string
    content.vb: Protected Overridable Function ToSql(arg As InnerJoin) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  id: ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ParseJoinClause(JoinRestriction)
  nameWithType: Dialect.ParseJoinClause(JoinRestriction)
  fullName: SuperOffice.Data.Dialect.Dialect.ParseJoinClause(SuperOffice.Data.SQL.JoinRestriction)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    ParseJoinClause will run through the JoinRestriction clause and return the corresponding clause as sql. 

    It will also populate the _tablesInJoin with the mother table; the ToSql handlers for the specific

    join types will populate with the rest of the tables.
  example: []
  syntax:
    content: protected virtual string ParseJoinClause(JoinRestriction res)
    parameters:
    - id: res
      type: SuperOffice.Data.SQL.JoinRestriction
      description: The JoinRestriction.
    return:
      type: System.String
      description: Parsed sql-string
    content.vb: Protected Overridable Function ParseJoinClause(res As JoinRestriction) As String
  overload: SuperOffice.Data.Dialect.Dialect.ParseJoinClause*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  id: ToSql(SuperOffice.Data.SQL.Distinct)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Distinct)
  nameWithType: Dialect.ToSql(Distinct)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Distinct)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    ToSql( Distinct arg ) parses the Distinct-part of an sql-command.

    Will throw an exception if the argument is null.
  example: []
  syntax:
    content: protected virtual string ToSql(Distinct arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Distinct
      description: The Distinct in-parameter.
    return:
      type: System.String
      description: The parsed sql string.
    content.vb: Protected Overridable Function ToSql(arg As Distinct) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  id: ToSql(SuperOffice.Data.SQL.Alias)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Alias)
  nameWithType: Dialect.ToSql(Alias)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Alias)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    ToSql( Alias arg ) parse the Alias-part of an sql-command and returns the correct 

    alias for the field.
  example: []
  syntax:
    content: protected virtual string ToSql(Alias arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Alias
      description: The alias arg.
    return:
      type: System.String
      description: The finished string.
    content.vb: Protected Overridable Function ToSql(arg As [Alias]) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  id: ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(FieldTypeConvert)
  nameWithType: Dialect.ToSql(FieldTypeConvert)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.FieldTypeConvert)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    ToSql( FieldTypeConvert arg ) parse the FieldTypeConvert-part of an sql-command and returns the correct database-specific

    syntax for the conversion.
  example: []
  syntax:
    content: protected virtual string ToSql(FieldTypeConvert arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.FieldTypeConvert
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As FieldTypeConvert) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.JsonValue)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.JsonValue)
  id: ToSql(SuperOffice.Data.SQL.JsonValue)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(JsonValue)
  nameWithType: Dialect.ToSql(JsonValue)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.JsonValue)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(JsonValue arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.JsonValue
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As JsonValue) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  id: ToSql(SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(FieldDataType)
  nameWithType: Dialect.ToSql(FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.FieldDataType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( FieldDataType arg ) will return the db-type according to the in-parameter.
  example: []
  syntax:
    content: protected virtual string ToSql(FieldDataType arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.FieldDataType
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As FieldDataType) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  id: ToSql(SuperOffice.Data.SQL.Upper)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Upper)
  nameWithType: Dialect.ToSql(Upper)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Upper)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( Upper arg ) will return the given argument anclosed by the SQL UPPER function.
  example: []
  syntax:
    content: protected virtual string ToSql(Upper arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Upper
      description: The argument to wrap UPPER around.
    return:
      type: System.String
      description: The parsed UPPER-string
    content.vb: Protected Overridable Function ToSql(arg As Upper) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  id: ToSql(SuperOffice.Data.SQL.Lower)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Lower)
  nameWithType: Dialect.ToSql(Lower)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Lower)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( Lower arg ) will return the given argument enclosed by the SQL LOWER function.
  example: []
  syntax:
    content: protected virtual string ToSql(Lower arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Lower
      description: The argument to wrap LOWER around.
    return:
      type: System.String
      description: The parsed LOWER-string
    content.vb: Protected Overridable Function ToSql(arg As Lower) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  id: ToSql(SuperOffice.Data.SQL.Trim)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Trim)
  nameWithType: Dialect.ToSql(Trim)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Trim)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Trim in sybase: http://infocenter.sybase.com/help/index.jsp?topic=/com.sybase.infocenter.dc38151.1510/html/iqrefbb/Trim.htm

    Trim in mysql: http://www.w3resource.com/mysql/string-functions/mysql-trim-function.php

    Oracle doc: http://www.techonthenet.com/oracle/functions/trim.php
  example: []
  syntax:
    content: protected virtual string ToSql(Trim arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Trim
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ToSql(arg As Trim) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  id: ToSql(SuperOffice.Data.SQL.Soundex)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Soundex)
  nameWithType: Dialect.ToSql(Soundex)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Soundex)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( Lower arg ) will return the given argument enclosed by the SQL LOWER function.
  example: []
  syntax:
    content: protected virtual string ToSql(Soundex arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Soundex
      description: The argument to wrap LOWER around.
    return:
      type: System.String
      description: The parsed LOWER-string
    content.vb: Protected Overridable Function ToSql(arg As Soundex) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  id: ToSql(SuperOffice.Data.SQL.Year)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Year)
  nameWithType: Dialect.ToSql(Year)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Year)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(Year arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Year
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As Year) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  id: ToSql(SuperOffice.Data.SQL.Month)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Month)
  nameWithType: Dialect.ToSql(Month)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Month)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(Month arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Month
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As Month) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  id: ToSql(SuperOffice.Data.SQL.Day)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Day)
  nameWithType: Dialect.ToSql(Day)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Day)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(Day arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Day
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As Day) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  id: ToSql(SuperOffice.Data.SQL.Hour)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Hour)
  nameWithType: Dialect.ToSql(Hour)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Hour)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(Hour arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Hour
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As Hour) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  id: ToSql(SuperOffice.Data.SQL.Minute)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Minute)
  nameWithType: Dialect.ToSql(Minute)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Minute)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(Minute arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Minute
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As Minute) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  id: ToSql(SuperOffice.Data.SQL.Second)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Second)
  nameWithType: Dialect.ToSql(Second)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Second)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: protected virtual string ToSql(Second arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Second
    return:
      type: System.String
    content.vb: Protected Overridable Function ToSql(arg As Second) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  id: ToSql(SuperOffice.Data.SQL.Sum)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Sum)
  nameWithType: Dialect.ToSql(Sum)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Sum)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( Sum arg ) will return the given argument enclosed by the SQL SUM function.
  example: []
  syntax:
    content: protected virtual string ToSql(Sum arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Sum
      description: The argument to use SUM on.
    return:
      type: System.String
      description: The parsed SUM string
    content.vb: Protected Overridable Function ToSql(arg As Sum) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  id: ToSql(SuperOffice.Data.SQL.Max)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Max)
  nameWithType: Dialect.ToSql(Max)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Max)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( Max arg ) will return the given argument enclosed by the SQL MAX function.
  example: []
  syntax:
    content: protected virtual string ToSql(Max arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Max
      description: The argument to use MAX on.
    return:
      type: System.String
      description: The parsed MAX string
    content.vb: Protected Overridable Function ToSql(arg As Max) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  id: ToSql(SuperOffice.Data.SQL.Min)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ToSql(Min)
  nameWithType: Dialect.ToSql(Min)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Min)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ToSql( MIN arg ) will return the given argument enclosed by the SQL MIN function.
  example: []
  syntax:
    content: protected virtual string ToSql(Min arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Min
      description: The argument to use MIN on.
    return:
      type: System.String
      description: The parsed MIN string
    content.vb: Protected Overridable Function ToSql(arg As Min) As String
  overload: SuperOffice.Data.Dialect.Dialect.ToSql*
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  id: ConvertToDbParameterType(System.Object,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ConvertToDbParameterType(object, FieldDataType)
  nameWithType: Dialect.ConvertToDbParameterType(object, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(object, SuperOffice.Data.FieldDataType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: public virtual object ConvertToDbParameterType(object value, FieldDataType dataType)
    parameters:
    - id: value
      type: System.Object
      description: ''
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Overridable Function ConvertToDbParameterType(value As Object, dataType As FieldDataType) As Object
  overload: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType*
  nameWithType.vb: Dialect.ConvertToDbParameterType(Object, FieldDataType)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType(Object, SuperOffice.Data.FieldDataType)
  name.vb: ConvertToDbParameterType(Object, FieldDataType)
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  id: ConvertToDbType(System.Object,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ConvertToDbType(object, FieldDataType)
  nameWithType: Dialect.ConvertToDbType(object, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(object, SuperOffice.Data.FieldDataType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Convert a value to a format that can be used in an SQL string when executing database commands.
  example: []
  syntax:
    content: public virtual string ConvertToDbType(object value, FieldDataType dataType)
    parameters:
    - id: value
      type: System.Object
      description: The value to convert.
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: The data type of the value in the database.
    return:
      type: System.String
      description: A string that can be used in a database SQL command.
    content.vb: Public Overridable Function ConvertToDbType(value As Object, dataType As FieldDataType) As String
  overload: SuperOffice.Data.Dialect.Dialect.ConvertToDbType*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if the data type is of an unsupported format.
  nameWithType.vb: Dialect.ConvertToDbType(Object, FieldDataType)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.ConvertToDbType(Object, SuperOffice.Data.FieldDataType)
  name.vb: ConvertToDbType(Object, FieldDataType)
- uid: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  id: ConvertFromDbType(System.Object,SuperOffice.Data.FieldDataType)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ConvertFromDbType(object, FieldDataType)
  nameWithType: Dialect.ConvertFromDbType(object, FieldDataType)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(object, SuperOffice.Data.FieldDataType)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Converts a value returned from the database to its normalised managed type.
  example: []
  syntax:
    content: public virtual object ConvertFromDbType(object value, FieldDataType dataType)
    parameters:
    - id: value
      type: System.Object
      description: value of the field as returned from the database
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: data type of the field in the database.
    return:
      type: System.Object
      description: Value that can be casted to the default .net type representing the database type.
    content.vb: Public Overridable Function ConvertFromDbType(value As Object, dataType As FieldDataType) As Object
  overload: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if the data type is of an unsupported format.
  nameWithType.vb: Dialect.ConvertFromDbType(Object, FieldDataType)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType(Object, SuperOffice.Data.FieldDataType)
  name.vb: ConvertFromDbType(Object, FieldDataType)
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ConvertToDbString(System.String)
  id: ConvertToDbString(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ConvertToDbString(string)
  nameWithType: Dialect.ConvertToDbString(string)
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Convert a string to a type that can be used in an SQL command when 

    communication to the database.
  remarks: >-
    Appropriate ' characters are put in the front of 

    and in the end of the string when processed by this method.
  example: []
  syntax:
    content: public virtual string ConvertToDbString(string value)
    parameters:
    - id: value
      type: System.String
      description: The string value that is to be converted.
    return:
      type: System.String
      description: A string that can be used in an SQL command.
    content.vb: Public Overridable Function ConvertToDbString(value As String) As String
  overload: SuperOffice.Data.Dialect.Dialect.ConvertToDbString*
  nameWithType.vb: Dialect.ConvertToDbString(String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.ConvertToDbString(String)
  name.vb: ConvertToDbString(String)
- uid: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(System.Int32)
  id: TimeTUtc2DateTime(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: TimeTUtc2DateTime(int)
  nameWithType: Dialect.TimeTUtc2DateTime(int)
  fullName: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Convert the time from a UTC C time_t value to local-time DateTime.
  example: []
  syntax:
    content: public virtual DateTime TimeTUtc2DateTime(int time)
    parameters:
    - id: time
      type: System.Int32
      description: Seconds since UTC January 1st, 1970
    return:
      type: System.DateTime
      description: Local time DateTime converted to.
    content.vb: Public Overridable Function TimeTUtc2DateTime(time As Integer) As Date
  overload: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime*
  nameWithType.vb: Dialect.TimeTUtc2DateTime(Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime(Integer)
  name.vb: TimeTUtc2DateTime(Integer)
- uid: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(System.Int32)
  id: TimeTLocal2DateTime(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: TimeTLocal2DateTime(int)
  nameWithType: Dialect.TimeTLocal2DateTime(int)
  fullName: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Convert the time from a local-time C time_t value to local-time DateTime.
  example: []
  syntax:
    content: public virtual DateTime TimeTLocal2DateTime(int time)
    parameters:
    - id: time
      type: System.Int32
      description: Seconds since local-time January 1st, 1970
    return:
      type: System.DateTime
      description: Local-time DateTime converted to.
    content.vb: Public Overridable Function TimeTLocal2DateTime(time As Integer) As Date
  overload: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime*
  nameWithType.vb: Dialect.TimeTLocal2DateTime(Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime(Integer)
  name.vb: TimeTLocal2DateTime(Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  id: DateTime2TimeTUtc(System.DateTime)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DateTime2TimeTUtc(DateTime)
  nameWithType: Dialect.DateTime2TimeTUtc(DateTime)
  fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Convert the local-time DateTime to a UTC C time_t value.
  example: []
  syntax:
    content: public virtual int DateTime2TimeTUtc(DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Local-time DateTime to convert from
    return:
      type: System.Int32
      description: Seconds since UTC January 1st, 1970
    content.vb: Public Overridable Function DateTime2TimeTUtc(dateTime As Date) As Integer
  overload: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc*
  nameWithType.vb: Dialect.DateTime2TimeTUtc(Date)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc(Date)
  name.vb: DateTime2TimeTUtc(Date)
- uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  id: DateTime2TimeTLocal(System.DateTime)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DateTime2TimeTLocal(DateTime)
  nameWithType: Dialect.DateTime2TimeTLocal(DateTime)
  fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(System.DateTime)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Convert the local-time DateTime to a local-time C time_t value.
  example: []
  syntax:
    content: public virtual int DateTime2TimeTLocal(DateTime dateTime)
    parameters:
    - id: dateTime
      type: System.DateTime
      description: Local-time DateTime to convert from
    return:
      type: System.Int32
      description: Seconds since local-time January 1st, 1970
    content.vb: Public Overridable Function DateTime2TimeTLocal(dateTime As Date) As Integer
  overload: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal*
  nameWithType.vb: Dialect.DateTime2TimeTLocal(Date)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal(Date)
  name.vb: DateTime2TimeTLocal(Date)
- uid: SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  id: SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: SelectSql(PrivateSelect)
  nameWithType: Dialect.SelectSql(PrivateSelect)
  fullName: SuperOffice.Data.Dialect.Dialect.SelectSql(SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Will generate the select-sql based on the in-parameter.
  example: []
  syntax:
    content: protected virtual string SelectSql(PrivateSelect cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.PrivateSelect
      description: Contains the object-structure that will describe the sql.
    return:
      type: System.String
      description: The generated sql-statement
    content.vb: Protected Overridable Function SelectSql(cmd As PrivateSelect) As String
  overload: SuperOffice.Data.Dialect.Dialect.SelectSql*
- uid: SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  id: ComposeSelect(System.String,System.String,System.String,System.String,System.Text.StringBuilder,SuperOffice.Data.SQL.PrivateSelect)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ComposeSelect(string, string, string, string, StringBuilder, PrivateSelect)
  nameWithType: Dialect.ComposeSelect(string, string, string, string, StringBuilder, PrivateSelect)
  fullName: SuperOffice.Data.Dialect.Dialect.ComposeSelect(string, string, string, string, System.Text.StringBuilder, SuperOffice.Data.SQL.PrivateSelect)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Compose the final <b>SELECT</b> from its constituent parts. This template-method pattern is used so

    specific dialects can insert options etc as needed
  example: []
  syntax:
    content: protected virtual string ComposeSelect(string select, string fields, string from, string join, StringBuilder sql, PrivateSelect originalCommand)
    parameters:
    - id: select
      type: System.String
      description: ''
    - id: fields
      type: System.String
      description: ''
    - id: from
      type: System.String
      description: ''
    - id: join
      type: System.String
      description: ''
    - id: sql
      type: System.Text.StringBuilder
      description: ''
    - id: originalCommand
      type: SuperOffice.Data.SQL.PrivateSelect
    return:
      type: System.String
      description: ''
    content.vb: Protected Overridable Function ComposeSelect([select] As String, fields As String, from As String, join As String, sql As StringBuilder, originalCommand As PrivateSelect) As String
  overload: SuperOffice.Data.Dialect.Dialect.ComposeSelect*
  nameWithType.vb: Dialect.ComposeSelect(String, String, String, String, StringBuilder, PrivateSelect)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.ComposeSelect(String, String, String, String, System.Text.StringBuilder, SuperOffice.Data.SQL.PrivateSelect)
  name.vb: ComposeSelect(String, String, String, String, StringBuilder, PrivateSelect)
- uid: SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  id: InsertSql(SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: InsertSql(PrivateSave)
  nameWithType: Dialect.InsertSql(PrivateSave)
  fullName: SuperOffice.Data.Dialect.Dialect.InsertSql(SuperOffice.Data.SQL.PrivateSave)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Will generate the insert-sql statement based on the in-parameter.
  example: []
  syntax:
    content: protected virtual string InsertSql(PrivateSave cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.PrivateSave
      description: Contains the object-structure that will describe the sql.
    return:
      type: System.String
      description: The generated sql-string.
    content.vb: Protected Overridable Function InsertSql(cmd As PrivateSave) As String
  overload: SuperOffice.Data.Dialect.Dialect.InsertSql*
- uid: SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  id: UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: UpdateSql(PrivateSave)
  nameWithType: Dialect.UpdateSql(PrivateSave)
  fullName: SuperOffice.Data.Dialect.Dialect.UpdateSql(SuperOffice.Data.SQL.PrivateSave)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Will generate the update-statement.
  example: []
  syntax:
    content: protected virtual string UpdateSql(PrivateSave cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.PrivateSave
      description: >-
        Takes a Private save as in-parameter. This object contains the structure needed
                    to build the sql-string.
    return:
      type: System.String
      description: The generated sql-string.
    content.vb: Protected Overridable Function UpdateSql(cmd As PrivateSave) As String
  overload: SuperOffice.Data.Dialect.Dialect.UpdateSql*
- uid: SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  id: DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DeleteSql(PrivateSave)
  nameWithType: Dialect.DeleteSql(PrivateSave)
  fullName: SuperOffice.Data.Dialect.Dialect.DeleteSql(SuperOffice.Data.SQL.PrivateSave)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Will generate the Delete-statement.
  example: []
  syntax:
    content: protected virtual string DeleteSql(PrivateSave cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.PrivateSave
      description: >-
        Takes a Private save as in-parameter. This object contains the structure needed
                    to build the sql-string.
    return:
      type: System.String
      description: The generated sql-string.
    content.vb: Protected Overridable Function DeleteSql(cmd As PrivateSave) As String
  overload: SuperOffice.Data.Dialect.Dialect.DeleteSql*
- uid: SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  commentId: M:SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  id: UnionSql(SuperOffice.Data.SQL.TableExpression)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: UnionSql(TableExpression)
  nameWithType: Dialect.UnionSql(TableExpression)
  fullName: SuperOffice.Data.Dialect.Dialect.UnionSql(SuperOffice.Data.SQL.TableExpression)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: UnionSql will parse through the union-array list and return the correct sql-statement.
  example: []
  syntax:
    content: protected virtual string UnionSql(TableExpression cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.TableExpression
      description: The Union statement.
    return:
      type: System.String
      description: The parsed sql-statement.
    content.vb: Protected Overridable Function UnionSql(cmd As TableExpression) As String
  overload: SuperOffice.Data.Dialect.Dialect.UnionSql*
- uid: SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  commentId: M:SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  id: PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: PreParseUnion(TableExpression)
  nameWithType: Dialect.PreParseUnion(TableExpression)
  fullName: SuperOffice.Data.Dialect.Dialect.PreParseUnion(SuperOffice.Data.SQL.TableExpression)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Override this method if addtional parsing is required to be performed on the Union
  example: []
  syntax:
    content: protected virtual void PreParseUnion(TableExpression cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.TableExpression
      description: The Union statement.
    content.vb: Protected Overridable Sub PreParseUnion(cmd As TableExpression)
  overload: SuperOffice.Data.Dialect.Dialect.PreParseUnion*
- uid: SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  id: DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DifferenceSql(TableExpression)
  nameWithType: Dialect.DifferenceSql(TableExpression)
  fullName: SuperOffice.Data.Dialect.Dialect.DifferenceSql(SuperOffice.Data.SQL.TableExpression)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: DifferenceSql will parse through the difference-array list and return the correct sql-statement.
  example: []
  syntax:
    content: protected virtual string DifferenceSql(TableExpression cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.TableExpression
      description: The Difference statement.
    return:
      type: System.String
      description: The parsed sql-statement.
    content.vb: Protected Overridable Function DifferenceSql(cmd As TableExpression) As String
  overload: SuperOffice.Data.Dialect.Dialect.DifferenceSql*
- uid: SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  id: GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GenerateSql(SqlCommand)
  nameWithType: Dialect.GenerateSql(SqlCommand)
  fullName: SuperOffice.Data.Dialect.Dialect.GenerateSql(SuperOffice.Data.SQL.SqlCommand)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Starts the correct sql-generating function based on the type of command.
  example: []
  syntax:
    content: public virtual SoSqlParameter GenerateSql(SqlCommand cmd)
    parameters:
    - id: cmd
      type: SuperOffice.Data.SQL.SqlCommand
      description: The object-structure we build the sql from.
    return:
      type: SuperOffice.Data.SoSqlParameter
    content.vb: Public Overridable Function GenerateSql(cmd As SqlCommand) As SoSqlParameter
  overload: SuperOffice.Data.Dialect.Dialect.GenerateSql*
- uid: SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  id: FieldIsClob(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: FieldIsClob(Argument)
  nameWithType: Dialect.FieldIsClob(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.FieldIsClob(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Determine if an argument is a field that is stored as a blob in the current database
  example: []
  syntax:
    content: protected bool FieldIsClob(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function FieldIsClob(arg As Argument) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.FieldIsClob*
- uid: SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  id: FieldIsString(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: FieldIsString(Argument)
  nameWithType: Dialect.FieldIsString(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.FieldIsString(SuperOffice.Data.SQL.Argument)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Determine if an argument is a field that is stored as a blob in the current database
  example: []
  syntax:
    content: protected bool FieldIsString(Argument arg)
    parameters:
    - id: arg
      type: SuperOffice.Data.SQL.Argument
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function FieldIsString(arg As Argument) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.FieldIsString*
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetName(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetName(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Return the name of the i'th column.
  example: []
  syntax:
    content: public virtual string DataReaderGetName(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: 0 based index.
    return:
      type: System.String
      description: >-
        The name of the column. Usually the same as the database column name, but it
                    depends on what you aliased the column as in your select statement
    content.vb: Public Overridable Function DataReaderGetName(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As String
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetName*
  nameWithType.vb: Dialect.DataReaderGetName(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetName(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetName(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetDataTypeName(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetDataTypeName(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Return the name of the datatype of the i'th column
  example: []
  syntax:
    content: public virtual string DataReaderGetDataTypeName(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: 0-based index.
    return:
      type: System.String
      description: 'Name of the data type in the column. for example: "int" or "varchar"'
    content.vb: Public Overridable Function DataReaderGetDataTypeName(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As String
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName*
  nameWithType.vb: Dialect.DataReaderGetDataTypeName(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetDataTypeName(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetFieldType(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetFieldType(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetFieldType(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Return the actual Type class for the data type
  example: []
  syntax:
    content: public virtual Type DataReaderGetFieldType(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: 0-based index.
    return:
      type: System.Type
      description: ''
    content.vb: Public Overridable Function DataReaderGetFieldType(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Type
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType*
  nameWithType.vb: Dialect.DataReaderGetFieldType(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetFieldType(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetValue(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetValue(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetValue(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Return the value of the datatype.
  example: []
  syntax:
    content: public object DataReaderGetValue(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: 0-based index
    return:
      type: System.Object
      description: >-
        A generic object. What it is depends on the type of the column. 
                    Could be an int. Could be a string. You won't know until you check GetDataTypeName
    content.vb: Public Function DataReaderGetValue(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Object
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue*
  nameWithType.vb: Dialect.DataReaderGetValue(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetValue(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  id: DataReaderGetOrdinal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetOrdinal(SoDataReader, IDataReader, string)
  nameWithType: Dialect.DataReaderGetOrdinal(SoDataReader, IDataReader, string)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader, System.Data.IDataReader, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Return the index of the named field.
  example: []
  syntax:
    content: public virtual int DataReaderGetOrdinal(SoDataReader soReader, IDataReader innerReader, string name)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: name
      type: System.String
      description: The name of the field
    return:
      type: System.Int32
      description: A zero-based index suitable for use with GetValue(int) and the rest of the Get functions.
    content.vb: Public Overridable Function DataReaderGetOrdinal(soReader As SoDataReader, innerReader As IDataReader, name As String) As Integer
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal*
  nameWithType.vb: Dialect.DataReaderGetOrdinal(SoDataReader, IDataReader, String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal(SuperOffice.Data.SoDataReader, System.Data.IDataReader, String)
  name.vb: DataReaderGetOrdinal(SoDataReader, IDataReader, String)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetItem(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetItem(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetItem(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Get object at the index
  example: []
  syntax:
    content: protected virtual object DataReaderGetItem(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: 0-based index
    return:
      type: System.Object
      description: ''
    content.vb: Protected Overridable Function DataReaderGetItem(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Object
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem*
  nameWithType.vb: Dialect.DataReaderGetItem(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetItem(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  id: DataReaderGetNullValue(SuperOffice.Data.SoDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetNullValue(SoDataReader, int)
  nameWithType: Dialect.DataReaderGetNullValue(SoDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public virtual object DataReaderGetNullValue(SoDataReader soReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
    - id: i
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public Overridable Function DataReaderGetNullValue(soReader As SoDataReader, i As Integer) As Object
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue*
  nameWithType.vb: Dialect.DataReaderGetNullValue(SoDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue(SuperOffice.Data.SoDataReader, Integer)
  name.vb: DataReaderGetNullValue(SoDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetBoolean(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetBoolean(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetBoolean(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a bool.
  example: []
  syntax:
    content: public virtual bool DataReaderGetBoolean(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function DataReaderGetBoolean(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean*
  nameWithType.vb: Dialect.DataReaderGetBoolean(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetBoolean(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetByte(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetByte(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetByte(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a byte.
  example: []
  syntax:
    content: public virtual byte DataReaderGetByte(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Byte
      description: ''
    content.vb: Public Overridable Function DataReaderGetByte(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Byte
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte*
  nameWithType.vb: Dialect.DataReaderGetByte(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetByte(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: DataReaderGetBytes(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetBytes(SoDataReader, IDataReader, int, long, byte[], int, int)
  nameWithType: Dialect.DataReaderGetBytes(SoDataReader, IDataReader, int, long, byte[], int, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int, long, byte[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Reads a stream of bytes from the specified column offset into 

    the buffer an array starting at the given buffer offset
  example: []
  syntax:
    content: public virtual long DataReaderGetBytes(SoDataReader soReader, IDataReader innerReader, int i, long fieldOffset, byte[] buffer, int bufferoffset, int length)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    - id: fieldOffset
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Byte[]
      description: ''
    - id: bufferoffset
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Overridable Function DataReaderGetBytes(soReader As SoDataReader, innerReader As IDataReader, i As Integer, fieldOffset As Long, buffer As Byte(), bufferoffset As Integer, length As Integer) As Long
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes*
  nameWithType.vb: Dialect.DataReaderGetBytes(SoDataReader, IDataReader, Integer, Long, Byte(), Integer, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer, Long, Byte(), Integer, Integer)
  name.vb: DataReaderGetBytes(SoDataReader, IDataReader, Integer, Long, Byte(), Integer, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetChar(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetChar(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetChar(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a single character.
  example: []
  syntax:
    content: public virtual char DataReaderGetChar(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: 0-based index
    return:
      type: System.Char
      description: ''
    content.vb: Public Overridable Function DataReaderGetChar(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Char
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar*
  nameWithType.vb: Dialect.DataReaderGetChar(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetChar(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: DataReaderGetChars(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetChars(SoDataReader, IDataReader, int, long, char[], int, int)
  nameWithType: Dialect.DataReaderGetChars(SoDataReader, IDataReader, int, long, char[], int, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int, long, char[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    Reads a stream of characters from the specified column offset into 

    the buffer as an array starting at the given buffer offset.
  example: []
  syntax:
    content: public virtual long DataReaderGetChars(SoDataReader soReader, IDataReader innerReader, int i, long fieldoffset, char[] buffer, int bufferoffset, int length)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    - id: fieldoffset
      type: System.Int64
      description: ''
    - id: buffer
      type: System.Char[]
      description: ''
    - id: bufferoffset
      type: System.Int32
      description: ''
    - id: length
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Overridable Function DataReaderGetChars(soReader As SoDataReader, innerReader As IDataReader, i As Integer, fieldoffset As Long, buffer As Char(), bufferoffset As Integer, length As Integer) As Long
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars*
  nameWithType.vb: Dialect.DataReaderGetChars(SoDataReader, IDataReader, Integer, Long, Char(), Integer, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer, Long, Char(), Integer, Integer)
  name.vb: DataReaderGetChars(SoDataReader, IDataReader, Integer, Long, Char(), Integer, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetGuid(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetGuid(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetGuid(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a globally-unique identifier (GUID).
  example: []
  syntax:
    content: public virtual Guid DataReaderGetGuid(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Guid
      description: ''
    content.vb: Public Overridable Function DataReaderGetGuid(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Guid
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid*
  nameWithType.vb: Dialect.DataReaderGetGuid(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetGuid(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetInt16(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetInt16(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetInt16(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a 16-bit signed integer.
  example: []
  syntax:
    content: public virtual short DataReaderGetInt16(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Int16
      description: ''
    content.vb: Public Overridable Function DataReaderGetInt16(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Short
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16*
  nameWithType.vb: Dialect.DataReaderGetInt16(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetInt16(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetInt32(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetInt32(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetInt32(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a 32-bit signed integer.
  example: []
  syntax:
    content: public virtual int DataReaderGetInt32(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function DataReaderGetInt32(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Integer
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32*
  nameWithType.vb: Dialect.DataReaderGetInt32(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetInt32(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetInt32Array(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetInt32Array(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetInt32Array(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as an array of 32-bit signed integers; database storage is an encoded string format
  example: []
  syntax:
    content: public virtual int[] DataReaderGetInt32Array(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Int32[]
      description: ''
    content.vb: Public Overridable Function DataReaderGetInt32Array(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Integer()
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array*
  nameWithType.vb: Dialect.DataReaderGetInt32Array(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetInt32Array(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetInt64(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetInt64(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetInt64(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a 64-bit signed integer.
  example: []
  syntax:
    content: public virtual long DataReaderGetInt64(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Overridable Function DataReaderGetInt64(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Long
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64*
  nameWithType.vb: Dialect.DataReaderGetInt64(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetInt64(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetFloat(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetFloat(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetFloat(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a single-precision floating point number.
  example: []
  syntax:
    content: public virtual float DataReaderGetFloat(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Overridable Function DataReaderGetFloat(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Single
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat*
  nameWithType.vb: Dialect.DataReaderGetFloat(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetFloat(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetDouble(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetDouble(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetDouble(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a double-precision floating point number.
  example: []
  syntax:
    content: public virtual double DataReaderGetDouble(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Overridable Function DataReaderGetDouble(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Double
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble*
  nameWithType.vb: Dialect.DataReaderGetDouble(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetDouble(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetString(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetString(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetString(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a string.
  example: []
  syntax:
    content: public virtual string DataReaderGetString(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Overridable Function DataReaderGetString(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As String
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetString*
  nameWithType.vb: Dialect.DataReaderGetString(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetString(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetString(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetDecimal(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetDecimal(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetDecimal(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Gets the value of the specified column as a decimal.
  example: []
  syntax:
    content: public virtual decimal DataReaderGetDecimal(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Overridable Function DataReaderGetDecimal(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Decimal
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal*
  nameWithType.vb: Dialect.DataReaderGetDecimal(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetDecimal(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.LockReader``1(SuperOffice.Data.SoDataReader,System.Func{``0})
  commentId: M:SuperOffice.Data.Dialect.Dialect.LockReader``1(SuperOffice.Data.SoDataReader,System.Func{``0})
  id: LockReader``1(SuperOffice.Data.SoDataReader,System.Func{``0})
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: LockReader<T>(SoDataReader, Func<T>)
  nameWithType: Dialect.LockReader<T>(SoDataReader, Func<T>)
  fullName: SuperOffice.Data.Dialect.Dialect.LockReader<T>(SuperOffice.Data.SoDataReader, System.Func<T>)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: The PostgreSQL data reader is <b>not thread safe</b> in GetValue-like calls. Other readers are - here is a helper method to do the locking, or not.
  example: []
  syntax:
    content: public virtual T LockReader<T>(SoDataReader soReader, Func<T> innerLogic)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: ''
    - id: innerLogic
      type: System.Func{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Overridable Function LockReader(Of T)(soReader As SoDataReader, innerLogic As Func(Of T)) As T
  overload: SuperOffice.Data.Dialect.Dialect.LockReader*
  nameWithType.vb: Dialect.LockReader(Of T)(SoDataReader, Func(Of T))
  fullName.vb: SuperOffice.Data.Dialect.Dialect.LockReader(Of T)(SuperOffice.Data.SoDataReader, System.Func(Of T))
  name.vb: LockReader(Of T)(SoDataReader, Func(Of T))
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetDateTime(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetDateTime(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetDateTime(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public DateTime DataReaderGetDateTime(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
    - id: innerReader
      type: System.Data.IDataReader
    - id: i
      type: System.Int32
    return:
      type: System.DateTime
    content.vb: Public Function DataReaderGetDateTime(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As Date
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime*
  nameWithType.vb: Dialect.DataReaderGetDateTime(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetDateTime(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  id: DataReaderGetData(SuperOffice.Data.SoDataReader,System.Data.IDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderGetData(SoDataReader, IDataReader, int)
  nameWithType: Dialect.DataReaderGetData(SoDataReader, IDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader, System.Data.IDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: public IDataReader DataReaderGetData(SoDataReader soReader, IDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.IDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Data.IDataReader
      description: ''
    content.vb: Public Function DataReaderGetData(soReader As SoDataReader, innerReader As IDataReader, i As Integer) As IDataReader
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderGetData*
  nameWithType.vb: Dialect.DataReaderGetData(SoDataReader, IDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderGetData(SuperOffice.Data.SoDataReader, System.Data.IDataReader, Integer)
  name.vb: DataReaderGetData(SoDataReader, IDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32,System.Threading.CancellationToken)
  id: DataReaderIsDBNullAsync(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderIsDBNullAsync(SoDataReader, DbDataReader, int, CancellationToken)
  nameWithType: Dialect.DataReaderIsDBNullAsync(SoDataReader, DbDataReader, int, CancellationToken)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync(SuperOffice.Data.SoDataReader, System.Data.Common.DbDataReader, int, System.Threading.CancellationToken)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: >-
      [CreateSyncVersion(OmitNullableDirective = true)]

      public Task<bool> DataReaderIsDBNullAsync(SoDataReader soReader, DbDataReader innerReader, int i, CancellationToken cancellationToken = default)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.Common.DbDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: ''
    content.vb: >-
      <CreateSyncVersion(OmitNullableDirective:=True)>

      Public Function DataReaderIsDBNullAsync(soReader As SoDataReader, innerReader As DbDataReader, i As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync*
  attributes:
  - type: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute
    ctor: Zomp.SyncMethodGenerator.CreateSyncVersionAttribute.#ctor
    arguments: []
    namedArguments:
    - name: OmitNullableDirective
      type: System.Boolean
      value: true
  nameWithType.vb: Dialect.DataReaderIsDBNullAsync(SoDataReader, DbDataReader, Integer, CancellationToken)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync(SuperOffice.Data.SoDataReader, System.Data.Common.DbDataReader, Integer, System.Threading.CancellationToken)
  name.vb: DataReaderIsDBNullAsync(SoDataReader, DbDataReader, Integer, CancellationToken)
- uid: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntToSingleWord(System.Int32)
  id: IntToSingleWord(System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: IntToSingleWord(int)
  nameWithType: Dialect.IntToSingleWord(int)
  fullName: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Map digits in an int to letters. 123 becomes AABCD, note the digit mapping and left-pad with A (= 0) to make at least five letters
  example: []
  syntax:
    content: public static string IntToSingleWord(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function IntToSingleWord(id As Integer) As String
  overload: SuperOffice.Data.Dialect.Dialect.IntToSingleWord*
  nameWithType.vb: Dialect.IntToSingleWord(Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IntToSingleWord(Integer)
  name.vb: IntToSingleWord(Integer)
- uid: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(System.Int32[])
  id: IntArrayToWordString(System.Int32[])
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: IntArrayToWordString(params int[])
  nameWithType: Dialect.IntArrayToWordString(params int[])
  fullName: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(params int[])
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public static string IntArrayToWordString(params int[] ids)
    parameters:
    - id: ids
      type: System.Int32[]
    return:
      type: System.String
    content.vb: Public Shared Function IntArrayToWordString(ParamArray ids As Integer()) As String
  overload: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString*
  nameWithType.vb: Dialect.IntArrayToWordString(ParamArray Integer())
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString(ParamArray Integer())
  name.vb: IntArrayToWordString(ParamArray Integer())
- uid: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(System.String)
  id: IntFromSingleWord(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: IntFromSingleWord(string)
  nameWithType: Dialect.IntFromSingleWord(string)
  fullName: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public static int IntFromSingleWord(string word)
    parameters:
    - id: word
      type: System.String
    return:
      type: System.Int32
    content.vb: Public Shared Function IntFromSingleWord(word As String) As Integer
  overload: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord*
  nameWithType.vb: Dialect.IntFromSingleWord(String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord(String)
  name.vb: IntFromSingleWord(String)
- uid: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  commentId: M:SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(System.String)
  id: IntArrayFromWordString(System.String)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: IntArrayFromWordString(string)
  nameWithType: Dialect.IntArrayFromWordString(string)
  fullName: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public static int[] IntArrayFromWordString(string wordString)
    parameters:
    - id: wordString
      type: System.String
    return:
      type: System.Int32[]
    content.vb: Public Shared Function IntArrayFromWordString(wordString As String) As Integer()
  overload: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString*
  nameWithType.vb: Dialect.IntArrayFromWordString(String)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString(String)
  name.vb: IntArrayFromWordString(String)
- uid: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  id: GetIsolationLevel(System.Data.IsolationLevel)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetIsolationLevel(IsolationLevel)
  nameWithType: Dialect.GetIsolationLevel(IsolationLevel)
  fullName: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel(System.Data.IsolationLevel)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Get the IsolationLevel supported by the database.
  example: []
  syntax:
    content: public virtual IsolationLevel GetIsolationLevel(IsolationLevel requestedLevel)
    parameters:
    - id: requestedLevel
      type: System.Data.IsolationLevel
      description: Requested isolation level.
    return:
      type: System.Data.IsolationLevel
      description: IsolationLevel supported by the current database.
    content.vb: Public Overridable Function GetIsolationLevel(requestedLevel As IsolationLevel) As IsolationLevel
  overload: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel*
- uid: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  commentId: M:SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  id: GetDefaultTransaction(SuperOffice.Data.SoConnection,SuperOffice.Data.SQL.SqlCommand)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: GetDefaultTransaction(SoConnection, SqlCommand)
  nameWithType: Dialect.GetDefaultTransaction(SoConnection, SqlCommand)
  fullName: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction(SuperOffice.Data.SoConnection, SuperOffice.Data.SQL.SqlCommand)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Create and return a default transaction, if the Dialect feels it desirable
  remarks: >-
    On SQL Server, large SELECT's are problematic due to automatic lock escalation. When 5000 row locks

    have been accumulated, the server tends to escalate this to a table lock, thereby blocking concurrent

    INSERTs and UPDATEs, even if they are happening far away from the select.

    <p></p>

    A fairly clean way to avoid this is to have IsolationLevel.ReadUncommited on those selects - this

    causes them to create no locks and honour no locks. Whether to do this is something the concrete

    dialects need to take into account.
  example: []
  syntax:
    content: protected virtual SoTransaction GetDefaultTransaction(SoConnection connection, SqlCommand sqlCommand)
    parameters:
    - id: connection
      type: SuperOffice.Data.SoConnection
      description: Connection the command will be executed on
    - id: sqlCommand
      type: SuperOffice.Data.SQL.SqlCommand
      description: Command to be executed
    return:
      type: SuperOffice.Data.SoTransaction
      description: Newly created default transaction, or null
    content.vb: Protected Overridable Function GetDefaultTransaction(connection As SoConnection, sqlCommand As SqlCommand) As SoTransaction
  overload: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction*
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32)
  commentId: M:SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32)
  id: DataReaderIsDBNull(SuperOffice.Data.SoDataReader,System.Data.Common.DbDataReader,System.Int32)
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DataReaderIsDBNull(SoDataReader, DbDataReader, int)
  nameWithType: Dialect.DataReaderIsDBNull(SoDataReader, DbDataReader, int)
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader, System.Data.Common.DbDataReader, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: ''
  example: []
  syntax:
    content: public bool DataReaderIsDBNull(SoDataReader soReader, DbDataReader innerReader, int i)
    parameters:
    - id: soReader
      type: SuperOffice.Data.SoDataReader
      description: DataReader to read from.
    - id: innerReader
      type: System.Data.Common.DbDataReader
      description: ''
    - id: i
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function DataReaderIsDBNull(soReader As SoDataReader, innerReader As DbDataReader, i As Integer) As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull*
  nameWithType.vb: Dialect.DataReaderIsDBNull(SoDataReader, DbDataReader, Integer)
  fullName.vb: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull(SuperOffice.Data.SoDataReader, System.Data.Common.DbDataReader, Integer)
  name.vb: DataReaderIsDBNull(SoDataReader, DbDataReader, Integer)
- uid: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  commentId: P:SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  id: CaseSensitiveDatabase
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: CaseSensitiveDatabase
  nameWithType: Dialect.CaseSensitiveDatabase
  fullName: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Is the database case-sensitive by default (something we work hard to make disappear)?
  example: []
  syntax:
    content: protected virtual bool CaseSensitiveDatabase { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property CaseSensitiveDatabase As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase*
- uid: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  commentId: P:SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  id: BlockUpperInOrderBy
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: BlockUpperInOrderBy
  nameWithType: Dialect.BlockUpperInOrderBy
  fullName: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: >-
    DB2 has somewhat pathological behaviour... if you have DISTINCT in the SELECT, then you cannot have UPPER in ORDERBY.

    Believe it or not. See http://publib.boulder.ibm.com/infocenter/db2v7luw/index.jsp?topic=/com.ibm.db2v7.doc/db2m0/sql0200.htm

    and look for message SQL0214N with reason code '2'.
  example: []
  syntax:
    content: protected virtual bool BlockUpperInOrderBy { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property BlockUpperInOrderBy As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy*
- uid: SuperOffice.Data.Dialect.Dialect.MaxInSize
  commentId: P:SuperOffice.Data.Dialect.Dialect.MaxInSize
  id: MaxInSize
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: MaxInSize
  nameWithType: Dialect.MaxInSize
  fullName: SuperOffice.Data.Dialect.Dialect.MaxInSize
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Oracle has a hard limit of 1000 on the number of items allowed in an IN clause. Bigger IN clauses are partitioned using an OR construct
  example: []
  syntax:
    content: protected virtual int MaxInSize { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Protected Overridable ReadOnly Property MaxInSize As Integer
  overload: SuperOffice.Data.Dialect.Dialect.MaxInSize*
- uid: SuperOffice.Data.Dialect.Dialect.Tables
  commentId: P:SuperOffice.Data.Dialect.Dialect.Tables
  id: Tables
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: Tables
  nameWithType: Dialect.Tables
  fullName: SuperOffice.Data.Dialect.Dialect.Tables
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: The TableInfoCollection
  example: []
  syntax:
    content: protected TableInfoCollection Tables { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.TableInfoCollection
    content.vb: Protected Property Tables As TableInfoCollection
  overload: SuperOffice.Data.Dialect.Dialect.Tables*
- uid: SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  commentId: P:SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  id: ReturnDBFields
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ReturnDBFields
  nameWithType: Dialect.ReturnDBFields
  fullName: SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: The ReturnFields.
  example: []
  syntax:
    content: protected FieldInfoCollection ReturnDBFields { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.FieldInfoCollection
    content.vb: Protected ReadOnly Property ReturnDBFields As FieldInfoCollection
  overload: SuperOffice.Data.Dialect.Dialect.ReturnDBFields*
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  id: HasAliasOnDelete
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: HasAliasOnDelete
  nameWithType: Dialect.HasAliasOnDelete
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Used to check if alias is used with fields and tables in the <code>SQL DELETE</code>-command.
  remarks: Default value is true.
  example:
  - >-
    This method can be overridden in the following manner:

    <pre><code class="lang-csharp">protected override bool HasaliasOnDelete { get { return false; } }</code></pre>
  syntax:
    content: protected virtual bool HasAliasOnDelete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property HasAliasOnDelete As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete*
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  id: HasAliasOnInsert
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: HasAliasOnInsert
  nameWithType: Dialect.HasAliasOnInsert
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Used to check if alias is used with fields and tables in the <code>SQL INSERT</code>-command.
  remarks: >-
    <p>Default value is true</p>

    <p>For example see <xref href="SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete" data-throw-if-not-resolved="false"></xref></p>
  example: []
  syntax:
    content: protected virtual bool HasAliasOnInsert { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property HasAliasOnInsert As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert*
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  id: HasAliasOnUpdate
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: HasAliasOnUpdate
  nameWithType: Dialect.HasAliasOnUpdate
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Used to check if alias is used with fields and tables in the <code>SQL UPDATE</code>-command.
  remarks: >-
    <p>Default value is true</p>

    <p>For example see <xref href="SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete" data-throw-if-not-resolved="false"></xref></p>
  example: []
  syntax:
    content: protected virtual bool HasAliasOnUpdate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property HasAliasOnUpdate As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate*
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  id: HasAliasOnSelect
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: HasAliasOnSelect
  nameWithType: Dialect.HasAliasOnSelect
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Used to check if alias is used with fields and tables in the <code>SQL SELECT</code>-command.
  remarks: >-
    <p>Default value is true</p>

    <p>For example see <xref href="SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete" data-throw-if-not-resolved="false"></xref></p>
  example: []
  syntax:
    content: protected virtual bool HasAliasOnSelect { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property HasAliasOnSelect As Boolean
  overload: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect*
- uid: SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  commentId: P:SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  id: CurrentSqlType
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: CurrentSqlType
  nameWithType: Dialect.CurrentSqlType
  fullName: SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Tells the system what kind of sql we are dealing with.
  example: []
  syntax:
    content: protected virtual SqlType CurrentSqlType { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.SqlType
    content.vb: Protected Overridable Property CurrentSqlType As SqlType
  overload: SuperOffice.Data.Dialect.Dialect.CurrentSqlType*
- uid: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  commentId: P:SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  id: CurrentOuterSqlType
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: CurrentOuterSqlType
  nameWithType: Dialect.CurrentOuterSqlType
  fullName: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Tells the system if we are having an outer command on the current sql command.
  example: []
  syntax:
    content: protected virtual SqlType CurrentOuterSqlType { get; set; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.SqlType
    content.vb: Protected Overridable Property CurrentOuterSqlType As SqlType
  overload: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType*
- uid: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  commentId: P:SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  id: ReturnFieldsIndexer
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: ReturnFieldsIndexer
  nameWithType: Dialect.ReturnFieldsIndexer
  fullName: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  syntax:
    content: public ReturnFieldsIndexer ReturnFieldsIndexer { get; }
    parameters: []
    return:
      type: SuperOffice.Data.SQL.ReturnFieldsIndexer
    content.vb: Public ReadOnly Property ReturnFieldsIndexer As ReturnFieldsIndexer
  overload: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer*
- uid: SuperOffice.Data.Dialect.Dialect.VarcharType
  commentId: P:SuperOffice.Data.Dialect.Dialect.VarcharType
  id: VarcharType
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: VarcharType
  nameWithType: Dialect.VarcharType
  fullName: SuperOffice.Data.Dialect.Dialect.VarcharType
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Get the type of variable length characters used in the database.  This can either be VARCHAR or NVARCHAR.
  example: []
  syntax:
    content: protected string VarcharType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property VarcharType As String
  overload: SuperOffice.Data.Dialect.Dialect.VarcharType*
- uid: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  commentId: P:SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  id: DefaultConnectionString
  parent: SuperOffice.Data.Dialect.Dialect
  langs:
  - csharp
  - vb
  name: DefaultConnectionString
  nameWithType: Dialect.DefaultConnectionString
  fullName: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Dialect
  summary: Get default connection string
  example: []
  syntax:
    content: public abstract string DefaultConnectionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public MustOverride ReadOnly Property DefaultConnectionString As String
  overload: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString*
references:
- uid: SuperOffice.Data.Dialect
  commentId: N:SuperOffice.Data.Dialect
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.Dialect
  nameWithType: SuperOffice.Data.Dialect
  fullName: SuperOffice.Data.Dialect
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Data.Dialect.Dialect.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<Dialect, To>(Dialect)
  nameWithType: EnumUtil.MapEnums<Dialect, To>(Dialect)
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Dialect.Dialect, To>(SuperOffice.Data.Dialect.Dialect)
  nameWithType.vb: EnumUtil.MapEnums(Of Dialect, To)(Dialect)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Dialect.Dialect, To)(SuperOffice.Data.Dialect.Dialect)
  name.vb: MapEnums(Of Dialect, To)(Dialect)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.Dialect.Dialect)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Data.Dialect.Dialect)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: )
- uid: SuperOffice.Data.Dialect.Dialect.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<Dialect, To>(Dialect)
  nameWithType: Converters.MapEnums<Dialect, To>(Dialect)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Dialect.Dialect, To>(SuperOffice.Data.Dialect.Dialect)
  nameWithType.vb: Converters.MapEnums(Of Dialect, To)(Dialect)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Dialect.Dialect, To)(SuperOffice.Data.Dialect.Dialect)
  name.vb: MapEnums(Of Dialect, To)(Dialect)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.Dialect.Dialect)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Data.Dialect.Dialect)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Data.SQL.TableInfoCollection
  commentId: T:SuperOffice.Data.SQL.TableInfoCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.TableInfoCollection.html
  name: TableInfoCollection
  nameWithType: TableInfoCollection
  fullName: SuperOffice.Data.SQL.TableInfoCollection
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.SQL
    name: SQL
    isExternal: true
    href: SuperOffice.Data.SQL.html
- uid: SuperOffice.Data.SQL.FieldInfoCollection
  commentId: T:SuperOffice.Data.SQL.FieldInfoCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfoCollection.html
  name: FieldInfoCollection
  nameWithType: FieldInfoCollection
  fullName: SuperOffice.Data.SQL.FieldInfoCollection
- uid: System.Data.DataTable
  commentId: T:System.Data.DataTable
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.datatable
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
- uid: System.Collections.Generic.List{SuperOffice.Data.SQL.Argument}
  commentId: T:System.Collections.Generic.List{SuperOffice.Data.SQL.Argument}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Argument>
  nameWithType: List<Argument>
  fullName: System.Collections.Generic.List<SuperOffice.Data.SQL.Argument>
  nameWithType.vb: List(Of Argument)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.Data.SQL.Argument)
  name.vb: List(Of Argument)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.arraylist
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic.List{System.Func{System.Data.IDataReader,System.Boolean}}
  commentId: T:System.Collections.Generic.List{System.Func{System.Data.IDataReader,System.Boolean}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Func<IDataReader, bool>>
  nameWithType: List<Func<IDataReader, bool>>
  fullName: System.Collections.Generic.List<System.Func<System.Data.IDataReader, bool>>
  nameWithType.vb: List(Of Func(Of IDataReader, Boolean))
  fullName.vb: System.Collections.Generic.List(Of System.Func(Of System.Data.IDataReader, Boolean))
  name.vb: List(Of Func(Of IDataReader, Boolean))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: System.Data.IDataReader
    name: IDataReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Data.IDataReader
    name: IDataReader
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.idatareader
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: SuperOffice.Data.SQL.SqlCommand
  commentId: T:SuperOffice.Data.SQL.SqlCommand
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.SqlCommand.html
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: SuperOffice.Data.SQL.SqlCommand
- uid: System.Collections.Generic.HashSet{SuperOffice.Data.SQL.FieldInfo}
  commentId: T:System.Collections.Generic.HashSet{SuperOffice.Data.SQL.FieldInfo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<FieldInfo>
  nameWithType: HashSet<FieldInfo>
  fullName: System.Collections.Generic.HashSet<SuperOffice.Data.SQL.FieldInfo>
  nameWithType.vb: HashSet(Of FieldInfo)
  fullName.vb: System.Collections.Generic.HashSet(Of SuperOffice.Data.SQL.FieldInfo)
  name.vb: HashSet(Of FieldInfo)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Data.SQL.FieldInfo
    name: FieldInfo
    isExternal: true
    href: SuperOffice.Data.SQL.FieldInfo.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_CheckForDuplicateRow_System_Data_IDataReader_
  name: CheckForDuplicateRow
  nameWithType: Dialect.CheckForDuplicateRow
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForDuplicateRow
- uid: System.Data.IDataReader
  commentId: T:System.Data.IDataReader
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.idatareader
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.Data.Dialect.Dialect.CheckForDistinct*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.CheckForDistinct
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_CheckForDistinct_SuperOffice_Data_SQL_PrivateSelect_
  name: CheckForDistinct
  nameWithType: Dialect.CheckForDistinct
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForDistinct
- uid: SuperOffice.Data.SQL.PrivateSelect
  commentId: T:SuperOffice.Data.SQL.PrivateSelect
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.PrivateSelect.html
  name: PrivateSelect
  nameWithType: PrivateSelect
  fullName: SuperOffice.Data.SQL.PrivateSelect
- uid: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ShouldRowBeSkipped_System_Data_IDataReader_
  name: ShouldRowBeSkipped
  nameWithType: Dialect.ShouldRowBeSkipped
  fullName: SuperOffice.Data.Dialect.Dialect.ShouldRowBeSkipped
- uid: SuperOffice.Data.Dialect.Dialect.#ctor*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.#ctor
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect__ctor
  name: Dialect
  nameWithType: Dialect.Dialect
  fullName: SuperOffice.Data.Dialect.Dialect.Dialect
  nameWithType.vb: Dialect.New
  fullName.vb: SuperOffice.Data.Dialect.Dialect.New
  name.vb: New
- uid: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_IsTableReferencedInSelect_SuperOffice_Data_Dictionary_SoTable_
  name: IsTableReferencedInSelect
  nameWithType: Dialect.IsTableReferencedInSelect
  fullName: SuperOffice.Data.Dialect.Dialect.IsTableReferencedInSelect
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  href: SuperOffice.Data.Dictionary.SoTable.html
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dictionary
    name: Dictionary
    isExternal: true
    href: SuperOffice.Data.Dictionary.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dictionary
    name: Dictionary
    isExternal: true
    href: SuperOffice.Data.Dictionary.html
- uid: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetUpdatedSchemaTable_System_Data_DataTable_
  name: GetUpdatedSchemaTable
  nameWithType: Dialect.GetUpdatedSchemaTable
  fullName: SuperOffice.Data.Dialect.Dialect.GetUpdatedSchemaTable
- uid: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GenerateCaseInsensitivity_SuperOffice_Data_SQL_FieldInfo_SuperOffice_Data_SQL_Parameter_System_String_
  name: GenerateCaseInsensitivity
  nameWithType: Dialect.GenerateCaseInsensitivity
  fullName: SuperOffice.Data.Dialect.Dialect.GenerateCaseInsensitivity
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldInfo.html
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Parameter.html
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetOriginAsComment
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetOriginAsComment_SuperOffice_Data_SQL_SqlCommand_
  name: GetOriginAsComment
  nameWithType: Dialect.GetOriginAsComment
  fullName: SuperOffice.Data.Dialect.Dialect.GetOriginAsComment
- uid: SuperOffice.Data.Dialect.Dialect.DateToVarchar*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DateToVarchar
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DateToVarchar_System_String_
  name: DateToVarchar
  nameWithType: Dialect.DateToVarchar
  fullName: SuperOffice.Data.Dialect.Dialect.DateToVarchar
- uid: SuperOffice.Data.Dialect.Dialect.TimeToVarchar*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.TimeToVarchar
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_TimeToVarchar_System_String_
  name: TimeToVarchar
  nameWithType: Dialect.TimeToVarchar
  fullName: SuperOffice.Data.Dialect.Dialect.TimeToVarchar
- uid: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_HandleDateAndTimeWrapping_System_String_SuperOffice_Data_FieldDataType_
  name: HandleDateAndTimeWrapping
  nameWithType: Dialect.HandleDateAndTimeWrapping
  fullName: SuperOffice.Data.Dialect.Dialect.HandleDateAndTimeWrapping
- uid: SuperOffice.Data.FieldDataType
  commentId: T:SuperOffice.Data.FieldDataType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.FieldDataType.html
  name: FieldDataType
  nameWithType: FieldDataType
  fullName: SuperOffice.Data.FieldDataType
- uid: SuperOffice.Data.Dialect.Dialect._returnDBFields
  commentId: F:SuperOffice.Data.Dialect.Dialect._returnDBFields
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect__returnDBFields
  name: _returnDBFields
  nameWithType: Dialect._returnDBFields
  fullName: SuperOffice.Data.Dialect.Dialect._returnDBFields
- uid: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetFieldDbDataType_System_Int32_
  name: GetFieldDbDataType
  nameWithType: Dialect.GetFieldDbDataType
  fullName: SuperOffice.Data.Dialect.Dialect.GetFieldDbDataType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Data.Dialect.Dialect
  commentId: T:SuperOffice.Data.Dialect.Dialect
  parent: SuperOffice.Data.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html
  name: Dialect
  nameWithType: Dialect
  fullName: SuperOffice.Data.Dialect.Dialect
- uid: SuperOffice.Data.Dialect.Dialect._returnArguments
  commentId: F:SuperOffice.Data.Dialect.Dialect._returnArguments
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect__returnArguments
  name: _returnArguments
  nameWithType: Dialect._returnArguments
  fullName: SuperOffice.Data.Dialect.Dialect._returnArguments
- uid: SuperOffice.Data.Dialect.Dialect.GetIndexOfField*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetIndexOfField
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetIndexOfField_SuperOffice_Data_SQL_Argument_
  name: GetIndexOfField
  nameWithType: Dialect.GetIndexOfField
  fullName: SuperOffice.Data.Dialect.Dialect.GetIndexOfField
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetFieldInfoFromIndex_System_Int32_
  name: GetFieldInfoFromIndex
  nameWithType: Dialect.GetFieldInfoFromIndex
  fullName: SuperOffice.Data.Dialect.Dialect.GetFieldInfoFromIndex
- uid: SuperOffice.Data.Dialect.Dialect.CheckForAlias*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.CheckForAlias
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_CheckForAlias
  name: CheckForAlias
  nameWithType: Dialect.CheckForAlias
  fullName: SuperOffice.Data.Dialect.Dialect.CheckForAlias
- uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSql_SuperOffice_Data_SQL_Argument_
  name: ToSql(Argument)
  nameWithType: Dialect.ToSql(Argument)
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
    name: ToSql
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSql_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect.ToSql(SuperOffice.Data.SQL.Argument)
    name: ToSql
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSql_SuperOffice_Data_SQL_Argument_
  - name: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: )
- uid: SuperOffice.Exceptions.SoNotImplementedException
  commentId: T:SuperOffice.Exceptions.SoNotImplementedException
  isExternal: true
  href: SuperOffice.Exceptions.SoNotImplementedException.html
  name: SoNotImplementedException
  nameWithType: SoNotImplementedException
  fullName: SuperOffice.Exceptions.SoNotImplementedException
- uid: SuperOffice.Exceptions.SoException
  commentId: T:SuperOffice.Exceptions.SoException
  parent: SuperOffice.Exceptions
  isExternal: true
  href: SuperOffice.Exceptions.SoException.html
  name: SoException
  nameWithType: SoException
  fullName: SuperOffice.Exceptions.SoException
- uid: SuperOffice.Data.Dialect.Dialect.InvokeToSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.InvokeToSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_InvokeToSql_System_Object___
  name: InvokeToSql
  nameWithType: Dialect.InvokeToSql
  fullName: SuperOffice.Data.Dialect.Dialect.InvokeToSql
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: SuperOffice.Exceptions
  commentId: N:SuperOffice.Exceptions
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Exceptions
  nameWithType: SuperOffice.Exceptions
  fullName: SuperOffice.Exceptions
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Exceptions
    name: Exceptions
    isExternal: true
    href: SuperOffice.Exceptions.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Exceptions
    name: Exceptions
    isExternal: true
    href: SuperOffice.Exceptions.html
- uid: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_IsAnyArgumentString_SuperOffice_Data_SQL_Argument___
  name: IsAnyArgumentString
  nameWithType: Dialect.IsAnyArgumentString
  fullName: SuperOffice.Data.Dialect.Dialect.IsAnyArgumentString
- uid: SuperOffice.Data.SQL.Argument[]
  isExternal: true
  href: SuperOffice.Data.SQL.Argument.html
  name: Argument[]
  nameWithType: Argument[]
  fullName: SuperOffice.Data.SQL.Argument[]
  nameWithType.vb: Argument()
  fullName.vb: SuperOffice.Data.SQL.Argument()
  name.vb: Argument()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    isExternal: true
    href: SuperOffice.Data.SQL.Argument.html
  - name: (
  - name: )
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSqlUpperIfNeeded_SuperOffice_Data_SQL_Argument_
  name: ToSqlUpperIfNeeded
  nameWithType: Dialect.ToSqlUpperIfNeeded
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlUpperIfNeeded
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlFrom*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ToSqlFrom
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSqlFrom
  name: ToSqlFrom
  nameWithType: Dialect.ToSqlFrom
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlFrom
- uid: SuperOffice.Data.Dialect.Dialect.ToSqlField*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ToSqlField
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSqlField_SuperOffice_Data_SQL_FieldInfoCollection_
  name: ToSqlField
  nameWithType: Dialect.ToSqlField
  fullName: SuperOffice.Data.Dialect.Dialect.ToSqlField
- uid: SuperOffice.Data.SQL.ArgumentCollection
  commentId: T:SuperOffice.Data.SQL.ArgumentCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.ArgumentCollection.html
  name: ArgumentCollection
  nameWithType: ArgumentCollection
  fullName: SuperOffice.Data.SQL.ArgumentCollection
- uid: SuperOffice.Data.SQL.ReturnFieldsCollection
  commentId: T:SuperOffice.Data.SQL.ReturnFieldsCollection
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.ReturnFieldsCollection.html
  name: ReturnFieldsCollection
  nameWithType: ReturnFieldsCollection
  fullName: SuperOffice.Data.SQL.ReturnFieldsCollection
- uid: SuperOffice.Data.Dialect.Dialect.ToSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ToSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ToSql_SuperOffice_Data_SQL_Argument_
  name: ToSql
  nameWithType: Dialect.ToSql
  fullName: SuperOffice.Data.Dialect.Dialect.ToSql
- uid: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetOrderbyCollationHint
  name: GetOrderbyCollationHint
  nameWithType: Dialect.GetOrderbyCollationHint
  fullName: SuperOffice.Data.Dialect.Dialect.GetOrderbyCollationHint
- uid: SuperOffice.Data.SQL.OrderBy
  commentId: T:SuperOffice.Data.SQL.OrderBy
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.OrderBy.html
  name: OrderBy
  nameWithType: OrderBy
  fullName: SuperOffice.Data.SQL.OrderBy
- uid: SuperOffice.Data.SQL.GroupBy
  commentId: T:SuperOffice.Data.SQL.GroupBy
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.GroupBy.html
  name: GroupBy
  nameWithType: GroupBy
  fullName: SuperOffice.Data.SQL.GroupBy
- uid: SuperOffice.Data.SQL.Count
  commentId: T:SuperOffice.Data.SQL.Count
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Count.html
  name: Count
  nameWithType: Count
  fullName: SuperOffice.Data.SQL.Count
- uid: SuperOffice.Data.SQL.CountAll
  commentId: T:SuperOffice.Data.SQL.CountAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.CountAll.html
  name: CountAll
  nameWithType: CountAll
  fullName: SuperOffice.Data.SQL.CountAll
- uid: SuperOffice.Data.SQL.IsNull
  commentId: T:SuperOffice.Data.SQL.IsNull
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.IsNull.html
  name: IsNull
  nameWithType: IsNull
  fullName: SuperOffice.Data.SQL.IsNull
- uid: SuperOffice.Data.SQL.IsNotNull
  commentId: T:SuperOffice.Data.SQL.IsNotNull
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.IsNotNull.html
  name: IsNotNull
  nameWithType: IsNotNull
  fullName: SuperOffice.Data.SQL.IsNotNull
- uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.EncodedArraySearch
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_EncodedArraySearch_SuperOffice_Data_SQL_Argument_SuperOffice_Data_SQL_Argument___SuperOffice_Data_Dialect_Dialect_EncodedArraySearchType_SuperOffice_Data_Dialect_Dialect_FulltextEncodedSearch_
  name: EncodedArraySearch
  nameWithType: Dialect.EncodedArraySearch
  fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearch
- uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
  commentId: T:SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
  parent: SuperOffice.Data.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html
  name: Dialect.EncodedArraySearchType
  nameWithType: Dialect.EncodedArraySearchType
  fullName: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: .
  - uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    name: EncodedArraySearchType
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType.html
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: .
  - uid: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType
    name: EncodedArraySearchType
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.EncodedArraySearchType.html
- uid: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
  commentId: T:SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
  parent: SuperOffice.Data.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html
  name: Dialect.FulltextEncodedSearch
  nameWithType: Dialect.FulltextEncodedSearch
  fullName: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
  spec.csharp:
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: .
  - uid: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    name: FulltextEncodedSearch
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch.html
  spec.vb:
  - uid: SuperOffice.Data.Dialect.Dialect
    name: Dialect
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.html
  - name: .
  - uid: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch
    name: FulltextEncodedSearch
    isExternal: true
    href: SuperOffice.Data.Dialect.Dialect.FulltextEncodedSearch.html
- uid: SuperOffice.Data.SQL.In
  commentId: T:SuperOffice.Data.SQL.In
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.In.html
  name: In
  nameWithType: In
  fullName: SuperOffice.Data.SQL.In
- uid: SuperOffice.Data.SQL.HasAny
  commentId: T:SuperOffice.Data.SQL.HasAny
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasAny.html
  name: HasAny
  nameWithType: HasAny
  fullName: SuperOffice.Data.SQL.HasAny
- uid: SuperOffice.Data.SQL.HasAll
  commentId: T:SuperOffice.Data.SQL.HasAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasAll.html
  name: HasAll
  nameWithType: HasAll
  fullName: SuperOffice.Data.SQL.HasAll
- uid: SuperOffice.Data.SQL.MissingAny
  commentId: T:SuperOffice.Data.SQL.MissingAny
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.MissingAny.html
  name: MissingAny
  nameWithType: MissingAny
  fullName: SuperOffice.Data.SQL.MissingAny
- uid: SuperOffice.Data.SQL.MissingAll
  commentId: T:SuperOffice.Data.SQL.MissingAll
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.MissingAll.html
  name: MissingAll
  nameWithType: MissingAll
  fullName: SuperOffice.Data.SQL.MissingAll
- uid: SuperOffice.Data.SQL.NotIn
  commentId: T:SuperOffice.Data.SQL.NotIn
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.NotIn.html
  name: NotIn
  nameWithType: NotIn
  fullName: SuperOffice.Data.SQL.NotIn
- uid: SuperOffice.Data.SQL.Between
  commentId: T:SuperOffice.Data.SQL.Between
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Between.html
  name: Between
  nameWithType: Between
  fullName: SuperOffice.Data.SQL.Between
- uid: SuperOffice.Data.SQL.NotBetween
  commentId: T:SuperOffice.Data.SQL.NotBetween
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.NotBetween.html
  name: NotBetween
  nameWithType: NotBetween
  fullName: SuperOffice.Data.SQL.NotBetween
- uid: SuperOffice.Data.SQL.Like
  commentId: T:SuperOffice.Data.SQL.Like
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Like.html
  name: Like
  nameWithType: Like
  fullName: SuperOffice.Data.SQL.Like
- uid: SuperOffice.Data.SQL.TableInfo
  commentId: T:SuperOffice.Data.SQL.TableInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.TableInfo.html
  name: TableInfo
  nameWithType: TableInfo
  fullName: SuperOffice.Data.SQL.TableInfo
- uid: SuperOffice.Data.SQL.NotLike
  commentId: T:SuperOffice.Data.SQL.NotLike
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.NotLike.html
  name: NotLike
  nameWithType: NotLike
  fullName: SuperOffice.Data.SQL.NotLike
- uid: SuperOffice.Data.SQL.LessThan
  commentId: T:SuperOffice.Data.SQL.LessThan
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.LessThan.html
  name: LessThan
  nameWithType: LessThan
  fullName: SuperOffice.Data.SQL.LessThan
- uid: SuperOffice.Data.SQL.GreaterThan
  commentId: T:SuperOffice.Data.SQL.GreaterThan
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.GreaterThan.html
  name: GreaterThan
  nameWithType: GreaterThan
  fullName: SuperOffice.Data.SQL.GreaterThan
- uid: SuperOffice.Data.SQL.LessThanOrEqual
  commentId: T:SuperOffice.Data.SQL.LessThanOrEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.LessThanOrEqual.html
  name: LessThanOrEqual
  nameWithType: LessThanOrEqual
  fullName: SuperOffice.Data.SQL.LessThanOrEqual
- uid: SuperOffice.Data.SQL.GreaterThanOrEqual
  commentId: T:SuperOffice.Data.SQL.GreaterThanOrEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.GreaterThanOrEqual.html
  name: GreaterThanOrEqual
  nameWithType: GreaterThanOrEqual
  fullName: SuperOffice.Data.SQL.GreaterThanOrEqual
- uid: SuperOffice.Data.SQL.Equal
  commentId: T:SuperOffice.Data.SQL.Equal
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Equal.html
  name: Equal
  nameWithType: Equal
  fullName: SuperOffice.Data.SQL.Equal
- uid: SuperOffice.Data.SQL.HasFlag
  commentId: T:SuperOffice.Data.SQL.HasFlag
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasFlag.html
  name: HasFlag
  nameWithType: HasFlag
  fullName: SuperOffice.Data.SQL.HasFlag
- uid: SuperOffice.Data.SQL.HasNoFlag
  commentId: T:SuperOffice.Data.SQL.HasNoFlag
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.HasNoFlag.html
  name: HasNoFlag
  nameWithType: HasNoFlag
  fullName: SuperOffice.Data.SQL.HasNoFlag
- uid: SuperOffice.Data.SQL.UnEqual
  commentId: T:SuperOffice.Data.SQL.UnEqual
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.UnEqual.html
  name: UnEqual
  nameWithType: UnEqual
  fullName: SuperOffice.Data.SQL.UnEqual
- uid: SuperOffice.Data.SQL.And
  commentId: T:SuperOffice.Data.SQL.And
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.And.html
  name: And
  nameWithType: And
  fullName: SuperOffice.Data.SQL.And
- uid: SuperOffice.Data.SQL.Or
  commentId: T:SuperOffice.Data.SQL.Or
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Or.html
  name: Or
  nameWithType: Or
  fullName: SuperOffice.Data.SQL.Or
- uid: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ParseMathematicalArguments_SuperOffice_Data_SQL_MathematicalExpression_System_String_
  name: ParseMathematicalArguments
  nameWithType: Dialect.ParseMathematicalArguments
  fullName: SuperOffice.Data.Dialect.Dialect.ParseMathematicalArguments
- uid: SuperOffice.Data.SQL.MathematicalExpression
  commentId: T:SuperOffice.Data.SQL.MathematicalExpression
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.MathematicalExpression.html
  name: MathematicalExpression
  nameWithType: MathematicalExpression
  fullName: SuperOffice.Data.SQL.MathematicalExpression
- uid: SuperOffice.Data.SQL.Greatest
  commentId: T:SuperOffice.Data.SQL.Greatest
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Greatest.html
  name: Greatest
  nameWithType: Greatest
  fullName: SuperOffice.Data.SQL.Greatest
- uid: SuperOffice.Data.SQL.Add
  commentId: T:SuperOffice.Data.SQL.Add
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Add.html
  name: Add
  nameWithType: Add
  fullName: SuperOffice.Data.SQL.Add
- uid: SuperOffice.Data.SQL.Subtract
  commentId: T:SuperOffice.Data.SQL.Subtract
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Subtract.html
  name: Subtract
  nameWithType: Subtract
  fullName: SuperOffice.Data.SQL.Subtract
- uid: SuperOffice.Data.SQL.Multiply
  commentId: T:SuperOffice.Data.SQL.Multiply
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Multiply.html
  name: Multiply
  nameWithType: Multiply
  fullName: SuperOffice.Data.SQL.Multiply
- uid: SuperOffice.Data.SQL.Divide
  commentId: T:SuperOffice.Data.SQL.Divide
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Divide.html
  name: Divide
  nameWithType: Divide
  fullName: SuperOffice.Data.SQL.Divide
- uid: SuperOffice.Data.SQL.LeftOuterJoin
  commentId: T:SuperOffice.Data.SQL.LeftOuterJoin
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.LeftOuterJoin.html
  name: LeftOuterJoin
  nameWithType: LeftOuterJoin
  fullName: SuperOffice.Data.SQL.LeftOuterJoin
- uid: SuperOffice.Data.SQL.RightOuterJoin
  commentId: T:SuperOffice.Data.SQL.RightOuterJoin
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.RightOuterJoin.html
  name: RightOuterJoin
  nameWithType: RightOuterJoin
  fullName: SuperOffice.Data.SQL.RightOuterJoin
- uid: SuperOffice.Data.SQL.InnerJoin
  commentId: T:SuperOffice.Data.SQL.InnerJoin
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.InnerJoin.html
  name: InnerJoin
  nameWithType: InnerJoin
  fullName: SuperOffice.Data.SQL.InnerJoin
- uid: SuperOffice.Data.Dialect.Dialect.ParseJoinClause*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ParseJoinClause
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ParseJoinClause_SuperOffice_Data_SQL_JoinRestriction_
  name: ParseJoinClause
  nameWithType: Dialect.ParseJoinClause
  fullName: SuperOffice.Data.Dialect.Dialect.ParseJoinClause
- uid: SuperOffice.Data.SQL.JoinRestriction
  commentId: T:SuperOffice.Data.SQL.JoinRestriction
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.JoinRestriction.html
  name: JoinRestriction
  nameWithType: JoinRestriction
  fullName: SuperOffice.Data.SQL.JoinRestriction
- uid: SuperOffice.Data.SQL.Distinct
  commentId: T:SuperOffice.Data.SQL.Distinct
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Distinct.html
  name: Distinct
  nameWithType: Distinct
  fullName: SuperOffice.Data.SQL.Distinct
- uid: SuperOffice.Data.SQL.Alias
  commentId: T:SuperOffice.Data.SQL.Alias
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Alias.html
  name: Alias
  nameWithType: Alias
  fullName: SuperOffice.Data.SQL.Alias
- uid: SuperOffice.Data.SQL.FieldTypeConvert
  commentId: T:SuperOffice.Data.SQL.FieldTypeConvert
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.FieldTypeConvert.html
  name: FieldTypeConvert
  nameWithType: FieldTypeConvert
  fullName: SuperOffice.Data.SQL.FieldTypeConvert
- uid: SuperOffice.Data.SQL.JsonValue
  commentId: T:SuperOffice.Data.SQL.JsonValue
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.JsonValue.html
  name: JsonValue
  nameWithType: JsonValue
  fullName: SuperOffice.Data.SQL.JsonValue
- uid: SuperOffice.Data.SQL.Upper
  commentId: T:SuperOffice.Data.SQL.Upper
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Upper.html
  name: Upper
  nameWithType: Upper
  fullName: SuperOffice.Data.SQL.Upper
- uid: SuperOffice.Data.SQL.Lower
  commentId: T:SuperOffice.Data.SQL.Lower
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Lower.html
  name: Lower
  nameWithType: Lower
  fullName: SuperOffice.Data.SQL.Lower
- uid: SuperOffice.Data.SQL.Trim
  commentId: T:SuperOffice.Data.SQL.Trim
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Trim.html
  name: Trim
  nameWithType: Trim
  fullName: SuperOffice.Data.SQL.Trim
- uid: SuperOffice.Data.SQL.Soundex
  commentId: T:SuperOffice.Data.SQL.Soundex
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Soundex.html
  name: Soundex
  nameWithType: Soundex
  fullName: SuperOffice.Data.SQL.Soundex
- uid: SuperOffice.Data.SQL.Year
  commentId: T:SuperOffice.Data.SQL.Year
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Year.html
  name: Year
  nameWithType: Year
  fullName: SuperOffice.Data.SQL.Year
- uid: SuperOffice.Data.SQL.Month
  commentId: T:SuperOffice.Data.SQL.Month
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Month.html
  name: Month
  nameWithType: Month
  fullName: SuperOffice.Data.SQL.Month
- uid: SuperOffice.Data.SQL.Day
  commentId: T:SuperOffice.Data.SQL.Day
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Day.html
  name: Day
  nameWithType: Day
  fullName: SuperOffice.Data.SQL.Day
- uid: SuperOffice.Data.SQL.Hour
  commentId: T:SuperOffice.Data.SQL.Hour
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Hour.html
  name: Hour
  nameWithType: Hour
  fullName: SuperOffice.Data.SQL.Hour
- uid: SuperOffice.Data.SQL.Minute
  commentId: T:SuperOffice.Data.SQL.Minute
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Minute.html
  name: Minute
  nameWithType: Minute
  fullName: SuperOffice.Data.SQL.Minute
- uid: SuperOffice.Data.SQL.Second
  commentId: T:SuperOffice.Data.SQL.Second
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Second.html
  name: Second
  nameWithType: Second
  fullName: SuperOffice.Data.SQL.Second
- uid: SuperOffice.Data.SQL.Sum
  commentId: T:SuperOffice.Data.SQL.Sum
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Sum.html
  name: Sum
  nameWithType: Sum
  fullName: SuperOffice.Data.SQL.Sum
- uid: SuperOffice.Data.SQL.Max
  commentId: T:SuperOffice.Data.SQL.Max
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Max.html
  name: Max
  nameWithType: Max
  fullName: SuperOffice.Data.SQL.Max
- uid: SuperOffice.Data.SQL.Min
  commentId: T:SuperOffice.Data.SQL.Min
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.Min.html
  name: Min
  nameWithType: Min
  fullName: SuperOffice.Data.SQL.Min
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ConvertToDbParameterType_System_Object_SuperOffice_Data_FieldDataType_
  name: ConvertToDbParameterType
  nameWithType: Dialect.ConvertToDbParameterType
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbParameterType
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  href: SuperOffice.Exceptions.SoIllegalOperationException.html
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ConvertToDbType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ConvertToDbType_System_Object_SuperOffice_Data_FieldDataType_
  name: ConvertToDbType
  nameWithType: Dialect.ConvertToDbType
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbType
- uid: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ConvertFromDbType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ConvertFromDbType_System_Object_SuperOffice_Data_FieldDataType_
  name: ConvertFromDbType
  nameWithType: Dialect.ConvertFromDbType
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertFromDbType
- uid: SuperOffice.Data.Dialect.Dialect.ConvertToDbString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ConvertToDbString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ConvertToDbString_System_String_
  name: ConvertToDbString
  nameWithType: Dialect.ConvertToDbString
  fullName: SuperOffice.Data.Dialect.Dialect.ConvertToDbString
- uid: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_TimeTUtc2DateTime_System_Int32_
  name: TimeTUtc2DateTime
  nameWithType: Dialect.TimeTUtc2DateTime
  fullName: SuperOffice.Data.Dialect.Dialect.TimeTUtc2DateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_TimeTLocal2DateTime_System_Int32_
  name: TimeTLocal2DateTime
  nameWithType: Dialect.TimeTLocal2DateTime
  fullName: SuperOffice.Data.Dialect.Dialect.TimeTLocal2DateTime
- uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DateTime2TimeTUtc_System_DateTime_
  name: DateTime2TimeTUtc
  nameWithType: Dialect.DateTime2TimeTUtc
  fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTUtc
- uid: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DateTime2TimeTLocal_System_DateTime_
  name: DateTime2TimeTLocal
  nameWithType: Dialect.DateTime2TimeTLocal
  fullName: SuperOffice.Data.Dialect.Dialect.DateTime2TimeTLocal
- uid: SuperOffice.Data.Dialect.Dialect.SelectSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.SelectSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_SelectSql_SuperOffice_Data_SQL_PrivateSelect_
  name: SelectSql
  nameWithType: Dialect.SelectSql
  fullName: SuperOffice.Data.Dialect.Dialect.SelectSql
- uid: SuperOffice.Data.Dialect.Dialect.ComposeSelect*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ComposeSelect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ComposeSelect_System_String_System_String_System_String_System_String_System_Text_StringBuilder_SuperOffice_Data_SQL_PrivateSelect_
  name: ComposeSelect
  nameWithType: Dialect.ComposeSelect
  fullName: SuperOffice.Data.Dialect.Dialect.ComposeSelect
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: SuperOffice.Data.Dialect.Dialect.InsertSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.InsertSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_InsertSql_SuperOffice_Data_SQL_PrivateSave_
  name: InsertSql
  nameWithType: Dialect.InsertSql
  fullName: SuperOffice.Data.Dialect.Dialect.InsertSql
- uid: SuperOffice.Data.SQL.PrivateSave
  commentId: T:SuperOffice.Data.SQL.PrivateSave
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.PrivateSave.html
  name: PrivateSave
  nameWithType: PrivateSave
  fullName: SuperOffice.Data.SQL.PrivateSave
- uid: SuperOffice.Data.Dialect.Dialect.UpdateSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.UpdateSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_UpdateSql_SuperOffice_Data_SQL_PrivateSave_
  name: UpdateSql
  nameWithType: Dialect.UpdateSql
  fullName: SuperOffice.Data.Dialect.Dialect.UpdateSql
- uid: SuperOffice.Data.Dialect.Dialect.DeleteSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DeleteSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DeleteSql_SuperOffice_Data_SQL_PrivateSave_
  name: DeleteSql
  nameWithType: Dialect.DeleteSql
  fullName: SuperOffice.Data.Dialect.Dialect.DeleteSql
- uid: SuperOffice.Data.Dialect.Dialect.UnionSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.UnionSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_UnionSql_SuperOffice_Data_SQL_TableExpression_
  name: UnionSql
  nameWithType: Dialect.UnionSql
  fullName: SuperOffice.Data.Dialect.Dialect.UnionSql
- uid: SuperOffice.Data.SQL.TableExpression
  commentId: T:SuperOffice.Data.SQL.TableExpression
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.TableExpression.html
  name: TableExpression
  nameWithType: TableExpression
  fullName: SuperOffice.Data.SQL.TableExpression
- uid: SuperOffice.Data.Dialect.Dialect.PreParseUnion*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.PreParseUnion
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_PreParseUnion_SuperOffice_Data_SQL_TableExpression_
  name: PreParseUnion
  nameWithType: Dialect.PreParseUnion
  fullName: SuperOffice.Data.Dialect.Dialect.PreParseUnion
- uid: SuperOffice.Data.Dialect.Dialect.DifferenceSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DifferenceSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DifferenceSql_SuperOffice_Data_SQL_TableExpression_
  name: DifferenceSql
  nameWithType: Dialect.DifferenceSql
  fullName: SuperOffice.Data.Dialect.Dialect.DifferenceSql
- uid: SuperOffice.Data.Dialect.Dialect.GenerateSql*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GenerateSql
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GenerateSql_SuperOffice_Data_SQL_SqlCommand_
  name: GenerateSql
  nameWithType: Dialect.GenerateSql
  fullName: SuperOffice.Data.Dialect.Dialect.GenerateSql
- uid: SuperOffice.Data.SoSqlParameter
  commentId: T:SuperOffice.Data.SoSqlParameter
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.SoSqlParameter.html
  name: SoSqlParameter
  nameWithType: SoSqlParameter
  fullName: SuperOffice.Data.SoSqlParameter
- uid: SuperOffice.Data.Dialect.Dialect.FieldIsClob*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.FieldIsClob
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_FieldIsClob_SuperOffice_Data_SQL_Argument_
  name: FieldIsClob
  nameWithType: Dialect.FieldIsClob
  fullName: SuperOffice.Data.Dialect.Dialect.FieldIsClob
- uid: SuperOffice.Data.Dialect.Dialect.FieldIsString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.FieldIsString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_FieldIsString_SuperOffice_Data_SQL_Argument_
  name: FieldIsString
  nameWithType: Dialect.FieldIsString
  fullName: SuperOffice.Data.Dialect.Dialect.FieldIsString
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetName*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetName
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetName_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetName
  nameWithType: Dialect.DataReaderGetName
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetName
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetDataTypeName_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetDataTypeName
  nameWithType: Dialect.DataReaderGetDataTypeName
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDataTypeName
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetFieldType_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetFieldType
  nameWithType: Dialect.DataReaderGetFieldType
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFieldType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetValue
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetValue_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetValue
  nameWithType: Dialect.DataReaderGetValue
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetValue
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetOrdinal_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_String_
  name: DataReaderGetOrdinal
  nameWithType: Dialect.DataReaderGetOrdinal
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetOrdinal
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetItem
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetItem_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetItem
  nameWithType: Dialect.DataReaderGetItem
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetItem
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetNullValue_SuperOffice_Data_SoDataReader_System_Int32_
  name: DataReaderGetNullValue
  nameWithType: Dialect.DataReaderGetNullValue
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetNullValue
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetBoolean_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetBoolean
  nameWithType: Dialect.DataReaderGetBoolean
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBoolean
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetByte
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetByte_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetByte
  nameWithType: Dialect.DataReaderGetByte
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetByte
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetBytes_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_System_Int64_System_Byte___System_Int32_System_Int32_
  name: DataReaderGetBytes
  nameWithType: Dialect.DataReaderGetBytes
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetBytes
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetChar
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetChar_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetChar
  nameWithType: Dialect.DataReaderGetChar
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetChars
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetChars_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_System_Int64_System_Char___System_Int32_System_Int32_
  name: DataReaderGetChars
  nameWithType: Dialect.DataReaderGetChars
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetChars
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetGuid_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetGuid
  nameWithType: Dialect.DataReaderGetGuid
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetGuid
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetInt16_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetInt16
  nameWithType: Dialect.DataReaderGetInt16
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt16
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetInt32_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetInt32
  nameWithType: Dialect.DataReaderGetInt32
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetInt32Array_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetInt32Array
  nameWithType: Dialect.DataReaderGetInt32Array
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt32Array
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetInt64_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetInt64
  nameWithType: Dialect.DataReaderGetInt64
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetInt64
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetFloat_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetFloat
  nameWithType: Dialect.DataReaderGetFloat
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetDouble_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetDouble
  nameWithType: Dialect.DataReaderGetDouble
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetString_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetString
  nameWithType: Dialect.DataReaderGetString
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetString
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetDecimal_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetDecimal
  nameWithType: Dialect.DataReaderGetDecimal
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDecimal
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: SuperOffice.Data.Dialect.Dialect.LockReader*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.LockReader
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_LockReader__1_SuperOffice_Data_SoDataReader_System_Func___0__
  name: LockReader
  nameWithType: Dialect.LockReader
  fullName: SuperOffice.Data.Dialect.Dialect.LockReader
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetDateTime_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetDateTime
  nameWithType: Dialect.DataReaderGetDateTime
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetDateTime
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderGetData*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderGetData
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderGetData_SuperOffice_Data_SoDataReader_System_Data_IDataReader_System_Int32_
  name: DataReaderGetData
  nameWithType: Dialect.DataReaderGetData
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderGetData
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderIsDBNullAsync_SuperOffice_Data_SoDataReader_System_Data_Common_DbDataReader_System_Int32_System_Threading_CancellationToken_
  name: DataReaderIsDBNullAsync
  nameWithType: Dialect.DataReaderIsDBNullAsync
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNullAsync
- uid: System.Data.Common.DbDataReader
  commentId: T:System.Data.Common.DbDataReader
  parent: System.Data.Common
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.common.dbdatareader
  name: DbDataReader
  nameWithType: DbDataReader
  fullName: System.Data.Common.DbDataReader
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Data.Common
  commentId: N:System.Data.Common
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Data.Common
  nameWithType: System.Data.Common
  fullName: System.Data.Common
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  - name: .
  - uid: System.Data.Common
    name: Common
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Data
    name: Data
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data
  - name: .
  - uid: System.Data.Common
    name: Common
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.data.common
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: SuperOffice.Data.Dialect.Dialect.IntToSingleWord*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.IntToSingleWord
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_IntToSingleWord_System_Int32_
  name: IntToSingleWord
  nameWithType: Dialect.IntToSingleWord
  fullName: SuperOffice.Data.Dialect.Dialect.IntToSingleWord
- uid: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.IntArrayToWordString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_IntArrayToWordString_System_Int32___
  name: IntArrayToWordString
  nameWithType: Dialect.IntArrayToWordString
  fullName: SuperOffice.Data.Dialect.Dialect.IntArrayToWordString
- uid: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.IntFromSingleWord
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_IntFromSingleWord_System_String_
  name: IntFromSingleWord
  nameWithType: Dialect.IntFromSingleWord
  fullName: SuperOffice.Data.Dialect.Dialect.IntFromSingleWord
- uid: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_IntArrayFromWordString_System_String_
  name: IntArrayFromWordString
  nameWithType: Dialect.IntArrayFromWordString
  fullName: SuperOffice.Data.Dialect.Dialect.IntArrayFromWordString
- uid: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetIsolationLevel
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetIsolationLevel_System_Data_IsolationLevel_
  name: GetIsolationLevel
  nameWithType: Dialect.GetIsolationLevel
  fullName: SuperOffice.Data.Dialect.Dialect.GetIsolationLevel
- uid: System.Data.IsolationLevel
  commentId: T:System.Data.IsolationLevel
  parent: System.Data
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.data.isolationlevel
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_GetDefaultTransaction_SuperOffice_Data_SoConnection_SuperOffice_Data_SQL_SqlCommand_
  name: GetDefaultTransaction
  nameWithType: Dialect.GetDefaultTransaction
  fullName: SuperOffice.Data.Dialect.Dialect.GetDefaultTransaction
- uid: SuperOffice.Data.SoConnection
  commentId: T:SuperOffice.Data.SoConnection
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.SoConnection.html
  name: SoConnection
  nameWithType: SoConnection
  fullName: SuperOffice.Data.SoConnection
- uid: SuperOffice.Data.SoTransaction
  commentId: T:SuperOffice.Data.SoTransaction
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.SoTransaction.html
  name: SoTransaction
  nameWithType: SoTransaction
  fullName: SuperOffice.Data.SoTransaction
- uid: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DataReaderIsDBNull_SuperOffice_Data_SoDataReader_System_Data_Common_DbDataReader_System_Int32_
  name: DataReaderIsDBNull
  nameWithType: Dialect.DataReaderIsDBNull
  fullName: SuperOffice.Data.Dialect.Dialect.DataReaderIsDBNull
- uid: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_CaseSensitiveDatabase
  name: CaseSensitiveDatabase
  nameWithType: Dialect.CaseSensitiveDatabase
  fullName: SuperOffice.Data.Dialect.Dialect.CaseSensitiveDatabase
- uid: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_BlockUpperInOrderBy
  name: BlockUpperInOrderBy
  nameWithType: Dialect.BlockUpperInOrderBy
  fullName: SuperOffice.Data.Dialect.Dialect.BlockUpperInOrderBy
- uid: SuperOffice.Data.Dialect.Dialect.MaxInSize*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.MaxInSize
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_MaxInSize
  name: MaxInSize
  nameWithType: Dialect.MaxInSize
  fullName: SuperOffice.Data.Dialect.Dialect.MaxInSize
- uid: SuperOffice.Data.Dialect.Dialect.Tables*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.Tables
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_Tables
  name: Tables
  nameWithType: Dialect.Tables
  fullName: SuperOffice.Data.Dialect.Dialect.Tables
- uid: SuperOffice.Data.Dialect.Dialect.ReturnDBFields*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ReturnDBFields
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ReturnDBFields
  name: ReturnDBFields
  nameWithType: Dialect.ReturnDBFields
  fullName: SuperOffice.Data.Dialect.Dialect.ReturnDBFields
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_HasAliasOnDelete
  name: HasAliasOnDelete
  nameWithType: Dialect.HasAliasOnDelete
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  commentId: P:SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
  parent: SuperOffice.Data.Dialect.Dialect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_HasAliasOnDelete
  name: HasAliasOnDelete
  nameWithType: Dialect.HasAliasOnDelete
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnDelete
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_HasAliasOnInsert
  name: HasAliasOnInsert
  nameWithType: Dialect.HasAliasOnInsert
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnInsert
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_HasAliasOnUpdate
  name: HasAliasOnUpdate
  nameWithType: Dialect.HasAliasOnUpdate
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnUpdate
- uid: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_HasAliasOnSelect
  name: HasAliasOnSelect
  nameWithType: Dialect.HasAliasOnSelect
  fullName: SuperOffice.Data.Dialect.Dialect.HasAliasOnSelect
- uid: SuperOffice.Data.Dialect.Dialect.CurrentSqlType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.CurrentSqlType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_CurrentSqlType
  name: CurrentSqlType
  nameWithType: Dialect.CurrentSqlType
  fullName: SuperOffice.Data.Dialect.Dialect.CurrentSqlType
- uid: SuperOffice.Data.SQL.SqlType
  commentId: T:SuperOffice.Data.SQL.SqlType
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.SqlType.html
  name: SqlType
  nameWithType: SqlType
  fullName: SuperOffice.Data.SQL.SqlType
- uid: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_CurrentOuterSqlType
  name: CurrentOuterSqlType
  nameWithType: Dialect.CurrentOuterSqlType
  fullName: SuperOffice.Data.Dialect.Dialect.CurrentOuterSqlType
- uid: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_ReturnFieldsIndexer
  name: ReturnFieldsIndexer
  nameWithType: Dialect.ReturnFieldsIndexer
  fullName: SuperOffice.Data.Dialect.Dialect.ReturnFieldsIndexer
- uid: SuperOffice.Data.SQL.ReturnFieldsIndexer
  commentId: T:SuperOffice.Data.SQL.ReturnFieldsIndexer
  parent: SuperOffice.Data.SQL
  isExternal: true
  href: SuperOffice.Data.SQL.ReturnFieldsIndexer.html
  name: ReturnFieldsIndexer
  nameWithType: ReturnFieldsIndexer
  fullName: SuperOffice.Data.SQL.ReturnFieldsIndexer
- uid: SuperOffice.Data.Dialect.Dialect.VarcharType*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.VarcharType
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_VarcharType
  name: VarcharType
  nameWithType: Dialect.VarcharType
  fullName: SuperOffice.Data.Dialect.Dialect.VarcharType
- uid: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString*
  commentId: Overload:SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
  isExternal: true
  href: SuperOffice.Data.Dialect.Dialect.html#SuperOffice_Data_Dialect_Dialect_DefaultConnectionString
  name: DefaultConnectionString
  nameWithType: Dialect.DefaultConnectionString
  fullName: SuperOffice.Data.Dialect.Dialect.DefaultConnectionString
