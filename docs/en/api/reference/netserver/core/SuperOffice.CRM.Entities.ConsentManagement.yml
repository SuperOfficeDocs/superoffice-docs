### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.ConsentManagement
  commentId: T:SuperOffice.CRM.Entities.ConsentManagement
  id: ConsentManagement
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync(System.Int32,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  - SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: ConsentManagement
  nameWithType: ConsentManagement
  fullName: SuperOffice.CRM.Entities.ConsentManagement
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: 'public static class ConsentManagement : Object'
    content.vb: >-
      Public Module ConsentManagement
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  id: GetConsentInfosAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: GetConsentInfosAsync(Int32, CancellationToken)
  nameWithType: ConsentManagement.GetConsentInfosAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<ConsentInfo[]> GetConsentInfosAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ConsentInfo[]}
    content.vb: Public Shared Function GetConsentInfosAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentInfo())
  overload: SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync(System.Int32,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync(System.Int32,System.Threading.CancellationToken)
  id: GetStoreConsentInfoAsync(System.Int32,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: GetStoreConsentInfoAsync(Int32, CancellationToken)
  nameWithType: ConsentManagement.GetStoreConsentInfoAsync(Int32, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<ConsentInfo[]> GetStoreConsentInfoAsync(int personId, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ConsentInfo[]}
    content.vb: Public Shared Function GetStoreConsentInfoAsync(personId As Integer, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentInfo())
  overload: SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: SetConsentAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: SetConsentAsync(Int32, String, String, String, String, CancellationToken)
  nameWithType: ConsentManagement.SetConsentAsync(Int32, String, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task SetConsentAsync(int personId, string purposeKey, string sourceKey, string legalBaseKey, string comment, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: purposeKey
      type: System.String
    - id: sourceKey
      type: System.String
    - id: legalBaseKey
      type: System.String
    - id: comment
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SetConsentAsync(personId As Integer, purposeKey As String, sourceKey As String, legalBaseKey As String, comment As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  id: GetConsentRowAsync(System.Int32,System.String,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: GetConsentRowAsync(Int32, String, String, String, String, CancellationToken)
  nameWithType: ConsentManagement.GetConsentRowAsync(Int32, String, String, String, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32, System.String, System.String, System.String, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<ConsentPersonRow> GetConsentRowAsync(int personId, string purposeKey, string sourceKey, string legalBaseKey, string comment, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: purposeKey
      type: System.String
    - id: sourceKey
      type: System.String
    - id: legalBaseKey
      type: System.String
    - id: comment
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ConsentPersonRow}
    content.vb: Public Shared Function GetConsentRowAsync(personId As Integer, purposeKey As String, sourceKey As String, legalBaseKey As String, comment As String, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentPersonRow)
  overload: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: SetConsentAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: SetConsentAsync(Int32, Int32, Int32, Int32, String, CancellationToken)
  nameWithType: ConsentManagement.SetConsentAsync(Int32, Int32, Int32, Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync(System.Int32, System.Int32, System.Int32, System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task SetConsentAsync(int personId, int consentPurposeId, int consentSourceId, int legalBaseId, string comment, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: consentPurposeId
      type: System.Int32
    - id: consentSourceId
      type: System.Int32
    - id: legalBaseId
      type: System.Int32
    - id: comment
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SetConsentAsync(personId As Integer, consentPurposeId As Integer, consentSourceId As Integer, legalBaseId As Integer, comment As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  id: GetConsentRowAsync(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: GetConsentRowAsync(Int32, Int32, Int32, Int32, String, CancellationToken)
  nameWithType: ConsentManagement.GetConsentRowAsync(Int32, Int32, Int32, Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync(System.Int32, System.Int32, System.Int32, System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<ConsentPersonRow> GetConsentRowAsync(int personId, int consentPurposeId, int consentSourceId, int legalBaseId, string comment, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: consentPurposeId
      type: System.Int32
    - id: consentSourceId
      type: System.Int32
    - id: legalBaseId
      type: System.Int32
    - id: comment
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ConsentPersonRow}
    content.vb: Public Shared Function GetConsentRowAsync(personId As Integer, consentPurposeId As Integer, consentSourceId As Integer, legalBaseId As Integer, comment As String, cancellationToken As CancellationToken = Nothing) As Task(Of ConsentPersonRow)
  overload: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: RemoveConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: RemoveConsentAsync(Int32, String, CancellationToken)
  nameWithType: ConsentManagement.RemoveConsentAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task RemoveConsentAsync(int personId, string purposeKey, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: purposeKey
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function RemoveConsentAsync(personId As Integer, purposeKey As String, cancellationToken As CancellationToken = Nothing) As Task
  overload: SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  id: HasConsentAsync(System.Int32,System.String,System.Threading.CancellationToken)
  parent: SuperOffice.CRM.Entities.ConsentManagement
  langs:
  - csharp
  - vb
  name: HasConsentAsync(Int32, String, CancellationToken)
  nameWithType: ConsentManagement.HasConsentAsync(Int32, String, CancellationToken)
  fullName: SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync(System.Int32, System.String, System.Threading.CancellationToken)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static Task<bool> HasConsentAsync(int personId, string purposeKey, CancellationToken cancellationToken = null)
    parameters:
    - id: personId
      type: System.Int32
    - id: purposeKey
      type: System.String
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Shared Function HasConsentAsync(personId As Integer, purposeKey As String, cancellationToken As CancellationToken = Nothing) As Task(Of Boolean)
  overload: SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync
  isExternal: true
  name: GetConsentInfosAsync
  nameWithType: ConsentManagement.GetConsentInfosAsync
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetConsentInfosAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.CancellationToken
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ConsentInfo[]}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Entities.ConsentInfo[]}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentInfo[]>
  nameWithType: Task<ConsentInfo[]>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Entities.ConsentInfo[]>
  nameWithType.vb: Task(Of ConsentInfo())
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Entities.ConsentInfo())
  name.vb: Task(Of ConsentInfo())
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Entities.ConsentInfo
    name: ConsentInfo
    nameWithType: ConsentInfo
    fullName: SuperOffice.CRM.Entities.ConsentInfo
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Entities.ConsentInfo
    name: ConsentInfo
    nameWithType: ConsentInfo
    fullName: SuperOffice.CRM.Entities.ConsentInfo
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: System.Threading.Tasks.Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: System.Threading.Tasks.Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync
  isExternal: true
  name: GetStoreConsentInfoAsync
  nameWithType: ConsentManagement.GetStoreConsentInfoAsync
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetStoreConsentInfoAsync
- uid: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync
  isExternal: true
  name: SetConsentAsync
  nameWithType: ConsentManagement.SetConsentAsync
  fullName: SuperOffice.CRM.Entities.ConsentManagement.SetConsentAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Threading.Tasks.Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync
  isExternal: true
  name: GetConsentRowAsync
  nameWithType: ConsentManagement.GetConsentRowAsync
  fullName: SuperOffice.CRM.Entities.ConsentManagement.GetConsentRowAsync
- uid: System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ConsentPersonRow}
  commentId: '!:System.Threading.Tasks.Task{SuperOffice.CRM.Rows.ConsentPersonRow}'
  definition: System.Threading.Tasks.Task`1
  name: Task<ConsentPersonRow>
  nameWithType: Task<ConsentPersonRow>
  fullName: System.Threading.Tasks.Task<SuperOffice.CRM.Rows.ConsentPersonRow>
  nameWithType.vb: Task(Of ConsentPersonRow)
  fullName.vb: System.Threading.Tasks.Task(Of SuperOffice.CRM.Rows.ConsentPersonRow)
  name.vb: Task(Of ConsentPersonRow)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SuperOffice.CRM.Rows.ConsentPersonRow
    name: ConsentPersonRow
    nameWithType: ConsentPersonRow
    fullName: SuperOffice.CRM.Rows.ConsentPersonRow
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SuperOffice.CRM.Rows.ConsentPersonRow
    name: ConsentPersonRow
    nameWithType: ConsentPersonRow
    fullName: SuperOffice.CRM.Rows.ConsentPersonRow
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync
  isExternal: true
  name: RemoveConsentAsync
  nameWithType: ConsentManagement.RemoveConsentAsync
  fullName: SuperOffice.CRM.Entities.ConsentManagement.RemoveConsentAsync
- uid: SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync
  isExternal: true
  name: HasConsentAsync
  nameWithType: ConsentManagement.HasConsentAsync
  fullName: SuperOffice.CRM.Entities.ConsentManagement.HasConsentAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: '!:System.Threading.Tasks.Task{System.Boolean}'
  definition: System.Threading.Tasks.Task`1
  name: Task<Boolean>
  nameWithType: Task<Boolean>
  fullName: System.Threading.Tasks.Task<System.Boolean>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of System.Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
