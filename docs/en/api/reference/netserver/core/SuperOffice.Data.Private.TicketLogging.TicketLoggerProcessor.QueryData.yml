### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  commentId: T:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  id: TicketLoggerProcessor.QueryData
  parent: SuperOffice.Data.Private.TicketLogging
  children:
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.#ctor
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.AdditionalInfo
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.FieldData
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.IsMessageLog
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.MessageId
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.QueryType
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.TicketId
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString
  langs:
  - csharp
  - vb
  name: TicketLoggerProcessor.QueryData
  nameWithType: TicketLoggerProcessor.QueryData
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  summary: "\nContains information regarding query that changed the ticket\n"
  syntax:
    content: 'public class QueryData : Object'
    content.vb: >-
      Public Class QueryData
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.EnumUtil.MapEnums``2
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  - SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.TicketId
  commentId: F:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.TicketId
  id: TicketId
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: TicketId
  nameWithType: TicketLoggerProcessor.QueryData.TicketId
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.TicketId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public int TicketId
    return:
      type: System.Int32
    content.vb: Public TicketId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.MessageId
  commentId: F:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.MessageId
  id: MessageId
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: MessageId
  nameWithType: TicketLoggerProcessor.QueryData.MessageId
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.MessageId
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public int MessageId
    return:
      type: System.Int32
    content.vb: Public MessageId As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.IsMessageLog
  commentId: F:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.IsMessageLog
  id: IsMessageLog
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: IsMessageLog
  nameWithType: TicketLoggerProcessor.QueryData.IsMessageLog
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.IsMessageLog
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public bool IsMessageLog
    return:
      type: System.Boolean
    content.vb: Public IsMessageLog As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.QueryType
  commentId: F:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.QueryType
  id: QueryType
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: QueryType
  nameWithType: TicketLoggerProcessor.QueryData.QueryType
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.QueryType
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public SqlType QueryType
    return:
      type: SuperOffice.Data.SQL.SqlType
    content.vb: Public QueryType As SqlType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.FieldData
  commentId: F:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.FieldData
  id: FieldData
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: FieldData
  nameWithType: TicketLoggerProcessor.QueryData.FieldData
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.FieldData
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public Dictionary<string, TicketLoggerProcessor.OldAndNew> FieldData
    return:
      type: System.Collections.Generic.Dictionary{System.String,SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew}
    content.vb: Public FieldData As Dictionary(Of String, TicketLoggerProcessor.OldAndNew)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.AdditionalInfo
  commentId: F:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.AdditionalInfo
  id: AdditionalInfo
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: AdditionalInfo
  nameWithType: TicketLoggerProcessor.QueryData.AdditionalInfo
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.AdditionalInfo
  type: Field
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public Dictionary<string, object> AdditionalInfo
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public AdditionalInfo As Dictionary(Of String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString
  commentId: M:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString
  id: ToString
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TicketLoggerProcessor.QueryData.ToString()
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.#ctor
  commentId: M:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.#ctor
  id: '#ctor'
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: QueryData()
  nameWithType: TicketLoggerProcessor.QueryData.QueryData()
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.QueryData()
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public QueryData()
    content.vb: Public Sub New
  overload: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId
  commentId: P:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId
  id: PrimaryId
  parent: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
  langs:
  - csharp
  - vb
  name: PrimaryId
  nameWithType: TicketLoggerProcessor.QueryData.PrimaryId
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.Private.TicketLogging
  syntax:
    content: public int PrimaryId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PrimaryId As Integer
  overload: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: SuperOffice.Data.Private.TicketLogging
  commentId: N:SuperOffice.Data.Private.TicketLogging
  isExternal: true
  name: SuperOffice.Data.Private.TicketLogging
  nameWithType: SuperOffice.Data.Private.TicketLogging
  fullName: SuperOffice.Data.Private.TicketLogging
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<TicketLoggerProcessor.QueryData, To>()
  nameWithType: EnumUtil.MapEnums<TicketLoggerProcessor.QueryData, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of TicketLoggerProcessor.QueryData, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To)()
  name.vb: MapEnums(Of TicketLoggerProcessor.QueryData, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<TicketLoggerProcessor.QueryData, To>
    nameWithType: EnumUtil.MapEnums<TicketLoggerProcessor.QueryData, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of TicketLoggerProcessor.QueryData, To)
    nameWithType: EnumUtil.MapEnums(Of TicketLoggerProcessor.QueryData, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  name: AssignByReflection<TicketLoggerProcessor.QueryData>(TicketLoggerProcessor.QueryData)
  nameWithType: ObjectExtensions.AssignByReflection<TicketLoggerProcessor.QueryData>(TicketLoggerProcessor.QueryData)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData>(SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of TicketLoggerProcessor.QueryData)(TicketLoggerProcessor.QueryData)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)(SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)
  name.vb: AssignByReflection(Of TicketLoggerProcessor.QueryData)(TicketLoggerProcessor.QueryData)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection<TicketLoggerProcessor.QueryData>
    nameWithType: ObjectExtensions.AssignByReflection<TicketLoggerProcessor.QueryData>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
    name: TicketLoggerProcessor.QueryData
    nameWithType: TicketLoggerProcessor.QueryData
    fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0)
    name: AssignByReflection(Of TicketLoggerProcessor.QueryData)
    nameWithType: ObjectExtensions.AssignByReflection(Of TicketLoggerProcessor.QueryData)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
    name: TicketLoggerProcessor.QueryData
    nameWithType: TicketLoggerProcessor.QueryData
    fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  name: GraphCopy<TicketLoggerProcessor.QueryData>()
  nameWithType: ObjectExtensions.GraphCopy<TicketLoggerProcessor.QueryData>()
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData>()
  nameWithType.vb: ObjectExtensions.GraphCopy(Of TicketLoggerProcessor.QueryData)()
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)()
  name.vb: GraphCopy(Of TicketLoggerProcessor.QueryData)()
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy<TicketLoggerProcessor.QueryData>
    nameWithType: ObjectExtensions.GraphCopy<TicketLoggerProcessor.QueryData>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1
    name: GraphCopy(Of TicketLoggerProcessor.QueryData)
    nameWithType: ObjectExtensions.GraphCopy(Of TicketLoggerProcessor.QueryData)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<TicketLoggerProcessor.QueryData, To>()
  nameWithType: Converters.MapEnums<TicketLoggerProcessor.QueryData, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To>()
  nameWithType.vb: Converters.MapEnums(Of TicketLoggerProcessor.QueryData, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To)()
  name.vb: MapEnums(Of TicketLoggerProcessor.QueryData, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<TicketLoggerProcessor.QueryData, To>
    nameWithType: Converters.MapEnums<TicketLoggerProcessor.QueryData, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of TicketLoggerProcessor.QueryData, To)
    nameWithType: Converters.MapEnums(Of TicketLoggerProcessor.QueryData, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection<T>
    nameWithType: ObjectExtensions.AssignByReflection<T>
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection(Of T)
    nameWithType: ObjectExtensions.AssignByReflection(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy<T>
    nameWithType: ObjectExtensions.GraphCopy<T>
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy(Of T)
    nameWithType: ObjectExtensions.GraphCopy(Of T)
    fullName: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Data.SQL.SqlType
  commentId: T:SuperOffice.Data.SQL.SqlType
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: SqlType
  nameWithType: SqlType
  fullName: SuperOffice.Data.SQL.SqlType
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Collections.Generic.Dictionary{System.String,SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, TicketLoggerProcessor.OldAndNew>
  nameWithType: Dictionary<String, TicketLoggerProcessor.OldAndNew>
  fullName: System.Collections.Generic.Dictionary<System.String, SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew>
  nameWithType.vb: Dictionary(Of String, TicketLoggerProcessor.OldAndNew)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew)
  name.vb: Dictionary(Of String, TicketLoggerProcessor.OldAndNew)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew
    name: TicketLoggerProcessor.OldAndNew
    nameWithType: TicketLoggerProcessor.OldAndNew
    fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew
    name: TicketLoggerProcessor.OldAndNew
    nameWithType: TicketLoggerProcessor.OldAndNew
    fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.OldAndNew
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: System.Collections.Generic.Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: System.Collections.Generic.Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: '!:System.Collections.Generic.Dictionary{System.String,System.Object}'
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString*
  commentId: Overload:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString
  isExternal: true
  name: ToString
  nameWithType: TicketLoggerProcessor.QueryData.ToString
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.#ctor*
  commentId: Overload:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.#ctor
  isExternal: true
  name: QueryData
  nameWithType: TicketLoggerProcessor.QueryData.QueryData
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.QueryData
- uid: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId*
  commentId: Overload:SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId
  isExternal: true
  name: PrimaryId
  nameWithType: TicketLoggerProcessor.QueryData.PrimaryId
  fullName: SuperOffice.Data.Private.TicketLogging.TicketLoggerProcessor.QueryData.PrimaryId
