### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto
  commentId: T:SuperOffice.Security.Cryptography.So3Des112Crypto
  id: So3Des112Crypto
  parent: SuperOffice.Security.Cryptography
  children:
  - SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor(System.Byte[])
  - SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor(System.String)
  - SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt(System.Byte[])
  - SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[])
  - SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[],System.Boolean)
  langs:
  - csharp
  - vb
  name: So3Des112Crypto
  nameWithType: So3Des112Crypto
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto
  type: Class
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Cryptography
  summary: "\nWrapper for Triple DES \n"
  syntax:
    content: public class So3Des112Crypto
    content.vb: Public Class So3Des112Crypto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.Cryptography.So3Des112Crypto.EnumUtil.MapEnums``2
  - SuperOffice.Security.Cryptography.So3Des112Crypto.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor(System.String)
  commentId: M:SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.Security.Cryptography.So3Des112Crypto
  langs:
  - csharp
  - vb
  name: So3Des112Crypto(String)
  nameWithType: So3Des112Crypto.So3Des112Crypto(String)
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.So3Des112Crypto(System.String)
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Cryptography
  summary: "\nDefault constructor taking the DbTag in the format it is in the database.\n"
  syntax:
    content: public So3Des112Crypto(string dbTagString)
    parameters:
    - id: dbTagString
      type: System.String
      description: DbTag as formatted in the database.
    content.vb: Public Sub New(dbTagString As String)
  overload: SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor(System.Byte[])
  commentId: M:SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: SuperOffice.Security.Cryptography.So3Des112Crypto
  langs:
  - csharp
  - vb
  name: So3Des112Crypto(Byte[])
  nameWithType: So3Des112Crypto.So3Des112Crypto(Byte[])
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.So3Des112Crypto(System.Byte[])
  type: Constructor
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Cryptography
  summary: "\nDefault constructor taking the DbTag as a byte array.\n"
  syntax:
    content: public So3Des112Crypto(byte[] dbTag)
    parameters:
    - id: dbTag
      type: System.Byte[]
      description: DbTag as a byte array
    content.vb: Public Sub New(dbTag As Byte())
  overload: SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor*
  nameWithType.vb: So3Des112Crypto.So3Des112Crypto(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Security.Cryptography.So3Des112Crypto.So3Des112Crypto(System.Byte())
  name.vb: So3Des112Crypto(Byte())
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[],System.Boolean)
  commentId: M:SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[],System.Boolean)
  id: Encrypt(System.Byte[],System.Boolean)
  parent: SuperOffice.Security.Cryptography.So3Des112Crypto
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[], Boolean)
  nameWithType: So3Des112Crypto.Encrypt(Byte[], Boolean)
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[], System.Boolean)
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Cryptography
  summary: "\nEncrypt data symmetrically using the provided DbTag\n"
  syntax:
    content: >-
      [Obsolete("Use Encrypt with Central DbTab instead of shipping the DbTag with the encrypted data", false)]

      public byte[] Encrypt(byte[] buffer, bool bIncludeDbTag)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: Buffer to encrypt.
    - id: bIncludeDbTag
      type: System.Boolean
      description: True to include the DbTag hidden inside the encrypted data so it can be decrypted with a different DbTag.
    return:
      type: System.Byte[]
      description: Encrypted buffer
    content.vb: >-
      <Obsolete("Use Encrypt with Central DbTab instead of shipping the DbTag with the encrypted data", False)>

      Public Function Encrypt(buffer As Byte(), bIncludeDbTag As Boolean) As Byte()
  overload: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use Encrypt with Central DbTab instead of shipping the DbTag with the encrypted data
    - type: System.Boolean
      value: false
  nameWithType.vb: So3Des112Crypto.Encrypt(Byte(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte(), System.Boolean)
  name.vb: Encrypt(Byte(), Boolean)
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[])
  commentId: M:SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[])
  id: Encrypt(System.Byte[])
  parent: SuperOffice.Security.Cryptography.So3Des112Crypto
  langs:
  - csharp
  - vb
  name: Encrypt(Byte[])
  nameWithType: So3Des112Crypto.Encrypt(Byte[])
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Cryptography
  summary: "\nEncrypt data symmetrically using the provided DbTag\n"
  syntax:
    content: public byte[] Encrypt(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: Buffer to encrypt.
    return:
      type: System.Byte[]
      description: Encrypted buffer
    content.vb: Public Function Encrypt(buffer As Byte()) As Byte()
  overload: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt*
  nameWithType.vb: So3Des112Crypto.Encrypt(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte())
  name.vb: Encrypt(Byte())
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt(System.Byte[])
  commentId: M:SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt(System.Byte[])
  id: Decrypt(System.Byte[])
  parent: SuperOffice.Security.Cryptography.So3Des112Crypto
  langs:
  - csharp
  - vb
  name: Decrypt(Byte[])
  nameWithType: So3Des112Crypto.Decrypt(Byte[])
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt(System.Byte[])
  type: Method
  source:
    path: SoCore
    isExternal: true
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Cryptography
  summary: "\nDecrypt data encrypted with the <xref href=\"SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt(System.Byte%5b%5d%2cSystem.Boolean)\" data-throw-if-not-resolved=\"false\"></xref> method.\n"
  syntax:
    content: public byte[] Decrypt(byte[] buffer)
    parameters:
    - id: buffer
      type: System.Byte[]
      description: Buffer to decrypt.
    return:
      type: System.Byte[]
      description: Decrypted buffer.
    content.vb: Public Function Decrypt(buffer As Byte()) As Byte()
  overload: SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt*
  nameWithType.vb: So3Des112Crypto.Decrypt(Byte())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt(System.Byte())
  name.vb: Decrypt(Byte())
references:
- uid: SuperOffice.Security.Cryptography
  commentId: N:SuperOffice.Security.Cryptography
  isExternal: true
  name: SuperOffice.Security.Cryptography
  nameWithType: SuperOffice.Security.Cryptography
  fullName: SuperOffice.Security.Cryptography
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<So3Des112Crypto, To>()
  nameWithType: EnumUtil.MapEnums<So3Des112Crypto, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Cryptography.So3Des112Crypto, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of So3Des112Crypto, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Cryptography.So3Des112Crypto, To)()
  name.vb: MapEnums(Of So3Des112Crypto, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<So3Des112Crypto, To>
    nameWithType: EnumUtil.MapEnums<So3Des112Crypto, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Security.Cryptography.So3Des112Crypto, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of So3Des112Crypto, To)
    nameWithType: EnumUtil.MapEnums(Of So3Des112Crypto, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Security.Cryptography.So3Des112Crypto, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<So3Des112Crypto, To>()
  nameWithType: Converters.MapEnums<So3Des112Crypto, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Cryptography.So3Des112Crypto, To>()
  nameWithType.vb: Converters.MapEnums(Of So3Des112Crypto, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Cryptography.So3Des112Crypto, To)()
  name.vb: MapEnums(Of So3Des112Crypto, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<So3Des112Crypto, To>
    nameWithType: Converters.MapEnums<So3Des112Crypto, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Cryptography.So3Des112Crypto, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of So3Des112Crypto, To)
    nameWithType: Converters.MapEnums(Of So3Des112Crypto, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Cryptography.So3Des112Crypto, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor*
  commentId: Overload:SuperOffice.Security.Cryptography.So3Des112Crypto.#ctor
  isExternal: true
  name: So3Des112Crypto
  nameWithType: So3Des112Crypto.So3Des112Crypto
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.So3Des112Crypto
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt*
  commentId: Overload:SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt
  isExternal: true
  name: Encrypt
  nameWithType: So3Des112Crypto.Encrypt
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.Encrypt
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt*
  commentId: Overload:SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt
  isExternal: true
  name: Decrypt
  nameWithType: So3Des112Crypto.Decrypt
  fullName: SuperOffice.Security.Cryptography.So3Des112Crypto.Decrypt
