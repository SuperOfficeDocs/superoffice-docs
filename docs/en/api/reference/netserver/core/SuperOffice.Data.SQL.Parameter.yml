### YamlMime:ManagedReference
items:
- uid: SuperOffice.Data.SQL.Parameter
  commentId: T:SuperOffice.Data.SQL.Parameter
  id: Parameter
  parent: SuperOffice.Data.SQL
  children:
  - SuperOffice.Data.SQL.Parameter.#ctor(System.DateTime)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.DateTime,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.DBNull)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.DBNull,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Double)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Double,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Int32)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Int32,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.IO.Stream)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Object)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Object,SuperOffice.Data.FieldDataType)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Object,SuperOffice.Data.FieldDataType,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.Object,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.String)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.String,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.UInt32)
  - SuperOffice.Data.SQL.Parameter.#ctor(System.UInt32,System.Boolean)
  - SuperOffice.Data.SQL.Parameter.Clone
  - SuperOffice.Data.SQL.Parameter.CopyTo(System.Data.IDbDataParameter)
  - SuperOffice.Data.SQL.Parameter.GetMainField
  - SuperOffice.Data.SQL.Parameter.Param
  - SuperOffice.Data.SQL.Parameter.ParameterName
  - SuperOffice.Data.SQL.Parameter.ParameterNameInSql
  - SuperOffice.Data.SQL.Parameter.ToString
  - SuperOffice.Data.SQL.Parameter.UseSqlParameter
  - SuperOffice.Data.SQL.Parameter.Value
  langs:
  - csharp
  - vb
  name: Parameter
  nameWithType: Parameter
  fullName: SuperOffice.Data.SQL.Parameter
  type: Class
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nThe Parameter class, representing a parameter kind of Argument. A parameter has a concrete value,\nwhich can be one of a number of possible types, such as an int or a string.\n"
  syntax:
    content: 'public sealed class Parameter : Argument, ICloneable'
    content.vb: >-
      Public NotInheritable Class Parameter
          Inherits Argument
          Implements ICloneable
  inheritance:
  - System.Object
  - SuperOffice.Data.SQL.QueryElement
  - SuperOffice.Data.SQL.Argument
  implements:
  - System.ICloneable
  inheritedMembers:
  - SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Like(System.String)
  - SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  - SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.IsNull
  - SuperOffice.Data.SQL.Argument.IsNotNull
  - SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[])
  - SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[],System.Boolean)
  - SuperOffice.Data.SQL.Argument.GetSubElements
  - SuperOffice.Data.SQL.Argument.Alias
  - SuperOffice.Data.SQL.Argument.DataType
  - SuperOffice.Data.SQL.Argument.Size
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Data.SQL.Parameter.EnumUtil.MapEnums``2
  - SuperOffice.Data.SQL.Parameter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Int32)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Int32)
  nameWithType: Parameter.Parameter(Int32)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Int32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(int parameter)
    parameters:
    - id: parameter
      type: System.Int32
      description: int value to be stored
    content.vb: Public Sub New(parameter As Integer)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Int32,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Int32, Boolean)
  nameWithType: Parameter.Parameter(Int32, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Int32, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(int parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.Int32
      description: int value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As Integer, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.UInt32)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.UInt32)
  id: '#ctor(System.UInt32)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(UInt32)
  nameWithType: Parameter.Parameter(UInt32)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.UInt32)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(uint parameter)
    parameters:
    - id: parameter
      type: System.UInt32
      description: uint value to be stored
    content.vb: Public Sub New(parameter As UInteger)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.UInt32,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.UInt32,System.Boolean)
  id: '#ctor(System.UInt32,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(UInt32, Boolean)
  nameWithType: Parameter.Parameter(UInt32, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.UInt32, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(uint parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.UInt32
      description: uint value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As UInteger, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.String)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(String)
  nameWithType: Parameter.Parameter(String)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.String)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(string parameter)
    parameters:
    - id: parameter
      type: System.String
      description: string value to be stored
    content.vb: Public Sub New(parameter As String)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.String,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(String, Boolean)
  nameWithType: Parameter.Parameter(String, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.String, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(string parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.String
      description: string value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As String, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.DateTime)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.DateTime)
  id: '#ctor(System.DateTime)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(DateTime)
  nameWithType: Parameter.Parameter(DateTime)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.DateTime)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nThe actual data type, such as dbDateTimeLocal, will be overridden by the Compare class once the parameter is combined\nwith a field. Compare will transfer the type from the field to the parameter part of the comparison.\n"
  syntax:
    content: public Parameter(DateTime parameter)
    parameters:
    - id: parameter
      type: System.DateTime
      description: DateTime value to be stored
    content.vb: Public Sub New(parameter As Date)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.DateTime,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.DateTime,System.Boolean)
  id: '#ctor(System.DateTime,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(DateTime, Boolean)
  nameWithType: Parameter.Parameter(DateTime, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.DateTime, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nThe actual data type, such as dbDateTimeLocal, will be overridden by the Compare class once the parameter is combined\nwith a field. Compare will transfer the type from the field to the parameter part of the comparison.\n"
  syntax:
    content: public Parameter(DateTime parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.DateTime
      description: DateTime value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As Date, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Object,SuperOffice.Data.FieldDataType)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Object,SuperOffice.Data.FieldDataType)
  id: '#ctor(System.Object,SuperOffice.Data.FieldDataType)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Object, FieldDataType)
  nameWithType: Parameter.Parameter(Object, FieldDataType)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Object, SuperOffice.Data.FieldDataType)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(object parameter, FieldDataType dataType)
    parameters:
    - id: parameter
      type: System.Object
      description: Object value to be stored
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: Data type of object
    content.vb: Public Sub New(parameter As Object, dataType As FieldDataType)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Object,SuperOffice.Data.FieldDataType,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Object,SuperOffice.Data.FieldDataType,System.Boolean)
  id: '#ctor(System.Object,SuperOffice.Data.FieldDataType,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Object, FieldDataType, Boolean)
  nameWithType: Parameter.Parameter(Object, FieldDataType, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Object, SuperOffice.Data.FieldDataType, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(object parameter, FieldDataType dataType, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Object value to be stored
    - id: dataType
      type: SuperOffice.Data.FieldDataType
      description: Data type of object
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As Object, dataType As FieldDataType, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Double)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Double)
  nameWithType: Parameter.Parameter(Double)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Double)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(double parameter)
    parameters:
    - id: parameter
      type: System.Double
      description: double value to be stored
    content.vb: Public Sub New(parameter As Double)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Double,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Double,System.Boolean)
  id: '#ctor(System.Double,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Double, Boolean)
  nameWithType: Parameter.Parameter(Double, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Double, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(double parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.Double
      description: double value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As Double, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Object)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Object)
  nameWithType: Parameter.Parameter(Object)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Object)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: The object passed in has to be an enumerator type
  syntax:
    content: public Parameter(object parameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Enumerator value to be stored
    content.vb: Public Sub New(parameter As Object)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  exceptions:
  - type: SuperOffice.Exceptions.SoInvalidArgumentException
    commentId: T:SuperOffice.Exceptions.SoInvalidArgumentException
    description: Thrown if parameter is not an enumerator.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.Object,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.Object,System.Boolean)
  id: '#ctor(System.Object,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Object, Boolean)
  nameWithType: Parameter.Parameter(Object, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.Object, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: The object passed in has to be an enumerator type
  syntax:
    content: public Parameter(object parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.Object
      description: Enumerator value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As Object, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  exceptions:
  - type: SuperOffice.Exceptions.SoInvalidArgumentException
    commentId: T:SuperOffice.Exceptions.SoInvalidArgumentException
    description: Thrown if parameter is not an enumerator.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.DBNull)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.DBNull)
  id: '#ctor(System.DBNull)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(DBNull)
  nameWithType: Parameter.Parameter(DBNull)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.DBNull)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(DBNull parameter)
    parameters:
    - id: parameter
      type: System.DBNull
      description: NULL value to be stored
    content.vb: Public Sub New(parameter As DBNull)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.DBNull,System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.DBNull,System.Boolean)
  id: '#ctor(System.DBNull,System.Boolean)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(DBNull, Boolean)
  nameWithType: Parameter.Parameter(DBNull, Boolean)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.DBNull, System.Boolean)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  syntax:
    content: public Parameter(DBNull parameter, bool useSqlParameter)
    parameters:
    - id: parameter
      type: System.DBNull
      description: NULL value to be stored
    - id: useSqlParameter
      type: System.Boolean
      description: If true, a sql parameter will be added for this parameter when creating the query, otherwise the value will be added directly to the query
    content.vb: Public Sub New(parameter As DBNull, useSqlParameter As Boolean)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.#ctor(System.IO.Stream)
  commentId: M:SuperOffice.Data.SQL.Parameter.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Parameter(Stream)
  nameWithType: Parameter.Parameter(Stream)
  fullName: SuperOffice.Data.SQL.Parameter.Parameter(System.IO.Stream)
  type: Constructor
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nInitializes a new instance of the <xref href=\"SuperOffice.Data.SQL.Parameter\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  remarks: "\nThe stream will actually be accessed / read only when the SQL statement executes\n"
  syntax:
    content: public Parameter(Stream parameter)
    parameters:
    - id: parameter
      type: System.IO.Stream
      description: Stream to be stored
    content.vb: Public Sub New(parameter As Stream)
  overload: SuperOffice.Data.SQL.Parameter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.CopyTo(System.Data.IDbDataParameter)
  commentId: M:SuperOffice.Data.SQL.Parameter.CopyTo(System.Data.IDbDataParameter)
  id: CopyTo(System.Data.IDbDataParameter)
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: CopyTo(IDbDataParameter)
  nameWithType: Parameter.CopyTo(IDbDataParameter)
  fullName: SuperOffice.Data.SQL.Parameter.CopyTo(System.Data.IDbDataParameter)
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nPopulate an exsisting <xref href=\"System.Data.IDbDataParameter\" data-throw-if-not-resolved=\"false\"></xref> object.\n"
  syntax:
    content: public void CopyTo(IDbDataParameter parameter)
    parameters:
    - id: parameter
      type: System.Data.IDbDataParameter
      description: Object to populate.
    content.vb: Public Sub CopyTo(parameter As IDbDataParameter)
  overload: SuperOffice.Data.SQL.Parameter.CopyTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.Clone
  commentId: M:SuperOffice.Data.SQL.Parameter.Clone
  id: Clone
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Parameter.Clone()
  fullName: SuperOffice.Data.SQL.Parameter.Clone()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nDeep copy of the Parameter object, except for BLOBs.\n"
  remarks: "\nBLOB data objects are not copied, and are instead shared between copies. \nThis can cause trouble if you read one copy and expect the other to be unaffected.\nString parameter values are shared between copies as well, but since strings are immutable \n(read-only) objects, this is not a problem.\n<p></p>\nAll other types of objects/values are copied, as are the names and aliases.\n"
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Clone of parameter
    content.vb: Public Overrides Function Clone As Object
  overridden: SuperOffice.Data.SQL.QueryElement.Clone
  overload: SuperOffice.Data.SQL.Parameter.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.SQL.Parameter.ToString
  commentId: M:SuperOffice.Data.SQL.Parameter.ToString
  id: ToString
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Parameter.ToString()
  fullName: SuperOffice.Data.SQL.Parameter.ToString()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nReturns a <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents the current <xref href=\"System.Object\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: SuperOffice.Data.SQL.Parameter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.SQL.Parameter.GetMainField
  commentId: M:SuperOffice.Data.SQL.Parameter.GetMainField
  id: GetMainField
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: GetMainField()
  nameWithType: Parameter.GetMainField()
  fullName: SuperOffice.Data.SQL.Parameter.GetMainField()
  type: Method
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nThis method returns null.\n"
  syntax:
    content: public override FieldInfo GetMainField()
    return:
      type: SuperOffice.Data.SQL.FieldInfo
      description: return null
    content.vb: Public Overrides Function GetMainField As FieldInfo
  overridden: SuperOffice.Data.SQL.Argument.GetMainField
  overload: SuperOffice.Data.SQL.Parameter.GetMainField*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: SuperOffice.Data.SQL.Parameter.Param
  commentId: P:SuperOffice.Data.SQL.Parameter.Param
  id: Param
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Param
  nameWithType: Parameter.Param
  fullName: SuperOffice.Data.SQL.Parameter.Param
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nGet/Set values for object\n"
  syntax:
    content: >-
      [Obsolete("Use Value", false)]

      public object Param { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <Obsolete("Use Value", False)>

      Public Property Param As Object
  overload: SuperOffice.Data.SQL.Parameter.Param*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use Value
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.Value
  commentId: P:SuperOffice.Data.SQL.Parameter.Value
  id: Value
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Parameter.Value
  fullName: SuperOffice.Data.SQL.Parameter.Value
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nGet/Set values for object\n"
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: SuperOffice.Data.SQL.Parameter.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.ParameterName
  commentId: P:SuperOffice.Data.SQL.Parameter.ParameterName
  id: ParameterName
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: ParameterName
  nameWithType: Parameter.ParameterName
  fullName: SuperOffice.Data.SQL.Parameter.ParameterName
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nName of the parameter in the parameter collection\n"
  syntax:
    content: public string ParameterName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParameterName As String
  overload: SuperOffice.Data.SQL.Parameter.ParameterName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.ParameterNameInSql
  commentId: P:SuperOffice.Data.SQL.Parameter.ParameterNameInSql
  id: ParameterNameInSql
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: ParameterNameInSql
  nameWithType: Parameter.ParameterNameInSql
  fullName: SuperOffice.Data.SQL.Parameter.ParameterNameInSql
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nName of the parameter in the generated sql\n"
  syntax:
    content: public string ParameterNameInSql { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParameterNameInSql As String
  overload: SuperOffice.Data.SQL.Parameter.ParameterNameInSql*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: SuperOffice.Data.SQL.Parameter.UseSqlParameter
  commentId: P:SuperOffice.Data.SQL.Parameter.UseSqlParameter
  id: UseSqlParameter
  parent: SuperOffice.Data.SQL.Parameter
  langs:
  - csharp
  - vb
  name: UseSqlParameter
  nameWithType: Parameter.UseSqlParameter
  fullName: SuperOffice.Data.SQL.Parameter.UseSqlParameter
  type: Property
  source:
    path: SoDataBase
    isExternal: true
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Data.SQL
  summary: "\nIf true, the query for this parameter will use a SQl parameter. if false, no SQL Parameter will be used.\n"
  remarks: "\nDefault value is true\n"
  syntax:
    content: public bool UseSqlParameter { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSqlParameter As Boolean
  overload: SuperOffice.Data.SQL.Parameter.UseSqlParameter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: SuperOffice.Data.SQL
  commentId: N:SuperOffice.Data.SQL
  isExternal: true
  name: SuperOffice.Data.SQL
  nameWithType: SuperOffice.Data.SQL
  fullName: SuperOffice.Data.SQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: SuperOffice.Data.SQL.QueryElement
  commentId: T:SuperOffice.Data.SQL.QueryElement
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: QueryElement
  nameWithType: QueryElement
  fullName: SuperOffice.Data.SQL.QueryElement
- uid: SuperOffice.Data.SQL.Argument
  commentId: T:SuperOffice.Data.SQL.Argument
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: Argument
  nameWithType: Argument
  fullName: SuperOffice.Data.SQL.Argument
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Equal(Argument)
  nameWithType: Argument.Equal(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
    name: Equal
    nameWithType: Argument.Equal
    fullName: SuperOffice.Data.SQL.Argument.Equal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Equal(SuperOffice.Data.SQL.Argument)
    name: Equal
    nameWithType: Argument.Equal
    fullName: SuperOffice.Data.SQL.Argument.Equal
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: UnEqual(Argument)
  nameWithType: Argument.UnEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
    name: UnEqual
    nameWithType: Argument.UnEqual
    fullName: SuperOffice.Data.SQL.Argument.UnEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.UnEqual(SuperOffice.Data.SQL.Argument)
    name: UnEqual
    nameWithType: Argument.UnEqual
    fullName: SuperOffice.Data.SQL.Argument.UnEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: LessThan(Argument)
  nameWithType: Argument.LessThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
    name: LessThan
    nameWithType: Argument.LessThan
    fullName: SuperOffice.Data.SQL.Argument.LessThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.LessThan(SuperOffice.Data.SQL.Argument)
    name: LessThan
    nameWithType: Argument.LessThan
    fullName: SuperOffice.Data.SQL.Argument.LessThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: LessThanOrEqual(Argument)
  nameWithType: Argument.LessThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: LessThanOrEqual
    nameWithType: Argument.LessThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.LessThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: LessThanOrEqual
    nameWithType: Argument.LessThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.LessThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GreaterThan(Argument)
  nameWithType: Argument.GreaterThan(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
    name: GreaterThan
    nameWithType: Argument.GreaterThan
    fullName: SuperOffice.Data.SQL.Argument.GreaterThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThan(SuperOffice.Data.SQL.Argument)
    name: GreaterThan
    nameWithType: Argument.GreaterThan
    fullName: SuperOffice.Data.SQL.Argument.GreaterThan
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GreaterThanOrEqual(Argument)
  nameWithType: Argument.GreaterThanOrEqual(Argument)
  fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: GreaterThanOrEqual
    nameWithType: Argument.GreaterThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual(SuperOffice.Data.SQL.Argument)
    name: GreaterThanOrEqual
    nameWithType: Argument.GreaterThanOrEqual
    fullName: SuperOffice.Data.SQL.Argument.GreaterThanOrEqual
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Like(Argument)
  nameWithType: Argument.Like(Argument)
  fullName: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Like(SuperOffice.Data.SQL.Argument)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Like(System.String)
  commentId: M:SuperOffice.Data.SQL.Argument.Like(System.String)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Like(String)
  nameWithType: Argument.Like(String)
  fullName: SuperOffice.Data.SQL.Argument.Like(System.String)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Like(System.String)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Like(System.String)
    name: Like
    nameWithType: Argument.Like
    fullName: SuperOffice.Data.SQL.Argument.Like
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: NotLike(Argument)
  nameWithType: Argument.NotLike(Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
    name: NotLike
    nameWithType: Argument.NotLike
    fullName: SuperOffice.Data.SQL.Argument.NotLike
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotLike(SuperOffice.Data.SQL.Argument)
    name: NotLike
    nameWithType: Argument.NotLike
    fullName: SuperOffice.Data.SQL.Argument.NotLike
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: NotBetween(Argument, Argument)
  nameWithType: Argument.NotBetween(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: NotBetween
    nameWithType: Argument.NotBetween
    fullName: SuperOffice.Data.SQL.Argument.NotBetween
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotBetween(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: NotBetween
    nameWithType: Argument.NotBetween
    fullName: SuperOffice.Data.SQL.Argument.NotBetween
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  commentId: M:SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Between(Argument, Argument)
  nameWithType: Argument.Between(Argument, Argument)
  fullName: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument, SuperOffice.Data.SQL.Argument)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: Between
    nameWithType: Argument.Between
    fullName: SuperOffice.Data.SQL.Argument.Between
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.Between(SuperOffice.Data.SQL.Argument,SuperOffice.Data.SQL.Argument)
    name: Between
    nameWithType: Argument.Between
    fullName: SuperOffice.Data.SQL.Argument.Between
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: In(Argument[])
  nameWithType: Argument.In(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.In(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument())
  name.vb: In(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
    name: In
    nameWithType: Argument.In
    fullName: SuperOffice.Data.SQL.Argument.In
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.In(SuperOffice.Data.SQL.Argument[])
    name: In
    nameWithType: Argument.In
    fullName: SuperOffice.Data.SQL.Argument.In
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: HasAny(Argument[])
  nameWithType: Argument.HasAny(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAny(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument())
  name.vb: HasAny(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    nameWithType: Argument.HasAny
    fullName: SuperOffice.Data.SQL.Argument.HasAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAny(SuperOffice.Data.SQL.Argument[])
    name: HasAny
    nameWithType: Argument.HasAny
    fullName: SuperOffice.Data.SQL.Argument.HasAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: HasAll(Argument[])
  nameWithType: Argument.HasAll(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.HasAll(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument())
  name.vb: HasAll(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    nameWithType: Argument.HasAll
    fullName: SuperOffice.Data.SQL.Argument.HasAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.HasAll(SuperOffice.Data.SQL.Argument[])
    name: HasAll
    nameWithType: Argument.HasAll
    fullName: SuperOffice.Data.SQL.Argument.HasAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: MissingAny(Argument[])
  nameWithType: Argument.MissingAny(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAny(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument())
  name.vb: MissingAny(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    nameWithType: Argument.MissingAny
    fullName: SuperOffice.Data.SQL.Argument.MissingAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAny(SuperOffice.Data.SQL.Argument[])
    name: MissingAny
    nameWithType: Argument.MissingAny
    fullName: SuperOffice.Data.SQL.Argument.MissingAny
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: MissingAll(Argument[])
  nameWithType: Argument.MissingAll(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.MissingAll(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument())
  name.vb: MissingAll(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    nameWithType: Argument.MissingAll
    fullName: SuperOffice.Data.SQL.Argument.MissingAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.MissingAll(SuperOffice.Data.SQL.Argument[])
    name: MissingAll
    nameWithType: Argument.MissingAll
    fullName: SuperOffice.Data.SQL.Argument.MissingAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.IsNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNull
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: IsNull()
  nameWithType: Argument.IsNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNull()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.IsNull
    name: IsNull
    nameWithType: Argument.IsNull
    fullName: SuperOffice.Data.SQL.Argument.IsNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.IsNull
    name: IsNull
    nameWithType: Argument.IsNull
    fullName: SuperOffice.Data.SQL.Argument.IsNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.IsNotNull
  commentId: M:SuperOffice.Data.SQL.Argument.IsNotNull
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: IsNotNull()
  nameWithType: Argument.IsNotNull()
  fullName: SuperOffice.Data.SQL.Argument.IsNotNull()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.IsNotNull
    name: IsNotNull
    nameWithType: Argument.IsNotNull
    fullName: SuperOffice.Data.SQL.Argument.IsNotNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.IsNotNull
    name: IsNotNull
    nameWithType: Argument.IsNotNull
    fullName: SuperOffice.Data.SQL.Argument.IsNotNull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  commentId: M:SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: NotIn(Argument[])
  nameWithType: Argument.NotIn(Argument[])
  fullName: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
  nameWithType.vb: Argument.NotIn(Argument())
  fullName.vb: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument())
  name.vb: NotIn(Argument())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
    name: NotIn
    nameWithType: Argument.NotIn
    fullName: SuperOffice.Data.SQL.Argument.NotIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.NotIn(SuperOffice.Data.SQL.Argument[])
    name: NotIn
    nameWithType: Argument.NotIn
    fullName: SuperOffice.Data.SQL.Argument.NotIn
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: SuperOffice.Data.SQL.Argument
    name: Argument
    nameWithType: Argument
    fullName: SuperOffice.Data.SQL.Argument
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  parent: SuperOffice.Data.SQL.Argument
  definition: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1({T}[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  parent: SuperOffice.Data.SQL.Argument
  definition: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  name: ToArgumentArray<T>(T[], Boolean)
  nameWithType: Argument.ToArgumentArray<T>(T[], Boolean)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], System.Boolean)
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), System.Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.GetSubElements
  commentId: M:SuperOffice.Data.SQL.Argument.GetSubElements
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GetSubElements()
  nameWithType: Argument.GetSubElements()
  fullName: SuperOffice.Data.SQL.Argument.GetSubElements()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GetSubElements
    name: GetSubElements
    nameWithType: Argument.GetSubElements
    fullName: SuperOffice.Data.SQL.Argument.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GetSubElements
    name: GetSubElements
    nameWithType: Argument.GetSubElements
    fullName: SuperOffice.Data.SQL.Argument.GetSubElements
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.Alias
  commentId: P:SuperOffice.Data.SQL.Argument.Alias
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Alias
  nameWithType: Argument.Alias
  fullName: SuperOffice.Data.SQL.Argument.Alias
- uid: SuperOffice.Data.SQL.Argument.DataType
  commentId: P:SuperOffice.Data.SQL.Argument.DataType
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: DataType
  nameWithType: Argument.DataType
  fullName: SuperOffice.Data.SQL.Argument.DataType
- uid: SuperOffice.Data.SQL.Argument.Size
  commentId: P:SuperOffice.Data.SQL.Argument.Size
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: Size
  nameWithType: Argument.Size
  fullName: SuperOffice.Data.SQL.Argument.Size
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Parameter.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  name: MapEnums<Parameter, To>()
  nameWithType: EnumUtil.MapEnums<Parameter, To>()
  fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Parameter, To>()
  nameWithType.vb: EnumUtil.MapEnums(Of Parameter, To)()
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Parameter, To)()
  name.vb: MapEnums(Of Parameter, To)()
  spec.csharp:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums<Parameter, To>
    nameWithType: EnumUtil.MapEnums<Parameter, To>
    fullName: EnumUtil.MapEnums<SuperOffice.Data.SQL.Parameter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2
    name: MapEnums(Of Parameter, To)
    nameWithType: EnumUtil.MapEnums(Of Parameter, To)
    fullName: EnumUtil.MapEnums(Of SuperOffice.Data.SQL.Parameter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Parameter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  name: MapEnums<Parameter, To>()
  nameWithType: Converters.MapEnums<Parameter, To>()
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Parameter, To>()
  nameWithType.vb: Converters.MapEnums(Of Parameter, To)()
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Parameter, To)()
  name.vb: MapEnums(Of Parameter, To)()
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums<Parameter, To>
    nameWithType: Converters.MapEnums<Parameter, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Data.SQL.Parameter, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
    name: MapEnums(Of Parameter, To)
    nameWithType: Converters.MapEnums(Of Parameter, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Data.SQL.Parameter, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
  isExternal: true
  name: ToArgumentArray<T>(T[])
  nameWithType: Argument.ToArgumentArray<T>(T[])
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[])
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T())
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T())
  name.vb: ToArgumentArray(Of T)(T())
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[])
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  commentId: M:SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
  isExternal: true
  name: ToArgumentArray<T>(T[], Boolean)
  nameWithType: Argument.ToArgumentArray<T>(T[], Boolean)
  fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>(T[], System.Boolean)
  nameWithType.vb: Argument.ToArgumentArray(Of T)(T(), Boolean)
  fullName.vb: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)(T(), System.Boolean)
  name.vb: ToArgumentArray(Of T)(T(), Boolean)
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray<T>
    nameWithType: Argument.ToArgumentArray<T>
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.ToArgumentArray``1(``0[],System.Boolean)
    name: ToArgumentArray(Of T)
    nameWithType: Argument.ToArgumentArray(Of T)
    fullName: SuperOffice.Data.SQL.Argument.ToArgumentArray(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: EnumUtil.MapEnums<From, To>
    fullName: EnumUtil.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: EnumUtil.MapEnums(Of From, To)
    fullName: EnumUtil.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums<From, To>
    nameWithType: Converters.MapEnums<From, To>
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums(Of From, To)
    nameWithType: Converters.MapEnums(Of From, To)
    fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: From
    nameWithType: From
    fullName: From
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
- uid: SuperOffice.Data.SQL.Parameter.#ctor*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.#ctor
  isExternal: true
  name: Parameter
  nameWithType: Parameter.Parameter
  fullName: SuperOffice.Data.SQL.Parameter.Parameter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: SuperOffice.Data.FieldDataType
  commentId: T:SuperOffice.Data.FieldDataType
  parent: SuperOffice.Data
  isExternal: true
  name: FieldDataType
  nameWithType: FieldDataType
  fullName: SuperOffice.Data.FieldDataType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: SuperOffice.Exceptions.SoInvalidArgumentException
  commentId: T:SuperOffice.Exceptions.SoInvalidArgumentException
  isExternal: true
  name: SoInvalidArgumentException
  nameWithType: SoInvalidArgumentException
  fullName: SuperOffice.Exceptions.SoInvalidArgumentException
- uid: System.DBNull
  commentId: T:System.DBNull
  parent: System
  isExternal: true
  name: DBNull
  nameWithType: DBNull
  fullName: System.DBNull
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: SuperOffice.Data.SQL.Parameter.CopyTo*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.CopyTo
  isExternal: true
  name: CopyTo
  nameWithType: Parameter.CopyTo
  fullName: SuperOffice.Data.SQL.Parameter.CopyTo
- uid: System.Data.IDbDataParameter
  isExternal: true
  name: IDbDataParameter
  nameWithType: IDbDataParameter
  fullName: System.Data.IDbDataParameter
- uid: SuperOffice.Data.SQL.QueryElement.Clone
  commentId: M:SuperOffice.Data.SQL.QueryElement.Clone
  parent: SuperOffice.Data.SQL.QueryElement
  isExternal: true
  name: Clone()
  nameWithType: QueryElement.Clone()
  fullName: SuperOffice.Data.SQL.QueryElement.Clone()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.QueryElement.Clone
    name: Clone
    nameWithType: QueryElement.Clone
    fullName: SuperOffice.Data.SQL.QueryElement.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Parameter.Clone*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.Clone
  isExternal: true
  name: Clone
  nameWithType: Parameter.Clone
  fullName: SuperOffice.Data.SQL.Parameter.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Parameter.ToString*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.ToString
  isExternal: true
  name: ToString
  nameWithType: Parameter.ToString
  fullName: SuperOffice.Data.SQL.Parameter.ToString
- uid: SuperOffice.Data.SQL.Argument.GetMainField
  commentId: M:SuperOffice.Data.SQL.Argument.GetMainField
  parent: SuperOffice.Data.SQL.Argument
  isExternal: true
  name: GetMainField()
  nameWithType: Argument.GetMainField()
  fullName: SuperOffice.Data.SQL.Argument.GetMainField()
  spec.csharp:
  - uid: SuperOffice.Data.SQL.Argument.GetMainField
    name: GetMainField
    nameWithType: Argument.GetMainField
    fullName: SuperOffice.Data.SQL.Argument.GetMainField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: SuperOffice.Data.SQL.Argument.GetMainField
    name: GetMainField
    nameWithType: Argument.GetMainField
    fullName: SuperOffice.Data.SQL.Argument.GetMainField
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: SuperOffice.Data.SQL.Parameter.GetMainField*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.GetMainField
  isExternal: true
  name: GetMainField
  nameWithType: Parameter.GetMainField
  fullName: SuperOffice.Data.SQL.Parameter.GetMainField
- uid: SuperOffice.Data.SQL.FieldInfo
  commentId: T:SuperOffice.Data.SQL.FieldInfo
  parent: SuperOffice.Data.SQL
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: SuperOffice.Data.SQL.FieldInfo
- uid: SuperOffice.Data.SQL.Parameter.Param*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.Param
  isExternal: true
  name: Param
  nameWithType: Parameter.Param
  fullName: SuperOffice.Data.SQL.Parameter.Param
- uid: SuperOffice.Data.SQL.Parameter.Value*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.Value
  isExternal: true
  name: Value
  nameWithType: Parameter.Value
  fullName: SuperOffice.Data.SQL.Parameter.Value
- uid: SuperOffice.Data.SQL.Parameter.ParameterName*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.ParameterName
  isExternal: true
  name: ParameterName
  nameWithType: Parameter.ParameterName
  fullName: SuperOffice.Data.SQL.Parameter.ParameterName
- uid: SuperOffice.Data.SQL.Parameter.ParameterNameInSql*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.ParameterNameInSql
  isExternal: true
  name: ParameterNameInSql
  nameWithType: Parameter.ParameterNameInSql
  fullName: SuperOffice.Data.SQL.Parameter.ParameterNameInSql
- uid: SuperOffice.Data.SQL.Parameter.UseSqlParameter*
  commentId: Overload:SuperOffice.Data.SQL.Parameter.UseSqlParameter
  isExternal: true
  name: UseSqlParameter
  nameWithType: Parameter.UseSqlParameter
  fullName: SuperOffice.Data.SQL.Parameter.UseSqlParameter
